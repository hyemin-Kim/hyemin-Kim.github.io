<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>在Hexo博文中添加本地图片的方法（基于Typora编辑器）</title>
    <url>/2020/05/06/Hexo-Local-Pictures/</url>
    <content><![CDATA[<a id="more"></a>




<h3 id="编写博客前-—-进行配置"><a href="#编写博客前-—-进行配置" class="headerlink" title="编写博客前 — 进行配置"></a><strong>编写博客前 — 进行配置</strong></h3><p>配置过程一共分为三个步骤：</p>
<ol>
<li>建立 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹(Asset Floder)</a>，用来保存添加到博文中的本地图片：<ul>
<li>在本地Hexo根目录下的 <code>source</code>文件夹中创建一个名为<code>images</code>的文件夹  </li>
</ul>
</li>
</ol>
<ol start="2">
<li>在Typora中设置图片的相对路径：<ul>
<li>打开Typora的<code>文件 &gt; 偏好设置 &gt; 图像</code>，进行如下设置：  <center><img src="/images/Hexo-Local-Pictures/image-20200506223313787.png" alt="image-20200506223313787" style="zoom:50%;"></center></li>
<li>此时<code>source/images</code>文件夹下会建立一个与所编辑的markdown文档同名的文件夹，md文档中所添加的 <em>本地图片</em> 都将存档与此（即拥有了如下路径：<code>'hexo根目录'/source/images/'md文档名'/'图片名称'）</code>)。（网络图片不会被保存到这里，我也不知道为什么。。)</li>
</ul>
</li>
</ol>
<ol start="3">
<li><p>撰写markdown文档时配置 <em>图片根目录</em> ，使其能够同步到hexo博客中：</p>
<ul>
<li>撰写博文时，先点击Typora菜单栏中的<code>格式 &gt; 图像 &gt; 设置图片根目录</code> , 将根目录配置为<code>'hexo根目录'/source</code>。然后再撰写博文。【注：每篇需要添加本地图片的博文都要先进行此步骤】  </li>
</ul>
</li>
</ol>
<center><img src="/images/Hexo-Local-Pictures/1.png" alt="1" style="zoom:50%;"></center>



<h3 id="编写博客时-—-图片导入方法"><a href="#编写博客时-—-图片导入方法" class="headerlink" title="编写博客时 — 图片导入方法"></a><strong>编写博客时 — 图片导入方法</strong></h3><p>在编写博客时导入本地图片有两种方法：</p>
<ol>
<li><p>将原本存放于其他本地文件夹中的图片直接拖拽到.md文档中的相应位置中去。</p>
<ul>
<li><p>此时图片会自动备份到<code>'hexo根目录'/source/images/'md文档名'</code>文件夹中</p>
</li>
<li><p>.md文档中图片地址的代码会显示成 <em>自动生成的相对路径</em>，即<code>/images/'md文档名'/'图片名称'</code> </p>
</li>
</ul>
</li>
</ol>
<ol start="2">
<li><p>当利用 <em>方法1</em> 插入了至少一张图片时（即<code>'hexo根目录'/source/images/</code>中已经生成与.md文档同名的文件夹时），可以把图片复制到该文件夹内，并在.md文档中<em>利用相对路径</em> 调取图片。</p>
<ul>
<li><p>即先把图片复制到<code>'hexo根目录'/source/images/'md文档名'</code>文件夹中，再在.md文档中想要添加该图片的位置上使用markdown命令：<code>![图片显示名称](/images/'md文档名'/'图片名称')</code> </p>
</li>
<li><p>这里的<code>图片显示名称</code>不必与文件夹中保存的<code>图片名称</code>保持一致</p>
</li>
<li><p>注意：<code>'图片名称'</code>中要记得包含图片格式！（例如：tupian.jpg 或 picture.png 等）  </p>
</li>
</ul>
</li>
</ol>
<p>【注意】当还没有利用 <em>方法1</em> 插入过图片时（即<code>'hexo根目录'/source/images/</code>中还没有与md.文档同名的文件夹时），<strong>不可以自己创建同名文件夹</strong>保存图片。亲测不好使！！（.md文档中可以显示，但是hexo博文中无法显示）</p>
<h3 id="编写博客后—-备份图片结果"><a href="#编写博客后—-备份图片结果" class="headerlink" title="编写博客后— 备份图片结果"></a><strong>编写博客后— 备份图片结果</strong></h3><p>在利用上述方法完成了含有本地图片的markdown博文后，我们的资源文件夹<code>'hexo根目录'/source/images/</code>内最终会显示成什么样子呢？</p>
<ul>
<li>每一篇配置了图片根目录的博文（即【编写博客前】的第3步），都会在<code>'hexo根目录'/source/images/</code>文件夹中有一个与文档名称同名的文件夹<code>'hexo根目录'/source/images/'md文档名'</code></li>
<li>该文件夹中会保存博文编写中曾经添加的<strong>所有本地文件</strong><ul>
<li><strong>所有</strong>的含义是：即使编辑过程中某些本地图片在添加后又被删除了，它们也仍然会保留在文件夹中，即该文件夹会备份你在博文中添加的 <em>所有本地图片历史</em></li>
<li><strong>本地文件</strong>的含义是：这里只会保存插入的本地文件，而不会保存插入的网络文件。尽管在【编写博客前】的第2步配置中，我们也同样勾选了<code>对网络位置的图片应用上述规则</code>。（请原谅我并不知道其中的缘由。。）  </li>
</ul>
</li>
</ul>
<p>就此，在Typora编辑器中编写Hexo博文时，往markdown文档中添加本地图片的方法就介绍完毕啦！快去应用到你的博文中去吧~</p>
<p>本文参考了<a href="https://yinyoupoet.github.io/" target="_blank" rel="noopener">yinyoupoet</a>的<a href="https://yinyoupoet.github.io/2019/09/03/hexo博客中插入图片/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a>  </p>
<p>更多关于Typora中插入图片的内容可以参考<a href="https://support.typora.io/Images/#when-insert-images" target="_blank" rel="noopener">Typora的官方说明</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】Hexo Usage</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>markdown</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 常用语法</title>
    <url>/2020/05/04/Markdown%20%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<font face="Microsoft YaHei">

<h4 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h4><p>​     一级标题： “#” + 空格 + “一级标题”<br>​     二级标题： “##” + 空格 + “二级标题”<br>​     三级标题： “###” + 空格 + “三级标题”<br>​     ……<br>​     以此类推 【最多到6级】</p>
<h4 id="2-换行"><a href="#2-换行" class="headerlink" title="2. 换行"></a>2. 换行</h4><p>​    “内容” 末尾 + 2个空格 </p>
<blockquote>
<p>Hello<br>  World</p>
</blockquote>
<h4 id="3-加粗"><a href="#3-加粗" class="headerlink" title="3. 加粗"></a>3. 加粗</h4><p>​     方法一：“内容”前后加 2 个 * 号（无空格）  </p>
<blockquote>
<p>** “内容” **   ——&gt;   <strong>“内容”</strong>  </p>
</blockquote>
<p>​     方法二： “内容”前后加 2 个下划线（无空格）</p>
<blockquote>
<p>__ “内容” __  ——&gt; <strong>“内容”</strong></p>
</blockquote>
<h4 id="4-斜体"><a href="#4-斜体" class="headerlink" title="4. 斜体"></a>4. 斜体</h4><p>​     方法一：“内容”前后加1个 * 号 （无空格）</p>
<blockquote>
<p><em>“内容”</em></p>
</blockquote>
<p>​     方法二：“内容”前后加1个下划线（无空格）</p>
<blockquote>
<p>_ “内容” _ ——&gt;  <em>“内容”</em></p>
</blockquote>
<h4 id="5-斜体加粗"><a href="#5-斜体加粗" class="headerlink" title="5. 斜体加粗"></a>5. 斜体加粗</h4><p>​    “内容”前后加 3 个 * 号 （无空格）</p>
<blockquote>
<p><strong><em>“内容”</em></strong></p>
</blockquote>
<h4 id="6-删除线"><a href="#6-删除线" class="headerlink" title="6. 删除线"></a>6. 删除线</h4><p>​    “内容”前后加 2 个波浪线（~）</p>
<blockquote>
<p><del>~ “内容” ~</del>  ——&gt;  <del>“内容”</del></p>
</blockquote>
<h4 id="7-高亮"><a href="#7-高亮" class="headerlink" title="7. 高亮"></a>7. 高亮</h4><p>​    “内容”前后加 2 个 = 号</p>
<blockquote>
<p>== “内容” ==  ——&gt;  ==”内容”==</p>
</blockquote>
<h4 id="8-上标-amp-下标"><a href="#8-上标-amp-下标" class="headerlink" title="8. 上标 &amp; 下标"></a>8. 上标 &amp; 下标</h4><ul>
<li><p>上标：“内容”前后加 1 个 ^ 号</p>
</li>
<li><p>下标：“内容”前后加 1 个 ~ 号</p>
</li>
</ul>
<blockquote>
<p>我是 ^ 上标 ^  ——&gt;  我是^上标^  </p>
<p>我是 ^ 下标 ^  ——&gt; 我是<del>下标</del></p>
</blockquote>
<h4 id="9-引用"><a href="#9-引用" class="headerlink" title="9. 引用"></a>9. 引用</h4><p>​    “内容”前加 &gt; 号</p>
<blockquote>
<p>“内容”</p>
</blockquote>
<p>​     引用号可叠用，&gt;号越多，级数越低<br>​     例如：可以使用&gt;, &gt;&gt;, &gt;&gt;&gt; 的形式</p>
<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
</blockquote>
</blockquote>
</blockquote>
<h4 id="10-插入链接"><a href="#10-插入链接" class="headerlink" title="10. 插入链接"></a>10. 插入链接</h4><p>​     中括号内输入“显示的文字”，紧接着小括号内输入“网址链接”<br>​    【注意：网站地址需要 http 开头，最好直接复制】</p>
<blockquote>
<p><a href="http://www.baidu.com/" target="_blank" rel="noopener">点我进入百度</a></p>
</blockquote>
<h4 id="11-插入图片"><a href="#11-插入图片" class="headerlink" title="11. 插入图片"></a>11. 插入图片</h4><p>​     感叹号 + 中括号内输入“显示的文字”，紧接着小括号内输入“图片链接”<br>​    【注意：图片链接非网页的网址栏链接，而是右键“复制图片地址”得到的链接】</p>
<blockquote>
<p><img src="http://t9.baidu.com/it/u=1307125826,3433407105&amp;fm=79&amp;app=86&amp;f=JPEG?w=5760&amp;h=3240" alt="图片"></p>
</blockquote>
<h4 id="12-列表"><a href="#12-列表" class="headerlink" title="12.列表"></a>12.列表</h4><h5 id="（1）-有序列表"><a href="#（1）-有序列表" class="headerlink" title="（1） 有序列表"></a>（1） 有序列表</h5><p>​      （序号1+点+空格）+内容+回车<br>​      （序号2+点+空格）+内容+回车<br>​      （序号3+点+空格）+内容+回车</p>
<blockquote>
<ol>
<li>第一行</li>
<li>第二行</li>
<li>第三行</li>
</ol>
</blockquote>
<p>​      【注意】：系统会默认调整有序列表的序列数。即，即使你误输入成了1.，2.，4.，系统也会自动更正为 1.，2.，3.  </p>
<blockquote>
<ol>
<li>第一点</li>
<li>第二点</li>
<li>第四点</li>
</ol>
</blockquote>
<h5 id="（2）无序列表"><a href="#（2）无序列表" class="headerlink" title="（2）无序列表"></a>（2）无序列表</h5><p>​       使用“ + ”加空格+内容<br>​       或者“ - ”加空格+内容<br>​       或者“ * ”加空格+内容<br>​       下一级：前面加 tab</p>
<blockquote>
<ul>
<li><p>第一章</p>
</li>
<li><p>第二章</p>
</li>
<li><p>第三章</p>
<ul>
<li>第一节</li>
</ul>
</li>
</ul>
</blockquote>
<h5 id="（3）任务列表"><a href="#（3）任务列表" class="headerlink" title="（3）任务列表"></a>（3）任务列表</h5><p>​       短横线 + 1 个空格 + 中括号（括号中间带 1 个空格） + 1 个空格 + “内容”</p>
<blockquote>
<ul>
<li><input checked="" disabled="" type="checkbox"> 学习python</li>
<li><input disabled="" type="checkbox"> 学习SQL</li>
</ul>
</blockquote>
<h4 id="13-添加表格"><a href="#13-添加表格" class="headerlink" title="13. 添加表格"></a>13. 添加表格</h4><p>​      竖线作为列分界线，换行竖线中间输入短横线作为行分界线</p>
<table>
<thead>
<tr>
<th>1</th>
<th>2</th>
<th>3</th>
</tr>
</thead>
<tbody><tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
</tbody></table>
<h4 id="14-代码"><a href="#14-代码" class="headerlink" title="14. 代码"></a>14. 代码</h4><p>​      三个 ` 号，再输入所使用的编程语言</p>
 <figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"Python"</span>)  <span class="comment"># python</span></span><br></pre></td></tr></tbody></table></figure>
 <figure class="highlight r"><table><tbody><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)  <span class="comment"># R语言</span></span><br></pre></td></tr></tbody></table></figure>



<h4 id="15-插入目录-Only-for-Typora"><a href="#15-插入目录-Only-for-Typora" class="headerlink" title="15.插入目录 [Only for Typora]"></a>15.插入目录 [Only for Typora]</h4><p>​     中括号内输入toc</p>
<blockquote>
<p>[toc]</p>
</blockquote>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】Markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【PROJECTS】</category>
      </categories>
  </entry>
  <entry>
    <title>pic test</title>
    <url>/2020/05/06/pic-test/</url>
    <content><![CDATA[<p>插入图片：</p>
<p><img src="/images/pic-test/touxiang.png" alt="touxiang"></p>
<p>插入图片2：</p>
<p><img src="/images/pic-test/1.png" alt="tupian2"></p>
<p>插入网络图片</p>
<p><img src="http://blogfiles.naver.net/20150312_152/goblincape_1426150361053uBOos_JPEG/NaverBlog_20150126_191858_06.jpg" alt="caomei"></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
</search>
