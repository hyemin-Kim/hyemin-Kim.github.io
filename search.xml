<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown 常用语法（持续更新）</title>
    <url>/2020/05/04/Markdown-Syntax/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<h2 id="markdown-常用语法"><a class="markdownIt-Anchor" href="#markdown-常用语法"></a> <strong>Markdown 常用语法</strong></h2>
<br>
<h3 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> <strong>标题</strong></h3>
<p>一级标题： “#” + 空格 + “一级标题”<br>
二级标题： “##” + 空格 + “二级标题”<br>
三级标题： “###” + 空格 + “三级标题”<br>
……<br>
以此类推 【最多到6级】<br>
<br></p>
<h3 id="换行"><a class="markdownIt-Anchor" href="#换行"></a> <strong>换行</strong></h3>
<p>“内容” 末尾 + 2个空格 + Enter</p>
<br>
<h3 id="斜体"><a class="markdownIt-Anchor" href="#斜体"></a> <strong>斜体</strong></h3>
<ul>
<li>
<p>方法一：“内容”前后加1个 * 号（无空格）</p>
</li>
<li>
<p>方法二：“内容”前后加1个下划线（无空格）</p>
</li>
</ul>
<blockquote>
<p>*“内容” *    ——&gt;  <em>“内容”</em></p>
<p>_ “内容” _   ——&gt;  <em>内容</em></p>
</blockquote>
<br>
<h3 id="加粗"><a class="markdownIt-Anchor" href="#加粗"></a> <strong>加粗</strong></h3>
<ul>
<li>
<p>方法一：“内容”前后加2个 * 号（无空格）</p>
</li>
<li>
<p>方法二：“内容”前后加2个下划线（无空格）</p>
</li>
</ul>
<blockquote>
<p>** “内容” **   ——&gt;  <strong>"内容"</strong></p>
<p>__ “内容” __   ——&gt;  <strong>“内容”</strong></p>
</blockquote>
<br>
<h3 id="斜体加粗"><a class="markdownIt-Anchor" href="#斜体加粗"></a> <strong>斜体加粗</strong></h3>
<p>“内容”前后加 3 个 * 号 （无空格）</p>
<blockquote>
<p><em><strong>“内容”</strong></em></p>
</blockquote>
<br>
<h3 id="删除线"><a class="markdownIt-Anchor" href="#删除线"></a> <strong>删除线</strong></h3>
<p>”内容”前后加 2 个波浪线（~）</p>
<blockquote>
<p>~~ “内容” ~~   ——&gt;  <s>“内容”</s></p>
</blockquote>
<br>
<h3 id="高亮"><a class="markdownIt-Anchor" href="#高亮"></a> <strong>高亮</strong></h3>
<p>“内容”前后加 2 个 = 号</p>
<blockquote>
<p>== “内容” ==   ——&gt;  <mark>“内容”</mark></p>
</blockquote>
<br>
<h3 id="字体颜色字号"><a class="markdownIt-Anchor" href="#字体颜色字号"></a> <strong>字体，颜色，字号</strong></h3>
<p>使用 font 标签</p>
 <figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span>  <span class="attr">face</span>=<span class="string">'Microsift Yahei'</span>  <span class="attr">color</span>=<span class="string">'red'</span>  <span class="attr">size</span>=<span class="string">'6'</span>&gt;</span> 字体，颜色和字号 <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p><font color="red" size="6"> 字体，颜色和字号 </font></p>
<br>
<h3 id="上标-下标"><a class="markdownIt-Anchor" href="#上标-下标"></a> <strong>上标 &amp; 下标</strong></h3>
<ul>
<li>
<p>上标：“内容”前后加 1 个 ^ 号</p>
</li>
<li>
<p>下标：“内容”前后加 1 个 ~ 号</p>
</li>
</ul>
<blockquote>
<p>我是 ^ 上标 ^  ——&gt;  我是<sup>上标</sup></p>
<p>我是 ~ 下标 ~  ——&gt; 我是<sub>下标</sub></p>
</blockquote>
<br>
<h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> <strong>引用</strong></h3>
<p>“内容”前加 &gt; 号</p>
<blockquote>
<p>“内容”</p>
</blockquote>
<p>引用号可叠用，&gt;号越多，级数越低<br>
例如：可以使用&gt;, &gt;&gt;, &gt;&gt;&gt; 的形式</p>
<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
</blockquote>
</blockquote>
</blockquote>
<br>
<h3 id="文字内容对齐设置"><a class="markdownIt-Anchor" href="#文字内容对齐设置"></a> <strong>文字内容对齐设置</strong></h3>
<p><strong>1. 使用div标签：</strong></p>
<pre><code><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: right"</span>&gt;</span>your-text-here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</code></pre>
<blockquote>
<div style="text-align: left">居左</div>
<div style="text-align: center">居中</div>
<div style="text-align: right">居右</div>
</blockquote>
<br>
<p><strong>2. 使用p标签：(在Jupyter Notebook中不适用)</strong></p>
<p>居中：<code>&lt;center&gt; 内容 &lt;/center&gt;</code></p>
<p>居左/居右：<code>&lt;p align='left'&gt; 内容 &lt;/p&gt;</code></p>
<blockquote>
<p align="left"> 居左 </p>
<center> 居中 </center>
<p align="right"> 居右 </p>
</blockquote>
<br>
<h3 id="插入链接"><a class="markdownIt-Anchor" href="#插入链接"></a> <strong>插入链接</strong></h3>
<p>​     中括号内输入“显示的文字”，紧接着小括号内输入“网址链接”<br>
​    【注意：网站地址需要 http 开头，最好直接复制】</p>
<blockquote>
<p><a href="http://www.baidu.com/" target="_blank" rel="noopener">点我进入百度</a></p>
</blockquote>
<br>
<h3 id="插入图片"><a class="markdownIt-Anchor" href="#插入图片"></a> <strong>插入图片</strong></h3>
<p>​     感叹号 + 中括号内输入“显示的文字”，紧接着小括号内输入“图片链接”<br>
​    【注意：图片链接非网页的网址栏链接，而是右键“复制图片地址”得到的链接 (Chrome)】</p>
<blockquote>
<p><img src="http://t9.baidu.com/it/u=1307125826,3433407105&amp;fm=79&amp;app=86&amp;f=JPEG?w=5760&amp;h=3240" alt="图片"></p>
</blockquote>
<br>
<ul>
<li>
<p><strong>调整图片大小：</strong></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"链接"</span> <span class="attr">width</span>=<span class="string">"宽度(数字or百分比)"</span> <span class="attr">height</span>=<span class="string">"高度"</span> <span class="attr">alt</span>=<span class="string">"图片名称"</span> <span class="attr">align</span>=<span class="string">center/left/right</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> <strong>列表</strong></h3>
<h4 id="1-有序列表"><a class="markdownIt-Anchor" href="#1-有序列表"></a> <strong>（1） 有序列表</strong></h4>
<p>​      （序号1+点+空格）+内容+回车<br>
​      （序号2+点+空格）+内容+回车<br>
​      （序号3+点+空格）+内容+回车</p>
<blockquote>
<ol>
<li>第一行</li>
<li>第二行</li>
<li>第三行</li>
</ol>
</blockquote>
<p>​      【注意】：系统会默认调整有序列表的序列数。即，即使你误输入成了1.，2.，4.，系统也会自动更正为 1.，2.，3.</p>
<blockquote>
<ol>
<li>第一点</li>
<li>第二点</li>
<li>第四点</li>
</ol>
</blockquote>
<br>
<h4 id="2无序列表"><a class="markdownIt-Anchor" href="#2无序列表"></a> <strong>（2）无序列表</strong></h4>
<p>​        使用“ + ”+空格+内容<br>
​       ​ 或者“ - ”+空格+内容<br>
​       ​ 或者“ * ”+空格+内容<br>
​       下一级：前面加 tab</p>
<blockquote>
<ul>
<li>
<p>第一章</p>
</li>
<li>
<p>第二章</p>
</li>
<li>
<p>第三章</p>
<ul>
<li>第一节</li>
</ul>
</li>
</ul>
</blockquote>
<br>
<h4 id="3任务列表"><a class="markdownIt-Anchor" href="#3任务列表"></a> <strong>（3）任务列表</strong></h4>
<p>​       短横线 + 1 个空格 + 中括号（括号中间带 1 个空格） + 1 个空格 + “内容”</p>
<blockquote>
<ul>
<li>[x] 学习python</li>
<li>[ ] 学习SQL</li>
</ul>
</blockquote>
<br>
<h3 id="添加表格"><a class="markdownIt-Anchor" href="#添加表格"></a> <strong>添加表格</strong></h3>
<p>竖线作为列分界线，换行竖线中间输入短横线作为行分界线</p>
<table>
<thead>
<tr>
<th>1</th>
<th>2</th>
<th>3</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table>
<br>
<h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> <strong>代码</strong></h3>
<p>三个 ` 号，再输入所使用的编程语言</p>
 <figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"Python"</span>)  <span class="comment"># python</span></span><br></pre></td></tr></tbody></table></figure>
 <figure class="highlight r"><table><tbody><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)  <span class="comment"># R语言</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="插入目录-only-for-typora"><a class="markdownIt-Anchor" href="#插入目录-only-for-typora"></a> <strong>插入目录 [Only for Typora]</strong></h3>
<ul>
<li>中括号内输入toc</li>
<li>In Hexo: @[toc] (在使用hexo-renderer-markdown-it-plus插件时)</li>
</ul>
<br>
<br>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>在Hexo博文中添加本地图片的方法（基于Typora编辑器）</title>
    <url>/2020/05/06/Hexo-Insert-local-images/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<p>当我们想在markdown文档中添加网络图片时，可以使用命令<code>!['图片名称'](图片网络地址)</code>进行实现，然而这条命令却不适用于添加本地图片。本文将介绍在使用Typora编辑器编辑Hexo博文时，向markdown文档中添加本地图片的方法。快来看看吧</p>
<a id="more"></a>
<br>
<h3 id="编写博客前-进行配置"><a class="markdownIt-Anchor" href="#编写博客前-进行配置"></a> <strong>【编写博客前】— 进行配置</strong></h3>
<br>
<ol>
<li>
<p><strong>建立 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹(Asset Floder)</a>，用来保存添加到博文中的本地图片</strong></p>
<ul>
<li>在本地Hexo根目录下的<code>source</code>文件夹中创建一个名为 <code>images</code> 的文件夹</li>
</ul>
</li>
<li>
<p><strong>在Typora中设置图片的相对路径</strong></p>
<ul>
<li>打开Typora的<code>文件 &gt; 偏好设置 &gt; 图像</code>，进行如下设置：</li>
</ul>
<center><img src="/images/Hexo-Local-Pictures/image-20200506223313787.png" alt="image-20200506223313787" style="zoom:50%;"></center>
<ul>
<li>此设置会使<code>source/images</code>文件夹下新增一个与所编辑的markdown文档同名的文件夹，文档中所添加的 <em>本地图片</em> 都将存档于此（即拥有了如下路径：<code>'hexo根目录'/source/images/'md文档名'/'图片名称'）</code>)。<br>
<br></li>
</ul>
</li>
<li>
<p><strong>撰写markdown文档时配置 <em>图片根目录</em> ，使其能够同步到hexo博客中去</strong></p>
<ul>
<li>撰写博文时，先点击Typora菜单栏中的<code>格式 &gt; 图像 &gt; 设置图片根目录</code> , 将根目录配置为<code>'hexo根目录'/source</code>。然后再撰写博文。【注：每篇需要添加本地图片的博文都要先进行此步骤】</li>
</ul>
<center><img src="/images/Hexo-Local-Pictures/1.png" alt="1" style="zoom:50%;"></center>
</li>
</ol>
<br>
<h3 id="编写博客时-图片导入方法"><a class="markdownIt-Anchor" href="#编写博客时-图片导入方法"></a> <strong>【编写博客时】— 图片导入方法</strong></h3>
 <br>
<ol>
<li><strong>直接拖拽</strong>
<ul>
<li>将原本存放于其他本地文件夹中的图片直接拖拽到文档中的相应位置中去</li>
<li>此时图片会被自动存档至生成的同名文件夹<code>'hexo根目录'/source/images/'md文档名'</code>中</li>
<li>文档中图片地址的代码会显示成 <em>自动生成的相对路径</em>，即<code>/images/'md文档名'/'图片名称'</code><br>
<br></li>
</ul>
</li>
<li><strong>利用相对路径调取</strong>
<ul>
<li>当利用 <em>方法1</em> 插入了至少一张图片时（即已生成同名文件夹时），便可以把接下来要插入的图片复制到此同名文件夹中，在文档中<em>利用相对路径</em> 调取图片：</li>
<li>所使用的命令是：<code>![图片显示名称](/images/'md文档名'/'图片名称')</code></li>
<li>这里的<code>图片显示名称</code>不必与文件夹中保存的<code>图片名称</code>保持一致，<code>'图片名称'</code>中要记得包含图片格式（例如：tupian.jpg 或 picture.png 等）<br>
<br></li>
</ul>
</li>
</ol>
<p>【注意】当还没有利用 <em>方法1</em> 插入过图片时（即同名文件夹尚未生成时），<strong>不可以自己创建同名文件夹</strong>保存图片。亲测不好使！！（.md文档中可以显示，但是hexo博文中无法显示）</p>
<br>
<h3 id="编写博客后-图片存档结果"><a class="markdownIt-Anchor" href="#编写博客后-图片存档结果"></a> <strong>【编写博客后】— 图片存档结果</strong></h3>
<p>在利用上述方法完成了含有本地图片的markdown博文后，我们的资源文件夹<code>'hexo根目录'/source/images/</code>内最终会显示成什么样子呢？</p>
<ul>
<li>
<p>每一篇配置了图片根目录的博文（即【编写博客前】的第3步），都会在<code>'hexo根目录'/source/images/</code>文件夹中有一个与文档名称同名的文件夹<code>'hexo根目录'/source/images/'md文档名'</code></p>
</li>
<li>
<p>该文件夹中会保存博文编写中曾经添加的<strong>所有本地图片</strong></p>
<ul>
<li><strong>所有</strong>的含义是：即使编辑过程中某些本地图片在添加后又被删除了，它们也仍然会保留在文件夹中，即该文件夹会备份你在博文中添加的 <em>所有本地图片历史</em></li>
<li><strong>本地图片</strong>的含义是：这里只会保存插入的本地图片，而不会保存插入的网络图片。尽管在【编写博客前】的第2步配置中，我们也同样勾选了<code>对网络位置的图片应用上述规则</code>。（请原谅我并不知道其中的缘由。。）</li>
</ul>
</li>
</ul>
<p>就此，在Typora编辑器中编写Hexo博文时，向markdown文档中添加本地图片的方法就介绍完毕啦！快去应用到你的博文中去吧~</p>
 <br>  
 <br>  
 <br> 
 <hr>
<p>本文参考了<a href="https://yinyoupoet.github.io/" target="_blank" rel="noopener">yinyoupoet</a>的<a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a><br>
更多关于Typora中插入图片的内容可以参考<a href="https://support.typora.io/Images/#when-insert-images" target="_blank" rel="noopener">Typora的官方说明</a></p>
 <hr>  
 <br>  
 <br>  
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Hexo Usage</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Git Pages+Hexo搭建博客过程中的参考资料</title>
    <url>/2020/05/08/Reference/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<hr>
<h3 id="博客搭建"><a class="markdownIt-Anchor" href="#博客搭建"></a> 博客搭建</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1zp411o7y6" target="_blank" rel="noopener">bilibili — 超简单易懂的Git入门教程</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ep411R7cJ" target="_blank" rel="noopener">bilibili — github+hexo搭建个人博客</a></li>
<li><a href="https://www.bilibili.com/video/BV1zp411R7gz" target="_blank" rel="noopener">bilibili — github博客搭建（二）：Markdown语法及hexo主题修改</a></li>
<li><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">Git Pages + Jekyll/Hexo搭建自己的博客(最全总结你想知道的都在这里了)</a></li>
</ul>
<br>
<h3 id="网页配置-主题配置"><a class="markdownIt-Anchor" href="#网页配置-主题配置"></a> 网页配置 &amp; 主题配置</h3>
<ul>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo Usage Documents</a></li>
<li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themes</a>
<ul>
<li><a href="https://github.com/niemingzhao/niemingzhao.github.io/tree/theme" target="_blank" rel="noopener">default</a> — <a href="http://www.niemingzhao.top/" target="_blank" rel="noopener">[Demo]</a></li>
<li><a href="https://github.com/tomotoes/hexo-theme-tomotoes" target="_blank" rel="noopener">tomotoes</a> — <a href="https://tomotoes.com/" target="_blank" rel="noopener">[Demo]</a> / <a href="https://github.com/tomotoes/hexo-theme-tomotoes/wiki" target="_blank" rel="noopener">[Documents]</a></li>
</ul>
</li>
<li><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">Git Pages + Jekyll/Hexo搭建自己的博客(最全总结你想知道的都在这里了)</a></li>
</ul>
<br>
<h3 id="markdown渲染"><a class="markdownIt-Anchor" href="#markdown渲染"></a> Markdown渲染</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1zp411R7gz" target="_blank" rel="noopener">bilibili — github博客搭建（二）：Markdown语法及hexo主题修改</a> [字体修改方法(17:30)]</li>
<li><a href="https://www.dazhuanlan.com/2019/10/06/5d99b91c5f0d5/#%E9%80%89%E9%A1%B9%E5%8D%A1-2" target="_blank" rel="noopener">Markdown在Hexo中的使用实例</a> [分割线，空行插入方法]</li>
<li>Markdown渲染插件
<ul>
<li><a href="https://www.jianshu.com/p/f43dab5dbb48" target="_blank" rel="noopener">hexo-renderer-markdown-it 插件 快速配置</a></li>
<li><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a> [<a href="https://github.com/hexojs/hexo-renderer-markdown-it/wiki/Getting-Started" target="_blank" rel="noopener">Documents</a>]</li>
<li><a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" target="_blank" rel="noopener">hexo-renderer-markdown-it-plus</a> （应用中）</li>
<li><a href="https://github.com/niemingzhao/hexo-renderer-markdown" target="_blank" rel="noopener">hexo-renderer-markdown</a></li>
</ul>
</li>
<li>插入本地图片
<ul>
<li><a href="https://blog.csdn.net/dailingnan0827/article/details/86412414" target="_blank" rel="noopener">markdown插入本地图片小技巧</a></li>
<li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a>（应用中）</li>
</ul>
</li>
</ul>
<br>
<h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3>
<ul>
<li>记录网站访问量:
<ul>
<li><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a></li>
<li><a href="http://blog.sciencenet.cn/blog-3247241-1139774.html" target="_blank" rel="noopener">hexo博客解决不蒜子统计无法显示问题</a></li>
</ul>
</li>
<li>设置博客评论：
<ul>
<li><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Gitalk申请页面</a></li>
<li><a href="https://www.jianshu.com/p/656e6101bf0f" target="_blank" rel="noopener">在个人博客里添加评论系统–Gitalk</a></li>
<li><a href="https://www.jianshu.com/p/b4ca8e7c7980" target="_blank" rel="noopener">hexo 使用 gitalk 评论组件的几个注意点</a></li>
</ul>
</li>
<li>多语言版本:
<ul>
<li>
<p><a href="https://blog.kuretru.com/posts/812a334f/" target="_blank" rel="noopener">Hexo 巧用 abbrlink 插件实现文章多语言版本</a></p>
</li>
<li>
<p><a href="https://www.v2ex.com/amp/t/280102" target="_blank" rel="noopener">(既然没人帮我，那就)自己弄了个 Hexo 多语言 index 生成插件</a></p>
</li>
</ul>
</li>
<li>更改tag大小写后出现404页面
<ul>
<li><a href="http://1mhz.me/2015/hexo-deploy-case-sensitive/" target="_blank" rel="noopener">Hexo 部署到 Github Pages 文件夹大小写问题</a></li>
</ul>
</li>
</ul>
<br>
<h3 id="git-github"><a class="markdownIt-Anchor" href="#git-github"></a> Git &amp; Github</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Xx411m7kn" target="_blank" rel="noopener">bilibili — 【教程】学会Git玩转Github【全】</a></li>
<li><a href="https://www.bilibili.com/video/BV1zp411o7y6" target="_blank" rel="noopener">bilibili — 超简单易懂的Git入门教程</a></li>
<li><a href="https://www.cnblogs.com/flora5/p/7152556.html" target="_blank" rel="noopener">Git与Github的连接与使用</a></li>
<li><a href="https://www.jianshu.com/p/296d22275cdd" target="_blank" rel="noopener">Git和GitHub使用教程</a></li>
</ul>
<br>
<h3 id="jupyter-notebook"><a class="markdownIt-Anchor" href="#jupyter-notebook"></a> Jupyter Notebook</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Q4411H7fJ" target="_blank" rel="noopener">bilibili — python数据分析神器Jupyter notebook快速入门</a></li>
<li><a href="https://www.bilibili.com/video/BV1bx411e77u" target="_blank" rel="noopener">bilibili —【冷门教学】记笔记神器-jupyter notebook 第二弹</a></li>
<li><a href="https://blog.csdn.net/qq_27825451/article/details/84427269" target="_blank" rel="noopener">史上最详细、最完全的jupyter notebook使用教程，Python使用者必备！——ipython系列之三</a></li>
<li><a href="https://blog.csdn.net/guleileo/article/details/80490921?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6" target="_blank" rel="noopener">机器学习新手必看：Jupyter Notebook入门指南</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1471240" target="_blank" rel="noopener">Jupyter notebook简介及嵌入Hexo博客中</a></li>
<li><a href="https://www.jianshu.com/p/6c1196f12302" target="_blank" rel="noopener">用 Hexo 搭建个人博客-02：进阶试验（包括添加Jupyter Notebook支持的方法）</a></li>
<li><a href="https://www.pianshen.com/article/81761066910/" target="_blank" rel="noopener">如何在你的Jupyter Notebook中使用R语言？</a></li>
</ul>
<br>
<h3 id="markdown-typora"><a class="markdownIt-Anchor" href="#markdown-typora"></a> Markdown &amp; Typora</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Yb411c7Hi" target="_blank" rel="noopener">bilibili — 二十分钟精通排版神器Markdown</a></li>
<li><a href="https://typora.io/" target="_blank" rel="noopener">Typora官网</a> [<a href="http://theme.typora.io/doc/" target="_blank" rel="noopener">Documents</a>]</li>
<li><a href="https://www.cnblogs.com/zhiyin1209/p/12264711.html" target="_blank" rel="noopener">Typora中下载并安装主题</a></li>
<li><a href="https://www.bilibili.com/video/BV1yW411s7og" target="_blank" rel="noopener">bilibili — Typora 编辑器 —— 书写即为美学</a></li>
<li><a href="https://www.bilibili.com/video/BV1R4411575c" target="_blank" rel="noopener">bilibili — 【软件教程】如何用Typora记笔记？ | 附带Markdown基础教程</a></li>
<li><a href="http://www.95408.com/blog/3283.html" target="_blank" rel="noopener">Typora设置（中文字体、颜色、行距、内边距等）</a></li>
<li>Markdown中插入本地图片
<ul>
<li><a href="https://blog.csdn.net/dailingnan0827/article/details/86412414" target="_blank" rel="noopener">markdown插入本地图片小技巧</a></li>
<li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a></li>
</ul>
</li>
</ul>
<br>
<br>
<hr>
<p>在此感谢所有提供了宝贵学习资料的原po主们~</p>
<hr>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>0.Base</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
        <tag>Typora</tag>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>Jupyter notebook</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Numpy (2)</title>
    <url>/2020/05/19/S-Python-Numpy2/</url>
    <content><![CDATA[<p>슬라이싱 (Slicing).  Fancy 인덱싱.  Boolean 인덱싱.</p>
<a id="more"></a>
<h2 id="1-슬라이싱-slicing"><a class="markdownIt-Anchor" href="#1-슬라이싱-slicing"></a> <strong>1. 슬라이싱 (Slicing)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>베열의 부분 선택 (과일을 슬라이스해서 부분만 먹듯…)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(10,)
</code></pre>
<br>
<h3 id="1-1-index-지정하여-색인"><a class="markdownIt-Anchor" href="#1-1-index-지정하여-색인"></a> <strong>1-1. index 지정하여 색인</strong></h3>
<h4 id="1차원-array"><a class="markdownIt-Anchor" href="#1차원-array"></a> <strong>1차원 array</strong></h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">0</span>]  <span class="comment"># index: 앞에서 부터 0, 1, 2, ...</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">10</span>]  <span class="comment"># index가 넘으면 error남</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-7-ff656e92d79c&gt; in &lt;module&gt;
----&gt; 1 arr[10]


IndexError: index 10 is out of bounds for axis 0 with size 10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-1</span>]   <span class="comment"># 뒤에서 부터 1번째.  index: 뒤에서 부터 -1, -2, -3,...</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-10</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-11</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-10-91f133f07612&gt; in &lt;module&gt;
----&gt; 1 arr[-11]


IndexError: index -11 is out of bounds for axis 0 with size 10
</code></pre>
<br>
<h4 id="2차원-array"><a class="markdownIt-Anchor" href="#2차원-array"></a> <strong>2차원 array</strong></h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(3, 4)
</code></pre>
<br>
<p><strong>arr2d[행, 열]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">0</span>, <span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>10
</code></pre>
<br>
 <br> 
<h3 id="1-2-범위-색인"><a class="markdownIt-Anchor" href="#1-2-범위-색인"></a> <strong>1-2. 범위 색인</strong></h3>
<h4 id="1차원-array-2"><a class="markdownIt-Anchor" href="#1차원-array-2"></a> <strong>1차원 array</strong></h4>
<ul>
<li><strong>arr[a, b]</strong> –  arr의 “index <strong><font color="red">a</font></strong>” 부터 "index <strong><font color="red">b-1</font></strong>"까지  <font color="red">(a 포함, b 미포함)</font></li>
</ul>
<p><strong>index:</strong> 1 이상</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">1</span>:]   <span class="comment"># index 1 포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<br>
<p><strong>index:</strong> 5 미만</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[:<span class="number">5</span>]  <span class="comment"># index 5 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4])
</code></pre>
<br>
<p><strong>index:</strong> 1이상 5미만</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">1</span>:<span class="number">5</span>]  <span class="comment"># index 1 포함 &amp; index 5 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<p><strong>index:</strong> -1까지</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[:<span class="number">-1</span>]  <span class="comment"># index -1 (index 9) 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8])
</code></pre>
<br>
  <br>
<h4 id="2차원-array-2"><a class="markdownIt-Anchor" href="#2차원-array-2"></a> <strong>2차원 array</strong></h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>row(행)을 모두 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">0</span>,:]  <span class="comment"># 0번 행의 모든 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
 <br>
<p><strong>colomn(열)을 모두 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:,<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  7, 11])
</code></pre>
 <br> 
<p><strong>부분적으로 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:<span class="number">2</span>, :]  <span class="comment"># 0,1번 행의 모든 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:<span class="number">2</span>, <span class="number">2</span>:]  <span class="comment"># 0,1번 행의 2,3번 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[3, 4],
       [7, 8]])
</code></pre>
<br>
 <br>   
<h2 id="2-fancy-인덱싱"><a class="markdownIt-Anchor" href="#2-fancy-인덱싱"></a> <strong>2. Fancy 인덱싱</strong></h2>
<p>fancy인덱싱은 범위가 아닌 <strong>특정 index의 집합의 값을 선택하여 추출</strong>하고 싶을 때 활용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">10</span>, <span class="number">23</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">90</span>, <span class="number">65</span>, <span class="number">32</span>, <span class="number">66</span>, <span class="number">70</span>])</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h3 id="2-1-1차원-array"><a class="markdownIt-Anchor" href="#2-1-1차원-array"></a> <strong>2-1. 1차원 array</strong></h3>
<p><strong>방법 1:</strong> 추출하고 싶은 index의 집합을 **[꺾쇠 괄호로]**묶어서 추출</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([23,  7, 65])
</code></pre>
<br>
<p><strong>방법 2:</strong>  추출하고 싶은 index의 집합을 <strong>변수에 지정한 후</strong> 추출</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[index]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([23,  7, 65])
</code></pre>
  <br>
<br>
<h3 id="2-2-2차원-array"><a class="markdownIt-Anchor" href="#2-2-2차원-array"></a> <strong>2-2. 2차원 array</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], </span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], </span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[[<span class="number">0</span>,<span class="number">1</span>], :]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:, [<span class="number">1</span>,<span class="number">3</span>]]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 2,  4],
       [ 6,  8],
       [10, 12]])
</code></pre>
<br>
 <br> 
<h2 id="3-boolean-인덱싱"><a class="markdownIt-Anchor" href="#3-boolean-인덱싱"></a> <strong>3. Boolean 인덱싱</strong></h2>
<p>조건 필터링을 통하여 Boolean값을 이용한 색인</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                 [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                 [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="3-1-true와-false값으로-색인하기"><a class="markdownIt-Anchor" href="#3-1-true와-false값으로-색인하기"></a> <strong>3-1. True와 False값으로 색인하기</strong></h3>
<p>boolean index의 수가 꼭 array의 index와 같아야 됨!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myTrueFalse = [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[myTrueFalse]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-43-9c52b39d81ae&gt; in &lt;module&gt;
----&gt; 1 arr[myTrueFalse]


IndexError: boolean index did not match indexed array along dimension 0; dimension is 7 but corresponding boolean dimension is 3
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myTrueFalse = [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[myTrueFalse]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7])
</code></pre>
<br>
  <br>
<h3 id="3-2-조건필터"><a class="markdownIt-Anchor" href="#3-2-조건필터"></a> <strong>3-2. 조건필터</strong></h3>
<p>조건 연산자를 활용하여 필터를 생성할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d &gt; <span class="number">2</span>  <span class="comment"># "2보다 크다"라는 조건의 만족여부에 따라 Boolean index 생성</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[False, False,  True,  True],
       [ True,  True,  True,  True],
       [ True,  True,  True,  True]])
</code></pre>
<br>
<p>위 Boolean index를 다시 array에 적용하여 해당 부분을 추출: <strong>arr2d[조건필터]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[arr2d &gt; <span class="number">2</span>]  <span class="comment"># 1차원 array로 반환</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[arr2d &lt; <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Numpy (4)</title>
    <url>/2020/05/20/S-Python-Numpy4/</url>
    <content><![CDATA[<p>행렬 (덧셈, 뺄셈, 곱셈).  Broadcasting.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%96%89%EB%A0%AC-%EB%8D%A7%EC%85%88"><strong>1. 행렬 - 덧셈</strong></a>
<ul>
<li><a href="#1-1-%EB%8D%A7%EC%85%88"><strong>1-1. 덧셈</strong></a></li>
<li><a href="#1-2-sum-matrix%EC%95%88%EC%9D%98-%EA%B3%84%EC%82%B0"><strong>1-2. Sum – Matrix안의 계산</strong></a></li>
</ul>
</li>
<li><a href="#2-%ED%96%89%EB%A0%AC-%EB%BA%84%EC%85%88"><strong>2. 행렬 - 뺄셈</strong></a></li>
<li><a href="#3-%ED%96%89%EB%A0%AC-%EA%B3%B1%EC%85%88"><strong>3. 행렬 - 곱셈</strong></a>
<ul>
<li><a href="#3-1-%EC%9D%BC%EB%B0%98-%EA%B3%B1%EC%85%88"><strong>3-1. 일반 곱셈</strong></a></li>
<li><a href="#3-2-dot-product-%EB%82%B4%EC%A0%81%EA%B3%B1"><strong>3-2. dot product / 내적곱</strong></a></li>
</ul>
</li>
<li><a href="#4-broadcasting"><strong>4. Broadcasting</strong></a>
<ul>
<li><a href="#4-1-%EC%88%AB%EC%9E%90%EC%9D%98-%EC%97%B0%EC%82%B0"><strong>4-1. 숫자의 연산</strong></a></li>
<li><a href="#4-2-array-%EB%B0%B0%EC%97%B4%EC%9D%98-broadcasting"><strong>4-2. array (배열)의 broadcasting</strong></a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-행렬-덧셈"><a class="markdownIt-Anchor" href="#1-행렬-덧셈"></a> <strong>1. 행렬 - 덧셈</strong></h2>
<p><strong>행렬의 shape이 같아야 덧셈 가능</strong></p>
<h3 id="1-1-덧셈"><a class="markdownIt-Anchor" href="#1-1-덧셈"></a> <strong>1-1. 덧셈</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 6, 8],
       [3, 5, 7]])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b    <span class="comment"># shape이 다르면 error발생</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-7-37f7d36ad418&gt; in &lt;module&gt;
----&gt; 1 a + b    # shape이 다르면 error발생


ValueError: operands could not be broadcast together with shapes (2,3) (3,2) 
</code></pre>
<br>
<h3 id="1-2-sum-matrix안의-계산"><a class="markdownIt-Anchor" href="#1-2-sum-matrix안의-계산"></a> <strong>1-2. Sum – Matrix안의 계산</strong></h3>
<p><strong>명령어:</strong> np.sum(‘array_name’, axis = ‘0/1/…’)</p>
<p><strong>주의:</strong> 계산할 때 <strong>axis의 방향대로 Sum을 구한다.</strong></p>
<p>예를 들면, 2darray에서,</p>
<ul>
<li>
<p>axis = 0 이면: 수직방향으로 Sum을 구한다</p>
</li>
<li>
<p>axis = 1 이면: 수평방향으로 Sum을 구한다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sum(a, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([3, 5, 7])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sum(a, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([6, 9])
</code></pre>
<br>
  <br>
<h2 id="2-행렬-뺄셈"><a class="markdownIt-Anchor" href="#2-행렬-뺄셈"></a> <strong>2. 행렬 - 뺄셈</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2, -2, -2],
       [ 1,  1,  1]])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - b    <span class="comment"># shape이 다르면 error발생</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-18-e62ba154daaa&gt; in &lt;module&gt;
----&gt; 1 a - b    # shape이 다르면 error발생


ValueError: operands could not be broadcast together with shapes (2,3) (3,2) 
</code></pre>
<br>
<br>
<h2 id="3-행렬-곱셈"><a class="markdownIt-Anchor" href="#3-행렬-곱셈"></a> <strong>3. 행렬 - 곱셈</strong></h2>
<h3 id="3-1-일반-곱셈"><a class="markdownIt-Anchor" href="#3-1-일반-곱셈"></a> <strong>3-1. 일반 곱셈</strong></h3>
<p>일반곱셈은 덧셈과 뺏셈이랑 동일하게 같은 위치에 있는 애들끼리 곱한다.<br>
<strong>[shape이 완전 같아야 함]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 3,  8, 15],
       [ 2,  6, 12]])
</code></pre>
 <br>  
<h3 id="3-2-dot-product-내적곱"><a class="markdownIt-Anchor" href="#3-2-dot-product-내적곱"></a> <strong>3-2. dot product / 내적곱</strong></h3>
<p><strong>[맞닿는 shape이 같아야 함]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.shape, b.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((2, 3), (3, 2))
</code></pre>
<br>
<p><strong>방법 1: np.dot(a, b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.dot(a, b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22, 28],
       [31, 40]])
</code></pre>
<br>
<p><strong>방법2: a.dot(b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.dot(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22, 28],
       [31, 40]])
</code></pre>
<br>
<br>  
<h2 id="4-broadcasting"><a class="markdownIt-Anchor" href="#4-broadcasting"></a> <strong>4. Broadcasting</strong></h2>
<h3 id="4-1-숫자의-연산"><a class="markdownIt-Anchor" href="#4-1-숫자의-연산"></a> <strong>4-1. 숫자의 연산</strong></h3>
<p>array a 의 모든 원소에 3을 더하고 싶다면:</p>
<ul>
<li>단순히 행렬 덧셈을 사용할 때:</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 5, 6],
       [5, 6, 7]])
</code></pre>
<br>
<ul>
<li>Broadcasting 사용할 때:</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 5, 6],
       [5, 6, 7]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2, -1,  0],
       [-1,  0,  1]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 3,  6,  9],
       [ 6,  9, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a / <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0.33333333, 0.66666667, 1.        ],
       [0.66666667, 1.        , 1.33333333]])
</code></pre>
<br>
 <br> 
<h3 id="4-2-array-배열의-broadcasting"><a class="markdownIt-Anchor" href="#4-2-array-배열의-broadcasting"></a> <strong>4-2. array (배열)의 broadcasting</strong></h3>
<p>original array의 shape이 유지됨.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>],</span><br><span class="line">              [<span class="number">2</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.shape, b.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((2, 3), (2, 1))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3],
       [4, 6, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  4,  9],
       [ 2,  6, 12]])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Numpy (1)</title>
    <url>/2020/05/19/S-Python-Numpy1/</url>
    <content><![CDATA[<p>Numpy개요. Numpy import하기. nd array 생성. array에서의 데이터 타입</p>
<a id="more"></a>
<h2 id="1-numpy-개요"><a class="markdownIt-Anchor" href="#1-numpy-개요"></a> <strong>1. Numpy 개요</strong></h2>
<h3 id="1-1-numpy이란"><a class="markdownIt-Anchor" href="#1-1-numpy이란"></a> <strong>1-1. Numpy이란?</strong></h3>
<p>Numpy: 수학, 과학 계산용 패키지</p>
<p>​    <br></p>
<h3 id="1-2-별칭-np"><a class="markdownIt-Anchor" href="#1-2-별칭-np"></a> <strong>1-2. 별칭 - np</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-3-array-배열"><a class="markdownIt-Anchor" href="#1-3-array-배열"></a> <strong>1-3. array (배열)</strong></h3>
<p><strong>배열</strong>: 여러 값들의 그룹</p>
<br>  
<p><strong>&lt; 1차원 배열 &gt;</strong></p>
<br>
<center><img src="/images/S-Python-Numpy1/1_array.png" alt="1_array" style="zoom:80%;"></center>
<div style="text-align: center"> numpy.array([1, 2, 3, 4]) </div>
 <br> 
<p><strong>&lt; 2차원 배열 &gt;</strong></p>
 <br>
<center><img src="/images/S-Python-Numpy1/2_array.png" alt="2_array" style="zoom:80%;"></center>
<div style="text-align: center"> 
numpy.array([[1, 2, 3, 4],  
             [5, 6, 7, 8],  
             [9, 10, 11, 12],  
             [13, 14, 15, 16]]) 
</div>
<br>
<p><strong>&lt; n차원 배열 &gt;   (nd array: <em>n dimention</em> array)</strong></p>
<center><img src="/images/S-Python-Numpy1/n_array.png" alt="n_array" style="zoom:80%;" align="center/"></center>
  <br>
  <br>
<h3 id="1-4-shape차원-axis축"><a class="markdownIt-Anchor" href="#1-4-shape차원-axis축"></a> <strong>1-4. shape(차원) &amp; axis(축)</strong></h3>
<ul>
<li>
<p><strong>shape은 <font color="red"> 차원의 수 </font> 를 확인</strong></p>
<p>(3, ) =&gt; 3 X 1의 배열<br>
(4,3) =&gt; 4 X 3의 배열<br>
(2,5,3) =&gt; 2 X 5 X 3의 배열</p>
</li>
<li>
<p><strong>axis는 기준이 되는 <font color="red"> 축 </font></strong></p>
<p>axis는 앞에서 부터 0, 1, 2…<br>
nd array의 축: axis 0, axis 1, axis 2, … axis n</p>
<br>
<br>
</li>
</ul>
<h2 id="2-numpy-import하기"><a class="markdownIt-Anchor" href="#2-numpy-import하기"></a> <strong>2. Numpy import하기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">numpy</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'numpy' from 'D:\\Anaconda\\lib\\site-packages\\numpy\\__init__.py'&gt;
</code></pre>
<br>
<h3 id="2-1-별칭-alias-지정하기-항상-해주세요"><a class="markdownIt-Anchor" href="#2-1-별칭-alias-지정하기-항상-해주세요"></a> <strong>2-1. 별칭 (alias) 지정하기 (항상 해주세요!)</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'numpy' from 'D:\\Anaconda\\lib\\site-packages\\numpy\\__init__.py'&gt;
</code></pre>
<br>
  <br>
<h2 id="3-nd-array-생성하기-nparray"><a class="markdownIt-Anchor" href="#3-nd-array-생성하기-nparray"></a> <strong>3. nd array 생성하기 – "np.array([…])"</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], dtype=int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr <span class="comment"># 주의: list와 다름</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  <span class="comment"># list</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>numpy.ndarray
</code></pre>
<br>
<br>  
<h3 id="3-1-list로-부터-생성하기-nparraylist_name"><a class="markdownIt-Anchor" href="#3-1-list로-부터-생성하기-nparraylist_name"></a> <strong>3-1. list로 부터 생성하기 – "np.array(<em>list_name</em>)"</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist2 = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">           [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]]</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1 = np.array(mylist1)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2 = np.array(mylist2)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
 <br> 
<h3 id="3-2-shape확인하기-array_name-shape"><a class="markdownIt-Anchor" href="#3-2-shape확인하기-array_name-shape"></a> <strong>3-2. shape확인하기 – "<em>array_name</em> .shape"</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4,)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(2, 4)
</code></pre>
<br>
 <br>   
<h2 id="4-array에서의-data-type"><a class="markdownIt-Anchor" href="#4-array에서의-data-type"></a> <strong>4. array에서의 data type</strong></h2>
<p><strong>array에서는 list와 다르게 1개의 <font color="red">단일 데이터 타입 </font> 만 허용 된다</strong></p>
  <br>
<h3 id="4-1-list에서의-data-type"><a class="markdownIt-Anchor" href="#4-1-list에서의-data-type"></a> <strong>4-1. list에서의 data type</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 3.14, '사과', '1234']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'사과'
</code></pre>
<br>
 <br> 
<h3 id="4-2-array에서의-data-type"><a class="markdownIt-Anchor" href="#4-2-array에서의-data-type"></a> <strong>4-2. array에서의 data type</strong></h3>
<h4 id="case-1-int와-float타입이-혼재된-경우"><a class="markdownIt-Anchor" href="#case-1-int와-float타입이-혼재된-경우"></a> <strong>case 1. int와 float타입이 혼재된 경우</strong></h4>
<p>int와 float타입이 혼재된 경우 int(정수)가 float(실수)로 바꿔진다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.14</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr  <span class="comment"># 정수가 실수로 바꿔진다</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1.  , 2.  , 3.  , 3.14])
</code></pre>
<br>
<p>​</p>
<h4 id="case-2-int와-float-타입이-혼재되었으나-dtype을-지정한-경우"><a class="markdownIt-Anchor" href="#case-2-int와-float-타입이-혼재되었으나-dtype을-지정한-경우"></a> <strong>case 2. int와 float 타입이 혼재되었으나, dtype을 지정한 경우</strong></h4>
<p>int와 float 타입이 혼재되었으나, dtype가 int로 지정된 경우, float의 앞에 정수 부분만 보류된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.14</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 3])
</code></pre>
<br>
<h4 id="case-3-int-float-와-str-타입이-혼재된-경우"><a class="markdownIt-Anchor" href="#case-3-int-float-와-str-타입이-혼재된-경우"></a> <strong>case 3. int / float 와 str 타입이 혼재된 경우</strong></h4>
<p>int / float 와 float타입이 혼재된 경우 int(정수)가 str(문자열)로 바꿔진다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['1', '3.14', '사과', '1234'], dtype='&lt;U32')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">0</span>] + arr[<span class="number">1</span>]  <span class="comment">#str로 되어버려서 숫자의 사치연산이 안됨</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>'13.14'
</code></pre>
<br>
<h4 id="case-4-int와-str-타입이-혼재되어-있고-dtype이-int로-지정한-경우"><a class="markdownIt-Anchor" href="#case-4-int와-str-타입이-혼재되어-있고-dtype이-int로-지정한-경우"></a> <strong>case 4. int와 str 타입이 혼재되어 있고 dtype이 int로 지정한 경우</strong></h4>
<p><strong>(1) 문자내용인 str이 존재한 경우 error 발생</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>, <span class="string">'5.8'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-50-88e75a912236&gt; in &lt;module&gt;
----&gt; 1 arr = np.array([1, 3.14, '사과', '1234', '5.8'], dtype = int)


ValueError: invalid literal for int() with base 10: '사과'
</code></pre>
<br>
<p><strong>(2) 실수(float)내용인 str이 존재한 경우도 error발생</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'1234'</span>, <span class="string">'5.8'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-52-98017763e514&gt; in &lt;module&gt;
----&gt; 1 arr = np.array([1, 3.14, '1234', '5.8'], dtype = int)


ValueError: invalid literal for int() with base 10: '5.8'
</code></pre>
<br>
<p><strong>(3) 정수(int)내용인 str만 존재한 경우 해당 str이 자동으로 int로 바꿔짐</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'1234'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([   1,    3, 1234])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python - Numpy (3)</title>
    <url>/2020/05/20/S-Python-Numpy3/</url>
    <content><![CDATA[<p>arange. range. 정렬(sort &amp; argsort)</p>
<a id="more"></a>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-arange란"><a class="markdownIt-Anchor" href="#1-arange란"></a> <strong>1. arange란?</strong></h2>
<p>arange와 range를 같이 보고 이해하면 됨</p>
<p><strong>[실제 상황 예시]</strong></p>
<p>우리는 순차적인 값을 생성할 때가 많다. 예를 들면:</p>
<ol>
<li>회원에 대한 가입번호 부여</li>
<li>100개 한정 판매 상품에 대한 고유 번호 부여</li>
</ol>
<p>이 밖에도 데이터 관리를 위한 인덱스를 차례대로 부여하는 것은 매우 흔한 일이다.</p>
  <br>
<h3 id="1-1-순서대로-리스트에-값을-생성하려면"><a class="markdownIt-Anchor" href="#1-1-순서대로-리스트에-값을-생성하려면"></a> <strong>1-1. 순서대로 리스트에 값을 생성하려면?</strong></h3>
<p>1~10까지 값을 생성하려면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
 <br> 
<h3 id="1-2-arange를-사용해서-쉽게-생성하기"><a class="markdownIt-Anchor" href="#1-2-arange를-사용해서-쉽게-생성하기"></a> <strong>1-2. arange를 사용해서 쉽게 생성하기</strong></h3>
<p><strong>np.arange(a, b):</strong> <strong><font color="red">a</font></strong> 부터 <strong><font color="red">b-1</font></strong> 까지 생성한다  <strong><font color="red">(a포함, b미포함)</font></strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
 <br>
<h3 id="1-3-keyword인자를-사용해보기"><a class="markdownIt-Anchor" href="#1-3-keyword인자를-사용해보기"></a> <strong>1-3. keyword인자를 사용해보기</strong></h3>
<p><strong>np.arange(start = a,  stop = b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(start=<span class="number">1</span>, stop=<span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(stop=<span class="number">11</span>, start=<span class="number">1</span>)  <span class="comment"># start &amp; stop 지정했기 때문에 순서 바꿔도 됨</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">11</span>,<span class="number">1</span>)  <span class="comment"># start &amp; stop 지정 안하면 순서 바꿨을 때 오류 남</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([], dtype=int32)
</code></pre>
<br>
<h3 id="1-4-홀수의-값만-생성"><a class="markdownIt-Anchor" href="#1-4-홀수의-값만-생성"></a> <strong>1-4. 홀수의 값만 생성</strong></h3>
<p>1~10 사이의 값중 홀수만 생성</p>
<p><strong>step 키워드 활용</strong></p>
<p>np.arange(start, stop, step)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7, 9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(start=<span class="number">1</span>, stop=<span class="number">11</span>, step=<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7, 9])
</code></pre>
 <br>
<br>
<h2 id="2-range-numpy와는-상관없는-python문법"><a class="markdownIt-Anchor" href="#2-range-numpy와는-상관없는-python문법"></a> <strong>2. range (Numpy와는 상관없는 Python문법)</strong></h2>
<ul>
<li>
<p>range는 말 그대로 범위를 지정해 주는 것이다</p>
</li>
<li>
<p>보통 for-in 의 반복문에서 많이 사용된다</p>
</li>
<li>
<p>arange와는 다르게 array형태로 저장되어있지 않고 그냥 가볍게 바로바로 쓴다</p>
<br>
</li>
</ul>
<p><strong>arange 구문 활용시</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<p><strong>range 구문 활용시</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
3
5
7
9
</code></pre>
<br>
<br>
<h2 id="3-정렬"><a class="markdownIt-Anchor" href="#3-정렬"></a> <strong>3. 정렬</strong></h2>
<h3 id="3-1-1차원-정렬"><a class="markdownIt-Anchor" href="#3-1-1차원-정렬"></a> <strong>3-1. 1차원 정렬</strong></h3>
<p>1차원 정렬은 매우 간단함</p>
<ul>
<li>오름차순으로 정렬: np.sort(arr)</li>
<li>내림차순으로 정렬: np.sort(arr)[::-1]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)[::<span class="number">-1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([10,  9,  8,  8,  7,  6,  5,  4,  3,  2,  1])
</code></pre>
<br>
<p>하지만, 그냥 이상태에서는 정렬된 이 값들이 <strong>유지가 안됨</strong><br>
값을 sort 된 상태로 유지시키려면:</p>
<ul>
<li>변수로 다시 지정해주기</li>
<li>np.sort(arr) 대신 arr.sort() 쓴다 [arr자체에 sort명령을 씌워줌]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr    <span class="comment"># np.sort 만 실행했을 때 유지가 아됨</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2 = np.sort(arr)   <span class="comment"># 방법1: arr2로 지정하기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr.sort()    <span class="comment"># 방법2: arr.sort 사용하기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
 <br> 
<h3 id="3-2-n차원-정렬"><a class="markdownIt-Anchor" href="#3-2-n차원-정렬"></a> <strong>3-2. N차원 정렬</strong></h3>
<p>N차원 정렬에서는 axis 중요함. (즉, 정렬 기준이 되는 축)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], </span><br><span class="line">                  [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">                  [<span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">11</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(3, 4)
</code></pre>
<br>
<p><strong>열 정렬 (왼쪽에서 오른쪽으로 정렬) – axis 1을 기준으로 삼</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">1</span>)   <span class="comment"># 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 1,  2,  3,  4],
       [ 9, 10, 11, 12]])
</code></pre>
  <br>
<p><strong>행 정렬 (위에서 아래로 정렬) – axis 0을 기준으로 삼</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 4,  3,  2,  1],
       [ 5,  6,  7,  8],
       [10,  9, 12, 11]])
</code></pre>
<br>
<br>  
<h3 id="3-3-index를-반환하는-argsort"><a class="markdownIt-Anchor" href="#3-3-index를-반환하는-argsort"></a> <strong>3-3. index를 반환하는 argsort</strong></h3>
<p>정렬한 결과에는 값을 반환하는 것이 아닌 index를 반환한다</p>
 <br>
<p><strong>열 정렬 (왼쪽에서 오른쪽으로 정렬)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">1</span>)  <span class="comment"># sort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 1,  2,  3,  4],
       [ 9, 10, 11, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(arr2d, axis = <span class="number">1</span>)   <span class="comment"># argsort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 1, 2, 3],
       [3, 2, 1, 0],
       [1, 0, 3, 2]], dtype=int64)
</code></pre>
 <br>
<br>
<p><strong>행 정렬 (위에서 아래로 정렬)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># sort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 4,  3,  2,  1],
       [ 5,  6,  7,  8],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># argsort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 1, 1, 1],
       [0, 0, 0, 0],
       [2, 2, 2, 2]], dtype=int64)
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 (1)</title>
    <url>/2020/05/12/S-Python-base1/</url>
    <content><![CDATA[<p>출력. 변수. 데이터 타입. 데이터의 응용. 데이터 타입의 변환.</p>
<a id="more"></a>
<h2 id="1-출력-print"><a class="markdownIt-Anchor" href="#1-출력-print"></a> <strong>1. 출력 (print)</strong></h2>
<h3 id="print-함수"><a class="markdownIt-Anchor" href="#print-함수"></a> <strong>print( ) 함수</strong></h3>
<ol>
<li>숫자를 출력할 때 따움표(’ ’ or " ") 필요없음</li>
<li>문자를 출력할 때 따움표 필요
<ul>
<li>’ ’ 와 " "  차이없음</li>
<li>‘’’  ‘’’ 를 사용하면 출력시 “줄 바꿈” 형식이 보류될 수 있음</li>
</ul>
</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">1</span>+<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'안녕하세요'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"반갑습니다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>반갑습니다
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">안녕하세요,</span></span><br><span class="line"><span class="string">반갑습니다.</span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요,
반갑습니다.
</code></pre>
<br>
<br>
<h2 id="2-변수와-대입"><a class="markdownIt-Anchor" href="#2-변수와-대입"></a> <strong>2. 변수와 대입</strong></h2>
<h3 id="2-1-변수의-이름"><a class="markdownIt-Anchor" href="#2-1-변수의-이름"></a> <strong>2-1. 변수의 이름</strong></h3>
<h4 id="가능한-경우"><a class="markdownIt-Anchor" href="#가능한-경우"></a> 【가능한 경우】</h4>
<p>case 1. 알파벳</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">A = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 2. 알파벳 + 숫자</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a1 = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 3. 알파벳 + 언더바(_)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_ = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 4. 언더바(_) + 알파벳</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">_a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="불가한-경우"><a class="markdownIt-Anchor" href="#불가한-경우"></a> 【불가한 경우】</h4>
<p><strong>case 1. 언더바(_)를 제외한 특수문자</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">* = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-23-6d0163a9fd4c&gt;", line 1
    * = 1
      ^
SyntaxError: invalid syntax
</code></pre>
<br>
<p><strong>case 2. 알파벳 + 언더바를 제외한 특수문자</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a$ = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-25-2501fc576aab&gt;", line 1
    a$ = 1
     ^
SyntaxError: invalid syntax
</code></pre>
<br>
<p><strong>case 3. 변수의 이름 사이의 공백</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a b = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-26-2bab97d7970c&gt;", line 1
    a b = 1
      ^
SyntaxError: invalid syntax
</code></pre>
<p><br><br></p>
<h3 id="2-2-변수의-대입"><a class="markdownIt-Anchor" href="#2-2-변수의-대입"></a> <strong>2-2. 변수의 대입</strong></h3>
<p>변수 값을 부여할 때 "="를 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="2-3-변수의-출력"><a class="markdownIt-Anchor" href="#2-3-변수의-출력"></a> <strong>2-3. 변수의 출력</strong></h3>
<ol>
<li>print() 구문 사이에 <strong>값을 직접</strong> 입력하면, 바로 값이 출력됨.</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">123</span>)   <span class="comment"># 숫자는 "" 필요없음</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"text"</span>)   <span class="comment"># 문자는 "" 필요함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>text
</code></pre>
<br>
<ol start="2">
<li>print()구분 사이에 <strong>변수 이름</strong>을 입력하면, 변수의 값이 출력됨.</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">123</span></span><br><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">"text"</span></span><br><span class="line">print(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>text
</code></pre>
<br>
 <br> 
<h2 id="3-데이터-타입"><a class="markdownIt-Anchor" href="#3-데이터-타입"></a> <strong>3. 데이터 타입</strong></h2>
<p><strong>데이터 type:</strong><br>
1. int(정수)<br>
2. float(실수)<br>
3. str(문자열)<br>
4. bool(참/거짓)</p>
<br>
<h3 id="3-1-int정수"><a class="markdownIt-Anchor" href="#3-1-int정수"></a> <strong>3-1. int(정수)</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<p><strong>코딩에서 1은 참으로 취급, 0은 거짓으로  취급</strong></p>
<p>다음 코딩으로 진단해보자:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'1은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'1은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1은 참으로 취급
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'0은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'0은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0은 거짓부렁이
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">123</span>:</span><br><span class="line">    print(<span class="string">'123은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'123은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123은 참으로 취급
</code></pre>
<p>[0 이외의 정수 다 참으로 취급]</p>
<br>
<br>  
<h3 id="3-2-float실수"><a class="markdownIt-Anchor" href="#3-2-float실수"></a> <strong>3-2. float(실수)</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">3.14</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3.14
</code></pre>
<br>
<h3 id="3-3-str-혹은-object-문자열"><a class="markdownIt-Anchor" href="#3-3-str-혹은-object-문자열"></a> <strong>3-3. str 혹은 object (문자열)</strong></h3>
<ol>
<li><strong>문자열은 반드시 ’ ’ 혹은 " " 로 묶어야 함</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">word = <span class="string">'안녕하세요'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">word = <span class="string">"안녕하세요"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<ol start="2">
<li><strong>’" "’ 를 사용하면 출력시 “줄 바꿈” 형식이 보류될 수 있음</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">안녕하세요,</span></span><br><span class="line"><span class="string">반갑습니다.</span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요,
반갑습니다.
</code></pre>
<p><br> <br></p>
<h3 id="3-4-bool-참거짓"><a class="markdownIt-Anchor" href="#3-4-bool-참거짓"></a> <strong>3-4. bool (참/거짓)</strong></h3>
<p>참:   True<br>
거짓: False</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>bool
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>bool
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span> == <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">123</span> == <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<ul>
<li>1 이외의 정수는 조건절에서 참으로 인식되지만, bool과 비교할 때 참이 아니다</li>
</ul>
<br>
<br>
<h3 id="3-5-아무것도-아닌-none타입도-있다"><a class="markdownIt-Anchor" href="#3-5-아무것도-아닌-none타입도-있다"></a> <strong>3-5. 아무것도 아닌 None타입도 있다</strong></h3>
<p>Null값을 넣는다고도 한다.</p>
<ul>
<li>Null: Nullify (무효화하다) – 사전상 의미</li>
</ul>
<p>Python에서는 <strong>None</strong> 입니다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>None
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>NoneType
</code></pre>
<br>
<p>조건문에 None이라면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">None</span>:</span><br><span class="line">    print(<span class="string">"None은 참으로 취급"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"None은 거짓부렁이"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>None은 거짓부렁이
</code></pre>
<br>
<br>
<h2 id="4-데이터의-응용"><a class="markdownIt-Anchor" href="#4-데이터의-응용"></a> <strong>4. 데이터의 응용</strong></h2>
<h3 id="4-1-사칙-연산자"><a class="markdownIt-Anchor" href="#4-1-사칙-연산자"></a> <strong>4-1. 사칙 연산자</strong></h3>
<table>
<thead>
<tr>
<th style="text-align:center">연산자</th>
<th style="text-align:center">의미</th>
<th style="text-align:center">예</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">더하기</td>
<td style="text-align:center">2 + 1 -&gt; 3</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">빼기</td>
<td style="text-align:center">1 - 2 -&gt; -1</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">곱하기</td>
<td style="text-align:center">1 * 2 -&gt; 2</td>
</tr>
<tr>
<td style="text-align:center">/</td>
<td style="text-align:center">나누기</td>
<td style="text-align:center">1 / 2 -&gt; 0.5</td>
</tr>
<tr>
<td style="text-align:center">%</td>
<td style="text-align:center">몫</td>
<td style="text-align:center">5 % 2 -&gt; 2</td>
</tr>
<tr>
<td style="text-align:center">//</td>
<td style="text-align:center">나머지</td>
<td style="text-align:center">5 // 2 -&gt; 1</td>
</tr>
<tr>
<td style="text-align:center">**</td>
<td style="text-align:center">멱</td>
<td style="text-align:center">2**3 -&gt; 8</td>
</tr>
</tbody>
</table>
  <br>
<h3 id="4-2-문자열의-연결"><a class="markdownIt-Anchor" href="#4-2-문자열의-연결"></a> <strong>4-2. 문자열의 연결</strong></h3>
<p>여러 개 문자열을 "+"을 통해 연결할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">subject = <span class="string">"나는 "</span></span><br><span class="line">object = <span class="string">"치킨을 "</span></span><br><span class="line">verb = <span class="string">"좋아한다"</span></span><br><span class="line"></span><br><span class="line">print(subject + object + verb)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>나는 치킨을 좋아한다
</code></pre>
<br>
<p>하지만 문자열(str)과 숫자(int &amp; float)는 <em>직접</em>  연결할 수 없다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">"내가 "</span></span><br><span class="line">b = <span class="string">"친구랑 "</span></span><br><span class="line">c = <span class="number">12</span></span><br><span class="line">d = <span class="string">"시에 "</span></span><br><span class="line">e = <span class="string">"보기로 했다"</span></span><br><span class="line"></span><br><span class="line">print(a + b + c + d + e)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-82-34cd0f9ce519&gt; in &lt;module&gt;
      5 e = "보기로 했다"
      6 
----&gt; 7 print(a + b + c + d + e)


TypeError: can only concatenate str (not "int") to str
</code></pre>
<p>이 때는 데이터 타입을 변환할 필요가 있다</p>
<br>
<br>
<h2 id="5-데이터-타입-변환"><a class="markdownIt-Anchor" href="#5-데이터-타입-변환"></a> <strong>5. 데이터 타입 변환</strong></h2>
<h3 id="5-1-문자열로-변환-str-함수-or-따움표"><a class="markdownIt-Anchor" href="#5-1-문자열로-변환-str-함수-or-따움표"></a> <strong>5-1. 문자열로 변환:  “str( ) 함수”  or  "따움표"</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="number">6</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(str(<span class="number">6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="string">'6'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="number">3.14</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(str(<span class="number">3.14</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="string">"3.14"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">"내가 "</span></span><br><span class="line">b = <span class="string">"친구랑 "</span></span><br><span class="line">c = <span class="number">12</span></span><br><span class="line">d = <span class="string">"시에 "</span></span><br><span class="line">e = <span class="string">"보기로 했다"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a + b + str(c) + d + e)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>내가 친구랑 12시에 보기로 했다
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a + b + <span class="string">'12'</span> + d + e)a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>내가 친구랑 12시에 보기로 했다
</code></pre>
<br>
<br>
<h3 id="5-2-정수로-변환-int-함수"><a class="markdownIt-Anchor" href="#5-2-정수로-변환-int-함수"></a> <strong>5-2. 정수로 변환: " int( ) 함수"</strong></h3>
<ol>
<li><strong>"str" --&gt; “int”:  str( ) 안 내용이 정수일 때만 가능</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(int(<span class="string">"2"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">number1 = <span class="string">"2"</span></span><br><span class="line">number2 = <span class="string">"3"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(number1) + int(number2))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(<span class="string">"2.6"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-103-f4645c45f771&gt; in &lt;module&gt;
----&gt; 1 print(int("2.6"))


ValueError: invalid literal for int() with base 10: '2.6'
</code></pre>
<br>
<ol start="2">
<li><strong>"float" --&gt; “int”: 소수점 버림</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(int(<span class="number">3.6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(<span class="number">3.6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<br>
<br>
<h3 id="5-3-실수로-변환-float-함수"><a class="markdownIt-Anchor" href="#5-3-실수로-변환-float-함수"></a> <strong>5-3. 실수로 변환: "float( ) 함수"</strong></h3>
<ol>
<li><strong>"str" --&gt; “float”:  str( ) 안 내용이 정수일 때만 가능</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(float(<span class="string">"3.14"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(float(<span class="string">"3.14"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3.14
</code></pre>
<br>
<ol start="2">
<li><strong>"int" --&gt; “float”: 소수점 하나 추가</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(float(<span class="number">178</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(float(<span class="number">178</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>178.0
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 (4)</title>
    <url>/2020/05/13/S-Python-base4/</url>
    <content><![CDATA[<p>비교연산자. 조건문. 논리연산자. 반복문</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> 목록</h1>
<h2 id="1-비교연산자"><a class="markdownIt-Anchor" href="#1-비교연산자"></a> <strong>1. 비교연산자</strong></h2>
<p>비교 연산자는 주로 대소비교를 할 때 사용한다.</p>
<h3 id="1-1-대소비교"><a class="markdownIt-Anchor" href="#1-1-대소비교"></a> <strong>1-1. 대소비교 &gt;, &gt;=, &lt;, &lt;=</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span> &gt; <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">10</span> &gt;= <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">9</span> &lt; <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">8</span> &lt;= <span class="number">7</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<p><br><br></p>
<h3 id="1-2-같다"><a class="markdownIt-Anchor" href="#1-2-같다"></a> <strong>1-2. 같다 ==</strong></h3>
<ul>
<li><strong>주의:</strong> = 는 대입연산자. == 는 비교연산자 중의 “같다”</li>
<li>숫자형 &amp; 문자형 모두 비교 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> = <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-6-a8e553549e25&gt;", line 1
    2 = 2
         ^
SyntaxError: can't assign to literal
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> == <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> == <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"나"</span> == <span class="string">"나"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
  <br>
<h3 id="1-3-같지-않다"><a class="markdownIt-Anchor" href="#1-3-같지-않다"></a> <strong>1-3. 같지 않다 !=</strong></h3>
<ul>
<li>숫자형 &amp; 문자형 모두 비교 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> != <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> != <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"나"</span> != <span class="string">"너"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<br>  
<h2 id="2-조건문"><a class="markdownIt-Anchor" href="#2-조건문"></a> <strong>2. 조건문</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> <strong>2-1. 개념</strong></h3>
<p>주어진 조건이 <strong>참</strong>인 경우 그 다음 내가 규칙(로직)을 실행하는 개념이다</p>
  <br>
<h3 id="2-2-if"><a class="markdownIt-Anchor" href="#2-2-if"></a> <strong>2-2. if</strong></h3>
<ul>
<li>if는 어떤 조건이 성립한다면 ~이라는 의미</li>
<li>if구문 끝에는 반드시 콜론( : )이 있어야 함</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
</code></pre>
<br>
<ul>
<li>if구문 뒤에 indent가 있는 명령어는 if조건이 성립하면 실행</li>
<li>indent가 없으면 if의 성립여부와 무관하여 무조건 실행</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">   </span><br><span class="line">print(<span class="string">'끝'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
참
끝
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">   </span><br><span class="line">print(<span class="string">'끝'</span>)  <span class="comment"># 앞에 indent가 없으면 if의 성립여부와 무관하여 실행</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>끝
</code></pre>
<br>
<br>
<h3 id="2-3-else"><a class="markdownIt-Anchor" href="#2-3-else"></a> <strong>2-3. else</strong></h3>
<p>else는 if 조견 후에 따라오면, if가 아닌 경우에 실행 됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">"성립한다"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"성립하지 않은다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>성립하지 않은다
</code></pre>
<br>
<p>else는 꼭 if랑 같이 써야함. 단독으로 실행할 수 없음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"성립하지 않은다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-22-6c0f4debaa4b&gt;", line 1
    else:
       ^
SyntaxError: invalid syntax
</code></pre>
<br>
  <br>
<h3 id="2-4-elif"><a class="markdownIt-Anchor" href="#2-4-elif"></a> <strong>2-4. elif</strong></h3>
<p>elif구문은 3가지 이상 문기(조건)의 동작을 수행할 때 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'if 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'elif 구문'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'이것도 저것도 아니다'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>elif 구문
</code></pre>
<br>
<p>그럼, elif구문이 참인 여러 구문을 나열 했을 때는 어떻게 될까?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'if 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'elif 1 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'elif 2 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">'elif 3 구문'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'이것도 저것도 아니다'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>elif 1 구문
</code></pre>
<p>elif구문이 참인 여러 구문을 나열 했을 때는 <strong>첫번째 참인 elif구문만</strong> 실행됨</p>
<p><br><br></p>
<h3 id="2-5-1이나-0은-참이나-거짓을-표현하기도-한다"><a class="markdownIt-Anchor" href="#2-5-1이나-0은-참이나-거짓을-표현하기도-한다"></a> <strong>2-5. 1이나 0은 참이나 거짓을 표현하기도 한다</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>거짓
</code></pre>
<br>
<br>
<h2 id="3-논리-연산자-and-or"><a class="markdownIt-Anchor" href="#3-논리-연산자-and-or"></a> <strong>3. 논리 연산자 (and, or)</strong></h2>
<p><strong>and</strong>나 <strong>or</strong>조건은 두 가지 이상 조건을 다룰 때 활용한다</p>
  <br>
<h3 id="3-1-and"><a class="markdownIt-Anchor" href="#3-1-and"></a> <strong>3-1. and</strong></h3>
<p>and 조건은 <strong>모두 만족</strong>할 때 <strong>참</strong>으로 인식한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span> <span class="keyword">and</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">and</span> (<span class="number">0</span> &lt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'모두 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>모두 참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">and</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'모두 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>거짓
</code></pre>
<br>
<br>
<h3 id="3-2-or"><a class="markdownIt-Anchor" href="#3-2-or"></a> <strong>3-2. or</strong></h3>
<p>or조건은 조건 중 <strong>하나라도 만족</strong>할 때 <strong>참</strong>으로 인식한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'하나라도 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'모두 거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>하나라도 참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt; <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'하나라도 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'모두 거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>모두 거짓
</code></pre>
<br>
<br>
<h2 id="4-반복문"><a class="markdownIt-Anchor" href="#4-반복문"></a> <strong>4. 반복문</strong></h2>
<h3 id="4-1-반복문이란"><a class="markdownIt-Anchor" href="#4-1-반복문이란"></a> <strong>4-1. 반복문이란?</strong></h3>
<ul>
<li>일을 반복 처리 해준다는 것</li>
<li>대상은 반드시 list, dict, set등 집합이어야 한다</li>
</ul>
<br>
<p>[예]</p>
<p>반복문 쓰지 않을 때:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p>mylist에 들어 닜는 모든 값들을 출력하려고 한다면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(mylist[<span class="number">0</span>])</span><br><span class="line">print(mylist[<span class="number">1</span>])</span><br><span class="line">print(mylist[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'...'</span>)</span><br><span class="line">print(mylist[<span class="number">8</span>])</span><br><span class="line">print(mylist[<span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
...
9
10
</code></pre>
<p>반복문은 노가다를 획기적으로 줄여주는 방법이다!</p>
  <br>
<br>
<h3 id="4-2-for-와-in을-활용하자"><a class="markdownIt-Anchor" href="#4-2-for-와-in을-활용하자"></a> <strong>4-2. for 와 in을 활용하자!</strong></h3>
<p><strong>[기본 문법]</strong><br>
for 지정한 변수명 in [꺼내올 집합]:<br>
명령어</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<br>
<h3 id="4-3-반복문에서-짝수만-출력하려면-continue구문"><a class="markdownIt-Anchor" href="#4-3-반복문에서-짝수만-출력하려면-continue구문"></a> <strong>4-3. 반복문에서 짝수만 출력하려면? (continue구문)</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p><strong>방법1:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<p><strong>방법2:</strong><br>
<strong>continue</strong>구문을 사용하면 조건이 충족할 때 아래 명령어를 SKIP하고 다시 다음 순환으로 넘어간다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<br>
<h3 id="4-4-조건을-충족시-순환에서-빠져나와보자-break구문"><a class="markdownIt-Anchor" href="#4-4-조건을-충족시-순환에서-빠져나와보자-break구문"></a> <strong>4-4. 조건을 충족시 순환에서 빠져나와보자! (break구문)</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p>i가 6 이상이면 STOP</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">6</span>:       <span class="comment"># i &gt; 6 이면 6까지 출력한다 </span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【PROJECTS】</category>
      </categories>
  </entry>
  <entry>
    <title>Python 기초문법 (5)</title>
    <url>/2020/05/14/S-Python-base5/</url>
    <content><![CDATA[<p>List Comprehension.  문자열을 가지고 노는 방법.</p>
<a id="more"></a>
<h2 id="1-list-comprehension-파이썬-고유의-아름다운-문법"><a class="markdownIt-Anchor" href="#1-list-comprehension-파이썬-고유의-아름다운-문법"></a> <strong>1. List Comprehension (파이썬 고유의 아름다운 문법)</strong></h2>
<ul>
<li>
<p>for ~ in 구조를 기본적으로 가지고 있다</p>
</li>
<li>
<p>ListComprehension 이니까 당연히 List를 사용한다</p>
<br>
</li>
</ul>
<p><strong>[실제 사례 연구]</strong></p>
<p>mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 이라는 list를 만들어 주고<br>
우리는 이 중 짝수만 출력하고 싶으면 아래와 같이 쓸 수 있다:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<p>그럼 mylist에서 짝수만 뽑아서 <strong>list로 만들어</strong> 주고 싶다면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">even = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        even.append(i)</span><br><span class="line"></span><br><span class="line">print(even)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<p>이렇게 for in 문으로 해줄 수 있다.<br>
하지만, 우리는 <strong>list comprehension을 통해 더욱 쉽게 해결</strong> 할 수 있다!!</p>
<br>
 <br> 
<h3 id="1-1-list-comprehension-조건필터"><a class="markdownIt-Anchor" href="#1-1-list-comprehension-조건필터"></a> <strong>1-1. list comprehension 조건필터</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>아래 문법이 바로 list comprehension 이다. 한 줄로 해결해 버리는 것이 매력임!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<br>  
<h3 id="1-2-step-1-list를-만들어야-하니-일단-꺾쇠-를-씌운다"><a class="markdownIt-Anchor" href="#1-2-step-1-list를-만들어야-하니-일단-꺾쇠-를-씌운다"></a> <strong>1-2. [STEP 1] list를 만들어야 하니 일단 꺾쇠[ ]를 씌운다</strong></h3>
<ul>
<li>꺾쇠 안에 <strong>반복문이 들어간다</strong></li>
<li>반복문을 돌면서 return 된 i값을 list에 넣는 원리이기 때문에 <strong>for구분 앞에 i를 써준다</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<br>
<br>  
<h3 id="1-3-step-2-조건-필터를-걸어-준다"><a class="markdownIt-Anchor" href="#1-3-step-2-조건-필터를-걸어-준다"></a> <strong>1-3. [STEP 2] 조건 필터를 걸어 준다</strong></h3>
<p>[i for i in mylist (이곳에 조건문)]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">[i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<p>이것을 변수에 다시 할당해주면 끝!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<br>  
<h3 id="1-4-응용-step-변수-값을-가공할-수도-있다"><a class="markdownIt-Anchor" href="#1-4-응용-step-변수-값을-가공할-수도-있다"></a> <strong>1-4. [응용 STEP] 변수 값을 가공할 수도 있다</strong></h3>
<p><strong>예를 들어:</strong></p>
<p>mylist의 모든 값에 +2를 하고 다시 even이라는 list에 저장하고 싶다면</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i+<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> mylist]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
</code></pre>
<br>
<br>  
<h2 id="2-문자열string을-가지고-놀기"><a class="markdownIt-Anchor" href="#2-문자열string을-가지고-놀기"></a> <strong>2. 문자열(string)을 가지고 놀기</strong></h2>
<h3 id="2-1-문자의-길이"><a class="markdownIt-Anchor" href="#2-1-문자의-길이"></a> <strong>2-1. 문자의 길이</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'banana'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'banana pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(a)  <span class="comment"># 공백도 count된다</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글 바나나'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6
</code></pre>
<br>
<br>  
<h3 id="2-2-문장-쪼개기-split"><a class="markdownIt-Anchor" href="#2-2-문장-쪼개기-split"></a> <strong>2-2. 문장 쪼개기 – ".split"</strong></h3>
<ul>
<li>split은 문장을 특정 규칙에 의해 쪼개 주는 기능을 한다</li>
<li><strong>명령어:</strong>  변수명.split(‘쪼개는 기준’)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'This is a pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.split(<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.split()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'This-is-a-pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.split(<span class="string">'-'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<ul>
<li>return된 값을 list형식으로 저장한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa = a.split(<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'This'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'a'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">0</span>] + aa[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'Thisa'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c = <span class="string">'한글은 어떻게 될까요?'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c.split()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['한글은', '어떻게', '될까요?']
</code></pre>
<br>
  <br> 
<h3 id="2-3-대문자-소문자로-만들기-upper-lower"><a class="markdownIt-Anchor" href="#2-3-대문자-소문자로-만들기-upper-lower"></a> <strong>2-3. 대문자 / 소문자로 만들기 – “.upper” / ".lower"</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'My name is hyemin'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.upper()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'MY NAME IS HYEMIN'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.lower()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'my name is hyemin'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글엔 대소문자가 없어요ㅠ'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.upper()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'한글엔 대소문자가 없어요ㅠ'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.lower()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'한글엔 대소문자가 없어요ㅠ'
</code></pre>
<br>
 <br> 
<h3 id="24-~로-시작하는-~로-끝나는-startswith-endswith"><a class="markdownIt-Anchor" href="#24-~로-시작하는-~로-끝나는-startswith-endswith"></a> <strong>2.4. ~로 시작하는, ~로 끝나는 – “.startswith” , ".endswith"</strong></h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'01-sample.png'</span></span><br><span class="line">b = <span class="string">'02-sample.jpg'</span></span><br><span class="line">c = <span class="string">'03-sample.pdf'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.startswith(<span class="string">'01'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.endswith(<span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.endswith(<span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<p>조건(혹은 형식)에 맞는 파일을 추출하고 싶을 때:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [a, b]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> file.endswith(<span class="string">'jpg'</span>):</span><br><span class="line">        print(file)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>02-sample.jpg
</code></pre>
<br>
<br>
<h3 id="2-5-바꾸기-replace바꿀-대상-바꿔야할-값"><a class="markdownIt-Anchor" href="#2-5-바꾸기-replace바꿀-대상-바꿔야할-값"></a> <strong>2-5. 바꾸기 – ".replace(‘바꿀 대상, 바꿔야할 값’)"</strong></h3>
<p><strong>[예]</strong>   file형식을 바꾸고 싶다면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'01-sample.png'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<p>이 때 a의 값을 변하지 않아. 다시 할당 해야 함</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.png'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_new = a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)  <span class="comment"># 새로 지정</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_new</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)  <span class="comment"># 덮어쒸우기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<br>    
<h3 id="2-6-불필요한-공백-제거하기-strip"><a class="markdownIt-Anchor" href="#2-6-불필요한-공백-제거하기-strip"></a> <strong>2-6. 불필요한 공백 제거하기 – ".strip"</strong></h3>
<p><strong>[예]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'   01-sample.png'</span></span><br><span class="line">b = <span class="string">'01-sample.png'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a == b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<p>strip은 양 끝 불필요한 공백을 제거해 줌.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.strip()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.png'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.strip() == b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 (3)</title>
    <url>/2020/05/13/S-Python-base3/</url>
    <content><![CDATA[<p><strong>함수</strong></p>
<a id="more"></a>
<h1 id="함수"><a class="markdownIt-Anchor" href="#함수"></a> <strong>함수</strong></h1>
<h2 id="1-함수란-무엇일까"><a class="markdownIt-Anchor" href="#1-함수란-무엇일까"></a> <strong>1. 함수란 무엇일까?</strong></h2>
<p>반복적으로 사용되는 부문을 묶어서, <strong>재사용 가능</strong>하도록 만들어 주는 것</p>
<p>함수에는 **들어가는 놈 (input)**이 있고, **나오는 놈 (output 혹은 return)**이 있다. 전해진 로직(규칙)에 따라, input -&gt; output으로 효율적으로 바꿔주는 역할을 한다</p>
<br>
<p><strong>[예시]</strong></p>
<p><strong>함수 없이 계산할 때</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>12
</code></pre>
<br>
<p><strong>함수로 변경 후</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">func(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>12
</code></pre>
  <br>
  <br>
<h2 id="2-함수-정의-def-define"><a class="markdownIt-Anchor" href="#2-함수-정의-def-define"></a> <strong>2. 함수 정의: def (define)</strong></h2>
<ul>
<li>
<p>사용법: def <strong>함수이름</strong> (parameter1, parameter2, parameter3…):</p>
</li>
<li>
<p>parameter는 함수로 부터 <strong>넘겨 받은 변수 또는 값</strong>이다</p>
</li>
<li>
<p>끝에 콜론 ( : ) 빼먹지 않음에 주의 해야함!</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc</span><span class="params">(var1)</span>:</span></span><br><span class="line">    print(var1)      <span class="comment"># 실행 명령</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myfunc(<span class="string">"안녕하세요"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<br>
<h2 id="3-함수는-값을-return할-수-있고-안해도-됨"><a class="markdownIt-Anchor" href="#3-함수는-값을-return할-수-있고-안해도-됨"></a> <strong>3. 함수는 값을 return할 수 있고, 안해도 됨</strong></h2>
<p><strong>리턴이 없는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    print(a, b)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(<span class="number">1</span>,<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1 10
</code></pre>
<br>
<p><strong>리턴이 있는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    s = a + b</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(<span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
<p><strong>리턴이 있는 경우는 변수에 값을 다시 할당 할 수 있음</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">result = my_func(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(result + <span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>15
</code></pre>
<p><br><br></p>
<h2 id="4-parameter가-여러-개-있으면-함수에-넘겨-줄-때-순서가-중요"><a class="markdownIt-Anchor" href="#4-parameter가-여러-개-있으면-함수에-넘겨-줄-때-순서가-중요"></a> <strong>4. parameter가 여러 개 있으면, 함수에 넘겨 줄 때 순서가 중요</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>90
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(a, b, c)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>90
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(c, b, a)   <span class="comment"># (c + b) * a = (3 + 20) * 10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>230
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초분법 (6)</title>
    <url>/2020/05/16/S-Python-base6/</url>
    <content><![CDATA[<p>패키지(Package) 와 import</p>
<a id="more"></a>
<h1 id="패키지package-와-import"><a class="markdownIt-Anchor" href="#패키지package-와-import"></a> <strong>패키지(Package) 와 import</strong></h1>
<h2 id="1-패키지와-모듈-그리고-함수의-관계도"><a class="markdownIt-Anchor" href="#1-패키지와-모듈-그리고-함수의-관계도"></a> <strong>1. 패키지와 모듈 그리고 함수의 관계도</strong></h2>
<ul>
<li>
<p><strong>함수</strong>들이 뭉쳐진 하나의 .py파일 안에 이루어진 것을 <strong>모듈</strong>이라고 한다</p>
</li>
<li>
<p>여러 개의 모듈을 그룹화 하면 <strong>패키지</strong>가 된다</p>
</li>
<li>
<p><strong>패키지</strong>는 종종 <strong>라이브러비</strong>라고도 불린다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># 출척: pythonstudy.xyz</span></span><br><span class="line">Image(<span class="string">'http://pythonstudy.xyz/images/basics/python-package.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<p><img src="http://pythonstudy.xyz/images/basics/python-package.png" alt="png"></p>
<p><br><br></p>
<h2 id="2-모듈-import-하기"><a class="markdownIt-Anchor" href="#2-모듈-import-하기"></a> <strong>2. 모듈 import 하기</strong></h2>
<p><strong>import 하는 방법</strong></p>
<p>.py (파이썬 파일 확장자)로 된 파일을 우리는 <strong>모듈</strong> 이라고 한다, import 구문을 통해 해당 파일을 불러올 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<p>위의 코드는 pandas라는 모듈을 우리가 불러오겠다라는 의미이다</p>
<p><br> <br></p>
<h2 id="3-패키지-에서-import하기"><a class="markdownIt-Anchor" href="#3-패키지-에서-import하기"></a> <strong>3. 패키지 에서 import하기</strong></h2>
<ul>
<li>패키지 안에서 하나의 모듈을 불러온다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame   <span class="comment"># pandas라는 패키지 안에서 DataFrame이라는 모듈을 불러온다</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">DataFrame()  <span class="comment"># 모듈 DataFrame사용</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
<ul>
<li>통째로 패키지나 모듈을 불러온다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pandas.DataFrame()  <span class="comment"># DataFrame이라는 모듈을 사용하기 위해서는 .을 찍고 이어서 쓰면 됨</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="4-별칭-alias-지어주기"><a class="markdownIt-Anchor" href="#4-별칭-alias-지어주기"></a> <strong>4. 별칭 (alias) 지어주기</strong></h2>
<p>pandas라는 패키지 이름이 너무 길기 때문에 우리는 약어로 줄여쓸 수 있다. 보통 pd를 보편적으로 많이 사용한다.</p>
<p>줄여서 별명을 지어줄 때는 as를 붙혀준다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
 <br> 
<h2 id="5-앞으로-자주-사용할-패키지-모듈-미리보기"><a class="markdownIt-Anchor" href="#5-앞으로-자주-사용할-패키지-모듈-미리보기"></a> <strong>5. 앞으로 자주 사용할 패키지, 모듈 미리보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>numpy: 과학계산을 위한 패키지</li>
<li>pandas: 데이터 분석을 할 때 가장 많이 쓰이는 패키지</li>
<li>matplotlib: 시각확를 위한 패키지</li>
<li>seaborn: 시각화를 위한 패키지 (matplotlib을 더 쉽게 사용할 수 있도록 도와주는 패키지)</li>
</ul>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
</search>
