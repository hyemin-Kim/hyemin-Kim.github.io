<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【실습】 SQL &gt;&gt; 집합 연산자와 서브쿼리</title>
    <url>/2020/12/01/E-SQL-Aggregate-and-SubQuery/</url>
    <content><![CDATA[<h1 id="실습-집합-연산자와-서브쿼리"><a class="markdownIt-Anchor" href="#실습-집합-연산자와-서브쿼리"></a> 【실습】 집합 연산자와 서브쿼리</h1>
<br>
<h3 id="1-아래-sql문은-film-테이블을-2번-스캔하고-rental_rate가-평균-이상인-film의-id-제목과-rental_rate를-출력했다-film-테이블을-한번만-scan하여-동일한-결과-집합을-구하는-sql을-작성하라"><a class="markdownIt-Anchor" href="#1-아래-sql문은-film-테이블을-2번-스캔하고-rental_rate가-평균-이상인-film의-id-제목과-rental_rate를-출력했다-film-테이블을-한번만-scan하여-동일한-결과-집합을-구하는-sql을-작성하라"></a> <strong>[1] 아래 SQL문은 FILM 테이블을 2번 스캔하고 RENTAL_RATE가 평균 이상인 FILM의 ID, 제목과 RENTAL_RATE를 출력했다. FILM 테이블을 한번만 SCAN하여 동일한 결과 집합을 구하는 SQL을 작성하라.</strong></h3>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201093133569.png" alt="image-20201201093133569" style="zoom:80%;">
<br>
<br>
<p><strong>&gt;&gt; 두 번 스캔</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span>  </span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  RENTAL_RATE &gt;</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">AVG</span>(RENTAL_RATE)</span><br><span class="line">  <span class="keyword">FROM</span> FILM</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201095113118.png" alt="image-20201201095113118" style="zoom:80%;">
<br>
<br>
<p><strong>&gt;&gt; 한 번만 스캔</strong></p>
<p><strong>1) 우선 분석함수 AVG를 사용해서 평균을 구한다.</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RENTAL_RATE,</span><br><span class="line">  <span class="keyword">AVG</span>(RENTAL_RATE) <span class="keyword">OVER</span>() <span class="keyword">AS</span> AVG_RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201101435553.png" alt="image-20201201101435553" style="zoom:80%;">
<br>
<br>
<p><strong>2) 1번에서 구한 집합을 인라인뷰로 감싸서 평균보다 큰 값을 구한다.</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID, TITLE, RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span></span><br><span class="line">    FILM_ID,</span><br><span class="line">    TITLE,</span><br><span class="line">    RENTAL_RATE,</span><br><span class="line">    <span class="keyword">AVG</span>(RENTAL_RATE) <span class="keyword">OVER</span>() <span class="keyword">AS</span> AVG_RENTAL_RATE</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    FILM</span><br><span class="line">) A</span><br><span class="line"><span class="keyword">WHERE</span> A.RENTAL_RATE &gt; A.AVG_RENTAL_RATE;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201095113118.png" alt="image-20201201095113118" style="zoom:80%;">
<br>
<ul>
<li>똑같은 결과가 나오는 것을 확인할 수 있다</li>
</ul>
<br>
<br>
<h3 id="2-아래-sql문은-except-연산을-사용하여-재고가-없는-영화를-구하고-있다-해당-sql문은-except연산을-사용하지-말고-같은-결과를-도출하라"><a class="markdownIt-Anchor" href="#2-아래-sql문은-except-연산을-사용하여-재고가-없는-영화를-구하고-있다-해당-sql문은-except연산을-사용하지-말고-같은-결과를-도출하라"></a> <strong>[2] 아래 SQL문은 EXCEPT 연산을 사용하여 재고가 없는 영화를 구하고 있다. 해당 SQL문은 EXCEPT연산을 사용하지 말고 같은 결과를 도출하라.</strong></h3>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201103003214.png" alt="image-20201201103003214" style="zoom:80%;">
<br>
<br>
<p><strong>&gt;&gt; EXCEPT 연산 사용</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID, TITLE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">EXCEPT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">  INVENTORY.FILM_ID, TITLE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  INVENTORY</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ON</span> FILM.FILM_ID = INVENTORY.FILM_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> TITLE;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201105357613.png" alt="image-20201201105357613" style="zoom:80%;">
<br>
<br>
<p><strong>&gt;&gt; NOT EXISTS 연산 사용</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  FILM_ID, </span><br><span class="line">  TITLE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  FILM F</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line"><span class="keyword">NOT</span> <span class="keyword">EXISTS</span> </span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> *</span><br><span class="line">    <span class="keyword">FROM</span> INVENTORY I</span><br><span class="line">   <span class="keyword">WHERE</span> F.FILM_ID = I.FILM_ID</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Aggregate-and-SubQuery/image-20201201105357613.png" alt="image-20201201105357613" style="zoom:80%;">
<br>
<ul>
<li>똑같은 결과가 나오는 것을 확인할 수 있다</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>SubQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Classification -- 포켓몬 분류 분석</title>
    <url>/2020/08/13/E-Python-Classification-1/</url>
    <content><![CDATA[<h1 id="classification-실습-포켓몬-데이터셋"><a class="markdownIt-Anchor" href="#classification-실습-포켓몬-데이터셋"></a> 【Classification 실습】 – 포켓몬 데이터셋</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-eda-exploratoty-data-analysis-%ED%83%90%EC%83%89%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D"><strong>2. EDA (Exploratoty Data Analysis: 탐색적 데이터 분석)</strong></a>
<ul>
<li><a href="#2-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4-%ED%83%90%EC%83%89">2-1. 데이터셋 기본 정보 탐색</a></li>
<li><a href="#2-2-%EB%B3%80%EC%88%98feature-%ED%8A%B9%EC%A7%95-%ED%83%90%EC%83%89">2-2. 변수(Feature) 특징 탐색</a>
<ul>
<li><a href="#1-%EA%B0%81-%EB%8A%A5%EB%A0%A5%EC%B9%98-%EB%B6%84%ED%8F%AC">(1) 각 능력치 분포</a></li>
<li><a href="#2-%EC%B4%9D-%EB%8A%A5%EB%A0%A5%EC%B9%98-total-%EB%B6%84%ED%8F%AC">(2) 총 능력치 (Total) 분포</a></li>
<li><a href="#3-%ED%8F%AC%EC%BC%93%EB%AA%AC-%ED%83%80%EC%9E%85-type-1-type-2-%EB%B6%84%ED%8F%AC">(3) 포켓몬 타입 (Type 1 &amp; Type 2) 분포</a></li>
<li><a href="#4-%ED%8F%AC%EC%BC%93%EB%AA%AC-%EC%84%B8%EB%8C%80generation-%EB%B6%84%ED%8F%AC">(4) 포켓몬 세대(Generation) 분포</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5-%EA%B8%B0%EB%B0%98-%EB%B6%84%EB%A5%98-%EB%B6%84%EC%84%9D-logistic-regression"><strong>3. 지도 학습 기반 분류 분석 – Logistic Regression</strong></a>
<ul>
<li><a href="#3-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC">3-1. 데이터 전처리</a>
<ul>
<li><a href="#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%EA%B2%BD">(1) 데이터 타입 변경</a></li>
<li><a href="#2-one-hot-encoding">(2) One-Hot Encoding</a></li>
<li><a href="#3-feature-%ED%8F%AC%EC%A4%80%ED%99%94">(3) Feature 포준화</a></li>
<li><a href="#4-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0">(4) Training set / Test set 나누기</a></li>
</ul>
</li>
<li><a href="#3-2-logistic-regression-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5">3-2. Logistic Regression 모델 학습</a>
<ul>
<li><a href="#1-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5">(1) 모델 학습</a></li>
<li><a href="#2-%EB%AA%A8%EB%8D%B8-%ED%8F%89%EA%B0%80">(2) 모델 평가</a></li>
</ul>
</li>
<li><a href="#3-3-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B6%88%EA%B7%A0%ED%98%95-%EC%A1%B0%EC%A0%95">3-3. 클래스 불균형 조정</a></li>
</ul>
</li>
<li><a href="#4-%EB%B9%84%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5-%EA%B8%B0%EB%B0%98-%EA%B5%B0%EC%A7%91-%EB%B6%84%EC%84%9D-k-means-clustering"><strong>4. 비지도 학습 기반 군집 분석 – K-Means Clustering</strong></a>
<ul>
<li><a href="#4-1-k-means-%EA%B5%B0%EC%A7%91-%EB%B6%84%EC%84%9D">4-1. K-Means 군집 분석</a>
<ul>
<li><a href="#1-2%EC%B0%A8%EC%9B%90-%EA%B5%B0%EC%A7%91-%EB%B6%84%EC%84%9D">(1) 2차원 군집 분석</a></li>
<li><a href="#2-%EB%8B%A4%EC%B0%A8%EC%9B%90-%EA%B5%B0%EC%A7%91-%EB%B6%84%EC%84%9D">(2) 다차원 군집 분석</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>포켓몬 데이터셋을 이용해 분류 분석을 진행합니다.</p>
<ul>
<li><strong>지도 학습 (Logistic Regression):</strong> “전설의 포켓몬” 여부 예측 – “Legendary” = 0/1</li>
<li><strong>비지도 학습 (K-Means Clustering):</strong> 포켓몬 군집 분석</li>
</ul>
<br>  
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">"ignore"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">'font.family'</span>] = <span class="string">'Malgun Gothic'</span>  <span class="comment"># 한글 깨짐 방지</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">'figure.figsize'</span>] = (<span class="number">10</span>, <span class="number">8</span>)  <span class="comment"># figsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
<br>  
<p><strong>&gt;&gt; 사용할 데이터셋 - Pokemon Dataset</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/Pokemon.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>#</th>
      <th>Name</th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Bulbasaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>Ivysaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>VenusaurMega Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>Charmander</td>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>Name: 포켓몬 이름</li>
<li>Type 1: 포켓몬 타입 1</li>
<li>Type 2: 포켓몬 타입 2</li>
<li>Total: 포켓몬 총 능력치 (Sum of ‘HP’, ‘Attack’, ‘Defense’, ‘Sp.Atk’, ‘Sp.Def’ and ‘Speed’)</li>
<li>HP: 포켓몬 HP 능력치</li>
<li>Attack: 포켓몬 Attack 능력치</li>
<li>Defense: 포켓몬 Defense 능력치</li>
<li>Sp.Atk: 포켓몬 Sp.Atk 능력치</li>
<li>Sp.Def: 포켓몬 Sp.Def 능력치</li>
<li>Speed: 포켓몬 Speed 능력치</li>
<li>Generation: 포켓몬 세대</li>
<li>Legendary: 전설의 포켓몬 여부</li>
</ul>
<p><br>  <br></p>
<h2 id="2-eda-exploratoty-data-analysis-탐색적-데이터-분석"><a class="markdownIt-Anchor" href="#2-eda-exploratoty-data-analysis-탐색적-데이터-분석"></a> <strong>2. EDA (Exploratoty Data Analysis: 탐색적 데이터 분석)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 그래프 배경 설정</span></span><br><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3 id="2-1-데이터셋-기본-정보-탐색"><a class="markdownIt-Anchor" href="#2-1-데이터셋-기본-정보-탐색"></a> 2-1. 데이터셋 기본 정보 탐색</h3>
<p><strong>&gt;&gt; 전체 데이터셋</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># demension</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(800, 13)
</code></pre>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information (data type)</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 800 entries, 0 to 799
Data columns (total 13 columns):
 #   Column      Non-Null Count  Dtype 
---  ------      --------------  ----- 
 0   #           800 non-null    int64 
 1   Name        800 non-null    object
 2   Type 1      800 non-null    object
 3   Type 2      414 non-null    object
 4   Total       800 non-null    int64 
 5   HP          800 non-null    int64 
 6   Attack      800 non-null    int64 
 7   Defense     800 non-null    int64 
 8   Sp. Atk     800 non-null    int64 
 9   Sp. Def     800 non-null    int64 
 10  Speed       800 non-null    int64 
 11  Generation  800 non-null    int64 
 12  Legendary   800 non-null    bool  
dtypes: bool(1), int64(9), object(3)
memory usage: 75.9+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>#               0
Name            0
Type 1          0
Type 2        386
Total           0
HP              0
Attack          0
Defense         0
Sp. Atk         0
Sp. Def         0
Speed           0
Generation      0
Legendary       0
dtype: int64
</code></pre>
  <br>
<p><strong>&gt;&gt; 개별 Feature 탐색</strong></p>
<ul>
<li><strong>분류할 목표 Feature</strong>: “Legendary” (전설의 포켓몬 여부)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># class 별 데이터 수 확인</span></span><br><span class="line">df[<span class="string">'Legendary'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False    735
True      65
Name: Legendary, dtype: int64
</code></pre>
 <br> 
<ul>
<li>“Generation” (포켓몬 세대)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 세대별 데이터 수 확인</span></span><br><span class="line">df[<span class="string">'Generation'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    166
5    165
3    160
4    121
2    106
6     82
Name: Generation, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 세대 순서로 데이터 갯수 시각화</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">df[<span class="string">'Generation'</span>].value_counts().sort_index().plot()</span><br><span class="line">plt.title(<span class="string">"'Generation 별 데이터 갯수'"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_34_0.png" alt="output_34_0"></p>
<br>
<ul>
<li>“Type 1” &amp; “Type 2” (포켓몬 타입)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># unique value of "Type 1"</span></span><br><span class="line">df[<span class="string">'Type 1'</span>].unique()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['Grass', 'Fire', 'Water', 'Bug', 'Normal', 'Poison', 'Electric',
       'Ground', 'Fairy', 'Fighting', 'Psychic', 'Rock', 'Ghost', 'Ice',
       'Dragon', 'Dark', 'Steel', 'Flying'], dtype=object)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># No. of unique value for "Type 1"</span></span><br><span class="line">len(df[<span class="string">'Type 1'</span>].unique())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>18
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># unique value of "Type 2"  (exclude "NaN")</span></span><br><span class="line">df[df[<span class="string">'Type 2'</span>].notnull()][<span class="string">'Type 2'</span>].unique()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['Poison', 'Flying', 'Dragon', 'Ground', 'Fairy', 'Grass',
       'Fighting', 'Psychic', 'Steel', 'Ice', 'Rock', 'Dark', 'Water',
       'Electric', 'Fire', 'Ghost', 'Bug', 'Normal'], dtype=object)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># No. of unique value for "Type 2"</span></span><br><span class="line">len(df[df[<span class="string">'Type 2'</span>].notnull()][<span class="string">'Type 2'</span>].unique())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>18
</code></pre>
  <br>
<h3 id="2-2-변수feature-특징-탐색"><a class="markdownIt-Anchor" href="#2-2-변수feature-특징-탐색"></a> 2-2. 변수(Feature) 특징 탐색</h3>
<p>각 변수(Feature)의 분포를 관찰함으로써, 변수들의 특징을 알아보도록 하겠습니다.</p>
<p>특히, 저희가 분류할 목표 Feature가 "Legendary"이므로, 각 변수의 분포를 탐색 시:</p>
<ol>
<li>각 항목(feature)에서 <strong>전체 데이터의 분포</strong> 뿐만 아닌</li>
<li><strong>"Legendary"변수 class 별의 데이터 분포</strong>도 함께 살펴볼게요.</li>
</ol>
   <br> 
<p><strong>GUIDE</strong></p>
<p>【전체 데이터 탐색】  <strong>&amp;</strong>  【“Legendary” class별 탐색】</p>
<ol>
<li>각 능력치 분포</li>
<li>총 능력치 (Toal) 분포</li>
<li>포켓몬 타입 (Type 1 &amp; Type 2) 분포</li>
<li>포켓몬 세대 (Generation) 분포</li>
</ol>
 <br> 
<h4 id="1-각-능력치-분포"><a class="markdownIt-Anchor" href="#1-각-능력치-분포"></a> (1) 각 능력치 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬의 각 능력치 분포</span></span><br><span class="line"></span><br><span class="line">stats = [<span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>] <span class="comment"># 능력치 변수 집합</span></span><br><span class="line">sns.boxplot(data = df[stats])</span><br><span class="line">plt.title(<span class="string">'각 능력치 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_48_0.png" alt="output_48_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 능력치 분포</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">16</span>, <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sns.boxplot(data = df[df[<span class="string">'Legendary'</span>]==<span class="number">1</span>][stats])</span><br><span class="line">plt.title(<span class="string">'Legendary = True'</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">sns.boxplot(data = df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>][stats])</span><br><span class="line">plt.title(<span class="string">'Legendary = False'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_50_0.png" alt="output_50_0"></p>
 <br>
<p>"전설의 포켓몬"은 전체적으로 더 높은 능력치를 보유하고 있으며, Attack와 Sp.Atk가 특히 높은 것으로 보입니다.</p>
 <br> 
<h4 id="2-총-능력치-total-분포"><a class="markdownIt-Anchor" href="#2-총-능력치-total-분포"></a> (2) 총 능력치 (Total) 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬의 총 능력치 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Total'</span>].hist(bins=<span class="number">50</span>)</span><br><span class="line">plt.title(<span class="string">'총 능력치 (Total) 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_54_0.png" alt="output_54_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 세대별 총 능력치 분포</span></span><br><span class="line">sns.boxplot(data = df, x = <span class="string">"Generation"</span>, y=<span class="string">"Total"</span>)</span><br><span class="line">plt.title(<span class="string">"세대별 총 능력치 분포"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_56_0.png" alt="output_56_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 세대 "전설의 포켓몬" 여부에 따른 총 능력치 분포</span></span><br><span class="line">sns.boxplot(data = df, x = <span class="string">"Generation"</span>, y=<span class="string">"Total"</span>, hue=<span class="string">"Legendary"</span>)</span><br><span class="line">plt.title(<span class="string">"각 세대 '전설의 포켓몬' 여부에 따른 총 능력치 분포"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_57_0.png" alt="output_57_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 타입(Type 1)별 총 능력치 분포</span></span><br><span class="line">sns.boxplot(data = df, x = <span class="string">'Type 1'</span>, y = <span class="string">'Total'</span>)</span><br><span class="line">plt.title(<span class="string">"타입(Type 1)별 총 능력치 분포"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_59_0.png" alt="output_59_0"></p>
<br>
<h4 id="3-포켓몬-타입-type-1-type-2-분포"><a class="markdownIt-Anchor" href="#3-포켓몬-타입-type-1-type-2-분포"></a> (3) 포켓몬 타입 (Type 1 &amp; Type 2) 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬 -- Type 1 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Type 1'</span>].value_counts(sort=<span class="literal">False</span>).sort_index().plot.barh()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2e92fab51c8&gt;
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_62_1.png" alt="output_62_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 Type 1 분포</span></span><br><span class="line"></span><br><span class="line">T1_Total = pd.DataFrame(df[<span class="string">'Type 1'</span>].value_counts().sort_index())</span><br><span class="line">T1_NotLeg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].groupby(<span class="string">'Type 1'</span>).size())</span><br><span class="line">T1_count = pd.concat([T1_Total, T1_NotLeg], axis = <span class="number">1</span>)</span><br><span class="line">T1_count.columns = [<span class="string">'Total'</span>, <span class="string">'Not Legend'</span>]</span><br><span class="line">T1_count[<span class="string">'Legend'</span>] = T1_count[<span class="string">'Total'</span>] - T1_count[<span class="string">'Not Legend'</span>]</span><br><span class="line">T1_count</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>Not Legend</th>
      <th>Legend</th>
    </tr>
    <tr>
      <th>Type 1</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bug</th>
      <td>69</td>
      <td>69</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Dark</th>
      <td>31</td>
      <td>29</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Dragon</th>
      <td>32</td>
      <td>20</td>
      <td>12</td>
    </tr>
    <tr>
      <th>Electric</th>
      <td>44</td>
      <td>40</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Fairy</th>
      <td>17</td>
      <td>16</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Fighting</th>
      <td>27</td>
      <td>27</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Fire</th>
      <td>52</td>
      <td>47</td>
      <td>5</td>
    </tr>
    <tr>
      <th>Flying</th>
      <td>4</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Ghost</th>
      <td>32</td>
      <td>30</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Grass</th>
      <td>70</td>
      <td>67</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Ground</th>
      <td>32</td>
      <td>28</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Ice</th>
      <td>24</td>
      <td>22</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Normal</th>
      <td>98</td>
      <td>96</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Poison</th>
      <td>28</td>
      <td>28</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Psychic</th>
      <td>57</td>
      <td>43</td>
      <td>14</td>
    </tr>
    <tr>
      <th>Rock</th>
      <td>44</td>
      <td>40</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Steel</th>
      <td>27</td>
      <td>23</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Water</th>
      <td>112</td>
      <td>108</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">T1_count[[<span class="string">'Not Legend'</span>, <span class="string">'Legend'</span>]].plot.barh(width=<span class="number">0.7</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2e92ff18b88&gt;
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_65_1.png" alt="output_65_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬 -- Type 2 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Type 2'</span>].value_counts(sort=<span class="literal">False</span>).sort_index().plot.barh()</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'"전설의 포켓몬" 여부에 따른 Type 1 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_67_0.png" alt="output_67_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 Type 2 분포</span></span><br><span class="line"></span><br><span class="line">T2_Total = pd.DataFrame(df[<span class="string">'Type 2'</span>].value_counts().sort_index())</span><br><span class="line">T2_NotLeg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].groupby(<span class="string">'Type 2'</span>).size())</span><br><span class="line">T2_count = pd.concat([T2_Total, T2_NotLeg], axis = <span class="number">1</span>)</span><br><span class="line">T2_count.columns = [<span class="string">'Total'</span>, <span class="string">'Not Legend'</span>]</span><br><span class="line">T2_count[<span class="string">'Legend'</span>] = T2_count[<span class="string">'Total'</span>] - T2_count[<span class="string">'Not Legend'</span>]</span><br><span class="line">T2_count</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>Not Legend</th>
      <th>Legend</th>
    </tr>
    <tr>
      <th>Type 2</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bug</th>
      <td>3</td>
      <td>3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Dark</th>
      <td>20</td>
      <td>19</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Dragon</th>
      <td>18</td>
      <td>14</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Electric</th>
      <td>6</td>
      <td>5</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Fairy</th>
      <td>23</td>
      <td>21</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Fighting</th>
      <td>26</td>
      <td>22</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Fire</th>
      <td>12</td>
      <td>9</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Flying</th>
      <td>97</td>
      <td>84</td>
      <td>13</td>
    </tr>
    <tr>
      <th>Ghost</th>
      <td>14</td>
      <td>13</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Grass</th>
      <td>25</td>
      <td>25</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Ground</th>
      <td>35</td>
      <td>34</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Ice</th>
      <td>14</td>
      <td>11</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Normal</th>
      <td>4</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Poison</th>
      <td>34</td>
      <td>34</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Psychic</th>
      <td>33</td>
      <td>28</td>
      <td>5</td>
    </tr>
    <tr>
      <th>Rock</th>
      <td>14</td>
      <td>14</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Steel</th>
      <td>22</td>
      <td>21</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Water</th>
      <td>14</td>
      <td>13</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">T2_count[[<span class="string">'Not Legend'</span>, <span class="string">'Legend'</span>]].plot.barh(width=<span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'"전설의 포켓몬" 여부에 따른 Type 2 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_70_0.png" alt="output_70_0"></p>
<br>
<h4 id="4-포켓몬-세대generation-분포"><a class="markdownIt-Anchor" href="#4-포켓몬-세대generation-분포"></a> (4) 포켓몬 세대(Generation) 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬 -- 세대 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Generation'</span>].value_counts().sort_index().plot.bar()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2e930887d08&gt;
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_73_1.png" alt="output_73_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 세대 분포</span></span><br><span class="line"></span><br><span class="line">gene_Leg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">1</span>].groupby(<span class="string">'Generation'</span>).size())</span><br><span class="line">gene_NotLeg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].groupby(<span class="string">'Generation'</span>).size())</span><br><span class="line">gene_count = pd.concat([gene_Leg, gene_NotLeg], axis=<span class="number">1</span>)</span><br><span class="line">gene_count.columns = [<span class="string">'Legend'</span>, <span class="string">'Not Legend'</span>]</span><br><span class="line">gene_count</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Legend</th>
      <th>Not Legend</th>
    </tr>
    <tr>
      <th>Generation</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>6</td>
      <td>160</td>
    </tr>
    <tr>
      <th>2</th>
      <td>5</td>
      <td>101</td>
    </tr>
    <tr>
      <th>3</th>
      <td>18</td>
      <td>142</td>
    </tr>
    <tr>
      <th>4</th>
      <td>13</td>
      <td>108</td>
    </tr>
    <tr>
      <th>5</th>
      <td>15</td>
      <td>150</td>
    </tr>
    <tr>
      <th>6</th>
      <td>8</td>
      <td>74</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">gene_count.plot.bar()</span><br><span class="line">plt.title(<span class="string">'"전설의 포켓몬" 여부에 따른 세대 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_76_0.png" alt="output_76_0"></p>
<br>
<br>
<h2 id="3-지도-학습-기반-분류-분석-logistic-regression"><a class="markdownIt-Anchor" href="#3-지도-학습-기반-분류-분석-logistic-regression"></a> <strong>3. 지도 학습 기반 분류 분석 – Logistic Regression</strong></h2>
<h3 id="3-1-데이터-전처리"><a class="markdownIt-Anchor" href="#3-1-데이터-전처리"></a> 3-1. 데이터 전처리</h3>
<h4 id="1-데이터-타입-변경"><a class="markdownIt-Anchor" href="#1-데이터-타입-변경"></a> (1) 데이터 타입 변경</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>#</th>
      <th>Name</th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Bulbasaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>Ivysaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>VenusaurMega Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>Charmander</td>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 800 entries, 0 to 799
Data columns (total 13 columns):
 #   Column      Non-Null Count  Dtype 
---  ------      --------------  ----- 
 0   #           800 non-null    int64 
 1   Name        800 non-null    object
 2   Type 1      800 non-null    object
 3   Type 2      414 non-null    object
 4   Total       800 non-null    int64 
 5   HP          800 non-null    int64 
 6   Attack      800 non-null    int64 
 7   Defense     800 non-null    int64 
 8   Sp. Atk     800 non-null    int64 
 9   Sp. Def     800 non-null    int64 
 10  Speed       800 non-null    int64 
 11  Generation  800 non-null    int64 
 12  Legendary   800 non-null    bool  
dtypes: bool(1), int64(9), object(3)
memory usage: 75.9+ KB
</code></pre>
<br>
<ul>
<li>
<p>분류예측 목표 Feature인 "Lengendary"의 값은 현재 “True”/"False"로 구성되어있습니다. 예측 모델에 적용하기 위해 “1”/"0"으로 바꾸겠습니다.</p>
</li>
<li>
<p>포켓몬의 세대를 나타나는 Feature인 "Generation"의 타입은 지금 "int"로 되어있지만, Feature의 의미상 해당 숫자는 분류 역할을 하고 있으므로 "str"타입으로 변환시키겠습니다.</p>
</li>
<li>
<p>분류 예측 시 이름 데이터가 예측에 도움이 없으므로 "Name"을 빼고 데이터셋을 제구성하겠습니다.</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'Legendary'</span>] = df[<span class="string">'Legendary'</span>].astype(int)</span><br><span class="line">df[<span class="string">'Generation'</span>] = df[<span class="string">'Generation'</span>].astype(str)</span><br><span class="line">preprocessed_df = df[[<span class="string">'Type 1'</span>, <span class="string">'Type 2'</span>, <span class="string">'Total'</span>, <span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, </span><br><span class="line">                      <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>, <span class="string">'Generation'</span>, <span class="string">'Legendary'</span>]]</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h4 id="2-one-hot-encoding"><a class="markdownIt-Anchor" href="#2-one-hot-encoding"></a> (2) One-Hot Encoding</h4>
<p>Categorical Variable에 대해서 dummy화 작업을 진행하겠습니다.</p>
<ul>
<li>
<p>1 data one-label: One-hot Encoding</p>
</li>
<li>
<p>1 data multi-label: Multi-label Encoding</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; 타입 (Type) – Multi-label Encoding</strong></p>
<ul>
<li>먼저 Type 1과 Type 2를 하나의 변수(Type)로 묶는다.</li>
<li>그 다음 1~2개의 label를 가진 Type변수에 대해서 Multi-label Encoding을 진행한다.</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># pokemon type list 생성</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_list</span><span class="params">(x1, x2)</span>:</span></span><br><span class="line">    type_list = []</span><br><span class="line">    type_list.append(x1)</span><br><span class="line">    <span class="keyword">if</span> x2 <span class="keyword">is</span> <span class="keyword">not</span> np.nan:</span><br><span class="line">        type_list.append(x2)</span><br><span class="line">    <span class="keyword">return</span> type_list</span><br><span class="line"></span><br><span class="line">preprocessed_df[<span class="string">'Type'</span>] = preprocessed_df.apply(<span class="keyword">lambda</span> x: make_list(x[<span class="string">'Type 1'</span>], x[<span class="string">'Type 2'</span>]), axis=<span class="number">1</span>)</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
      <td>[Fire]</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> preprocessed_df[<span class="string">'Type 1'</span>]</span><br><span class="line"><span class="keyword">del</span> preprocessed_df[<span class="string">'Type 2'</span>]</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
      <td>[Fire]</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># multi-lacel encoding</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MultiLabelBinarizer</span><br><span class="line"></span><br><span class="line">ml = MultiLabelBinarizer()</span><br><span class="line">preprocessed_df = preprocessed_df.join(pd.DataFrame(ml.fit_transform(preprocessed_df.pop(<span class="string">'Type'</span>)),</span><br><span class="line">                                                    columns = ml.classes_))</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<ul>
<li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.join.html" target="_blank" rel="noopener">[pandas.DataFrame.join]</a>: Join columns of another DataFrame</li>
<li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pop.html" target="_blank" rel="noopener">[pandas.DataFrame.pop (<em>item</em>) ]</a>: Return item and drop from frame</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>...</th>
      <th>Ghost</th>
      <th>Grass</th>
      <th>Ground</th>
      <th>Ice</th>
      <th>Normal</th>
      <th>Poison</th>
      <th>Psychic</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 27 columns</p>
</div>
</div>
 <br> 
<p><strong>&gt;&gt; 세대 (Generation) – One-hot Encoding</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># apply one-hot encoding to 'Generation'</span></span><br><span class="line">preprocessed_df = pd.get_dummies(preprocessed_df)  <span class="comment"># df name입력하면 str var를 자동 식별하여 encoding 진행함</span></span><br><span class="line"><span class="comment"># preprocessed_ddf = pd.get_dummies(preprocessed_df['Generation'])  # 작업할 var 지정</span></span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Psychic</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 32 columns</p>
</div>
</div>
<br>  
<h4 id="3-feature-포준화"><a class="markdownIt-Anchor" href="#3-feature-포준화"></a> (3) Feature 포준화</h4>
<p>Numerical Feature간의 Scale차이를 없애기 위해 feature 표준화를 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">preprocessed_df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 800 entries, 0 to 799
Data columns (total 32 columns):
 #   Column        Non-Null Count  Dtype
---  ------        --------------  -----
 0   Total         800 non-null    int64
 1   HP            800 non-null    int64
 2   Attack        800 non-null    int64
 3   Defense       800 non-null    int64
 4   Sp. Atk       800 non-null    int64
 5   Sp. Def       800 non-null    int64
 6   Speed         800 non-null    int64
 7   Legendary     800 non-null    int32
 8   Bug           800 non-null    int32
 9   Dark          800 non-null    int32
 10  Dragon        800 non-null    int32
 11  Electric      800 non-null    int32
 12  Fairy         800 non-null    int32
 13  Fighting      800 non-null    int32
 14  Fire          800 non-null    int32
 15  Flying        800 non-null    int32
 16  Ghost         800 non-null    int32
 17  Grass         800 non-null    int32
 18  Ground        800 non-null    int32
 19  Ice           800 non-null    int32
 20  Normal        800 non-null    int32
 21  Poison        800 non-null    int32
 22  Psychic       800 non-null    int32
 23  Rock          800 non-null    int32
 24  Steel         800 non-null    int32
 25  Water         800 non-null    int32
 26  Generation_1  800 non-null    uint8
 27  Generation_2  800 non-null    uint8
 28  Generation_3  800 non-null    uint8
 29  Generation_4  800 non-null    uint8
 30  Generation_5  800 non-null    uint8
 31  Generation_6  800 non-null    uint8
dtypes: int32(19), int64(7), uint8(6)
memory usage: 107.9 KB
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature standardization</span></span><br><span class="line">scaler = StandardScaler()</span><br><span class="line">scale_columns = [<span class="string">'Total'</span>, <span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>]</span><br><span class="line">preprocessed_df[scale_columns] = scaler.fit_transform(preprocessed_df[scale_columns])</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Psychic</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.976765</td>
      <td>-0.950626</td>
      <td>-0.924906</td>
      <td>-0.797154</td>
      <td>-0.239130</td>
      <td>-0.248189</td>
      <td>-0.801503</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.251088</td>
      <td>-0.362822</td>
      <td>-0.524130</td>
      <td>-0.347917</td>
      <td>0.219560</td>
      <td>0.291156</td>
      <td>-0.285015</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.749845</td>
      <td>0.420917</td>
      <td>0.092448</td>
      <td>0.293849</td>
      <td>0.831146</td>
      <td>1.010283</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.583957</td>
      <td>0.420917</td>
      <td>0.647369</td>
      <td>1.577381</td>
      <td>1.503891</td>
      <td>1.729409</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.051836</td>
      <td>-1.185748</td>
      <td>-0.832419</td>
      <td>-0.989683</td>
      <td>-0.392027</td>
      <td>-0.787533</td>
      <td>-0.112853</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 32 columns</p>
</div>
</div>
 <br> 
<h4 id="4-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#4-training-set-test-set-나누기"></a> (4) Training set / Test set 나누기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">X = preprocessed_df.loc[:, preprocessed_df.columns != <span class="string">'Legendary'</span>]</span><br><span class="line">y = preprocessed_df[<span class="string">'Legendary'</span>]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((600, 31), (600,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((200, 31), (200,))
</code></pre>
 <br> 
<h3 id="3-2-logistic-regression-모델-학습"><a class="markdownIt-Anchor" href="#3-2-logistic-regression-모델-학습"></a> 3-2. Logistic Regression 모델 학습</h3>
<h4 id="1-모델-학습"><a class="markdownIt-Anchor" href="#1-모델-학습"></a> (1) 모델 학습</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score, precision_score, recall_score, f1_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fit in Training set</span></span><br><span class="line">logit = LogisticRegression(random_state=<span class="number">0</span>)</span><br><span class="line">logit.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict in Test set</span></span><br><span class="line">y_pred = logit.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h4 id="2-모델-평가"><a class="markdownIt-Anchor" href="#2-모델-평가"></a> (2) 모델 평가</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># classification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"accuracy: %.2f"</span> % accuracy_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">"Precision: %.3f"</span> % precision_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">"Recall: %.3f"</span> % recall_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">"F1: %.3f"</span> % f1_score(y_test, y_pred))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 0.93
Precision: 0.615
Recall: 0.471
F1: 0.533
</code></pre>
<br>
<p>위 모델 평가 결과를 확인해보면, 해당 모델은 <strong>정확도(accuracy) 만</strong> 높고, 정밀도(Precision), 재현율(Recall), F1 score 등 모두 낮습니다. 이는 학습 데이터의 <strong>클래스 불균형으로 인한 정확도 함정</strong> 문제일 가능성이 높습니다. (참고: <a href="https://hyemin-kim.github.io/2020/07/26/S-Python-sklearn2/#4-2-%EC%A0%95%ED%99%95%EB%8F%84-accuracy">[Python &gt;&gt; sklearn - (2) 분류] 4-2. !!정확도 함정!!</a>)</p>
<p>추가 확인을 위해 Confusion Matrix를 출력해 봅니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"></span><br><span class="line"><span class="comment"># print confusion matrix</span></span><br><span class="line">confu = confusion_matrix(y_true = y_test, y_pred = y_pred)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_122_0.png" alt="output_122_0"></p>
<p>Positive Condition ( <em>“Legendary” = True/1</em> ) &lt;17&gt; 대비 Negative Condition ( <em>“Legendary” = False/0</em> ) &lt;183&gt;인 케이스가 훨씬 많다는 것을 볼 수 있습니다. 따라서, 클래스 불균형으로 인한 정확도 함정 문제가 맞으며, <strong>클래스 불균형을 조정</strong>한 후 다시 학습 시키도록 하겠습니다.</p>
<br>  
<h3 id="3-3-클래스-불균형-조정"><a class="markdownIt-Anchor" href="#3-3-클래스-불균형-조정"></a> 3-3. 클래스 불균형 조정</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">preprocessed_df[<span class="string">'Legendary'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    735
1     65
Name: Legendary, dtype: int64
</code></pre>
<br>  
<p><strong>&gt;&gt; 1:1 샘플링</strong></p>
<p>Positive Condition 케이스와 Negative Condition 케이스를 1:1비율로 샘플링 합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">positive_random_idx = preprocessed_df[preprocessed_df[<span class="string">'Legendary'</span>]==<span class="number">1</span>].sample(<span class="number">65</span>, random_state=<span class="number">12</span>).index.tolist()</span><br><span class="line">negative_random_idx = preprocessed_df[preprocessed_df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].sample(<span class="number">65</span>, random_state=<span class="number">12</span>).index.tolist()</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; Training set / Test set 나누기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">random_idx = positive_random_idx + negative_random_idx</span><br><span class="line">X = preprocessed_df.loc[random_idx, preprocessed_df.columns != <span class="string">'Legendary'</span>]</span><br><span class="line">y = preprocessed_df[<span class="string">'Legendary'</span>][random_idx]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((97, 31), (97,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((33, 31), (33,))
</code></pre>
<br>  
<p><strong>&gt;&gt; 모델 재학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Fit in Training set</span></span><br><span class="line">logit2 = LogisticRegression(random_state=<span class="number">0</span>)</span><br><span class="line">logit2.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict in Test set</span></span><br><span class="line">y_pred2 = logit2.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 모델 재평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># clssification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"accuracy: %.2f"</span> % accuracy_score(y_test, y_pred2))</span><br><span class="line">print(<span class="string">"Precision: %.3f"</span> % precision_score(y_test, y_pred2))</span><br><span class="line">print(<span class="string">"Recall: %.3f"</span> % recall_score(y_test, y_pred2))</span><br><span class="line">print(<span class="string">"F1: %.3f"</span> % f1_score(y_test, y_pred2))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 1.00
Precision: 1.000
Recall: 1.000
F1: 1.000
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line"></span><br><span class="line">confu2 = confusion_matrix(y_true=y_test, y_pred = y_pred2)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu2, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_143_0.png" alt="output_143_0"></p>
<p>클래스 불균형을 조정한 후, 새롭게 학습된 모델의 performance가 많이 좋아졌습니다.</p>
<p><br>  <br></p>
<h2 id="4-비지도-학습-기반-군집-분석-k-means-clustering"><a class="markdownIt-Anchor" href="#4-비지도-학습-기반-군집-분석-k-means-clustering"></a> <strong>4. 비지도 학습 기반 군집 분석 – K-Means Clustering</strong></h2>
<h3 id="4-1-k-means-군집-분석"><a class="markdownIt-Anchor" href="#4-1-k-means-군집-분석"></a> 4-1. K-Means 군집 분석</h3>
<h4 id="1-2차원-군집-분석"><a class="markdownIt-Anchor" href="#1-2차원-군집-분석"></a> (1) 2차원 군집 분석</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"></span><br><span class="line"><span class="comment"># K-means train &amp; Elbow method</span></span><br><span class="line">X = preprocessed_df[[<span class="string">'Attack'</span>, <span class="string">'Defense'</span>]]</span><br><span class="line"></span><br><span class="line">k_list = []</span><br><span class="line">cost_list = []</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range (<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">    kmeans = KMeans(n_clusters=k).fit(X)</span><br><span class="line">    interia = kmeans.inertia_  <span class="comment"># inertia: Sum of squared distances of samples to their closest cluster center.</span></span><br><span class="line">    print(<span class="string">"k:"</span>, k, <span class="string">"| cost:"</span>, interia)</span><br><span class="line">    k_list.append(k)</span><br><span class="line">    cost_list.append(interia)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">plt.plot(k_list, cost_list)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>k: 1 | cost: 1600.0
k: 2 | cost: 853.3477298974242
k: 3 | cost: 642.3911470107209
k: 4 | cost: 480.49450250321513
k: 5 | cost: 403.97191765107124
k: 6 | cost: 343.98696660525184
k: 7 | cost: 295.56093457429847



[&lt;matplotlib.lines.Line2D at 0x2e930467c48&gt;]
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_151_2.png" alt="output_151_2"></p>
<br>
<p>추세를 봤을 때, 4 clusters가 제일 적당한 것으로 보입니다.</p>
<p>따라서, cluster를 4로 지정한 후 다시 학습시킨 뒤, 각 데이터가 분류된 cluster 결과를 원 데이터셋에 추가합니다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># k-means fitting and predict</span></span><br><span class="line">kmeans = KMeans(n_clusters=<span class="number">4</span>).fit(X)</span><br><span class="line">cluster_num = pd.Series(kmeans.predict(X))</span><br><span class="line">preprocessed_df[<span class="string">'cluster_num'</span>] = cluster_num.values</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
      <th>cluster_num</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.976765</td>
      <td>-0.950626</td>
      <td>-0.924906</td>
      <td>-0.797154</td>
      <td>-0.239130</td>
      <td>-0.248189</td>
      <td>-0.801503</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.251088</td>
      <td>-0.362822</td>
      <td>-0.524130</td>
      <td>-0.347917</td>
      <td>0.219560</td>
      <td>0.291156</td>
      <td>-0.285015</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.749845</td>
      <td>0.420917</td>
      <td>0.092448</td>
      <td>0.293849</td>
      <td>0.831146</td>
      <td>1.010283</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.583957</td>
      <td>0.420917</td>
      <td>0.647369</td>
      <td>1.577381</td>
      <td>1.503891</td>
      <td>1.729409</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.051836</td>
      <td>-1.185748</td>
      <td>-0.832419</td>
      <td>-0.989683</td>
      <td>-0.392027</td>
      <td>-0.787533</td>
      <td>-0.112853</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 33 columns</p>
</div>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(preprocessed_df[<span class="string">'cluster_num'</span>].value_counts())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    309
0    253
3    128
1    110
Name: cluster_num, dtype: int64
</code></pre>
<br>
<p><strong>&gt;&gt; 군집 시각화</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Visualization</span></span><br><span class="line"></span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">0</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">0</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'red'</span>, alpha = <span class="number">0.5</span>, label = <span class="string">'Pokemon Group 1'</span>)</span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">1</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">1</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'green'</span>, alpha = <span class="number">0.7</span>, label = <span class="string">'Pokemon Group 2'</span>)</span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">2</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">2</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'blue'</span>, alpha = <span class="number">0.5</span>, label = <span class="string">'Pokemon Group 3'</span>)</span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">3</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">3</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'yellow'</span>, alpha = <span class="number">0.8</span>, label = <span class="string">'Pokemon Group 4'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Pokemon Cluster by "Attack" &amp; "Defense"'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Attack'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Defense'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_157_0.png" alt="output_157_0"></p>
<br>
<h4 id="2-다차원-군집-분석"><a class="markdownIt-Anchor" href="#2-다차원-군집-분석"></a> (2) 다차원 군집 분석</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"></span><br><span class="line"><span class="comment"># K-Means train &amp; Elbow method</span></span><br><span class="line">X = preprocessed_df[[<span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>]]</span><br><span class="line"></span><br><span class="line">k_list = []</span><br><span class="line">cost_list = []</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range (<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">    kmeans = KMeans(n_clusters=k).fit(X)</span><br><span class="line">    interia = kmeans.inertia_  <span class="comment"># inertia: Sum of squared distances of samples to their closest cluster center.</span></span><br><span class="line">    print(<span class="string">"k:"</span>, k, <span class="string">"| cost:"</span>, interia)</span><br><span class="line">    k_list.append(k)</span><br><span class="line">    cost_list.append(interia)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">plt.plot(k_list, cost_list)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>k: 1 | cost: 4800.0
k: 2 | cost: 3275.3812330305977
k: 3 | cost: 2862.057922495397
k: 4 | cost: 2566.5807792995274
k: 5 | cost: 2328.0706840275643
k: 6 | cost: 2182.759972635841
k: 7 | cost: 2070.734327066247
k: 8 | cost: 1957.5240844927844
k: 9 | cost: 1854.3770148227836
k: 10 | cost: 1778.3178764912984
k: 11 | cost: 1721.845255688537
k: 12 | cost: 1644.3967658442484
k: 13 | cost: 1579.4938049394318
k: 14 | cost: 1536.785887021493



[&lt;matplotlib.lines.Line2D at 0x2e930efbb88&gt;]
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_160_2.png" alt="output_160_2"></p>
<br>
<p>이 경우에는 cluster가 5일 때가 제일 적당해 보입니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># k-means fitting and predict</span></span><br><span class="line">kmeans = KMeans(n_clusters=<span class="number">5</span>).fit(X)</span><br><span class="line">cluster_num = pd.Series(kmeans.predict(X))</span><br><span class="line">preprocessed_df[<span class="string">'cluster_num'</span>] = cluster_num.values</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
      <th>cluster_num</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.976765</td>
      <td>-0.950626</td>
      <td>-0.924906</td>
      <td>-0.797154</td>
      <td>-0.239130</td>
      <td>-0.248189</td>
      <td>-0.801503</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.251088</td>
      <td>-0.362822</td>
      <td>-0.524130</td>
      <td>-0.347917</td>
      <td>0.219560</td>
      <td>0.291156</td>
      <td>-0.285015</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.749845</td>
      <td>0.420917</td>
      <td>0.092448</td>
      <td>0.293849</td>
      <td>0.831146</td>
      <td>1.010283</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.583957</td>
      <td>0.420917</td>
      <td>0.647369</td>
      <td>1.577381</td>
      <td>1.503891</td>
      <td>1.729409</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.051836</td>
      <td>-1.185748</td>
      <td>-0.832419</td>
      <td>-0.989683</td>
      <td>-0.392027</td>
      <td>-0.787533</td>
      <td>-0.112853</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 33 columns</p>
</div>
</div>
<br>  
<p><strong>&gt;&gt; 군집별 특성 시각화</strong></p>
<p>2차원이 아니기 때문에 위와 같이 군집 결과를 시각화하기 어렵습니다.</p>
<p>군집화 결과를 확인하기 위해 <strong>각 Feature의 군집별 특성</strong>을 시각화하도록 하겠습니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># HP</span></span><br><span class="line">sns.boxplot(x = <span class="string">"cluster_num"</span>, y = <span class="string">"HP"</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "HP" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_167_0.png" alt="output_167_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Attack</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Attack'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Attack" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_169_0.png" alt="output_169_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Defense</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Defense'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Defense" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_171_0.png" alt="output_171_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Sp. Atk</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Sp. Atk'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Sp. Atk" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_173_0.png" alt="output_173_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Sp. Def</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Sp. Def'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Sp. Def" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_175_0.png" alt="output_175_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Speed</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Speed'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Speed" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_177_0.png" alt="output_177_0"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>분류</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 SQL &gt;&gt; 데이터 조회 및 필터링</title>
    <url>/2020/11/10/E-SQL-selecting-and-filtering/</url>
    <content><![CDATA[<h1 id="실습-데이터-조회-및-필터링"><a class="markdownIt-Anchor" href="#실습-데이터-조회-및-필터링"></a> 【실습】 데이터 조회 및 필터링</h1>
<br>
<h3 id="1-payment-테이블에서-단일-거래의-amount의-액수가-가장-많은-고객들의-customer_id를-추출하라-단-customer_id의-값은-유일해야-한다"><a class="markdownIt-Anchor" href="#1-payment-테이블에서-단일-거래의-amount의-액수가-가장-많은-고객들의-customer_id를-추출하라-단-customer_id의-값은-유일해야-한다"></a> <strong>[1] PAYMENT 테이블에서 단일 거래의 AMOUNT의 액수가 가장 많은 고객들의 CUSTOMER_ID를 추출하라. 단, CUSTOMER_ID의 값은 유일해야 한다.</strong></h3>
<table>
<thead>
<tr>
<th style="text-align:center">payment</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">* payment_id <br>customer_id <br>staff_id <br>rental_id <br>amount <br>payment_date</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; 문제 풀이</strong></p>
<ol>
<li>
<p>우선 전체 거래 중 AMOUNT의 액수가 가장 큰 AMOUNT를 구한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> AMOUNT</span><br><span class="line">  <span class="keyword">FROM</span> PAYMENT</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-SQL-selecting-and-filtering/image-20201110202739100.png" alt=""></p>
<br>
</li>
<li>
<p>그 다음 PAYMENT 테이블에서 가장 큰 AMOUNT를 가진 CUMSTOMER_ID를 구하고 중복을 제거한다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> A.CUSTOMER_ID</span><br><span class="line"><span class="keyword">FROM</span> PAYMENT A</span><br><span class="line"><span class="keyword">WHERE</span> A.AMOUNT = (</span><br><span class="line">         <span class="keyword">SELECT</span> B.AMOUNT</span><br><span class="line">           <span class="keyword">FROM</span> PAYMENT B</span><br><span class="line">         <span class="keyword">ORDER</span> <span class="keyword">BY</span> B.AMOUNT <span class="keyword">DESC</span></span><br><span class="line">    	 <span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-selecting-and-filtering/image-20201110203211887.png" alt="image-20201110203211887" style="zoom:80%;">
</li>
</ol>
<br>
<br>
<h3 id="2-고객들에게-단체-이메일을-전송하고자-한다-customer-테이블에서-고객의-email-주소를-추출하고-이메일-형식에-맞지-않은-이메일-주소는-제외시켜라"><a class="markdownIt-Anchor" href="#2-고객들에게-단체-이메일을-전송하고자-한다-customer-테이블에서-고객의-email-주소를-추출하고-이메일-형식에-맞지-않은-이메일-주소는-제외시켜라"></a> <strong>[2]  고객들에게 단체 이메일을 전송하고자 한다.  CUSTOMER 테이블에서 고객의 EMAIL 주소를 추출하고, 이메일 형식에 맞지 않은 이메일 주소는 제외시켜라.</strong></h3>
<p><strong>(이메일 형식은: '@'가 존재해야 하고; '@'로 시작하지 말아야 하고; '@'로 끝나지 말아야 한다.)</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">customer</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">* customer_id <br>store_id <br>first_name <br>email <br>address_id <br>activebool <br>create_date <br>last_update <br>active</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; 문제 풀이</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> EMAIL</span><br><span class="line">  <span class="keyword">FROM</span> CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span>  EMAIL <span class="keyword">LIKE</span> <span class="string">'%@%'</span></span><br><span class="line">   <span class="keyword">AND</span> EMAIL <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'@%'</span></span><br><span class="line">   <span class="keyword">AND</span> EMAIL <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'%@'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-selecting-and-filtering/image-20201110205604326.png" alt="image-20201110205604326" style="zoom:80%;">
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Selecting</tag>
        <tag>Filtering</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 SQL &gt;&gt; 데이터 조작 및 테이블 관리</title>
    <url>/2020/12/22/E-SQL-Manipulation-and-Table/</url>
    <content><![CDATA[<h1 id="실습-데이터-조작-및-테이블-관리"><a class="markdownIt-Anchor" href="#실습-데이터-조작-및-테이블-관리"></a> 【실습】 데이터 조작 및 테이블 관리</h1>
<br>
<h3 id="1-dvd렌탈-시스템의-관리자가-고객별-매출-순위를-알고-싶다-신규-테이블을-생성해서-고객의-매출-순위를-관리하고-싶으며-신규-테이블의-이름은-customer_rank이고-테이블-구성은-customer_id-customer_rank로-정했다-ctas-기법을-이용하여-신규-테이블을-생성하면서-데이터를-입력해라"><a class="markdownIt-Anchor" href="#1-dvd렌탈-시스템의-관리자가-고객별-매출-순위를-알고-싶다-신규-테이블을-생성해서-고객의-매출-순위를-관리하고-싶으며-신규-테이블의-이름은-customer_rank이고-테이블-구성은-customer_id-customer_rank로-정했다-ctas-기법을-이용하여-신규-테이블을-생성하면서-데이터를-입력해라"></a> [1]  DVD렌탈 시스템의 관리자가 고객별 매출 순위를 알고 싶다. 신규 테이블을 생성해서 고객의 매출 순위를 관리하고 싶으며 신규 테이블의 이름은 CUSTOMER_RANK이고 테이블 구성은 CUSTOMER_ID, CUSTOMER_RANK로 정했다. CTAS 기법을 이용하여 신규 테이블을 생성하면서 데이터를 입력해라.</h3>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222171831673.png" alt="image-20201222171831673" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 문제 풀이</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PAYMENT <span class="keyword">LIMIT</span> <span class="number">10</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222175413890.png" alt="image-20201222175413890" style="zoom:80%;">
<br>
<br>
<ol>
<li>
<p><strong>우선 고객별 총 매출액을 계산한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> CUSTOMER_ID,</span><br><span class="line">         <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line">    <span class="keyword">FROM</span> PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> CUSTOMER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT_SUM <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222172206108.png" alt="image-20201222172206108" style="zoom:80%;">
<br>
<br>
</li>
<li>
<p><strong>그 다음 고객 총매출 순위를 매긴다 (내림차순)</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.CUSTOMER_ID,</span><br><span class="line">       <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> A.AMOUNT_SUM <span class="keyword">DESC</span>) <span class="keyword">AS</span> CUSTOMER_RANK</span><br><span class="line">  <span class="keyword">FROM</span> (</span><br><span class="line">          <span class="keyword">SELECT</span> CUSTOMER_ID,</span><br><span class="line">          		 <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line">    	    <span class="keyword">FROM</span> PAYMENT</span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> CUSTOMER_ID</span><br><span class="line">        <span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT_SUM <span class="keyword">DESC</span></span><br><span class="line">       ) A;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222172543446.png" alt="image-20201222172543446" style="zoom:80%;">
</li>
</ol>
<br>
<ol start="3">
<li>
<p><strong>마지막으로 CTAS 문을 이용하여 CUSTOMER_RANK 테이블 생성하고 데이터를 입력한다.</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CUSTOMER_RANK (CUSTOMER_ID, CUSTOMER_RANK) <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> A.CUSTOMER_ID,</span><br><span class="line">       <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> A.AMOUNT_SUM <span class="keyword">DESC</span>) <span class="keyword">AS</span> CUSTOMER_RANK</span><br><span class="line">  <span class="keyword">FROM</span> (</span><br><span class="line">          <span class="keyword">SELECT</span> CUSTOMER_ID,</span><br><span class="line">          		 <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line">    	    <span class="keyword">FROM</span> PAYMENT</span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> CUSTOMER_ID</span><br><span class="line">        <span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT_SUM <span class="keyword">DESC</span></span><br><span class="line">       ) A;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMER_RANK;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222172543446.png" alt="image-20201222172543446" style="zoom:80%;">
</li>
</ol>
<br>
<br>
<br>
<h3 id="2-dvd렌탈-시스템의-관리자는-매달-마다-매출-순위-1위를-한-고객에게-특별한-선물을-주고자-한다-이러한-업무를-달성하기-위해서-customer_rank_yyyymm이라는-테이블을-ctas-기법으로-생성하는-sql문을-작성하라-단-선물-제공-기준을-정하기-위해-고객별-총-매출액도-저장하라"><a class="markdownIt-Anchor" href="#2-dvd렌탈-시스템의-관리자는-매달-마다-매출-순위-1위를-한-고객에게-특별한-선물을-주고자-한다-이러한-업무를-달성하기-위해서-customer_rank_yyyymm이라는-테이블을-ctas-기법으로-생성하는-sql문을-작성하라-단-선물-제공-기준을-정하기-위해-고객별-총-매출액도-저장하라"></a> [2] DVD렌탈 시스템의 관리자는 매달 마다 매출 순위 1위를 한 고객에게 특별한 선물을 주고자 한다. 이러한 업무를 달성하기 위해서 CUSTOMER_RANK_YYYYMM이라는 테이블을 CTAS 기법으로 생성하는 SQL문을 작성하라. (단 선물 제공 기준을 정하기 위해 고객별 총 매출액도 저장하라)</h3>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222185331599.png" alt="image-20201222185331599" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 문제 풀이</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PAYMENT <span class="keyword">LIMIT</span> <span class="number">10</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222175413890.png" alt="image-20201222175413890" style="zoom:80%;">
<br>
<br>
<ol>
<li>
<p><strong>먼저 년월별 고객별 총 매출액을 계산한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">  <span class="keyword">SELECT</span> CUSTOMER_ID,</span><br><span class="line">         TO_CHAR(PAYMENT_DATE, <span class="string">'YYYYMM'</span>) <span class="keyword">AS</span> YYYYMM,</span><br><span class="line">         <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line">    <span class="keyword">FROM</span> PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> TO_CHAR(PAYMENT_DATE, <span class="string">'YYYYMM'</span>),</span><br><span class="line">         CUSTOMER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> YYYYMM, AMOUNT_SUM <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222184237522.png" alt="image-20201222184237522" style="zoom:80%;">
</li>
</ol>
<br>
<ol start="2">
<li>
<p><strong>총 매출액 기준으로 년월별 고객 순위를 매긴다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.CUSTOMER_ID,</span><br><span class="line">       A.YYYYMM,</span><br><span class="line">       A.AMOUNT_SUM,</span><br><span class="line">       <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> A.YYYYMM <span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT_SUM <span class="keyword">DESC</span>) <span class="keyword">AS</span> RANK_YYYYMM</span><br><span class="line">  <span class="keyword">FROM</span> (</span><br><span class="line">		  <span class="keyword">SELECT</span> CUSTOMER_ID,</span><br><span class="line">		         TO_CHAR(PAYMENT_DATE, <span class="string">'YYYYMM'</span>) <span class="keyword">AS</span> YYYYMM,</span><br><span class="line">		         <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line">		    <span class="keyword">FROM</span> PAYMENT</span><br><span class="line">		<span class="keyword">GROUP</span> <span class="keyword">BY</span> TO_CHAR(PAYMENT_DATE, <span class="string">'YYYYMM'</span>),</span><br><span class="line">		         CUSTOMER_ID</span><br><span class="line">		<span class="keyword">ORDER</span> <span class="keyword">BY</span> YYYYMM, AMOUNT_SUM <span class="keyword">DESC</span> </span><br><span class="line">       ) A;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222184359999.png" alt="image-20201222184359999" style="zoom:80%;">
</li>
</ol>
<br>
<ol start="3">
<li>
<p><strong>마지막으로 CTAS 문을 이용하여 CUSTOMER_RANK_YYYYMM테이블 생성하고 데이터를 입력한다.</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CUSTOMER_RANK_YYYYMM <span class="keyword">AS</span>      </span><br><span class="line"><span class="keyword">SELECT</span> A.CUSTOMER_ID,</span><br><span class="line">       A.YYYYMM,</span><br><span class="line">       A.AMOUNT_SUM,</span><br><span class="line">       <span class="keyword">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> A.YYYYMM <span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT_SUM <span class="keyword">DESC</span>) <span class="keyword">AS</span> RANK_YYYYMM</span><br><span class="line">  <span class="keyword">FROM</span> (</span><br><span class="line">		  <span class="keyword">SELECT</span> CUSTOMER_ID,</span><br><span class="line">		         TO_CHAR(PAYMENT_DATE, <span class="string">'YYYYMM'</span>) <span class="keyword">AS</span> YYYYMM,</span><br><span class="line">		         <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line">		    <span class="keyword">FROM</span> PAYMENT</span><br><span class="line">		<span class="keyword">GROUP</span> <span class="keyword">BY</span> TO_CHAR(PAYMENT_DATE, <span class="string">'YYYYMM'</span>),</span><br><span class="line">		         CUSTOMER_ID</span><br><span class="line">		<span class="keyword">ORDER</span> <span class="keyword">BY</span> YYYYMM, AMOUNT_SUM <span class="keyword">DESC</span> </span><br><span class="line">       ) A;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FORM</span> CUSTOMER_RANK_YYYYMM;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-Manipulation-and-Table/image-20201222184557948.png" alt="image-20201222184557948" style="zoom:80%;">
</li>
</ol>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Manipulation</tag>
        <tag>Table</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 SQL &gt;&gt; 조인과 집계 데이터</title>
    <url>/2020/11/19/E-SQL-join-and-aggregate/</url>
    <content><![CDATA[<h1 id="실습-조인과-집계-데이터"><a class="markdownIt-Anchor" href="#실습-조인과-집계-데이터"></a> 【실습】 조인과 집계 데이터</h1>
<br>
<h4 id="1-rental-테이블을-이용하여-연-연월-연월일-전체-각각의-기준으로-rental_id-기준-렌탈이-일어난-횟수를-출력하라-전체-데이터-기준으로-모든-행을-출력"><a class="markdownIt-Anchor" href="#1-rental-테이블을-이용하여-연-연월-연월일-전체-각각의-기준으로-rental_id-기준-렌탈이-일어난-횟수를-출력하라-전체-데이터-기준으로-모든-행을-출력"></a> <strong>[1] RENTAL 테이블을 이용하여 연, 연월, 연월일, 전체 각각의 기준으로 RENTAL_ID 기준 렌탈이 일어난 횟수를 출력하라. (전체 데이터 기준으로 모든 행을 출력)</strong></h4>
<br>
<img src="/images/E-SQL-join-and-aggregate/image-20201119085019530.png" alt="image-20201119085019530" style="zoom: 67%;">
<br>
<br>
<p><strong>&gt;&gt; 문제 풀이</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> RENTAL;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-join-and-aggregate/image-20201119085317448.png" alt="image-20201119085317448" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  TO_CHAR(RENTAL_DATE, <span class="string">'YYYY'</span>),</span><br><span class="line">  TO_CHAR(RENTAL_DATE, <span class="string">'MM'</span>),</span><br><span class="line">  TO_CHAR(RENTAL_DATE, <span class="string">'DD'</span>),</span><br><span class="line">  <span class="keyword">COUNT</span> (RENTAL_ID)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">ROLLUP</span> (TO_CHAR(RENTAL_DATE, <span class="string">'YYYY'</span>),</span><br><span class="line">          TO_CHAR(RENTAL_DATE, <span class="string">'MM'</span>),</span><br><span class="line">  		  TO_CHAR(RENTAL_DATE, <span class="string">'DD'</span>));</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-join-and-aggregate/image-20201119130425101.png" alt="image-20201119130425101" style="zoom:67%;">
<img src="/images/E-SQL-join-and-aggregate/image-20201119130531222.png" alt="image-20201119130531222" style="zoom:67%;">
<br>
<br>
<h3 id="2-rental과-customer-테이블을-이용하여-현재까지-가장-많이-rental을-한-고객의-고객id-렌탈순위-누적렌탈횟수-이름을-출력하라"><a class="markdownIt-Anchor" href="#2-rental과-customer-테이블을-이용하여-현재까지-가장-많이-rental을-한-고객의-고객id-렌탈순위-누적렌탈횟수-이름을-출력하라"></a> [2] RENTAL과 CUSTOMER 테이블을 이용하여 현재까지 가장 많이 RENTAL을 한 고객의 고객ID, 렌탈순위, 누적렌탈횟수, 이름을 출력하라.</h3>
<br>
<img src="/images/E-SQL-join-and-aggregate/image-20201119131041452.png" alt="image-20201119131041452" style="zoom:67%;">
<br>
<br>
<p><strong>&gt;&gt; 문제 풀이</strong></p>
<p><strong>(1) 가장 먼저 RENTAL 순위를 구해야 한다.</strong></p>
<ul>
<li>고객 별로 렌탈 횟수 구함</li>
<li>ROW_NUMBER() 를 이용해 순위 번호 생성 (렌탈 횟수를 내림차순으로 정렬한 후 생성)</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  ROW_NUMBER() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">COUNT</span>(RENTAL_ID) <span class="keyword">DESC</span>) <span class="keyword">AS</span> RENTAL_RANK,</span><br><span class="line">  <span class="keyword">COUNT</span>(RENTAL_ID) <span class="keyword">AS</span> RENTAL_COUNT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  RANTAL</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">  CUSTOMER_ID;</span><br><span class="line">  </span><br><span class="line"><span class="comment">-- CUSTOMER_ID 기준으로 GROUP BY 했기 때문에 ROW_NUMBER()에서 PARTITION BY가 생략되었다.</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-join-and-aggregate/image-20201119143530660.png" alt="image-20201119143530660" style="zoom:80%;">
<br>
<br>
<p><strong>(2) 이 상태에서 첫번째 순위인 데이처를 추출 (가장 많이 RENTAL 한 고객의 데이터)</strong></p>
<ul>
<li>ORDER BY + LIMIT 이용</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  ROW_NUMBER() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">COUNT</span>(RENTAL_ID) <span class="keyword">DESC</span>) <span class="keyword">AS</span> RENTAL_RANK,</span><br><span class="line">  <span class="keyword">COUNT</span>(RENTAL_ID) <span class="keyword">AS</span> RENTAL_COUNT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">  CUSTOMER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  RENTAL_COUNT <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/E-SQL-join-and-aggregate/image-20201119144824759.png" alt="image-20201119144824759">
<br>
<br>
<p><strong>(3) 마지막으로 CUSTOMER 테이블과 조인하여 해당 고객의 이름을 출력한다</strong></p>
<ol>
<li>
<p>직접 조인</p>
<ul>
<li>CUSTOMER_ID 기준으로 GROUP BY 되어 있으므로 FIRST_NAME, LAST_NAME에 MAX함수를 사용해서 출력한다.</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"> A.CUSTOMER_ID,</span><br><span class="line"> ROW_NUMBER() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">COUNT</span>(A.RENTAL_ID) <span class="keyword">DESC</span>) <span class="keyword">AS</span> RENTAL_RANK,</span><br><span class="line"> <span class="keyword">COUNT</span>(A.RENTAL_ID) <span class="keyword">AS</span> RENTAL_COUNT,</span><br><span class="line"> <span class="keyword">MAX</span>(B.FIRST_NAME) <span class="keyword">AS</span> FIRST_NAME,</span><br><span class="line"> <span class="keyword">MAX</span>(B.LAST_NAME) <span class="keyword">AS</span> LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"> RENTAL A, CUSTOMER B</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line"> A.CUSTOMER_ID = B.CUSTOMER_ID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line"> A.CUSTOMER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line"> RENTAL_COUNT <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-SQL-join-and-aggregate/image-20201119144959120.png" alt="image-20201119144959120"></p>
</li>
</ol>
<br>
<ol start="2">
<li>
<p>서브커리 활용</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  B.CUSTOMER_ID,</span><br><span class="line">  B.RENTAL_RANK,</span><br><span class="line">  B.RENTAL_COUNT,</span><br><span class="line">  C.FIRST_NAME,</span><br><span class="line">  C.LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  A.CUSTOMER_ID,</span><br><span class="line">  ROW_NUMBER() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">COUNT</span>(A.RENTAL_ID) <span class="keyword">DESC</span>) <span class="keyword">AS</span> RENTAL_RANK,</span><br><span class="line">  <span class="keyword">COUNT</span>(A.RENTAL_ID) <span class="keyword">AS</span> RENTAL_COUNT</span><br><span class="line"><span class="keyword">FROM</span> RENTAL A</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  CUSTOMER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  RENTAL_COUNT <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span></span><br><span class="line">) B, CUSTOMER C</span><br><span class="line"><span class="keyword">WHERE</span> B.CUSTOMER_ID = C.CUSTOMER_ID;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-SQL-join-and-aggregate/image-20201119144959120.png" alt="image-20201119144959120"></p>
</li>
</ol>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Join</tag>
        <tag>Aggregate</tag>
      </tags>
  </entry>
  <entry>
    <title>在Hexo博文中添加本地图片的方法（基于Typora编辑器）</title>
    <url>/2020/05/12/Hexo-Insert-local-images/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<p>当我们想在markdown文档中添加网络图片时，可以使用命令<code>!['图片名称'](图片网络地址)</code>进行实现，然而这条命令却不适用于添加本地图片。本文将介绍在使用Typora编辑器编辑Hexo博文时，向markdown文档中添加本地图片的方法。快来看看吧</p>
<a id="more"></a>
<br>
<p></p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%89%8D-%E8%BF%9B%E8%A1%8C%E9%85%8D%E7%BD%AE"><strong>【编写博客前】— 进行配置</strong></a></li>
<li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6-%E5%9B%BE%E7%89%87%E5%AF%BC%E5%85%A5%E6%96%B9%E6%B3%95"><strong>【编写博客时】— 图片导入方法</strong></a></li>
<li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%90%8E-%E5%9B%BE%E7%89%87%E5%AD%98%E6%A1%A3%E7%BB%93%E6%9E%9C"><strong>【编写博客后】— 图片存档结果</strong></a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h3 id="编写博客前-进行配置"><a class="markdownIt-Anchor" href="#编写博客前-进行配置"></a> <strong>【编写博客前】— 进行配置</strong></h3>
<br>
<ol>
<li>
<p><strong>建立 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹(Asset Floder)</a>，用来保存添加到博文中的本地图片</strong></p>
<ul>
<li>在本地Hexo根目录下的<code>source</code>文件夹中创建一个名为 <code>images</code> 的文件夹</li>
</ul>
</li>
<li>
<p><strong>在Typora中设置图片的相对路径</strong></p>
<ul>
<li>打开Typora的<code>文件 &gt; 偏好设置 &gt; 图像</code>，进行如下设置：</li>
</ul>
<center><img src="/images/Hexo-Local-Pictures/image-20200506223313787.png" alt="image-20200506223313787" style="zoom:50%;"></center>
<ul>
<li>此设置会使<code>source/images</code>文件夹下新增一个与所编辑的markdown文档同名的文件夹，文档中所添加的 <em>本地图片</em> 都将存档于此（即拥有了如下路径：<code>'hexo根目录'/source/images/'md文档名'/'图片名称'）</code>)。<br>
<br></li>
</ul>
</li>
<li>
<p><strong>撰写markdown文档时配置 <em>图片根目录</em> ，使其能够同步到hexo博客中去</strong></p>
<ul>
<li>撰写博文时，先点击Typora菜单栏中的<code>格式 &gt; 图像 &gt; 设置图片根目录</code> , 将根目录配置为<code>'hexo根目录'/source</code>。然后再撰写博文。【注：每篇需要添加本地图片的博文都要先进行此步骤】</li>
</ul>
<center><img src="/images/Hexo-Local-Pictures/1.png" alt="1" style="zoom:50%;"></center>
</li>
</ol>
<br>
<h3 id="编写博客时-图片导入方法"><a class="markdownIt-Anchor" href="#编写博客时-图片导入方法"></a> <strong>【编写博客时】— 图片导入方法</strong></h3>
 <br>
<ol>
<li><strong>直接拖拽</strong>
<ul>
<li>将原本存放于其他本地文件夹中的图片直接拖拽到文档中的相应位置中去</li>
<li>此时图片会被自动存档至生成的同名文件夹<code>'hexo根目录'/source/images/'md文档名'</code>中</li>
<li>文档中图片地址的代码会显示成 <em>自动生成的相对路径</em>，即<code>/images/'md文档名'/'图片名称'</code><br>
<br></li>
</ul>
</li>
<li><strong>利用相对路径调取</strong>
<ul>
<li>当利用 <em>方法1</em> 插入了至少一张图片时（即已生成同名文件夹时），便可以把接下来要插入的图片复制到此同名文件夹中，在文档中<em>利用相对路径</em> 调取图片：</li>
<li>所使用的命令是：<code>![图片显示名称](/images/'md文档名'/'图片名称')</code></li>
<li>这里的<code>图片显示名称</code>不必与文件夹中保存的<code>图片名称</code>保持一致，<code>'图片名称'</code>中要记得包含图片格式（例如：tupian.jpg 或 picture.png 等）<br>
<br></li>
</ul>
</li>
</ol>
<p>【注意】当还没有利用 <em>方法1</em> 插入过图片时（即同名文件夹尚未生成时），<strong>不可以自己创建同名文件夹</strong>保存图片。亲测不好使！！（.md文档中可以显示，但是hexo博文中无法显示）</p>
<br>
<h3 id="编写博客后-图片存档结果"><a class="markdownIt-Anchor" href="#编写博客后-图片存档结果"></a> <strong>【编写博客后】— 图片存档结果</strong></h3>
<p>在利用上述方法完成了含有本地图片的markdown博文后，我们的资源文件夹<code>'hexo根目录'/source/images/</code>内最终会显示成什么样子呢？</p>
<ul>
<li>
<p>每一篇配置了图片根目录的博文（即【编写博客前】的第3步），都会在<code>'hexo根目录'/source/images/</code>文件夹中有一个与文档名称同名的文件夹<code>'hexo根目录'/source/images/'md文档名'</code></p>
</li>
<li>
<p>该文件夹中会保存博文编写中曾经添加的<strong>所有本地图片</strong></p>
<ul>
<li><strong>所有</strong>的含义是：即使编辑过程中某些本地图片在添加后又被删除了，它们也仍然会保留在文件夹中，即该文件夹会备份你在博文中添加的 <em>所有本地图片历史</em></li>
<li><strong>本地图片</strong>的含义是：这里只会保存插入的本地图片，而不会保存插入的网络图片。尽管在【编写博客前】的第2步配置中，我们也同样勾选了<code>对网络位置的图片应用上述规则</code>。（请原谅我并不知道其中的缘由。。）</li>
</ul>
</li>
</ul>
<p>就此，在Typora编辑器中编写Hexo博文时，向markdown文档中添加本地图片的方法就介绍完毕啦！快去应用到你的博文中去吧~</p>
 <br>  
 <br>  
 <br> 
 <hr>
<p>本文参考了<a href="https://yinyoupoet.github.io/" target="_blank" rel="noopener">yinyoupoet</a>的<a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a><br>
更多关于Typora中插入图片的内容可以参考<a href="https://support.typora.io/Images/#when-insert-images" target="_blank" rel="noopener">Typora的官方说明</a></p>
 <hr>  
 <br>  
 <br>  
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【USAGE】</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Typora</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Matplotlib 개요</title>
    <url>/2020/06/28/S-Python-Matplotlib0/</url>
    <content><![CDATA[<h1 id="시각화-library-matplotlib-개요"><a class="markdownIt-Anchor" href="#시각화-library-matplotlib-개요"></a> 시각화 library  – [matplotlib] 개요</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#matplotlib-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B8%B0%EB%B0%98-%EC%8B%9C%EA%B0%81%ED%99%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC"><strong><strong>matplotlib:</strong> 파이썬 기반 시각화 라이브러리</strong></a>
<ul>
<li><a href="#1-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0">1. 불러오기</a></li>
<li><a href="#2-matplotlib-%EC%A3%BC%EC%9A%94-%EC%9E%A5%EC%A0%90">2. matplotlib 주요 장점</a></li>
<li><a href="#3-matplotlib-%EC%A3%BC%EC%9A%94-%EB%8B%A8%EC%A0%90">3. matplotlib 주요 단점</a></li>
<li><a href="#4-matplotlib-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8">4. matplotlib 웹사이트</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="matplotlib-파이썬-기반-시각화-라이브러리"><a class="markdownIt-Anchor" href="#matplotlib-파이썬-기반-시각화-라이브러리"></a> <strong><strong>matplotlib:</strong> 파이썬 기반 시각화 라이브러리</strong></h2>
  <br>
<h3 id="1-불러오기"><a class="markdownIt-Anchor" href="#1-불러오기"></a> 1. 불러오기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt  <span class="comment"># alias 설정</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>
<p>pandas도 matplotlib을 내장</p>
<br>
</li>
</ul>
<h3 id="2-matplotlib-주요-장점"><a class="markdownIt-Anchor" href="#2-matplotlib-주요-장점"></a> 2. matplotlib 주요 장점</h3>
<ul>
<li>
<p>파이썬 표준 시각화 도구라고 불릴 만큼 다양한 기능 지원</p>
</li>
<li>
<p>세부 옵션을 통하여 아름다운 스타일링 가능</p>
</li>
<li>
<p>보다 다양한 그래프를 그릴 수 있음</p>
</li>
<li>
<p>pandas와 연동이 용이함</p>
<br>
</li>
</ul>
<h3 id="3-matplotlib-주요-단점"><a class="markdownIt-Anchor" href="#3-matplotlib-주요-단점"></a> 3. matplotlib 주요 단점</h3>
<ul>
<li>
<p>한글에 대한 완벽한 지원 X</p>
<ul>
<li>한글 사용시 추가설정 필요<br>
(설정방법은 <a href="https://hyemin-kim.github.io/2020/06/25/S-Python-Pandas-visual/"> [Python &gt;&gt; Pandas 시각화] </a> 안의 [0.준비 - 한글폰트 깨짐현상 해결]을 참조)</li>
</ul>
</li>
<li>
<p>세부 기능이 많으나, 사용성이 복잡하다고 느낄 수 있음</p>
<br>
</li>
</ul>
<h3 id="4-matplotlib-웹사이트"><a class="markdownIt-Anchor" href="#4-matplotlib-웹사이트"></a> 4. matplotlib 웹사이트</h3>
<p><a href="http://matplotlib.org/" target="_blank" rel="noopener">http://matplotlib.org/</a></p>
<p>여거시 matplotlib의 Documents, Samples 들을 볼 수 있음</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 3. Matplotlib</category>
        <category>Python - 시각화</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>사각화</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; EDA &amp; Linear Regression -- 부동산 가격 예측</title>
    <url>/2020/08/11/E-Python-LinearRegression-1/</url>
    <content><![CDATA[<h1 id="eda-regression-실습-부동산-데이터"><a class="markdownIt-Anchor" href="#eda-regression-실습-부동산-데이터"></a> 【EDA &amp; Regression 실습】 – 부동산 데이터</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%8C%8C%EC%95%85-eda-%ED%83%90%EC%83%89%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D"><strong>2. 데이터 파악 (EDA: 탐색적 데이터 분석)</strong></a>
<ul>
<li><a href="#2-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4-%ED%8C%8C%EC%95%85">2-1. 데이터셋 기본 정보 파악</a></li>
<li><a href="#2-2-%EC%A2%85%EC%86%8D-%EB%B3%80%EC%88%98%EB%AA%A9%ED%91%9C-%EB%B3%80%EC%88%98-%ED%83%90%EC%83%89">2-2. 종속 변수(목표 변수) 탐색</a></li>
<li><a href="#2-3-%EC%84%A4%EB%AA%85-%EB%B3%80%EC%88%98-%ED%83%90%EC%83%89">2-3. 설명 변수 탐색</a></li>
<li><a href="#2-4-%EC%84%A4%EB%AA%85%EB%B3%80%EC%88%98%EC%99%80-%EC%A2%85%EC%86%8D%EB%B3%80%EC%88%98-%EA%B0%84%EC%9D%98-%EA%B4%80%EA%B3%84-%ED%83%90%EC%83%89">2-4. 설명변수와 종속변수 간의 관계 탐색</a></li>
</ul>
</li>
<li><a href="#3-%EC%A3%BC%ED%83%9D-%EA%B0%80%EA%B2%A9-%EC%98%88%EC%B8%A1-%EB%AA%A8%EB%8D%B8%EB%A7%81-%ED%9A%8C%EA%B7%80-%EB%B6%84%EC%84%9D"><strong>3. 주택 가격 예측 모델링: 회귀 분석</strong></a>
<ul>
<li><a href="#3-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC">3-1. 데이터 전처리</a></li>
<li><a href="#3-2-%ED%9A%8C%EA%B7%80-%EB%AA%A8%EB%8D%B8%EB%A7%81">3-2. 회귀 모델링</a></li>
<li><a href="#3-3-%EB%AA%A8%EB%8D%B8-%ED%95%B4%EC%84%9D">3-3. 모델 해석</a></li>
<li><a href="#3-4-%EB%AA%A8%EB%8D%B8-%EC%98%88%EC%B8%A1-%EA%B2%B0%EA%B3%BC-%EB%B0%8F-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80">3-4. 모델 예측 결과 및 성능 평가</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>미국 매사추세츠주의 주택 가격 데이터(Boston Housing 1970)를 활용해 지역의 평균 주택 가격을 예측하는 선형 회귀 모델을 만들었고, 이를 기초하여 주택 가격의 영향 요소 파악 및 주택 가격 예측을 진행하였습니다.</p>
<p>전체 분석 절차는 다음과 같습니다:</p>
<ol>
<li>
<p>데이터 파악 (EDA: 탐색적 데이터 분석)</p>
<ul>
<li>데이터셋 기본 정보 파악</li>
<li>변수 특징 탐색</li>
<li>변수간 관계 탐색</li>
</ul>
</li>
<li>
<p>데이터 전처리</p>
</li>
<li>
<p>모델링</p>
</li>
<li>
<p>주택 가격 영향 요소 파악</p>
</li>
<li>
<p>주택 가격 예측 및 모델 예측 성능 평가</p>
<br>  
</li>
</ol>
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<p><strong>&gt;&gt; 사용할 데이터셋 – Boston Housing Dataset</strong></p>
<p>분석에 사용될 데이터셋은 <a href="http://lib.stat.cmu.edu/datasets/boston_corrected.txt" target="_blank" rel="noopener">Boston Housing 1970</a>데이터의 일부 변수를 추출한 데이터입니다.<br>
여기에 미국 매사추세츠주 92개 도시(TOWN)의 506개 지역의 주택 가격 및 기타 지역 특성 데이터가 포함되어 있습니다. <a href="https://geodacenter.github.io/data-and-lab/boston-housing/" target="_blank" rel="noopener">(Dataset Introduction)</a></p>
<p>데이터셋을 불러와서 첫 다섯 줄을 출력하여 데이터의 구성을 한 번 살펴볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/BostonHousing2.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOWN</th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Nahant</td>
      <td>-70.955</td>
      <td>42.2550</td>
      <td>24.0</td>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1</td>
      <td>296</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Swampscott</td>
      <td>-70.950</td>
      <td>42.2875</td>
      <td>21.6</td>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Swampscott</td>
      <td>-70.936</td>
      <td>42.2830</td>
      <td>34.7</td>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Marblehead</td>
      <td>-70.928</td>
      <td>42.2930</td>
      <td>33.4</td>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Marblehead</td>
      <td>-70.922</td>
      <td>42.2980</td>
      <td>36.2</td>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<p><strong>&gt;&gt; Feature Description</strong></p>
<p>각 변수의 의미는 다음과 같습니다:</p>
<ul>
<li>
<p>TOWN: 소속 도시 이름</p>
</li>
<li>
<p>LON, LAT: 해당 지역의 경도(Longitudes) 위도(Latitudes) 정보</p>
</li>
<li>
<p><strong>CMEDV: 해당 지역의 주택 가격 (중앙값)</strong> (corrected median values of housing in USD 1000)</p>
</li>
<li>
<p>CRIM: 지역 범죄율 (per capita crime)</p>
</li>
<li>
<p>ZN: 소속 도시에 25,000 제곱 피트(sq.ft) 이상의 주택지 비율</p>
</li>
<li>
<p>INDUS: 소속 도시에 상업적 비즈니스에 활용되지 않는 농지 면적</p>
</li>
<li>
<p>CHAS: 해당 지역이 Charles 강과 접하고 있는지 여부 (dummy variable)</p>
</li>
<li>
<p>NOX: 소속 도시의 산화질소 농도</p>
</li>
<li>
<p>RM: 해당 지역의 자택당 평균 방 갯수</p>
</li>
<li>
<p>AGE: 해당 지역에 1940년 이전에 건설된 주택의 비율</p>
</li>
<li>
<p>DIS: 5개의 보스턴 고용 센터와의 거리에 따른 가중치 부여</p>
</li>
<li>
<p>RAD: 소속 도시가 Radial 고속도로와의 접근성 지수</p>
</li>
<li>
<p>TAX: 소속 도시의 10000달러당 재산세</p>
</li>
<li>
<p>PTRATIO: 소속 도시의 학생-교사 비율</p>
</li>
<li>
<p>B: 해당 지역의 흑인 지수 (1000(Bk - 0.63)^2), Bk는 흑인의 비율</p>
</li>
<li>
<p>LSTAT: 해당 지역의 빈곤층 비율</p>
<br>
<br>
</li>
</ul>
<h2 id="2-데이터-파악-eda-탐색적-데이터-분석"><a class="markdownIt-Anchor" href="#2-데이터-파악-eda-탐색적-데이터-분석"></a> <strong>2. 데이터 파악 (EDA: 탐색적 데이터 분석)</strong></h2>
<p>이제 데이터셋의 기본 정보 및 각 변수의 특성을 파악해 보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 그래프 배경 설정</span></span><br><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="2-1-데이터셋-기본-정보-파악"><a class="markdownIt-Anchor" href="#2-1-데이터셋-기본-정보-파악"></a> 2-1. 데이터셋 기본 정보 파악</h3>
<p>먼저 데이터셋의 기본 정보부터 알아볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># shape (dimension)</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(506, 17)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>TOWN       0
LON        0
LAT        0
CMEDV      0
CRIM       0
ZN         0
INDUS      0
CHAS       0
NOX        0
RM         0
AGE        0
DIS        0
RAD        0
TAX        0
PTRATIO    0
B          0
LSTAT      0
dtype: int64
</code></pre>
<br>
<p>데이터셋은 총 506개의 관측치(observations)과 17개의 변수(variables)로 구성되어 있고 결측치는 존재하지 않습니다.</p>
<p>각 <strong>변수의 타입</strong> 및 <strong>기초 통계량 (범주형 변수는 범주 구성)</strong> 을 확인 해보면 다음과 같습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># data type</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 506 entries, 0 to 505
Data columns (total 17 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   TOWN     506 non-null    object 
 1   LON      506 non-null    float64
 2   LAT      506 non-null    float64
 3   CMEDV    506 non-null    float64
 4   CRIM     506 non-null    float64
 5   ZN       506 non-null    float64
 6   INDUS    506 non-null    float64
 7   CHAS     506 non-null    int64  
 8   NOX      506 non-null    float64
 9   RM       506 non-null    float64
 10  AGE      506 non-null    float64
 11  DIS      506 non-null    float64
 12  RAD      506 non-null    int64  
 13  TAX      506 non-null    int64  
 14  PTRATIO  506 non-null    float64
 15  B        506 non-null    float64
 16  LSTAT    506 non-null    float64
dtypes: float64(13), int64(3), object(1)
memory usage: 67.3+ KB
</code></pre>
<p>이중 TOWN(소속 도시 이름)만 문자형 변수이고, 이를 제외한 모든 변수가 숫자형 변수입니다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># numerical variable</span></span><br><span class="line">df.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
      <td>506.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>-71.056389</td>
      <td>42.216440</td>
      <td>22.528854</td>
      <td>3.613524</td>
      <td>11.363636</td>
      <td>11.136779</td>
      <td>0.069170</td>
      <td>0.554695</td>
      <td>6.284634</td>
      <td>68.574901</td>
      <td>3.795043</td>
      <td>9.549407</td>
      <td>408.237154</td>
      <td>18.455534</td>
      <td>356.674032</td>
      <td>12.653063</td>
    </tr>
    <tr>
      <th>std</th>
      <td>0.075405</td>
      <td>0.061777</td>
      <td>9.182176</td>
      <td>8.601545</td>
      <td>23.322453</td>
      <td>6.860353</td>
      <td>0.253994</td>
      <td>0.115878</td>
      <td>0.702617</td>
      <td>28.148861</td>
      <td>2.105710</td>
      <td>8.707259</td>
      <td>168.537116</td>
      <td>2.164946</td>
      <td>91.294864</td>
      <td>7.141062</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-71.289500</td>
      <td>42.030000</td>
      <td>5.000000</td>
      <td>0.006320</td>
      <td>0.000000</td>
      <td>0.460000</td>
      <td>0.000000</td>
      <td>0.385000</td>
      <td>3.561000</td>
      <td>2.900000</td>
      <td>1.129600</td>
      <td>1.000000</td>
      <td>187.000000</td>
      <td>12.600000</td>
      <td>0.320000</td>
      <td>1.730000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>-71.093225</td>
      <td>42.180775</td>
      <td>17.025000</td>
      <td>0.082045</td>
      <td>0.000000</td>
      <td>5.190000</td>
      <td>0.000000</td>
      <td>0.449000</td>
      <td>5.885500</td>
      <td>45.025000</td>
      <td>2.100175</td>
      <td>4.000000</td>
      <td>279.000000</td>
      <td>17.400000</td>
      <td>375.377500</td>
      <td>6.950000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>-71.052900</td>
      <td>42.218100</td>
      <td>21.200000</td>
      <td>0.256510</td>
      <td>0.000000</td>
      <td>9.690000</td>
      <td>0.000000</td>
      <td>0.538000</td>
      <td>6.208500</td>
      <td>77.500000</td>
      <td>3.207450</td>
      <td>5.000000</td>
      <td>330.000000</td>
      <td>19.050000</td>
      <td>391.440000</td>
      <td>11.360000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>-71.019625</td>
      <td>42.252250</td>
      <td>25.000000</td>
      <td>3.677082</td>
      <td>12.500000</td>
      <td>18.100000</td>
      <td>0.000000</td>
      <td>0.624000</td>
      <td>6.623500</td>
      <td>94.075000</td>
      <td>5.188425</td>
      <td>24.000000</td>
      <td>666.000000</td>
      <td>20.200000</td>
      <td>396.225000</td>
      <td>16.955000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>-70.810000</td>
      <td>42.381000</td>
      <td>50.000000</td>
      <td>88.976200</td>
      <td>100.000000</td>
      <td>27.740000</td>
      <td>1.000000</td>
      <td>0.871000</td>
      <td>8.780000</td>
      <td>100.000000</td>
      <td>12.126500</td>
      <td>24.000000</td>
      <td>711.000000</td>
      <td>22.000000</td>
      <td>396.900000</td>
      <td>37.970000</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># categorical variable</span></span><br><span class="line">num_town = df[<span class="string">'TOWN'</span>].unique()</span><br><span class="line">print(len(num_town))</span><br><span class="line">num_town</span><br></pre></td></tr></tbody></table></figure>
<pre><code>92



array(['Nahant', 'Swampscott', 'Marblehead', 'Salem', 'Lynn', 'Sargus',
       'Lynnfield', 'Peabody', 'Danvers', 'Middleton', 'Topsfield',
       'Hamilton', 'Wenham', 'Beverly', 'Manchester', 'North Reading',
       'Wilmington', 'Burlington', 'Woburn', 'Reading', 'Wakefield',
       'Melrose', 'Stoneham', 'Winchester', 'Medford', 'Malden',
       'Everett', 'Somerville', 'Cambridge', 'Arlington', 'Belmont',
       'Lexington', 'Bedford', 'Lincoln', 'Concord', 'Sudbury', 'Wayland',
       'Weston', 'Waltham', 'Watertown', 'Newton', 'Natick', 'Framingham',
       'Ashland', 'Sherborn', 'Brookline', 'Dedham', 'Needham',
       'Wellesley', 'Dover', 'Medfield', 'Millis', 'Norfolk', 'Walpole',
       'Westwood', 'Norwood', 'Sharon', 'Canton', 'Milton', 'Quincy',
       'Braintree', 'Randolph', 'Holbrook', 'Weymouth', 'Cohasset',
       'Hull', 'Hingham', 'Rockland', 'Hanover', 'Norwell', 'Scituate',
       'Marshfield', 'Duxbury', 'Pembroke', 'Boston Allston-Brighton',
       'Boston Back Bay', 'Boston Beacon Hill', 'Boston North End',
       'Boston Charlestown', 'Boston East Boston', 'Boston South Boston',
       'Boston Downtown', 'Boston Roxbury', 'Boston Savin Hill',
       'Boston Dorchester', 'Boston Mattapan', 'Boston Forest Hills',
       'Boston West Roxbury', 'Boston Hyde Park', 'Chelsea', 'Revere',
       'Winthrop'], dtype=object)
</code></pre>
<br>
<h3 id="2-2-종속-변수목표-변수-탐색"><a class="markdownIt-Anchor" href="#2-2-종속-변수목표-변수-탐색"></a> 2-2. 종속 변수(목표 변수) 탐색</h3>
<p><strong>&gt;&gt; Target Variable: ‘CMEDV’(주택 가격) 탐색</strong></p>
<p>이제 각 변수의 특성을 시각화 도구를 통해 파악해보겠습니다.<br>
먼저 우리가 예측하고자 하는 대상, 즉 회귀 모델의 종속 변수인 “주택 가격”(‘CMECV’) 부터 살펴볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 기초 통계량</span></span><br><span class="line">df[<span class="string">'CMEDV'</span>].describe()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>count    506.000000
mean      22.528854
std        9.182176
min        5.000000
25%       17.025000
50%       21.200000
75%       25.000000
max       50.000000
Name: CMEDV, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 분포</span></span><br><span class="line">df[<span class="string">'CMEDV'</span>].hist(bins=<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ca69ebcf48&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_36_1.png" alt="png"></p>
<p><strong>boxplot:</strong></p>
<ol>
<li>Pandas Function (<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.boxplot.html?highlight=boxplot#pandas.DataFrame.boxplot" target="_blank" rel="noopener">pandas.DataFrame.boxplot</a>)</li>
<li>Matplotlib Function (<a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.boxplot.html#matplotlib.pyplot.boxplot" target="_blank" rel="noopener">matplotlib.pyplot.boxplot</a>)</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># boxplot - Pandas</span></span><br><span class="line">df.boxplot(column=[<span class="string">'CMEDV'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_38_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># boxplot - matplotlib</span></span><br><span class="line">plt.boxplot(df[<span class="string">'CMEDV'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_39_0.png" alt="png"></p>
<p>분포를 살펴보면, 주택 가격이 대부분 <code>$17,000</code> ~ <code>$25,000</code> 사이에 분포되어 있으며, 소수의 <code>$40,000</code> 이상인 고가 주택도 존재합니다.</p>
<br>  
<h3 id="2-3-설명-변수-탐색"><a class="markdownIt-Anchor" href="#2-3-설명-변수-탐색"></a> 2-3. 설명 변수 탐색</h3>
<p><strong>&gt;&gt; 설명 변수의 분포 탐색</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># numerical features (except "LON" &amp; "LAT")</span></span><br><span class="line">numerical_columns = [<span class="string">'CRIM'</span>, <span class="string">'ZN'</span>, <span class="string">'INDUS'</span>, <span class="string">'CHAS'</span>, <span class="string">'NOX'</span>, <span class="string">'RM'</span>, <span class="string">'AGE'</span>, <span class="string">'DIS'</span>, <span class="string">'RAD'</span>, <span class="string">'TAX'</span>, <span class="string">'PTRATIO'</span>, <span class="string">'B'</span>, <span class="string">'LSTAT'</span>]</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">16</span>, <span class="number">20</span>))</span><br><span class="line">ax = fig.gca()  <span class="comment"># Axes 생성</span></span><br><span class="line"></span><br><span class="line">df[numerical_columns].hist(ax=ax)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_44_0.png" alt="png"></p>
<br>
<h3 id="2-4-설명변수와-종속변수-간의-관계-탐색"><a class="markdownIt-Anchor" href="#2-4-설명변수와-종속변수-간의-관계-탐색"></a> 2-4. 설명변수와 종속변수 간의 관계 탐색</h3>
<p><strong>&gt;&gt; 변수간의 상관계수 파악</strong></p>
<p>먼저 변수간의 상관계수를 추출해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Person 상관계수</span></span><br><span class="line">cols = [<span class="string">'CMEDV'</span>, <span class="string">'CRIM'</span>, <span class="string">'ZN'</span>, <span class="string">'INDUS'</span>, <span class="string">'CHAS'</span>, <span class="string">'NOX'</span>, <span class="string">'RM'</span>, <span class="string">'AGE'</span>, <span class="string">'DIS'</span>, <span class="string">'RAD'</span>, <span class="string">'TAX'</span>, <span class="string">'PTRATIO'</span>, <span class="string">'B'</span>, <span class="string">'LSTAT'</span>]</span><br><span class="line"></span><br><span class="line">corr = df[cols].corr(method = <span class="string">'pearson'</span>)</span><br><span class="line">corr</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>CMEDV</th>
      <td>1.000000</td>
      <td>-0.389582</td>
      <td>0.360386</td>
      <td>-0.484754</td>
      <td>0.175663</td>
      <td>-0.429300</td>
      <td>0.696304</td>
      <td>-0.377999</td>
      <td>0.249315</td>
      <td>-0.384766</td>
      <td>-0.471979</td>
      <td>-0.505655</td>
      <td>0.334861</td>
      <td>-0.740836</td>
    </tr>
    <tr>
      <th>CRIM</th>
      <td>-0.389582</td>
      <td>1.000000</td>
      <td>-0.200469</td>
      <td>0.406583</td>
      <td>-0.055892</td>
      <td>0.420972</td>
      <td>-0.219247</td>
      <td>0.352734</td>
      <td>-0.379670</td>
      <td>0.625505</td>
      <td>0.582764</td>
      <td>0.289946</td>
      <td>-0.385064</td>
      <td>0.455621</td>
    </tr>
    <tr>
      <th>ZN</th>
      <td>0.360386</td>
      <td>-0.200469</td>
      <td>1.000000</td>
      <td>-0.533828</td>
      <td>-0.042697</td>
      <td>-0.516604</td>
      <td>0.311991</td>
      <td>-0.569537</td>
      <td>0.664408</td>
      <td>-0.311948</td>
      <td>-0.314563</td>
      <td>-0.391679</td>
      <td>0.175520</td>
      <td>-0.412995</td>
    </tr>
    <tr>
      <th>INDUS</th>
      <td>-0.484754</td>
      <td>0.406583</td>
      <td>-0.533828</td>
      <td>1.000000</td>
      <td>0.062938</td>
      <td>0.763651</td>
      <td>-0.391676</td>
      <td>0.644779</td>
      <td>-0.708027</td>
      <td>0.595129</td>
      <td>0.720760</td>
      <td>0.383248</td>
      <td>-0.356977</td>
      <td>0.603800</td>
    </tr>
    <tr>
      <th>CHAS</th>
      <td>0.175663</td>
      <td>-0.055892</td>
      <td>-0.042697</td>
      <td>0.062938</td>
      <td>1.000000</td>
      <td>0.091203</td>
      <td>0.091251</td>
      <td>0.086518</td>
      <td>-0.099176</td>
      <td>-0.007368</td>
      <td>-0.035587</td>
      <td>-0.121515</td>
      <td>0.048788</td>
      <td>-0.053929</td>
    </tr>
    <tr>
      <th>NOX</th>
      <td>-0.429300</td>
      <td>0.420972</td>
      <td>-0.516604</td>
      <td>0.763651</td>
      <td>0.091203</td>
      <td>1.000000</td>
      <td>-0.302188</td>
      <td>0.731470</td>
      <td>-0.769230</td>
      <td>0.611441</td>
      <td>0.668023</td>
      <td>0.188933</td>
      <td>-0.380051</td>
      <td>0.590879</td>
    </tr>
    <tr>
      <th>RM</th>
      <td>0.696304</td>
      <td>-0.219247</td>
      <td>0.311991</td>
      <td>-0.391676</td>
      <td>0.091251</td>
      <td>-0.302188</td>
      <td>1.000000</td>
      <td>-0.240265</td>
      <td>0.205246</td>
      <td>-0.209847</td>
      <td>-0.292048</td>
      <td>-0.355501</td>
      <td>0.128069</td>
      <td>-0.613808</td>
    </tr>
    <tr>
      <th>AGE</th>
      <td>-0.377999</td>
      <td>0.352734</td>
      <td>-0.569537</td>
      <td>0.644779</td>
      <td>0.086518</td>
      <td>0.731470</td>
      <td>-0.240265</td>
      <td>1.000000</td>
      <td>-0.747881</td>
      <td>0.456022</td>
      <td>0.506456</td>
      <td>0.261515</td>
      <td>-0.273534</td>
      <td>0.602339</td>
    </tr>
    <tr>
      <th>DIS</th>
      <td>0.249315</td>
      <td>-0.379670</td>
      <td>0.664408</td>
      <td>-0.708027</td>
      <td>-0.099176</td>
      <td>-0.769230</td>
      <td>0.205246</td>
      <td>-0.747881</td>
      <td>1.000000</td>
      <td>-0.494588</td>
      <td>-0.534432</td>
      <td>-0.232471</td>
      <td>0.291512</td>
      <td>-0.496996</td>
    </tr>
    <tr>
      <th>RAD</th>
      <td>-0.384766</td>
      <td>0.625505</td>
      <td>-0.311948</td>
      <td>0.595129</td>
      <td>-0.007368</td>
      <td>0.611441</td>
      <td>-0.209847</td>
      <td>0.456022</td>
      <td>-0.494588</td>
      <td>1.000000</td>
      <td>0.910228</td>
      <td>0.464741</td>
      <td>-0.444413</td>
      <td>0.488676</td>
    </tr>
    <tr>
      <th>TAX</th>
      <td>-0.471979</td>
      <td>0.582764</td>
      <td>-0.314563</td>
      <td>0.720760</td>
      <td>-0.035587</td>
      <td>0.668023</td>
      <td>-0.292048</td>
      <td>0.506456</td>
      <td>-0.534432</td>
      <td>0.910228</td>
      <td>1.000000</td>
      <td>0.460853</td>
      <td>-0.441808</td>
      <td>0.543993</td>
    </tr>
    <tr>
      <th>PTRATIO</th>
      <td>-0.505655</td>
      <td>0.289946</td>
      <td>-0.391679</td>
      <td>0.383248</td>
      <td>-0.121515</td>
      <td>0.188933</td>
      <td>-0.355501</td>
      <td>0.261515</td>
      <td>-0.232471</td>
      <td>0.464741</td>
      <td>0.460853</td>
      <td>1.000000</td>
      <td>-0.177383</td>
      <td>0.374044</td>
    </tr>
    <tr>
      <th>B</th>
      <td>0.334861</td>
      <td>-0.385064</td>
      <td>0.175520</td>
      <td>-0.356977</td>
      <td>0.048788</td>
      <td>-0.380051</td>
      <td>0.128069</td>
      <td>-0.273534</td>
      <td>0.291512</td>
      <td>-0.444413</td>
      <td>-0.441808</td>
      <td>-0.177383</td>
      <td>1.000000</td>
      <td>-0.366087</td>
    </tr>
    <tr>
      <th>LSTAT</th>
      <td>-0.740836</td>
      <td>0.455621</td>
      <td>-0.412995</td>
      <td>0.603800</td>
      <td>-0.053929</td>
      <td>0.590879</td>
      <td>-0.613808</td>
      <td>0.602339</td>
      <td>-0.496996</td>
      <td>0.488676</td>
      <td>0.543993</td>
      <td>0.374044</td>
      <td>-0.366087</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<p>상관계수를 좀 더 직관적인 Heatmap으로 표현해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># heatmap (seaborn)</span></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">16</span>, <span class="number">12</span>))</span><br><span class="line">ax = fig.gca()</span><br><span class="line"></span><br><span class="line">sns.set(font_scale = <span class="number">1.5</span>)  <span class="comment"># heatmap 안의 font-size 설정</span></span><br><span class="line">heatmap = sns.heatmap(corr.values, annot = <span class="literal">True</span>, fmt=<span class="string">'.2f'</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>},</span><br><span class="line">                      yticklabels = cols, xticklabels = cols, ax=ax, cmap = <span class="string">"RdYlBu"</span>)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_52_0.png" alt="png"></p>
<p>우리의 관심사인 target variable **“CMEDV - 주택 가격”**과 다른 변수간의 상관관계를 살펴보면, **“CMEDV - 주택 가격”**은 <strong>“RM - 자택당 평균 방 갯수”(0.7)</strong> 및 **“LSTAT - 빈곤층의 비율”(-0.74)**과 <strong>강한 상관관계</strong>를 보이고 있다는 것을 알 수 있습니다.</p>
<p>이 두 변수와의 관계를 좀 더 자세히 살펴볼게요.</p>
 <br> 
<p><strong>&gt;&gt; 종속 변수와 설명 변수간의 관계 탐색</strong></p>
<ul>
<li>주택 가격 ( “CMEDV” )  ~  방 갯수 ( “RM” )</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># scatter plot</span></span><br><span class="line">sns.scatterplot(data=df, x=<span class="string">'RM'</span>, y=<span class="string">'CMEDV'</span>, markers=<span class="string">'o'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.title(<span class="string">'Scatter Plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_57_0.png" alt="png"></p>
<p>주택 가격이 방 갯수와 양의 상관관계(positive correlation)를 갖고 있습니다. 즉, 방 갯수가 많은 주택들이 상대적으로 더 높은 가격을 갖고 있습니다.</p>
 <br> 
<ul>
<li>주택 가격(“CMEDV”) ~ 빈곤층의 비율(“LSTAT”)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># scatter plot</span></span><br><span class="line">sns.scatterplot(data=df, x=<span class="string">'LSTAT'</span>, y=<span class="string">'CMEDV'</span>, markers=<span class="string">'o'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.title(<span class="string">'Scatter Plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_61_0.png" alt="png"></p>
<p>주택 가격이 빈곤층의 비율과 음의 상관관계(negative correlation)를 갖고 있습니다. 즉, 빈곤층의 비율이 높은 지역의 주택 가격이 상대적으로 낮은 경향이 있습니다.</p>
 <br> 
<p><strong>&gt;&gt; 도시별 차이 탐색</strong></p>
<p>데이터를 살펴보면 여러 지역이 같은 도시에 속한 경우가 있습니다. 변수 중에서도 도시 단위로 측정되는 변수가 많고요. 따라서 우리는 자연스럽게 도시 간의 차이를 궁금하게 됩니다.</p>
<p>먼저 각 도시의 데이터 갯수부터 살펴볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 도시별 데이터 갯수</span></span><br><span class="line">df[<span class="string">'TOWN'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Cambridge            30
Boston Savin Hill    23
Lynn                 22
Boston Roxbury       19
Newton               18
                     ..
Hanover               1
Hull                  1
Sherborn              1
Hamilton              1
Dover                 1
Name: TOWN, Length: 92, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 도시별 데이터 갯수 (bar plot)</span></span><br><span class="line">df[<span class="string">'TOWN'</span>].value_counts().hist(bins=<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ca6c233a48&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_68_1.png" alt="png"></p>
<br>
<p>이제 각 도시의 주택 가격 분포를 box plot을 통해 표현 해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 도시별 주택 가격 특징 (boxplot 이용)</span></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">12</span>, <span class="number">20</span>))</span><br><span class="line">sns.boxplot(x=<span class="string">'CMEDV'</span>, y=<span class="string">'TOWN'</span>, data=df)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf3ff9ec8&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_71_1.png" alt="png"></p>
<p>그림을 보면, Boston 지역(Boston으로 시작하는 도시)의 주택 가격이 전반적으로 다른 지역보다 낮다는 것을 알 수 있습니다.</p>
<p>도시별 범죄율을 한 번 확인 해보면,</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 도시별 범죄율 특징</span></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">12</span>, <span class="number">20</span>))</span><br><span class="line">sns.boxplot(x=<span class="string">'CRIM'</span>, y=<span class="string">'TOWN'</span>, data=df)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf407fec8&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_73_1.png" alt="png"></p>
<p>Boston 지역의 범죄율이 유독 높다는 것을 확인할 수 있고, 따라서 범죄율이 높은 지역의 주택 가격이 상대적으로 낮다는 것을 추측해볼 수 있겠습니다.</p>
<p><br>  <br></p>
<h2 id="3-주택-가격-예측-모델링-회귀-분석"><a class="markdownIt-Anchor" href="#3-주택-가격-예측-모델링-회귀-분석"></a> <strong>3. 주택 가격 예측 모델링: 회귀 분석</strong></h2>
<p>이제 변수들을 활용하여 매사추세츠주 각 지역의 주택 가격을 예측하는 회귀 모델을 만들어 보겠습니다.</p>
<h3 id="3-1-데이터-전처리"><a class="markdownIt-Anchor" href="#3-1-데이터-전처리"></a> 3-1. 데이터 전처리</h3>
<p><strong>&gt;&gt;  Feature 표준화</strong></p>
<p>먼저 Feature 들의 scale 차이를 없애기 위해 수치형 Feature에 대해서 표준화를 진행해야 합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOWN</th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Nahant</td>
      <td>-70.955</td>
      <td>42.2550</td>
      <td>24.0</td>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1</td>
      <td>296</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Swampscott</td>
      <td>-70.950</td>
      <td>42.2875</td>
      <td>21.6</td>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Swampscott</td>
      <td>-70.936</td>
      <td>42.2830</td>
      <td>34.7</td>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Marblehead</td>
      <td>-70.928</td>
      <td>42.2930</td>
      <td>33.4</td>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Marblehead</td>
      <td>-70.922</td>
      <td>42.2980</td>
      <td>36.2</td>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 506 entries, 0 to 505
Data columns (total 17 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   TOWN     506 non-null    object 
 1   LON      506 non-null    float64
 2   LAT      506 non-null    float64
 3   CMEDV    506 non-null    float64
 4   CRIM     506 non-null    float64
 5   ZN       506 non-null    float64
 6   INDUS    506 non-null    float64
 7   CHAS     506 non-null    int64  
 8   NOX      506 non-null    float64
 9   RM       506 non-null    float64
 10  AGE      506 non-null    float64
 11  DIS      506 non-null    float64
 12  RAD      506 non-null    int64  
 13  TAX      506 non-null    int64  
 14  PTRATIO  506 non-null    float64
 15  B        506 non-null    float64
 16  LSTAT    506 non-null    float64
dtypes: float64(13), int64(3), object(1)
memory usage: 67.3+ KB
</code></pre>
<p><br>문자형 변수인 "TOWN"와 범주형 변수인 “CHAS” (Dummy variable)를 제외하여 모든 수치형 변수에 대해서 표준화를 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature standardization  (numerical_columns except dummy var.-"CHAS")</span></span><br><span class="line">scaler = StandardScaler()  <span class="comment"># 평균 0, 표준편차 1</span></span><br><span class="line">scale_columns = [<span class="string">'CRIM'</span>, <span class="string">'ZN'</span>, <span class="string">'INDUS'</span>, <span class="string">'NOX'</span>, <span class="string">'RM'</span>, <span class="string">'AGE'</span>, <span class="string">'DIS'</span>, <span class="string">'RAD'</span>, <span class="string">'TAX'</span>, <span class="string">'PTRATIO'</span>, <span class="string">'B'</span>, <span class="string">'LSTAT'</span>]</span><br><span class="line">df[scale_columns] = scaler.fit_transform(df[scale_columns])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOWN</th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Nahant</td>
      <td>-70.955</td>
      <td>42.2550</td>
      <td>24.0</td>
      <td>-0.419782</td>
      <td>0.284830</td>
      <td>-1.287909</td>
      <td>0</td>
      <td>-0.144217</td>
      <td>0.413672</td>
      <td>-0.120013</td>
      <td>0.140214</td>
      <td>-0.982843</td>
      <td>-0.666608</td>
      <td>-1.459000</td>
      <td>0.441052</td>
      <td>-1.075562</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Swampscott</td>
      <td>-70.950</td>
      <td>42.2875</td>
      <td>21.6</td>
      <td>-0.417339</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>0.194274</td>
      <td>0.367166</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.441052</td>
      <td>-0.492439</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Swampscott</td>
      <td>-70.936</td>
      <td>42.2830</td>
      <td>34.7</td>
      <td>-0.417342</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>1.282714</td>
      <td>-0.265812</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.396427</td>
      <td>-1.208727</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Marblehead</td>
      <td>-70.928</td>
      <td>42.2930</td>
      <td>33.4</td>
      <td>-0.416750</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.016303</td>
      <td>-0.809889</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.416163</td>
      <td>-1.361517</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Marblehead</td>
      <td>-70.922</td>
      <td>42.2980</td>
      <td>36.2</td>
      <td>-0.412482</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.228577</td>
      <td>-0.511180</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.441052</td>
      <td>-1.026501</td>
    </tr>
  </tbody>
</table>
</div>
</div>
 <br> 
<p><strong>&gt;&gt; Training set / Test set 나누기</strong></p>
<p>나중에 도출될 예측 모델의 예측 성능을 평가하기 위해, 먼저 전체 데이터셋을 "Training set"과 "Test set"으로 나누겠습니다. Training set에서 모델을 학습하고 Test set에서 모델의 예측 성능을 검증할 겁니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># features for linear regression model</span></span><br><span class="line">df[numerical_columns].head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.419782</td>
      <td>0.284830</td>
      <td>-1.287909</td>
      <td>0</td>
      <td>-0.144217</td>
      <td>0.413672</td>
      <td>-0.120013</td>
      <td>0.140214</td>
      <td>-0.982843</td>
      <td>-0.666608</td>
      <td>-1.459000</td>
      <td>0.441052</td>
      <td>-1.075562</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.417339</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>0.194274</td>
      <td>0.367166</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.441052</td>
      <td>-0.492439</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-0.417342</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>1.282714</td>
      <td>-0.265812</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.396427</td>
      <td>-1.208727</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-0.416750</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.016303</td>
      <td>-0.809889</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.416163</td>
      <td>-1.361517</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-0.412482</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.228577</td>
      <td>-0.511180</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.441052</td>
      <td>-1.026501</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="comment"># split dataset into training &amp; test</span></span><br><span class="line">X = df[numerical_columns]</span><br><span class="line">y = df[<span class="string">'CMEDV'</span>]</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">X_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((404, 13), (404,))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">X_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((102, 13), (102,))
</code></pre>
  <br>
<p><strong>&gt;&gt; 다중공선성</strong></p>
<p>회귀 분석에서 하나의 feature(예측 변수)가 다른 feature와의 상관 관계가 높으면(즉, 다중공선성이 존재하면), 회귀 분석 시 부정적인 영향을 미칠 수 있기 때문에, 모델링 하기 전에 먼저 다중공선성의 존재 여부를 확인해야합니다.</p>
<p>보통 다중공선성을 판단할 때 VIF값을 확인합니다. 일반적으로, VIF &gt; 10인 feature들은 다른 변수와의 상관관계가 높아, 다중공선성이 존재하는 것으로 판단합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> statsmodels.stats.outliers_influence <span class="keyword">import</span> variance_inflation_factor</span><br><span class="line"></span><br><span class="line">vif = pd.DataFrame()</span><br><span class="line">vif[<span class="string">'features'</span>] = X_train.columns</span><br><span class="line">vif[<span class="string">"VIF Factor"</span>] = [variance_inflation_factor(X_train.values, i) <span class="keyword">for</span> i <span class="keyword">in</span> range(X_train.shape[<span class="number">1</span>])]</span><br><span class="line">vif.round(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>features</th>
      <th>VIF Factor</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>CRIM</td>
      <td>1.7</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ZN</td>
      <td>2.5</td>
    </tr>
    <tr>
      <th>2</th>
      <td>INDUS</td>
      <td>3.8</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHAS</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NOX</td>
      <td>4.4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>RM</td>
      <td>1.9</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AGE</td>
      <td>3.2</td>
    </tr>
    <tr>
      <th>7</th>
      <td>DIS</td>
      <td>4.2</td>
    </tr>
    <tr>
      <th>8</th>
      <td>RAD</td>
      <td>8.1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>TAX</td>
      <td>9.8</td>
    </tr>
    <tr>
      <th>10</th>
      <td>PTRATIO</td>
      <td>1.9</td>
    </tr>
    <tr>
      <th>11</th>
      <td>B</td>
      <td>1.4</td>
    </tr>
    <tr>
      <th>12</th>
      <td>LSTAT</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>VIF값을 확인해보면, 모든 변수의 VIF값이 다 10 이하입니다. 따라서 다중공선성 문제가 존재하지 않아 모든 feature을 활용하여 회귀 모델링을 진행하면 됩니다.</p>
 <br> 
<h3 id="3-2-회귀-모델링"><a class="markdownIt-Anchor" href="#3-2-회귀-모델링"></a> 3-2. 회귀 모델링</h3>
<p>먼저 Training set에서 선형 회귀 예측 모델을 학습합니다.<br>
그 다음 도출된 모델을 Test set에 적용해 주택 가격(“CMEDV”)을 예측합니다. 이 결과는 다중에 실제 “CMEDV” 값과 비교하여 모델의 예측 성능을 평가하는 데 활용하게 됩니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line"></span><br><span class="line"><span class="comment"># fit regression model in training set</span></span><br><span class="line">lr = linear_model.LinearRegression()</span><br><span class="line">model = lr.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict in test set</span></span><br><span class="line">pred_test = lr.predict(X_test)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="3-3-모델-해석"><a class="markdownIt-Anchor" href="#3-3-모델-해석"></a> 3-3. 모델 해석</h3>
<p><strong>&gt;&gt; coefficients 확인하기</strong></p>
<p>먼저 각 feature의 회귀 계수를 확인해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># print coef</span></span><br><span class="line">print(lr.coef_)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[-0.9479409   1.39796831  0.14786968  2.13469673 -2.25995614  2.15879342
  0.12103297 -3.23121173  2.63662665 -1.95959865 -2.05639351  0.65670428
 -3.93702535]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "feature - coefficients" DataFrame 만들기</span></span><br><span class="line">coefs = pd.DataFrame(zip(df[numerical_columns].columns, lr.coef_), columns = [<span class="string">'feature'</span>, <span class="string">'coefficients'</span>])</span><br><span class="line">coefs</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>feature</th>
      <th>coefficients</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>CRIM</td>
      <td>-0.947941</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ZN</td>
      <td>1.397968</td>
    </tr>
    <tr>
      <th>2</th>
      <td>INDUS</td>
      <td>0.147870</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHAS</td>
      <td>2.134697</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NOX</td>
      <td>-2.259956</td>
    </tr>
    <tr>
      <th>5</th>
      <td>RM</td>
      <td>2.158793</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AGE</td>
      <td>0.121033</td>
    </tr>
    <tr>
      <th>7</th>
      <td>DIS</td>
      <td>-3.231212</td>
    </tr>
    <tr>
      <th>8</th>
      <td>RAD</td>
      <td>2.636627</td>
    </tr>
    <tr>
      <th>9</th>
      <td>TAX</td>
      <td>-1.959599</td>
    </tr>
    <tr>
      <th>10</th>
      <td>PTRATIO</td>
      <td>-2.056394</td>
    </tr>
    <tr>
      <th>11</th>
      <td>B</td>
      <td>0.656704</td>
    </tr>
    <tr>
      <th>12</th>
      <td>LSTAT</td>
      <td>-3.937025</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 크기 순서로 나열</span></span><br><span class="line">coefs_new = coefs.reindex(coefs.coefficients.abs().sort_values(ascending=<span class="literal">False</span>).index)</span><br><span class="line">coefs_new</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>feature</th>
      <th>coefficients</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>12</th>
      <td>LSTAT</td>
      <td>-3.937025</td>
    </tr>
    <tr>
      <th>7</th>
      <td>DIS</td>
      <td>-3.231212</td>
    </tr>
    <tr>
      <th>8</th>
      <td>RAD</td>
      <td>2.636627</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NOX</td>
      <td>-2.259956</td>
    </tr>
    <tr>
      <th>5</th>
      <td>RM</td>
      <td>2.158793</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHAS</td>
      <td>2.134697</td>
    </tr>
    <tr>
      <th>10</th>
      <td>PTRATIO</td>
      <td>-2.056394</td>
    </tr>
    <tr>
      <th>9</th>
      <td>TAX</td>
      <td>-1.959599</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ZN</td>
      <td>1.397968</td>
    </tr>
    <tr>
      <th>0</th>
      <td>CRIM</td>
      <td>-0.947941</td>
    </tr>
    <tr>
      <th>11</th>
      <td>B</td>
      <td>0.656704</td>
    </tr>
    <tr>
      <th>2</th>
      <td>INDUS</td>
      <td>0.147870</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AGE</td>
      <td>0.121033</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">## coefficients 시각화</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">8</span>, <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># bar plot</span></span><br><span class="line">plt.barh(coefs_new[<span class="string">'feature'</span>], coefs_new[<span class="string">'coefficients'</span>])</span><br><span class="line">plt.title(<span class="string">'"feature - coefficient" Graph'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'coefficients'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'features'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_112_0.png" alt="png"></p>
<br>
<p><strong>&gt;&gt; feature 유의성 검정</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"></span><br><span class="line">X_train2 = sm.add_constant(X_train)</span><br><span class="line">model2 = sm.OLS(y_train, X_train2).fit()</span><br><span class="line">model2.summary()</span><br></pre></td></tr></tbody></table></figure>
<table class="simpletable">
<caption>OLS Regression Results</caption>
<tbody><tr>
  <th>Dep. Variable:</th>          <td>CMEDV</td>      <th>  R-squared:         </th> <td>   0.734</td> 
</tr>
<tr>
  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.725</td> 
</tr>
<tr>
  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   82.86</td> 
</tr>
<tr>
  <th>Date:</th>             <td>Tue, 11 Aug 2020</td> <th>  Prob (F-statistic):</th> <td>1.72e-103</td>
</tr>
<tr>
  <th>Time:</th>                 <td>00:22:07</td>     <th>  Log-Likelihood:    </th> <td> -1191.9</td> 
</tr>
<tr>
  <th>No. Observations:</th>      <td>   404</td>      <th>  AIC:               </th> <td>   2412.</td> 
</tr>
<tr>
  <th>Df Residuals:</th>          <td>   390</td>      <th>  BIC:               </th> <td>   2468.</td> 
</tr>
<tr>
  <th>Df Model:</th>              <td>    13</td>      <th>                     </th>     <td> </td>    
</tr>
<tr>
  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    
</tr>
</tbody></table>
<table class="simpletable">
<tbody><tr>
     <td></td>        <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P&gt;|t|</th>  <th>[0.025</th>    <th>0.975]</th>  
</tr>
<tr>
  <th>const</th>   <td>   22.4313</td> <td>    0.245</td> <td>   91.399</td> <td> 0.000</td> <td>   21.949</td> <td>   22.914</td>
</tr>
<tr>
  <th>CRIM</th>    <td>   -0.9479</td> <td>    0.290</td> <td>   -3.263</td> <td> 0.001</td> <td>   -1.519</td> <td>   -0.377</td>
</tr>
<tr>
  <th>ZN</th>      <td>    1.3980</td> <td>    0.372</td> <td>    3.758</td> <td> 0.000</td> <td>    0.667</td> <td>    2.129</td>
</tr>
<tr>
  <th>INDUS</th>   <td>    0.1479</td> <td>    0.458</td> <td>    0.323</td> <td> 0.747</td> <td>   -0.753</td> <td>    1.049</td>
</tr>
<tr>
  <th>CHAS</th>    <td>    2.1347</td> <td>    0.899</td> <td>    2.375</td> <td> 0.018</td> <td>    0.367</td> <td>    3.902</td>
</tr>
<tr>
  <th>NOX</th>     <td>   -2.2600</td> <td>    0.490</td> <td>   -4.617</td> <td> 0.000</td> <td>   -3.222</td> <td>   -1.298</td>
</tr>
<tr>
  <th>RM</th>      <td>    2.1588</td> <td>    0.332</td> <td>    6.495</td> <td> 0.000</td> <td>    1.505</td> <td>    2.812</td>
</tr>
<tr>
  <th>AGE</th>     <td>    0.1210</td> <td>    0.415</td> <td>    0.292</td> <td> 0.771</td> <td>   -0.695</td> <td>    0.937</td>
</tr>
<tr>
  <th>DIS</th>     <td>   -3.2312</td> <td>    0.477</td> <td>   -6.774</td> <td> 0.000</td> <td>   -4.169</td> <td>   -2.293</td>
</tr>
<tr>
  <th>RAD</th>     <td>    2.6366</td> <td>    0.671</td> <td>    3.931</td> <td> 0.000</td> <td>    1.318</td> <td>    3.955</td>
</tr>
<tr>
  <th>TAX</th>     <td>   -1.9596</td> <td>    0.731</td> <td>   -2.679</td> <td> 0.008</td> <td>   -3.398</td> <td>   -0.522</td>
</tr>
<tr>
  <th>PTRATIO</th> <td>   -2.0564</td> <td>    0.319</td> <td>   -6.446</td> <td> 0.000</td> <td>   -2.684</td> <td>   -1.429</td>
</tr>
<tr>
  <th>B</th>       <td>    0.6567</td> <td>    0.272</td> <td>    2.414</td> <td> 0.016</td> <td>    0.122</td> <td>    1.191</td>
</tr>
<tr>
  <th>LSTAT</th>   <td>   -3.9370</td> <td>    0.405</td> <td>   -9.723</td> <td> 0.000</td> <td>   -4.733</td> <td>   -3.141</td>
</tr>
</tbody></table>
<table class="simpletable">
<tbody><tr>
  <th>Omnibus:</th>       <td>169.952</td> <th>  Durbin-Watson:     </th> <td>   1.935</td> 
</tr>
<tr>
  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 859.012</td> 
</tr>
<tr>
  <th>Skew:</th>          <td> 1.762</td>  <th>  Prob(JB):          </th> <td>2.94e-187</td>
</tr>
<tr>
  <th>Kurtosis:</th>      <td> 9.213</td>  <th>  Cond. No.          </th> <td>    10.7</td> 
</tr>
</tbody></table><br><br>Warnings:<br>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
 <br>
<br>
<p><strong>&gt;&gt; 주택 가격 영향 요소</strong></p>
<p>위 결과를 종합해 보면, 주택 가격의 영향 요소에 관하여 다음과 같은 결론들을 도출할 수 있습니다:</p>
<ol>
<li>
<p><strong>"INDUS"</strong>(상업적 비즈니스에 활용되지 않는 농지 면적)과 <strong>“AGE”</strong>(1940년 이전에 건설된 비율)은 유의하지 않습니다. (p value &gt; 0.05)</p>
</li>
<li>
<p><strong>"ZN"</strong>(25,000 제곱 피트(sq.ft) 이상의 주택지 비율),<br>
<strong>"CHAS"</strong>(Charles 강과 접하고 있는지 여부),<br>
<strong>"RM"</strong>(자택당 평균 방 갯수),<br>
<strong>"RAD"</strong>(소속 도시가 Radial 고속도로와의 접근성 지수),<br>
<strong>"B"</strong>(흑인 지수)는<br>
주택 가격에 Positive한 영향을 미칩니다.<br>
즉, 다른 변수의 값이 고정했을 때, 해당 변수의 값이 클수록 주택의 가격이 높을 것입니다.</p>
</li>
<li>
<p><strong>"CRIM"</strong>(지역 범죄율),<br>
<strong>"NOX"</strong>(산화질소 농도),<br>
<strong>"DIS"</strong>(보스턴 고용 센터와의 거리),<br>
<strong>"TAX"</strong>(재산세),<br>
<strong>"PTRATIO"</strong>(학생-교사 비율),<br>
<strong>"LSTAT"</strong>(빈곤층 비율)은<br>
주택 가격에 Negative한 영향을 미칩니다.<br>
즉, 다른 변수의 값이 고정했을 때, 해당 변수의 값이 작을수록 주택의 가격이 높을 것입니다.</p>
<br>
</li>
</ol>
<h3 id="3-4-모델-예측-결과-및-성능-평가"><a class="markdownIt-Anchor" href="#3-4-모델-예측-결과-및-성능-평가"></a> 3-4. 모델 예측 결과 및 성능 평가</h3>
<p><strong>&gt;&gt; 예측 결과 시각화</strong></p>
<p>학습한 모델을 Test set에 적용하여 y값(“CMEDV”)을 예측합니다.<br>
예측 결과를 확인하기 위해 실제값과 예측값을 한 plot에 출력해 시각화해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 예측 결과 시각화 (test set)</span></span><br><span class="line">df = pd.DataFrame({<span class="string">'actual'</span>: y_test, <span class="string">'prediction'</span>: pred_test})</span><br><span class="line">df = df.sort_values(by=<span class="string">'actual'</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">plt.scatter(df.index, df[<span class="string">'prediction'</span>], marker=<span class="string">'x'</span>, color=<span class="string">'r'</span>)</span><br><span class="line">plt.scatter(df.index, df[<span class="string">'actual'</span>], alpha=<span class="number">0.7</span>, marker=<span class="string">'o'</span>, color=<span class="string">'black'</span>)</span><br><span class="line">plt.title(<span class="string">"Prediction Result in Test Set"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.legend([<span class="string">'prediction'</span>, <span class="string">'actual'</span>], fontsize=<span class="number">12</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_123_0.png" alt="png"></p>
<br>
<p><strong>&gt;&gt; 모델 성능 평가</strong></p>
<p>모델의 예측 성능을 평가하기 위해 모델의 R square과 RMSE를 계산해볼게요.</p>
<ul>
<li>R square</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># R square</span></span><br><span class="line">print(model.score(X_train, y_train))  <span class="comment"># training set</span></span><br><span class="line">print(model.score(X_test, y_test))  <span class="comment"># test set</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.7341832055169144
0.7639579157366423
</code></pre>
<br>
<ul>
<li>RMSE</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># RMSE</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># training set</span></span><br><span class="line">pred_train = lr.predict(X_train)</span><br><span class="line">print(sqrt(mean_squared_error(y_train, pred_train)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># test set</span></span><br><span class="line">print(sqrt(mean_squared_error(y_test, pred_test)))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4.624051760840334
4.829847098176557
</code></pre>
<p>Test set에서 해당 예측 모델의 R square가 0.76이고, RMSE가 4.83입니다.</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>회귀</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Git Pages+Hexo搭建博客过程中的参考资料</title>
    <url>/2020/05/08/Reference/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<h3 id="博客搭建"><a class="markdownIt-Anchor" href="#博客搭建"></a> 博客搭建</h3>
<ul>
<li>
<p><a href="https://www.bilibili.com/video/BV1zp411o7y6" target="_blank" rel="noopener">bilibili — 超简单易懂的Git入门教程</a></p>
</li>
<li>
<p><a href="https://www.bilibili.com/video/BV1Ep411R7cJ" target="_blank" rel="noopener">bilibili — github+hexo搭建个人博客</a></p>
</li>
<li>
<p><a href="https://www.bilibili.com/video/BV1zp411R7gz" target="_blank" rel="noopener">bilibili — github博客搭建（二）：Markdown语法及hexo主题修改</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">Git Pages + Jekyll/Hexo搭建自己的博客(最全总结你想知道的都在这里了)</a></p>
</li>
<li>
<p><a href="https://www.jianshu.com/p/0b1fccce74e0?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation" target="_blank" rel="noopener">利用Hexo在多台电脑上提交和更新github pages博客</a></p>
</li>
<li>
<p><a href="https://www.dazhuanlan.com/2019/09/25/5d8adf4204ed4/" target="_blank" rel="noopener">在两台电脑上更新维护Github Pages + Hexo博客</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/IThelei/article/details/104179452" target="_blank" rel="noopener">[hexo d 报错] fatal: unable to auto-detect email address</a></p>
</li>
</ul>
<br>
<h3 id="网页配置-主题配置"><a class="markdownIt-Anchor" href="#网页配置-主题配置"></a> 网页配置 &amp; 主题配置</h3>
<ul>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo Usage Documents</a></li>
<li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themes</a>
<ul>
<li><a href="https://github.com/niemingzhao/niemingzhao.github.io/tree/theme" target="_blank" rel="noopener">default</a> — <a href="http://www.niemingzhao.top/" target="_blank" rel="noopener">[Demo]</a></li>
<li><a href="https://github.com/tomotoes/hexo-theme-tomotoes" target="_blank" rel="noopener">tomotoes</a> — <a href="https://tomotoes.com/" target="_blank" rel="noopener">[Demo]</a> / <a href="https://github.com/tomotoes/hexo-theme-tomotoes/wiki" target="_blank" rel="noopener">[Documents]</a></li>
<li><a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">Butterfly</a> — <a href="https://jerryc.me/" target="_blank" rel="noopener">[Demo]</a> / <a href="https://butterfly.js.org/" target="_blank" rel="noopener">[Documents]</a>  (应用中)</li>
</ul>
</li>
<li><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">Git Pages + Jekyll/Hexo搭建自己的博客(最全总结你想知道的都在这里了)</a></li>
<li><a href="https://blog.csdn.net/qq_41462923/article/details/100149605" target="_blank" rel="noopener">Hexo主题升级方法（实用！）</a></li>
</ul>
<br>
<h3 id="markdown渲染"><a class="markdownIt-Anchor" href="#markdown渲染"></a> Markdown渲染</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1zp411R7gz" target="_blank" rel="noopener">bilibili — github博客搭建（二）：Markdown语法及hexo主题修改</a> [字体修改方法(17:30)]</li>
<li><a href="https://www.dazhuanlan.com/2019/10/06/5d99b91c5f0d5/#%E9%80%89%E9%A1%B9%E5%8D%A1-2" target="_blank" rel="noopener">Markdown在Hexo中的使用实例</a> [分割线，空行插入方法]</li>
<li>Markdown渲染插件
<ul>
<li><a href="https://www.jianshu.com/p/f43dab5dbb48" target="_blank" rel="noopener">hexo-renderer-markdown-it 插件 快速配置</a></li>
<li><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a> [<a href="https://github.com/hexojs/hexo-renderer-markdown-it/wiki/Getting-Started" target="_blank" rel="noopener">Documents</a>]</li>
<li><a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" target="_blank" rel="noopener">hexo-renderer-markdown-it-plus</a> （应用中）</li>
<li><a href="https://github.com/niemingzhao/hexo-renderer-markdown" target="_blank" rel="noopener">hexo-renderer-markdown</a></li>
</ul>
</li>
<li>插入本地图片
<ul>
<li><a href="https://blog.csdn.net/dailingnan0827/article/details/86412414" target="_blank" rel="noopener">markdown插入本地图片小技巧</a></li>
<li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a>（应用中）</li>
</ul>
</li>
</ul>
<br>
<h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3>
<ul>
<li>
<p>记录网站访问量:</p>
<ul>
<li><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a></li>
<li><a href="http://blog.sciencenet.cn/blog-3247241-1139774.html" target="_blank" rel="noopener">hexo博客解决不蒜子统计无法显示问题</a></li>
</ul>
</li>
<li>
<p>设置博客评论：</p>
<ul>
<li><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Gitalk申请页面</a></li>
<li><a href="https://www.jianshu.com/p/656e6101bf0f" target="_blank" rel="noopener">在个人博客里添加评论系统–Gitalk</a></li>
<li><a href="https://www.jianshu.com/p/b4ca8e7c7980" target="_blank" rel="noopener">hexo 使用 gitalk 评论组件的几个注意点</a></li>
</ul>
</li>
<li>
<p>多语言版本:</p>
<ul>
<li>
<p><a href="https://blog.kuretru.com/posts/812a334f/" target="_blank" rel="noopener">Hexo 巧用 abbrlink 插件实现文章多语言版本</a></p>
</li>
<li>
<p><a href="https://www.v2ex.com/amp/t/280102" target="_blank" rel="noopener">(既然没人帮我，那就)自己弄了个 Hexo 多语言 index 生成插件</a></p>
</li>
</ul>
</li>
<li>
<p>更改tag大小写后出现404页面</p>
<ul>
<li><a href="http://1mhz.me/2015/hexo-deploy-case-sensitive/" target="_blank" rel="noopener">Hexo 部署到 Github Pages 文件夹大小写问题</a></li>
</ul>
</li>
<li>
<p>更改博客 Front Page 的默认配置</p>
<ul>
<li><a href="https://zhangjiejun.com/posts/config_Front-matter_in_hexo/" target="_blank" rel="noopener">hexo博客Front-matter模板配置</a></li>
</ul>
</li>
<li>
<p>博客主题升级</p>
<ul>
<li><a href="https://blog.csdn.net/qq_41462923/article/details/100149605" target="_blank" rel="noopener">Hexo主题升级方法（实用！）</a></li>
</ul>
</li>
</ul>
<br>
<h3 id="git-github"><a class="markdownIt-Anchor" href="#git-github"></a> Git &amp; Github</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Xx411m7kn" target="_blank" rel="noopener">bilibili — 【教程】学会Git玩转Github【全】</a></li>
<li><a href="https://www.bilibili.com/video/BV1zp411o7y6" target="_blank" rel="noopener">bilibili — 超简单易懂的Git入门教程</a></li>
<li><a href="https://www.cnblogs.com/flora5/p/7152556.html" target="_blank" rel="noopener">Git与Github的连接与使用</a></li>
<li><a href="https://www.jianshu.com/p/296d22275cdd" target="_blank" rel="noopener">Git和GitHub使用教程</a></li>
</ul>
<br>
<h3 id="jupyter-notebook"><a class="markdownIt-Anchor" href="#jupyter-notebook"></a> Jupyter Notebook</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Q4411H7fJ" target="_blank" rel="noopener">bilibili — python数据分析神器Jupyter notebook快速入门</a></li>
<li><a href="https://www.bilibili.com/video/BV1bx411e77u" target="_blank" rel="noopener">bilibili —【冷门教学】记笔记神器-jupyter notebook 第二弹</a></li>
<li><a href="https://blog.csdn.net/qq_27825451/article/details/84427269" target="_blank" rel="noopener">史上最详细、最完全的jupyter notebook使用教程，Python使用者必备！——ipython系列之三</a></li>
<li><a href="https://blog.csdn.net/guleileo/article/details/80490921?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6" target="_blank" rel="noopener">机器学习新手必看：Jupyter Notebook入门指南</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1471240" target="_blank" rel="noopener">Jupyter notebook简介及嵌入Hexo博客中</a></li>
<li><a href="https://www.jianshu.com/p/6c1196f12302" target="_blank" rel="noopener">用 Hexo 搭建个人博客-02：进阶试验（包括添加Jupyter Notebook支持的方法）</a></li>
<li><a href="https://www.pianshen.com/article/81761066910/" target="_blank" rel="noopener">如何在你的Jupyter Notebook中使用R语言？</a></li>
</ul>
<br>
<h3 id="markdown-typora"><a class="markdownIt-Anchor" href="#markdown-typora"></a> Markdown &amp; Typora</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Yb411c7Hi" target="_blank" rel="noopener">bilibili — 二十分钟精通排版神器Markdown</a></li>
<li><a href="https://typora.io/" target="_blank" rel="noopener">Typora官网</a> [<a href="http://theme.typora.io/doc/" target="_blank" rel="noopener">Documents</a>]</li>
<li><a href="https://www.cnblogs.com/zhiyin1209/p/12264711.html" target="_blank" rel="noopener">Typora中下载并安装主题</a></li>
<li><a href="https://www.bilibili.com/video/BV1yW411s7og" target="_blank" rel="noopener">bilibili — Typora 编辑器 —— 书写即为美学</a></li>
<li><a href="https://www.bilibili.com/video/BV1R4411575c" target="_blank" rel="noopener">bilibili — 【软件教程】如何用Typora记笔记？ | 附带Markdown基础教程</a></li>
<li><a href="http://www.95408.com/blog/3283.html" target="_blank" rel="noopener">Typora设置（中文字体、颜色、行距、内边距等）</a></li>
<li>Markdown中插入本地图片
<ul>
<li><a href="https://blog.csdn.net/dailingnan0827/article/details/86412414" target="_blank" rel="noopener">markdown插入本地图片小技巧</a></li>
<li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a></li>
</ul>
</li>
</ul>
<br>
<h3 id="html"><a class="markdownIt-Anchor" href="#html"></a> HTML</h3>
<ul>
<li>表格样式
<ul>
<li><a href="https://blog.csdn.net/chelen_jak/article/details/82112640" target="_blank" rel="noopener">好看的table css样式</a></li>
<li><a href="https://www.runoob.com/css/css-table.html" target="_blank" rel="noopener">CSS 列表样式</a></li>
<li><a href="https://www.cnblogs.com/czlovezmt/p/9771030.html" target="_blank" rel="noopener">HTML基础知识 table中 th, td, tr</a></li>
<li><a href="http://www.divcss5.com/wenji/w503.shtml" target="_blank" rel="noopener">CSS如何设置html table表格边框样式</a></li>
<li><a href="http://ask.zol.com.cn/x/4597048.html" target="_blank" rel="noopener">CSS如何设置表格中的字体大小</a></li>
<li><a href="https://www.w3school.com.cn/cssref/pr_padding.asp" target="_blank" rel="noopener">CSS padding 属性</a></li>
<li><a href="https://aboooks.tistory.com/78" target="_blank" rel="noopener">[html/css] margin 속성 자세히 알아보기</a></li>
<li><a href="http://www.hipenpal.com/tool/css-beautiful-table-templates-in-traditional-chinese.php?nowpage=4&amp;movepage=1&amp;type=14&amp;od=e" target="_blank" rel="noopener">漂亮的CSS表格样式</a></li>
</ul>
</li>
</ul>
<br>
<br>
<hr>
<p>在此感谢所有提供了宝贵学习资料的原po主们~</p>
<hr>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【USAGE】</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Typora</tag>
        <tag>Markdown</tag>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>Jupyter notebook</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 常用语法（持续更新）</title>
    <url>/2020/05/10/Markdown-Syntax/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<h2 id="markdown-常用语法"><a class="markdownIt-Anchor" href="#markdown-常用语法"></a> <strong>Markdown 常用语法</strong></h2>
<br>
<h3 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> <strong>标题</strong></h3>
<p>一级标题： “#” + 空格 + “一级标题”<br>
二级标题： “##” + 空格 + “二级标题”<br>
三级标题： “###” + 空格 + “三级标题”<br>
……<br>
以此类推 【最多到6级】<br>
<br></p>
<h3 id="换行"><a class="markdownIt-Anchor" href="#换行"></a> <strong>换行</strong></h3>
<p>“内容” 末尾 + 2个空格 + Enter</p>
<br>
<h3 id="斜体"><a class="markdownIt-Anchor" href="#斜体"></a> <strong>斜体</strong></h3>
<ul>
<li>
<p>方法一：“内容”前后加1个 * 号（无空格）</p>
</li>
<li>
<p>方法二：“内容”前后加1个下划线（无空格）</p>
</li>
</ul>
<blockquote>
<p>*“内容” *    ——&gt;  <em>“内容”</em></p>
<p>_ “内容” _   ——&gt;  <em>内容</em></p>
</blockquote>
<br>
<h3 id="加粗"><a class="markdownIt-Anchor" href="#加粗"></a> <strong>加粗</strong></h3>
<ul>
<li>
<p>方法一：“内容”前后加2个 * 号（无空格）</p>
</li>
<li>
<p>方法二：“内容”前后加2个下划线（无空格）</p>
</li>
</ul>
<blockquote>
<p>** “内容” **   ——&gt;  <strong>"内容"</strong></p>
<p>__ “内容” __   ——&gt;  <strong>“内容”</strong></p>
</blockquote>
<br>
<h3 id="斜体加粗"><a class="markdownIt-Anchor" href="#斜体加粗"></a> <strong>斜体加粗</strong></h3>
<p>“内容”前后加 3 个 * 号 （无空格）</p>
<blockquote>
<p><em><strong>“内容”</strong></em></p>
</blockquote>
<br>
<h3 id="删除线"><a class="markdownIt-Anchor" href="#删除线"></a> <strong>删除线</strong></h3>
<p>”内容”前后加 2 个波浪线（~）</p>
<blockquote>
<p>~~ “内容” ~~   ——&gt;  <s>“内容”</s></p>
</blockquote>
<br>
<h3 id="高亮"><a class="markdownIt-Anchor" href="#高亮"></a> <strong>高亮</strong></h3>
<p>“内容”前后加 2 个 = 号</p>
<blockquote>
<p>== “内容” ==   ——&gt;  <mark>“内容”</mark></p>
</blockquote>
<br>
<h3 id="字体颜色字号"><a class="markdownIt-Anchor" href="#字体颜色字号"></a> <strong>字体，颜色，字号</strong></h3>
<p>使用 font 标签</p>
 <figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span>  <span class="attr">face</span>=<span class="string">'Microsift Yahei'</span>  <span class="attr">color</span>=<span class="string">'red'</span>  <span class="attr">size</span>=<span class="string">'6'</span>&gt;</span> 字体，颜色和字号 <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p><font color="red" size="6"> 字体，颜色和字号 </font></p>
<br>
<h3 id="上标-下标"><a class="markdownIt-Anchor" href="#上标-下标"></a> <strong>上标 &amp; 下标</strong></h3>
<ul>
<li>
<p>上标：“内容”前后加 1 个 ^ 号</p>
</li>
<li>
<p>下标：“内容”前后加 1 个 ~ 号</p>
</li>
</ul>
<blockquote>
<p>我是 ^ 上标 ^  ——&gt;  我是<sup>上标</sup></p>
<p>我是 ~ 下标 ~  ——&gt; 我是<sub>下标</sub></p>
</blockquote>
<br>
<h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> <strong>引用</strong></h3>
<p>“内容”前加 &gt; 号</p>
<blockquote>
<p>“内容”</p>
</blockquote>
<p>引用号可叠用，&gt;号越多，级数越低<br>
例如：可以使用&gt;, &gt;&gt;, &gt;&gt;&gt; 的形式</p>
<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
</blockquote>
</blockquote>
</blockquote>
<br>
<h3 id="文字内容对齐设置"><a class="markdownIt-Anchor" href="#文字内容对齐设置"></a> <strong>文字内容对齐设置</strong></h3>
<p><strong>1. 使用div标签：</strong></p>
<pre><code><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: right"</span>&gt;</span>your-text-here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</code></pre>
<blockquote>
<div style="text-align: left">居左</div>
<div style="text-align: center">居中</div>
<div style="text-align: right">居右</div>
</blockquote>
<br>
<p><strong>2. 使用p标签：(在Jupyter Notebook中不适用)</strong></p>
<p>居中：<code>&lt;center&gt; 内容 &lt;/center&gt;</code></p>
<p>居左/居右：<code>&lt;p align='left'&gt; 内容 &lt;/p&gt;</code></p>
<blockquote>
<p align="left"> 居左 </p>
<center> 居中 </center>
<p align="right"> 居右 </p>
</blockquote>
<br>
<h3 id="插入链接"><a class="markdownIt-Anchor" href="#插入链接"></a> <strong>插入链接</strong></h3>
<p>​     中括号内输入“显示的文字”，紧接着小括号内输入“网址链接”<br>
​    【注意：网站地址需要 http 开头，最好直接复制】</p>
<blockquote>
<p><a href="http://www.baidu.com/" target="_blank" rel="noopener">点我进入百度</a></p>
</blockquote>
<br>
<h3 id="插入图片"><a class="markdownIt-Anchor" href="#插入图片"></a> <strong>插入图片</strong></h3>
<p>​     感叹号 + 中括号内输入“显示的文字”，紧接着小括号内输入“图片链接”<br>
​    【注意：图片链接非网页的网址栏链接，而是右键“复制图片地址”得到的链接 (Chrome)】</p>
<blockquote>
<p><img src="http://t9.baidu.com/it/u=1307125826,3433407105&amp;fm=79&amp;app=86&amp;f=JPEG?w=5760&amp;h=3240" alt="图片"></p>
</blockquote>
<br>
<ul>
<li>
<p><strong>调整图片大小：</strong></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"链接"</span> <span class="attr">width</span>=<span class="string">"宽度(数字or百分比)"</span> <span class="attr">height</span>=<span class="string">"高度"</span> <span class="attr">alt</span>=<span class="string">"图片名称"</span> <span class="attr">align</span>=<span class="string">center/left/right</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> <strong>列表</strong></h3>
<h4 id="1-有序列表"><a class="markdownIt-Anchor" href="#1-有序列表"></a> <strong>（1） 有序列表</strong></h4>
<p>​      （序号1+点+空格）+内容+回车<br>
​      （序号2+点+空格）+内容+回车<br>
​      （序号3+点+空格）+内容+回车</p>
<blockquote>
<ol>
<li>第一行</li>
<li>第二行</li>
<li>第三行</li>
</ol>
</blockquote>
<p>​      【注意】：系统会默认调整有序列表的序列数。即，即使你误输入成了1.，2.，4.，系统也会自动更正为 1.，2.，3.</p>
<blockquote>
<ol>
<li>第一点</li>
<li>第二点</li>
<li>第四点</li>
</ol>
</blockquote>
<br>
<h4 id="2无序列表"><a class="markdownIt-Anchor" href="#2无序列表"></a> <strong>（2）无序列表</strong></h4>
<p>​        使用“ + ”+空格+内容<br>
​       ​ 或者“ - ”+空格+内容<br>
​       ​ 或者“ * ”+空格+内容<br>
​       下一级：前面加 tab</p>
<blockquote>
<ul>
<li>
<p>第一章</p>
</li>
<li>
<p>第二章</p>
</li>
<li>
<p>第三章</p>
<ul>
<li>第一节</li>
</ul>
</li>
</ul>
</blockquote>
<br>
<h4 id="3任务列表"><a class="markdownIt-Anchor" href="#3任务列表"></a> <strong>（3）任务列表</strong></h4>
<p>​       短横线 + 1 个空格 + 中括号（括号中间带 1 个空格） + 1 个空格 + “内容”</p>
<blockquote>
<ul>
<li>[x] 学习python</li>
<li>[ ] 学习SQL</li>
</ul>
</blockquote>
<br>
<h3 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> <strong>表格</strong></h3>
<ul>
<li>
<p>添加表格<br>
竖线作为列分界线，换行竖线中间输入短横线作为行分界线</p>
<img src="/images/Markdown-Syntax/image-20201110155108847-1604994124837.png" alt="image-20201110155108847" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p>表格内容对齐</p>
<table>
<thead>
<tr>
<th style="text-align:center">左对齐</th>
<th style="text-align:center">居中</th>
<th style="text-align:center">右对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">:-----</td>
<td style="text-align:center">:-----:</td>
<td style="text-align:center">-----:</td>
</tr>
<tr>
<td style="text-align:center"><img src="/images/Markdown-Syntax/image-20201110155454459-1604994136986.png" alt="image-20201110155454459" style="zoom:80%;"></td>
<td style="text-align:center"><img src="/images/Markdown-Syntax/image-20201110155540639-1604994144047.png" alt="image-20201110155540639" style="zoom:80%;"></td>
<td style="text-align:center"><img src="/images/Markdown-Syntax/image-20201110155606006-1604994150443.png" alt="image-20201110155606006" style="zoom:80%;"></td>
</tr>
</tbody>
</table>
</li>
</ul>
<br>
<ul>
<li>
<p>表格内容换行</p>
<p>插入 &lt;br&gt;</p>
<img src="/images/Markdown-Syntax/image-20201110160141094-1604994157283.png" alt="image-20201110160141094" style="zoom:80%;">
</li>
</ul>
<br>
<h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> <strong>代码</strong></h3>
<p>三个 ` 号，再输入所使用的编程语言</p>
 <figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"Python"</span>)  <span class="comment"># python</span></span><br></pre></td></tr></tbody></table></figure>
 <figure class="highlight r"><table><tbody><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)  <span class="comment"># R语言</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="插入目录-only-for-typora"><a class="markdownIt-Anchor" href="#插入目录-only-for-typora"></a> <strong>插入目录 [Only for Typora]</strong></h3>
<ul>
<li>中括号内输入toc</li>
<li>In Hexo: @[toc] (在使用hexo-renderer-markdown-it-plus插件时)</li>
</ul>
<br>
<br>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【USAGE】</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Matplotlib - (2) 다양한 그래프 그리기</title>
    <url>/2020/06/28/S-Python-Matplotlib2/</url>
    <content><![CDATA[<h1 id="matplotlib을-활용한-다양한-그래프-그리기"><a class="markdownIt-Anchor" href="#matplotlib을-활용한-다양한-그래프-그리기"></a> matplotlib을 활용한 다양한 그래프 그리기</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-scatterplot"><strong>1. Scatterplot</strong></a>
<ul>
<li><a href="#1-1-x-y-colors-area-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">1-1. x, y, colors, area 설정하기</a></li>
<li><a href="#1-2-cmap%EA%B3%BC-alpha">1-2. cmap과 alpha</a></li>
</ul>
</li>
<li><a href="#2-barplot-barhplot"><strong>2. Barplot, Barhplot</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-barplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-1. 기본 barplot 그리기</a></li>
<li><a href="#2-2-%EA%B8%B0%EB%B3%B8-barhplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-2. 기본 Barhplot 그리기</a></li>
<li><a href="#2-3-barplot%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-3. Barplot에서 비교 그래프 그리기</a></li>
</ul>
</li>
<li><a href="#3-line-plot"><strong>3. Line Plot</strong></a>
<ul>
<li><a href="#3-1-%EA%B8%B0%EB%B3%B8-lineplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-1. 기본 lineplot 그리기</a></li>
<li><a href="#3-2-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. 2개 이상의 그래프 그리기</a></li>
<li><a href="#3-3-%EB%A7%88%EC%BB%A4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-3. 마커 스타일링</a></li>
<li><a href="#3-4-%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-4. 라인 스타일링</a></li>
</ul>
</li>
<li><a href="#4-areaplot-filled-area"><strong>4. Areaplot (Filled Area)</strong></a>
<ul>
<li><a href="#4-1-%EA%B8%B0%EB%B3%B8-areaplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">4-1. 기본 areaplot 그리기</a></li>
<li><a href="#4-2-%EA%B2%BD%EA%B3%84%EC%84%A0%EC%9D%84-%EA%B5%B5%EA%B2%8C-%EA%B7%B8%EB%A6%AC%EA%B3%A0-area%EB%8A%94-%EC%98%85%EA%B2%8C-%EA%B7%B8%EB%A6%AC%EB%8A%94-%ED%9A%A8%EA%B3%BC-%EC%A0%81%EC%9A%A9">4-2. 경계선을 굵게 그리고 area는 옅게 그리는 효과 적용</a></li>
<li><a href="#4-3-%EC%97%AC%EB%9F%AC-%EA%B7%B8%EB%9E%98%ED%94%84%EB%A5%BC-%EA%B2%B9%EC%B3%90%EC%84%9C-%ED%91%9C%ED%98%84">4-3. 여러 그래프를 겹쳐서 표현</a></li>
</ul>
</li>
<li><a href="#5-histogram"><strong>5. Histogram</strong></a>
<ul>
<li><a href="#5-1-%EA%B8%B0%EB%B3%B8-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 Histogram 그리기</a></li>
<li><a href="#5-2-%EB%8B%A4%EC%A4%91-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-2. 다중 Histogram 그리기</a></li>
<li><a href="#5-3-y%EC%B6%95%EC%97%90-density-%ED%91%9C%EA%B8%B0">5-3. Y축에 Density 표기</a></li>
</ul>
</li>
<li><a href="#6-pie-chart"><strong>6. Pie Chart</strong></a></li>
<li><a href="#7-box-plot"><strong>7. Box Plot</strong></a>
<ul>
<li><a href="#7-1-%EA%B8%B0%EB%B3%B8-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-1. 기본 박스플롯 생성</a></li>
<li><a href="#7-2-%EB%8B%A4%EC%A4%91-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-2. 다중 박스플롯 생성</a></li>
<li><a href="#7-3-box-plot-%EC%B6%95-%EB%B0%94%EA%BE%B8%EA%B8%B0">7-3. Box Plot 축 바꾸기</a></li>
<li><a href="#7-4-outlier-%EB%A7%88%EC%BB%A4-%EC%8B%AC%EB%B3%BC%EA%B3%BC-%EC%BB%AC%EB%9F%AC-%EB%B3%80%EA%B2%BD">7-4. Outlier 마커 심볼과 컬러 변경</a></li>
</ul>
</li>
<li><a href="#8-3d-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0"><strong>8. 3D 그래프 그리기</strong></a>
<ul>
<li><a href="#8-1-%EB%B0%91%EA%B7%B8%EB%A6%BC-%EA%B7%B8%EB%A6%AC%EA%B8%B0-canvas">8-1. 밑그림 그리기 (canvas)</a></li>
<li><a href="#8-2-3d-plot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-2. 3D plot 그리기</a></li>
<li><a href="#8-3-3d-scatter-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-3. 3d-scatter 그리기</a></li>
<li><a href="#8-4-contour3d-%EA%B7%B8%EB%A6%AC%EA%B8%B0-%EB%93%B1%EA%B3%A0%EC%84%A0">8-4. contour3D 그리기 (등고선)</a></li>
</ul>
</li>
<li><a href="#9-imshow"><strong>9. imshow</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
 <br>
<h2 id="1-scatterplot"><a class="markdownIt-Anchor" href="#1-scatterplot"></a> <strong>1. Scatterplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.scatter.html" target="_blank" rel="noopener">&lt;plt.scatter&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.scatter</strong>( <em>x, y, s=None, c=None, cmap=None, alpha=None</em> )</p>
<ul>
<li><strong>s:</strong> marker size</li>
<li><strong>c:</strong> color</li>
<li><strong>cmap:</strong> colormap</li>
<li><strong>alpha:</strong> between 0 and 1</li>
</ul>
</blockquote>
  <br>
<p><strong>Data 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 0~1 사이의 random value 50 개 생성</span></span><br><span class="line">np.random.rand(<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0.65532609, 0.19008877, 0.72343673, 0.63981883, 0.07531076,
       0.67080518, 0.93282479, 0.04750706, 0.81240348, 0.40032198,
       0.59662026, 0.25797641, 0.37315105, 0.6266855 , 0.50732916,
       0.55803591, 0.63610033, 0.88673444, 0.99751021, 0.03723629,
       0.07695327, 0.44247   , 0.5245731 , 0.41263818, 0.8009583 ,
       0.57238283, 0.58647938, 0.9882001 , 0.88993497, 0.5396632 ,
       0.24683042, 0.0838774 , 0.0826096 , 0.89701004, 0.78305308,
       0.21027637, 0.93441558, 0.05756907, 0.6299839 , 0.05833447,
       0.24247082, 0.9057054 , 0.1585265 , 0.45569918, 0.85597115,
       0.43875418, 0.96962923, 0.17476189, 0.68713067, 0.832518  ])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 0 부터 50 개의 value 생성</span></span><br><span class="line">np.arange(<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])
</code></pre>
 <br> 
<h3 id="1-1-x-y-colors-area-설정하기"><a class="markdownIt-Anchor" href="#1-1-x-y-colors-area-설정하기"></a> 1-1. x, y, colors, area 설정하기</h3>
<blockquote>
<p><strong>plt.scatter</strong> ( <em>x, y, s = , c =</em> )</p>
<ul>
<li><strong>s</strong>: 점의 넓이. area 값이 커지면 넓이도 커진다</li>
<li><strong>c</strong>: 임의 값을 color 값으로 변환</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.random.rand(<span class="number">50</span>)</span><br><span class="line">y = np.random.rand(<span class="number">50</span>)</span><br><span class="line">colors = np.arange(<span class="number">50</span>)</span><br><span class="line">area = x * y * <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, s = area, c = colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_16_0.png" alt="png"></p>
<br>
<h3 id="1-2-cmap과-alpha"><a class="markdownIt-Anchor" href="#1-2-cmap과-alpha"></a> 1-2. cmap과 alpha</h3>
<blockquote>
<ul>
<li>cmap에 컬러를 지정하면, 컬러 값을 모두 같게 가져갈 수도 있다</li>
<li>alpha값은 투명도를 나타내며 0~1 사이의 값을 지정해 둘 수 있으며, 0에 가까울 수록 투명한 값을 가진다</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span> ,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 0.1'</span>)</span><br><span class="line">  </span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 0.5'</span>)</span><br><span class="line">    </span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">1.0</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 1.0'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_20_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-barplot-barhplot"><a class="markdownIt-Anchor" href="#2-barplot-barhplot"></a> <strong>2. Barplot, Barhplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.bar.html" target="_blank" rel="noopener">&lt;plt.bar&gt;  Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.bar</strong>(<em>x, height, width = 0.8, align = ‘center’, alpha = …, color = …</em> )</p>
<ul>
<li><strong>x:</strong> The x coordinates of the bars</li>
<li><strong>height:</strong> The height(s) of the bars</li>
<li><strong>width:</strong> The width(s) of the bars (default: 0.8)</li>
<li><strong>align:</strong> Alignment of the bars to the x coordinates:<br>
{‘center’, ‘edge’}</li>
</ul>
</blockquote>
<br>
<h3 id="2-1-기본-barplot-그리기"><a class="markdownIt-Anchor" href="#2-1-기본-barplot-그리기"></a> 2-1. 기본 barplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y label</span></span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_28_0.png" alt="png"></p>
<br>
<p>문자열이 겹히는 현상 발생했다. 이를 해결하는 방법은 2가지다:</p>
<ol>
<li>
<p>문자열 화전:  plt.xtick(rotation = …)</p>
</li>
<li>
<p>barh(수평바 그래프) 사용</p>
</li>
</ol>
  <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x ticks</span></span><br><span class="line">plt.xticks(rotation = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y label</span></span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_32_0.png" alt="png"></p>
<br>
<h3 id="2-2-기본-barhplot-그리기"><a class="markdownIt-Anchor" href="#2-2-기본-barhplot-그리기"></a> 2-2. 기본 Barhplot 그리기</h3>
<p>barh 함수에서는 <strong>xticks / ylabel 로 설정</strong>했던 부분을 <strong>yticks / xlabel 로 변경함</strong></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.barh(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'green'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y ticks</span></span><br><span class="line"><span class="comment"># plt.yticks(x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x label</span></span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_36_0.png" alt="png"></p>
<br>
<h3 id="2-3-barplot에서-비교-그래프-그리기"><a class="markdownIt-Anchor" href="#2-3-barplot에서-비교-그래프-그리기"></a> 2-3. Barplot에서 비교 그래프 그리기</h3>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/gallery/lines_bars_and_markers/barchart.html#sphx-glr-gallery-lines-bars-and-markers-barchart-py" target="_blank" rel="noopener">Grouped bar chart with labels</a></p>
</blockquote>
<p><strong>(1) barplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.bar(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>)</span><br><span class="line">axes.bar(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.xticks(x)</span><br><span class="line">axes.set_xticklabels(x_label)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_41_0.png" alt="png"></p>
<br>
<p><strong>(2) barhplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.barh(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>, color = <span class="string">"green"</span>)</span><br><span class="line">axes.barh(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.5</span>, color = <span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.yticks(x)</span><br><span class="line">axes.set_yticklabels(x_label)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_44_0.png" alt="png"></p>
<br>
<br>
<h2 id="3-line-plot"><a class="markdownIt-Anchor" href="#3-line-plot"></a> <strong>3. Line Plot</strong></h2>
<blockquote>
<p><strong>plt.plot</strong> ( <em>x, y, label=…, color=…, alpha=…, marker=…, linestyle=…</em>)</p>
</blockquote>
<h3 id="3-1-기본-lineplot-그리기"><a class="markdownIt-Anchor" href="#3-1-기본-lineplot-그리기"></a> 3-1. 기본 lineplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y = <span class="number">1</span> + np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_50_0.png" alt="png"></p>
<br>
<h3 id="3-2-2개-이상의-그래프-그리기"><a class="markdownIt-Anchor" href="#3-2-2개-이상의-그래프-그리기"></a> 3-2. 2개 이상의 그래프 그리기</h3>
<ul>
<li>label: line 이름 (legend에 나타남)</li>
<li>color: 컬러 옵션</li>
<li>alpha: 투명도 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span> + np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1,label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha = <span class="number">0.3</span>)  <span class="comment"># label 설정값을 legend에 나타날 수 있음</span></span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">"x value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y value"</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"sin and cos graph"</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_54_0.png" alt="png"></p>
<br>
<h3 id="3-3-마커-스타일링"><a class="markdownIt-Anchor" href="#3-3-마커-스타일링"></a> 3-3. 마커 스타일링</h3>
<ul>
<li>marker: 마커 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.3</span>, marker=<span class="string">'o'</span>)</span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.7</span>, marker=<span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_58_0.png" alt="png"></p>
<br>
<h3 id="3-4-라인-스타일링"><a class="markdownIt-Anchor" href="#3-4-라인-스타일링"></a> 3-4. 라인 스타일링</h3>
<ul>
<li>linestyle: 라인 스타일 변경 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_62_0.png" alt="png"></p>
<br>
<br>
<h2 id="4-areaplot-filled-area"><a class="markdownIt-Anchor" href="#4-areaplot-filled-area"></a> <strong>4. Areaplot (Filled Area)</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.fill_between.html" target="_blank" rel="noopener">&lt;plt.fill_between&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.fill_between</strong> (<em>x, y, color=…, alpha=…</em>)</p>
</blockquote>
<h3 id="4-1-기본-areaplot-그리기"><a class="markdownIt-Anchor" href="#4-1-기본-areaplot-그리기"></a> 4-1. 기본 areaplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">y = np.random.randint(low=<span class="number">5</span>, high=<span class="number">10</span>, size=<span class="number">20</span>)</span><br><span class="line">y</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([8, 8, 7, 6, 5, 8, 6, 9, 8, 8, 5, 5, 6, 6, 5, 5, 6, 8, 9, 5])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">21</span>)</span><br><span class="line">y = np.random.randint(low=<span class="number">5</span>, high=<span class="number">10</span>, size=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fill_between으로 색칠하기</span></span><br><span class="line">plt.fill_between(x, y, color = <span class="string">"green"</span>, alpha = <span class="number">0.6</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_72_0.png" alt="png"></p>
<br>
<h3 id="4-2-경계선을-굵게-그리고-area는-옅게-그리는-효과-적용"><a class="markdownIt-Anchor" href="#4-2-경계선을-굵게-그리고-area는-옅게-그리는-효과-적용"></a> 4-2. 경계선을 굵게 그리고 area는 옅게 그리는 효과 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.fill_between(x, y, color=<span class="string">'green'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(x, y, color=<span class="string">'green'</span>, alpha=<span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_75_0.png" alt="png"></p>
<br>
<h3 id="4-3-여러-그래프를-겹쳐서-표현"><a class="markdownIt-Anchor" href="#4-3-여러-그래프를-겹쳐서-표현"></a> 4-3. 여러 그래프를 겹쳐서 표현</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.05</span>)</span><br><span class="line">y_1 = np.cos(x) + <span class="number">1</span></span><br><span class="line">y_2 = np.sin(x) + <span class="number">1</span></span><br><span class="line">y_3 = y_1 * y_2 / np.pi</span><br><span class="line"></span><br><span class="line">plt.fill_between(x, y_1, label=<span class="string">'1+cos'</span>, color=<span class="string">'green'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.fill_between(x, y_2, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.fill_between(x, y_3, label=<span class="string">'sin*cos/pi'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_78_0.png" alt="png"></p>
<p>많이 겹치는 부분이 어디인지 확인하고 싶을 때 많이 활용됨</p>
<p><br> <br></p>
<h2 id="5-histogram"><a class="markdownIt-Anchor" href="#5-histogram"></a> <strong>5. Histogram</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.hist.html" target="_blank" rel="noopener">&lt;plt.hist&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.hist</strong> (x, bins = …)</p>
</blockquote>
<h3 id="5-1-기본-histogram-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-histogram-그리기"></a> 5-1. 기본 Histogram 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">plt.hist(x, bins = bins)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_87_0.png" alt="png"></p>
<br>
<h3 id="5-2-다중-histogram-그리기"><a class="markdownIt-Anchor" href="#5-2-다중-histogram-그리기"></a> 5-2. 다중 Histogram 그리기</h3>
<blockquote>
<p><strong>fig, axs = plt.subplots</strong> (<em>row, column, sharey = True, tight_layout = True</em>)<br>
<strong>axes[i].hist</strong> ( <em>x, bins = …</em>)</p>
<ul>
<li><strong>sharey:</strong> 다중 그래프가 같은 y축을 share</li>
<li><strong>tight_layout:</strong> graph의 패딩을 자동으로 조절해주어 fit한 graph를 생성</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, </span><br><span class="line">                        sharey = <span class="literal">True</span>,</span><br><span class="line">                        tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins)</span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins*<span class="number">2</span>)</span><br><span class="line">axes[<span class="number">2</span>].hist(x, bins = bins*<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_91_0.png" alt="png"></p>
<br>
<h3 id="5-3-y축에-density-표기"><a class="markdownIt-Anchor" href="#5-3-y축에-density-표기"></a> 5-3. Y축에 Density 표기</h3>
<ul>
<li><strong>pdf(확률 밀도 함수):</strong> density = True</li>
<li><strong>cdf(누적 확률 함수):</strong> density = True, cumulatice = True</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># density=True 값을 통하여 Y축에 density를 표기할 수 있다</span></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins, density = <span class="literal">True</span>, cumulative = <span class="literal">True</span>)  <span class="comment">#cdf: 누적확률함수</span></span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins, density = <span class="literal">True</span>)  <span class="comment"># pdf: 확률밀도함수</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_95_0.png" alt="png"></p>
<br>
<br>
<h2 id="6-pie-chart"><a class="markdownIt-Anchor" href="#6-pie-chart"></a> <strong>6. Pie Chart</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.pie.html" target="_blank" rel="noopener">&lt;plt.pie&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.pie</strong>( <em>x, explode=None, labels=None, colors=None, autopct=None, shadow=False, startangle=None,…</em>)</p>
</blockquote>
<p><strong>pie chart 옵션</strong></p>
<ul>
<li>explode: 파이에서 툭 튀어져 나온 비율</li>
<li>autopct: 퍼센트 자동으로 표기</li>
<li>shadow: 그림자 표시</li>
<li>startangle: 파이를 그리기 시작할 각도</li>
</ul>
<p><strong>리턴을 받는 인자</strong></p>
<ul>
<li>
<p>texts: label에 대한 텍스트 효과</p>
</li>
<li>
<p>autotexts: 파이 위에 그려지는 텍스트 효과</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">labels = [<span class="string">'Samsung'</span>, <span class="string">'Huawei'</span>, <span class="string">'Apple'</span>, <span class="string">'Xiaomi'</span>, <span class="string">'Oppo'</span>, <span class="string">'Etc'</span>]</span><br><span class="line">sizes = [<span class="number">20.4</span>, <span class="number">15.8</span>, <span class="number">10.5</span>, <span class="number">9</span>, <span class="number">7.6</span>, <span class="number">36.7</span>]</span><br><span class="line">explode = (<span class="number">0.3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># text, autotext 인자를 활용하여 텍스트 스타일링을 적용한다</span></span><br><span class="line">patches, texts, autotexts = plt.pie(sizes,</span><br><span class="line">                                    explode = explode,</span><br><span class="line">                                    labels = labels,</span><br><span class="line">                                    autopct = <span class="string">"%1.1f%%"</span>,</span><br><span class="line">                                    shadow = <span class="literal">True</span>,</span><br><span class="line">                                    startangle=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Smartphone Pie'</span>, fontsize=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># label 텍스트에 대한 스타일 적용</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> texts:</span><br><span class="line">    t.set_fontsize(<span class="number">12</span>)</span><br><span class="line">    t.set_color(<span class="string">'gray'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># pie 위의 텍스트에 대한 스타일 적용</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> autotexts:</span><br><span class="line">    t.set_fontsize(<span class="number">18</span>)</span><br><span class="line">    t.set_color(<span class="string">'white'</span>)</span><br><span class="line">    </span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_103_0.png" alt="png"></p>
<br>
<br>
<h2 id="7-box-plot"><a class="markdownIt-Anchor" href="#7-box-plot"></a> <strong>7. Box Plot</strong></h2>
<img src="/images/S-Python-Matplotlib2/R800x0" alt="box plot 해석" style="zoom:80%;">
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.2.1/api/_as_gen/matplotlib.pyplot.boxplot.html" target="_blank" rel="noopener">&lt;plt.boxplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.boxplot</strong> (<em>data, vert=True, flierprops = …</em>)</p>
<ul>
<li><strong>vert:</strong> boxplot 축 바꾸기 (If True: 수직 boxplot; If not: 수평 boxplot)</li>
<li><strong>flierprops:</strong> oulier marker 설정 (Symbol &amp; Color)</li>
</ul>
</blockquote>
  <br>
<p><strong>샘플 데이터 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Data Generation Process (DGP)</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="7-1-기본-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-1-기본-박스플롯-생성"></a> 7-1. 기본 박스플롯 생성</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.tight_layout</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_115_0.png" alt="png"></p>
<br>
<h3 id="7-2-다중-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-2-다중-박스플롯-생성"></a> 7-2. 다중 박스플롯 생성</h3>
<blockquote>
<ul>
<li>다중 그래프 생성을 위해서는 data 자체가 <strong>2차원으로 구성</strong>되어 있어야 한다</li>
<li>row와 column으로 구성된 DataFrame에서 Column은 x축에 Row는 Y축에 구성되어 있음</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread1 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center1 = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high1 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low1 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data1 = np.concatenate((spread1, center1, flier_high1, flier_low1))</span><br><span class="line"></span><br><span class="line">spread2 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center2 = np.ones(<span class="number">25</span>) * <span class="number">40</span></span><br><span class="line">flier_high2 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low2 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data2 = np.concatenate((spread2, center2, flier_high2, flier_low2))</span><br><span class="line"></span><br><span class="line">data1.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">data2.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = [data1, data2, data2[::<span class="number">2</span>, <span class="number">0</span>]]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_120_0.png" alt="png"></p>
<br>
<h3 id="7-3-box-plot-축-바꾸기"><a class="markdownIt-Anchor" href="#7-3-box-plot-축-바꾸기"></a> 7-3. Box Plot 축 바꾸기</h3>
<ul>
<li><strong>vert = False</strong> 옵션을 사용</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data, vert = <span class="literal">False</span>)</span><br><span class="line">plt.title(<span class="string">'Horizontal Box Plot'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_124_0.png" alt="png"></p>
<br>
<h3 id="7-4-outlier-마커-심볼과-컬러-변경"><a class="markdownIt-Anchor" href="#7-4-outlier-마커-심볼과-컬러-변경"></a> 7-4. Outlier 마커 심볼과 컬러 변경</h3>
<ul>
<li><strong>flierprops = …</strong> 옵션 사용</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">outlier_marker = dict(markerfacecolor = <span class="string">'r'</span>, marker = <span class="string">'D'</span>)  <span class="comment"># red diamond</span></span><br><span class="line"></span><br><span class="line">plt.boxplot(data, flierprops = outlier_marker)</span><br><span class="line">plt.title(<span class="string">'Change Outlier Symbols'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_128_0.png" alt="png"></p>
<br>
<br>
<h2 id="8-3d-그래프-그리기"><a class="markdownIt-Anchor" href="#8-3d-그래프-그리기"></a> <strong>8. 3D 그래프 그리기</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#contour-plots" target="_blank" rel="noopener">mplot3d tutorial</a></p>
</blockquote>
<p>3D 로 그래프를 그리기 위해서는 <code>mplot3d</code>를 추가로 import 해야 함</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits <span class="keyword">import</span> mplot3d</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="8-1-밑그림-그리기-canvas"><a class="markdownIt-Anchor" href="#8-1-밑그림-그리기-canvas"></a> 8-1. 밑그림 그리기 (canvas)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_137_0.png" alt="png"></p>
<br>
<h3 id="8-2-3d-plot-그리기"><a class="markdownIt-Anchor" href="#8-2-3d-plot-그리기"></a> 8-2. 3D plot 그리기</h3>
<blockquote>
<p><em>Axes</em> = plt.axes(projection = ‘3d’)</p>
<ul>
<li><em>Axes</em> <strong>.plot</strong> (<em>x, y, z, color=…, alpha=…, marker=…</em>)</li>
<li><em>Axes</em> <strong>.plot3D</strong> (<em>x, y, z, color=…, alpha=…, marker=…</em>)</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># projection = 3d로 설정</span></span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y, z 데이터 생성</span></span><br><span class="line">z = np.linspace(<span class="number">0</span>, <span class="number">15</span>, <span class="number">1000</span>)</span><br><span class="line">x = np.sin(z)</span><br><span class="line">y = np.cos(z)</span><br><span class="line"></span><br><span class="line">ax.plot(x, y, z, <span class="string">'gray'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_142_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># projection = 3d로 설정</span></span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y, z 데이터 생성</span></span><br><span class="line">sample_size = <span class="number">100</span></span><br><span class="line">x = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size)) <span class="comment"># cumsum: 누적 합</span></span><br><span class="line">y = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size))</span><br><span class="line">z = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size))</span><br><span class="line"></span><br><span class="line">ax.plot3D(x, y, z, alpha=<span class="number">0.6</span>, marker=<span class="string">'o'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'ax.plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_144_0.png" alt="png"></p>
<br>
<h3 id="8-3-3d-scatter-그리기"><a class="markdownIt-Anchor" href="#8-3-3d-scatter-그리기"></a> 8-3. 3d-scatter 그리기</h3>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.scatter.html" target="_blank" rel="noopener">&lt;Axes.scatter&gt; Document</a></p>
</blockquote>
<blockquote>
<p><em>Axes</em> = fig.add_subplot(111, projection=‘3d’) <font color="blue"># Axe3D object</font></p>
<p><em>Axes</em> <strong>.scatter</strong>( <em>x, y, z, s=None, c=None, marker=None, cmap=None, alpha=None, …</em>)</p>
<ul>
<li><strong>s:</strong> marker size</li>
<li><strong>c:</strong> marker color</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">'3d'</span>) <span class="comment"># Axe3D object</span></span><br><span class="line"></span><br><span class="line">sample_size = <span class="number">500</span></span><br><span class="line"></span><br><span class="line">x = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line">y = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line">z = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line"></span><br><span class="line">ax.scatter(x, y, z, c=z, s=<span class="number">20</span>, alpha=<span class="number">0.5</span>, cmap=<span class="string">'Greens'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'ax.scatter'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_148_0.png" alt="png"></p>
<p>컬러가 찐한 부분에 데이터가 더 많이 몰려있음</p>
  <br>
<h3 id="8-4-contour3d-그리기-등고선"><a class="markdownIt-Anchor" href="#8-4-contour3d-그리기-등고선"></a> 8-4. contour3D 그리기 (등고선)</h3>
<blockquote>
<p><em>Axes</em> = plt.axes(projection=‘3d’)<br>
<em>Axes</em> <strong>.contour3D</strong> (<em>x, y, z</em> )</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-6</span>, <span class="number">6</span>, <span class="number">30</span>)</span><br><span class="line">y = np.linspace(<span class="number">-6</span>, <span class="number">6</span>, <span class="number">30</span>)</span><br><span class="line">x, y = np.meshgrid(x, y)</span><br><span class="line"></span><br><span class="line">z = np.sin(np.sqrt(x**<span class="number">2</span> + y**<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line">ax = plt.axes(projection=<span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line">ax.contour3D(x, y, z, <span class="number">20</span>, cmap=<span class="string">'Reds'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"ax.contour3D"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_153_0.png" alt="png"></p>
<br>
<br>
<h2 id="9-imshow"><a class="markdownIt-Anchor" href="#9-imshow"></a> <strong>9. imshow</strong></h2>
<p>이미지 데이터가 numpy array에서는 숫자형식으로 표현됨<br>
명령어<code>imshow</code>는 이 컬러숫자들을 이미지로 변환하여 보여줌</p>
  <br>
<p>예제: <code>sklearn.datasets</code>안의 <code>load_digits</code>데이터</p>
<ul>
<li>
<p><code>load_digits</code> 는 0~16 값을 가지는 array로 이루어져 있다</p>
</li>
<li>
<p>1개의 array는 8 X 8 배열 안에 표현되어 있다</p>
</li>
<li>
<p>숫자는 0~9까지 이루어져있다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_digits</span><br><span class="line"></span><br><span class="line">digits = load_digits()</span><br><span class="line">X = digits.images[:<span class="number">10</span>]  <span class="comment"># 앞에 10개 image를 뽑아서 저장함</span></span><br><span class="line">X[<span class="number">0</span>]  <span class="comment"># 첫번째 image의 컬러숫자를 살펴보자</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 0.,  0.,  5., 13.,  9.,  1.,  0.,  0.],
       [ 0.,  0., 13., 15., 10., 15.,  5.,  0.],
       [ 0.,  3., 15.,  2.,  0., 11.,  8.,  0.],
       [ 0.,  4., 12.,  0.,  0.,  8.,  8.,  0.],
       [ 0.,  5.,  8.,  0.,  0.,  9.,  8.,  0.],
       [ 0.,  4., 11.,  0.,  1., 12.,  7.,  0.],
       [ 0.,  2., 14.,  5., 10., 12.,  0.,  0.],
       [ 0.,  0.,  6., 13., 10.,  0.,  0.,  0.]])
</code></pre>
<br>
<p>지금 한 위치에 숫자 하나밖에 없어서 컬러는 흑백으로 나옴.<br>
숫자가 클수록 black에 가깝고, 작을수록 white에 가까움</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig, axes = plt.subplots(nrows=<span class="number">2</span>, ncols=<span class="number">5</span>, sharex=<span class="literal">True</span>, figsize=(<span class="number">12</span>, <span class="number">6</span>), sharey=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    axes[i//<span class="number">5</span>][i%<span class="number">5</span>].imshow(X[i], cmap=<span class="string">'Blues'</span>)</span><br><span class="line">    axes[i//<span class="number">5</span>][i%<span class="number">5</span>].set_title(str(i), fontsize=<span class="number">20</span>)</span><br><span class="line">    </span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_164_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 3. Matplotlib</category>
        <category>Python - 시각화</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>시각화</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (2) Slicing. 인덱싱</title>
    <url>/2020/05/19/S-Python-Numpy2/</url>
    <content><![CDATA[<p>슬라이싱 (Slicing).  Fancy 인덱싱.  Boolean 인덱싱.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8B%B1-slicing"><strong>1. 슬라이싱 (Slicing)</strong></a>
<ul>
<li><a href="#1-1-index-%EC%A7%80%EC%A0%95%ED%95%98%EC%97%AC-%EC%83%89%EC%9D%B8">1-1. index 지정하여 색인</a>
<ul>
<li><a href="#1%EC%B0%A8%EC%9B%90-array">1차원 array</a></li>
<li><a href="#2%EC%B0%A8%EC%9B%90-array">2차원 array</a></li>
</ul>
</li>
<li><a href="#1-2-%EB%B2%94%EC%9C%84-%EC%83%89%EC%9D%B8">1-2. 범위 색인</a>
<ul>
<li><a href="#1%EC%B0%A8%EC%9B%90-array-2">1차원 array</a></li>
<li><a href="#2%EC%B0%A8%EC%9B%90-array-2">2차원 array</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-fancy-%EC%9D%B8%EB%8D%B1%EC%8B%B1"><strong>2. Fancy 인덱싱</strong></a>
<ul>
<li><a href="#2-1-1%EC%B0%A8%EC%9B%90-array">2-1. 1차원 array</a></li>
<li><a href="#2-2-2%EC%B0%A8%EC%9B%90-array">2-2. 2차원 array</a></li>
</ul>
</li>
<li><a href="#3-boolean-%EC%9D%B8%EB%8D%B1%EC%8B%B1"><strong>3. Boolean 인덱싱</strong></a>
<ul>
<li><a href="#3-1-true%EC%99%80-false%EA%B0%92%EC%9C%BC%EB%A1%9C-%EC%83%89%EC%9D%B8%ED%95%98%EA%B8%B0">3-1. True와 False값으로 색인하기</a></li>
<li><a href="#3-2-%EC%A1%B0%EA%B1%B4%ED%95%84%ED%84%B0">3-2. 조건필터</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-슬라이싱-slicing"><a class="markdownIt-Anchor" href="#1-슬라이싱-slicing"></a> <strong>1. 슬라이싱 (Slicing)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>베열의 부분 선택 (과일을 슬라이스해서 부분만 먹듯…)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(10,)
</code></pre>
<br>
<h3 id="1-1-index-지정하여-색인"><a class="markdownIt-Anchor" href="#1-1-index-지정하여-색인"></a> 1-1. index 지정하여 색인</h3>
<h4 id="1차원-array"><a class="markdownIt-Anchor" href="#1차원-array"></a> 1차원 array</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">0</span>]  <span class="comment"># index: 앞에서 부터 0, 1, 2, ...</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">10</span>]  <span class="comment"># index가 넘으면 error남</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-7-ff656e92d79c&gt; in &lt;module&gt;
----&gt; 1 arr[10]


IndexError: index 10 is out of bounds for axis 0 with size 10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-1</span>]   <span class="comment"># 뒤에서 부터 1번째.  index: 뒤에서 부터 -1, -2, -3,...</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-10</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-11</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-10-91f133f07612&gt; in &lt;module&gt;
----&gt; 1 arr[-11]


IndexError: index -11 is out of bounds for axis 0 with size 10
</code></pre>
<br>
<h4 id="2차원-array"><a class="markdownIt-Anchor" href="#2차원-array"></a> 2차원 array</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(3, 4)
</code></pre>
<br>
<p><strong>arr2d[행, 열]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">0</span>, <span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>10
</code></pre>
<br>
 <br> 
<h3 id="1-2-범위-색인"><a class="markdownIt-Anchor" href="#1-2-범위-색인"></a> 1-2. 범위 색인</h3>
<h4 id="1차원-array-2"><a class="markdownIt-Anchor" href="#1차원-array-2"></a> 1차원 array</h4>
<ul>
<li><strong>arr[a, b]</strong> –  arr의 “index <strong><font color="red">a</font></strong>” 부터 "index <strong><font color="red">b-1</font></strong>"까지  <font color="red">(a 포함, b 미포함)</font></li>
</ul>
<p><strong>index:</strong> 1 이상</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">1</span>:]   <span class="comment"># index 1 포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<br>
<p><strong>index:</strong> 5 미만</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[:<span class="number">5</span>]  <span class="comment"># index 5 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4])
</code></pre>
<br>
<p><strong>index:</strong> 1이상 5미만</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">1</span>:<span class="number">5</span>]  <span class="comment"># index 1 포함 &amp; index 5 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<p><strong>index:</strong> -1까지</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[:<span class="number">-1</span>]  <span class="comment"># index -1 (index 9) 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8])
</code></pre>
<br>
  <br>
<h4 id="2차원-array-2"><a class="markdownIt-Anchor" href="#2차원-array-2"></a> 2차원 array</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>row(행)을 모두 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">0</span>,:]  <span class="comment"># 0번 행의 모든 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
 <br>
<p><strong>colomn(열)을 모두 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:,<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  7, 11])
</code></pre>
 <br> 
<p><strong>부분적으로 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:<span class="number">2</span>, :]  <span class="comment"># 0,1번 행의 모든 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:<span class="number">2</span>, <span class="number">2</span>:]  <span class="comment"># 0,1번 행의 2,3번 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[3, 4],
       [7, 8]])
</code></pre>
<br>
 <br>   
<h2 id="2-fancy-인덱싱"><a class="markdownIt-Anchor" href="#2-fancy-인덱싱"></a> <strong>2. Fancy 인덱싱</strong></h2>
<p>fancy인덱싱은 범위가 아닌 <strong>특정 index의 집합의 값을 선택하여 추출</strong>하고 싶을 때 활용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">10</span>, <span class="number">23</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">90</span>, <span class="number">65</span>, <span class="number">32</span>, <span class="number">66</span>, <span class="number">70</span>])</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h3 id="2-1-1차원-array"><a class="markdownIt-Anchor" href="#2-1-1차원-array"></a> 2-1. 1차원 array</h3>
<p><strong>방법 1:</strong> 추출하고 싶은 index의 집합을 **[꺾쇠 괄호로]**묶어서 추출</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([23,  7, 65])
</code></pre>
<br>
<p><strong>방법 2:</strong>  추출하고 싶은 index의 집합을 <strong>변수에 지정한 후</strong> 추출</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[index]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([23,  7, 65])
</code></pre>
  <br>
<br>
<h3 id="2-2-2차원-array"><a class="markdownIt-Anchor" href="#2-2-2차원-array"></a> 2-2. 2차원 array</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], </span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], </span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[[<span class="number">0</span>,<span class="number">1</span>], :]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:, [<span class="number">1</span>,<span class="number">3</span>]]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 2,  4],
       [ 6,  8],
       [10, 12]])
</code></pre>
<br>
 <br> 
<h2 id="3-boolean-인덱싱"><a class="markdownIt-Anchor" href="#3-boolean-인덱싱"></a> <strong>3. Boolean 인덱싱</strong></h2>
<p>조건 필터링을 통하여 Boolean값을 이용한 색인</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                 [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                 [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="3-1-true와-false값으로-색인하기"><a class="markdownIt-Anchor" href="#3-1-true와-false값으로-색인하기"></a> 3-1. True와 False값으로 색인하기</h3>
<p>boolean index의 수가 꼭 array의 index와 같아야 됨!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myTrueFalse = [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[myTrueFalse]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-43-9c52b39d81ae&gt; in &lt;module&gt;
----&gt; 1 arr[myTrueFalse]


IndexError: boolean index did not match indexed array along dimension 0; dimension is 7 but corresponding boolean dimension is 3
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myTrueFalse = [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[myTrueFalse]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7])
</code></pre>
<br>
  <br>
<h3 id="3-2-조건필터"><a class="markdownIt-Anchor" href="#3-2-조건필터"></a> 3-2. 조건필터</h3>
<p>조건 연산자를 활용하여 필터를 생성할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d &gt; <span class="number">2</span>  <span class="comment"># "2보다 크다"라는 조건의 만족여부에 따라 Boolean index 생성</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[False, False,  True,  True],
       [ True,  True,  True,  True],
       [ True,  True,  True,  True]])
</code></pre>
<br>
<p>위 Boolean index를 다시 array에 적용하여 해당 부분을 추출: <strong>arr2d[조건필터]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[arr2d &gt; <span class="number">2</span>]  <span class="comment"># 1차원 array로 반환</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[arr2d &lt; <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 1. Numpy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (3) 수열. 정렬</title>
    <url>/2020/05/20/S-Python-Numpy3/</url>
    <content><![CDATA[<p>arange. range. 정렬(sort &amp; argsort)</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-arange%EB%9E%80"><strong>1. arange란?</strong></a>
<ul>
<li><a href="#1-1-%EC%88%9C%EC%84%9C%EB%8C%80%EB%A1%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EA%B0%92%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%A0%A4%EB%A9%B4">1-1. 순서대로 리스트에 값을 생성하려면?</a></li>
<li><a href="#1-2-arange%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0">1-2. arange를 사용해서 쉽게 생성하기</a></li>
<li><a href="#1-3-keyword%EC%9D%B8%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0">1-3. keyword인자를 사용해보기</a></li>
<li><a href="#1-4-%ED%99%80%EC%88%98%EC%9D%98-%EA%B0%92%EB%A7%8C-%EC%83%9D%EC%84%B1">1-4. 홀수의 값만 생성</a></li>
</ul>
</li>
<li><a href="#2-range-numpy%EC%99%80%EB%8A%94-%EC%83%81%EA%B4%80%EC%97%86%EB%8A%94-python%EB%AC%B8%EB%B2%95"><strong>2. range (Numpy와는 상관없는 Python문법)</strong></a></li>
<li><a href="#3-%EC%A0%95%EB%A0%AC"><strong>3. 정렬</strong></a>
<ul>
<li><a href="#3-1-1%EC%B0%A8%EC%9B%90-%EC%A0%95%EB%A0%AC">3-1. 1차원 정렬</a></li>
<li><a href="#3-2-n%EC%B0%A8%EC%9B%90-%EC%A0%95%EB%A0%AC">3-2. N차원 정렬</a></li>
<li><a href="#3-3-index%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-argsort">3-3. index를 반환하는 argsort</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-arange란"><a class="markdownIt-Anchor" href="#1-arange란"></a> <strong>1. arange란?</strong></h2>
<p>arange와 range를 같이 보고 이해하면 됨</p>
<p><strong>[실제 상황 예시]</strong></p>
<p>우리는 순차적인 값을 생성할 때가 많다. 예를 들면:</p>
<ol>
<li>회원에 대한 가입번호 부여</li>
<li>100개 한정 판매 상품에 대한 고유 번호 부여</li>
</ol>
<p>이 밖에도 데이터 관리를 위한 인덱스를 차례대로 부여하는 것은 매우 흔한 일이다.</p>
  <br>
<h3 id="1-1-순서대로-리스트에-값을-생성하려면"><a class="markdownIt-Anchor" href="#1-1-순서대로-리스트에-값을-생성하려면"></a> 1-1. 순서대로 리스트에 값을 생성하려면?</h3>
<p>1~10까지 값을 생성하려면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
 <br> 
<h3 id="1-2-arange를-사용해서-쉽게-생성하기"><a class="markdownIt-Anchor" href="#1-2-arange를-사용해서-쉽게-생성하기"></a> 1-2. arange를 사용해서 쉽게 생성하기</h3>
<p><strong>np.arange(a, b):</strong> <strong><font color="red">a</font></strong> 부터 <strong><font color="red">b-1</font></strong> 까지 생성한다  <strong><font color="red">(a포함, b미포함)</font></strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
 <br>
<h3 id="1-3-keyword인자를-사용해보기"><a class="markdownIt-Anchor" href="#1-3-keyword인자를-사용해보기"></a> 1-3. keyword인자를 사용해보기</h3>
<p><strong>np.arange(start = a,  stop = b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(start=<span class="number">1</span>, stop=<span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(stop=<span class="number">11</span>, start=<span class="number">1</span>)  <span class="comment"># start &amp; stop 지정했기 때문에 순서 바꿔도 됨</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">11</span>,<span class="number">1</span>)  <span class="comment"># start &amp; stop 지정 안하면 순서 바꿨을 때 오류 남</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([], dtype=int32)
</code></pre>
<br>
<h3 id="1-4-홀수의-값만-생성"><a class="markdownIt-Anchor" href="#1-4-홀수의-값만-생성"></a> 1-4. 홀수의 값만 생성</h3>
<p>1~10 사이의 값중 홀수만 생성</p>
<p><strong>step 키워드 활용</strong></p>
<p>np.arange(start, stop, step)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7, 9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(start=<span class="number">1</span>, stop=<span class="number">11</span>, step=<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7, 9])
</code></pre>
 <br>
<br>
<h2 id="2-range-numpy와는-상관없는-python문법"><a class="markdownIt-Anchor" href="#2-range-numpy와는-상관없는-python문법"></a> <strong>2. range (Numpy와는 상관없는 Python문법)</strong></h2>
<ul>
<li>
<p>range는 말 그대로 범위를 지정해 주는 것이다</p>
</li>
<li>
<p>보통 for-in 의 반복문에서 많이 사용된다</p>
</li>
<li>
<p>arange와는 다르게 array형태로 저장되어있지 않고 그냥 가볍게 바로바로 쓴다</p>
<br>
</li>
</ul>
<p><strong>arange 구문 활용시</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<p><strong>range 구문 활용시</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
3
5
7
9
</code></pre>
<br>
<br>
<h2 id="3-정렬"><a class="markdownIt-Anchor" href="#3-정렬"></a> <strong>3. 정렬</strong></h2>
<h3 id="3-1-1차원-정렬"><a class="markdownIt-Anchor" href="#3-1-1차원-정렬"></a> 3-1. 1차원 정렬</h3>
<p>1차원 정렬은 매우 간단함</p>
<ul>
<li>오름차순으로 정렬: np.sort(arr)</li>
<li>내림차순으로 정렬: np.sort(arr)[::-1]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)[::<span class="number">-1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([10,  9,  8,  8,  7,  6,  5,  4,  3,  2,  1])
</code></pre>
<br>
<p>하지만, 그냥 이상태에서는 정렬된 이 값들이 <strong>유지가 안됨</strong><br>
값을 sort 된 상태로 유지시키려면:</p>
<ul>
<li>변수로 다시 지정해주기</li>
<li>np.sort(arr) 대신 arr.sort() 쓴다 [arr자체에 sort명령을 씌워줌]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr    <span class="comment"># np.sort 만 실행했을 때 유지가 안됨</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2 = np.sort(arr)   <span class="comment"># 방법1: arr2로 지정하기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr.sort()    <span class="comment"># 방법2: arr.sort 사용하기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
 <br> 
<h3 id="3-2-n차원-정렬"><a class="markdownIt-Anchor" href="#3-2-n차원-정렬"></a> 3-2. N차원 정렬</h3>
<p>N차원 정렬에서는 axis 중요함. (즉, 정렬 기준이 되는 축)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], </span><br><span class="line">                  [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">                  [<span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">11</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(3, 4)
</code></pre>
<br>
<p><strong>열 정렬 (왼쪽에서 오른쪽으로 정렬) – axis 1을 기준으로 삼</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">1</span>)   <span class="comment"># 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 1,  2,  3,  4],
       [ 9, 10, 11, 12]])
</code></pre>
  <br>
<p><strong>행 정렬 (위에서 아래로 정렬) – axis 0을 기준으로 삼</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 4,  3,  2,  1],
       [ 5,  6,  7,  8],
       [10,  9, 12, 11]])
</code></pre>
<br>
<br>  
<h3 id="3-3-index를-반환하는-argsort"><a class="markdownIt-Anchor" href="#3-3-index를-반환하는-argsort"></a> 3-3. index를 반환하는 argsort</h3>
<p>정렬한 결과에는 값을 반환하는 것이 아닌 index를 반환한다</p>
 <br>
<p><strong>열 정렬 (왼쪽에서 오른쪽으로 정렬)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">1</span>)  <span class="comment"># sort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 1,  2,  3,  4],
       [ 9, 10, 11, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(arr2d, axis = <span class="number">1</span>)   <span class="comment"># argsort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 1, 2, 3],
       [3, 2, 1, 0],
       [1, 0, 3, 2]], dtype=int64)
</code></pre>
 <br>
<br>
<p><strong>행 정렬 (위에서 아래로 정렬)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># sort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 4,  3,  2,  1],
       [ 5,  6,  7,  8],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># argsort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 1, 1, 1],
       [0, 0, 0, 0],
       [2, 2, 2, 2]], dtype=int64)
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 1. Numpy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Matplotlib - (1) 기본 canvas 그리기 및 스타일링</title>
    <url>/2020/06/28/S-Python-Matplotlib1/</url>
    <content><![CDATA[<h1 id="기본적인-canvas-그리기-및-스타일링"><a class="markdownIt-Anchor" href="#기본적인-canvas-그리기-및-스타일링"></a> 기본적인 canvas 그리기 및 스타일링</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%B0%91-%EA%B7%B8%EB%A6%BC-%EA%B7%B8%EB%A6%AC%EA%B8%B0"><strong>1. 밑 그림 그리기</strong></a>
<ul>
<li><a href="#1-1-%EB%8B%A8%EC%9D%BC-%EA%B7%B8%EB%9E%98%ED%94%84-single-graph">1-1. 단일 그래프 (single graph)</a></li>
<li><a href="#1-2-%EB%8B%A4%EC%A4%91-%EA%B7%B8%EB%9E%98%ED%94%84-multiple-graphs">1-2. 다중 그래프 (multiple graphs)</a></li>
<li><a href="#1-3-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B0%B0%EC%97%B4-subplot-subplots">1-3. 그래프 배열 (subplot / subplots)</a></li>
</ul>
</li>
<li><a href="#2-%EC%A3%BC%EC%9A%94-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%98%B5%EC%85%98"><strong>2. 주요 스타일 옵션</strong></a>
<ul>
<li><a href="#2-1-%ED%83%80%EC%9D%B4%ED%8B%80">2-1. 타이틀</a></li>
<li><a href="#2-2-x-y%EC%B6%95-label-%EC%84%A4%EC%A0%95">2-2. X, Y축 Label 설정</a></li>
<li><a href="#2-3-x-y%EC%B6%95-tick-%EC%A1%B0%EC%A0%95-rotation">2-3. X, Y축 Tick 조정 (rotation)</a></li>
<li><a href="#2-4-%EB%B2%94%EB%A1%80-legend-%EC%84%A4%EC%A0%95">2-4. 범례 (Legend) 설정</a></li>
<li><a href="#2-5-x%EC%99%80-y%EC%9D%98-%ED%95%9C%EA%B3%84%EC%A0%90limit-%EC%84%A4%EC%A0%95">2-5. X와 Y의 한계점(Limit) 설정</a></li>
<li><a href="#2-6-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%A7%88%EC%BB%A4-%EB%9D%BC%EC%9D%B8-%EC%BB%AC%EB%9F%AC">2-6. 스타일 세부 설정 - 마커, 라인, 컬러</a></li>
<li><a href="#2-7-%EA%B7%B8%EB%A6%AC%EB%93%9C-grid-%EC%84%A4%EC%A0%95">2-7. 그리드 (grid) 설정</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">pyplot 공식 Document 살펴보기</a></p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># plt.rcParams["figure.figsize"] = (12, 9)  # figure size 설정</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-밑-그림-그리기"><a class="markdownIt-Anchor" href="#1-밑-그림-그리기"></a> <strong>1. 밑 그림 그리기</strong></h2>
<h3 id="1-1-단일-그래프-single-graph"><a class="markdownIt-Anchor" href="#1-1-단일-그래프-single-graph"></a> 1-1. 단일 그래프 (single graph)</h3>
<blockquote>
<p><strong>plt.plot</strong>(<em>df_name</em>)<br>
<strong>plt.show()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">## data 생성</span></span><br><span class="line">data = np.arange(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot</span></span><br><span class="line">plt.plot(data)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 그래프만 보여주는 코드 (타 실행 결과 생략하고 그래프만 보여줌)</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_10_0.png" alt="png"></p>
<br>
<h3 id="1-2-다중-그래프-multiple-graphs"><a class="markdownIt-Anchor" href="#1-2-다중-그래프-multiple-graphs"></a> 1-2. 다중 그래프 (multiple graphs)</h3>
<blockquote>
<ul>
<li><strong>여러 그래프를 같은 canvas 안에 그리기:</strong><br>
명령어 <code>plt.plot(df_name)</code> 를 연속 사용</li>
<li><strong>새 그래프를 새로운 canvas 안에 그리기:</strong><br>
세 그래프를 그리기 전에 <code>plt.figure()</code>명령어를 추가</li>
</ul>
</blockquote>
<br>
<p><strong>(1) 1개의 canvas 안에 다중 그래프 그리기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">1</span>, <span class="number">51</span>)</span><br><span class="line">data2 = np.arange(<span class="number">51</span>, <span class="number">101</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.plot(data1)</span><br><span class="line">plt.plot(data2)</span><br><span class="line">plt.plot(data2 + <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_15_0.png" alt="png"></p>
<br>
<p><strong>(2) 새로운 canvas에서 새 그래프를 그리기</strong></p>
<ul>
<li>figure()는 새로운 그래프 canvas를 생성한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(data)</span><br><span class="line"></span><br><span class="line">plt.figure()   <span class="comment"># figure() 명령어를 추가</span></span><br><span class="line">plt.plot(data2)</span><br><span class="line">plt.plot(data2 + <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_19_0.png" alt="png"></p>
<p><img src="/images/S-Python-Matplotlib1/output_19_1.png" alt="png"></p>
<br>
<h3 id="1-3-그래프-배열-subplot-subplots"><a class="markdownIt-Anchor" href="#1-3-그래프-배열-subplot-subplots"></a> 1-3. 그래프 배열 (subplot / subplots)</h3>
<blockquote>
<p>여러 개 plot을 지정된 행,열수에 따라 배열해주기:</p>
<ul>
<li>plt.subplot(row, column, index)   <font color="blue"># 각 plot의 좌표 설정</font></li>
<li>plt.subplots(행의 갯수, 열의 갯수)  <font color="blue"># 행,열수 설정</font></li>
</ul>
</blockquote>
  <br>
<p><strong>(1) subplot (plot의 좌표를 설정하기)</strong></p>
<p>이 방법은 <strong>그래프마다 설정</strong>해줘야 함</p>
<blockquote>
<p><strong>plt.subplot</strong>(row, column, index)  <font color="blue"># 콤마를 제거해도 됨</font></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_27_0.png" alt="png"></p>
<br>
<p>위의 코드와 동일하나, "콤마"를 제거한 상태</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">211</span>)   <span class="comment"># 콤마를 생략함: 211 -&gt; row : 2, col: 1, index : 1</span></span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">212</span>)   <span class="comment"># 콤마를 생략함</span></span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_30_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">data3 = np.arange(<span class="number">300</span>, <span class="number">401</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">plt.plot(data3)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_32_0.png" alt="png"></p>
<br>
<p><strong>(2) subplots (배열 기준인 행,열수를 지정하기)</strong></p>
<p>subplot와 다르게 <strong>subplots()명령어는 한번만 설정</strong>해주면 됨</p>
<blockquote>
<p><strong>plt.subplots</strong>(행의 갯수, 열의 갯수)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = np.arange(<span class="number">1</span>, <span class="number">51</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 밑 그림</span></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">axes[<span class="number">0</span>, <span class="number">0</span>].plot(data)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">1</span>].plot(data * data)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">2</span>].plot(data ** <span class="number">3</span>)  <span class="comment"># data^3</span></span><br><span class="line">axes[<span class="number">1</span>, <span class="number">0</span>].plot(data % <span class="number">10</span>)</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">1</span>].plot(-data)</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">2</span>].plot(data // <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_37_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-주요-스타일-옵션"><a class="markdownIt-Anchor" href="#2-주요-스타일-옵션"></a> <strong>2. 주요 스타일 옵션</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 출처: matplotlib.org</span></span><br><span class="line">Image(<span class="string">'https://matplotlib.org/_images/anatomy.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-Matplotlib1/output_41_0.png" alt="png" style="zoom:67%;">
<br>  
<h3 id="2-1-타이틀"><a class="markdownIt-Anchor" href="#2-1-타이틀"></a> 2-1. 타이틀</h3>
<blockquote>
<ul>
<li><strong>타이틀 추가:</strong> plt.title("…")</li>
<li><strong>타이틀 fontsize 설정:</strong>  plt.title("…",  fontsize = … )</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"이것은 타이틀 입니다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0.5, 1.0, '이것은 타이틀 입니다')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_46_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"타이틀 fontsize를 키웁니다"</span>, fontsize = <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0.5, 1.0, '타이틀 fontsize를 키웁니다')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_48_1.png" alt="png"></p>
<br>
<h3 id="2-2-x-y축-label-설정"><a class="markdownIt-Anchor" href="#2-2-x-y축-label-설정"></a> 2-2. X, Y축 Label 설정</h3>
<blockquote>
<ul>
<li><strong>plt.xlabel</strong> ( “<em>x_name</em>”, fontsize = …)</li>
<li><strong>plt.ylabel</strong> ( “<em>y_name</em>”, fontsize = …)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 설정</span></span><br><span class="line">plt.title(<span class="string">"Label 설정 예제"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_52_1.png" alt="png"></p>
<br>
<h3 id="2-3-x-y축-tick-조정-rotation"><a class="markdownIt-Anchor" href="#2-3-x-y축-tick-조정-rotation"></a> 2-3. X, Y축 Tick 조정 (rotation)</h3>
<p>Tick은 X, Y축에 위치한 눈금을 말한다<br>
rotation 명령어를 통해 Tick의 각도를 조절할 수 있다</p>
<blockquote>
<ul>
<li><strong>plt.xticks</strong> ( <em>rotation = …</em> )</li>
<li><strong>plt.yticks</strong> ( <em>rotation = …</em> )<br>
Rotation 각도는 <font color="blue">역시개방향 회전각도</font>를 말한다</li>
</ul>
</blockquote>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"X, Y축 Tick 조정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log
  This is separate from the ipykernel package so we can avoid doing imports until

(array([-10.,   0.,  10.,  20.,  30.,  40.,  50.,  60.,  70.,  80.,  90.]),
 &lt;a list of 11 Text yticklabel objects&gt;)
</code></pre>
<br>
<p><img src="/images/S-Python-Matplotlib1/output_58_2.png" alt="png"></p>
<br>
<h3 id="2-4-범례-legend-설정"><a class="markdownIt-Anchor" href="#2-4-범례-legend-설정"></a> 2-4. 범례 (Legend) 설정</h3>
<blockquote>
<p><strong>plt.legend</strong> ( [ “<em>name1</em>” , “<em>name2</em>” , … ], fontsize = …)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"범례(Legend) 설정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend 설정</span></span><br><span class="line">plt.legend([<span class="string">"2x"</span>, <span class="string">"x^2"</span>, <span class="string">"logx"</span>], fontsize = <span class="number">14</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log
  This is separate from the ipykernel package so we can avoid doing imports until

&lt;matplotlib.legend.Legend at 0x173a5712888&gt;
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_63_2.png" alt="png"></p>
<br>
<h3 id="2-5-x와-y의-한계점limit-설정"><a class="markdownIt-Anchor" href="#2-5-x와-y의-한계점limit-설정"></a> 2-5. X와 Y의 한계점(Limit) 설정</h3>
<blockquote>
<ul>
<li><strong>plt.xlim</strong> ( <em>a, b</em> )</li>
<li><strong>plt.ylim</strong> ( <em>c, d</em> )</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"X축, Y축 Limit 설정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend 설정</span></span><br><span class="line">plt.legend([<span class="string">"2x"</span>, <span class="string">"x^2"</span>, <span class="string">"logx"</span>], fontsize = <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y limit 설정</span></span><br><span class="line">plt.xlim(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>, <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log
  This is separate from the ipykernel package so we can avoid doing imports until

(0, 20)
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_68_2.png" alt="png"></p>
<br>
<h3 id="2-6-스타일-세부-설정-마커-라인-컬러"><a class="markdownIt-Anchor" href="#2-6-스타일-세부-설정-마커-라인-컬러"></a> 2-6. 스타일 세부 설정 - 마커, 라인, 컬러</h3>
<blockquote>
<p><em><strong>reference:</strong></em>  <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">세부 Document 확인하기</a></p>
</blockquote>
<p>스타일 세부 설정은 마커, 선의 동류 설정, 드리고 컬러가 있으며, 문다열로 세부설정을 하게 된다</p>
  <br>
<p><strong>(1) marker의 종류</strong></p>
<ul>
<li>‘.’	point marker</li>
<li>‘,’	pixel marker</li>
<li>‘o’	circle marker</li>
<li>‘v’	triangle_down marker</li>
<li>‘^’	triangle_up marker</li>
<li>‘&lt;’	triangle_left marker</li>
<li>‘&gt;’	triangle_right marker</li>
<li>‘1’	tri_down marker</li>
<li>‘2’	tri_up marker</li>
<li>‘3’	tri_left marker</li>
<li>‘4’	tri_right marker</li>
<li>'s ’	square marker</li>
<li>‘p’	pentagon marker</li>
<li>‘*’	star marker</li>
<li>‘h’	hexagon1 marker</li>
<li>‘H’	hexagon2 marker</li>
<li>‘+’	plus marker</li>
<li>‘x’	x marker</li>
<li>‘D’	diamond marker</li>
<li>‘d’	thin_diamond marker</li>
<li>‘|’	vline marker</li>
<li>‘_’	hline marker</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># marker 스타일 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, markersize=<span class="number">5</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, markersize=<span class="number">10</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, markersize=<span class="number">15</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, markersize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'마커 스타일 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_75_1.png" alt="png"></p>
<br>
<p><strong>(2) line의 종류</strong></p>
<ul>
<li>‘-’ solid line style</li>
<li>‘–’ dashed line style</li>
<li>‘-.’ dash-dot line style</li>
<li>‘:’ dotted line style</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># line 스타일 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">''</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">40</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'다양한 선의 종류 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_78_1.png" alt="png"></p>
<br>
<p><strong>(3) color의 종류</strong></p>
<ul>
<li>‘b’	blue</li>
<li>‘g’	green</li>
<li>‘r’	red</li>
<li>‘c’	cyan</li>
<li>‘m’	magenta</li>
<li>‘y’	yellow</li>
<li>‘k’	black</li>
<li>‘w’	white</li>
<li>more choices: <a href="https://matplotlib.org/api/colors_api.html#module-matplotlib.colors" target="_blank" rel="noopener">matplotlib.colors</a>   <em>(e.g. “purple”, “#008000”)</em></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># color 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>, color=<span class="string">'b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>, color=<span class="string">'c'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>, color=<span class="string">'y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>, color=<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'색상 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_81_1.png" alt="png"></p>
<br>
<p><strong>(4) Format: '[marker][line][color]'</strong></p>
<p>example:</p>
<ul>
<li>‘b’    # blue markers with default shape</li>
<li>‘or’   # red circles</li>
<li>‘-g’   # green solid line</li>
<li>‘–’   # dashed line with default color</li>
<li>‘^k:’  # black triangle_up markers connected by a dotted line</li>
</ul>
<p>Each of them is optional. If not provided, the value from the style cycle is used. Exception: If line is given, but no marker, the data will be a line without markers.</p>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "marker + line + color" format 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, <span class="string">"o-r"</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, <span class="string">'v--b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, <span class="string">'+y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, <span class="string">':k'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'marker/line + color 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_87_1.png" alt="png"></p>
<br>
<p><strong>(5) 색상 투명도 설정</strong></p>
<ul>
<li>alpha = … (0.0 ~ 1.0)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># color 투명도 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, color=<span class="string">'b'</span>, alpha=<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'투명도 (alpha) 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_90_1.png" alt="png"></p>
<br>
<h3 id="2-7-그리드-grid-설정"><a class="markdownIt-Anchor" href="#2-7-그리드-grid-설정"></a> 2-7. 그리드 (grid) 설정</h3>
<blockquote>
<p><strong>그리드 (grid) 추가:</strong> plt.grid()</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>, color=<span class="string">'b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>, color=<span class="string">'c'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>, color=<span class="string">'y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>, color=<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'그리드 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># grid 옵션 추가</span></span><br><span class="line">plt.grid()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_94_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 3. Matplotlib</category>
        <category>Python - 시각화</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>시각화</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (1) row &amp; column 의 추가 및 제거</title>
    <url>/2020/06/18/S-Python-Pandas-Pre1/</url>
    <content><![CDATA[<h1 id="row-column-의-추가-및-제거"><a class="markdownIt-Anchor" href="#row-column-의-추가-및-제거"></a> row &amp; column 의 추가 및 제거</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-row%EC%9D%98-%EC%B6%94%EA%B0%80"><strong>1. row의 추가</strong></a></li>
<li><a href="#2-column%EC%9D%98-%EC%B6%94%EA%B0%80"><strong>2. column의 추가</strong></a></li>
<li><a href="#3-row%EC%9D%98-%EC%A0%9C%EA%B1%B0"><strong>3. row의 제거</strong></a></li>
<li><a href="#4-column%EC%9D%98-%EC%A0%9C%EA%B1%B0"><strong>4. column의 제거</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>
<h2 id="1-row의-추가"><a class="markdownIt-Anchor" href="#1-row의-추가"></a> <strong>1. row의 추가</strong></h2>
<blockquote>
<p><em>df_name</em> <strong>.append ( {…} , ignore_index = True )</strong></p>
</blockquote>
<blockquote>
<p>dictionary 형태의 데이터를 만들어 준다음 <strong>append()</strong> 함수를 사용하여 데이터를 추가할 수 있다. <strong>ignore_index=True</strong>옵션을 반드시 같이 추가해야한다</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.append({<span class="string">'이름'</span>: <span class="string">'홍길동'</span>, <span class="string">'그룹'</span>: <span class="string">'a그룹'</span>, <span class="string">'소속사'</span>:<span class="string">'A사'</span>, <span class="string">'성별'</span>: <span class="string">'남자'</span>, <span class="string">'생년월일'</span>: <span class="string">'1990-01-01'</span>, <span class="string">'키'</span>: <span class="number">185.0</span>, <span class="string">'혈액형'</span>: <span class="string">'B'</span>, <span class="string">'브랜드평판지수'</span>: <span class="number">12345678</span>}, ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>15</th>
      <td>홍길동</td>
      <td>a그룹</td>
      <td>A사</td>
      <td>남자</td>
      <td>1990-01-01</td>
      <td>185.0</td>
      <td>B</td>
      <td>12345678</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<br> 
<h2 id="2-column의-추가"><a class="markdownIt-Anchor" href="#2-column의-추가"></a> <strong>2. column의 추가</strong></h2>
<blockquote>
<p>새로운 column을 만들고 값을 대입해주면, column이 쉽게 추가될 수 있다</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'국적'</span>] = <span class="string">'대한민국'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>국적</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>대한민국</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>새로운 column의 값을 다르게 부여하고 싶다면 loc 함수를 활용하면 된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'이름'</span>] == <span class="string">'지드래곤'</span>, <span class="string">'국적'</span>] = <span class="string">'korea'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>국적</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>korea</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>대한민국</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="3-row의-제거"><a class="markdownIt-Anchor" href="#3-row의-제거"></a> <strong>3. row의 제거</strong></h2>
<blockquote>
<ul>
<li>하나의 행: <em>df_name</em> <strong>.drop</strong> (<em>index_num</em>, <strong>axis = 0</strong>)</li>
<li>복수의 행: <em>df_name</em> <strong>.drop</strong> ( [ <em>index_num1, index_num2</em> ], <strong>axis = 0</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop(<span class="number">3</span>, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop([<span class="number">3</span>, <span class="number">5</span>], axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="4-column의-제거"><a class="markdownIt-Anchor" href="#4-column의-제거"></a> <strong>4. column의 제거</strong></h2>
<blockquote>
<ul>
<li>하나의 열: <em>df_name</em> <strong>.drop</strong> ( ‘<em>col_name</em>’, <strong>axis = 1</strong>)</li>
<li>복수의 열: <em>df_name</em> <strong>.drop</strong> ( [ <em>‘col_name1’, ‘col_name2’</em> ], <strong>axis = 1</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop(<span class="string">"그룹"</span>, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop([<span class="string">"그룹"</span>, <span class="string">"소속사"</span>], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (4) 행렬. Broadcasting</title>
    <url>/2020/05/20/S-Python-Numpy4/</url>
    <content><![CDATA[<p>행렬 (덧셈, 뺄셈, 곱셈).  Broadcasting.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%96%89%EB%A0%AC-%EB%8D%A7%EC%85%88"><strong>1. 행렬 - 덧셈</strong></a>
<ul>
<li><a href="#1-1-%EB%8D%A7%EC%85%88">1-1. 덧셈</a></li>
<li><a href="#1-2-sum-matrix%EC%95%88%EC%9D%98-%EA%B3%84%EC%82%B0">1-2. Sum – Matrix안의 계산</a></li>
</ul>
</li>
<li><a href="#2-%ED%96%89%EB%A0%AC-%EB%BA%84%EC%85%88"><strong>2. 행렬 - 뺄셈</strong></a></li>
<li><a href="#3-%ED%96%89%EB%A0%AC-%EA%B3%B1%EC%85%88"><strong>3. 행렬 - 곱셈</strong></a>
<ul>
<li><a href="#3-1-%EC%9D%BC%EB%B0%98-%EA%B3%B1%EC%85%88">3-1. 일반 곱셈</a></li>
<li><a href="#3-2-dot-product-%EB%82%B4%EC%A0%81%EA%B3%B1">3-2. dot product / 내적곱</a></li>
</ul>
</li>
<li><a href="#4-broadcasting"><strong>4. Broadcasting</strong></a>
<ul>
<li><a href="#4-1-%EC%88%AB%EC%9E%90%EC%9D%98-%EC%97%B0%EC%82%B0">4-1. 숫자의 연산</a></li>
<li><a href="#4-2-array-%EB%B0%B0%EC%97%B4%EC%9D%98-broadcasting">4-2. array (배열)의 broadcasting</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-행렬-덧셈"><a class="markdownIt-Anchor" href="#1-행렬-덧셈"></a> <strong>1. 행렬 - 덧셈</strong></h2>
<p><strong>행렬의 shape이 같아야 덧셈 가능</strong></p>
<h3 id="1-1-덧셈"><a class="markdownIt-Anchor" href="#1-1-덧셈"></a> 1-1. 덧셈</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 6, 8],
       [3, 5, 7]])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b    <span class="comment"># shape이 다르면 error발생</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-7-37f7d36ad418&gt; in &lt;module&gt;
----&gt; 1 a + b    # shape이 다르면 error발생


ValueError: operands could not be broadcast together with shapes (2,3) (3,2) 
</code></pre>
<br>
<h3 id="1-2-sum-matrix안의-계산"><a class="markdownIt-Anchor" href="#1-2-sum-matrix안의-계산"></a> 1-2. Sum – Matrix안의 계산</h3>
<p><strong>명령어:</strong> np.sum(‘array_name’, axis = ‘0/1/…’)</p>
<p><strong>주의:</strong> 계산할 때 <strong>axis의 방향대로 Sum을 구한다.</strong></p>
<p>예를 들면, 2darray에서,</p>
<ul>
<li>
<p>axis = 0 이면: 수직방향으로 Sum을 구한다</p>
</li>
<li>
<p>axis = 1 이면: 수평방향으로 Sum을 구한다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sum(a, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([3, 5, 7])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sum(a, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([6, 9])
</code></pre>
<br>
  <br>
<h2 id="2-행렬-뺄셈"><a class="markdownIt-Anchor" href="#2-행렬-뺄셈"></a> <strong>2. 행렬 - 뺄셈</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2, -2, -2],
       [ 1,  1,  1]])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - b    <span class="comment"># shape이 다르면 error발생</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-18-e62ba154daaa&gt; in &lt;module&gt;
----&gt; 1 a - b    # shape이 다르면 error발생


ValueError: operands could not be broadcast together with shapes (2,3) (3,2) 
</code></pre>
<br>
<br>
<h2 id="3-행렬-곱셈"><a class="markdownIt-Anchor" href="#3-행렬-곱셈"></a> <strong>3. 행렬 - 곱셈</strong></h2>
<h3 id="3-1-일반-곱셈"><a class="markdownIt-Anchor" href="#3-1-일반-곱셈"></a> 3-1. 일반 곱셈</h3>
<p>일반곱셈은 덧셈과 뺏셈이랑 동일하게 같은 위치에 있는 애들끼리 곱한다.<br>
<strong>[shape이 완전 같아야 함]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 3,  8, 15],
       [ 2,  6, 12]])
</code></pre>
 <br>  
<h3 id="3-2-dot-product-내적곱"><a class="markdownIt-Anchor" href="#3-2-dot-product-내적곱"></a> 3-2. dot product / 내적곱</h3>
<p><strong>[맞닿는 shape이 같아야 함]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.shape, b.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((2, 3), (3, 2))
</code></pre>
<br>
<p><strong>방법 1: np.dot(a, b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.dot(a, b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22, 28],
       [31, 40]])
</code></pre>
<br>
<p><strong>방법2: a.dot(b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.dot(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22, 28],
       [31, 40]])
</code></pre>
<br>
<br>  
<h2 id="4-broadcasting"><a class="markdownIt-Anchor" href="#4-broadcasting"></a> <strong>4. Broadcasting</strong></h2>
<h3 id="4-1-숫자의-연산"><a class="markdownIt-Anchor" href="#4-1-숫자의-연산"></a> 4-1. 숫자의 연산</h3>
<p>array a 의 모든 원소에 3을 더하고 싶다면:</p>
<ul>
<li>단순히 행렬 덧셈을 사용할 때:</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 5, 6],
       [5, 6, 7]])
</code></pre>
<br>
<ul>
<li>Broadcasting 사용할 때:</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 5, 6],
       [5, 6, 7]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2, -1,  0],
       [-1,  0,  1]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 3,  6,  9],
       [ 6,  9, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a / <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0.33333333, 0.66666667, 1.        ],
       [0.66666667, 1.        , 1.33333333]])
</code></pre>
<br>
 <br> 
<h3 id="4-2-array-배열의-broadcasting"><a class="markdownIt-Anchor" href="#4-2-array-배열의-broadcasting"></a> 4-2. array (배열)의 broadcasting</h3>
<p>original array의 shape이 유지됨.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>],</span><br><span class="line">              [<span class="number">2</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.shape, b.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((2, 3), (2, 1))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3],
       [4, 6, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  4,  9],
       [ 2,  6, 12]])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 1. Numpy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (1) Numpy. array</title>
    <url>/2020/05/19/S-Python-Numpy1/</url>
    <content><![CDATA[<p>Numpy개요. Numpy import하기. nd array 생성. array에서의 데이터 타입</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-numpy-%EA%B0%9C%EC%9A%94"><strong>1. Numpy 개요</strong></a>
<ul>
<li><a href="#1-1-numpy%EC%9D%B4%EB%9E%80">1-1. Numpy이란?</a></li>
<li><a href="#1-2-%EB%B3%84%EC%B9%AD-np">1-2. 별칭 - np</a></li>
<li><a href="#1-3-array-%EB%B0%B0%EC%97%B4">1-3. array (배열)</a></li>
<li><a href="#1-4-shape%EC%B0%A8%EC%9B%90-axis%EC%B6%95">1-4. shape(차원) &amp; axis(축)</a></li>
</ul>
</li>
<li><a href="#2-numpy-import%ED%95%98%EA%B8%B0"><strong>2. Numpy import하기</strong></a>
<ul>
<li><a href="#2-1-%EB%B3%84%EC%B9%AD-alias-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0-%ED%95%AD%EC%83%81-%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94">2-1. 별칭 (alias) 지정하기 (항상 해주세요!)</a></li>
</ul>
</li>
<li><a href="#3-ndarray-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0-nparray"><strong>3. ndarray 생성하기 – "np.array([…])"</strong></a>
<ul>
<li><a href="#3-1-list%EB%A1%9C-%EB%B6%80%ED%84%B0-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0-nparraylist_name">3-1. list로 부터 생성하기 – “np.array(<em>list_name</em>)”</a></li>
<li><a href="#3-2-shape%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0-array_name-shape">3-2. shape확인하기 – “<em>array_name</em> .shape”</a></li>
</ul>
</li>
<li><a href="#4-array%EC%97%90%EC%84%9C%EC%9D%98-data-type"><strong>4. array에서의 data type</strong></a>
<ul>
<li><a href="#4-1-list%EC%97%90%EC%84%9C%EC%9D%98-data-type">4-1. list에서의 data type</a></li>
<li><a href="#4-2-array%EC%97%90%EC%84%9C%EC%9D%98-data-type">4-2. array에서의 data type</a>
<ul>
<li><a href="#case-1-int%EC%99%80-float%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%9C-%EA%B2%BD%EC%9A%B0">case 1. int와 float타입이 혼재된 경우</a></li>
<li><a href="#case-2-int%EC%99%80-float-%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%98%EC%97%88%EC%9C%BC%EB%82%98-dtype%EC%9D%84-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B2%BD%EC%9A%B0">case 2. int와 float 타입이 혼재되었으나, dtype을 지정한 경우</a></li>
<li><a href="#case-3-int-float-%EC%99%80-str-%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%9C-%EA%B2%BD%EC%9A%B0">case 3. int / float 와 str 타입이 혼재된 경우</a></li>
<li><a href="#case-4-int%EC%99%80-str-%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%98%EC%96%B4-%EC%9E%88%EA%B3%A0-dtype%EC%9D%B4-int%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B2%BD%EC%9A%B0">case 4. int와 str 타입이 혼재되어 있고 dtype이 int로 지정한 경우</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-numpy-개요"><a class="markdownIt-Anchor" href="#1-numpy-개요"></a> <strong>1. Numpy 개요</strong></h2>
<h3 id="1-1-numpy이란"><a class="markdownIt-Anchor" href="#1-1-numpy이란"></a> 1-1. Numpy이란?</h3>
<p>Numpy: 수학, 과학 계산용 패키지</p>
<p>​    <br></p>
<h3 id="1-2-별칭-np"><a class="markdownIt-Anchor" href="#1-2-별칭-np"></a> 1-2. 별칭 - np</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-3-array-배열"><a class="markdownIt-Anchor" href="#1-3-array-배열"></a> 1-3. array (배열)</h3>
<p><strong>배열</strong>: 여러 값들의 그룹</p>
<br>  
<p><strong>&lt; 1차원 배열 &gt;</strong></p>
<br>
<center><img src="/images/S-Python-Numpy1/1_array.png" alt="1_array" style="zoom:80%;"></center>
<div style="text-align: center"> numpy.array([1, 2, 3, 4]) </div>
 <br> 
<p><strong>&lt; 2차원 배열 &gt;</strong></p>
 <br>
<center><img src="/images/S-Python-Numpy1/2_array.png" alt="2_array" style="zoom:80%;"></center>
<div style="text-align: center"> 
numpy.array([[1, 2, 3, 4],  
             [5, 6, 7, 8],  
             [9, 10, 11, 12],  
             [13, 14, 15, 16]]) 
</div>
<br>
<p><strong>&lt; n차원 배열 &gt;   (nd array: <em>n dimention</em> array)</strong></p>
<center><img src="/images/S-Python-Numpy1/n_array.png" alt="n_array" style="zoom:80%;" align="center/"></center>
  <br>
  <br>
<h3 id="1-4-shape차원-axis축"><a class="markdownIt-Anchor" href="#1-4-shape차원-axis축"></a> 1-4. shape(차원) &amp; axis(축)</h3>
<ul>
<li>
<p><strong>shape은 <font color="red"> 차원의 수 </font> 를 확인</strong></p>
<p>(3, ) =&gt; 3 X 1의 배열<br>
(4,3) =&gt; 4 X 3의 배열<br>
(2,5,3) =&gt; 2 X 5 X 3의 배열</p>
</li>
<li>
<p><strong>axis는 기준이 되는 <font color="red"> 축 </font></strong></p>
<p>axis는 앞에서 부터 0, 1, 2…<br>
nd array의 축: axis 0, axis 1, axis 2, … axis n</p>
<br>
<br>
</li>
</ul>
<h2 id="2-numpy-import하기"><a class="markdownIt-Anchor" href="#2-numpy-import하기"></a> <strong>2. Numpy import하기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">numpy</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'numpy' from 'D:\\Anaconda\\lib\\site-packages\\numpy\\__init__.py'&gt;
</code></pre>
<br>
<h3 id="2-1-별칭-alias-지정하기-항상-해주세요"><a class="markdownIt-Anchor" href="#2-1-별칭-alias-지정하기-항상-해주세요"></a> 2-1. 별칭 (alias) 지정하기 (항상 해주세요!)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'numpy' from 'D:\\Anaconda\\lib\\site-packages\\numpy\\__init__.py'&gt;
</code></pre>
<br>
  <br>
<h2 id="3-ndarray-생성하기-nparray"><a class="markdownIt-Anchor" href="#3-ndarray-생성하기-nparray"></a> <strong>3. ndarray 생성하기 – "np.array([…])"</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], dtype=int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr <span class="comment"># 주의: list와 다름</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  <span class="comment"># list</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>numpy.ndarray
</code></pre>
<br>
<br>  
<h3 id="3-1-list로-부터-생성하기-nparraylist_name"><a class="markdownIt-Anchor" href="#3-1-list로-부터-생성하기-nparraylist_name"></a> 3-1. list로 부터 생성하기 – “np.array(<em>list_name</em>)”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist2 = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">           [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]]</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1 = np.array(mylist1)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2 = np.array(mylist2)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
 <br> 
<h3 id="3-2-shape확인하기-array_name-shape"><a class="markdownIt-Anchor" href="#3-2-shape확인하기-array_name-shape"></a> 3-2. shape확인하기 – “<em>array_name</em> .shape”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4,)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(2, 4)
</code></pre>
<br>
 <br>   
<h2 id="4-array에서의-data-type"><a class="markdownIt-Anchor" href="#4-array에서의-data-type"></a> <strong>4. array에서의 data type</strong></h2>
<p><strong>array에서는 list와 다르게 1개의 <font color="red">단일 데이터 타입 </font> 만 허용 된다</strong></p>
  <br>
<h3 id="4-1-list에서의-data-type"><a class="markdownIt-Anchor" href="#4-1-list에서의-data-type"></a> 4-1. list에서의 data type</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 3.14, '사과', '1234']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'사과'
</code></pre>
<br>
 <br> 
<h3 id="4-2-array에서의-data-type"><a class="markdownIt-Anchor" href="#4-2-array에서의-data-type"></a> 4-2. array에서의 data type</h3>
<h4 id="case-1-int와-float타입이-혼재된-경우"><a class="markdownIt-Anchor" href="#case-1-int와-float타입이-혼재된-경우"></a> case 1. int와 float타입이 혼재된 경우</h4>
<p>int와 float타입이 혼재된 경우 int(정수)가 float(실수)로 바꿔진다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.14</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr  <span class="comment"># 정수가 실수로 바꿔진다</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1.  , 2.  , 3.  , 3.14])
</code></pre>
<br>
<p>​</p>
<h4 id="case-2-int와-float-타입이-혼재되었으나-dtype을-지정한-경우"><a class="markdownIt-Anchor" href="#case-2-int와-float-타입이-혼재되었으나-dtype을-지정한-경우"></a> case 2. int와 float 타입이 혼재되었으나, dtype을 지정한 경우</h4>
<p>int와 float 타입이 혼재되었으나, dtype가 int로 지정된 경우, float의 앞에 정수 부분만 보류된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.14</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 3])
</code></pre>
<br>
<h4 id="case-3-int-float-와-str-타입이-혼재된-경우"><a class="markdownIt-Anchor" href="#case-3-int-float-와-str-타입이-혼재된-경우"></a> case 3. int / float 와 str 타입이 혼재된 경우</h4>
<p>int / float 와 float타입이 혼재된 경우 int(정수)가 str(문자열)로 바꿔진다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['1', '3.14', '사과', '1234'], dtype='&lt;U32')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">0</span>] + arr[<span class="number">1</span>]  <span class="comment">#str로 되어버려서 숫자의 사칙 연산이 안됨</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>'13.14'
</code></pre>
<br>
<h4 id="case-4-int와-str-타입이-혼재되어-있고-dtype이-int로-지정한-경우"><a class="markdownIt-Anchor" href="#case-4-int와-str-타입이-혼재되어-있고-dtype이-int로-지정한-경우"></a> case 4. int와 str 타입이 혼재되어 있고 dtype이 int로 지정한 경우</h4>
<p><strong>(1) 문자내용인 str이 존재한 경우 error 발생</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>, <span class="string">'5.8'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-50-88e75a912236&gt; in &lt;module&gt;
----&gt; 1 arr = np.array([1, 3.14, '사과', '1234', '5.8'], dtype = int)


ValueError: invalid literal for int() with base 10: '사과'
</code></pre>
<br>
<p><strong>(2) 실수(float)내용인 str이 존재한 경우도 error발생</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'1234'</span>, <span class="string">'5.8'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-52-98017763e514&gt; in &lt;module&gt;
----&gt; 1 arr = np.array([1, 3.14, '1234', '5.8'], dtype = int)


ValueError: invalid literal for int() with base 10: '5.8'
</code></pre>
<br>
<p><strong>(3) 정수(int)내용인 str만 존재한 경우 해당 str이 자동으로 int로 바꿔짐</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'1234'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([   1,    3, 1234])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 1. Numpy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (4) Series의 Type 변환하기</title>
    <url>/2020/06/19/S-Python-Pandas-Pre4/</url>
    <content><![CDATA[<h1 id="series의-type-변환하기"><a class="markdownIt-Anchor" href="#series의-type-변환하기"></a> Series의 Type 변환하기</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-series%EC%9D%98-type"><strong>1. Series의 Type</strong></a>
<ul>
<li><a href="#1-1-type-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">1-1. Type 확인하기</a></li>
<li><a href="#1-2-type-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0">1-2. Type 변환하기</a></li>
<li><a href="#1-3-%EB%82%A0%EC%A7%9C-datatime-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0">1-3. 날짜 (datatime) 타입 변환하기</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h2 id="1-series의-type"><a class="markdownIt-Anchor" href="#1-series의-type"></a> <strong>1. Series의 Type</strong></h2>
<h3 id="1-1-type-확인하기"><a class="markdownIt-Anchor" href="#1-1-type-확인하기"></a> 1-1. Type 확인하기</h3>
<blockquote>
<p><strong><em>df_name</em>.info()</strong> 명령어를 사용하여 Dataframe의 Series Type을 확인할 수 있다<br>
<strong><em>df_name</em> [ “<em>col_name</em>” ] .dtypes</strong> 명령어를 사용하여 특정 Series의 Type을 확인할 수 있다</p>
</blockquote>
<blockquote>
<p><strong>Series Type</strong></p>
<ul>
<li>object: 일반 문자영 타입</li>
<li>float: 실수</li>
<li>int: 정수</li>
<li>category: 카테고리</li>
<li>datatime: 시간</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
<pre><code>.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"이름"</span>].dtypes</span><br></pre></td></tr></tbody></table></figure>
<pre><code>dtype('O')
</code></pre>
<br>
<h3 id="1-2-type-변환하기"><a class="markdownIt-Anchor" href="#1-2-type-변환하기"></a> 1-2. Type 변환하기</h3>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.astype(…)</strong></p>
</blockquote>
<br>
<p><strong>e.g.</strong>  “키” column을 float에서 int로 변환해보기</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-12-c145a39acdb2&gt; in &lt;module&gt;
----&gt; 1 df["키"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    866 
    867         if not np.isfinite(arr).all():
--&gt; 868             raise ValueError("Cannot convert non-finite values (NA or inf) to integer")
    869 
    870     elif is_object_dtype(arr):


ValueError: Cannot convert non-finite values (NA or inf) to integer
</code></pre>
<br>
<p>“키” column에 NaN값이 존재하기 때문에 Error 발생!</p>
<br>
<blockquote>
<p><strong>column에 NaN 값이 있는 경우:</strong> 면저 NaN 값을 다른 값으로 대체한 후 Type을 변환할 수 있다</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>] = df[<span class="string">"키"</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173
1     177
2     180
3     178
4     162
5     178
6     182
7      -1
8     179
9     167
10     -1
11    183
12    175
13    176
14    174
Name: 키, dtype: int32
</code></pre>
<br>
<h3 id="1-3-날짜-datatime-타입-변환하기"><a class="markdownIt-Anchor" href="#1-3-날짜-datatime-타입-변환하기"></a> 1-3. 날짜 (datatime) 타입 변환하기</h3>
<p><strong>(1) datetime 타입으로 변환하기</strong></p>
<blockquote>
<p><strong>pd.to_datetime</strong> ( <em>df_name</em> [ “<em>col_nema</em>”] )</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     1995-10-13
1     1988-08-18
2     1996-12-10
3     1995-12-30
4     1995-07-23
5     1997-09-01
6     1995-08-09
7     1998-08-26
8     1992-12-04
9     1994-03-22
10    1989-03-09
11    1997-03-30
12    1995-07-21
13    1995-06-08
14    1993-03-09
Name: 생년월일, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.to_datetime(df[<span class="string">"생년월일"</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1995-10-13
1    1988-08-18
2    1996-12-10
3    1995-12-30
4    1995-07-23
5    1997-09-01
6    1995-08-09
7    1998-08-26
8    1992-12-04
9    1994-03-22
10   1989-03-09
11   1997-03-30
12   1995-07-21
13   1995-06-08
14   1993-03-09
Name: 생년월일, dtype: datetime64[ns]
</code></pre>
<p><br>변환된 것을 <strong>원래 column에 다시 대입을 해줘야</strong> 정상적으로 변환된 값이 들어간다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>] = pd.to_datetime(df[<span class="string">"생년월일"</span>])</span><br><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1995-10-13
1    1988-08-18
2    1996-12-10
3    1995-12-30
4    1995-07-23
5    1997-09-01
6    1995-08-09
7    1998-08-26
8    1992-12-04
9    1994-03-22
10   1989-03-09
11   1997-03-30
12   1995-07-21
13   1995-06-08
14   1993-03-09
Name: 생년월일, dtype: datetime64[ns]
</code></pre>
<br>  
<p><strong>(2) datatime 타입을 활용하기</strong></p>
<blockquote>
<p><strong><em>df_name</em> [ “<em>datetime_col</em>” ] .dt</strong><br>
을 활용하여 매우 손쉽게 <strong>년, 월, 일, 요일</strong> 등등 날짜 정보를 세부적으로 <strong>추출</strong>해낼 수 있다</p>
</blockquote>
<blockquote>
<ul>
<li>년: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.year</strong></li>
<li>월: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.month</strong></li>
<li>일: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.day</strong></li>
<li>요일: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.dayofweek</strong></li>
<li>주: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.weekofyear</strong></li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1995-10-13
1    1988-08-18
2    1996-12-10
3    1995-12-30
4    1995-07-23
5    1997-09-01
6    1995-08-09
7    1998-08-26
8    1992-12-04
9    1994-03-22
10   1989-03-09
11   1997-03-30
12   1995-07-21
13   1995-06-08
14   1993-03-09
Name: 생년월일, dtype: datetime64[ns]
</code></pre>
  <br>
<p><strong>년 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.year</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     1995
1     1988
2     1996
3     1995
4     1995
5     1997
6     1995
7     1998
8     1992
9     1994
10    1989
11    1997
12    1995
13    1995
14    1993
Name: 생년월일, dtype: int64
</code></pre>
<br>
<p><strong>월 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.month</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     10
1      8
2     12
3     12
4      7
5      9
6      8
7      8
8     12
9      3
10     3
11     3
12     7
13     6
14     3
Name: 생년월일, dtype: int64
</code></pre>
<br>  
<p><strong>일 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.day</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     13
1     18
2     10
3     30
4     23
5      1
6      9
7     26
8      4
9     22
10     9
11    30
12    21
13     8
14     9
Name: 생년월일, dtype: int64
</code></pre>
 <br> 
<p><strong>요일 추출:</strong></p>
<blockquote>
<p>월 [0],  화 [1],  수 [2],  목 [3],  금 [4],  토 [5],  일 [6]</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.dayofweek</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     4
1     3
2     1
3     5
4     6
5     0
6     2
7     2
8     4
9     1
10    3
11    6
12    4
13    3
14    1
Name: 생년월일, dtype: int64
</code></pre>
 <br> 
<p><strong>주 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.weekofyear</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     41
1     33
2     50
3     52
4     29
5     36
6     32
7     35
8     49
9     12
10    10
11    13
12    29
13    23
14    10
Name: 생년월일, dtype: int64
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (5) column 값을 변환시키는 방법</title>
    <url>/2020/06/19/S-Python-Pandas-Pre5/</url>
    <content><![CDATA[<h1 id="dataframe의-column-값을-변환시키는-방법"><a class="markdownIt-Anchor" href="#dataframe의-column-값을-변환시키는-방법"></a> DataFrame의 column 값을 변환시키는 방법</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-apply-%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98"><strong>1. apply + 일반 함수</strong></a>
<ul>
<li><a href="#1-1-%EB%AA%A9%ED%91%9C-%EC%84%B1%EB%B3%84-column%EC%9D%98-%EB%82%A8%EC%9E%90-%EC%97%AC%EC%9E%90%EB%A5%BC-1-2%EB%A1%9C-%EB%B0%94%EA%BE%BC%EB%8B%A4">1-1. (목표) ‘성별’ column의 “남자” / "여자"를 1 / 2로 바꾼다</a></li>
<li><a href="#1-2-%EB%AA%A9%ED%91%9C-cm%EB%8B%B9-%EB%B8%8C%EB%9E%9C%EB%93%9C-%ED%8F%89%ED%8C%90%EC%A7%80%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%9C%EB%8B%A4-%EB%B8%8C%EB%9E%9C%EB%93%9C%ED%8F%89%ED%8C%90%EC%A7%80%EC%88%98-%ED%82%A4">1-2. (목표) cm당 브랜드 평판지수를 구한다 (브랜드평판지수 / 키)</a></li>
</ul>
</li>
<li><a href="#2-apply-lamda-%ED%95%A8%EC%88%98"><strong>2. apply + lamda 함수</strong></a></li>
<li><a href="#3-map-map-%ED%95%A8%EC%88%98"><strong>3. map + map 함수</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-apply-일반-함수"><a class="markdownIt-Anchor" href="#1-apply-일반-함수"></a> <strong>1. apply + 일반 함수</strong></h2>
<blockquote>
<p>apply는 Series나 DataFrame에 좀 더 <strong>구체적인 로직</strong>을 적용하고 싶은 경우 활용한다</p>
<ul>
<li>apply를 적용하기 위해서는 함수가 먼저 정의되어야한다</li>
<li>apply는 정의한 로직 함수를 인자로 넘겨준다</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>
<p><strong>Series에 적용할 경우:</strong><br>
<em>df_name</em> [ “<em>col_name</em>” ] <strong>.apply( <em>func</em> )</strong></p>
</li>
<li>
<p><strong>DataFrame에 적용할 경우:</strong><br>
<em>df_name</em> <strong>.apply( <em>func</em>, axis = 1)</strong></p>
</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="1-1-목표-성별-column의-남자-여자를-1-2로-바꾼다"><a class="markdownIt-Anchor" href="#1-1-목표-성별-column의-남자-여자를-1-2로-바꾼다"></a> 1-1. (목표) ‘성별’ column의 “남자” / "여자"를 1 / 2로 바꾼다</h3>
<p><strong>변환 규칙:</strong><br>
남자: 1   여자: 2   기타: -1</p>
<br>
<p><strong>(1) 로직 함수 정의</strong></p>
<p><strong>[주의] 반드시 return 값이 존재</strong>하여야한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">male_or_female</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">"남자"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> x == <span class="string">"여자"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>(2) apply로 DataFrame에 적용</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"성별_NEW"</span>] = df[<span class="string">"성별"</span>].apply(male_or_female)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성별_NEW</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="1-2-목표-cm당-브랜드-평판지수를-구한다-브랜드평판지수-키"><a class="markdownIt-Anchor" href="#1-2-목표-cm당-브랜드-평판지수를-구한다-브랜드평판지수-키"></a> 1-2. (목표) cm당 브랜드 평판지수를 구한다 (브랜드평판지수 / 키)</h3>
<p><strong>변환 규칙:</strong><br>
키: 178  브랜드평판지수: 99000<br>
값: 99000 / 178</p>
<br>
<p><strong>(1) 로직 함수 정의</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cm_to_brand</span><span class="params">(df)</span>:</span></span><br><span class="line">    value = df[<span class="string">"브랜드평판지수"</span>] / df[<span class="string">"키"</span>]</span><br><span class="line">    <span class="keyword">return</span> value</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(2) apply로 DataFrame에 적용</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.apply(cm_to_brand, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     60617.857143
1     56027.949153
2     45965.250000
3     45356.747191
4     47198.815546
5     29260.308989
6     27371.321997
7              NaN
8     25503.950893
9     24156.128067
10             NaN
11    19158.617486
12    18866.594286
13    18603.051136
14    16812.885057
dtype: float64
</code></pre>
 <br>
<br> 
<h2 id="2-apply-lamda-함수"><a class="markdownIt-Anchor" href="#2-apply-lamda-함수"></a> <strong>2. apply + lamda 함수</strong></h2>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.apply (<em>lambda_func</em>)</strong></p>
</blockquote>
<blockquote>
<ul>
<li>lambda는 1줄로 작성하는 간단 함수식이다</li>
<li>return을 별도로 멱기하지 않는다</li>
</ul>
</blockquote>
 <br> 
<p><strong>(1) male_or_female 함수</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">male_or_female = <span class="keyword">lambda</span> x: <span class="number">1</span> <span class="keyword">if</span> x == <span class="string">"남자"</span> <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"성별"</span>].apply(male_or_female)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     1
1     1
2     1
3     1
4     0
5     1
6     1
7     0
8     1
9     1
10    0
11    1
12    1
13    1
14    1
Name: 성별, dtype: int64
</code></pre>
<br>  
<p><strong>(2) 실제로는 간단한 계산식을 적용하려는 경우에 많이 사용한다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키/2"</span>] = df[<span class="string">"키"</span>].apply(<span class="keyword">lambda</span> x: x / <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성별_NEW</th>
      <th>키/2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>1</td>
      <td>86.80</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>1</td>
      <td>88.50</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>1</td>
      <td>90.00</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>1</td>
      <td>89.00</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>2</td>
      <td>81.05</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p>apply에 함수식을 만들어서 적용해주는 것과 동일하기 때문에, <strong>복잠한 조건식은 &lt;함수&gt;로, 간단한 계산식은 &lt; lambda &gt; 로</strong> 적용하면 된다</p>
<p><br><br></p>
<h2 id="3-map-map-함수"><a class="markdownIt-Anchor" href="#3-map-map-함수"></a> <strong>3. map + map 함수</strong></h2>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.map ( <em>map_func</em> )</strong></p>
</blockquote>
<blockquote>
<p><strong>Step 1:</strong> dictionary 형식으로 map 함수를 정의하기<br>
<strong>Step 2:</strong> DataFrame / Series에 map 함수를 적용</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성별_NEW</th>
      <th>키/2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>1</td>
      <td>86.80</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>1</td>
      <td>88.50</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>1</td>
      <td>90.00</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>1</td>
      <td>89.00</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>2</td>
      <td>81.05</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_map = {</span><br><span class="line">    <span class="string">"남자"</span>: <span class="string">"male"</span>,</span><br><span class="line">    <span class="string">"여자"</span>: <span class="string">"female"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"성별"</span>].map(my_map)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       male
1       male
2       male
3       male
4     female
5       male
6       male
7     female
8       male
9       male
10    female
11      male
12      male
13      male
14      male
Name: 성별, dtype: object
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (2) 결측값 및 중복값 처리</title>
    <url>/2020/06/18/S-Python-Pandas-Pre2/</url>
    <content><![CDATA[<h1 id="결측값-및-중복값-처리"><a class="markdownIt-Anchor" href="#결측값-및-중복값-처리"></a> 결측값 및 중복값 처리</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-dropna"><strong>1. 결측값을 제거하기 – dropna()</strong></a></li>
<li><a href="#2-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%9D%84-%EC%B1%84%EC%9B%8C%EC%A3%BC%EA%B8%B0-fillna"><strong>2. 결측값을 채워주기 – fillna</strong></a>
<ul>
<li><a href="#2-1-na%EA%B0%92%EC%9D%84-%ED%8A%B9%EC%A0%95-%EC%88%AB%EC%9E%90%EB%A1%9C-%EC%B1%84%EC%9A%B0%EA%B8%B0">2-1. NA값을 특정 숫자로 채우기</a></li>
<li><a href="#2-2-na%EA%B0%92%EC%9D%84-%ED%86%B5%EA%B3%84%EA%B0%92%EC%9C%BC%EB%A1%9C-%EC%B1%84%EC%9A%B0%EA%B8%B0">2-2. NA값을 통계값으로 채우기</a></li>
</ul>
</li>
<li><a href="#3-%EC%A4%91%EB%B3%B5%EB%90%9C-%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-drop_duplicates"><strong>3. 중복된 값을 제거하기 – drop_duplicates</strong></a>
<ul>
<li><a href="#3-1-column%EC%9D%98-%EC%A4%91%EB%B3%B5%EA%B0%92-%EC%A0%9C%EA%B1%B0">3-1. column의 중복값 제거</a></li>
<li><a href="#3-2-%ED%96%89-%EC%A0%84%EC%B2%B4-%EC%A0%9C%EA%B1%B0">3-2. 행 전체 제거</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-결측값을-제거하기-dropna"><a class="markdownIt-Anchor" href="#1-결측값을-제거하기-dropna"></a> <strong>1. 결측값을 제거하기 – dropna()</strong></h2>
<blockquote>
<ul>
<li>결측값이 있는 행을 제거:<br>
(1) <em>df_name</em> <strong>.dropna()</strong><br>
(2) <em>df_name</em> <strong>.dropna(axis=0)</strong></li>
<li>결측값이 있는 열을 제거: <em>df_name</em> <strong>.dropna(axis=1)</strong></li>
<li>NA가 하나라도 있는 경우 제거: <em>df_name</em> <strong>.dropna</strong>(axis=0, <strong>how = ‘any’</strong>)</li>
<li>모두가 NA인 경우 제거: <em>df_name</em> <strong>.dropna</strong>(axis=0, <strong>how = ‘all’</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>(1) 결측값이 있는 행 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>(2) 결측 값이 있는 열 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>(3) NA가 하나라도 있는 경우 행 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">0</span>, how = <span class="string">'any'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>(4) 모두가 NA인 경우 행 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[<span class="number">10</span>] = np.nan</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">0</span>, how = <span class="string">'all'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442.0</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h2 id="2-결측값을-채워주기-fillna"><a class="markdownIt-Anchor" href="#2-결측값을-채워주기-fillna"></a> <strong>2. 결측값을 채워주기 – fillna</strong></h2>
<blockquote>
<p><em>df_name</em> [ '<em>na_col_name</em> ’ ] <strong>.fillna(<em>fill_value</em>)</strong></p>
</blockquote>
<blockquote>
<p>결측값을 채운 데이터프레임을 유지시키려면:<br>
(1) inplace = True 옵션을 추가함<br>
(2) 원 dataframe에 다시 대입함</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<p>"키"에 2개의 데이터가 누락, "그룹"에 1개의 데이터가 누락된 것을 확인할 수 있다</p>
  <br>
<h3 id="2-1-na값을-특정-숫자로-채우기"><a class="markdownIt-Anchor" href="#2-1-na값을-특정-숫자로-채우기"></a> 2-1. NA값을 특정 숫자로 채우기</h3>
<blockquote>
<ul>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>new_value</em>, inplace = True)</li>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] = <em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>new_value</em>)</li>
</ul>
</blockquote>
<br>
<p><strong>e.g.</strong> 누락된 ‘키’ 값을 '-1’로 채워줌</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>  
<p>이때는 원 데이터가 변화되지 않음.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
 <br>
<p>수정된 데이터를 유지시키려면:</p>
<p>&lt;방법1&gt;</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(<span class="number">-1</span>, inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>
<p>&lt;방법2&gt;</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>
<h3 id="2-2-na값을-통계값으로-채우기"><a class="markdownIt-Anchor" href="#2-2-na값을-통계값으로-채우기"></a> 2-2. NA값을 통계값으로 채우기</h3>
<blockquote>
<ul>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.mean()</strong>, inplace = True)</li>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] = <em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.mean()</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
 <br> 
<p><strong>(1) 평균으로 대체</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>175.79230769230767
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].mean(), inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].mean())</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.600000
1     177.000000
2     180.000000
3     178.000000
4     162.100000
5     178.000000
6     182.300000
7     175.792308
8     179.200000
9     167.100000
10    175.792308
11    183.000000
12    175.000000
13    176.000000
14    174.000000
Name: 키, dtype: float64
</code></pre>
 <br> 
<p><strong>(2) 중위값으로 대체</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].median()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>177.0
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].median(), inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].median())</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7     177.0
8     179.2
9     167.1
10    177.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<p><br>  <br></p>
<h2 id="3-중복된-값을-제거하기-drop_duplicates"><a class="markdownIt-Anchor" href="#3-중복된-값을-제거하기-drop_duplicates"></a> <strong>3. 중복된 값을 제거하기 – drop_duplicates</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br> 
<h3 id="3-1-column의-중복값-제거"><a class="markdownIt-Anchor" href="#3-1-column의-중복값-제거"></a> 3-1. column의 중복값 제거</h3>
<blockquote>
<p><em>df_name</em> [“<em>col_name</em>”] <strong>.drop_duplicates( keep = … )</strong></p>
</blockquote>
<blockquote>
<ul>
<li>여러 개 중복값 (NaN 포함) 중에서 기본적으로 첫번째 것만 유지시키고 나머지는 다 제거한다</li>
<li>하지만 keep 옵션으로 유지하고 싶은 데이터를 선택할 수 있다. [keep: ‘first’ / ‘last’]</li>
<li>이때는 해당 위치의 값만 삭제되고 행 자체는 유지된다</li>
</ul>
</blockquote>
<br>
<p><strong>(1) 중복값 중의 첫번째를 유지시킴  <font color="blue"> (default) </font></strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3       NaN
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates()  <span class="comment"># remove 2nd "178.0" &amp; 2nd "NaN"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3       NaN
4     162.1
5     178.0
6     182.3
8     179.2
9     167.1
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'first'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3       NaN
4     162.1
5     178.0
6     182.3
8     179.2
9     167.1
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>  
<p><strong>(2) 중복값 중의 마지막을 유지시킴</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
4     162.1
5     178.0
6     182.3
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
 <br> 
<p><strong>이때는 해당위치의 값만 제거되고 행 자체는 유지됨</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>] = df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>NaN</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-2-행-전체-제거"><a class="markdownIt-Anchor" href="#3-2-행-전체-제거"></a> 3-2. 행 전체 제거</h3>
<blockquote>
<p><em>df_name</em> <strong>.drop_duplicates</strong>(“<em>col_name</em>”, keep = …)</p>
</blockquote>
<blockquote>
<p>지정한 column에서 중복값이 포함되어 있으면 중복값을 포함한 행을 전체 제거</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>NaN</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     방탄소년단
1        빅뱅
2       NaN
3     방탄소년단
4       마마무
5     방탄소년단
6      뉴이스트
7       아이들
8     방탄소년단
9        핫샷
10     소녀시대
11     아스트로
12     뉴이스트
13     뉴이스트
14    방탄소년단
Name: 그룹, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop_duplicates(<span class="string">'그룹'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop_duplicates(<span class="string">'그룹'</span>, keep = <span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 시각화</title>
    <url>/2020/06/25/S-Python-Pandas-visual/</url>
    <content><![CDATA[<h1 id="pandas-데이터-시각화"><a class="markdownIt-Anchor" href="#pandas-데이터-시각화"></a> Pandas - 데이터 시각화</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EC%A4%80%EB%B9%84-%ED%95%9C%EA%B8%80%ED%8F%B0%ED%8A%B8-%EA%B9%A8%EC%A7%90%ED%98%84%EC%83%81-%ED%95%B4%EA%B2%B0"><strong>0. 준비 – 한글폰트 깨짐현상 해결</strong></a></li>
<li><a href="#1-plot-%EA%B7%B8%EB%9E%98%ED%94%84"><strong>1. Plot 그래프</strong></a>
<ul>
<li><a href="#line-%EA%B7%B8%EB%9E%98%ED%94%84">line 그래프</a></li>
<li><a href="#bar-%EA%B7%B8%EB%9E%98%ED%94%84">bar 그래프</a></li>
<li><a href="#%ED%9E%88%EC%8A%A4%ED%86%A0%EA%B7%B8%EB%9E%A8-hist">히스토그램 (hist)</a></li>
<li><a href="#%EC%BB%A4%EB%84%90-%EB%B0%80%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-kde">커널 밀도 그래프 (kde)</a></li>
<li><a href="#%EA%B3%A0%EB%B0%80%EB%8F%84-%EC%82%B0%EC%A0%90%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-hexbin">고밀도 산점도 그래프 (hexbin)</a></li>
<li><a href="#%EB%B0%95%EC%8A%A4-%ED%94%8C%EB%A1%AF-box">박스 플롯 (box)</a></li>
<li><a href="#area-plot">area plot</a></li>
<li><a href="#%ED%8C%8C%EC%9D%B4-%EA%B7%B8%EB%9E%98%ED%94%84-pie-plot">파이 그래프 (pie plot)</a></li>
<li><a href="#%EC%82%B0%EC%A0%90%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-scatter-plot">산점도 그래프 (scatter plot)</a></li>
</ul>
</li>
</ul>
<p></p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"house_price_clean.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>4</th>
      <td>인천</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>3488</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3288</th>
      <td>경남</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3065</td>
    </tr>
    <tr>
      <th>3289</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>3290</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>3291</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>3292</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>3293 rows × 5 columns</p>
</div>
<br>
  <br>
<h2 id="0-준비-한글폰트-깨짐현상-해결"><a class="markdownIt-Anchor" href="#0-준비-한글폰트-깨짐현상-해결"></a> <strong>0. 준비 – 한글폰트 깨짐현상 해결</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em></p>
<ol>
<li><a href="https://blog.naver.com/itisik/221789012960" target="_blank" rel="noopener">주피터 노트북(Jupyter notebook) - Matplotlib 한글 깨짐 현상 해결</a></li>
<li><a href="https://teddylee777.github.io/visualization/matplotlib-%EC%8B%9C%EA%B0%81%ED%99%94-%ED%95%9C%EA%B8%80%ED%8F%B0%ED%8A%B8%EC%A0%81%EC%9A%A9" target="_blank" rel="noopener">matplotlib/seaborn으로 시각화할 때 한글 폰트 깨짐현상 해결방법</a></li>
</ol>
</blockquote>
<br>
<p>Jupyter Notebook에서 그래프를 그릴 때 한글 깨짐 현상이 발생한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179eb070ac8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_9_2.png" alt="png"></p>
<blockquote>
<p>우리는 <strong>설정 파일을 수정하여 한글 폰트를 영구 등록</strong>함으로써 이 문제를 해결할 수 있다</p>
</blockquote>
<br>
<p><strong>(1) 설정 파일 위치 찾기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"></span><br><span class="line"><span class="comment">#font 설정 파일 위치 출력</span></span><br><span class="line">mpl.matplotlib_fname()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'D:\\Anaconda\\lib\\site-packages\\matplotlib\\mpl-data\\matplotlibrc'
</code></pre>
<br>
<p><strong>(2) 설정 파일 수정하기</strong></p>
<p>맨 마지막 <em><strong>matplotlibrc</strong></em> 는 우리가 수정해야할 파일의 이름이다</p>
<ul>
<li>
<p>step 1. 한글 폰트 적용<br>
수정전: <em><mark>#</mark> font.family   : <mark>sans-serif</mark></em><br>
수정후: <em>font.family   : <mark>Malgun Gothic</mark></em></p>
</li>
<li>
<p>step 2. minus 깨짐 방지<br>
수정전: <em><mark>#</mark> axes.unicode_minus  : <mark>True</mark> ## use unicode for the minus symbol</em><br>
수정후: <em>axes.unicode_minus  : <mark>False</mark> ## use unicode for the minus symbol</em></p>
</li>
</ul>
<br>
<p><strong>(3) Tip: 전역으로 시각화 figsize 조절</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">'figure.figsize'</span>] = (<span class="number">8</span>, <span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>설정을 완료한 후 jupyter notebook의 kernel을 리셋하고 다시 그래프를 그리면,<br>
한글폰트가 깨지지 않고 잘 출력되는 것을 확인하실 수 있다.</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f01b0c48&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_24_1.png" alt="png"></p>
<br>
<br>
<h2 id="1-plot-그래프"><a class="markdownIt-Anchor" href="#1-plot-그래프"></a> <strong>1. Plot 그래프</strong></h2>
<blockquote>
<p><em>df_name</em> [ <em>col_name</em> ] <strong>.plot</strong> ( <strong>kind</strong> = ‘…’ )</p>
</blockquote>
<blockquote>
<ul>
<li>plot은 일반 선그래프를 나타난다</li>
<li>kind 옵션을 통해 원하는 그패프를 그릴 수 있다</li>
</ul>
</blockquote>
<br>
<p><strong>kind 옵션:</strong></p>
<ul>
<li>
<p>line: 선 그래프</p>
</li>
<li>
<p>bar: 바 그래프</p>
</li>
<li>
<p>barh: 수평 바 프래프</p>
</li>
<li>
<p>hist: 히스토르램</p>
</li>
<li>
<p>kde: 커널 밀도 그래프</p>
</li>
<li>
<p>hexbin: 고밀도 산점도 그래프</p>
</li>
<li>
<p>box: 박스 플롯</p>
</li>
<li>
<p>area: 면적 그래프</p>
</li>
<li>
<p>pie: 파이 그래프</p>
</li>
<li>
<p>scatter: 산점도 그래프</p>
<br> 
</li>
</ul>
<h3 id="line-그래프"><a class="markdownIt-Anchor" href="#line-그래프"></a> line 그래프</h3>
<blockquote>
<p>line 그래프는 데이터가 연속적인 경우 사용하기 적절하다. (예를 들면, 주가 데이터)</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>4</th>
      <td>인천</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>3488</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3288</th>
      <td>경남</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3065</td>
    </tr>
    <tr>
      <th>3289</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>3290</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>3291</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>3292</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>3293 rows × 5 columns</p>
</div>
<br>  
<p><strong>(1) 모든 observation의 분양가 살펴보기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># index - 분양가</span></span><br><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">'line'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f01a0bc8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_38_1.png" alt="png"></p>
<br>
<p><strong>(2) 연도에 따른 서울 분양가 변화 추세</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># select "서울" data</span></span><br><span class="line">df_seoul = df.loc[df[<span class="string">"지역"</span>] == <span class="string">"서울"</span>]</span><br><span class="line">df_seoul</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>64</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td>6320</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3178</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>1</td>
      <td>8779</td>
    </tr>
    <tr>
      <th>3234</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>8193</td>
    </tr>
    <tr>
      <th>3235</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>8140</td>
    </tr>
    <tr>
      <th>3236</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>13835</td>
    </tr>
    <tr>
      <th>3237</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>9039</td>
    </tr>
  </tbody>
</table>
<p>212 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># group by "year" </span></span><br><span class="line">df_seoul_year = df_seoul.groupby(<span class="string">'연도'</span>).mean()</span><br><span class="line">df_seoul_year</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>월</th>
      <th>분양가</th>
    </tr>
    <tr>
      <th>연도</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2015</th>
      <td>11.0</td>
      <td>6201.000000</td>
    </tr>
    <tr>
      <th>2016</th>
      <td>6.5</td>
      <td>6674.520833</td>
    </tr>
    <tr>
      <th>2017</th>
      <td>6.5</td>
      <td>6658.729167</td>
    </tr>
    <tr>
      <th>2018</th>
      <td>6.5</td>
      <td>7054.687500</td>
    </tr>
    <tr>
      <th>2019</th>
      <td>6.5</td>
      <td>8735.083333</td>
    </tr>
    <tr>
      <th>2020</th>
      <td>1.5</td>
      <td>9647.375000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># line plot</span></span><br><span class="line">df_seoul_year[<span class="string">"분양가"</span>].plot(kind = <span class="string">'line'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028b5c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_43_1.png" alt="png"></p>
<br>
<h3 id="bar-그래프"><a class="markdownIt-Anchor" href="#bar-그래프"></a> bar 그래프</h3>
<blockquote>
<p>bar 그패프는 그룹별로 비교할 때 유용하다</p>
</blockquote>
 <br> 
<p><strong>지역별 평균 분양가 살펴보기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역
강원    2448.156863
경기    4133.952830
경남    2858.932367
경북    2570.465000
광주    3055.043750
대구    3679.620690
대전    3176.127389
부산    3691.981132
서울    7308.943396
세종    2983.543147
울산    2990.373913
인천    3684.302885
전남    2326.250000
전북    2381.416268
제주    3472.677966
충남    2534.950000
충북    2348.183962
Name: 분양가, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 수직 바 그래프</span></span><br><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean().plot(kind = <span class="string">'bar'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028b548&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_50_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 수평 바 그래프</span></span><br><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean().plot(kind = <span class="string">'barh'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179edd9d4c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_51_1.png" alt="png"></p>
<br>
<h3 id="히스토그램-hist"><a class="markdownIt-Anchor" href="#히스토그램-hist"></a> 히스토그램 (hist)</h3>
<blockquote>
<p>히스토그램은 <strong>분포-빈도 를 시각화</strong>하여 보여준다.<br>
가로축에는 분포를, 세로축에는 빈도가 시각화되어 보여짐.</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">"hist"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f021cc88&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_56_1.png" alt="png"></p>
<br>
<h3 id="커널-밀도-그래프-kde"><a class="markdownIt-Anchor" href="#커널-밀도-그래프-kde"></a> 커널 밀도 그래프 (kde)</h3>
<blockquote>
<ul>
<li>히스토그램과 유사하게 밀도를 보여주는 그래프다</li>
<li>히스토그램과 유사한 모양새를 각추고 있다</li>
<li>하지만 히스토그램과 다르게 부드러운 라인을 가지고 있다</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">"kde"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f043d608&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_61_1.png" alt="png"></p>
<br>
<h3 id="고밀도-산점도-그래프-hexbin"><a class="markdownIt-Anchor" href="#고밀도-산점도-그래프-hexbin"></a> 고밀도 산점도 그래프 (hexbin)</h3>
<blockquote>
<ul>
<li>hexbin은 고밀고 산점도 그래프다</li>
<li>x와 y 키 값을 넣어 주어야 한다</li>
<li>x, y 값 모두 numeric value 이어야한다</li>
<li>데이터의 밀도를 추정한다</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot(kind = <span class="string">"hexbin"</span>, x = <span class="string">"분양가"</span>, y = <span class="string">"연도"</span>, gridsize = <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028a9c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_66_1.png" alt="png"></p>
<br>
<h3 id="박스-플롯-box"><a class="markdownIt-Anchor" href="#박스-플롯-box"></a> 박스 플롯 (box)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_seoul = df.loc[df[<span class="string">"지역"</span>] == <span class="string">"서울"</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_seoul[<span class="string">"분양가"</span>].plot(kind = <span class="string">"box"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f226d748&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_70_1.png" alt="png"></p>
<br>
<p><strong>box plot 해석</strong></p>
<p><img src="/images/S-Python-Pandas-visual/R800x0" alt="box plot 해석"></p>
  <br>
<ul>
<li>
<p><strong>IQR (Inter Quantile Range)</strong>   = 3Q - 1Q</p>
</li>
<li>
<p><strong>Upper fence</strong> = 75th Percentile + 1.5*IQR</p>
</li>
<li>
<p><strong>Lower fence</strong> = 25th Percentile - 1.5*IQR</p>
<br>
</li>
</ul>
<p>box plot은 데이터 outlier 감지할 때 가장 많이 활용되며, 25%, median, 75% 분위값을 활용하는 용도로도 많이 활용된다</p>
  <br>
<h3 id="area-plot"><a class="markdownIt-Anchor" href="#area-plot"></a> area plot</h3>
<blockquote>
<p>area plot은 line 그래프에서 아래 area를 모두 색칠해 주는 것이 특징이다.</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>4</th>
      <td>인천</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>3488</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3288</th>
      <td>경남</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3065</td>
    </tr>
    <tr>
      <th>3289</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>3290</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>3291</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>3292</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>3293 rows × 5 columns</p>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"월"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">"line"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f22a6688&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_83_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"월"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">"area"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f2267588&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_84_1.png" alt="png"></p>
<br>
<h3 id="파이-그래프-pie-plot"><a class="markdownIt-Anchor" href="#파이-그래프-pie-plot"></a> 파이 그래프 (pie plot)</h3>
<blockquote>
<p>pie는 대표적으로 데이터의 점유율을 보유줄 때 유용하다</p>
</blockquote>
<br>  
<p><strong>연도별 분양가 데이터 점유율</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"연도"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">'pie'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f224fec8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_90_1.png" alt="png"></p>
<br>
<h3 id="산점도-그래프-scatter-plot"><a class="markdownIt-Anchor" href="#산점도-그래프-scatter-plot"></a> 산점도 그래프 (scatter plot)</h3>
<blockquote>
<ul>
<li>점으로 데이터를 표기해준다</li>
<li>x, y값을 넣어주어야한다 (hexbin과 유사)</li>
<li>x축과 y축을 지정해주면 그에 맞는 데이터 분포를 볼 수 있다</li>
<li>역시 numeric column 만 지정할 수 있다</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot(x = <span class="string">"월"</span>, y = <span class="string">"분양가"</span>, kind = <span class="string">"scatter"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f23372c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_95_1.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 시각화</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>시각화</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (6) 데이터프레임의 산술연산</title>
    <url>/2020/06/20/S-Python-Pandas-Pre6/</url>
    <content><![CDATA[<h1 id="데이터프레임의-산술연산"><a class="markdownIt-Anchor" href="#데이터프레임의-산술연산"></a> 데이터프레임의 산술연산</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-column-%EA%B3%BC-column-%EA%B0%84-%EC%97%B0%EC%82%B0-"><strong>1. Column 과 Column 간 연산 (+, -, *, /, %)</strong></a></li>
<li><a href="#2-column-%EA%B3%BC-%EC%88%AB%EC%9E%90-%EA%B0%84-%EC%97%B0%EC%82%B0-"><strong>2. Column 과 숫자 간 연산 (+, -, *, /, %)</strong></a></li>
<li><a href="#3-%EB%B3%B5%ED%95%A9-%EC%97%B0%EC%82%B0"><strong>3. 복합 연산</strong></a></li>
<li><a href="#4-mean-sum-%EC%9D%84-axis-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EC%97%B0%EC%82%B0"><strong>4. mean(), sum() 을 axis 기준으로 연산</strong></a></li>
<li><a href="#5-nan-%EA%B0%92%EC%9D%B4-%EC%A1%B4%EC%9E%AC%ED%95%A0-%EA%B2%BD%EC%9A%B0-%EC%97%B0%EC%82%B0"><strong>5. NaN 값이 존재할 경우 연산</strong></a></li>
<li><a href="#6-dataframe-%EA%B3%BC-dataframe-%EA%B0%84-%EC%97%B0%EC%82%B0"><strong>6. DataFrame 과 DataFrame 간 연산</strong></a>
<ul>
<li><a href="#6-1-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%ED%8F%AC%ED%95%A8%EB%90%9C-series-dataframe%EC%9D%98-%EC%97%B0%EC%82%B0%EC%9D%80-%EB%B6%88%EA%B0%80%ED%95%98%EB%8B%A4">6-1. 문자열이 포함된 Series / DataFrame의 연산은 불가하다</a></li>
<li><a href="#6-2-%EB%91%90-dataframe%EC%9D%98-column-%EC%9D%B4%EB%A6%84%EC%9D%80-%EA%B0%99%EC%9C%BC%EB%82%98-column-%EC%88%9C%EC%84%9C%EB%A7%8C-%EB%B0%94%EB%80%8C%EC%96%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0">6-2. 두 DataFrame의 column 이름은 같으나 column 순서만 바뀌어 있는 경우</a></li>
<li><a href="#6-3-%ED%96%89%EC%9D%98-%EA%B0%AF%EC%88%98%EA%B0%80-%EB%8B%A4%EB%A5%B8-%EA%B2%BD%EC%9A%B0">6-3. 행의 갯수가 다른 경우</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>예제 DataFrame 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="1-column-과-column-간-연산-"><a class="markdownIt-Anchor" href="#1-column-과-column-간-연산-"></a> <strong>1. Column 과 Column 간 연산 (+, -, *, /, %)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(df[<span class="string">"통계"</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>pandas.core.series.Series
</code></pre>
<p>즉 Series 과 Series 간의 연산</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] + df[<span class="string">"체육"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    180
1    190
2    210
3    280
4    270
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] - df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    10
1    15
2     0
3   -15
4   -20
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] * df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    3000
1    3850
2    6400
3    8500
4    7125
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1.200000
1    1.272727
2    1.000000
3    0.850000
4    0.789474
dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] % df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    10
1    15
2     0
3    85
4    75
dtype: int64
</code></pre>
<p><br> <br></p>
<h2 id="2-column-과-숫자-간-연산-"><a class="markdownIt-Anchor" href="#2-column-과-숫자-간-연산-"></a> <strong>2. Column 과 숫자 간 연산 (+, -, *, /, %)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    60
1    70
2    80
3    85
4    75
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    70
1    80
2    90
3    95
4    85
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] - <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    50
1    60
2    70
3    75
4    65
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] * <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    600
1    700
2    800
3    850
4    750
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    6.0
1    7.0
2    8.0
3    8.5
4    7.5
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] % <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    0
1    0
2    0
3    5
4    5
Name: 통계, dtype: int64
</code></pre>
<br>
<br>
<h2 id="3-복합-연산"><a class="markdownIt-Anchor" href="#3-복합-연산"></a> <strong>3. 복합 연산</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계미술+10"</span>] = df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
      <th>통계미술+10</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
      <td>120</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
      <td>135</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
      <td>170</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
      <td>195</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
      <td>180</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] - df[<span class="string">"체육"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     40
1     60
2    110
3     90
4     70
dtype: int64
</code></pre>
<br>
  <br>
<h2 id="4-mean-sum-을-axis-기준으로-연산"><a class="markdownIt-Anchor" href="#4-mean-sum-을-axis-기준으로-연산"></a> <strong>4. mean(), sum() 을 axis 기준으로 연산</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>(1) 각 column의 <font color="blue">모든 row 값의 합</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sum(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>통계    370
미술    380
체육    380
dtype: int64
</code></pre>
<br>  
<p><strong>(2) 각 column의 <font color="blue">모든 row 값의 평균</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.mean(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>통계    74.0
미술    76.0
체육    76.0
dtype: float64
</code></pre>
<br>
<p><strong>(3) 각 row의 <font color="blue">모든 column 값의 합</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sum(axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    180
1    190
2    210
3    280
4    270
dtype: int64
</code></pre>
<br>
<p><strong>(4) 각 row의 <font color="blue">모든 column 값의 평균</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.mean(axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    60.000000
1    63.333333
2    70.000000
3    93.333333
4    90.000000
dtype: float64
</code></pre>
<br>
  <br>
<h2 id="5-nan-값이-존재할-경우-연산"><a class="markdownIt-Anchor" href="#5-nan-값이-존재할-경우-연산"></a> <strong>5. NaN 값이 존재할 경우 연산</strong></h2>
<blockquote>
<p>NaN 값이 포함된 모든 연산의 결과가 다 NaN 값이다</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, np.nan, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, np.nan, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, np.nan] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60.0</td>
      <td>50.0</td>
      <td>70.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>NaN</td>
      <td>55.0</td>
      <td>65.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80.0</td>
      <td>NaN</td>
      <td>50.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85.0</td>
      <td>100.0</td>
      <td>95.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75.0</td>
      <td>95.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    30.0
1     NaN
2    40.0
3    42.5
4    37.5
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1000</span> / df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    16.666667
1          NaN
2    12.500000
3    11.764706
4    13.333333
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / np.nan</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0   NaN
1   NaN
2   NaN
3   NaN
4   NaN
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.nan / df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0   NaN
1   NaN
2   NaN
3   NaN
4   NaN
Name: 통계, dtype: float64
</code></pre>
<br>
 <br>  
<h2 id="6-dataframe-과-dataframe-간-연산"><a class="markdownIt-Anchor" href="#6-dataframe-과-dataframe-간-연산"></a> <strong>6. DataFrame 과 DataFrame 간 연산</strong></h2>
<h3 id="6-1-문자열이-포함된-series-dataframe의-연산은-불가하다"><a class="markdownIt-Anchor" href="#6-1-문자열이-포함된-series-dataframe의-연산은-불가하다"></a> 6-1. 문자열이 포함된 Series / DataFrame의 연산은 불가하다</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">'미술'</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">'체육'</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="string">'good'</span>, <span class="string">'bad'</span>, <span class="string">'ok'</span> , <span class="string">'good'</span>, <span class="string">'ok'</span>], <span class="string">'미술'</span>: [<span class="number">50</span>, <span class="number">60</span> , <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">'체육'</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">70</span> , <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>good</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>bad</td>
      <td>60</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>ok</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>good</td>
      <td>100</td>
      <td>70</td>
    </tr>
    <tr>
      <th>4</th>
      <td>ok</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 + df2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)
    148     try:
--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)
    150     except TypeError:


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)
    207     if use_numexpr:
--&gt; 208         return _evaluate(op, op_str, a, b)
    209     return _evaluate_standard(op, op_str, a, b)


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)
    120     if result is None:
--&gt; 121         result = _evaluate_standard(op, op_str, a, b)
    122 


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)
     69     with np.errstate(all="ignore"):
---&gt; 70         return op(a, b)
     71 


TypeError: unsupported operand type(s) for +: 'int' and 'str'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)
    148     try:
--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)
    150     except TypeError:


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)
    207     if use_numexpr:
--&gt; 208         return _evaluate(op, op_str, a, b)
    209     return _evaluate_standard(op, op_str, a, b)


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)
    120     if result is None:
--&gt; 121         result = _evaluate_standard(op, op_str, a, b)
    122 


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)
     69     with np.errstate(all="ignore"):
---&gt; 70         return op(a, b)
     71 


TypeError: can only concatenate str (not "int") to str
</code></pre>
<br>
<br>
<h3 id="6-2-두-dataframe의-column-이름은-같으나-column-순서만-바뀌어-있는-경우"><a class="markdownIt-Anchor" href="#6-2-두-dataframe의-column-이름은-같으나-column-순서만-바뀌어-있는-경우"></a> 6-2. 두 DataFrame의 column 이름은 같으나 column 순서만 바뀌어 있는 경우</h3>
<blockquote>
<p>연산시 자동으로 column 이름 기준으로 연산 된다</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'미술'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'통계'</span>:[<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'미술'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 + df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>70</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>90</td>
      <td>90</td>
    </tr>
    <tr>
      <th>2</th>
      <td>110</td>
      <td>110</td>
    </tr>
    <tr>
      <th>3</th>
      <td>130</td>
      <td>130</td>
    </tr>
    <tr>
      <th>4</th>
      <td>150</td>
      <td>150</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br> 
<h3 id="6-3-행의-갯수가-다른-경우"><a class="markdownIt-Anchor" href="#6-3-행의-갯수가-다른-경우"></a> 6-3. 행의 갯수가 다른 경우</h3>
<blockquote>
<p>행 index 기준으로 연산하되, 하나의 DataFrame에만 존재하는 행은 연산결과가 NaN으로 나옴</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'미술'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>], <span class="string">'통계'</span>:[<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">110</span>] })</span><br><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'미술'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
    <tr>
      <th>5</th>
      <td>60</td>
      <td>110</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 * df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>600.0</td>
      <td>600.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1400.0</td>
      <td>1400.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2400.0</td>
      <td>2400.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3600.0</td>
      <td>3600.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5000.0</td>
      <td>5000.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (1) Series와 DataFrame</title>
    <url>/2020/05/22/S-Python-Pandas1/</url>
    <content><![CDATA[<h1 id="series-dataframe"><a class="markdownIt-Anchor" href="#series-dataframe"></a> <strong>Series &amp; DataFrame</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-pandas-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A1%9C%EB%93%9C"><strong>1. pandas 패키지 로드</strong></a></li>
<li><a href="#2-pandas%EC%9D%98-series-%EC%99%80-dataframe"><strong>2. pandas의 Series 와 DataFrame</strong></a>
<ul>
<li><a href="#2-1-series">2-1. Series</a></li>
<li><a href="#2-2-dataframe">2-2. DataFrame</a>
<ul>
<li><a href="#%EB%B0%A9%EB%B2%95-1-list%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0">방법 1. list로 만들기</a></li>
<li><a href="#%EB%B0%A9%EB%B2%95-2-dict%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0">방법 2. dict로 만들기</a></li>
</ul>
</li>
<li><a href="#2-3-index%EB%A5%BC-%ED%8A%B9%EC%A0%95column%EC%9C%BC%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0">2-3. index를 특정column으로 지정하기</a></li>
<li><a href="#2-4-column-series">2-4. column = Series</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-pandas-패키지-로드"><a class="markdownIt-Anchor" href="#1-pandas-패키지-로드"></a> <strong>1. pandas 패키지 로드</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<p>별칭은 주로 pd로 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'pandas' from 'D:\\Anaconda\\lib\\site-packages\\pandas\\__init__.py'&gt;
</code></pre>
<br>
 <br> 
<h2 id="2-pandas의-series-와-dataframe"><a class="markdownIt-Anchor" href="#2-pandas의-series-와-dataframe"></a> <strong>2. pandas의 Series 와 DataFrame</strong></h2>
<p><strong>1차원, 1개의 column은 Series라고 한다</strong></p>
<h3 id="2-1-series"><a class="markdownIt-Anchor" href="#2-1-series"></a> 2-1. Series</h3>
<p><strong>Series 생성:</strong></p>
<ul>
<li>
<p>pd.Series(“list”)</p>
</li>
<li>
<p>pd.Series(“list_name”)</p>
<br>
</li>
</ul>
<p>(1) pd.Series(“list”)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<br>
<p>(2) pd.Series(“list_name”)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.Series(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.Series(mylist)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<br>
 <br>   
<h3 id="2-2-dataframe"><a class="markdownIt-Anchor" href="#2-2-dataframe"></a> 2-2. DataFrame</h3>
<h4 id="방법-1-list로-만들기"><a class="markdownIt-Anchor" href="#방법-1-list로-만들기"></a> 방법 1. list로 만들기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">company1 = [[<span class="string">'삼성'</span>, <span class="number">2000</span>, <span class="string">'스마트폰'</span>],</span><br><span class="line">           [<span class="string">'현대'</span>, <span class="number">1000</span>, <span class="string">'자동차'</span>],</span><br><span class="line">           [<span class="string">'네이버'</span>, <span class="number">500</span>, <span class="string">'포털'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame(company1)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>&lt;활용을 하기 위해 DataFrame을 변수에 지정하기&gt;</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame(company1)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;<br />
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>&lt;제목컬럼 만들기&gt; – “dfname.column = [ ]”</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1.columns = [<span class="string">'기업명'</span>, <span class="string">'매출액'</span>, <span class="string">'업종'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<ul>
<li><strong>주의:</strong> column명의 개수는 반드시 DataFrame의 column수와 동일해야 함<br>
<br></li>
</ul>
<h4 id="방법-2-dict로-만들기"><a class="markdownIt-Anchor" href="#방법-2-dict로-만들기"></a> 방법 2. dict로 만들기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">company2 = {<span class="string">'기업명'</span>: [<span class="string">'삼성'</span>, <span class="string">'현대'</span>, <span class="string">'네이버'</span>],  </span><br><span class="line">            <span class="string">'매출액'</span>: [<span class="number">2000</span>, <span class="number">1000</span>, <span class="number">500</span>],  </span><br><span class="line">            <span class="string">'업종'</span>:   [<span class="string">'스므트폰'</span>, <span class="string">'자동차'</span>, <span class="string">'포털'</span>]</span><br><span class="line">            }</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.DataFrame(company2)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스므트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-3-index를-특정column으로-지정하기"><a class="markdownIt-Anchor" href="#2-3-index를-특정column으로-지정하기"></a> 2-3. index를 특정column으로 지정하기</h3>
<p>“dfname.index = [ ]” 명령을 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1.index = df1[<span class="string">'기업명'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
    <tr>
      <th>기업명</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>삼성</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>현대</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>네이버</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-4-column-series"><a class="markdownIt-Anchor" href="#2-4-column-series"></a> 2-4. column = Series</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1[<span class="string">'매출액'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>기업명
삼성     2000
현대     1000
네이버     500
Name: 매출액, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(df1[<span class="string">'매출액'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>pandas.core.series.Series
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (7) 기타</title>
    <url>/2020/06/20/S-Python-Pandas-Pre7/</url>
    <content><![CDATA[<h1 id="기타"><a class="markdownIt-Anchor" href="#기타"></a> 기타</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85%EB%B3%84-column-%EC%84%A0%ED%83%9D-select_dtypes"><strong>1. 데이터 타입별 column 선택 (select_dtypes)</strong></a>
<ul>
<li><a href="#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%EC%9E%88%EB%8A%94-column%EB%A7%8C-%EC%84%A0%ED%83%9D-%EB%B0%B0%EC%A0%9C">문자열이 있는 column만 선택 / 배제</a></li>
</ul>
</li>
<li><a href="#2-one-hot-encoding-%EC%9B%90%ED%95%AB%EC%9D%B8%EC%BD%94%EB%94%A9"><strong>2. One-hot-encoding (원핫인코딩)</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"korean-idol.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="1-데이터-타입별-column-선택-select_dtypes"><a class="markdownIt-Anchor" href="#1-데이터-타입별-column-선택-select_dtypes"></a> <strong>1. 데이터 타입별 column 선택 (select_dtypes)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<h3 id="문자열이-있는-column만-선택-배제"><a class="markdownIt-Anchor" href="#문자열이-있는-column만-선택-배제"></a> 문자열이 있는 column만 선택 / 배제</h3>
<blockquote>
<ul>
<li><em>df_name</em> <strong>.select_dtypes (include = ‘object’)</strong></li>
<li><em>df_name</em> <strong>.select_dtypes (exclude = ‘object’)</strong></li>
</ul>
</blockquote>
<br>  
<p><strong>(1) 문자열 column만 선택</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.select_dtypes(include = <span class="string">'object'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>혈액형</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>A</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>A</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>A</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>A</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>A</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>O</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>B</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>O</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>A</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>A</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>B</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>O</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>O</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>(2) 문자열 column 배제 (문자열이 아닌 column만 선택)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.select_dtypes(exclude = <span class="string">'object'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>173.6</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>177.0</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>180.0</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>178.0</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>162.1</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>178.0</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>182.3</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>179.2</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>167.1</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>183.0</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>175.0</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>176.0</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>174.0</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>문자열이 포함된 DataFrame의 연산으로 발생되는 Error문제는 이 방법을 이용하여 해결할 수 있다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)
    148     try:
--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)
    150     except TypeError:


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)
    207     if use_numexpr:
--&gt; 208         return _evaluate(op, op_str, a, b)
    209     return _evaluate_standard(op, op_str, a, b)


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)
    120     if result is None:
--&gt; 121         result = _evaluate_standard(op, op_str, a, b)
    122 


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)
     69     with np.errstate(all="ignore"):
---&gt; 70         return op(a, b)
     71 


TypeError: can only concatenate str (not "int") to str
</code></pre>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.select_dtypes(exclude = <span class="string">'object'</span>) + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>183.6</td>
      <td>10523270</td>
    </tr>
    <tr>
      <th>1</th>
      <td>187.0</td>
      <td>9916957</td>
    </tr>
    <tr>
      <th>2</th>
      <td>190.0</td>
      <td>8273755</td>
    </tr>
    <tr>
      <th>3</th>
      <td>188.0</td>
      <td>8073511</td>
    </tr>
    <tr>
      <th>4</th>
      <td>172.1</td>
      <td>7650938</td>
    </tr>
    <tr>
      <th>5</th>
      <td>188.0</td>
      <td>5208345</td>
    </tr>
    <tr>
      <th>6</th>
      <td>192.3</td>
      <td>4989802</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>4668625</td>
    </tr>
    <tr>
      <th>8</th>
      <td>189.2</td>
      <td>4570318</td>
    </tr>
    <tr>
      <th>9</th>
      <td>177.1</td>
      <td>4036499</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>3918671</td>
    </tr>
    <tr>
      <th>11</th>
      <td>193.0</td>
      <td>3506037</td>
    </tr>
    <tr>
      <th>12</th>
      <td>185.0</td>
      <td>3301664</td>
    </tr>
    <tr>
      <th>13</th>
      <td>186.0</td>
      <td>3274147</td>
    </tr>
    <tr>
      <th>14</th>
      <td>184.0</td>
      <td>2925452</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>(3) “문자열 column” / “비문자열 column” 의 column명을 추출</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">obj_cols = df.select_dtypes(include = <span class="string">'object'</span>).columns</span><br><span class="line">obj_cols</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '혈액형'], dtype='object')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">num_cols = df.select_dtypes(exclude = <span class="string">'object'</span>).columns</span><br><span class="line">num_cols</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['키', '브랜드평판지수'], dtype='object')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[num_cols]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>173.6</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>177.0</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>180.0</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>178.0</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>162.1</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>178.0</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>182.3</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>179.2</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>167.1</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>183.0</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>175.0</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>176.0</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>174.0</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h2 id="2-one-hot-encoding-원핫인코딩"><a class="markdownIt-Anchor" href="#2-one-hot-encoding-원핫인코딩"></a> <strong>2. One-hot-encoding (원핫인코딩)</strong></h2>
<blockquote>
<p><strong>One-hot-encoding:</strong> Categorical data를 dummy data로 변환시키는 방법</p>
<ul>
<li>Dummy data로 변환 시 한개의 요소는 True (1) 로, 나머지 요소는 Flase (0) 로 변환시킨다</li>
</ul>
</blockquote>
<blockquote>
<p><strong>pd.get_dummies</strong> (<em>df_name</em> [ ‘<em>col_name</em>’ ], prefix = “…”)</p>
<ul>
<li>prefix: dummy data 로 분리된 새 column들의 column name에 접두사 붙이기</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'혈액형'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      A
1      A
2      A
3     AB
4      A
5      A
6      O
7      B
8      O
9      A
10     A
11     B
12    AB
13     O
14     O
Name: 혈액형, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">'혈액형'</span>])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">'혈액형'</span>], prefix = <span class="string">'혈액형'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>혈액형_A</th>
      <th>혈액형_AB</th>
      <th>혈액형_B</th>
      <th>혈액형_O</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<blockquote>
<p><strong>categorical data의 각 카테고리가 숫자형식으로 표현됐을 때 one-hot-encoding이 더 중요해지는 이유:</strong></p>
<ul>
<li>categorical data의 각 카테고리를 상징하는 숫자들은 <strong>그저 분류의 의미를 가질 뿐</strong>, 숫자의 크기 자체는 아무 의미도 없고, 숫자들의 연산도 역시 무의미하다.</li>
<li>하지만 이를 one-hot-encoding 작업 없이 머신러닝 알고리즘에 바로 넣으면 컴퓨터가 이 숫자들을 <strong>대소비교가 가능하고 연산이 가능하는 "숫자"로 인식</strong>하게 되므로 카테고리 간에 <strong>잘못된 관계</strong>를 맺을 수 있음.</li>
<li>따라서 이런 경우에는 one-hot-encoding 작업이 꼭 필요하다</li>
</ul>
</blockquote>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">blood_map = {</span><br><span class="line">    <span class="string">'A'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'B'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'AB'</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">'O'</span>: <span class="number">3</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>] = df[<span class="string">"혈액형"</span>].map(blood_map)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>혈액형_code</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    7
3    4
2    2
1    2
Name: 혈액형_code, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     0
1     0
2     0
3     2
4     0
5     0
6     3
7     1
8     3
9     0
10    0
11    1
12    2
13    3
14    3
Name: 혈액형_code, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[ <span class="string">"혈액형_code"</span> ])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">"혈액형_code"</span>], prefix = <span class="string">"혈액형"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>혈액형_0</th>
      <th>혈액형_1</th>
      <th>혈액형_2</th>
      <th>혈액형_3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (3) 기본정보 &amp; 통계정보 파악</title>
    <url>/2020/05/24/S-Python-Pandas3/</url>
    <content><![CDATA[<h1 id="기본정보-통계정보-파악"><a class="markdownIt-Anchor" href="#기본정보-통계정보-파악"></a> 기본정보 &amp; 통계정보 파악</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0-csv"><strong>1. 파일 읽어오기 (csv)</strong></a></li>
<li><a href="#2-%EA%B8%B0%EB%B3%B8-%ED%96%89%EC%97%B4-%EC%A0%95%EB%B3%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-column-index-info"><strong>2. 기본 행&amp;열 정보 알아보기  (column, index, info)</strong></a>
<ul>
<li><a href="#2-1-column-%EC%97%B4-%EC%9D%B4%EB%A6%84-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0">2-1. column (열) 이름 출력하기</a></li>
<li><a href="#2-2-column-%EC%97%B4-%EC%9D%B4%EB%A6%84-%EC%9E%AC%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0">2-2. column (열) 이름 재정의하기</a></li>
<li><a href="#2-3-index-%ED%96%89-%EC%A0%95%EB%B3%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0">2-3. index (행) 정보 출력하기</a></li>
<li><a href="#2-4-info-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-column-%EC%A0%95%EB%B3%B4%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85">2-4. info (기본적인 column 정보와 데이터 타입)</a></li>
</ul>
</li>
<li><a href="#3-%ED%98%95%ED%83%9C-shape-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>3. 형태 (shape) 알아보기</strong></a></li>
<li><a href="#4-%EC%83%81%EC%9C%84-5%EA%B0%9C-%ED%95%98%EC%9C%84-5%EA%B0%9C%EC%9D%98-%EC%A0%95%EB%B3%B4%EB%A7%8C-%EB%B3%B4%EA%B8%B0"><strong>4. 상위 5개, 하위 5개의 정보만 보기</strong></a></li>
<li><a href="#5-%ED%86%B5%EA%B3%84-%EC%A0%95%EB%B3%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>5. 통계 정보 알아보기</strong></a>
<ul>
<li><a href="#5-1-%EC%A0%84%EC%B2%B4-%ED%86%B5%EA%B3%84-%EC%A0%95%EB%B3%B4">5-1. 전체 통계 정보</a></li>
<li><a href="#5-2-%EC%B5%9C%EC%86%8C%EA%B0%92min-%EC%B5%9C%EB%8C%80%EA%B0%92max-%EC%A4%91%EC%95%99%EA%B0%92median-%EC%B5%9C%EB%B9%88%EA%B0%92mode">5-2. 최소값(min),  최대값(max), 중앙값(median), 최빈값(mode)</a></li>
<li><a href="#5-3-%ED%95%A9%EA%B3%84sum-%ED%8F%89%EA%B7%A0mean-%EB%B6%84%EC%82%B0var-%ED%91%9C%EC%A4%80%ED%8E%B8%EC%B0%A8std">5-3. 합계(sum), 평균(mean), 분산(var), 표준편차(std)</a></li>
<li><a href="#5-4-%EA%B0%AF%EC%88%98%EB%A5%BC-%EC%84%B8%EB%8A%94-count">5-4. 갯수를 세는 count</a></li>
</ul>
</li>
</ul>
<p></p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-파일-읽어오기-csv"><a class="markdownIt-Anchor" href="#1-파일-읽어오기-csv"></a> <strong>1. 파일 읽어오기 (csv)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
  <br>
<h2 id="2-기본-행열-정보-알아보기-column-index-info"><a class="markdownIt-Anchor" href="#2-기본-행열-정보-알아보기-column-index-info"></a> <strong>2. 기본 행&amp;열 정보 알아보기  (column, index, info)</strong></h2>
<h3 id="2-1-column-열-이름-출력하기"><a class="markdownIt-Anchor" href="#2-1-column-열-이름-출력하기"></a> 2-1. column (열) 이름 출력하기</h3>
<blockquote>
<p><em>df_name</em> <strong>.columns</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object')
</code></pre>
<p>​    <br></p>
<h3 id="2-2-column-열-이름-재정의하기"><a class="markdownIt-Anchor" href="#2-2-column-열-이름-재정의하기"></a> 2-2. column (열) 이름 재정의하기</h3>
<p><strong>(1) 전체 column 이름</strong></p>
<blockquote>
<p><em>df_name</em> <strong>.columns</strong> = […]</p>
</blockquote>
<p><strong>예:</strong> “이름” --&gt; “name”:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">new_col = [<span class="string">'name'</span>, <span class="string">'그룹'</span>, <span class="string">'소속사'</span>, <span class="string">'성별'</span>, <span class="string">'생년월일'</span>, <span class="string">'키'</span>, <span class="string">'혈액형'</span>, <span class="string">'브랜드평판지수'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns = new_col</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['name', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object')
</code></pre>
<p>​    <br></p>
<p><strong>(2) 개별 column 이름</strong></p>
<blockquote>
<p><em>df_name</em> <strong>.rename</strong> ( columns = { “<em>old_name</em>” : “<em>new_name</em>” } )</p>
</blockquote>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object') 
</code></pre>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.rename(columns = {<span class="string">"이름"</span> : <span class="string">"name"</span>})</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['name', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object')
</code></pre>
<p>​    <br></p>
<h3 id="2-3-index-행-정보-출력하기"><a class="markdownIt-Anchor" href="#2-3-index-행-정보-출력하기"></a> 2-3. index (행) 정보 출력하기</h3>
<blockquote>
<p><em>df_name</em> <strong>.index</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.index</span><br></pre></td></tr></tbody></table></figure>
<pre><code>RangeIndex(start=0, stop=15, step=1)
</code></pre>
   <br>
<h3 id="2-4-info-기본적인-column-정보와-데이터-타입"><a class="markdownIt-Anchor" href="#2-4-info-기본적인-column-정보와-데이터-타입"></a> 2-4. info (기본적인 column 정보와 데이터 타입)</h3>
<blockquote>
<p><em>df_name</em> <strong>.info()</strong></p>
</blockquote>
<blockquote>
<p><strong>Tip:</strong> info메소드는 주로 빠진 값 (null 값)과 데이터 타입을 볼 때 활용함</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   name     15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<p>“object” type은 주로 문자형 데이터를 가리킴.</p>
  <br>  
<h2 id="3-형태-shape-알아보기"><a class="markdownIt-Anchor" href="#3-형태-shape-알아보기"></a> <strong>3. 형태 (shape) 알아보기</strong></h2>
<blockquote>
<p>shape는 tuple형태로 반환되며, 첫번째는 row, 두번째는 column의 숫자를 의미함.</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(15, 8)
</code></pre>
  <br>
<h2 id="4-상위-5개-하위-5개의-정보만-보기"><a class="markdownIt-Anchor" href="#4-상위-5개-하위-5개의-정보만-보기"></a> <strong>4. 상위 5개, 하위 5개의 정보만 보기</strong></h2>
<blockquote>
<p>상위 5개 row:  <em>df_name</em> <strong>.head()</strong><br>
하위 5개 row:  <em>df_name</em> <strong>.tail()</strong><br>
상위 n개 row:  <em>df_name</em> <strong>.head(n)</strong><br>
하위 n개 row:  <em>df_name</em> <strong>.tail(n)</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.tail(<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>    
<br>
<h2 id="5-통계-정보-알아보기"><a class="markdownIt-Anchor" href="#5-통계-정보-알아보기"></a> <strong>5. 통계 정보 알아보기</strong></h2>
<blockquote>
<p>통계값은 산술 연산이 가능한 숫자형 (float / int) 인 column을 다룬다</p>
</blockquote>
<h3 id="5-1-전체-통계-정보"><a class="markdownIt-Anchor" href="#5-1-전체-통계-정보"></a> 5-1. 전체 통계 정보</h3>
<blockquote>
<p><em>df_name</em> <strong>.describe()</strong></p>
</blockquote>
<p>산술 연산이 가능한 column만 출력됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>13.000000</td>
      <td>1.500000e+01</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>175.792308</td>
      <td>5.655856e+06</td>
    </tr>
    <tr>
      <th>std</th>
      <td>5.820576</td>
      <td>2.539068e+06</td>
    </tr>
    <tr>
      <th>min</th>
      <td>162.100000</td>
      <td>2.925442e+06</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>174.000000</td>
      <td>3.712344e+06</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>177.000000</td>
      <td>4.668615e+06</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>179.200000</td>
      <td>7.862214e+06</td>
    </tr>
    <tr>
      <th>max</th>
      <td>183.000000</td>
      <td>1.052326e+07</td>
    </tr>
  </tbody>
</table>
</div>
   <br>
<h3 id="5-2-최소값min-최대값max-중앙값median-최빈값mode"><a class="markdownIt-Anchor" href="#5-2-최소값min-최대값max-중앙값median-최빈값mode"></a> 5-2. 최소값(min),  최대값(max), 중앙값(median), 최빈값(mode)</h3>
<blockquote>
<p>최소값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.min()</strong><br>
최대값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.max()</strong><br>
중앙값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.median()</strong><br>
최빈값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.mode()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].min()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>162.1
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].max()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>183.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].median()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>177.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].mode()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    178.0
dtype: float64
</code></pre>
 <br>
<h3 id="5-3-합계sum-평균mean-분산var-표준편차std"><a class="markdownIt-Anchor" href="#5-3-합계sum-평균mean-분산var-표준편차std"></a> 5-3. 합계(sum), 평균(mean), 분산(var), 표준편차(std)</h3>
<blockquote>
<p>합계(sum): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.sum()</strong><br>
평균(mean): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.mean()</strong><br>
분산(variance): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.var()</strong><br>
표준편차(standard deviation): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.std()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2285.3
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>175.7923076923077
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].var()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>33.879102564102595
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].std()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5.820575793175672
</code></pre>
<br>
<h3 id="5-4-갯수를-세는-count"><a class="markdownIt-Anchor" href="#5-4-갯수를-세는-count"></a> 5-4. 갯수를 세는 count</h3>
<blockquote>
<p><em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.count</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].count()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>13
</code></pre>
  <br>
  <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (7) 기타</title>
    <url>/2020/06/17/S-Python-Pandas7/</url>
    <content><![CDATA[<h1 id="기타"><a class="markdownIt-Anchor" href="#기타"></a> 기타</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94"><strong>1. 피벗테이블</strong></a></li>
<li><a href="#2-groupby-%EA%B7%B8%EB%A3%B9%EC%9C%BC%EB%A1%9C-%EB%AC%B6%EC%96%B4-%EB%B3%B4%EA%B8%B0"><strong>2. GroupBy (그룹으로 묶어 보기)</strong></a></li>
<li><a href="#3-multi-index-%EB%B3%B5%ED%95%A9-%EC%9D%B8%EB%8D%B1%EC%8A%A4"><strong>3. Multi-Index (복합 인덱스)</strong></a>
<ul>
<li><a href="#3-1-multi-index-%EC%A0%81%EC%9A%A9">3-1. Multi-Index 적용</a></li>
<li><a href="#3-2-multi-index-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A0%88%EC%9E%84%EC%9D%84-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A1%9C-%EB%B3%80%ED%99%98">3-2. Multi-Index 데이터 프레임을 피벗테이블로 변환</a></li>
<li><a href="#3-3-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%B4%88%EA%B8%B0%ED%99%94-reset_index">3-3. 인덱스 초기화 (reset_index)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-피벗테이블"><a class="markdownIt-Anchor" href="#1-피벗테이블"></a> <strong>1. 피벗테이블</strong></h2>
<ul>
<li>데이터 열 중에서 <strong>두 개의 열을 각각 행 인덱스, 열 인덱스로 사용</strong>하여 데이터를 조회하여 펼쳐놓은 건을 의미함</li>
<li>왼쪽에 나타나는 인덱스를 <strong>행 인덱스, 상단에 나타나는 인덱스를 열 인덱스</strong>라고 부른다</li>
</ul>
<blockquote>
<p>pd.pivot_table(<em>df_name</em>, index = “<em>col_name_분류기준1</em>”, columns = “<em>col_name_분류기준2</em>”, values = “<em>col_name_조회대상</em>”, aggfunc = …)</p>
<ul>
<li>index는 행 인덱스</li>
<li>columns는 열 인덱스</li>
<li>values는 조회하고 싶은 값</li>
<li>aggfunc는 value를 산출하는 연산법<br>
(1) e.g.: aggfunc = np.sum / np.mean<br>
(2) 설정하지 않은 경우 기본적으로 평균값을 구한다</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"소속사"</span>, columns = <span class="string">"혈액형"</span>, values = <span class="string">"키"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>혈액형</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
    <tr>
      <th>소속사</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>RBW</th>
      <td>162.1</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YG</th>
      <td>177.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>빅히트</th>
      <td>175.8</td>
      <td>178.0</td>
      <td>NaN</td>
      <td>176.60</td>
    </tr>
    <tr>
      <th>스타크루이엔티</th>
      <td>167.1</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>커넥트</th>
      <td>180.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>판타지오</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>183.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>플레디스</th>
      <td>NaN</td>
      <td>175.0</td>
      <td>NaN</td>
      <td>179.15</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"그룹"</span>, columns = <span class="string">"혈액형"</span>, values  = <span class="string">"브랜드평판지수"</span>, aggfunc = np.sum)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>혈액형</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
    <tr>
      <th>그룹</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>뉴이스트</th>
      <td>NaN</td>
      <td>3301654.0</td>
      <td>NaN</td>
      <td>8263929.0</td>
    </tr>
    <tr>
      <th>마마무</th>
      <td>7650928.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>방탄소년단</th>
      <td>15731595.0</td>
      <td>8073501.0</td>
      <td>NaN</td>
      <td>7495750.0</td>
    </tr>
    <tr>
      <th>빅뱅</th>
      <td>9916947.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>소녀시대</th>
      <td>3918661.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>아스트로</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>3506027.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>아이들</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>4668615.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>핫샷</th>
      <td>4036489.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<p><br><br></p>
<h2 id="2-groupby-그룹으로-묶어-보기"><a class="markdownIt-Anchor" href="#2-groupby-그룹으로-묶어-보기"></a> <strong>2. GroupBy (그룹으로 묶어 보기)</strong></h2>
<ul>
<li>groupby는 데이터를 <strong>그룹으로 묶어 분석</strong>할 때 활용한다</li>
<li><strong>소속사</strong>별 키의 평균, <strong>성별</strong> 키의 평균 등 특정, 그룹별 통계 및 데이터의 성질을 확인하고자 할 때 활용한다</li>
</ul>
<blockquote>
<p>groupby와 함께</p>
<ul>
<li>count() - 갯수</li>
<li>sum() - 합계</li>
<li>mean() - 평균</li>
<li>var() - 분산</li>
<li>std() -표준편차</li>
<li>min() / max() - 최소값, 최대값</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"소속사"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000024E760EC288&gt;
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'소속사'</span>).count()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>소속사</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>RBW</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>SM</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>YG</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>빅히트</th>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <th>스타크루이엔티</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>커넥트</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>큐브</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>판타지오</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>플레디스</th>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br> 
<p>산술 통계는 자동으로 산술통계가 가능한 열만 출력됨.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'그룹'</span>).mean()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>그룹</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>뉴이스트</th>
      <td>177.766667</td>
      <td>3.855194e+06</td>
    </tr>
    <tr>
      <th>마마무</th>
      <td>162.100000</td>
      <td>7.650928e+06</td>
    </tr>
    <tr>
      <th>방탄소년단</th>
      <td>176.560000</td>
      <td>6.260169e+06</td>
    </tr>
    <tr>
      <th>빅뱅</th>
      <td>177.000000</td>
      <td>9.916947e+06</td>
    </tr>
    <tr>
      <th>소녀시대</th>
      <td>NaN</td>
      <td>3.918661e+06</td>
    </tr>
    <tr>
      <th>아스트로</th>
      <td>183.000000</td>
      <td>3.506027e+06</td>
    </tr>
    <tr>
      <th>아이들</th>
      <td>NaN</td>
      <td>4.668615e+06</td>
    </tr>
    <tr>
      <th>핫샷</th>
      <td>167.100000</td>
      <td>4.036489e+06</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'성별'</span>).sum()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>남자</th>
      <td>2123.2</td>
      <td>68599637</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.1</td>
      <td>16238204</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>특정 열만 출력하고 싶다면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'혈액형'</span>)[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>혈액형
A     172.966667
AB    176.500000
B     183.000000
O     177.875000
Name: 키, dtype: float64
</code></pre>
<br>
<br> 
<h2 id="3-multi-index-복합-인덱스"><a class="markdownIt-Anchor" href="#3-multi-index-복합-인덱스"></a> <strong>3. Multi-Index (복합 인덱스)</strong></h2>
<h3 id="3-1-multi-index-적용"><a class="markdownIt-Anchor" href="#3-1-multi-index-적용"></a> 3-1. Multi-Index 적용</h3>
<p>행 인덱스를 복합적으로 구성하고 싶은 경우는 인덱스를 리스트로 만들어 준다</p>
<blockquote>
<p><em>df_name</em> <strong>.groupby([‘<em>col_name_1</em>’,‘<em>col_name_2</em>’])</strong> .<em>mean()</em></p>
<ul>
<li>데이터를 먼저 col_1기준으로 분류한 다음, col_2기준으로 한번 더 분류한다. 2번 분류 후의 데이터에 대해 산술통계값을 구한다</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby([<span class="string">'혈액형'</span>, <span class="string">'성별'</span>]).mean()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">A</th>
      <th>남자</th>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>AB</th>
      <th>남자</th>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">B</th>
      <th>남자</th>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>O</th>
      <th>남자</th>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-2-multi-index-데이터-프레임을-피벗테이블로-변환"><a class="markdownIt-Anchor" href="#3-2-multi-index-데이터-프레임을-피벗테이블로-변환"></a> 3-2. Multi-Index 데이터 프레임을 피벗테이블로 변환</h3>
<p>Multi-Index로 된 데이터프레임을 피벗테이블 형태로 다시 변환해줄 수 있다</p>
<blockquote>
<p><em>df_name</em> <strong>.unstack( <em>‘col_열’</em> )</strong></p>
<ul>
<li>col_열: groupby에서 선택한 두 column중 pivot table의 열인덱스로 지정해주고 싶은 column명을 입력</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.groupby([<span class="string">'혈액형'</span>, <span class="string">'성별'</span>]).mean()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">A</th>
      <th>남자</th>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>AB</th>
      <th>남자</th>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">B</th>
      <th>남자</th>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>O</th>
      <th>남자</th>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.unstack(<span class="string">'혈액형'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr>
      <th></th>
      <th colspan="4" halign="left">키</th>
      <th colspan="4" halign="left">브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
    <tr>
      <th>성별</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>남자</th>
      <td>175.14</td>
      <td>176.5</td>
      <td>183.0</td>
      <td>177.875</td>
      <td>7591755.2</td>
      <td>5687577.5</td>
      <td>3506027.0</td>
      <td>3939919.75</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.10</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>5784794.5</td>
      <td>NaN</td>
      <td>4668615.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.unstack(<span class="string">'성별'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr>
      <th></th>
      <th colspan="2" halign="left">키</th>
      <th colspan="2" halign="left">브랜드평판지수</th>
    </tr>
    <tr>
      <th>성별</th>
      <th>남자</th>
      <th>여자</th>
      <th>남자</th>
      <th>여자</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>175.140</td>
      <td>162.1</td>
      <td>7591755.20</td>
      <td>5784794.5</td>
    </tr>
    <tr>
      <th>AB</th>
      <td>176.500</td>
      <td>NaN</td>
      <td>5687577.50</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>B</th>
      <td>183.000</td>
      <td>NaN</td>
      <td>3506027.00</td>
      <td>4668615.0</td>
    </tr>
    <tr>
      <th>O</th>
      <td>177.875</td>
      <td>NaN</td>
      <td>3939919.75</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-3-인덱스-초기화-reset_index"><a class="markdownIt-Anchor" href="#3-3-인덱스-초기화-reset_index"></a> 3-3. 인덱스 초기화 (reset_index)</h3>
<p>reset_index() 는 Multi-Index로 구성된 데이터 프레임의 <strong>인덱스를 초기화</strong>해 준다</p>
<p>그 의미는 Multi-Index로 구성된 데이터 프레임 중의 index들을 dataframe의 column으로 변환시키는 것</p>
<blockquote>
<p><em>df_name</em> = <em>df_name</em> <strong>.reset_index()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">A</th>
      <th>남자</th>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>AB</th>
      <th>남자</th>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">B</th>
      <th>남자</th>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>O</th>
      <th>남자</th>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df2.reset_index()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>혈액형</th>
      <th>성별</th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>남자</td>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>1</th>
      <td>A</td>
      <td>여자</td>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>2</th>
      <td>AB</td>
      <td>남자</td>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>B</td>
      <td>남자</td>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>4</th>
      <td>B</td>
      <td>여자</td>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>5</th>
      <td>O</td>
      <td>남자</td>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (2) 파일 불러오기 및 복사</title>
    <url>/2020/05/24/S-Python-Pandas2/</url>
    <content><![CDATA[<h1 id="파일-불러오기-및-복사"><a class="markdownIt-Anchor" href="#파일-불러오기-및-복사"></a> 파일 불러오기 및 복사</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-csv%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0-pdread_csv"><strong>1. csv파일 읽어오기 – "pd.read_csv"</strong></a>
<ul>
<li><a href="#1-1-jupyter-notebook-%EA%B8%B0%EB%B0%98">1-1. Jupyter Notebook 기반</a></li>
<li><a href="#1-2-colab-%EA%B8%B0%EB%B0%98">1-2. Colab 기반</a></li>
</ul>
</li>
<li><a href="#2-excle%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0-pdread_excel"><strong>2. Excle파일 읽어오기 – "pd.read_excel"</strong></a>
<ul>
<li><a href="#2-1-jupyter-notebook-%EA%B8%B0%EB%B0%98">2-1. Jupyter Notebook 기반</a></li>
<li><a href="#2-2-colab-%EA%B8%B0%EB%B0%98">2-2. Colab 기반</a></li>
</ul>
</li>
<li><a href="#3-%EB%B3%B5%EC%82%AC-copy"><strong>3. 복사 (copy)</strong></a></li>
</ul>
<p></p>
  <br>
<h2 id="1-csv파일-읽어오기-pdread_csv"><a class="markdownIt-Anchor" href="#1-csv파일-읽어오기-pdread_csv"></a> <strong>1. csv파일 읽어오기 – "pd.read_csv"</strong></h2>
<h3 id="1-1-jupyter-notebook-기반"><a class="markdownIt-Anchor" href="#1-1-jupyter-notebook-기반"></a> 1-1. Jupyter Notebook 기반</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="1-2-colab-기반"><a class="markdownIt-Anchor" href="#1-2-colab-기반"></a> 1-2. Colab 기반</h3>
<p><strong>방법 1. 로컬에서 파일 읽어오기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> files</span><br><span class="line">myfile = files.upload()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">pd.read_csv(io.BytesIO(myfile[<span class="string">'korean-idol.csv'</span>]))</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>방법 2: 구글 드라이브에 있는 샘플 파일 읽어오기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive</span><br><span class="line">drive.mount(<span class="string">'/content/drive'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 나타나는 link에 따라 google drive 로그인하여 link복사, </span></span><br><span class="line"><span class="comment"># 'Enter your authorization code:'에서 복사된 link를 입력</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">'colab 왼쪽 목록에서 파일 경로를 복사하여 붙혀놓기'</span></span><br><span class="line"></span><br><span class="line">pd.read_csv(filename)</span><br></pre></td></tr></tbody></table></figure>
<p><br> <br></p>
<h2 id="2-excle파일-읽어오기-pdread_excel"><a class="markdownIt-Anchor" href="#2-excle파일-읽어오기-pdread_excel"></a> <strong>2. Excle파일 읽어오기 – "pd.read_excel"</strong></h2>
<h3 id="2-1-jupyter-notebook-기반"><a class="markdownIt-Anchor" href="#2-1-jupyter-notebook-기반"></a> 2-1. Jupyter Notebook 기반</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.read_excel(<span class="string">'korean-idol.xlsx'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="2-2-colab-기반"><a class="markdownIt-Anchor" href="#2-2-colab-기반"></a> 2-2. Colab 기반</h3>
<p><strong>구글 드라이브에 있는 샘플 파일 읽어오기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive</span><br><span class="line">drive.mount(<span class="string">'/content/drive'</span>)</span><br><span class="line"></span><br><span class="line">filename = <span class="string">'파일 경로 붙혀놓기'</span></span><br><span class="line"></span><br><span class="line">pd.read_excel(filename)</span><br></pre></td></tr></tbody></table></figure>
<br>
<br>
<h2 id="3-복사-copy"><a class="markdownIt-Anchor" href="#3-복사-copy"></a> <strong>3. 복사 (copy)</strong></h2>
<blockquote>
<p>dataframe을 복사할 때 "<em>df_name</em>.copy()"를 사용한다</p>
</blockquote>
  <br>
<ul>
<li><strong>"="를 사용</strong>하여 원본데이터를 "복사"하면 복사된 데이터를 수정할 때 <strong>원본 데이터도 같이 변화한다</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new = df</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new[<span class="string">'이름'</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<p>이렇게 되는 이유는 두 dataframe이 같은 메모리 주소를 참조하기 때문이다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df_new))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109f6e6c8'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109f6e6c8'
</code></pre>
  <br>
<ul>
<li>원본 데이터를 유지 시키고, 새로운 변수에 복사할 때 <strong>copy()</strong> 를 사용한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<p>복사된 dataframe이 원본 데이터와 같은 메모리 주소를 참조한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109fefa48'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df_copy))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109ff4408'
</code></pre>
 <br>
<p>copy본을 수정할 때 원본 데이터가 유지된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy[<span class="string">'이름'</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
  <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (6) 결측값 확인 및 추출</title>
    <url>/2020/06/12/S-Python-Pandas6/</url>
    <content><![CDATA[<h1 id="결측값-확인-및-추출"><a class="markdownIt-Anchor" href="#결측값-확인-및-추출"></a> 결측값 확인 및 추출</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC"><strong>1. 결측값에 대하여</strong></a></li>
<li><a href="#2-column%EB%B3%84-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EA%B0%9C%EC%88%98-%ED%99%95%EC%9D%B8-info"><strong>2. column별 (비)결측값 개수 확인 – info()</strong></a></li>
<li><a href="#3-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EC%9C%84%EC%B9%98-%ED%99%95%EC%9D%B8"><strong>3. (비)결측값 위치 확인</strong></a>
<ul>
<li><a href="#3-1-%EC%A0%84%EC%B2%B4-data">3-1. 전체 Data</a></li>
<li><a href="#3-2-%ED%8A%B9%EC%A0%95-column">3-2. 특정 column</a></li>
</ul>
</li>
<li><a href="#4-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EC%B6%94%EC%B6%9C"><strong>4. (비)결측값 추출</strong></a>
<ul>
<li><a href="#4-1-%ED%95%B4%EB%8B%B9-column%EB%A7%8C-%EC%B6%94%EC%B6%9C">4-1. 해당 column만 추출</a></li>
<li><a href="#4-2-%EC%A0%84%EC%B2%B4-column-%EC%B6%94%EC%B6%9C">4-2. 전체 column 추출</a></li>
<li><a href="#4-3-%EC%A7%80%EC%A0%95%ED%95%9C-column-%EC%B6%94%EC%B6%9C">4-3. 지정한 column 추출</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<h2 id="1-결측값에-대하여"><a class="markdownIt-Anchor" href="#1-결측값에-대하여"></a> <strong>1. 결측값에 대하여</strong></h2>
<ul>
<li>
<p>Null 값은 <strong>비어있는 값, 고급 언어로 결측값</strong>이다</p>
</li>
<li>
<p>pandas 에서는 NaN =&gt; Not a Number 로 표기 된다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="2-column별-비결측값-개수-확인-info"><a class="markdownIt-Anchor" href="#2-column별-비결측값-개수-확인-info"></a> <strong>2. column별 (비)결측값 개수 확인 – info()</strong></h2>
<p>info() 로 각 column별의 결측값(NaN) 개수를 쉽게 확인할 수 있다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<br>
<h2 id="3-비결측값-위치-확인"><a class="markdownIt-Anchor" href="#3-비결측값-위치-확인"></a> <strong>3. (비)결측값 위치 확인</strong></h2>
<ul>
<li>
<p>.isna()</p>
</li>
<li>
<p>.isnull()</p>
</li>
<li>
<p>.notna()</p>
</li>
<li>
<p>.notnull()</p>
<br>
</li>
</ul>
<h3 id="3-1-전체-data"><a class="markdownIt-Anchor" href="#3-1-전체-data"></a> 3-1. 전체 Data</h3>
<blockquote>
<p><em>df_name</em> .명령어</p>
</blockquote>
<br>
<p><strong>(1) 결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.isna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.isnull()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>False</td>
      <td>True</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>5</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>6</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>7</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>8</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>9</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>10</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>11</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>12</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>13</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>14</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>(2) 비결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.notna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.notnull()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>1</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>2</th>
      <td>True</td>
      <td>False</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>4</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>5</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>6</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>7</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>False</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>8</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>9</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>10</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>False</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>11</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>12</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>13</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>14</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h3 id="3-2-특정-column"><a class="markdownIt-Anchor" href="#3-2-특정-column"></a> 3-2. 특정 column</h3>
<blockquote>
<p><em>df_name</em> [ ‘<em>col_name</em>’ ] .명령어</p>
</blockquote>
<br>
<p><strong>(1) 결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].isna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].isnull()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     False
1     False
2      True
3     False
4     False
5     False
6     False
7     False
8     False
9     False
10    False
11    False
12    False
13    False
14    False
Name: 그룹, dtype: bool
</code></pre>
<br>
<p><strong>(2) 비결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].notna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].notnull()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      True
1      True
2     False
3      True
4      True
5      True
6      True
7      True
8      True
9      True
10     True
11     True
12     True
13     True
14     True
Name: 그룹, dtype: bool
</code></pre>
 <br>
<br>  
<h2 id="4-비결측값-추출"><a class="markdownIt-Anchor" href="#4-비결측값-추출"></a> <strong>4. (비)결측값 추출</strong></h2>
<h3 id="4-1-해당-column만-추출"><a class="markdownIt-Anchor" href="#4-1-해당-column만-추출"></a> 4-1. 해당 column만 추출</h3>
<blockquote>
<p>결측값: <em>df_name</em> [ ‘<em>col_name</em>’]  [ <em>df_name</em> [ ‘<em>col_name</em>’ ] .isna() / isnull() ]<br>
비결측값: <em>df_name</em> [ ‘<em>col_name</em>’ ]  [<em>df_name</em> [ ‘<em>col_name</em>’ ] .notna() / notnull()]</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>][df[<span class="string">'그룹'</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    NaN
Name: 그룹, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>][df[<span class="string">'그룹'</span>].notnull()]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     방탄소년단
1        빅뱅
3     방탄소년단
4       마마무
5     방탄소년단
6      뉴이스트
7       아이들
8     방탄소년단
9        핫샷
10     소녀시대
11     아스트로
12     뉴이스트
13     뉴이스트
14    방탄소년단
Name: 그룹, dtype: object
</code></pre>
  <br>
<br>
<h3 id="4-2-전체-column-추출"><a class="markdownIt-Anchor" href="#4-2-전체-column-추출"></a> 4-2. 전체 column 추출</h3>
<blockquote>
<p>결측값: <em>df_name</em> .loc [<em>df_name</em> [ ‘<em>col_name</em>’ ] .isna() / isnull() ]</p>
<p>비결측값: <em>df_name</em> .loc [<em>df_name</em> ['<em>col_name</em>] .notna() / notnull() ]</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].notnull()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h3 id="4-3-지정한-column-추출"><a class="markdownIt-Anchor" href="#4-3-지정한-column-추출"></a> 4-3. 지정한 column 추출</h3>
<blockquote>
<p>결측값: <em>df_name</em> .loc [<em>df_name</em> [ ‘<em>na_col_name</em>’ ] .isna() / isnull() , [‘<em>col_name1</em>’, ‘<em>col_name2</em>’, …]]</p>
<p>비결측값: <em>df_name</em> .loc [<em>df_name</em> ['<em>na_col_name</em>] .notna() / notnull() , [‘<em>col_name1</em>’, ‘<em>col_name2</em>’, …]]</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].isna(), [<span class="string">'이름'</span>, <span class="string">'소속사'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].notnull(), [<span class="string">'이름'</span>, <span class="string">'소속사'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
    </tr>
  </tbody>
</table>
</div>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (5) 범위선택</title>
    <url>/2020/05/24/S-Python-Pandas5/</url>
    <content><![CDATA[<h1 id="범위선택"><a class="markdownIt-Anchor" href="#범위선택"></a> 범위선택</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%8B%A8%EC%9D%BC-column%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95"><strong>1. 단일 column을 선택하는 방법</strong></a></li>
<li><a href="#2-index-column-%EB%B2%94%EC%9C%84-%EC%84%A0%ED%83%9D-range-selection"><strong>2. index &amp; column 범위 선택 (range selection)</strong></a>
<ul>
<li><a href="#2-1-%EB%8B%A8%EC%88%9C-index%EC%97%90-%EB%8C%80%ED%95%9C-%EB%B2%94%EC%9C%84-%EC%84%A0%ED%83%9D">2-1. 단순 index에 대한 범위 선택</a></li>
<li><a href="#2-2-index-column-%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-loc">2-2. index &amp; column 범위선택 – loc</a></li>
<li><a href="#2-3-index-column-%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-iloc-position%EC%9C%BC%EB%A1%9C-%EC%83%89%EC%9D%B8">2-3. index &amp; column 범위선택 – iloc (position으로 색인)</a></li>
</ul>
</li>
<li><a href="#3-index-column-%EC%A1%B0%EA%B1%B4%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-boolean-indexing"><strong>3. index &amp; column 조건범위선택 – Boolean Indexing</strong></a>
<ul>
<li><a href="#3-1-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%8C%EC%A1%B1%ED%95%9C-row%EB%93%A4%EC%9D%98-%EB%AA%A8%EB%93%A0-column%EC%9D%84-%EC%B6%94%EC%B6%9C">3-1. 조건에 만족한 row들의 모든 column을 추출</a></li>
<li><a href="#3-2-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%8C%EC%A1%B1%ED%95%9C-row%EB%93%A4%EC%9D%98-%ED%8A%B9%EC%A0%95-column%EB%93%A4%EC%9D%84-%EC%B6%94%EC%B6%9C">3-2. 조건에 만족한 row들의 특정 column들을 추출</a></li>
</ul>
</li>
<li><a href="#4-index-column-%EC%A1%B0%EA%B1%B4%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-inis%EC%9D%84-%ED%99%9C%EC%9A%A9%EB%9E%80-%EC%83%89%EC%9D%B8"><strong>4. index &amp; column 조건범위선택 – inis을 활용란 색인</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h2 id="1-단일-column을-선택하는-방법"><a class="markdownIt-Anchor" href="#1-단일-column을-선택하는-방법"></a> <strong>1. 단일 column을 선택하는 방법</strong></h2>
<blockquote>
<ul>
<li><em>df_name</em> [ '<em>col_name</em> ’ ]</li>
<li><em>df_name</em> [ "<em>col_name</em> " ]</li>
<li><em>df_name</em> .<em>col_name</em></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"이름"</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.이름</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       지민
1     지드래곤
2     강다니엘
3        뷔
4       화사
5       정국
6       민현
7       소연
8        진
9      하성운
10      태연
11     차은우
12      백호
13      JR
14      슈가
Name: 이름, dtype: object
</code></pre>
<p><br><br></p>
<h2 id="2-index-column-범위-선택-range-selection"><a class="markdownIt-Anchor" href="#2-index-column-범위-선택-range-selection"></a> <strong>2. index &amp; column 범위 선택 (range selection)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<h3 id="2-1-단순-index에-대한-범위-선택"><a class="markdownIt-Anchor" href="#2-1-단순-index에-대한-범위-선택"></a> 2-1. 단순 index에 대한 범위 선택</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[:<span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="2-2-index-column-범위선택-loc"><a class="markdownIt-Anchor" href="#2-2-index-column-범위선택-loc"></a> 2-2. index &amp; column 범위선택 – loc</h3>
<blockquote>
<p><em>df_name</em> <strong>.loc</strong> [행(index) 범위, (열)column 범위]</p>
</blockquote>
<ul>
<li>
<p><strong>행 범위는</strong><br>
“:”<br>
“:b”<br>
“a:b”<br>
등 형식을 사용</p>
</li>
<li>
<p><strong>열 범위는</strong><br>
'<em>column name</em> ’<br>
['<em>column name1</em> ', '<em>column name2</em> ']<br>
'<em>column name1</em> ’ : '<em>column name2</em> ’<br>
등 형식을 사용</p>
</li>
</ul>
<blockquote>
<p><font color="red"> <strong>주의:</strong>  </font></p>
<ul>
<li><font color="red">pandas의 loc</font>에서 범위 a : b는 <font color="blue"><strong>index a &amp; index b 모두 포함</strong></font></li>
<li><font color="red">numpy</font>에서는 <font color="blue"><strong>index a 포함, index b 미포함</strong></font></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[:, <span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       지민
1     지드래곤
2     강다니엘
3        뷔
4       화사
5       정국
6       민현
7       소연
8        진
9      하성운
10      태연
11     차은우
12      백호
13      JR
14      슈가
Name: 이름, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[:, [<span class="string">'이름'</span>, <span class="string">'생년월일'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>생년월일</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>1995-10-13</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>1988-08-18</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>1996-12-10</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>1995-12-30</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>1995-07-23</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>1997-09-01</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>1995-08-09</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>1998-08-26</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>1992-12-04</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>1994-03-22</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>1989-03-09</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>1997-03-30</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>1995-07-21</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>1995-06-08</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>1993-03-09</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[<span class="number">3</span>:<span class="number">8</span>, [<span class="string">'이름'</span>, <span class="string">'생년월일'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>생년월일</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>1995-12-30</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>1995-07-23</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>1997-09-01</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>1995-08-09</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>1998-08-26</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>1992-12-04</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[<span class="number">2</span>:<span class="number">5</span>, <span class="string">'이름'</span>:<span class="string">'생년월일'</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<h3 id="2-3-index-column-범위선택-iloc-position으로-색인"><a class="markdownIt-Anchor" href="#2-3-index-column-범위선택-iloc-position으로-색인"></a> 2-3. index &amp; column 범위선택 – iloc (position으로 색인)</h3>
<blockquote>
<p>행(index) 범위 선택은 loc와 동일</p>
<p>열(column) 범위는 'column 명’대신 column position을 사용</p>
</blockquote>
<ul>
<li>
<p><strong>행 범위는</strong><br>
“:”<br>
“:b”<br>
“a:b”<br>
등 형식을 사용</p>
</li>
<li>
<p><strong>열 범위는</strong><br>
“c”<br>
“[c, d]”<br>
“c:d”<br>
등 형식을 사용</p>
</li>
</ul>
<blockquote>
<p><font color="red"> <strong>주의:</strong>  </font></p>
<ul>
<li>pandas의 <font color="red">iloc</font>에서 범위 a : b는 <font color="blue"><strong>index a 포함, index b 미포함</strong></font> (<font color="red">numpy</font>와 동일)</li>
<li>pandas의 <font color="red">loc</font>에서 범위 a : b는 <font color="blue"><strong>index a &amp; index b 모두 포함</strong></font></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[:, [<span class="number">0</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>:<span class="number">5</span>, [<span class="number">0</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>:<span class="number">5</span>, <span class="number">0</span>:<span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="3-index-column-조건범위선택-boolean-indexing"><a class="markdownIt-Anchor" href="#3-index-column-조건범위선택-boolean-indexing"></a> <strong>3. index &amp; column 조건범위선택 – Boolean Indexing</strong></h2>
<p>Boolean indexing은 Numpy에서의 Boolean indexing과 같은 원리다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-1-조건에-만족한-row들의-모든-column을-추출"><a class="markdownIt-Anchor" href="#3-1-조건에-만족한-row들의-모든-column을-추출"></a> 3-1. 조건에 만족한 row들의 모든 column을 추출</h3>
<blockquote>
<p>df [<em>조건</em> ]</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>] &gt; <span class="number">180</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     False
1     False
2     False
3     False
4     False
5     False
6      True
7     False
8     False
9     False
10    False
11     True
12    False
13    False
14    False
Name: 키, dtype: bool
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[df[<span class="string">'키'</span>] &gt; <span class="number">180</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="3-2-조건에-만족한-row들의-특정-column들을-추출"><a class="markdownIt-Anchor" href="#3-2-조건에-만족한-row들의-특정-column들을-추출"></a> 3-2. 조건에 만족한 row들의 특정 column들을 추출</h3>
<blockquote>
<p><strong>방법 1.</strong> <em>df_name</em> [<em>조건</em> ] [<em>column범위</em> ]</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span> ] [<span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6      민현
11    차은우
Name: 이름, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df [ df[<span class="string">'키'</span>] &gt; <span class="number">180</span> ] [[<span class="string">'이름'</span>, <span class="string">'키'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>키</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>182.3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>183.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<blockquote>
<p><strong>방법 2.</strong> loc를 활용: <em>df_name</em>.loc[ <em>조건</em> , <em>column범위</em>  ]       <font color="blue"> <em>【추천】</em> </font></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, <span class="string">'이름'</span> ]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6      민현
11    차은우
Name: 이름, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, [<span class="string">'이름'</span>, <span class="string">'그룹'</span>] ]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, <span class="string">'이름'</span> : <span class="string">'성별'</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h2 id="4-index-column-조건범위선택-inis을-활용란-색인"><a class="markdownIt-Anchor" href="#4-index-column-조건범위선택-inis을-활용란-색인"></a> <strong>4. index &amp; column 조건범위선택 – inis을 활용란 색인</strong></h2>
<p>column값이 미리 정의한 list에 속한다는 조건을 걸고자 할 때 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_condition = [<span class="string">'플레디스'</span>, <span class="string">'SM'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'소속사'</span>].isin(my_condition)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     False
1     False
2     False
3     False
4     False
5     False
6      True
7     False
8     False
9     False
10     True
11    False
12     True
13     True
14    False
Name: 소속사, dtype: bool
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'소속사'</span>].isin(my_condition) ]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'소속사'</span>].isin(my_condition) , [<span class="string">'이름'</span>, <span class="string">'소속사'</span>] ]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Seaborn - (1) Seaborn을 활용한 다양한 그래프 그리기</title>
    <url>/2020/07/03/S-Python-Seaborn1/</url>
    <content><![CDATA[<h1 id="seaborn을-활용한-다양한-그래프-그리기"><a class="markdownIt-Anchor" href="#seaborn을-활용한-다양한-그래프-그리기"></a> Seaborn을 활용한 다양한 그래프 그리기</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-seaborn-%EA%B0%9C%EC%9A%94"><strong>0. Seaborn 개요</strong></a>
<ul>
<li><a href="#0-1-seaborn-%EC%97%90%EC%84%9C%EB%A7%8C-%EC%A0%9C%EA%B3%B5%EB%90%98%EB%8A%94-%ED%86%B5%EA%B3%84-%EA%B8%B0%EB%B0%98-plot">0-1. seaborn 에서만 제공되는 통계 기반 plot</a></li>
<li><a href="#0-2-%EC%95%84%EB%A6%84%EB%8B%A4%EC%9A%B4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">0-2. 아름다운 스타일링</a></li>
<li><a href="#0-3-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8">0-3. 컬러 팔레트</a></li>
<li><a href="#0-4-pandas-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84%EA%B3%BC-%EB%86%92%EC%9D%80-%ED%98%B8%ED%99%98%EC%84%B1">0-4. pandas 데이터프레임과 높은 호환성</a></li>
</ul>
</li>
<li><a href="#1-scatterplot"><strong>1. Scatterplot</strong></a>
<ul>
<li><a href="#1-1-x-y-color-area-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">1-1. x, y, color, area 설정하기</a></li>
<li><a href="#1-2-cmap%EA%B3%BC-alpha">1-2. cmap과 alpha</a></li>
</ul>
</li>
<li><a href="#2-barplot-barhplot"><strong>2. Barplot, Barhplot</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-barplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-1. 기본 Barplot 그리기</a></li>
<li><a href="#2-2-%EA%B8%B0%EB%B3%B8-barhplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-2. 기본 Barhplot 그리기</a></li>
<li><a href="#2-3-barplot%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-3. Barplot에서 비교 그래프 그리기</a></li>
</ul>
</li>
<li><a href="#3-line-plot"><strong>3. Line Plot</strong></a>
<ul>
<li><a href="#3-1-%EA%B8%B0%EB%B3%B8-lineplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-1. 기본 lineplot 그리기</a></li>
<li><a href="#3-2-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. 2개 이상의 그래프 그리기</a></li>
<li><a href="#3-3-%EB%A7%88%EC%BB%A4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-3. 마커 스타일링</a></li>
<li><a href="#3-4-%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0">3-4. 라인 스타일 변경하기</a></li>
</ul>
</li>
<li><a href="#4-areaplot-filled-area"><strong>4. Areaplot (Filled Area)</strong></a></li>
<li><a href="#5histogram"><strong>5.Histogram</strong></a>
<ul>
<li><a href="#5-1-%EA%B8%B0%EB%B3%B8-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 Histogram 그리기</a></li>
<li><a href="#5-2-%EB%8B%A4%EC%A4%91-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-2. 다중 Histogram 그리기</a></li>
</ul>
</li>
<li><a href="#6-pie-chart"><strong>6. Pie Chart</strong></a></li>
<li><a href="#7-box-plot"><strong>7. Box Plot</strong></a>
<ul>
<li><a href="#7-1-%EA%B8%B0%EB%B3%B8-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-1. 기본 박스플롯 생성</a></li>
<li><a href="#7-2-%EB%8B%A4%EC%A4%91-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-2. 다중 박스플롯 생성</a></li>
<li><a href="#7-3-box-plot-%EC%B6%95-%EB%B0%94%EA%BE%B8%EA%B8%B0">7-3. Box Plot 축 바꾸기</a></li>
<li><a href="#7-4-outlier-%EB%A7%88%EC%BB%A4-%EC%8B%AC%EB%B3%BC%EA%B3%BC-%EC%BB%AC%EB%9F%AC-%EB%B3%80%EA%B2%BD">7-4. Outlier 마커 심볼과 컬러 변경</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<blockquote>
<p><em><strong>reference:</strong></em></p>
<ul>
<li><a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">pyplot 공식 도튜먼트 살펴보기</a></li>
<li><a href="https://seaborn.pydata.org/" target="_blank" rel="noopener">seaborn 공식 도큐먼트 살펴보기</a></li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># seaborn</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="0-seaborn-개요"><a class="markdownIt-Anchor" href="#0-seaborn-개요"></a> <strong>0. Seaborn 개요</strong></h2>
<p>seaborn은 matplotlib을 더 사용하게 쉽게 해주는 라이브러리다.<br>
matplotlib으로 대부분의 시각화는 가능하지만, 다음과 같은 이유로 많은 사람들이 <code>seaborn</code>을 선호한다.</p>
<blockquote>
<p><strong>비교:</strong> <a href="https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib2/">matplotlib을 활용한 다양한 그래프 그리기</a></p>
</blockquote>
 <br> 
<h3 id="0-1-seaborn-에서만-제공되는-통계-기반-plot"><a class="markdownIt-Anchor" href="#0-1-seaborn-에서만-제공되는-통계-기반-plot"></a> 0-1. seaborn 에서만 제공되는 통계 기반 plot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) violinplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'violin plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_14_0.png" alt="png"></p>
<br>
<p><strong>(2) countplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(tips[<span class="string">'day'</span>])</span><br><span class="line">plt.title(<span class="string">'countplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_17_0.png" alt="png"></p>
<br>
<p><strong>(3) relplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'tip'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'relplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_20_0.png" alt="png"></p>
<br>
<p><strong>(4) lmplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'tip'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'lmplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_23_0.png" alt="png"></p>
<br>
<p><strong>(5) heatmap</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.title(<span class="string">'heatmap'</span>)</span><br><span class="line">sns.heatmap(tips.corr(), annot=<span class="literal">True</span>, linewidths=<span class="number">1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_26_0.png" alt="png"></p>
<br>
<h3 id="0-2-아름다운-스타일링"><a class="markdownIt-Anchor" href="#0-2-아름다운-스타일링"></a> 0-2. 아름다운 스타일링</h3>
<p><strong>(1) default color의 예쁜 조합</strong></p>
<p>seaborn의 최대 장점 중의 하나가 아름다운 컬러팔레트다.<br>
스타일링에 크게 신경 쓰지 않아도 default 컬러가 예쁘게 조합해준다.</p>
<br>
<p><strong>matplotlib VS seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.bar(tips[<span class="string">'day'</span>], tips[<span class="string">'total_bill'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_32_0.png" alt="png"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_33_0.png" alt="png"></p>
<br>
<p><strong>(2) 그래프 배경 설정</strong></p>
<p>그래프의 배경 (grid 스타일)을 설정할 수 있음.</p>
<blockquote>
<p><strong>sns.set_style(’…’)</strong></p>
<ul>
<li>whitegrid: white background + grid</li>
<li>darkgrid: dark background + grid</li>
<li>white: white background (without grid)</li>
<li>dark: dark background (without grid)</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_38_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set_style(<span class="string">'white'</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_39_0.png" alt="png"></p>
<br>
<h3 id="0-3-컬러-팔레트"><a class="markdownIt-Anchor" href="#0-3-컬러-팔레트"></a> 0-3. 컬러 팔레트</h3>
<p>자세한 컬러팔레트는 <a href="https://chrisalbon.com/python/data_visualization/seaborn_color_palettes/" target="_blank" rel="noopener">공식 도큐먼트</a>를 참고</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.palplot(sns.light_palette((<span class="number">210</span>, <span class="number">90</span>, <span class="number">60</span>), input=<span class="string">"husl"</span>))</span><br><span class="line">sns.palplot(sns.dark_palette(<span class="string">"muted purple"</span>, input=<span class="string">"xkcd"</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"BrBG"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"BrBG_r"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"coolwarm"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.diverging_palette(<span class="number">255</span>, <span class="number">133</span>, l=<span class="number">60</span>, n=<span class="number">10</span>, center=<span class="string">"dark"</span>))</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_43_0.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_1.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_2.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_3.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_4.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_5.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"tip"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">'coolwarm'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5bf62888&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_44_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"tip"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">'Reds'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba59e40988&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_45_1.png" alt="png"></p>
<br>
<h3 id="0-4-pandas-데이터프레임과-높은-호환성"><a class="markdownIt-Anchor" href="#0-4-pandas-데이터프레임과-높은-호환성"></a> 0-4. pandas 데이터프레임과 높은 호환성</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>239</th>
      <td>29.03</td>
      <td>5.92</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>240</th>
      <td>27.18</td>
      <td>2.00</td>
      <td>Female</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>241</th>
      <td>22.67</td>
      <td>2.00</td>
      <td>Male</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>242</th>
      <td>17.82</td>
      <td>1.75</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>243</th>
      <td>18.78</td>
      <td>3.00</td>
      <td>Female</td>
      <td>No</td>
      <td>Thur</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>244 rows × 7 columns</p>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_50_0.png" alt="png"></p>
<br>
<ul>
<li><code>hue</code>옵션: bar를 새로운 기준으로 분할</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            hue=<span class="string">"smoker"</span>, </span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_53_0.png" alt="png"></p>
<br>
<ul>
<li><code>col</code> / <code>row</code> 옵션: 그래프 자체를 새로운 기준으로 분할</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            hue=<span class="string">"smoker"</span>, </span><br><span class="line">            col=<span class="string">"time"</span>,</span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_56_0.png" alt="png"></p>
<br>
<ul>
<li>
<p>xtick, ytick, xlabel, ylabel을 알아서 생성해 줌</p>
</li>
<li>
<p>legend까지 자동으로 생성해 줌</p>
</li>
<li>
<p>뿐만 아니라, 신뢰 구간도 알아서 계산하여 생성함</p>
<br>
</li>
</ul>
<h2 id="1-scatterplot"><a class="markdownIt-Anchor" href="#1-scatterplot"></a> <strong>1. Scatterplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.scatterplot.html" target="_blank" rel="noopener">&lt;sns.scatterplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.scatterplot</strong> ( <em>x, y, size=None, sizes=None, hue=None, palette=None, color=‘auto’, alpha=‘auto’…</em> )</p>
<ul>
<li><code>sizes</code> 옵션: size의 선택범위를 설정. (사아즈의 min, max를 설정)</li>
<li><code>hue</code> 옵션: 컬러의 구별 기준이 되는 grouping variable 설정</li>
<li><code>color</code> 옵션: cmap에 컬러를 지정하면, 컬러 값을 모두 같게 가겨갈 수 있음</li>
<li><code>alpha</code> 옵션: 투명도 (0~1)</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-1-x-y-color-area-설정하기"><a class="markdownIt-Anchor" href="#1-1-x-y-color-area-설정하기"></a> 1-1. x, y, color, area 설정하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 데이터 생성</span></span><br><span class="line">x = np.random.rand(<span class="number">50</span>)</span><br><span class="line">y = np.random.rand(<span class="number">50</span>)</span><br><span class="line">colors = np.arange(<span class="number">50</span>)</span><br><span class="line">area = x * y * <span class="number">1000</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.scatter(x, y, s=area, c=colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_69_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), hue=area, palette=<span class="string">'coolwarm'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_72_0.png" alt="png"></p>
<br>
<p><strong>[Tip]</strong> Palette 이름이 생각안나면: palette 값을 임의로 주고 실행하여 오류 경고창에 정확한 palette 이름을 보여줌</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), hue=area, palette=<span class="string">'coolwarm111'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

D:\Anaconda\lib\site-packages\seaborn\relational.py in numeric_to_palette(self, data, order, palette, norm)
    248             try:
--&gt; 249                 cmap = mpl.cm.get_cmap(palette)
    250             except (ValueError, TypeError):


D:\Anaconda\lib\site-packages\matplotlib\cm.py in get_cmap(name, lut)
    182             "Colormap %s is not recognized. Possible values are: %s"
--&gt; 183             % (name, ', '.join(sorted(cmap_d))))
    184 


ValueError: Colormap coolwarm111 is not recognized. Possible values are: Accent, Accent_r, Blues, Blues_r, BrBG, BrBG_r, BuGn, BuGn_r, BuPu, BuPu_r, CMRmap, CMRmap_r, Dark2, Dark2_r, GnBu, GnBu_r, Greens, Greens_r, Greys, Greys_r, OrRd, OrRd_r, Oranges, Oranges_r, PRGn, PRGn_r, Paired, Paired_r, Pastel1, Pastel1_r, Pastel2, Pastel2_r, PiYG, PiYG_r, PuBu, PuBuGn, PuBuGn_r, PuBu_r, PuOr, PuOr_r, PuRd, PuRd_r, Purples, Purples_r, RdBu, RdBu_r, RdGy, RdGy_r, RdPu, RdPu_r, RdYlBu, RdYlBu_r, RdYlGn, RdYlGn_r, Reds, Reds_r, Set1, Set1_r, Set2, Set2_r, Set3, Set3_r, Spectral, Spectral_r, Wistia, Wistia_r, YlGn, YlGnBu, YlGnBu_r, YlGn_r, YlOrBr, YlOrBr_r, YlOrRd, YlOrRd_r, afmhot, afmhot_r, autumn, autumn_r, binary, binary_r, bone, bone_r, brg, brg_r, bwr, bwr_r, cividis, cividis_r, cool, cool_r, coolwarm, coolwarm_r, copper, copper_r, cubehelix, cubehelix_r, flag, flag_r, gist_earth, gist_earth_r, gist_gray, gist_gray_r, gist_heat, gist_heat_r, gist_ncar, gist_ncar_r, gist_rainbow, gist_rainbow_r, gist_stern, gist_stern_r, gist_yarg, gist_yarg_r, gnuplot, gnuplot2, gnuplot2_r, gnuplot_r, gray, gray_r, hot, hot_r, hsv, hsv_r, icefire, icefire_r, inferno, inferno_r, jet, jet_r, magma, magma_r, mako, mako_r, nipy_spectral, nipy_spectral_r, ocean, ocean_r, pink, pink_r, plasma, plasma_r, prism, prism_r, rainbow, rainbow_r, rocket, rocket_r, seismic, seismic_r, spring, spring_r, summer, summer_r, tab10, tab10_r, tab20, tab20_r, tab20b, tab20b_r, tab20c, tab20c_r, terrain, terrain_r, twilight, twilight_r, twilight_shifted, twilight_shifted_r, viridis, viridis_r, vlag, vlag_r, winter, winter_r
</code></pre>
  <br>
<h3 id="1-2-cmap과-alpha"><a class="markdownIt-Anchor" href="#1-2-cmap과-alpha"></a> 1-2. cmap과 alpha</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'blue'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.1'</span>)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.5'</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'red'</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=1.0'</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'green'</span>, alpha=<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_79_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'blue'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.1'</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.5'</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'red'</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=1.0'</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'green'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_82_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-barplot-barhplot"><a class="markdownIt-Anchor" href="#2-barplot-barhplot"></a> <strong>2. Barplot, Barhplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.barplot.html" target="_blank" rel="noopener">&lt;sns.barplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.boxplot</strong> ( <em>x, y, hue=None, data=None, alpha=‘auto’, palette=None / color=None</em> )</p>
</blockquote>
<br> 
<h3 id="2-1-기본-barplot-그리기"><a class="markdownIt-Anchor" href="#2-1-기본-barplot-그리기"></a> 2-1. 기본 Barplot 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(rotation=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_91_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">sns.barplot(x, y, alpha=<span class="number">0.8</span>, palette=<span class="string">'YlGnBu'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(rotation=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_94_0.png" alt="png"></p>
<br>
<h3 id="2-2-기본-barhplot-그리기"><a class="markdownIt-Anchor" href="#2-2-기본-barhplot-그리기"></a> 2-2. 기본 Barhplot 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<blockquote>
<ul>
<li><strong>plt.barh</strong> 함수 사용</li>
<li>bar 함수에서 <strong>xticks / ylabel 로 설정</strong>했던 부분이 barh 함수에서 <strong>yticks / xlabel 로 변경함</strong></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">plt.barh(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.yticks(x)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_99_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<blockquote>
<ul>
<li>sns.barplot 함수를 그대로 사용</li>
<li>barplot함수 안에 x와 y의 위치를 교환<br>
xticks설정이 변경 불필요;<br>
하지만 ylabel설정은 xlable로 변경 필요</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">sns.barplot(y, x, alpha=<span class="number">0.9</span>, palette=<span class="string">"YlOrRd"</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_102_0.png" alt="png"></p>
<br>
<h3 id="2-3-barplot에서-비교-그래프-그리기"><a class="markdownIt-Anchor" href="#2-3-barplot에서-비교-그래프-그리기"></a> 2-3. Barplot에서 비교 그래프 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.bar(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>)</span><br><span class="line">axes.bar(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.xticks(x)</span><br><span class="line">axes.set_xticklabels(x_label)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_106_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.barh(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>, color = <span class="string">"green"</span>)</span><br><span class="line">axes.barh(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.5</span>, color = <span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.yticks(x)</span><br><span class="line">axes.set_yticklabels(x_label)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_107_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<p>Seaborn에서는 위의 <code>matplotlib</code>과 조금 다른 방식을 취한다.<br>
seaborn에서 <code>hue</code>옵션으로 매우 쉽게 비교 <strong>barplot</strong>을 그릴 수 있음.</p>
<blockquote>
<p><strong>sns.barplot</strong> ( <em>x, y, hue=…, data=…, palette=…</em> )</p>
</blockquote>
<br>
<p><strong>실전 tip.</strong></p>
<ul>
<li>
<p>그래프를 임의로 그려야 하는 경우 -&gt; <code>matplotlib</code></p>
</li>
<li>
<p>DataFrame을 가지고 그리는 경우 -&gt; <code>seaborn</code></p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table style="width = 100%;">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>sex</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>embarked</th>
      <th>class</th>
      <th>who</th>
      <th>adult_male</th>
      <th>deck</th>
      <th>embark_town</th>
      <th>alive</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>7.2500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>71.2833</td>
      <td>C</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.9250</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>53.1000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>8.0500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">'sex'</span>, y=<span class="string">'survived'</span>, hue=<span class="string">'pclass'</span>, data=titanic, palette=<span class="string">'muted'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_115_0.png" alt="png"></p>
<br>
<br>
<h2 id="3-line-plot"><a class="markdownIt-Anchor" href="#3-line-plot"></a> <strong>3. Line Plot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.lineplot.html" target="_blank" rel="noopener">&lt;sns.lineplot&gt; Document</a></p>
</blockquote>
<br>
<blockquote>
<p><strong>sns.lineplot</strong> ( <em>x, y, label=…, color=None, alpha=‘auto’, marker=None, linestyle=None</em> )</p>
<ul>
<li>기본 옵션은 matplotlib의 <code>plt.plot</code>과 비슷</li>
<li>함수만 <code>plt.plot</code>에서 <code>sns.lineplot</code>로 바꾸면 됨</li>
<li>plt.legend() 명령어 따로 쓸 필요없음</li>
<li>배경이 whitegrid / darkgrid 로 설정되어 있을 시 plt.grid() 명령어 불필요</li>
</ul>
</blockquote>
<br>  
<h3 id="3-1-기본-lineplot-그리기"><a class="markdownIt-Anchor" href="#3-1-기본-lineplot-그리기"></a> 3-1. 기본 lineplot 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y = <span class="number">1</span> + np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_124_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lineplot(x, y)  <span class="comment"># 함수만 변경하면 됨 (plt.plot -&gt; sns.lineplot)</span></span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_127_0.png" alt="png"></p>
<br>
<h3 id="3-2-2개-이상의-그래프-그리기"><a class="markdownIt-Anchor" href="#3-2-2개-이상의-그래프-그리기"></a> 3-2. 2개 이상의 그래프 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span> + np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1,label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha = <span class="number">0.3</span>)  <span class="comment"># label 설정값을 legend에 나타날 수 있음</span></span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">"x value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y value"</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"sin and cos graph"</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_130_0.png" alt="png"></p>
<br>
<h3 id="3-3-마커-스타일링"><a class="markdownIt-Anchor" href="#3-3-마커-스타일링"></a> 3-3. 마커 스타일링</h3>
<ul>
<li>marker: 마커 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.3</span>, marker=<span class="string">'o'</span>)</span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.7</span>, marker=<span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_134_0.png" alt="png"></p>
<br>
<h3 id="3-4-라인-스타일-변경하기"><a class="markdownIt-Anchor" href="#3-4-라인-스타일-변경하기"></a> 3-4. 라인 스타일 변경하기</h3>
<ul>
<li>linestyle: 라인 스타일 변경하기</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_138_0.png" alt="png"></p>
<br>
<br>
<h2 id="4-areaplot-filled-area"><a class="markdownIt-Anchor" href="#4-areaplot-filled-area"></a> <strong>4. Areaplot (Filled Area)</strong></h2>
<blockquote>
<p>Seaborn에서는 <strong>areaplot을 지원하지 않음</strong><br>
matplotlib을 활용하여 구현해야 함</p>
</blockquote>
<br>  
<h2 id="5histogram"><a class="markdownIt-Anchor" href="#5histogram"></a> <strong>5.Histogram</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html" target="_blank" rel="noopener">&lt;sns.distplot&gt; Document</a></p>
</blockquote>
<br>
<blockquote>
<p><strong>sns.distplot</strong> ( <em>x, bins=None, hist=True, kde=True, vertical=False</em> )</p>
<ul>
<li><strong>bins:</strong> hist bins 갯수 설정</li>
<li><strong>hist:</strong> Whether to plot a (normed) histogram</li>
<li><strong>kde:</strong> Whether to plot a gaussian kernel density estimate</li>
<li><strong>vertical:</strong> If True, observed values are on y-axis</li>
</ul>
</blockquote>
  <br>
<h3 id="5-1-기본-histogram-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-histogram-그리기"></a> 5-1. 기본 Histogram 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">plt.hist(x, bins=bins)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_150_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<p><strong>Histogram + Density Function</strong> <font color="blue">(<em>default</em>)</font></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">sns.distplot(x, bins=bins)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5cc800c8&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_154_1.png" alt="png"></p>
<br>
<p><strong>Histogram Only</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, hist=<span class="literal">True</span>, kde=<span class="literal">False</span>, color=<span class="string">'g'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5cd09788&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_157_1.png" alt="png"></p>
<br>
<p><strong>Density Function Only</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>, color=<span class="string">'g'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5c7cc208&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_160_1.png" alt="png"></p>
<br>
<p><strong>수평 그래프</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, vertical=<span class="literal">True</span>, color=<span class="string">'r'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5c250108&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_163_1.png" alt="png"></p>
<br>
<h3 id="5-2-다중-histogram-그리기"><a class="markdownIt-Anchor" href="#5-2-다중-histogram-그리기"></a> 5-2. 다중 Histogram 그리기</h3>
<p>matplotlib 에서의 방법을 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, </span><br><span class="line">                        sharey = <span class="literal">True</span>,</span><br><span class="line">                        tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins)</span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins*<span class="number">2</span>)</span><br><span class="line">axes[<span class="number">2</span>].hist(x, bins = bins*<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_167_0.png" alt="png"></p>
<br>
<br>
<h2 id="6-pie-chart"><a class="markdownIt-Anchor" href="#6-pie-chart"></a> <strong>6. Pie Chart</strong></h2>
<blockquote>
<p>Seaborn에서는 <strong>pie plot을 지원하지 않음</strong><br>
matplotlib을 활용하여 구현해야 함</p>
</blockquote>
  <br>
<h2 id="7-box-plot"><a class="markdownIt-Anchor" href="#7-box-plot"></a> <strong>7. Box Plot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.boxplot.html" target="_blank" rel="noopener">&lt;sns.boxplot&gt; Document</a></p>
</blockquote>
<br>
<blockquote>
<p><strong>sns.baxplot</strong> ( <em>x=None, y=None, hue=None, data=None, orient=None, width=0.8</em> )</p>
<ul>
<li><strong>hue:</strong> 비교 그래프를 그릴 때 나눔 기준이 되는 Variable 설정</li>
<li><strong>orient:</strong> “v” / “h”.  Orientation of the plot (vertical or horizontal)</li>
<li><strong>width:</strong> box의 넓이</li>
</ul>
</blockquote>
<br>  
<h3 id="7-1-기본-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-1-기본-박스플롯-생성"></a> 7-1. 기본 박스플롯 생성</h3>
<p><strong>샘플 데이터 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_182_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(data, orient=<span class="string">'v'</span>, width=<span class="number">0.2</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_185_0.png" alt="png"></p>
<br>
<h3 id="7-2-다중-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-2-다중-박스플롯-생성"></a> 7-2. 다중 박스플롯 생성</h3>
<p>seaborn에서는  <code>hue</code>옵션으로 매우 쉽게 <strong>비교 boxplot</strong>을 그릴 수 있으며 주로 DataFrame을 가지고 그릴 때 활용한다.</p>
<p>barplot과 마찬가지로, 용도에 따라 적절한 library를 사용한다</p>
<br>
<p><strong>실전 Tip.</strong></p>
<ul>
<li>
<p>그래프를 임의로 그려야 하는 경우 -&gt; <code>matplotlit</code></p>
</li>
<li>
<p>DataFrame을 가지고 그리는 경우 -&gt; <code>seaborn</code></p>
<br>
</li>
</ul>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread1 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center1 = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high1 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low1 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data1 = np.concatenate((spread1, center1, flier_high1, flier_low1))</span><br><span class="line"></span><br><span class="line">spread2 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center2 = np.ones(<span class="number">25</span>) * <span class="number">40</span></span><br><span class="line">flier_high2 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low2 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data2 = np.concatenate((spread2, center2, flier_high2, flier_low2))</span><br><span class="line"></span><br><span class="line">data1.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">data2.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = [data1, data2, data2[::<span class="number">2</span>, <span class="number">0</span>]]</span><br></pre></td></tr></tbody></table></figure>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_194_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table style="width = 100%;">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>sex</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>embarked</th>
      <th>class</th>
      <th>who</th>
      <th>adult_male</th>
      <th>deck</th>
      <th>embark_town</th>
      <th>alive</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>7.2500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>71.2833</td>
      <td>C</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.9250</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>53.1000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>8.0500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(x=<span class="string">'pclass'</span>, y=<span class="string">'age'</span>, hue=<span class="string">'survived'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_199_0.png" alt="png"></p>
<br>
<h3 id="7-3-box-plot-축-바꾸기"><a class="markdownIt-Anchor" href="#7-3-box-plot-축-바꾸기"></a> 7-3. Box Plot 축 바꾸기</h3>
<p><strong>(1) 단일 boxplot</strong></p>
<ul>
<li>orient옵션: orient = "h"로 설정</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(data, orient=<span class="string">'h'</span>, width=<span class="number">0.3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5e866188&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_205_1.png" alt="png"></p>
<br>
<p><strong>(2) 다중 boxplot</strong></p>
<ol>
<li>x, y 변수 교환</li>
<li>orient = “h”</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(y=<span class="string">'pclass'</span>, x=<span class="string">'age'</span>, hue=<span class="string">'survived'</span>, data=titanic, orient=<span class="string">'h'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_209_0.png" alt="png"></p>
<br>
<h3 id="7-4-outlier-마커-심볼과-컬러-변경"><a class="markdownIt-Anchor" href="#7-4-outlier-마커-심볼과-컬러-변경"></a> 7-4. Outlier 마커 심볼과 컬러 변경</h3>
<ul>
<li><strong>flierprops = …</strong> 옵션 사용  <font color="blue">(matplotlib과 동일)</font></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">outlier_marker = dict(markerfacecolor=<span class="string">'r'</span>, marker=<span class="string">'D'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Changed Outlier Symbols'</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">sns.boxplot(data, orient=<span class="string">'v'</span>, width=<span class="number">0.2</span>, flierprops=outlier_marker)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_213_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 4. Seaborn</category>
        <category>Python - 시각화</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>시각화</tag>
        <tag>Seaborn</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (4) 정렬</title>
    <url>/2020/05/24/S-Python-Pandas4/</url>
    <content><![CDATA[<h1 id="정렬-sort"><a class="markdownIt-Anchor" href="#정렬-sort"></a> 정렬 (sort)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-index-%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC"><strong>1. index 순으로 정렬</strong></a></li>
<li><a href="#2-column%EC%9D%98-value%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC"><strong>2. column의 value순으로 정렬</strong></a>
<ul>
<li><a href="#2-1-%EB%8B%A8%EC%9D%BC-column-%EA%B8%B0%EC%A4%80">2-1. 단일 column 기준</a></li>
<li><a href="#2-2-%EB%B3%B5%EC%88%98-column-%EA%B8%B0%EC%A4%80">2-2. 복수 column 기준</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
  <br>
<h2 id="1-index-순으로-정렬"><a class="markdownIt-Anchor" href="#1-index-순으로-정렬"></a> <strong>1. index 순으로 정렬</strong></h2>
<blockquote>
<p>오름차순 정렬: <em>df_name</em>.sort_index()   <font color="blue"><em>(default)</em></font><br>
내림차순 정렬: <em>df_name</em>.sort_index(ascending = False)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_index()  <span class="comment"># 오름차순</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_index(ascending = <span class="literal">False</span>)  <span class="comment"># 내림차순</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
 <br> 
<h2 id="2-column의-value순으로-정렬"><a class="markdownIt-Anchor" href="#2-column의-value순으로-정렬"></a> <strong>2. column의 value순으로 정렬</strong></h2>
<blockquote>
<p>오름차순 정렬: <em>df_name</em>.sort_values(by = ‘<em>col_name</em>’)<br>
내림차순 정렬: <em>df_name</em>.sort_values(by = ‘<em>col_name</em>’, ascending = False)</p>
</blockquote>
<h3 id="2-1-단일-column-기준"><a class="markdownIt-Anchor" href="#2-1-단일-column-기준"></a> 2-1. 단일 column 기준</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by=<span class="string">'키'</span>)  <span class="comment"># 오름차순</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by = <span class="string">'키'</span>, ascending = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-2-복수-column-기준"><a class="markdownIt-Anchor" href="#2-2-복수-column-기준"></a> 2-2. 복수 column 기준</h3>
<blockquote>
<p>먼저 column1 기준으로 정렬하고, column1 값이 동일한 row들은 column2기준으로 정렬:</p>
<ul>
<li><em>df_name</em> .sort_value ( by = [ ‘<em>col_name 1</em>’ , ‘<em>col_name 2</em>’ ] )</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by = [<span class="string">'키'</span>, <span class="string">'브랜드평판지수'</span>])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by = [<span class="string">'키'</span>, <span class="string">'브랜드평판지수'</span>], ascending = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (1) 출력. 데이터 타입. 데이터의 응용</title>
    <url>/2020/05/12/S-Python-base1/</url>
    <content><![CDATA[<p>출력. 변수. 데이터 타입. 데이터의 응용. 데이터 타입의 변환.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%B6%9C%EB%A0%A5-print"><strong>1. 출력 (print)</strong></a>
<ul>
<li><a href="#print-%ED%95%A8%EC%88%98"><strong>print( ) 함수</strong></a></li>
</ul>
</li>
<li><a href="#2-%EB%B3%80%EC%88%98%EC%99%80-%EB%8C%80%EC%9E%85"><strong>2. 변수와 대입</strong></a>
<ul>
<li><a href="#2-1-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9D%B4%EB%A6%84">2-1. 변수의 이름</a>
<ul>
<li><a href="#%EA%B0%80%EB%8A%A5%ED%95%9C-%EA%B2%BD%EC%9A%B0">【가능한 경우】</a></li>
<li><a href="#%EB%B6%88%EA%B0%80%ED%95%9C-%EA%B2%BD%EC%9A%B0">【불가한 경우】</a></li>
</ul>
</li>
<li><a href="#2-2-%EB%B3%80%EC%88%98%EC%9D%98-%EB%8C%80%EC%9E%85">2-2. 변수의 대입</a></li>
<li><a href="#2-3-%EB%B3%80%EC%88%98%EC%9D%98-%EC%B6%9C%EB%A0%A5">2-3. 변수의 출력</a></li>
</ul>
</li>
<li><a href="#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85"><strong>3. 데이터 타입</strong></a>
<ul>
<li><a href="#3-1-int%EC%A0%95%EC%88%98">3-1. int(정수)</a></li>
<li><a href="#3-2-float%EC%8B%A4%EC%88%98">3-2. float(실수)</a></li>
<li><a href="#3-3-str-%ED%98%B9%EC%9D%80-object-%EB%AC%B8%EC%9E%90%EC%97%B4">3-3. str 혹은 object (문자열)</a></li>
<li><a href="#3-4-bool-%EC%B0%B8%EA%B1%B0%EC%A7%93">3-4. bool (참/거짓)</a></li>
<li><a href="#3-5-%EC%95%84%EB%AC%B4%EA%B2%83%EB%8F%84-%EC%95%84%EB%8B%8C-none%ED%83%80%EC%9E%85%EB%8F%84-%EC%9E%88%EB%8B%A4">3-5. 아무것도 아닌 None타입도 있다</a></li>
</ul>
</li>
<li><a href="#4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%9D%91%EC%9A%A9"><strong>4. 데이터의 응용</strong></a>
<ul>
<li><a href="#4-1-%EC%82%AC%EC%B9%99-%EC%97%B0%EC%82%B0%EC%9E%90">4-1. 사칙 연산자</a></li>
<li><a href="#4-2-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EC%97%B0%EA%B2%B0">4-2. 문자열의 연결</a></li>
</ul>
</li>
<li><a href="#5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98"><strong>5. 데이터 타입 변환</strong></a>
<ul>
<li><a href="#5-1-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C-%EB%B3%80%ED%99%98-str-%ED%95%A8%EC%88%98-or-%EB%94%B0%EC%9B%80%ED%91%9C">5-1. 문자열로 변환:  “str( ) 함수”  or  “따움표”</a></li>
<li><a href="#5-2-%EC%A0%95%EC%88%98%EB%A1%9C-%EB%B3%80%ED%99%98-int-%ED%95%A8%EC%88%98">5-2. 정수로 변환: " int( ) 함수"</a></li>
<li><a href="#5-3-%EC%8B%A4%EC%88%98%EB%A1%9C-%EB%B3%80%ED%99%98-float-%ED%95%A8%EC%88%98">5-3. 실수로 변환: “float( ) 함수”</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-출력-print"><a class="markdownIt-Anchor" href="#1-출력-print"></a> <strong>1. 출력 (print)</strong></h2>
<h3 id="print-함수"><a class="markdownIt-Anchor" href="#print-함수"></a> <strong>print( ) 함수</strong></h3>
<ol>
<li>숫자를 출력할 때 따움표(’ ’ or " ") 필요없음</li>
<li>문자를 출력할 때 따움표 필요
<ul>
<li>’ ’ 와 " "  차이없음</li>
<li>‘’’  ‘’’ 를 사용하면 출력시 “줄 바꿈” 형식이 보류될 수 있음</li>
</ul>
</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">1</span>+<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'안녕하세요'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"반갑습니다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>반갑습니다
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">안녕하세요,</span></span><br><span class="line"><span class="string">반갑습니다.</span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요,
반갑습니다.
</code></pre>
<br>
<br>
<h2 id="2-변수와-대입"><a class="markdownIt-Anchor" href="#2-변수와-대입"></a> <strong>2. 변수와 대입</strong></h2>
<h3 id="2-1-변수의-이름"><a class="markdownIt-Anchor" href="#2-1-변수의-이름"></a> 2-1. 변수의 이름</h3>
<h4 id="가능한-경우"><a class="markdownIt-Anchor" href="#가능한-경우"></a> 【가능한 경우】</h4>
<p>case 1. 알파벳</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">A = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 2. 알파벳 + 숫자</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a1 = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 3. 알파벳 + 언더바(_)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_ = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 4. 언더바(_) + 알파벳</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">_a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="불가한-경우"><a class="markdownIt-Anchor" href="#불가한-경우"></a> 【불가한 경우】</h4>
<p><strong>case 1. 언더바(_)를 제외한 특수문자</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">* = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-23-6d0163a9fd4c&gt;", line 1
    * = 1
      ^
SyntaxError: invalid syntax
</code></pre>
<br>
<p><strong>case 2. 알파벳 + 언더바를 제외한 특수문자</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a$ = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-25-2501fc576aab&gt;", line 1
    a$ = 1
     ^
SyntaxError: invalid syntax
</code></pre>
<br>
<p><strong>case 3. 변수의 이름 사이의 공백</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a b = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-26-2bab97d7970c&gt;", line 1
    a b = 1
      ^
SyntaxError: invalid syntax
</code></pre>
<p><br><br></p>
<h3 id="2-2-변수의-대입"><a class="markdownIt-Anchor" href="#2-2-변수의-대입"></a> 2-2. 변수의 대입</h3>
<p>변수 값을 부여할 때 "="를 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="2-3-변수의-출력"><a class="markdownIt-Anchor" href="#2-3-변수의-출력"></a> 2-3. 변수의 출력</h3>
<ol>
<li>print() 구문 사이에 <strong>값을 직접</strong> 입력하면, 바로 값이 출력됨.</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">123</span>)   <span class="comment"># 숫자는 "" 필요없음</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"text"</span>)   <span class="comment"># 문자는 "" 필요함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>text
</code></pre>
<br>
<ol start="2">
<li>print()구분 사이에 <strong>변수 이름</strong>을 입력하면, 변수의 값이 출력됨.</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">123</span></span><br><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">"text"</span></span><br><span class="line">print(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>text
</code></pre>
<br>
 <br> 
<h2 id="3-데이터-타입"><a class="markdownIt-Anchor" href="#3-데이터-타입"></a> <strong>3. 데이터 타입</strong></h2>
<p><strong>데이터 type:</strong><br>
1. int(정수)<br>
2. float(실수)<br>
3. str(문자열)<br>
4. bool(참/거짓)</p>
<br>
<h3 id="3-1-int정수"><a class="markdownIt-Anchor" href="#3-1-int정수"></a> 3-1. int(정수)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<p><strong>코딩에서 1은 참으로 취급, 0은 거짓으로  취급</strong></p>
<p>다음 코딩으로 진단해보자:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'1은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'1은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1은 참으로 취급
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'0은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'0은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0은 거짓부렁이
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">123</span>:</span><br><span class="line">    print(<span class="string">'123은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'123은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123은 참으로 취급
</code></pre>
<p>[0 이외의 정수 다 참으로 취급]</p>
<br>
<br>  
<h3 id="3-2-float실수"><a class="markdownIt-Anchor" href="#3-2-float실수"></a> 3-2. float(실수)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">3.14</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3.14
</code></pre>
<br>
<h3 id="3-3-str-혹은-object-문자열"><a class="markdownIt-Anchor" href="#3-3-str-혹은-object-문자열"></a> 3-3. str 혹은 object (문자열)</h3>
<ol>
<li><strong>문자열은 반드시 ’ ’ 혹은 " " 로 묶어야 함</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">word = <span class="string">'안녕하세요'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">word = <span class="string">"안녕하세요"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<ol start="2">
<li><strong>’" "’ 를 사용하면 출력시 “줄 바꿈” 형식이 보류될 수 있음</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">안녕하세요,</span></span><br><span class="line"><span class="string">반갑습니다.</span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요,
반갑습니다.
</code></pre>
<p><br> <br></p>
<h3 id="3-4-bool-참거짓"><a class="markdownIt-Anchor" href="#3-4-bool-참거짓"></a> 3-4. bool (참/거짓)</h3>
<p>참:   True<br>
거짓: False</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>bool
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>bool
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span> == <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">123</span> == <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<ul>
<li>1 이외의 정수는 조건절에서 참으로 인식되지만, bool과 비교할 때 참이 아니다</li>
</ul>
<br>
<br>
<h3 id="3-5-아무것도-아닌-none타입도-있다"><a class="markdownIt-Anchor" href="#3-5-아무것도-아닌-none타입도-있다"></a> 3-5. 아무것도 아닌 None타입도 있다</h3>
<p>Null값을 넣는다고도 한다.</p>
<ul>
<li>Null: Nullify (무효화하다) – 사전상 의미</li>
</ul>
<p>Python에서는 <strong>None</strong> 입니다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>None
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>NoneType
</code></pre>
<br>
<p>조건문에 None이라면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">None</span>:</span><br><span class="line">    print(<span class="string">"None은 참으로 취급"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"None은 거짓부렁이"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>None은 거짓부렁이
</code></pre>
<br>
<br>
<h2 id="4-데이터의-응용"><a class="markdownIt-Anchor" href="#4-데이터의-응용"></a> <strong>4. 데이터의 응용</strong></h2>
<h3 id="4-1-사칙-연산자"><a class="markdownIt-Anchor" href="#4-1-사칙-연산자"></a> 4-1. 사칙 연산자</h3>
<table>
<thead>
<tr>
<th style="text-align:center">연산자</th>
<th style="text-align:center">의미</th>
<th style="text-align:center">예</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">더하기</td>
<td style="text-align:center">2 + 1 -&gt; 3</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">빼기</td>
<td style="text-align:center">1 - 2 -&gt; -1</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">곱하기</td>
<td style="text-align:center">1 * 2 -&gt; 2</td>
</tr>
<tr>
<td style="text-align:center">/</td>
<td style="text-align:center">나누기</td>
<td style="text-align:center">1 / 2 -&gt; 0.5</td>
</tr>
<tr>
<td style="text-align:center">//</td>
<td style="text-align:center">몫</td>
<td style="text-align:center">5 // 2 -&gt; 2</td>
</tr>
<tr>
<td style="text-align:center">%</td>
<td style="text-align:center">나머지</td>
<td style="text-align:center">5 % 2 -&gt; 1</td>
</tr>
<tr>
<td style="text-align:center">**</td>
<td style="text-align:center">멱</td>
<td style="text-align:center">2**3 -&gt; 8</td>
</tr>
</tbody>
</table>
  <br>
<h3 id="4-2-문자열의-연결"><a class="markdownIt-Anchor" href="#4-2-문자열의-연결"></a> 4-2. 문자열의 연결</h3>
<p>여러 개 문자열을 "+"을 통해 연결할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">subject = <span class="string">"나는 "</span></span><br><span class="line">object = <span class="string">"치킨을 "</span></span><br><span class="line">verb = <span class="string">"좋아한다"</span></span><br><span class="line"></span><br><span class="line">print(subject + object + verb)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>나는 치킨을 좋아한다
</code></pre>
<br>
<p>하지만 문자열(str)과 숫자(int &amp; float)는 <em>직접</em>  연결할 수 없다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">"내가 "</span></span><br><span class="line">b = <span class="string">"친구랑 "</span></span><br><span class="line">c = <span class="number">12</span></span><br><span class="line">d = <span class="string">"시에 "</span></span><br><span class="line">e = <span class="string">"보기로 했다"</span></span><br><span class="line"></span><br><span class="line">print(a + b + c + d + e)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-82-34cd0f9ce519&gt; in &lt;module&gt;
      5 e = "보기로 했다"
      6 
----&gt; 7 print(a + b + c + d + e)


TypeError: can only concatenate str (not "int") to str
</code></pre>
<p>이 때는 데이터 타입을 변환할 필요가 있다</p>
<br>
<br>
<h2 id="5-데이터-타입-변환"><a class="markdownIt-Anchor" href="#5-데이터-타입-변환"></a> <strong>5. 데이터 타입 변환</strong></h2>
<h3 id="5-1-문자열로-변환-str-함수-or-따움표"><a class="markdownIt-Anchor" href="#5-1-문자열로-변환-str-함수-or-따움표"></a> 5-1. 문자열로 변환:  “str( ) 함수”  or  “따움표”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="number">6</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(str(<span class="number">6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="string">'6'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="number">3.14</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(str(<span class="number">3.14</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="string">"3.14"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">"내가 "</span></span><br><span class="line">b = <span class="string">"친구랑 "</span></span><br><span class="line">c = <span class="number">12</span></span><br><span class="line">d = <span class="string">"시에 "</span></span><br><span class="line">e = <span class="string">"보기로 했다"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a + b + str(c) + d + e)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>내가 친구랑 12시에 보기로 했다
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a + b + <span class="string">'12'</span> + d + e)a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>내가 친구랑 12시에 보기로 했다
</code></pre>
<br>
<br>
<h3 id="5-2-정수로-변환-int-함수"><a class="markdownIt-Anchor" href="#5-2-정수로-변환-int-함수"></a> 5-2. 정수로 변환: " int( ) 함수"</h3>
<ol>
<li><strong>"str" --&gt; “int”:  str( ) 안 내용이 정수일 때만 가능</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(int(<span class="string">"2"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">number1 = <span class="string">"2"</span></span><br><span class="line">number2 = <span class="string">"3"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(number1) + int(number2))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(<span class="string">"2.6"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-103-f4645c45f771&gt; in &lt;module&gt;
----&gt; 1 print(int("2.6"))


ValueError: invalid literal for int() with base 10: '2.6'
</code></pre>
<br>
<ol start="2">
<li><strong>"float" --&gt; “int”: 소수점 버림</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(int(<span class="number">3.6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(<span class="number">3.6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<br>
<br>
<h3 id="5-3-실수로-변환-float-함수"><a class="markdownIt-Anchor" href="#5-3-실수로-변환-float-함수"></a> 5-3. 실수로 변환: “float( ) 함수”</h3>
<ol>
<li><strong>"str" --&gt; “float”:  str( ) 안 내용이 정수일 때만 가능</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(float(<span class="string">"3.14"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(float(<span class="string">"3.14"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3.14
</code></pre>
<br>
<ol start="2">
<li><strong>"int" --&gt; “float”: 소수점 하나 추가</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(float(<span class="number">178</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(float(<span class="number">178</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>178.0
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 0. Base</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python - Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (4) 비교/논리 연산자. 조건문. 반복문</title>
    <url>/2020/05/13/S-Python-base4/</url>
    <content><![CDATA[<p>비교연산자. 조건문. 논리연산자. 반복문</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> 목록</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90"><strong>1. 비교연산자</strong></a>
<ul>
<li><a href="#1-1-%EB%8C%80%EC%86%8C%EB%B9%84%EA%B5%90">1-1. 대소비교 &gt;, &gt;=, &lt;, &lt;=</a></li>
<li><a href="#1-2-%EA%B0%99%EB%8B%A4">1-2. 같다 ==</a></li>
<li><a href="#1-3-%EA%B0%99%EC%A7%80-%EC%95%8A%EB%8B%A4">1-3. 같지 않다 !=</a></li>
</ul>
</li>
<li><a href="#2-%EC%A1%B0%EA%B1%B4%EB%AC%B8"><strong>2. 조건문</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-if">2-2. if</a></li>
<li><a href="#2-3-else">2-3. else</a></li>
<li><a href="#2-4-elif">2-4. elif</a></li>
<li><a href="#2-5-1%EC%9D%B4%EB%82%98-0%EC%9D%80-%EC%B0%B8%EC%9D%B4%EB%82%98-%EA%B1%B0%EC%A7%93%EC%9D%84-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0%EB%8F%84-%ED%95%9C%EB%8B%A4">2-5. 1이나 0은 참이나 거짓을 표현하기도 한다</a></li>
</ul>
</li>
<li><a href="#3-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90-and-or"><strong>3. 논리 연산자 (and, or)</strong></a>
<ul>
<li><a href="#3-1-and">3-1. and</a></li>
<li><a href="#3-2-or">3-2. or</a></li>
</ul>
</li>
<li><a href="#4-%EB%B0%98%EB%B3%B5%EB%AC%B8"><strong>4. 반복문</strong></a>
<ul>
<li><a href="#4-1-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%B4%EB%9E%80">4-1. 반복문이란?</a></li>
<li><a href="#4-2-for-%EC%99%80-in%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%9E%90">4-2. for 와 in을 활용하자!</a></li>
<li><a href="#4-3-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%97%90%EC%84%9C-%EC%A7%9D%EC%88%98%EB%A7%8C-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%A0%A4%EB%A9%B4-continue%EA%B5%AC%EB%AC%B8">4-3. 반복문에서 짝수만 출력하려면? (continue구문)</a></li>
<li><a href="#4-4-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EC%B6%A9%EC%A1%B1%EC%8B%9C-%EC%88%9C%ED%99%98%EC%97%90%EC%84%9C-%EB%B9%A0%EC%A0%B8%EB%82%98%EC%99%80%EB%B3%B4%EC%9E%90-break%EA%B5%AC%EB%AC%B8">4-4. 조건을 충족시 순환에서 빠져나와보자! (break구문)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-비교연산자"><a class="markdownIt-Anchor" href="#1-비교연산자"></a> <strong>1. 비교연산자</strong></h2>
<p>비교 연산자는 주로 대소비교를 할 때 사용한다.</p>
<h3 id="1-1-대소비교"><a class="markdownIt-Anchor" href="#1-1-대소비교"></a> 1-1. 대소비교 &gt;, &gt;=, &lt;, &lt;=</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span> &gt; <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">10</span> &gt;= <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">9</span> &lt; <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">8</span> &lt;= <span class="number">7</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<p><br><br></p>
<h3 id="1-2-같다"><a class="markdownIt-Anchor" href="#1-2-같다"></a> 1-2. 같다 ==</h3>
<ul>
<li><strong>주의:</strong> = 는 대입연산자. == 는 비교연산자 중의 “같다”</li>
<li>숫자형 &amp; 문자형 모두 비교 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> = <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-6-a8e553549e25&gt;", line 1
    2 = 2
         ^
SyntaxError: can't assign to literal
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> == <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> == <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"나"</span> == <span class="string">"나"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
  <br>
<h3 id="1-3-같지-않다"><a class="markdownIt-Anchor" href="#1-3-같지-않다"></a> 1-3. 같지 않다 !=</h3>
<ul>
<li>숫자형 &amp; 문자형 모두 비교 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> != <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> != <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"나"</span> != <span class="string">"너"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<br>  
<h2 id="2-조건문"><a class="markdownIt-Anchor" href="#2-조건문"></a> <strong>2. 조건문</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>주어진 조건이 <strong>참</strong>인 경우 그 다음 내가 규칙(로직)을 실행하는 개념이다</p>
  <br>
<h3 id="2-2-if"><a class="markdownIt-Anchor" href="#2-2-if"></a> 2-2. if</h3>
<ul>
<li>if는 어떤 조건이 성립한다면 ~이라는 의미</li>
<li>if구문 끝에는 반드시 콜론( : )이 있어야 함</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
</code></pre>
<br>
<ul>
<li>if구문 뒤에 indent가 있는 명령어는 if조건이 성립하면 실행</li>
<li>indent가 없으면 if의 성립여부와 무관하여 무조건 실행</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">   </span><br><span class="line">print(<span class="string">'끝'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
참
끝
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">   </span><br><span class="line">print(<span class="string">'끝'</span>)  <span class="comment"># 앞에 indent가 없으면 if의 성립여부와 무관하여 실행</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>끝
</code></pre>
<br>
<br>
<h3 id="2-3-else"><a class="markdownIt-Anchor" href="#2-3-else"></a> 2-3. else</h3>
<p>else는 if 조견 후에 따라오면, if가 아닌 경우에 실행 됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">"성립한다"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"성립하지 않은다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>성립하지 않은다
</code></pre>
<br>
<p>else는 꼭 if랑 같이 써야함. 단독으로 실행할 수 없음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"성립하지 않은다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-22-6c0f4debaa4b&gt;", line 1
    else:
       ^
SyntaxError: invalid syntax
</code></pre>
<br>
  <br>
<h3 id="2-4-elif"><a class="markdownIt-Anchor" href="#2-4-elif"></a> 2-4. elif</h3>
<p>elif구문은 3가지 이상 문기(조건)의 동작을 수행할 때 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'if 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'elif 구문'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'이것도 저것도 아니다'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>elif 구문
</code></pre>
<br>
<p>그럼, elif구문이 참인 여러 구문을 나열 했을 때는 어떻게 될까?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'if 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'elif 1 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'elif 2 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">'elif 3 구문'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'이것도 저것도 아니다'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>elif 1 구문
</code></pre>
<p>elif구문이 참인 여러 구문을 나열 했을 때는 <strong>첫번째 참인 elif구문만</strong> 실행됨</p>
<p><br><br></p>
<h3 id="2-5-1이나-0은-참이나-거짓을-표현하기도-한다"><a class="markdownIt-Anchor" href="#2-5-1이나-0은-참이나-거짓을-표현하기도-한다"></a> 2-5. 1이나 0은 참이나 거짓을 표현하기도 한다</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>거짓
</code></pre>
<br>
<br>
<h2 id="3-논리-연산자-and-or"><a class="markdownIt-Anchor" href="#3-논리-연산자-and-or"></a> <strong>3. 논리 연산자 (and, or)</strong></h2>
<p><strong>and</strong>나 <strong>or</strong>조건은 두 가지 이상 조건을 다룰 때 활용한다</p>
  <br>
<h3 id="3-1-and"><a class="markdownIt-Anchor" href="#3-1-and"></a> 3-1. and</h3>
<p>and 조건은 <strong>모두 만족</strong>할 때 <strong>참</strong>으로 인식한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span> <span class="keyword">and</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">and</span> (<span class="number">0</span> &lt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'모두 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>모두 참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">and</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'모두 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>거짓
</code></pre>
<br>
<br>
<h3 id="3-2-or"><a class="markdownIt-Anchor" href="#3-2-or"></a> 3-2. or</h3>
<p>or조건은 조건 중 <strong>하나라도 만족</strong>할 때 <strong>참</strong>으로 인식한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'하나라도 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'모두 거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>하나라도 참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt; <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'하나라도 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'모두 거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>모두 거짓
</code></pre>
<br>
<br>
<h2 id="4-반복문"><a class="markdownIt-Anchor" href="#4-반복문"></a> <strong>4. 반복문</strong></h2>
<h3 id="4-1-반복문이란"><a class="markdownIt-Anchor" href="#4-1-반복문이란"></a> 4-1. 반복문이란?</h3>
<ul>
<li>일을 반복 처리 해준다는 것</li>
<li>대상은 반드시 list, dict, set등 집합이어야 한다</li>
</ul>
<br>
<p>[예]</p>
<p>반복문 쓰지 않을 때:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p>mylist에 들어 닜는 모든 값들을 출력하려고 한다면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(mylist[<span class="number">0</span>])</span><br><span class="line">print(mylist[<span class="number">1</span>])</span><br><span class="line">print(mylist[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'...'</span>)</span><br><span class="line">print(mylist[<span class="number">8</span>])</span><br><span class="line">print(mylist[<span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
...
9
10
</code></pre>
<p>반복문은 노가다를 획기적으로 줄여주는 방법이다!</p>
  <br>
<br>
<h3 id="4-2-for-와-in을-활용하자"><a class="markdownIt-Anchor" href="#4-2-for-와-in을-활용하자"></a> 4-2. for 와 in을 활용하자!</h3>
<p><strong>[기본 문법]</strong><br>
for 지정한 변수명 in [꺼내올 집합]:<br>
명령어</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<br>
<h3 id="4-3-반복문에서-짝수만-출력하려면-continue구문"><a class="markdownIt-Anchor" href="#4-3-반복문에서-짝수만-출력하려면-continue구문"></a> 4-3. 반복문에서 짝수만 출력하려면? (continue구문)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p><strong>방법1:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<p><strong>방법2:</strong><br>
<strong>continue</strong>구문을 사용하면 조건이 충족할 때 아래 명령어를 SKIP하고 다시 다음 순환으로 넘어간다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<br>
<h3 id="4-4-조건을-충족시-순환에서-빠져나와보자-break구문"><a class="markdownIt-Anchor" href="#4-4-조건을-충족시-순환에서-빠져나와보자-break구문"></a> 4-4. 조건을 충족시 순환에서 빠져나와보자! (break구문)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p>i가 6 이상이면 STOP</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">6</span>:       <span class="comment"># i &gt; 6 이면 6까지 출력한다 </span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 0. Base</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (3) 함수</title>
    <url>/2020/05/13/S-Python-base3/</url>
    <content><![CDATA[<p><strong>함수의 기초</strong></p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%95%A8%EC%88%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C"><strong>1. 함수란 무엇일까?</strong></a></li>
<li><a href="#2-%ED%95%A8%EC%88%98-%EC%A0%95%EC%9D%98-def-define"><strong>2. 함수 정의: def (define)</strong></a></li>
<li><a href="#3-%ED%95%A8%EC%88%98%EB%8A%94-%EA%B0%92%EC%9D%84-return%ED%95%A0-%EC%88%98-%EC%9E%88%EA%B3%A0-%EC%95%88%ED%95%B4%EB%8F%84-%EB%90%A8"><strong>3. 함수는 값을 return할 수 있고, 안해도 됨</strong></a></li>
<li><a href="#4-parameter%EA%B0%80-%EC%97%AC%EB%9F%AC-%EA%B0%9C-%EC%9E%88%EC%9C%BC%EB%A9%B4-%ED%95%A8%EC%88%98%EC%97%90-%EB%84%98%EA%B2%A8-%EC%A4%84-%EB%95%8C-%EC%88%9C%EC%84%9C%EA%B0%80-%EC%A4%91%EC%9A%94"><strong>4. parameter가 여러 개 있으면, 함수에 넘겨 줄 때 순서가 중요</strong></a></li>
</ul>
<p></p>
<br>
<h1 id="함수"><a class="markdownIt-Anchor" href="#함수"></a> <strong>함수</strong></h1>
<h2 id="1-함수란-무엇일까"><a class="markdownIt-Anchor" href="#1-함수란-무엇일까"></a> <strong>1. 함수란 무엇일까?</strong></h2>
<p>반복적으로 사용되는 부문을 묶어서, <strong>재사용 가능</strong>하도록 만들어 주는 것</p>
<p>함수에는 **들어가는 놈 (input)**이 있고, **나오는 놈 (output 혹은 return)**이 있다. 전해진 로직(규칙)에 따라, input -&gt; output으로 효율적으로 바꿔주는 역할을 한다</p>
<br>
<p><strong>[예시]</strong></p>
<p><strong>함수 없이 계산할 때</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>12
</code></pre>
<br>
<p><strong>함수로 변경 후</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">func(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>12
</code></pre>
  <br>
  <br>
<h2 id="2-함수-정의-def-define"><a class="markdownIt-Anchor" href="#2-함수-정의-def-define"></a> <strong>2. 함수 정의: def (define)</strong></h2>
<ul>
<li>
<p>사용법: def <strong>함수이름</strong> (parameter1, parameter2, parameter3…):</p>
</li>
<li>
<p>parameter는 함수로 부터 <strong>넘겨 받은 변수 또는 값</strong>이다</p>
</li>
<li>
<p>끝에 콜론 ( : ) 빼먹지 않음에 주의 해야함!</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc</span><span class="params">(var1)</span>:</span></span><br><span class="line">    print(var1)      <span class="comment"># 실행 명령</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myfunc(<span class="string">"안녕하세요"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<br>
<h2 id="3-함수는-값을-return할-수-있고-안해도-됨"><a class="markdownIt-Anchor" href="#3-함수는-값을-return할-수-있고-안해도-됨"></a> <strong>3. 함수는 값을 return할 수 있고, 안해도 됨</strong></h2>
<p><strong>리턴이 없는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    print(a, b)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(<span class="number">1</span>,<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1 10
</code></pre>
<br>
<p><strong>리턴이 있는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    s = a + b</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(<span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
<p><strong>리턴이 있는 경우는 변수에 값을 다시 할당 할 수 있음</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">result = my_func(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(result + <span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>15
</code></pre>
<p><br><br></p>
<h2 id="4-parameter가-여러-개-있으면-함수에-넘겨-줄-때-순서가-중요"><a class="markdownIt-Anchor" href="#4-parameter가-여러-개-있으면-함수에-넘겨-줄-때-순서가-중요"></a> <strong>4. parameter가 여러 개 있으면, 함수에 넘겨 줄 때 순서가 중요</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>90
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(a, b, c)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>90
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(c, b, a)   <span class="comment"># (c + b) * a = (3 + 20) * 10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>230
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 0. Base</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (5) List Comprehension. 문자열</title>
    <url>/2020/05/14/S-Python-base5/</url>
    <content><![CDATA[<p>List Comprehension (List에 조건필터를 적용).  문자열을 가지고 노는 방법.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-list-comprehension-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B3%A0%EC%9C%A0%EC%9D%98-%EC%95%84%EB%A6%84%EB%8B%A4%EC%9A%B4-%EB%AC%B8%EB%B2%95"><strong>1. List Comprehension (파이썬 고유의 아름다운 문법)</strong></a>
<ul>
<li><a href="#1-1-list-comprehension-%EC%A1%B0%EA%B1%B4%ED%95%84%ED%84%B0">1-1. list comprehension 조건필터</a></li>
<li><a href="#1-2-step-1-list%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%95%BC-%ED%95%98%EB%8B%88-%EC%9D%BC%EB%8B%A8-%EA%BA%BE%EC%87%A0-%EB%A5%BC-%EC%94%8C%EC%9A%B4%EB%8B%A4">1-2. [STEP 1] list를 만들어야 하니 일단 꺾쇠[ ]를 씌운다</a></li>
<li><a href="#1-3-step-2-%EC%A1%B0%EA%B1%B4-%ED%95%84%ED%84%B0%EB%A5%BC-%EA%B1%B8%EC%96%B4-%EC%A4%80%EB%8B%A4">1-3. [STEP 2] 조건 필터를 걸어 준다</a></li>
<li><a href="#1-4-%EC%9D%91%EC%9A%A9-step-%EB%B3%80%EC%88%98-%EA%B0%92%EC%9D%84-%EA%B0%80%EA%B3%B5%ED%95%A0-%EC%88%98%EB%8F%84-%EC%9E%88%EB%8B%A4">1-4. [응용 STEP] 변수 값을 가공할 수도 있다</a></li>
</ul>
</li>
<li><a href="#2-%EB%AC%B8%EC%9E%90%EC%97%B4string%EC%9D%84-%EA%B0%80%EC%A7%80%EA%B3%A0-%EB%86%80%EA%B8%B0"><strong>2. 문자열(string)을 가지고 놀기</strong></a>
<ul>
<li><a href="#2-1-%EB%AC%B8%EC%9E%90%EC%9D%98-%EA%B8%B8%EC%9D%B4">2-1. 문자의 길이</a></li>
<li><a href="#2-2-%EB%AC%B8%EC%9E%A5-%EC%AA%BC%EA%B0%9C%EA%B8%B0-split">2-2. 문장 쪼개기 – “.split”</a></li>
<li><a href="#2-3-%EB%8C%80%EB%AC%B8%EC%9E%90-%EC%86%8C%EB%AC%B8%EC%9E%90%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0-upper-lower">2-3. 대문자 / 소문자로 만들기 – “.upper” / “.lower”</a></li>
<li><a href="#24-~%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-~%EB%A1%9C-%EB%81%9D%EB%82%98%EB%8A%94-startswith-endswith">2.4. ~로 시작하는, ~로 끝나는 – “.startswith” , “.endswith”</a></li>
<li><a href="#2-5-%EB%B0%94%EA%BE%B8%EA%B8%B0-replace%EB%B0%94%EA%BF%80-%EB%8C%80%EC%83%81-%EB%B0%94%EA%BF%94%EC%95%BC%ED%95%A0-%EA%B0%92">2-5. 바꾸기 – “.replace(‘바꿀 대상, 바꿔야할 값’)”</a></li>
<li><a href="#2-6-%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EA%B3%B5%EB%B0%B1-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-strip">2-6. 불필요한 공백 제거하기 – “.strip”</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-list-comprehension-파이썬-고유의-아름다운-문법"><a class="markdownIt-Anchor" href="#1-list-comprehension-파이썬-고유의-아름다운-문법"></a> <strong>1. List Comprehension (파이썬 고유의 아름다운 문법)</strong></h2>
<ul>
<li>
<p>for ~ in 구조를 기본적으로 가지고 있다</p>
</li>
<li>
<p>List Comprehension 이니까 당연히 List를 사용한다</p>
<br>
</li>
</ul>
<p><strong>[실제 사례 연구]</strong></p>
<p>mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 이라는 list를 만들어 주고<br>
우리는 이 중 짝수만 출력하고 싶으면 아래와 같이 쓸 수 있다:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<p>그럼 mylist에서 짝수만 뽑아서 <strong>list로 만들어</strong> 주고 싶다면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">even = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        even.append(i)</span><br><span class="line"></span><br><span class="line">print(even)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<p>이렇게 for in 문으로 해줄 수 있다.<br>
하지만, 우리는 <strong>list comprehension을 통해 더욱 쉽게 해결</strong> 할 수 있다!!</p>
<br>
 <br> 
<h3 id="1-1-list-comprehension-조건필터"><a class="markdownIt-Anchor" href="#1-1-list-comprehension-조건필터"></a> 1-1. list comprehension 조건필터</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>아래 문법이 바로 list comprehension 이다. 한 줄로 해결해 버리는 것이 매력임!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<br>  
<h3 id="1-2-step-1-list를-만들어야-하니-일단-꺾쇠-를-씌운다"><a class="markdownIt-Anchor" href="#1-2-step-1-list를-만들어야-하니-일단-꺾쇠-를-씌운다"></a> 1-2. [STEP 1] list를 만들어야 하니 일단 꺾쇠[ ]를 씌운다</h3>
<ul>
<li>꺾쇠 안에 <strong>반복문이 들어간다</strong></li>
<li>반복문을 돌면서 return 된 i값을 list에 넣는 원리이기 때문에 <strong>for구분 앞에 i를 써준다</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<br>
<br>  
<h3 id="1-3-step-2-조건-필터를-걸어-준다"><a class="markdownIt-Anchor" href="#1-3-step-2-조건-필터를-걸어-준다"></a> 1-3. [STEP 2] 조건 필터를 걸어 준다</h3>
<p>[i for i in mylist (이곳에 조건문)]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">[i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<p>이것을 변수에 다시 할당해주면 끝!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<br>  
<h3 id="1-4-응용-step-변수-값을-가공할-수도-있다"><a class="markdownIt-Anchor" href="#1-4-응용-step-변수-값을-가공할-수도-있다"></a> 1-4. [응용 STEP] 변수 값을 가공할 수도 있다</h3>
<p><strong>예를 들어:</strong></p>
<p>mylist의 모든 값에 +2를 하고 다시 even이라는 list에 저장하고 싶다면</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i+<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> mylist]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
</code></pre>
<br>
<br>  
<h2 id="2-문자열string을-가지고-놀기"><a class="markdownIt-Anchor" href="#2-문자열string을-가지고-놀기"></a> <strong>2. 문자열(string)을 가지고 놀기</strong></h2>
<h3 id="2-1-문자의-길이"><a class="markdownIt-Anchor" href="#2-1-문자의-길이"></a> 2-1. 문자의 길이</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'banana'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'banana pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(a)  <span class="comment"># 공백도 count된다</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글 바나나'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6
</code></pre>
<br>
<br>  
<h3 id="2-2-문장-쪼개기-split"><a class="markdownIt-Anchor" href="#2-2-문장-쪼개기-split"></a> 2-2. 문장 쪼개기 – “.split”</h3>
<ul>
<li>split은 문장을 특정 규칙에 의해 쪼개 주는 기능을 한다</li>
<li><strong>명령어:</strong>  변수명.split(‘<em>쪼개는 기준</em>’)</li>
<li>쪼개는 기준이 설정되어 있지 않으면 그냥 '빈칸’으로 인식된다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'This is a pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.split(<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.split()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'This-is-a-pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.split(<span class="string">'-'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<ul>
<li>return된 값을 list형식으로 저장한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa = a.split(<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'This'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'a'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">0</span>] + aa[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'Thisa'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c = <span class="string">'한글은 어떻게 될까요?'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c.split()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['한글은', '어떻게', '될까요?']
</code></pre>
<br>
  <br> 
<h3 id="2-3-대문자-소문자로-만들기-upper-lower"><a class="markdownIt-Anchor" href="#2-3-대문자-소문자로-만들기-upper-lower"></a> 2-3. 대문자 / 소문자로 만들기 – “.upper” / “.lower”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'My name is hyemin'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.upper()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'MY NAME IS HYEMIN'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.lower()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'my name is hyemin'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글엔 대소문자가 없어요ㅠ'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.upper()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'한글엔 대소문자가 없어요ㅠ'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.lower()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'한글엔 대소문자가 없어요ㅠ'
</code></pre>
<br>
 <br> 
<h3 id="24-~로-시작하는-~로-끝나는-startswith-endswith"><a class="markdownIt-Anchor" href="#24-~로-시작하는-~로-끝나는-startswith-endswith"></a> 2.4. ~로 시작하는, ~로 끝나는 – “.startswith” , “.endswith”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'01-sample.png'</span></span><br><span class="line">b = <span class="string">'02-sample.jpg'</span></span><br><span class="line">c = <span class="string">'03-sample.pdf'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.startswith(<span class="string">'01'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.endswith(<span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.endswith(<span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<p>조건(혹은 형식)에 맞는 파일을 추출하고 싶을 때:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [a, b]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> file.endswith(<span class="string">'jpg'</span>):</span><br><span class="line">        print(file)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>02-sample.jpg
</code></pre>
<br>
<br>
<h3 id="2-5-바꾸기-replace바꿀-대상-바꿔야할-값"><a class="markdownIt-Anchor" href="#2-5-바꾸기-replace바꿀-대상-바꿔야할-값"></a> 2-5. 바꾸기 – “.replace(‘바꿀 대상, 바꿔야할 값’)”</h3>
<p><strong>[예]</strong>   file형식을 바꾸고 싶다면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'01-sample.png'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<p>이 때 a의 값이 변하지 않아. 다시 할당 해야 함</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.png'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_new = a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)  <span class="comment"># 새로 지정</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_new</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)  <span class="comment"># 덮어쒸우기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<br>    
<h3 id="2-6-불필요한-공백-제거하기-strip"><a class="markdownIt-Anchor" href="#2-6-불필요한-공백-제거하기-strip"></a> 2-6. 불필요한 공백 제거하기 – “.strip”</h3>
<p><strong>[예]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'   01-sample.png'</span></span><br><span class="line">b = <span class="string">'01-sample.png'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a == b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<p>strip은 양 끝 불필요한 공백을 제거해 줌.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.strip()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.png'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.strip() == b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 0. Base</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (2) 집합 형태의 데이터 타입</title>
    <url>/2020/05/13/S-Python-base2/</url>
    <content><![CDATA[<h1 id="집합-형태의-데이터-타입"><a class="markdownIt-Anchor" href="#집합-형태의-데이터-타입"></a> <strong>집합 형태의 데이터 타입</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-list-%EC%88%9C%EC%84%9C%EA%B0%80-%EC%9E%88%EB%8A%94-%EC%A7%91%ED%95%A9"><strong>1. list (순서가 있는 집합)</strong></a>
<ul>
<li><a href="#1-1-%ED%98%95%ED%85%8C%EB%A1%9C-%ED%91%9C%ED%98%84">1-1. [ ] 형테로 표현</a></li>
<li><a href="#1-2-%EA%B0%92-%EC%B6%94%EA%B0%80-append">1-2. 값 추가 – “.append( )”</a></li>
<li><a href="#1-3-%EA%B0%92-%EC%A0%9C%EA%B1%B0-remove-clear">1-3. 값 제거 – “.remove” / “.clear”</a></li>
<li><a href="#1-4-%EC%9D%B8%EB%8D%B1%EC%8B%B1indexing-%EC%83%89%EC%9D%B8">1-4. 인덱싱(Indexing) -&gt; 색인</a></li>
<li><a href="#1-5-%EC%9D%B8%EB%8D%B1%EC%8A%A4%EB%A1%9C-%EC%A0%91%EA%B7%BC%ED%95%98%EC%97%AC-%EA%B0%92-%EB%B0%94%EA%BE%B8%EA%B8%B0">1-5. 인덱스로 접근하여 값 바꾸기</a></li>
<li><a href="#1-6-%EA%B8%B8%EC%9D%B4-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">1-6. 길이 파악하기</a></li>
</ul>
</li>
<li><a href="#2-tuple-%EC%88%9C%EC%84%9C%EA%B0%80-%EC%9E%88%EB%8A%94-%EC%A7%91%ED%95%A9-%EC%9D%BD%EA%B8%B0-%EC%A0%84%EC%9A%A9"><strong>2. tuple (순서가 있는 집합, 읽기 전용)</strong></a>
<ul>
<li><a href="#2-1-%ED%98%95%ED%83%9C%EB%A1%9C-%ED%91%9C%ED%98%84">2-1. ( ) 형태로 표현</a></li>
<li><a href="#2-2-%EC%9D%BD%EA%B8%B0-%EC%A0%84%EC%9A%A9%EC%9D%B4%EB%9D%BC-%EA%B0%92-%EC%B6%94%EA%B0%80-%EA%B0%92-%EC%A0%9C%EA%B1%B0-%EA%B0%92-%EB%B0%94%EA%BE%B8%EA%B8%B0-%EB%AA%A8%EB%91%90-%EC%95%88%EB%90%A8">2-2. 읽기 전용이라 “값 추가”, “값 제거”, “값 바꾸기” 모두 안됨</a></li>
<li><a href="#2-3-%EA%B8%B8%EC%9D%B4-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">2-3. 길이 파악하기</a></li>
</ul>
</li>
<li><a href="#3-set-%EC%88%9C%EC%84%9C-x-%EC%A4%91%EB%B3%B5-x"><strong>3. set (순서 X, 중복 X)</strong></a>
<ul>
<li><a href="#3-1-set%EC%9D%98-%ED%95%A0%EB%8B%B9-set">3-1. set의 할당: set()</a></li>
<li><a href="#3-2-%EA%B0%92-%EC%B6%94%EA%B0%80-add">3-2. 값 추가 –  ".add "</a></li>
<li><a href="#3-3-%EA%B0%92-%EC%A0%9C%EA%B1%B0-remove-clear">3-3. 값 제거 – “.remove” / “.clear”</a></li>
</ul>
</li>
<li><a href="#4-dict-%EC%82%AC%EC%A0%84%ED%98%95-%EC%A7%91%ED%95%A9-key%EC%99%80-value-%EC%8C%8D"><strong>4. dict (사전형 집합, key와 value 쌍)</strong></a>
<ul>
<li><a href="#4-1-%ED%98%95%ED%83%9C%EB%A1%9C-%ED%91%9C%ED%97%8C">4-1. { } 형태로 표헌</a></li>
<li><a href="#4-2-%EA%B0%92-%EC%B6%94%EA%B0%80-key%EC%99%80-value-%EB%AA%A8%EB%91%90-%EC%A7%80%EC%A0%95">4-2. 값 추가 (key와 value 모두 지정)</a></li>
<li><a href="#4-3-%EA%B0%92-%EB%B0%94%EA%BE%B8%EA%B8%B0">4-3. 값 바꾸기</a></li>
<li><a href="#4-4-%EA%B0%92-%EC%A0%9C%EA%B1%B0-pop-clear">4-4. 값 제거 – “.pop” / “.clear”</a></li>
<li><a href="#4-5-%EA%B8%B8%EC%9D%B4-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">4-5. 길이 파악하기</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<p><strong>짐합 형태의 데이터 타입</strong></p>
<ol>
<li>
<p>list (순서 O, 집합)</p>
</li>
<li>
<p>tuple (순서 O, 읽기 전용 집합)</p>
</li>
<li>
<p>set (순서 X, 중복 X 집합)</p>
</li>
<li>
<p>dict (key, value로 이루어진 사전형 집합)</p>
<br>
</li>
</ol>
<h2 id="1-list-순서가-있는-집합"><a class="markdownIt-Anchor" href="#1-list-순서가-있는-집합"></a> <strong>1. list (순서가 있는 집합)</strong></h2>
<h3 id="1-1-형테로-표현"><a class="markdownIt-Anchor" href="#1-1-형테로-표현"></a> 1-1. [ ] 형테로 표현</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = []</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(mylist)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>list
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist2 = [<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]   <span class="comment"># 순서가 있다</span></span><br><span class="line">mylist2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[5, 4, 3, 2, 1]
</code></pre>
<br>
<h3 id="1-2-값-추가-append"><a class="markdownIt-Anchor" href="#1-2-값-추가-append"></a> 1-2. 값 추가 – “.append( )”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = []</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.append(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.append(<span class="number">2</span>)</span><br><span class="line">mylist.append(<span class="number">3</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3]
</code></pre>
<br>
<p><strong>.append 함수 안에 1 argument만 들어갈 수 있다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.append(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-22-6f00703728b8&gt; in &lt;module&gt;
----&gt; 1 mylist.append(4,5)
      2 mylist


TypeError: append() takes exactly one argument (2 given)
</code></pre>
<br>
<h3 id="1-3-값-제거-remove-clear"><a class="markdownIt-Anchor" href="#1-3-값-제거-remove-clear"></a> 1-3. 값 제거 – “.remove” / “.clear”</h3>
<p><strong>부분 제거 – ".remove"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.remove(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 3]
</code></pre>
 <br>
<p><strong>전부 제거 – ".clear"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.clear()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br> 
<p><strong>같은 값이 여러 개 포함되어 있을 때의 제거 순서</strong></p>
<p>앞에서 부터 순차적으로 제거 됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 1, 2, 3]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.remove(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 3, 1, 2, 3]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.remove(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 3, 2, 3]
</code></pre>
  <br>
<h3 id="1-4-인덱싱indexing-색인"><a class="markdownIt-Anchor" href="#1-4-인덱싱indexing-색인"></a> 1-4. 인덱싱(Indexing) -&gt; 색인</h3>
<p>인덱스는 <strong>0번 부터 시작</strong>한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]  <span class="comment"># 인덱스: 0번, 1번, 2번, 3번</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-34-88b11041aa4f&gt; in &lt;module&gt;
----&gt; 1 mylist[4]


IndexError: list index out of range
</code></pre>
<br>
<p>인덱스가 음수일 경우: 뒤에서 부터 n번째</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">-1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4
</code></pre>
<br>
<h3 id="1-5-인덱스로-접근하여-값-바꾸기"><a class="markdownIt-Anchor" href="#1-5-인덱스로-접근하여-값-바꾸기"></a> 1-5. 인덱스로 접근하여 값 바꾸기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>] = <span class="number">100</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[100, 2, 3, 4]
</code></pre>
<br>
<h3 id="1-6-길이-파악하기"><a class="markdownIt-Anchor" href="#1-6-길이-파악하기"></a> 1-6. 길이 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[100, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(mylist)  <span class="comment"># length</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>4
</code></pre>
<br>
  <br>
<h2 id="2-tuple-순서가-있는-집합-읽기-전용"><a class="markdownIt-Anchor" href="#2-tuple-순서가-있는-집합-읽기-전용"></a> <strong>2. tuple (순서가 있는 집합, 읽기 전용)</strong></h2>
<h3 id="2-1-형태로-표현"><a class="markdownIt-Anchor" href="#2-1-형태로-표현"></a> 2-1. ( ) 형태로 표현</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="2-2-읽기-전용이라-값-추가-값-제거-값-바꾸기-모두-안됨"><a class="markdownIt-Anchor" href="#2-2-읽기-전용이라-값-추가-값-제거-값-바꾸기-모두-안됨"></a> 2-2. 읽기 전용이라 “값 추가”, “값 제거”, “값 바꾸기” 모두 안됨</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple.append(<span class="number">1</span>)    <span class="comment"># 읽기 전용이라 값을 추가할 수 없음</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

AttributeError                            Traceback (most recent call last)

&lt;ipython-input-45-d0f55ea1e3f6&gt; in &lt;module&gt;
----&gt; 1 mytuple.append(1)    # 읽기 전용이라 값을 추가할 수 없음


AttributeError: 'tuple' object has no attribute 'append'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple.remove(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

AttributeError                            Traceback (most recent call last)

&lt;ipython-input-46-05a40423345b&gt; in &lt;module&gt;
----&gt; 1 mytuple.remove(1)


AttributeError: 'tuple' object has no attribute 'remove'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple[<span class="number">0</span>] = <span class="number">100</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-48-4e527888818c&gt; in &lt;module&gt;
----&gt; 1 mytuple[0] = 100


TypeError: 'tuple' object does not support item assignment
</code></pre>
<br>
<h3 id="2-3-길이-파악하기"><a class="markdownIt-Anchor" href="#2-3-길이-파악하기"></a> 2-3. 길이 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1, 2, 3, 4, 5)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(mytuple)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
  <br>
<h2 id="3-set-순서-x-중복-x"><a class="markdownIt-Anchor" href="#3-set-순서-x-중복-x"></a> <strong>3. set (순서 X, 중복 X)</strong></h2>
<h3 id="3-1-set의-할당-set"><a class="markdownIt-Anchor" href="#3-1-set의-할당-set"></a> 3-1. set의 할당: set()</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset = set()</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>set()
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(myset)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>set
</code></pre>
<br>
<h3 id="3-2-값-추가-add"><a class="markdownIt-Anchor" href="#3-2-값-추가-add"></a> 3-2. 값 추가 –  ".add "</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.add(<span class="number">1</span>)</span><br><span class="line">myset.add(<span class="number">2</span>)</span><br><span class="line">myset.add(<span class="number">3</span>)</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.add(<span class="number">1</span>)  </span><br><span class="line">myset.add(<span class="number">2</span>)</span><br><span class="line">myset.add(<span class="number">3</span>)</span><br><span class="line">myset.add(<span class="number">1</span>)  <span class="comment"># 중복된 값을 한번만 기록</span></span><br><span class="line">myset.add(<span class="number">2</span>)</span><br><span class="line">myset.add(<span class="number">3</span>)</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.add(<span class="number">4</span>)</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3, 4}
</code></pre>
<br>
<h3 id="3-3-값-제거-remove-clear"><a class="markdownIt-Anchor" href="#3-3-값-제거-remove-clear"></a> 3-3. 값 제거 – “.remove” / “.clear”</h3>
<p><strong>부분 제거 – ".remove"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3, 4}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.remove(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 4}
</code></pre>
<br> 
<p><strong>전부 제거 – ".clear"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.clear()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br>
<br>
<h2 id="4-dict-사전형-집합-key와-value-쌍"><a class="markdownIt-Anchor" href="#4-dict-사전형-집합-key와-value-쌍"></a> <strong>4. dict (사전형 집합, key와 value 쌍)</strong></h2>
<h3 id="4-1-형태로-표헌"><a class="markdownIt-Anchor" href="#4-1-형태로-표헌"></a> 4-1. { } 형태로 표헌</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict = dict()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(mydict)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>dict
</code></pre>
<br>
<h3 id="4-2-값-추가-key와-value-모두-지정"><a class="markdownIt-Anchor" href="#4-2-값-추가-key와-value-모두-지정"></a> 4-2. 값 추가 (key와 value 모두 지정)</h3>
<ul>
<li>mydict [ " <em>key</em> " ] = <em>value</em></li>
<li>key는 문자형 (str) / 숫자형 (int &amp; float) 모두 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>] = <span class="number">123</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 123}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">0</span>] = <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 123, 0: 2}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">3.14</span>] = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 123, 0: 2, 3.14: 1}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">3.14</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<h3 id="4-3-값-바꾸기"><a class="markdownIt-Anchor" href="#4-3-값-바꾸기"></a> 4-3. 값 바꾸기</h3>
<p>새 값을 해당 key에 할당하기</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>] = <span class="string">"hello"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 'hello', 0: 2, 3.14: 1}
</code></pre>
<br>
<h3 id="4-4-값-제거-pop-clear"><a class="markdownIt-Anchor" href="#4-4-값-제거-pop-clear"></a> 4-4. 값 제거 – “.pop” / “.clear”</h3>
<p><strong>부분 제거 – ".pop"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict.pop(<span class="string">'apple'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'hello'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{0: 2, 3.14: 1}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict.pop(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{3.14: 1}
</code></pre>
<br>
<p><strong>전부 제거 – ".clear"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict.clear()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{}
</code></pre>
<br>
<h3 id="4-5-길이-파악하기"><a class="markdownIt-Anchor" href="#4-5-길이-파악하기"></a> 4-5. 길이 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>] = <span class="number">123</span></span><br><span class="line">mydict[<span class="number">0</span>] = <span class="number">2</span></span><br><span class="line">mydict[<span class="number">3.14</span>] = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 'hello', 0: 2, 3.14: 1}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(mydict)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
  <br>
  <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 0. Base</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (6) Package</title>
    <url>/2020/05/16/S-Python-base6/</url>
    <content><![CDATA[<p>패키지(Package) 와 import</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%8C%A8%ED%82%A4%EC%A7%80%EC%99%80-%EB%AA%A8%EB%93%88-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%ED%95%A8%EC%88%98%EC%9D%98-%EA%B4%80%EA%B3%84%EB%8F%84"><strong>1. 패키지와 모듈 그리고 함수의 관계도</strong></a></li>
<li><a href="#2-%EB%AA%A8%EB%93%88-import-%ED%95%98%EA%B8%B0"><strong>2. 모듈 import 하기</strong></a></li>
<li><a href="#3-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%97%90%EC%84%9C-import%ED%95%98%EA%B8%B0"><strong>3. 패키지 에서 import하기</strong></a></li>
<li><a href="#4-%EB%B3%84%EC%B9%AD-alias-%EC%A7%80%EC%96%B4%EC%A3%BC%EA%B8%B0"><strong>4. 별칭 (alias) 지어주기</strong></a></li>
<li><a href="#5-%EC%95%9E%EC%9C%BC%EB%A1%9C-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%AA%A8%EB%93%88-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0"><strong>5. 앞으로 자주 사용할 패키지, 모듈 미리보기</strong></a></li>
</ul>
<p></p>
<br>
<h1 id="패키지package-와-import"><a class="markdownIt-Anchor" href="#패키지package-와-import"></a> <strong>패키지(Package) 와 import</strong></h1>
<h2 id="1-패키지와-모듈-그리고-함수의-관계도"><a class="markdownIt-Anchor" href="#1-패키지와-모듈-그리고-함수의-관계도"></a> <strong>1. 패키지와 모듈 그리고 함수의 관계도</strong></h2>
<ul>
<li>
<p><strong>함수</strong>들이 뭉쳐진 하나의 .py파일 안에 이루어진 것을 <strong>모듈</strong>이라고 한다</p>
</li>
<li>
<p>여러 개의 모듈을 그룹화 하면 <strong>패키지</strong>가 된다</p>
</li>
<li>
<p><strong>패키지</strong>는 종종 <strong>라이브러비</strong>라고도 불린다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># 출척: pythonstudy.xyz</span></span><br><span class="line">Image(<span class="string">'http://pythonstudy.xyz/images/basics/python-package.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<p><img src="https://z3.ax1x.com/2021/08/25/hVR129.png" alt="png"></p>
<p><br><br></p>
<h2 id="2-모듈-import-하기"><a class="markdownIt-Anchor" href="#2-모듈-import-하기"></a> <strong>2. 모듈 import 하기</strong></h2>
<p><strong>import 하는 방법</strong></p>
<p>.py (파이썬 파일 확장자)로 된 파일을 우리는 <strong>모듈</strong> 이라고 한다, import 구문을 통해 해당 파일을 불러올 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<p>위의 코드는 pandas라는 모듈을 우리가 불러오겠다라는 의미이다</p>
<p><br> <br></p>
<h2 id="3-패키지-에서-import하기"><a class="markdownIt-Anchor" href="#3-패키지-에서-import하기"></a> <strong>3. 패키지 에서 import하기</strong></h2>
<ul>
<li>패키지 안에서 하나의 모듈을 불러온다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame   <span class="comment"># pandas라는 패키지 안에서 DataFrame이라는 모듈을 불러온다</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">DataFrame()  <span class="comment"># 모듈 DataFrame사용</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
<ul>
<li>통째로 패키지나 모듈을 불러온다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pandas.DataFrame()  <span class="comment"># DataFrame이라는 모듈을 사용하기 위해서는 .을 찍고 이어서 쓰면 됨</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="4-별칭-alias-지어주기"><a class="markdownIt-Anchor" href="#4-별칭-alias-지어주기"></a> <strong>4. 별칭 (alias) 지어주기</strong></h2>
<p>pandas라는 패키지 이름이 너무 길기 때문에 우리는 약어로 줄여쓸 수 있다. 보통 pd를 보편적으로 많이 사용한다.</p>
<p>줄여서 별명을 지어줄 때는 as를 붙혀준다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
 <br> 
<h2 id="5-앞으로-자주-사용할-패키지-모듈-미리보기"><a class="markdownIt-Anchor" href="#5-앞으로-자주-사용할-패키지-모듈-미리보기"></a> <strong>5. 앞으로 자주 사용할 패키지, 모듈 미리보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>numpy: 과학계산을 위한 패키지</li>
<li>pandas: 데이터 분석을 할 때 가장 많이 쓰이는 패키지</li>
<li>matplotlib: 시각확를 위한 패키지</li>
<li>seaborn: 시각화를 위한 패키지 (matplotlib을 더 쉽게 사용할 수 있도록 도와주는 패키지)</li>
</ul>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 0. Base</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; 텍스트 마이닝 (Text Mining) 소개</title>
    <url>/2020/08/19/S-Python-TextMining1/</url>
    <content><![CDATA[<h1 id="텍스트-마이닝-text-mining-소개"><a class="markdownIt-Anchor" href="#텍스트-마이닝-text-mining-소개"></a> 텍스트 마이닝 (Text Mining) 소개</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%A7%88%EC%9D%B4%EB%8B%9D%EC%9D%98-%EA%B0%9C%EB%85%90"><strong>1. 텍스트 마이닝의 개념</strong></a></li>
<li><a href="#2-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%A7%88%EC%9D%B4%EB%8B%9D-%EC%9D%91%EC%9A%A9%EB%B6%84%EC%95%BC"><strong>2. 텍스트 마이닝 응용분야</strong></a></li>
<li><a href="#3-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%B2%98%EB%A6%AC-%EB%B0%A9%EB%B2%95"><strong>3. 텍스트 데이터의 처리 방법</strong></a>
<ul>
<li><a href="#3-1-bow-bag-of-words">3-1. BoW (Bag of Words)</a></li>
<li><a href="#3-2-%EB%AC%B8%EC%84%9C-%EB%8B%A8%EC%96%B4-%ED%96%89%EB%A0%AC-document-term-matrix-dtm">3-2. 문서 단어 행렬 (Document-Term Matrix, DTM)</a></li>
<li><a href="#3-3-%EB%8B%A8%EC%96%B4%EC%9D%98-%EC%A4%91%EC%9A%94%EB%8F%84%EB%A5%BC-%EA%B3%84%EC%82%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-tf-idf">3-3. 단어의 중요도를 계산하는 방법 (TF-IDF)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-텍스트-마이닝의-개념"><a class="markdownIt-Anchor" href="#1-텍스트-마이닝의-개념"></a> <strong>1. 텍스트 마이닝의 개념</strong></h2>
<p>텍스트 마이닝은 비정형 및 반정형 텍스트 데이터에 대하여 자연어 처리(Natural Langrage Precessing) 기술과 문서 처리 기술을 적용하여 가치와 의미가 있는 정보를 찾아내는(Mining) 기술입니다.</p>
  <br>
<h2 id="2-텍스트-마이닝-응용분야"><a class="markdownIt-Anchor" href="#2-텍스트-마이닝-응용분야"></a> <strong>2. 텍스트 마이닝 응용분야</strong></h2>
<p><strong>단어의 빈도수 기반</strong></p>
<ul>
<li>Word Cloud: 텍스트 데이터에서의 단어 등장 빈도수 시각화</li>
<li>문서 분류: 감성 분류</li>
<li>Topic Modeling: 텍스트 데이터를 분석하여 여러 Topic으로 Clustering 하는 작업</li>
</ul>
<p><strong>단어의 의미 기반</strong></p>
<ul>
<li>
<p>Semantic Analysis: 사람처럼 자연어를 이해하기</p>
<br>
</li>
</ul>
<h2 id="3-텍스트-데이터의-처리-방법"><a class="markdownIt-Anchor" href="#3-텍스트-데이터의-처리-방법"></a> <strong>3. 텍스트 데이터의 처리 방법</strong></h2>
<h3 id="3-1-bow-bag-of-words"><a class="markdownIt-Anchor" href="#3-1-bow-bag-of-words"></a> 3-1. BoW (Bag of Words)</h3>
<p><strong>단어 가방(Bag of Words) 모델</strong>은 문장의 문법 및 단어 순서를 무시하고 텍스트 문서를 "단어"로 변환한 후 다양한 측정 값을 계산할 수 있도록 "가방"형식으로 저장해놓는 겁니다.</p>
<p>단어 가방 모델에서 계산 된 가장 일반적인 유형의 특성 또는 기능은 <strong>용어 빈도</strong>, 즉 용어가 텍스트에 나타나는 횟수입니다.</p>
  <br>
<p>《기생충》중의 한 대사로 예를 들어 볼게요.</p>
<img src="https://s1.ax1x.com/2020/08/19/dloE0P.png" width="60%," height="60%">
<p>이 문장에서 “그”, “을”, "듯"과 같이 실질적인 의미가 없는 "불용어"를 제외하고 의미 있는 “형태소” 단어와 해당 형태소의 등장 횟수을 추출합니다.</p>
<p>그럼 다음과 같은 표로 요약할 수 있겠습니다.</p>
<img src="https://s1.ax1x.com/2020/08/19/dl7CqI.png" width="60%," height="60%">
<p>이것이 바로 "Bag of Words 모델"입니다.</p>
  <br>
<h3 id="3-2-문서-단어-행렬-document-term-matrix-dtm"><a class="markdownIt-Anchor" href="#3-2-문서-단어-행렬-document-term-matrix-dtm"></a> 3-2. 문서 단어 행렬 (Document-Term Matrix, DTM)</h3>
<p>위에 설명드린 Bag of Words는 한 문장에 대해 적용하는 것이고, 문장이 여러 개가 있을 때는 (DataFrame 형태) <strong>문서 단어 행렬 (Document-Term Matrix)</strong> 로 표현됩니다.</p>
<p>똑같이 《기생충》중의 대사들로 예를 들어 볼게요.</p>
<img src="https://s1.ax1x.com/2020/08/19/d1SKaQ.png" width="70%," height="70%">
<img src="https://s1.ax1x.com/2020/08/19/d1pLX6.png" width="90%," height="90%">
<p>이처럼 여러 문장의 경우에 "문서 단어 행렬"은 위와 같이 표현 됩니다.</p>
  <br>
<h3 id="3-3-단어의-중요도를-계산하는-방법-tf-idf"><a class="markdownIt-Anchor" href="#3-3-단어의-중요도를-계산하는-방법-tf-idf"></a> 3-3. 단어의 중요도를 계산하는 방법 (TF-IDF)</h3>
<p>문서 단어 행렬은 그저 단어의 등장 횟수를 단순히 세는 겁니다. 각 문장에서 어떤 단어가 중요한지 알 수 없습니다.<br>
이를 알아내기 위해 우리는 “TF-IDF (Term Frequency-Inverse Document Frequency)” 라는 지표를 사용합니다.</p>
  <br>
<ul>
<li>
<p><strong>TF (Term Frequency):</strong> 특정 문서에서 특정 단어의 등장 횟수</p>
</li>
<li>
<p><strong>DF (Document Frequency):</strong> 특정 단어가 등장한 문서의 수</p>
</li>
<li>
<p><strong>IDF (Inverse Document Frequency):</strong> DF와 반비례 값을 가지는 수식<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>d</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mi>n</mi><mrow><mn>1</mn><mo>+</mo><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">IDF(d,t) = \ln ( \frac{n}{1+DF(t)} )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.27em;vertical-align:-0.52em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><strong>TF-IDF (Term Frequency-Inverse Document Frequency):</strong> TF와 IDF를 곱한 값</p>
<br>
</li>
</ul>
<p><strong>TF-IDF로 특정 문서 안의 특정 단어의 중요도를 나타나는 원리는:</strong></p>
<p>특정 문서에서는 많이 등장했으면서 다른 문서에서 잘 등장하지 않은 단어가 결국 이 문서에서 가장 중요한 단어가 될것이다라는 가설입니다.</p>
  <br>
<p><strong>[예]</strong> 문서1에서 "아들"과 “계획” 이 두 단어의 TF-IDF를 한번 계산해봅시다.</p>
<img src="https://s1.ax1x.com/2020/08/19/d1u2eH.png" width="90%," height="90%">
<ul>
<li><strong>Step 1. TF</strong><br>
A: 1<br>
B: 1</li>
<li><strong>Step 2. DF</strong><br>
A: 1<br>
B: 3</li>
<li><strong>Step 3. IDF</strong><br>
A: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mrow><mn>1</mn><mo>+</mo><mn>1</mn></mrow></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mn>2</mn><mo>≈</mo><mn>0.6931</mn></mrow><annotation encoding="application/x-tex">\ln( \frac{4}{1+1} ) = \ln 2 \approx 0.6931</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">9</span><span class="mord">3</span><span class="mord">1</span></span></span></span><br>
B: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mrow><mn>1</mn><mo>+</mo><mn>3</mn></mrow></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\ln( \frac{4}{1+3} ) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
<li><strong>Step 4. TF-IDF</strong><br>
A: 1 * 0.6931 = 0.6931<br>
B: 1 * 0 = 0</li>
</ul>
<br>  
<p><strong>혜석:</strong></p>
<p>"계획"이라는 단어가 《기생충》의 문장들에서 너무 많이 등장해서 문서1에서 특별히 중요한 단어라고 볼 수 없다.</p>
<p>하지만 "아들"이라는 단어가 다른 문장에서 한번도 나타나지 않았기 때문에 문장1에서는 매우 중요하다고 볼 수 있다</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Text Mining</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Text Mining</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn -(0) sklearn 개요</title>
    <url>/2020/07/17/S-Python-sklearn0/</url>
    <content><![CDATA[<h1 id="scikit-learn-개요"><a class="markdownIt-Anchor" href="#scikit-learn-개요"></a> <strong>scikit-learn 개요</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#install-package"><strong>Install Package</strong></a></li>
<li><a href="#import-functions-from-sub-packages"><strong>Import Functions from Sub-packages</strong></a></li>
<li><a href="#3-steps-to-fit-model-and-do-prediction"><strong>3 Steps to Fit Model and Do Prediction</strong></a></li>
</ul>
<p></p>
<br>
<blockquote>
<p><a href="https://scikit-learn.org/stable/" target="_blank" rel="noopener">&lt; scikit-learn &gt; Homepage</a></p>
</blockquote>
<p>scikit-learn 패키지는 지도학습, 비지도학습 등 대부분의 머신러닝 알고리즘을 제공하고 있으며, Python에서 머신러닝을 수행할 때 굉장히 많이 쓰이는 패키지 중의 하나다</p>
<p><img src="/images/S-Python-sklearn0/NzXkk9.png" alt="sk_learn"></p>
  <br>
<h2 id="install-package"><a class="markdownIt-Anchor" href="#install-package"></a> <strong>Install Package</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install -U scikit-learn  <span class="comment"># -U: Update</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>Note: you may need to restart the kernel to use updated packages.
</code></pre>
<p>​</p>
<pre><code>Usage:   
  D:\Anaconda\python.exe -m pip install [options] &lt;requirement specifier&gt; [package-index-options] ...
  D:\Anaconda\python.exe -m pip install [options] -r &lt;requirements file&gt; [package-index-options] ...
  D:\Anaconda\python.exe -m pip install [options] [-e] &lt;vcs project url&gt; ...
  D:\Anaconda\python.exe -m pip install [options] [-e] &lt;local project path&gt; ...
  D:\Anaconda\python.exe -m pip install [options] &lt;archive url/path&gt; ...

no such option: -:
</code></pre>
<br>
<h2 id="import-functions-from-sub-packages"><a class="markdownIt-Anchor" href="#import-functions-from-sub-packages"></a> <strong>Import Functions from Sub-packages</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="3-steps-to-fit-model-and-do-prediction"><a class="markdownIt-Anchor" href="#3-steps-to-fit-model-and-do-prediction"></a> <strong>3 Steps to Fit Model and Do Prediction</strong></h2>
<p><strong>STEP 1. 모델 정의</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">model = LinearRegression()</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>STEP 2. 학습 (Fit in Training set)</strong></p>
<ul>
<li>명령어:  <em>model_name</em> <font color="red">.fit</font></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">model.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>STEP 3. 예측 (Predict in Test set)</strong></p>
<ul>
<li>명령어: <em>model_name</em> <font color="red">.predict</font></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Machine Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (5) 비지도 학습 (Unsupervised Learning)</title>
    <url>/2020/08/06/S-Python-sklearn5/</url>
    <content><![CDATA[<h1 id="비지도-학습-unsupervised-learning"><a class="markdownIt-Anchor" href="#비지도-학습-unsupervised-learning"></a> 비지도 학습 (Unsupervised Learning)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%B9%84%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5%EC%9D%98-%EA%B0%9C%EC%9A%94"><strong>1. 비지도 학습의 개요</strong></a></li>
<li><a href="#2-%EC%B0%A8%EC%9B%90-%EC%B6%95%EC%86%8C"><strong>2. 차원 축소</strong></a>
<ul>
<li><a href="#2-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A1%9C%EB%93%9C-iris-%EB%8D%B0%EC%9D%B4%ED%84%B0">2-1. 데이터 로드 (iris 데이터)</a></li>
<li><a href="#2-2-pca-%EC%B0%A8%EC%9B%90-%EC%B6%95%EC%86%8C">2-2. PCA 차원 축소</a></li>
<li><a href="#2-3-lda-%EC%B0%A8%EC%9B%90-%EC%B6%95%EC%86%8C">2-3. LDA 차원 축소</a></li>
<li><a href="#2-4-svd-%ED%8A%B9%EC%9D%B4%EA%B0%92-%EB%B6%84%ED%95%B4">2-4. SVD (특이값 분해)</a></li>
</ul>
</li>
<li><a href="#3-%EA%B5%B0%EC%A7%91%ED%99%94"><strong>3. 군집화</strong></a>
<ul>
<li><a href="#3-1-k-means-clustering">3-1. K-Means Clustering</a></li>
<li><a href="#3-2-dbscan">3-2. DBSCAN</a></li>
<li><a href="#3-3-%EC%8B%A4%EB%A3%A8%EC%97%A3-%EC%8A%A4%EC%BD%94%EC%96%B4-%EA%B5%B0%EC%A7%91%ED%99%94-%ED%8F%89%EA%B0%80">3-3. 실루엣 스코어 (군집화 평가)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-비지도-학습의-개요"><a class="markdownIt-Anchor" href="#1-비지도-학습의-개요"></a> <strong>1. 비지도 학습의 개요</strong></h2>
<p>비지도 학습 (Unsupervised Learning)은 기계 학습의 일종으로, 데이터가 어떻게 구성되어 있는지를 알아내는 문제의 범주에 속한다. 이 방법은 지도 학습 (Supervised Learning) 혹은 강화 학습 (Reinforcement Learning)과는 달리 <strong>입력값에 대한 목표치가 주어지지 않는다</strong></p>
<ul>
<li>
<p>차원 축소: PCA, LDA, SVD</p>
</li>
<li>
<p>군집화: KMeans Clustering, DBSCAN</p>
</li>
<li>
<p>군집화 평가</p>
<br>
</li>
</ul>
<h2 id="2-차원-축소"><a class="markdownIt-Anchor" href="#2-차원-축소"></a> <strong>2. 차원 축소</strong></h2>
<ul>
<li>feature의 갯수를 줄이는 것을 뛰어 넘어, 특징을 추출하는 역할응 하기도 함</li>
<li>계산 비용을 감소하는 효과</li>
<li>전반적인 데이터에 대한 이해도를 높이는 효과</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="2-1-데이터-로드-iris-데이터"><a class="markdownIt-Anchor" href="#2-1-데이터-로드-iris-데이터"></a> 2-1. 데이터 로드 (iris 데이터)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">iris = datasets.load_iris()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = iris[<span class="string">'data'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[5.1, 3.5, 1.4, 0.2],
       [4.9, 3. , 1.4, 0.2],
       [4.7, 3.2, 1.3, 0.2],
       [4.6, 3.1, 1.5, 0.2],
       [5. , 3.6, 1.4, 0.2]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame(data, columns = iris[<span class="string">'feature_names'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'target'</span>] = iris[<span class="string">'target'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="2-2-pca-차원-축소"><a class="markdownIt-Anchor" href="#2-2-pca-차원-축소"></a> 2-2. PCA 차원 축소</h3>
<blockquote>
<p>참고: <a href="https://excelsior-cjh.tistory.com/167" target="_blank" rel="noopener">PCA 원리 관련 블로그</a></p>
</blockquote>
<p>주성분 분석 (PCA, Principal Component Analysis) 는 선형 차원 축소 기법이다. 매우 인기 있게 사용되는 차원 축소 기법중 하나다.</p>
<p>PCA는 먼저 데이터에 가장 가까운 초평면(hyperplane)을 구한 다음, 데이터를 이 초평면에 투영(projection)시킨다. 주요 특징 중의 하나는 <strong>분산(variance)을 촤대한 보존</strong>한다는 점이다.</p>
<ul>
<li>
<p><strong>분산 보존</strong></p>
<p>PCA는 <strong>데이터의 분산이 최대</strong>가 되는 축을 찾는다. 즉, 원본 데이터셋과 투영된 데이터셋 간의 <strong>평균제곱거리</strong>를 <strong>최소화</strong>하는 축을 찾는다.</p>
</li>
<li>
<p><strong>PCA 실현 과정</strong></p>
<ol>
<li>학습 데이터셋에서 분산이 최대인 축(axis)을 찾는다</li>
<li>이렇게 찾은 첫 번째 축과 직교(orthogonal)하면서 분산이 최대인 두 번째 축을 찾는다</li>
<li>첫 번째 축과 두 번째 축에 직교하고 분산을 최대한 보존하는 세 번째 축을 찾는다</li>
<li><code>1~3</code>과 같은 방법으로 데이터셋의 차원(특성 수)만큼의 축을  찾는다</li>
</ol>
<p>이렇게 i-번째 축을 정의하는 **단위 벡터(unit vector)**를 i-번째 <strong>주성분</strong>(PC, Principle Component)이라고 한다.</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; sklearn에서 실현</strong></p>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html" target="_blank" rel="noopener">[sklearn.decomposition.<strong>PCA</strong>] Documnet</a></p>
<ul>
<li>
<p>n_components에 1보다 작은 값을 넣으면, 분산을 기준으로 차원 축소</p>
</li>
<li>
<p>n_components에 1보다 큰 값을 넣으면, 해당 값을 기준으로 feature를 축소</p>
<br>
</li>
</ul>
<p><strong>(1) 주성분 2개로 지정</strong> (n_components = 2)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모델 선언</span></span><br><span class="line">pca = PCA(n_components=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data scaling</span></span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># PCA 실행</span></span><br><span class="line">pca_data = pca.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data_scaled[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-0.90068117,  1.01900435, -1.34022653, -1.3154443 ],
       [-1.14301691, -0.13197948, -1.34022653, -1.3154443 ],
       [-1.38535265,  0.32841405, -1.39706395, -1.3154443 ],
       [-1.50652052,  0.09821729, -1.2833891 , -1.3154443 ],
       [-1.02184904,  1.24920112, -1.34022653, -1.3154443 ]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pca_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2.26470281,  0.4800266 ],
       [-2.08096115, -0.67413356],
       [-2.36422905, -0.34190802],
       [-2.29938422, -0.59739451],
       [-2.38984217,  0.64683538]])
</code></pre>
  <br>
<p>주성분에 따른 데이터 시각화</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.scatter(pca_data[:, <span class="number">0</span>], pca_data[:, <span class="number">1</span>], c=df[<span class="string">'target'</span>]) <span class="comment"># c: color 기준</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x201028bf148&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_39_1.png" alt="output_39_1"></p>
<br>
<p><strong>(2) 분산을 기준으로 차원축소</strong> (n_components &lt; 1)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pca2 = PCA(n_components=<span class="number">0.99</span>)</span><br><span class="line">pca_data2 = pca2.fit_transform(data_scaled)</span><br><span class="line">pca_data2[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2.26470281,  0.4800266 , -0.12770602],
       [-2.08096115, -0.67413356, -0.23460885],
       [-2.36422905, -0.34190802,  0.04420148],
       [-2.29938422, -0.59739451,  0.09129011],
       [-2.38984217,  0.64683538,  0.0157382 ]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">'3d'</span>)  <span class="comment"># Axe3D object</span></span><br><span class="line"></span><br><span class="line">sample_size = <span class="number">50</span></span><br><span class="line">ax.scatter(pca_data2[:,<span class="number">0</span>], pca_data2[:,<span class="number">1</span>], pca_data2[:,<span class="number">2</span>], alpha=<span class="number">0.6</span>, c=df[<span class="string">'target'</span>])</span><br><span class="line">plt.savefig(<span class="string">'./tmp.svg'</span>)</span><br><span class="line">plt.title(<span class="string">'ax.plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn5/output_43_0.png" alt="output_43_0"></p>
<br>
<h3 id="2-3-lda-차원-축소"><a class="markdownIt-Anchor" href="#2-3-lda-차원-축소"></a> 2-3. LDA 차원 축소</h3>
<blockquote>
<p>참고 블로그:</p>
<ol>
<li><a href="https://blog.naver.com/mo223772/222051769650" target="_blank" rel="noopener">차원 축소 - LDA(Linear Discriminant Analysis) 개요</a></li>
<li><a href="https://blog.naver.com/jaehong7719/221926671654" target="_blank" rel="noopener">머신러닝 기초9 - LDA (Linear Discriminant Analysis)</a></li>
</ol>
</blockquote>
<p>LDA (Linear Discriminant Analysis): 선형 판별 분석법 (PCA와 유사)</p>
<p>LDA는 클래스(Class)분리를 최대화하는 축을 찾기 위해 클래스 간 분산(between-class scatter)과 내분 분산(within-class scatter)의 비율을 최대화하는 방식으로 차원을 축소함.</p>
<p>즉, 클래스 간 분산은 최대한 크게 가져가고, 클래스 내부의 분산은 최대한 작게 가져가는 방식이다.</p>
<br>  
<p><strong>&gt;&gt; sklearn에서 실현</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.discriminant_analysis <span class="keyword">import</span> LinearDiscriminantAnalysis</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모델 선언</span></span><br><span class="line">lda = LinearDiscriminantAnalysis(n_components=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data scaling</span></span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># LDA 실행</span></span><br><span class="line">lda_data = lda.fit_transform(data_scaled, df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lda_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-8.06179978,  0.30042062],
       [-7.12868772, -0.78666043],
       [-7.48982797, -0.26538449],
       [-6.81320057, -0.67063107],
       [-8.13230933,  0.51446253]])
</code></pre>
<br>
<p>시각화</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># LDA</span></span><br><span class="line">plt.scatter(lda_data[:,<span class="number">0</span>], lda_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102cd5608&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_57_1.png" alt="output_57_1"></p>
<p>PCA 결과와 비교</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># PCA</span></span><br><span class="line">plt.scatter(pca_data[:,<span class="number">0</span>], pca_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102ba6908&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_59_1.png" alt="output_59_1"></p>
<br>
<h3 id="2-4-svd-특이값-분해"><a class="markdownIt-Anchor" href="#2-4-svd-특이값-분해"></a> 2-4. SVD (특이값 분해)</h3>
<blockquote>
<p><a href="https://ko.wikipedia.org/wiki/%ED%8A%B9%EC%9D%B4%EA%B0%92_%EB%B6%84%ED%95%B4" target="_blank" rel="noopener">위키문서</a></p>
</blockquote>
<p>SVD (Singular Value Decomposition):</p>
<ul>
<li>특이값 분해 기법이다</li>
<li>PCA와 유사한 차원 축소 기법이다</li>
<li>scikit-learn 패키지에서는 truncated SVD (aka LSA)을 사용한다</li>
<li>상품의 추천 시스템에도 활용되어지는 알고리즘 (추천시스템)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> TruncatedSVD</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svd = TruncatedSVD(n_components = <span class="number">2</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">svd_data = svd.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svd_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2.26470281,  0.4800266 ],
       [-2.08096115, -0.67413356],
       [-2.36422905, -0.34190802],
       [-2.29938422, -0.59739451],
       [-2.38984217,  0.64683538]])
</code></pre>
<br>  
<p>시각화</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SVD</span></span><br><span class="line">plt.scatter(svd_data[:,<span class="number">0</span>], svd_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102b2ed08&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_71_1.png" alt="output_71_1"></p>
<p>PCA &amp; LDA와 비교</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># PCA</span></span><br><span class="line">plt.scatter(pca_data[:,<span class="number">0</span>], pca_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102ad7d88&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_73_1.png" alt="output_73_1"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># LDA</span></span><br><span class="line">plt.scatter(lda_data[:,<span class="number">0</span>], lda_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102d43e08&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_74_1.png" alt="output_74_1"></p>
<br>
<br>
<h2 id="3-군집화"><a class="markdownIt-Anchor" href="#3-군집화"></a> <strong>3. 군집화</strong></h2>
<h3 id="3-1-k-means-clustering"><a class="markdownIt-Anchor" href="#3-1-k-means-clustering"></a> 3-1. K-Means Clustering</h3>
<blockquote>
<p><a href="https://ko.wikipedia.org/wiki/K-%ED%8F%89%EA%B7%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98" target="_blank" rel="noopener">위키문서</a></p>
</blockquote>
<p>군집화에서 가장 대중적으로 사용되는 알고리즘이다. centroid라는 중점을 기준으로 가강 가까운 포인트를 선택하는 군집화 기법이다</p>
<p><strong>원리:</strong> 주어진 데이터를 k개의 cluster로 묶는 방식, 거리 차이의 분산을 최소화하는 방식으로 동작.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://image.slidesharecdn.com/patternrecognitionbinoy-06-kmeansclustering-160317135729/95/pattern-recognition-binoy-k-means-clustering-13-638.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn5/output_81_0.jpg" alt="output_81_0"></p>
<br>
<p><strong>사용되는 예제</strong></p>
<ul>
<li>스팸 문자 분류</li>
<li>뉴스 기사 분류</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html" target="_blank" rel="noopener">[sklearn.cluster.<strong>KMeans</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kmeans = KMeans(n_clusters=<span class="number">3</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">cluster_data = kmeans.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">cluster_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[3.12119834, 0.21295824, 3.98940603],
       [2.6755083 , 0.99604549, 4.01793312],
       [2.97416665, 0.65198444, 4.19343668],
       [2.88014429, 0.9034561 , 4.19784749],
       [3.30022609, 0.40215457, 4.11157152]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kmeans.labels_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2,
       0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,
       2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2,
       2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(kmeans.labels_)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x201043c7fc8&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_88_1.png" alt="output_88_1"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2010301bec8&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_89_1.png" alt="output_89_1"></p>
<br>
<p>Hyper-parameter Tuning</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kmeans</span><br></pre></td></tr></tbody></table></figure>
<pre><code>KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init=10, n_jobs=None, precompute_distances='auto',
       random_state=None, tol=0.0001, verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># max_iter: maximum number of iterations for a single run</span></span><br><span class="line">kmeans2 = KMeans(n_clusters=<span class="number">3</span>, max_iter=<span class="number">500</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">cluster_data2 = kmeans2.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(kmeans2.labels_)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x20105525688&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_94_1.png" alt="output_94_1"></p>
<br>
<h3 id="3-2-dbscan"><a class="markdownIt-Anchor" href="#3-2-dbscan"></a> 3-2. DBSCAN</h3>
<p><strong>밀도 기반 클러스터링</strong><br>
(DBSCAN: Dencity-Based Spatial Clustering of Applications with Noise)</p>
<ul>
<li>밀도가 높은 부분을 클러스터링 하는 방식</li>
<li>어느 점을 기준으로 반경 x내에 점이 n개 이상 있으면 하나의 군집으로 인식하는 방식</li>
<li>KMeans 에서는 n_cluster의 갯수를 반드시 지정해 주어야 하나, DBSCAN에서는 필요없음</li>
<li>기하학적인 clustering도 잘 찾아냄</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://image.slidesharecdn.com/pydatanyc2015-151119175854-lva1-app6891/95/pydata-nyc-2015-automatically-detecting-outliers-with-datadog-26-638.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn5/output_98_0.jpg" alt="output_98_0"></p>
  <br>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html" target="_blank" rel="noopener">[sklearn.cluster.<strong>DBSCAN</strong>] Document</a></p>
<p><strong>주의:</strong> 변환 시 <code>fit_transform()</code>대신 <strong><code>fit_predict()</code></strong> 를 쓴다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> DBSCAN</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># eps: The maximum distance between two samples for one to be considered as in the neighborhoood of the other</span></span><br><span class="line">dbscan = DBSCAN(eps=<span class="number">0.7</span>, min_samples=<span class="number">2</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">dbscan_data = dbscan.fit_predict(data_scaled)</span><br><span class="line">dbscan_data</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1, -1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  2,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
      dtype=int64)
</code></pre>
 <br>   
<h3 id="3-3-실루엣-스코어-군집화-평가"><a class="markdownIt-Anchor" href="#3-3-실루엣-스코어-군집화-평가"></a> 3-3. 실루엣 스코어 (군집화 평가)</h3>
<p>클러스터링의 품질을 정량적으로 평가해 주는 지표</p>
<ul>
<li>1: 클러스터링의 품질이 좋다</li>
<li>0: 클러스터링의 품질이 안좋다 (클러스터링의 의미 없음)</li>
<li>음수: 잘못 분류됨</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> silhouette_samples, silhouette_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">score = silhouette_score(data_scaled, kmeans.labels_)</span><br><span class="line">score</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.45994823920518635
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">samples = silhouette_samples(data_scaled, kmeans.labels_)</span><br><span class="line">samples[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0.73419485, 0.56827391, 0.67754724, 0.62050159, 0.72847412])
</code></pre>
<br>
<p><a href="https://scikit-learn.org/stable/auto_examples/cluster/plot_kmeans_silhouette_analysis.html" target="_blank" rel="noopener">silhouette analysis 시각화 Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_silhouette</span><span class="params">(X, num_cluesters)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> n_clusters <span class="keyword">in</span> num_cluesters:</span><br><span class="line">        <span class="comment"># Create a subplot with 1 row and 2 columns</span></span><br><span class="line">        fig, (ax1, ax2) = plt.subplots(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">        fig.set_size_inches(<span class="number">18</span>, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># The 1st subplot is the silhouette plot</span></span><br><span class="line">        <span class="comment"># The silhouette coefficient can range from -1, 1 but in this example all</span></span><br><span class="line">        <span class="comment"># lie within [-0.1, 1]</span></span><br><span class="line">        ax1.set_xlim([<span class="number">-0.1</span>, <span class="number">1</span>])</span><br><span class="line">        <span class="comment"># The (n_clusters+1)*10 is for inserting blank space between silhouette</span></span><br><span class="line">        <span class="comment"># plots of individual clusters, to demarcate them clearly.</span></span><br><span class="line">        ax1.set_ylim([<span class="number">0</span>, len(X) + (n_clusters + <span class="number">1</span>) * <span class="number">10</span>])</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># Initialize the clusterer with n_clusters value and a random generator</span></span><br><span class="line">        <span class="comment"># seed of 10 for reproducibility.</span></span><br><span class="line">        clusterer = KMeans(n_clusters=n_clusters, random_state=<span class="number">10</span>)</span><br><span class="line">        cluster_labels = clusterer.fit_predict(X)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># The silhouette_score gives the average value for all the samples.</span></span><br><span class="line">        <span class="comment"># This gives a perspective into the density and separation of the formed</span></span><br><span class="line">        <span class="comment"># clusters</span></span><br><span class="line">        silhouette_avg = silhouette_score(X, cluster_labels)</span><br><span class="line">        print(<span class="string">"For n_clusters ="</span>, n_clusters,</span><br><span class="line">              <span class="string">"The average silhouette_score is :"</span>, silhouette_avg)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># Compute the silhouette scores for each sample</span></span><br><span class="line">        sample_silhouette_values = silhouette_samples(X, cluster_labels)</span><br><span class="line">    </span><br><span class="line">        y_lower = <span class="number">10</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n_clusters):</span><br><span class="line">            <span class="comment"># Aggregate the silhouette scores for samples belonging to</span></span><br><span class="line">            <span class="comment"># cluster i, and sort them</span></span><br><span class="line">            ith_cluster_silhouette_values = \</span><br><span class="line">                sample_silhouette_values[cluster_labels == i]</span><br><span class="line">    </span><br><span class="line">            ith_cluster_silhouette_values.sort()</span><br><span class="line">    </span><br><span class="line">            size_cluster_i = ith_cluster_silhouette_values.shape[<span class="number">0</span>]</span><br><span class="line">            y_upper = y_lower + size_cluster_i</span><br><span class="line">    </span><br><span class="line">            color = cm.nipy_spectral(float(i) / n_clusters)</span><br><span class="line">            ax1.fill_betweenx(np.arange(y_lower, y_upper),</span><br><span class="line">                              <span class="number">0</span>, ith_cluster_silhouette_values,</span><br><span class="line">                              facecolor=color, edgecolor=color, alpha=<span class="number">0.7</span>)</span><br><span class="line">    </span><br><span class="line">            <span class="comment"># Label the silhouette plots with their cluster numbers at the middle</span></span><br><span class="line">            ax1.text(<span class="number">-0.05</span>, y_lower + <span class="number">0.5</span> * size_cluster_i, str(i))</span><br><span class="line">    </span><br><span class="line">            <span class="comment"># Compute the new y_lower for next plot</span></span><br><span class="line">            y_lower = y_upper + <span class="number">10</span>  <span class="comment"># 10 for the 0 samples</span></span><br><span class="line">    </span><br><span class="line">        ax1.set_title(<span class="string">"The silhouette plot for the various clusters."</span>)</span><br><span class="line">        ax1.set_xlabel(<span class="string">"The silhouette coefficient values"</span>)</span><br><span class="line">        ax1.set_ylabel(<span class="string">"Cluster label"</span>)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># The vertical line for average silhouette score of all the values</span></span><br><span class="line">        ax1.axvline(x=silhouette_avg, color=<span class="string">"red"</span>, linestyle=<span class="string">"--"</span>)</span><br><span class="line">    </span><br><span class="line">        ax1.set_yticks([])  <span class="comment"># Clear the yaxis labels / ticks</span></span><br><span class="line">        ax1.set_xticks([<span class="number">-0.1</span>, <span class="number">0</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">0.6</span>, <span class="number">0.8</span>, <span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 2nd Plot showing the actual clusters formed</span></span><br><span class="line">        colors = cm.nipy_spectral(cluster_labels.astype(float) / n_clusters)</span><br><span class="line">        ax2.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], marker=<span class="string">'.'</span>, s=<span class="number">30</span>, lw=<span class="number">0</span>, alpha=<span class="number">0.7</span>,</span><br><span class="line">                    c=colors, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># Labeling the clusters</span></span><br><span class="line">        centers = clusterer.cluster_centers_</span><br><span class="line">        <span class="comment"># Draw white circles at cluster centers</span></span><br><span class="line">        ax2.scatter(centers[:, <span class="number">0</span>], centers[:, <span class="number">1</span>], marker=<span class="string">'o'</span>,</span><br><span class="line">                    c=<span class="string">"white"</span>, alpha=<span class="number">1</span>, s=<span class="number">200</span>, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> i, c <span class="keyword">in</span> enumerate(centers):</span><br><span class="line">            ax2.scatter(c[<span class="number">0</span>], c[<span class="number">1</span>], marker=<span class="string">'$%d$'</span> % i, alpha=<span class="number">1</span>,</span><br><span class="line">                        s=<span class="number">50</span>, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    </span><br><span class="line">        ax2.set_title(<span class="string">"The visualization of the clustered data."</span>)</span><br><span class="line">        ax2.set_xlabel(<span class="string">"Feature space for the 1st feature"</span>)</span><br><span class="line">        ax2.set_ylabel(<span class="string">"Feature space for the 2nd feature"</span>)</span><br><span class="line">    </span><br><span class="line">        plt.suptitle((<span class="string">"Silhouette analysis for KMeans clustering on sample data "</span></span><br><span class="line">                      <span class="string">"with n_clusters = %d"</span> % n_clusters),</span><br><span class="line">                     fontsize=<span class="number">14</span>, fontweight=<span class="string">'bold'</span>)</span><br><span class="line">    </span><br><span class="line">        plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_silhouette(data_scaled, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>For n_clusters = 2 The average silhouette_score is : 0.5817500491982808
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_1.png" alt="output_112_1"></p>
<pre><code>For n_clusters = 3 The average silhouette_score is : 0.45994823920518635
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_3.png" alt="output_112_3"></p>
<pre><code>For n_clusters = 4 The average silhouette_score is : 0.4188923398171004
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_5.png" alt="output_112_5"></p>
<pre><code>For n_clusters = 5 The average silhouette_score is : 0.34551099599809465
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_7.png" alt="output_112_7"></p>
<ul>
<li>빨간 점선은 평균 실루엣 계수를 의미함</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Machine Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>비지도 학습</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 집계 함수 (1) -- 기초 집계 함수</title>
    <url>/2020/11/12/S-SQL-Aggregate-1/</url>
    <content><![CDATA[<h1 id="집계-함수-1-기초-집계-함수"><a class="markdownIt-Anchor" href="#집계-함수-1-기초-집계-함수"></a> 집계 함수 (1) – 기초 집계 함수</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-group-by-%EC%A0%88"><strong>1. GROUP BY 절</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-group-by-%EC%A0%88-%EB%AC%B8%EB%B2%95">1-2. GROUP BY 절 문법</a></li>
<li><a href="#1-3-group-by-%EC%A0%88-%EC%8B%A4%EC%8A%B5">1-3. GROUP BY 절 실습</a>
<ul>
<li><a href="#1-3-0-%EC%8B%A4%EC%8A%B5-%EB%8D%B0%EC%9D%B4%ED%84%B0">1-3-0. 실습 데이터</a></li>
<li><a href="#1-3-1-%EB%8B%A8%EC%88%9C-group-by">1-3-1. 단순 GROUP BY</a></li>
<li><a href="#1-3-2-grouping-group-%EB%B3%84-%EC%9A%94%EC%95%BD">1-3-2. GROUPING + GROUP 별 요약</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-having-%EC%A0%88"><strong>2. HAVING 절</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-having-%EC%A0%88-%EB%AC%B8%EB%B2%95">2-2. HAVING 절 문법</a></li>
<li><a href="#2-3-having-%EC%A0%88-%EC%8B%A4%EC%8A%B5">2-3. HAVING 절 실습</a>
<ul>
<li><a href="#2-3-1-group-by-%ED%95%A9%EA%B3%84-having">2-3-1. GROUP BY  “합계” + HAVING</a></li>
<li><a href="#2-3-2-group-by-%EC%B9%B4%EC%9A%B4%ED%8A%B8-having">2-3-2. GROUP BY “카운트” + HAVING</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-group-by-절"><a class="markdownIt-Anchor" href="#1-group-by-절"></a> <strong>1. GROUP BY 절</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>GROUP BY 절은 SELECT 문에서 반환된 행을 그룹으로 나눈다. 각 그룹에 대한 합계, 평균, 카운트 등을 계산할 수 있다.</p>
<br>
<h3 id="1-2-group-by-절-문법"><a class="markdownIt-Anchor" href="#1-2-group-by-절-문법"></a> 1-2. GROUP BY 절 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  COLUMN_1,          <span class="comment">-- GROUPING 기준 컬럼 기재</span></span><br><span class="line">  집계함수(COLUMN2)   <span class="comment">-- 집계함수 사용하여 그룹별 요약값 도출</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> COLUMN_1;  <span class="comment">-- GROUP BY 절 기재, N개의 컬럼을 GROUP BY 하는 경우 ','구분</span></span><br><span class="line">                    <span class="comment">-- GROUP BY 절은 FROM 또는 WHERE절 바로 뒤에 나타나야 함</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-3-group-by-절-실습"><a class="markdownIt-Anchor" href="#1-3-group-by-절-실습"></a> 1-3. GROUP BY 절 실습</h3>
<h4 id="1-3-0-실습-데이터"><a class="markdownIt-Anchor" href="#1-3-0-실습-데이터"></a> 1-3-0. 실습 데이터</h4>
<p><strong>&gt;&gt; “dvdrental” 데이터 --&gt; “payment” 테이블</strong></p>
<img src="/images/S-SQL-Aggregate-1/image-20201112164755594.png" alt="image-20201112164755594" style="zoom:80%;">
<br>
<h4 id="1-3-1-단순-group-by"><a class="markdownIt-Anchor" href="#1-3-1-단순-group-by"></a> 1-3-1. 단순 GROUP BY</h4>
<p><strong>&gt;&gt; 특정 컬럼의 UNIQUE VALUE를 추출할 때 쓰이다</strong> (SELECT DISTINCT과 유사)</p>
<p><strong>[MISSION]</strong> 중복 값이 제거된 CUSTOMER_ID를 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- GROUP BY 사용</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  CUSTOMER_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-1/image-20201112170115424.png" alt="image-20201112170115424" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- [대체] SELECT DISTINCT 사용</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">DISTINCT</span>  CUSTOMER_ID</span><br><span class="line"><span class="keyword">FROM</span> PAYMENT;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="1-3-2-grouping-group-별-요약"><a class="markdownIt-Anchor" href="#1-3-2-grouping-group-별-요약"></a> 1-3-2. GROUPING + GROUP 별 요약</h4>
<p><strong>1) 합계 구하기</strong></p>
<p><strong>[MISSION]</strong> 거래액이 (AMOUNT의 합계) 가장 많은 고객순으로 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 거래액이 (AMOUNT의 합계) 가장 많은 고객순으로 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME,</span><br><span class="line">  <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  CUSTOMER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> AMOUNT_SUM <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-1/image-20201112171724011.png" alt="image-20201112171724011" style="zoom:80%;">
<br>
<p><strong>2) 카운트 구하기</strong></p>
<p><strong>[MISSION 1]</strong> 직원별 처리한 결제 건수 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 직원별 처리한 결제 건수 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  STAFF_ID,</span><br><span class="line">  <span class="keyword">COUNT</span>(PAYMENT_ID) <span class="keyword">AS</span> N_PAYMENT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  STAFF_ID;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-1/image-20201112173013752.png" alt="image-20201112173013752"></p>
<br>
<p><strong>[MISSION 2]</strong> STAFF 테이블에 있는 직원 이름 (FIRST_NAME, LAST_NAME)도 함께 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- STAFF 테이블에 있는 직원 이름 (FIRST_NAME, LAST_NAME)도 함께 추출</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.STAFF_ID, </span><br><span class="line">  A.FIRST_NAME,</span><br><span class="line">  A.LAST_NAME,</span><br><span class="line">  <span class="keyword">COUNT</span>(B.PAYMENT_ID) <span class="keyword">AS</span> N_PAYMENT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  STAFF A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PAYMENT B</span><br><span class="line"><span class="keyword">ON</span> A.STAFF_ID = B.STAFF_ID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span>            <span class="comment">-- [주의]: SELECT 문에서 집계함수를 제외한 모든 컬럼명을 GROUP BY에서 적어야 함 </span></span><br><span class="line">  A.STAFF_ID,</span><br><span class="line">  B.STAFF_ID,</span><br><span class="line">  A.FIRST_NAME,</span><br><span class="line">  A.LAST_NAME;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-1/image-20201112184417882.png" alt="image-20201112184417882" style="zoom:80%;">
<br>
<img src="/images/S-SQL-Aggregate-1/image-20201112185119399.png" alt="image-20201112185119399">
<br>
<br>
<h2 id="2-having-절"><a class="markdownIt-Anchor" href="#2-having-절"></a> <strong>2. HAVING 절</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>HAVING 절은 GROUP BY 절과 함께 사용하여 GROUP BY의 결과를 특정 조건으로 필터링하는 기능을 한다.</p>
<br>
<h3 id="2-2-having-절-문법"><a class="markdownIt-Anchor" href="#2-2-having-절-문법"></a> 2-2. HAVING 절 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  COLUMN_1,           <span class="comment">-- GROUPING 기준 컬럼 기재</span></span><br><span class="line">  집계함수(COLUMN_2)   <span class="comment">-- 집계함수 사용하여 그룹별 요약값 도출</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span>             <span class="comment">-- GROUP BY 절 기재, N개의 컬럼을 GROUP BY 하는 경우 ','구분</span></span><br><span class="line">  COLUMN_1           <span class="comment">-- GROUP BY 절은 FROM 또는 WHERE절 바로 뒤에 나타나야 함</span></span><br><span class="line"><span class="keyword">HAVING</span> 조건식;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>HAVING 절은 GROUP BY 절에 의해 생성된 그룹행의 조건을 설정한다</li>
<li>반면에 WHERE 절은 GROUP BY 절이 적용된기 전에 개별 행의 조건을 설정한다</li>
</ul>
<br>
<h3 id="2-3-having-절-실습"><a class="markdownIt-Anchor" href="#2-3-having-절-실습"></a> 2-3. HAVING 절 실습</h3>
<h4 id="2-3-1-group-by-합계-having"><a class="markdownIt-Anchor" href="#2-3-1-group-by-합계-having"></a> 2-3-1. GROUP BY  “합계” + HAVING</h4>
<p><strong>[GROUP BY 결과 출력]</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 거래액이 (AMOUNT의 합계) 가장 많은 고객순으로 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  CUSTOMER_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-1/image-20201112191152327.png" alt="image-20201112191152327" style="zoom:80%;">
<br>
<br>
<p><strong>[MISSION 1]</strong>  GROUP BY의 결과 값 중에서 AMOUNT_SUM이 200을 초과하는 행 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- AMOUNT_SUM &gt; 200</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  <span class="keyword">SUM</span>(AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  CUSTOMER_ID</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">  <span class="keyword">SUM</span>(AMOUNT) &gt; <span class="number">200</span>;  <span class="comment">-- [주의]: 여기서 SUM(AMOUNT)의 ALIAS(별칭)을 쓰면 안됨.</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>주의:</strong> HAVING 절 뒤에 집계 데이터의 별칭(ALIAS)을 쓰면 안됨. (The HAVING clause is evaluated before the SELECT - so the server doesn’t yet know about that alias.)</li>
</ul>
<p><img src="/images/S-SQL-Aggregate-1/image-20201112192700072.png" alt="image-20201112192700072"></p>
<br>
<br>
<p><strong>[MISSION 2]</strong>  CUSTOMER 테이블에 있는 고객 이메일 주소 (EMAIL)도 함께 추출</p>
<img src="/images/S-SQL-Aggregate-1/image-20201112194907662.png" alt="image-20201112194907662" style="zoom:80%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  A.CUSTOMER_ID,</span><br><span class="line">  B.EMAIL,</span><br><span class="line">  <span class="keyword">SUM</span>(A.AMOUNT) <span class="keyword">AS</span> AMOUNT_SUM</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT A, </span><br><span class="line">  CUSTOMER B</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  A.CUSTOMER_ID = B.CUSTOMER_ID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  A.CUSTOMER_ID,</span><br><span class="line">  B.EMAIL</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">  <span class="keyword">SUM</span>(A.AMOUNT) &gt; <span class="number">200</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-1/image-20201112195342549.png" alt="image-20201112195342549"></p>
<br>
<br>
<h4 id="2-3-2-group-by-카운트-having"><a class="markdownIt-Anchor" href="#2-3-2-group-by-카운트-having"></a> 2-3-2. GROUP BY “카운트” + HAVING</h4>
<img src="/images/S-SQL-Aggregate-1/image-20201112200641600.png" alt="image-20201112200641600" style="zoom:80%;">
<br>
<br>
<p><strong>[GROUP BY 결과 출력]</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 매장(STORE)별 구매 고객 수 추출</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  STORE_ID,</span><br><span class="line">  <span class="keyword">COUNT</span>(CUSTOMER_ID) <span class="keyword">AS</span> N_CUSTOMER</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  STORE_ID;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-1/image-20201112201143045.png" alt="image-20201112201143045"></p>
<br>
<p><strong>[MISSION]</strong>  구매 고객 수가 300 이상인 매장만 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- N_CUSTOMER &gt; 300</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  STORE_ID,</span><br><span class="line">  <span class="keyword">COUNT</span>(CUSTOMER_ID) <span class="keyword">AS</span> N_CUSTOMER</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  STORE_ID</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">  <span class="keyword">COUNT</span>(CUSTOMER_ID) &gt; <span class="number">300</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-1/image-20201112201350582.png" alt="image-20201112201350582"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 해당 매장 정보 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  <span class="keyword">STORE</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  STORE_ID = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-1/image-20201112201557040.png" alt="image-20201112201557040"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 4. Aggregate Function</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Aggregate</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (1) 전처리</title>
    <url>/2020/07/17/S-Python-sklearn1/</url>
    <content><![CDATA[<h1 id="전처리-pre-processing"><a class="markdownIt-Anchor" href="#전처리-pre-processing"></a> <strong>전처리 (Pre-Processing)</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#%EA%B0%9C%EC%9A%94"><strong>개요</strong></a>
<ul>
<li><a href="#1-%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%98-%EC%A0%95%EC%9D%98">1. 전처리의 정의</a></li>
<li><a href="#2-%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%98-%EC%A2%85%EB%A5%98">2. 전처리의 종류</a></li>
</ul>
</li>
<li><a href="#%EC%8B%A4%EC%8A%B5-titanic"><strong>실습 – Titanic</strong></a>
<ul>
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B-%ED%8C%8C%EC%95%85">0. 데이터 셋 파악</a></li>
<li><a href="#1-train-validation-%EC%85%8B-%EB%82%98%EB%88%84%EA%B8%B0">1. train / validation 셋 나누기</a></li>
<li><a href="#2-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2. 결측치 처리</a>
<ul>
<li><a href="#2-0-%EA%B2%B0%EC%B8%A1%EC%B9%98-%ED%99%95%EC%9D%B8">2-0. 결측치 확인</a></li>
<li><a href="#2-1-numerical-column%EC%9D%98-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2-1. Numerical Column의 결측치 처리</a></li>
<li><a href="#2-2-categorical-column%EC%9D%98-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2-2. Categorical Column의 결측치 처리</a></li>
</ul>
</li>
<li><a href="#3-label-encoding-%EB%AC%B8%EC%9E%90categorivcal%EB%A5%BC-%EC%88%98%EC%B9%98numerical%EB%A1%9C-%EB%B3%80%ED%99%98">3. Label Encoding: 문자(categorivcal)를 수치(numerical)로 변환</a></li>
<li><a href="#4-%EC%9B%90-%ED%95%AB-%EC%9D%B8%EC%BD%94%EB%94%A9-one-hot-encoding">4. 원 핫 인코딩 (One Hot Encoding)</a></li>
<li><a href="#5-normalize-%EC%A0%95%EA%B7%9C%ED%99%94">5. Normalize (정규화)</a></li>
<li><a href="#6-standard-scaling-%ED%91%9C%EC%A4%80%ED%99%94">6. Standard Scaling (표준화)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="개요"><a class="markdownIt-Anchor" href="#개요"></a> <strong>개요</strong></h2>
<h3 id="1-전처리의-정의"><a class="markdownIt-Anchor" href="#1-전처리의-정의"></a> 1. 전처리의 정의</h3>
<p><strong>데이터 전처리</strong>는 데이터 분석에 적합하게 데이터를 <strong>가공/ 변경/ 처리/ 클리닝</strong>하는 과정이다</p>
  <br>
<h3 id="2-전처리의-종류"><a class="markdownIt-Anchor" href="#2-전처리의-종류"></a> 2. 전처리의 종류</h3>
<ol>
<li>
<p><strong>결측치</strong> - Imputer</p>
</li>
<li>
<p><strong>이상치</strong></p>
</li>
<li>
<p><strong>정규화 (Normalization)</strong></p>
<ul>
<li>0~1사이의 분포로 조정</li>
<li><font size="4"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_{new} = \frac{x-x_{min}}{x_{max}-x_{min}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.263531em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></font></li>
</ul>
</li>
<li>
<p><strong>표준화 (Standardization)</strong></p>
<ul>
<li>평균을 0, 표준편차를 1로 맞춤</li>
<li><font size="4"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding="application/x-tex">x_{new} = \frac{x-\mu}{\sigma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199439em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></font></li>
</ul>
</li>
<li>
<p><strong>샘플링 (over/under sampling)</strong></p>
</li>
<li>
<p><strong>피처 공학 (Feature Engineering)</strong></p>
<ul>
<li>feature 생성/ 연산</li>
<li>구간 생성, 스케일 변경</li>
</ul>
</li>
</ol>
<p><br>  <br></p>
<h2 id="실습-titanic"><a class="markdownIt-Anchor" href="#실습-titanic"></a> <strong>실습 – Titanic</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br><span class="line">test = pd.read_csv(<span class="string">'test.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="0-데이터-셋-파악"><a class="markdownIt-Anchor" href="#0-데이터-셋-파악"></a> 0. 데이터 셋 파악</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<ul>
<li>
<p>PassengerId: 승객 아이디</p>
</li>
<li>
<p>Survived: 생존 여부, 1: 생존, 0: 사망</p>
</li>
<li>
<p>Pclass: 등급</p>
</li>
<li>
<p>Name: 성함</p>
</li>
<li>
<p>Sex: 성별</p>
</li>
<li>
<p>Age: 나이</p>
</li>
<li>
<p>SibSp: 형제, 자매, 배우자 수</p>
</li>
<li>
<p>Parch: 부모, 자식 수</p>
</li>
<li>
<p>Ticket: 티켓번호</p>
</li>
<li>
<p>Fare: 요즘</p>
</li>
<li>
<p>Cabin: 좌석번호</p>
</li>
<li>
<p>Embarked: 탑승 항구</p>
<br>
<br>
</li>
</ul>
<h3 id="1-train-validation-셋-나누기"><a class="markdownIt-Anchor" href="#1-train-validation-셋-나누기"></a> 1. train / validation 셋 나누기</h3>
<p><strong>STEP 1. feature &amp; label 정의하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">feature = [</span><br><span class="line">    <span class="string">'Pclass'</span>, <span class="string">'Sex'</span>, <span class="string">'Age'</span>, <span class="string">'Fare'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">label = [</span><br><span class="line">    <span class="string">'Survived'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[feature].head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Pclass</th>
      <th>Sex</th>
      <th>Age</th>
      <th>Fare</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>7.2500</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>71.2833</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>7.9250</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>53.1000</td>
    </tr>
    <tr>
      <th>4</th>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>8.0500</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[label].head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Survived</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>STEP 2. 적절한 비율로 train / validation set 나누기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html" target="_blank" rel="noopener">&lt; train_test_split &gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>train_test_split</strong> ( <em>X, y, test_size=…, random_state=…, shuffle=True</em> )</p>
<ul>
<li><strong>test_size:</strong> validation set에 할당할 비율 (20% -&gt; 0.2)</li>
<li><strong>random_state:</strong> random seed 설정</li>
<li><strong>shuffle:</strong> 기본 True: shuffle the data before splitting</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(train[feature], train[label], test_size=<span class="number">0.2</span>, random_state=<span class="number">30</span>, shuffle=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((712, 4), (712, 1))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((179, 4), (179, 1))
</code></pre>
<p><br> <br></p>
<h3 id="2-결측치-처리"><a class="markdownIt-Anchor" href="#2-결측치-처리"></a> 2. 결측치 처리</h3>
<h4 id="2-0-결측치-확인"><a class="markdownIt-Anchor" href="#2-0-결측치-확인"></a> 2-0. 결측치 확인</h4>
<p><strong>방법 1.</strong> pandas의 <code>info()</code></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>방법 2.</strong> pandas의 <code>isnull()</code><br>
합계를 구하는 sum()을 통해 한 눈에 확인할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>PassengerId      0
Survived         0
Pclass           0
Name             0
Sex              0
Age            177
SibSp            0
Parch            0
Ticket           0
Fare             0
Cabin          687
Embarked         2
dtype: int64
</code></pre>
<p>개별 column의 결측치 확인하기</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>177
</code></pre>
<br>  
<h4 id="2-1-numerical-column의-결측치-처리"><a class="markdownIt-Anchor" href="#2-1-numerical-column의-결측치-처리"></a> 2-1. Numerical Column의 결측치 처리</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>1. Pandas의 <font color="blue">"fillna()"</font>를 사용</strong>: 1개의 column을 처리할 때</p>
<p><strong>a. 숫자"0"으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].fillna(<span class="number">0</span>).describe()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>count    891.000000
mean      23.799293
std       17.596074
min        0.000000
25%        6.000000
50%       24.000000
75%       35.000000
max       80.000000
Name: Age, dtype: float64
</code></pre>
 <br> 
<p><strong>b. 통계값(평균)으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].fillna(train[<span class="string">'Age'</span>].mean()).describe()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>count    891.000000
mean      29.699118
std       13.002015
min        0.420000
25%       22.000000
50%       29.699118
75%       35.000000
max       80.000000
Name: Age, dtype: float64
</code></pre>
 <br> 
<p><strong>2. sklearn의 <font color="blue">"SimpleImputer"</font>를 사용</strong>: 2개 이상의 column을 한 번에 처리할 때</p>
<blockquote>
<p><em><strong>reference:</strong></em></p>
<ol>
<li><a href="https://scikit-learn.org/stable/modules/impute.html" target="_blank" rel="noopener">Impute 도큐먼트</a></li>
<li><a href="https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html" target="_blank" rel="noopener">SimplrImputer 도큐먼트</a></li>
</ol>
</blockquote>
<blockquote>
<p><strong>SimpleImputer</strong>( <em>*, missing_values=nan, strategy=‘mean’, fill_value=None, verbose=0, copy=True, add_indicator=False</em> )</p>
<ul>
<li>strategy: “mean” / “median” / “most_frequent” / “constant”</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.impute <span class="keyword">import</span> SimpleImputer</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>a. 숫자"0"으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 1. imputer 만들기</span></span><br><span class="line">imputer = SimpleImputer(strategy=<span class="string">'constant'</span>, fill_value=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 2. fit() 을 통해 결측치에 대한 학습을 진행하기</span></span><br><span class="line">imputer.fit(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>SimpleImputer(add_indicator=False, copy=True, fill_value=0, missing_values=nan,
              strategy='constant', verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 3. transform() 을 통해 실제 결측치에 대해 처리하기</span></span><br><span class="line">result = imputer.transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br><span class="line">result</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22.,  3.],
       [38.,  1.],
       [26.,  3.],
       ...,
       [ 0.,  3.],
       [26.,  1.],
       [32.,  3.]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 4. 처리 결과를 original data에 대입</span></span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       0
Pclass    0
dtype: int64
</code></pre>
<br>  
<p><strong>fit_transform()</strong> 은 fit()과 transform()을 한 번에 해주는 합수다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       177
Pclass      0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 1. imputer 만들기</span></span><br><span class="line">imputer = SimpleImputer(strategy=<span class="string">'constant'</span>, fill_value=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 2. fit and transform</span></span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 3. 결과 대입</span></span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       0
Pclass    0
dtype: int64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Age</th>
      <th>Pclass</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>891.000000</td>
      <td>891.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>23.799293</td>
      <td>2.308642</td>
    </tr>
    <tr>
      <th>std</th>
      <td>17.596074</td>
      <td>0.836071</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>6.000000</td>
      <td>2.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>24.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>35.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>80.000000</td>
      <td>3.000000</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>b. 통계값(평균)으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       177
Pclass      0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">imputer = SimpleImputer(strategy=<span class="string">'mean'</span>)</span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       0
Pclass    0
dtype: int64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Age</th>
      <th>Pclass</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>891.000000</td>
      <td>891.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>29.699118</td>
      <td>2.308642</td>
    </tr>
    <tr>
      <th>std</th>
      <td>13.002015</td>
      <td>0.836071</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.420000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>22.000000</td>
      <td>2.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>29.699118</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>35.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>80.000000</td>
      <td>3.000000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h4 id="2-2-categorical-column의-결측치-처리"><a class="markdownIt-Anchor" href="#2-2-categorical-column의-결측치-처리"></a> 2-2. Categorical Column의 결측치 처리</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>1. Pandas의 <font color="blue">"fillna()"</font>를 사용</strong>: 1개의 column을 처리할 때</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      S
1      C
2      S
3      S
4      S
      ..
886    S
887    S
888    S
889    C
890    Q
Name: Embarked, Length: 891, dtype: object
</code></pre>
<br>
<p><strong>2. sklearn의 <font color="blue">"SimpleImputer"</font>를 사용</strong>: 2개 이상의 column을 한 번에 처리할 때</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">imputer = SimpleImputer(strategy = <span class="string">'most_frequent'</span>)</span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]])</span><br><span class="line">train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Embarked    0
Cabin       0
dtype: int64
</code></pre>
<p><br>  <br></p>
<h3 id="3-label-encoding-문자categorivcal를-수치numerical로-변환"><a class="markdownIt-Anchor" href="#3-label-encoding-문자categorivcal를-수치numerical로-변환"></a> 3. Label Encoding: 문자(categorivcal)를 수치(numerical)로 변환</h3>
<p>기계학습을 위해서 모든 <strong>문자</strong>로된 데이터는 <strong>수치로 변환</strong>해야 한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0        male
1      female
2      female
3      female
4        male
        ...  
886      male
887    female
888    female
889      male
890      male
Name: Sex, Length: 891, dtype: object
</code></pre>
<br>
<p><strong>방법 1: convert함수를 직접 정의하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>male      577
female    314
Name: Sex, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 1. 함수 정의</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">'female'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> data == <span class="string">'male'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 2. 함수 apply</span></span><br><span class="line">train[<span class="string">'Sex'</span>].apply(convert)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      0
1      1
2      1
3      1
4      0
      ..
886    0
887    1
888    1
889    0
890    0
Name: Sex, Length: 891, dtype: int64
</code></pre>
  <br>
<p><strong>방법 2: sklearn의 <font color="blue">“LabelEncoder”</font> 사용</strong></p>
<ul>
<li>변환 규칙: value name의 <strong>alphabet 순서대로</strong> 0, 1, 2… 숫자를 부여</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>male      577
female    314
Name: Sex, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">le = LabelEncoder()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex_num'</span>] = le.fit_transform(train[<span class="string">'Sex'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex_num'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    577
0    314
Name: Sex_num, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># class 확인</span></span><br><span class="line">le.classes_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['female', 'male'], dtype=object)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 숫자 -&gt; 문자</span></span><br><span class="line">le.inverse_transform([<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['female', 'male', 'male', 'female', 'female', 'male', 'male'],
      dtype=object)
</code></pre>
<br>  
<p>NaN 값이 포함되어 있으면, <code>LabeEncoder</code>가 정상 동작하지 않음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      S
1      C
2      S
3      S
4      S
      ..
886    S
887    S
888    S
889    C
890    Q
Name: Embarked, Length: 891, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>S    644
C    168
Q     77
Name: Embarked, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">le.fit_transform(train[<span class="string">'Embarked'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode(values, uniques, encode, check_unknown)
    111         try:
--&gt; 112             res = _encode_python(values, uniques, encode)
    113         except TypeError:


D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode_python(values, uniques, encode)
     59     if uniques is None:
---&gt; 60         uniques = sorted(set(values))
     61         uniques = np.array(uniques, dtype=values.dtype)


TypeError: '&lt;' not supported between instances of 'float' and 'str'
</code></pre>
<p>​</p>
<pre><code>During handling of the above exception, another exception occurred:


TypeError                                 Traceback (most recent call last)

&lt;ipython-input-38-86525b1fc929&gt; in &lt;module&gt;
----&gt; 1 le.fit_transform(train['Embarked'])


D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in fit_transform(self, y)
    250         """
    251         y = column_or_1d(y, warn=True)
--&gt; 252         self.classes_, y = _encode(y, encode=True)
    253         return y
    254 


D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode(values, uniques, encode, check_unknown)
    112             res = _encode_python(values, uniques, encode)
    113         except TypeError:
--&gt; 114             raise TypeError("argument must be a string or number")
    115         return res
    116     else:


TypeError: argument must be a string or number
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>] = train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>] = le.fit_transform(train[<span class="string">'Embarked'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      2
1      0
2      2
3      2
4      2
      ..
886    2
887    2
888    2
889    0
890    1
Name: Embarked, Length: 891, dtype: int32
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    646
0    168
1     77
Name: Embarked, dtype: int64
</code></pre>
  <br>
  <br>
<h3 id="4-원-핫-인코딩-one-hot-encoding"><a class="markdownIt-Anchor" href="#4-원-핫-인코딩-one-hot-encoding"></a> 4. 원 핫 인코딩 (One Hot Encoding)</h3>
<blockquote>
<p><strong>pd.get_dummies</strong> ( <em>df_name</em> [ <em>‘col_name’</em> ] )</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>"Embarked"를 살펴보기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Unique Value 확인하기</span></span><br><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>S    644
C    168
Q     77
Name: Embarked, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># NA 채우기</span></span><br><span class="line">train[<span class="string">'Embarked'</span>] = train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>S    646
C    168
Q     77
Name: Embarked, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Label Encoding (문자 to 숫자)</span></span><br><span class="line">train[<span class="string">'Embarked_num'</span>] = LabelEncoder().fit_transform(train[<span class="string">'Embarked'</span>])</span><br><span class="line">train[<span class="string">'Embarked_num'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    646
0    168
1     77
Name: Embarked_num, dtype: int64
</code></pre>
<br>
<p>Embarked는 탑승 항구의 이니셜을 나타낸다. 우리는 <code>LabelEncoder</code>를 통해서 값을 수치형으로 변환해주었다, 하지만 이대로 데이터를 기계학습 시키면, 기계는 데이터 안에서 관계를 학습한다.</p>
<p>예를 들면, ‘S’= 2, ‘Q’= 1 이라고 되어 있는데, <code>Q</code>+<code>Q</code>=<code>S</code>가 된다라고 학습해버린다</p>
<p>그렇기 때문에, 우리는 <font color="blue">각 unique value를 별도의 column으로 분리하고, 값에 해당하는 column는 <strong>True (1)</strong>, 나머지 column는 <strong>False (0)</strong> 를 갖게 한다</font>.이것이 바로 <strong>원 핫 인코딩</strong> 이다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>][:<span class="number">6</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    S
1    C
2    S
3    S
4    S
5    Q
Name: Embarked, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked_num'</span>][:<span class="number">6</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    2
1    0
2    2
3    2
4    2
5    1
Name: Embarked_num, dtype: int32
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">one_hot = pd.get_dummies(train[<span class="string">'Embarked_num'</span>][:<span class="number">6</span>])</span><br><span class="line">one_hot</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">one_hot.columns = [<span class="string">'C'</span>, <span class="string">'Q'</span>, <span class="string">'S'</span>]</span><br><span class="line">one_hot</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>C</th>
      <th>Q</th>
      <th>S</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>원핫인코딩</strong>은 카테고리의 특성을(계절, 항구, 성별, 종류…) 가지는 column에 대해서 적용한다</p>
<p><br>  <br></p>
<h3 id="5-normalize-정규화"><a class="markdownIt-Anchor" href="#5-normalize-정규화"></a> 5. Normalize (정규화)</h3>
<p><strong>정규화:</strong> column간에 다른 min,max 값을 가지는 경우, 정규화를 통해 min / max 의 척도를 맞추어 주는 작업이다</p>
<blockquote>
<p>sklearn.preprocessing  --&gt;  MinMaxScaler()</p>
</blockquote>
  <br>
<p><strong>예: 영화평점</strong></p>
<ul>
<li>네이버 영화평점 (0점 ~ 10점): [2, 4, 6, 8, 10]</li>
<li>넷플릭스 영화평점 (0점 ~ 5점): [1, 2, 3, 4, 5]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">movie = {<span class="string">'naver'</span>: [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">         <span class="string">'netflix'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">movie = pd.DataFrame(data=movie)</span><br><span class="line">movie</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>naver</th>
      <th>netflix</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>6</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>10</td>
      <td>5</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">min_max_scaler = MinMaxScaler()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">min_max_movie = min_max_scaler.fit_transform(movie)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame(min_max_movie, columns = [<span class="string">'naver'</span>, <span class="string">'netfllix'</span>])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>naver</th>
      <th>netfllix</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00</td>
      <td>0.00</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.25</td>
      <td>0.25</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.50</td>
      <td>0.50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.75</td>
      <td>0.75</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1.00</td>
      <td>1.00</td>
    </tr>
  </tbody>
</table>
</div>
<br>
  <br>
<h3 id="6-standard-scaling-표준화"><a class="markdownIt-Anchor" href="#6-standard-scaling-표준화"></a> 6. Standard Scaling (표준화)</h3>
<p><strong>표준화:</strong> 평균이 0, 표준편차가 1이 되도록 변환해주는 작업</p>
<blockquote>
<p>sklearn.preprocessing  --&gt;  StandardScaler()</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">standard_scaler = StandardScaler()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 샘플데이터 생성</span></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x[<span class="number">9</span>] = <span class="number">1000</span>   <span class="comment"># oulier 추가</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x.mean(), x.std()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(103.6, 298.8100399919654)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 원본 데이터 표준화하기</span></span><br><span class="line">scaled = standard_scaler.fit_transform(x.reshape(<span class="number">-1</span>, <span class="number">1</span>))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">scaled.mean(), scaled.std()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4.4408920985006264e-17, 1.0)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">round(scaled.mean(), <span class="number">2</span>), scaled.std()  <span class="comment"># mean값 반올림</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>(0.0, 1.0)
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Machine Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Seaborn - (2) 통계 기반의 시각화</title>
    <url>/2020/07/03/S-Python-Seaborn2/</url>
    <content><![CDATA[<h1 id="통계-기반의-시각화"><a class="markdownIt-Anchor" href="#통계-기반의-시각화"></a> 통계 기반의 시각화</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%ED%86%B5%EA%B3%84-%EA%B8%B0%EB%B0%98%EC%9D%98-%EC%8B%9C%EA%B0%81%ED%99%94%EB%A5%BC-%EC%A0%9C%EA%B3%B5%ED%95%B4%EC%A3%BC%EB%8A%94-seaborn"><strong>0. 통계 기반의 시각화를 제공해주는 Seaborn</strong></a></li>
<li><a href="#1-countplot"><strong>1. countplot</strong></a>
<ul>
<li><a href="#1-1-%EC%84%B8%EB%A1%9C%EB%A1%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0">1-1. 세로로 그리기</a></li>
<li><a href="#1-2-%EA%B0%80%EB%A1%9C%EB%A1%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0">1-2. 가로로 그리기</a></li>
<li><a href="#1-3-%EC%83%89%EC%83%81-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%84%A4%EC%A0%95">1-3. 색상 팔레트 설정</a></li>
</ul>
</li>
<li><a href="#2-distplot"><strong>2. distplot</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-displot">2-1. 기본 displot</a></li>
<li><a href="#2-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-series%EC%9D%BC-%EA%B2%BD%EC%9A%B0">2-2. 데이터가 Series일 경우</a></li>
<li><a href="#2-3-rugplot">2-3. rugplot</a></li>
<li><a href="#2-4-kde-kernel-density">2-4. kde (kernel density)</a></li>
<li><a href="#2-5-%EA%B0%80%EB%A1%9C%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0">2-5. 가로로 표현하기</a></li>
<li><a href="#2-6-%EC%BB%AC%EB%9F%AC-%EB%B0%94%EA%BE%B8%EA%B8%B0">2-6. 컬러 바꾸기</a></li>
</ul>
</li>
<li><a href="#3-heatmap"><strong>3. heatmap</strong></a>
<ul>
<li><a href="#3-1-%EA%B8%B0%EB%B3%B8-heatmap">3-1. 기본 heatmap</a></li>
<li><a href="#3-2-pivot-table%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. pivot table을 활용하여 그리기</a></li>
<li><a href="#3-3-correlation%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%8B%9C%EA%B0%81%ED%99%94">3-3. correlation(상관관계)를 시각화</a></li>
</ul>
</li>
<li><a href="#4-pairplot"><strong>4. pairplot</strong></a>
<ul>
<li><a href="#4-1-%EA%B8%B0%EB%B3%B8-pairplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">4-1. 기본 pairplot 그리기</a></li>
<li><a href="#4-2-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%ED%8A%B9%EC%84%B1-%EA%B5%AC%EB%B6%84">4-2. hue 옵션으로 특성 구분</a></li>
<li><a href="#4-3-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%A0%81%EC%9A%A9">4-3. 컬러 팔레트 적용</a></li>
<li><a href="#4-4-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%A0%81%EC%9A%A9">4-4. 사이즈 적용</a></li>
</ul>
</li>
<li><a href="#5-violinplot"><strong>5. violinplot</strong></a>
<ul>
<li><a href="#5-1-%EA%B8%B0%EB%B3%B8-violinplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 violinplot 그리기</a></li>
<li><a href="#5-2-%EB%B9%84%EA%B5%90-%EB%B6%84%ED%8F%AC-%ED%99%95%EC%9D%B8">5-2. 비교 분포 확인</a></li>
<li><a href="#5-3-%EA%B0%80%EB%A1%9C%EB%A1%9C-%EB%89%98%EC%9D%B8-violinplot">5-3. 가로로 뉘인 violinplot</a></li>
<li><a href="#5-4-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%B6%84%ED%8F%AC-%EB%B9%84%EA%B5%90">5-4. hue 옵션으로 분포 비교</a></li>
</ul>
</li>
<li><a href="#6-lmplot"><strong>6. lmplot</strong></a>
<ul>
<li><a href="#6-1-%EA%B8%B0%EB%B3%B8-lmplot">6-1. 기본 lmplot</a></li>
<li><a href="#6-2-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%8B%A4%EC%A4%91-%EC%84%A0%ED%98%95%EA%B4%80%EA%B3%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">6-2. hue 옵션으로 다중 선형관계 그리기</a></li>
<li><a href="#6-3-col-%EC%98%B5%EC%85%98%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84%EB%A5%BC-%EB%B3%84%EB%8F%84%EB%A1%9C-%EA%B7%B8%EB%A0%A4%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8B%A4">6-3. col 옵션을 추가하여 그래프를 별도로 그려볼 수 있다</a></li>
</ul>
</li>
<li><a href="#7-relplot"><strong>7. relplot</strong></a>
<ul>
<li><a href="#7-1-%EA%B8%B0%EB%B3%B8-relplot">7-1. 기본 relplot</a></li>
<li><a href="#7-2-col-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B6%84%ED%95%A0">7-2. col 옵션으로 그래프 분할</a></li>
<li><a href="#7-3-row%EC%99%80-column%EC%97%90-%ED%91%9C%EA%B8%B0%ED%95%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0-column-%EC%84%A0%ED%83%9D">7-3. row와 column에 표기할 데이터 column 선택</a></li>
<li><a href="#7-4-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%A0%81%EC%9A%A9">7-4. 컬러 팔레트 적용</a></li>
</ul>
</li>
<li><a href="#8-jointplot"><strong>8. jointplot</strong></a>
<ul>
<li><a href="#8-1-%EA%B8%B0%EB%B3%B8-jointplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-1. 기본 jointplot 그리기</a></li>
<li><a href="#8-2-%EC%84%A0%ED%98%95%EA%B4%80%EA%B3%84%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%98%EB%8A%94-regression-%EB%9D%BC%EC%9D%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-2. 선형관계를 표현하는 regression 라인 그리기</a></li>
<li><a href="#8-3-hex-%EB%B0%80%EB%8F%84-%EB%B3%B4%EA%B8%B0">8-3. hex 밀도 보기</a></li>
<li><a href="#8-4-%EB%93%B1%EA%B3%A0%EC%84%A0-%EB%AA%A8%EC%96%91%EC%9C%BC%EB%A1%9C-%EB%B0%80%EC%A7%91%EB%8F%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">8-4. 등고선 모양으로 밀집도 확인하기</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h2 id="0-통계-기반의-시각화를-제공해주는-seaborn"><a class="markdownIt-Anchor" href="#0-통계-기반의-시각화를-제공해주는-seaborn"></a> <strong>0. 통계 기반의 시각화를 제공해주는 Seaborn</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/api.html" target="_blank" rel="noopener">Seaborn 공식 도큐먼트</a></p>
</blockquote>
<p>seaborn 라이브러리가  매력적인 이유는 바로 <strong>통계 차트</strong>다.</p>
<p>이번 실습에서는 seaborn의 다양한 통계 차트 중 대표적인 차트 몇 개를 뽑아서 다뤄볼 예정이다.</p>
<p>그럼 먼저 실습에 사용되는 Dataset을 한번 살펴볼게요.</p>
 <br> 
<p><strong>Dataset — "Titanic"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>sex</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>embarked</th>
      <th>class</th>
      <th>who</th>
      <th>adult_male</th>
      <th>deck</th>
      <th>embark_town</th>
      <th>alive</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>7.2500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>71.2833</td>
      <td>C</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.9250</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>53.1000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>8.0500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>886</th>
      <td>0</td>
      <td>2</td>
      <td>male</td>
      <td>27.0</td>
      <td>0</td>
      <td>0</td>
      <td>13.0000</td>
      <td>S</td>
      <td>Second</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
    <tr>
      <th>887</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>19.0</td>
      <td>0</td>
      <td>0</td>
      <td>30.0000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>B</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>888</th>
      <td>0</td>
      <td>3</td>
      <td>female</td>
      <td>NaN</td>
      <td>1</td>
      <td>2</td>
      <td>23.4500</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>889</th>
      <td>1</td>
      <td>1</td>
      <td>male</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>30.0000</td>
      <td>C</td>
      <td>First</td>
      <td>man</td>
      <td>True</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>890</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>32.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.7500</td>
      <td>Q</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Queenstown</td>
      <td>no</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
<p>891 rows × 15 columns</p>
</div>
<br>
<ul>
<li>
<p>survived: 생존여부</p>
</li>
<li>
<p>pclass: 좌석등급 (숫자)</p>
</li>
<li>
<p>sex: 성별</p>
</li>
<li>
<p>age: 나이</p>
</li>
<li>
<p>sibsp: 형제자매 + 배우자 숫자</p>
</li>
<li>
<p>parch: 부모 + 자식 숫자</p>
</li>
<li>
<p>fare: 요금</p>
</li>
<li>
<p>embarked: 탑승 항구</p>
</li>
<li>
<p>class: 좌석등급 (영문)</p>
</li>
<li>
<p>who: 사람 구분</p>
</li>
<li>
<p>deck: 데크</p>
</li>
<li>
<p>embark_town: 탑승 항구 (영문)</p>
</li>
<li>
<p>alive: 생존여부 (영문)</p>
</li>
<li>
<p>alone: 혼자인지 여부</p>
<br>
</li>
</ul>
<p><strong>Dataset — "tips"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">'tips'</span>)</span><br><span class="line">tips</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>239</th>
      <td>29.03</td>
      <td>5.92</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>240</th>
      <td>27.18</td>
      <td>2.00</td>
      <td>Female</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>241</th>
      <td>22.67</td>
      <td>2.00</td>
      <td>Male</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>242</th>
      <td>17.82</td>
      <td>1.75</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>243</th>
      <td>18.78</td>
      <td>3.00</td>
      <td>Female</td>
      <td>No</td>
      <td>Thur</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>244 rows × 7 columns</p>
</div>
<br>
<ul>
<li>
<p>total_bill: 총 합계 요금표</p>
</li>
<li>
<p>tip: 팁</p>
</li>
<li>
<p>sex: 성별</p>
</li>
<li>
<p>smoker: 흡연자 여부</p>
</li>
<li>
<p>day: 요일</p>
</li>
<li>
<p>time: 식사 시간</p>
</li>
<li>
<p>size: 식사 인원</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 배경 설정</span></span><br><span class="line">sns.set(style=<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h2 id="1-countplot"><a class="markdownIt-Anchor" href="#1-countplot"></a> <strong>1. countplot</strong></h2>
<p>항목별 갯수를 세어주는 <code>countplot</code></p>
<ul>
<li>해당 column을 구성하고 있는 value들을 자동으로 구분하여 보여준다</li>
</ul>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.countplot.html" target="_blank" rel="noopener">&lt;sns.countplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.countplot</strong> ( <em>x=None, y=None, hue=None, data=None, color=None, palette=None</em> )</p>
</blockquote>
 <br> 
<h3 id="1-1-세로로-그리기"><a class="markdownIt-Anchor" href="#1-1-세로로-그리기"></a> 1-1. 세로로 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_26_0.png" alt="png"></p>
<br>
<h3 id="1-2-가로로-그리기"><a class="markdownIt-Anchor" href="#1-2-가로로-그리기"></a> 1-2. 가로로 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(y=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_29_0.png" alt="png"></p>
<br>
<h3 id="1-3-색상-팔레트-설정"><a class="markdownIt-Anchor" href="#1-3-색상-팔레트-설정"></a> 1-3. 색상 팔레트 설정</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, palette=<span class="string">'copper'</span>, data= titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_32_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-distplot"><a class="markdownIt-Anchor" href="#2-distplot"></a> <strong>2. distplot</strong></h2>
<p>matplotlib의 <code>hist</code>그래프와 <code>kdeplot</code>을 통합한 그래프다.<br>
<strong>분포</strong>와 <strong>밀도</strong>를 확인할 수 있음</p>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html?highlight=distplot#seaborn.distplot" target="_blank" rel="noopener">&lt;sns.distplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.displot</strong> ( <em>a, hist=True, kde=True, rug=False, vertical=False, color=None</em> )</p>
<ul>
<li>hist: histogram</li>
<li>kde: kernel density estimate</li>
<li>rug: rugplot</li>
<li>vertical: If True, observed values are on y-axis</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 샘플 데이터 생성</span></span><br><span class="line">x = np.random.randn(<span class="number">100</span>)</span><br><span class="line">x</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-3.39765920e-01, -1.48664049e+00, -5.57926444e-01,  3.25206560e-01,
       -7.46665762e-01, -3.10926812e-01, -2.14536012e+00,  1.25905620e+00,
       -2.07806423e-01,  5.56377038e-01, -2.20574498e+00, -1.15138577e-01,
       -3.32417471e-01,  1.13927613e-01, -7.29559442e-01, -1.31243715e+00,
       -8.27477111e-01, -1.24455099e+00, -5.44035731e-02, -1.85399773e+00,
       -1.62571613e+00,  3.89312791e-01,  1.26815698e+00, -7.43355761e-01,
       -1.34113997e+00,  2.67291801e-02, -4.74142344e-01, -1.07662894e+00,
       -2.35607451e+00,  1.90337236e-01, -1.18577255e+00, -1.23238300e+00,
        9.39298755e-01, -2.69078751e-01, -3.50418097e-01,  1.92109121e+00,
       -1.46520490e-01,  3.90810577e-01, -6.60511307e-01, -1.46288431e+00,
        1.26314685e+00,  2.38384651e-01,  8.03730080e-01,  2.83340226e-01,
       -1.24219159e+00, -1.50458389e+00, -1.60213592e-01,  3.97086657e-01,
        1.27321390e-01, -1.13722876e+00, -1.48448425e+00,  1.36136226e+00,
       -2.34669327e-01, -1.32679409e+00,  1.59032718e+00,  7.53779845e-01,
       -7.48815568e-01,  7.34822673e-03,  5.57358372e-01,  1.78429993e+00,
       -1.50510591e+00, -3.87983571e-01, -7.57372493e-01,  6.25354827e-01,
        1.44857563e-01,  7.78608476e-01, -6.61441801e-02, -1.24836018e+00,
        1.77522984e+00,  1.60497019e-01, -1.18893624e+00,  1.93951152e+00,
       -9.34504796e-01,  1.82000588e+00, -1.91594654e+00, -1.13118210e+00,
       -4.13371342e-01, -5.07021131e-01,  1.57792370e+00, -2.52509848e+00,
        1.86695906e-01, -1.18412859e+00,  1.49572473e-01, -3.53669860e-01,
        1.38877682e+00,  2.53212949e-02,  7.79387552e-01, -7.41508306e-01,
        4.10007279e-01,  1.96517288e-02, -5.69215198e-01,  1.45113980e+00,
       -8.80722624e-01,  1.35468793e+00, -1.67677998e-03, -1.14952039e+00,
        8.90718244e-01, -4.10411520e-01,  6.17620908e-01,  2.96993057e-01])
</code></pre>
<br>
<h3 id="2-1-기본-displot"><a class="markdownIt-Anchor" href="#2-1-기본-displot"></a> 2-1. 기본 displot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x)  <span class="comment"># x: numpy array</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_43_0.png" alt="png"></p>
<br>
<h3 id="2-2-데이터가-series일-경우"><a class="markdownIt-Anchor" href="#2-2-데이터가-series일-경우"></a> 2-2. 데이터가 Series일 경우</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = pd.Series(x, name=<span class="string">'x variable'</span>)</span><br><span class="line">x</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    -0.339766
1    -1.486640
2    -0.557926
3     0.325207
4    -0.746666
        ...   
95   -1.149520
96    0.890718
97   -0.410412
98    0.617621
99    0.296993
Name: x variable, Length: 100, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x)  <span class="comment"># x: Series</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_47_0.png" alt="png"></p>
<p>x가 Seires일 때는:  그래프에서 x label이 자동으로 Series 이름(column name) 으로 나타남</p>
<br>  
<h3 id="2-3-rugplot"><a class="markdownIt-Anchor" href="#2-3-rugplot"></a> 2-3. rugplot</h3>
<p>데이터 위치를 x축 위에 <strong>작은 선분(rug)으로 나타내어</strong> 데이터들의 위치 및 분포를 보여준다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, rug=<span class="literal">True</span>, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_52_0.png" alt="png"></p>
<br>
<h3 id="2-4-kde-kernel-density"><a class="markdownIt-Anchor" href="#2-4-kde-kernel-density"></a> 2-4. kde (kernel density)</h3>
<p>kde 는 histogram보다 <strong>부드러운 형태의 분포 곡선</strong>을 보여주는 방법</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, rug=<span class="literal">False</span>, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_56_0.png" alt="png"></p>
<br>
<h3 id="2-5-가로로-표현하기"><a class="markdownIt-Anchor" href="#2-5-가로로-표현하기"></a> 2-5. 가로로 표현하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, vertical=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_59_0.png" alt="png"></p>
<br>
<h3 id="2-6-컬러-바꾸기"><a class="markdownIt-Anchor" href="#2-6-컬러-바꾸기"></a> 2-6. 컬러 바꾸기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, color=<span class="string">'r'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_62_0.png" alt="png"></p>
<br>
<br>
<h2 id="3-heatmap"><a class="markdownIt-Anchor" href="#3-heatmap"></a> <strong>3. heatmap</strong></h2>
<p>색상으로 표현할 수 있는 다양한 정보를 <strong>일정한 이미지위에 열분포 형태의 비쥬얼한 그래픽</strong>으로 출력하는 것이 특정이다</p>
<p><strong>주로 활용되는 경우:</strong></p>
<ol>
<li>pivot table의 데이터를 시각화할 때</li>
<li>데이터의 상관관계를 살펴볼 때</li>
</ol>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.heatmap.html?highlight=heatmap#seaborn.heatmap" target="_blank" rel="noopener"> &lt;sns.heatmap&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.heatmap</strong> ( <em>data, annot=None, cmap=None</em> )</p>
<ul>
<li>annot: If True, write the data value in each cell</li>
</ul>
</blockquote>
  <br>
<h3 id="3-1-기본-heatmap"><a class="markdownIt-Anchor" href="#3-1-기본-heatmap"></a> 3-1. 기본 heatmap</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">uniform_data = np.random.rand(<span class="number">10</span>, <span class="number">12</span>)</span><br><span class="line">sns.heatmap(uniform_data, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_72_0.png" alt="png"></p>
<p>컬러가 진할수록 숫자가 0에 가깝고, 연할수록 1에 가깝다</p>
  <br>
<h3 id="3-2-pivot-table을-활용하여-그리기"><a class="markdownIt-Anchor" href="#3-2-pivot-table을-활용하여-그리기"></a> 3-2. pivot table을 활용하여 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>239</th>
      <td>29.03</td>
      <td>5.92</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>240</th>
      <td>27.18</td>
      <td>2.00</td>
      <td>Female</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>241</th>
      <td>22.67</td>
      <td>2.00</td>
      <td>Male</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>242</th>
      <td>17.82</td>
      <td>1.75</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>243</th>
      <td>18.78</td>
      <td>3.00</td>
      <td>Female</td>
      <td>No</td>
      <td>Thur</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>244 rows × 7 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pivot = tips.pivot_table(index=<span class="string">'day'</span>, columns=<span class="string">'size'</span>, values=<span class="string">'tip'</span>)</span><br><span class="line">pivot</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>size</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
    </tr>
    <tr>
      <th>day</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Thur</th>
      <td>1.83</td>
      <td>2.442500</td>
      <td>2.692500</td>
      <td>4.218000</td>
      <td>5.000000</td>
      <td>5.3</td>
    </tr>
    <tr>
      <th>Fri</th>
      <td>1.92</td>
      <td>2.644375</td>
      <td>3.000000</td>
      <td>4.730000</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>Sat</th>
      <td>1.00</td>
      <td>2.517547</td>
      <td>3.797778</td>
      <td>4.123846</td>
      <td>3.000000</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>Sun</th>
      <td>NaN</td>
      <td>2.816923</td>
      <td>3.120667</td>
      <td>4.087778</td>
      <td>4.046667</td>
      <td>5.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.heatmap(pivot, cmap=<span class="string">'Blues'</span>, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_78_0.png" alt="png"></p>
<br>
<h3 id="3-3-correlation상관관계를-시각화"><a class="markdownIt-Anchor" href="#3-3-correlation상관관계를-시각화"></a> 3-3. correlation(상관관계)를 시각화</h3>
<p><strong>corr()</strong> 함수는 데이터의 상관관계를 보여줌</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic.corr()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>adult_male</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>survived</th>
      <td>1.000000</td>
      <td>-0.338481</td>
      <td>-0.077221</td>
      <td>-0.035322</td>
      <td>0.081629</td>
      <td>0.257307</td>
      <td>-0.557080</td>
      <td>-0.203367</td>
    </tr>
    <tr>
      <th>pclass</th>
      <td>-0.338481</td>
      <td>1.000000</td>
      <td>-0.369226</td>
      <td>0.083081</td>
      <td>0.018443</td>
      <td>-0.549500</td>
      <td>0.094035</td>
      <td>0.135207</td>
    </tr>
    <tr>
      <th>age</th>
      <td>-0.077221</td>
      <td>-0.369226</td>
      <td>1.000000</td>
      <td>-0.308247</td>
      <td>-0.189119</td>
      <td>0.096067</td>
      <td>0.280328</td>
      <td>0.198270</td>
    </tr>
    <tr>
      <th>sibsp</th>
      <td>-0.035322</td>
      <td>0.083081</td>
      <td>-0.308247</td>
      <td>1.000000</td>
      <td>0.414838</td>
      <td>0.159651</td>
      <td>-0.253586</td>
      <td>-0.584471</td>
    </tr>
    <tr>
      <th>parch</th>
      <td>0.081629</td>
      <td>0.018443</td>
      <td>-0.189119</td>
      <td>0.414838</td>
      <td>1.000000</td>
      <td>0.216225</td>
      <td>-0.349943</td>
      <td>-0.583398</td>
    </tr>
    <tr>
      <th>fare</th>
      <td>0.257307</td>
      <td>-0.549500</td>
      <td>0.096067</td>
      <td>0.159651</td>
      <td>0.216225</td>
      <td>1.000000</td>
      <td>-0.182024</td>
      <td>-0.271832</td>
    </tr>
    <tr>
      <th>adult_male</th>
      <td>-0.557080</td>
      <td>0.094035</td>
      <td>0.280328</td>
      <td>-0.253586</td>
      <td>-0.349943</td>
      <td>-0.182024</td>
      <td>1.000000</td>
      <td>0.404744</td>
    </tr>
    <tr>
      <th>alone</th>
      <td>-0.203367</td>
      <td>0.135207</td>
      <td>0.198270</td>
      <td>-0.584471</td>
      <td>-0.583398</td>
      <td>-0.271832</td>
      <td>0.404744</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.heatmap(titanic.corr(), annot=<span class="literal">True</span>, cmap=<span class="string">'YlGnBu'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_83_0.png" alt="png"></p>
<br>
<br>
<h2 id="4-pairplot"><a class="markdownIt-Anchor" href="#4-pairplot"></a> <strong>4. pairplot</strong></h2>
<p>pairplot은 grid 형태로 각 <strong>집합의 조합에 대해 히스토그램과 분포도</strong>를 그린다.<br>
(숫자형 column에 대해서만 그려줌)</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.pairplot.html?highlight=pairplot#seaborn.pairplot" target="_blank" rel="noopener">&lt;sns.pairplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.pairplot</strong> ( <em>data, hue=None, palette=None, height=2.5</em> )</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="4-1-기본-pairplot-그리기"><a class="markdownIt-Anchor" href="#4-1-기본-pairplot-그리기"></a> 4-1. 기본 pairplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_94_0.png" alt="png"></p>
<br>
<h3 id="4-2-hue-옵션으로-특성-구분"><a class="markdownIt-Anchor" href="#4-2-hue-옵션으로-특성-구분"></a> 4-2. hue 옵션으로 특성 구분</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_97_0.png" alt="png"></p>
<br>
<h3 id="4-3-컬러-팔레트-적용"><a class="markdownIt-Anchor" href="#4-3-컬러-팔레트-적용"></a> 4-3. 컬러 팔레트 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>, palette=<span class="string">'rainbow'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_100_0.png" alt="png"></p>
<br>
<h3 id="4-4-사이즈-적용"><a class="markdownIt-Anchor" href="#4-4-사이즈-적용"></a> 4-4. 사이즈 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>, palette=<span class="string">'rainbow'</span>, height=<span class="number">4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_103_0.png" alt="png"></p>
<br>
<br>
<h2 id="5-violinplot"><a class="markdownIt-Anchor" href="#5-violinplot"></a> <strong>5. violinplot</strong></h2>
<p>마이올린처럼 생긴 violinplot다.</p>
<p>column에 대한 <strong>데이터의 비교 분포도</strong>를 확인할 수 있다.</p>
<ul>
<li>곡선형 부분 (뚱뚱한 부분)은 데이터의 분포를 나타냄</li>
<li>양쪽 끝 뾰족한 부분은 데이터의 최소값과 최대값을 나타냄</li>
</ul>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.violinplot.html" target="_blank" rel="noopener">&lt;sns.violinplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.violinplot</strong> ( <em>x=None. y=None, hue=None, data=None, split=False</em> )</p>
<ul>
<li><strong>split:</strong> When using hue nesting with a variable that takes two levels, setting split to True will draw half of a violin for each level. This can make it easier to directly compare the distributions.</li>
</ul>
</blockquote>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="5-1-기본-violinplot-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-violinplot-그리기"></a> 5-1. 기본 violinplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=tips[<span class="string">'total_bill'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_113_0.png" alt="png"></p>
<br>
<h3 id="5-2-비교-분포-확인"><a class="markdownIt-Anchor" href="#5-2-비교-분포-확인"></a> 5-2. 비교 분포 확인</h3>
<p>x, y축을 지정해줌으로써 바이올린을 분할하여 <strong>비교 분포</strong>를 볼 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_117_0.png" alt="png"></p>
<br>
<h3 id="5-3-가로로-뉘인-violinplot"><a class="markdownIt-Anchor" href="#5-3-가로로-뉘인-violinplot"></a> 5-3. 가로로 뉘인 violinplot</h3>
<ul>
<li>x축, y축 변경</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(y=<span class="string">'day'</span>, x=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_120_0.png" alt="png"></p>
<br>
<h3 id="5-4-hue-옵션으로-분포-비교"><a class="markdownIt-Anchor" href="#5-4-hue-옵션으로-분포-비교"></a> 5-4. hue 옵션으로 분포 비교</h3>
<p>사실 hue옵션을 사용하지 않으면 바이올린이 대칭이기 때문에 분포의 큰 의미는 없다.<br>
하지만, hue옵션을 주면, <strong>단일 column에 대한 바이올린 모양의 비교</strong>를 할 수 있다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, hue=<span class="string">'smoker'</span>, data=tips, palette=<span class="string">'muted'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_124_0.png" alt="png"></p>
<br>
<p><strong>split 옵션으로 바이올린을 합쳐서 볼 수 있다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, hue=<span class="string">'smoker'</span>, data=tips, palette=<span class="string">'muted'</span>, split=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_127_0.png" alt="png"></p>
<p>violinplot은 이런 경우에 많이 활용된다</p>
<p><br> <br></p>
<h2 id="6-lmplot"><a class="markdownIt-Anchor" href="#6-lmplot"></a> <strong>6. lmplot</strong></h2>
<p>lmport (<em>initial: 소문자 L</em>) 은 column간의 <strong>선형관계를 확인하기에 용이한 차트</strong>임.<br>
또한, <strong>outlier</strong>도 같이 짐작해 볼 수 있다.</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.lmplot.html" target="_blank" rel="noopener">&lt;sns.lmplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.lmplot</strong> ( <em>x, y, data, hue=None, col=None, col_wrap=None, row=None, height=5</em> )</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="6-1-기본-lmplot"><a class="markdownIt-Anchor" href="#6-1-기본-lmplot"></a> 6-1. 기본 lmplot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_138_0.png" alt="png"></p>
<br>
<h3 id="6-2-hue-옵션으로-다중-선형관계-그리기"><a class="markdownIt-Anchor" href="#6-2-hue-옵션으로-다중-선형관계-그리기"></a> 6-2. hue 옵션으로 다중 선형관계 그리기</h3>
<p>아래의 그래프를 통하여 비흡연자가, 흡연자 대비 좀 더 <strong>가파른 선형관계</strong>를 가지는 것을 볼 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'smoker'</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_142_0.png" alt="png"></p>
<br>
<h3 id="6-3-col-옵션을-추가하여-그래프를-별도로-그려볼-수-있다"><a class="markdownIt-Anchor" href="#6-3-col-옵션을-추가하여-그래프를-별도로-그려볼-수-있다"></a> 6-3. col 옵션을 추가하여 그래프를 별도로 그려볼 수 있다</h3>
<p>또한, <code>col_wrap</code>으로 한 줄에 표기할 column의 갯수를 명시할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'smoker'</span>, col=<span class="string">'day'</span>, col_wrap=<span class="number">2</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_146_0.png" alt="png"></p>
<br>
<br>
<h2 id="7-relplot"><a class="markdownIt-Anchor" href="#7-relplot"></a> <strong>7. relplot</strong></h2>
<p>두 column간 상관관계를 보지만 <code>lmport</code>처럼 선형관계를 따로 그려주지 않다</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.relplot.html?highlight=relplot#seaborn.relplot" target="_blank" rel="noopener">&lt;sns.replot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.relplot</strong> ( <em>x, y, data, hue=None, col=None, row=None, height=5, palette=None</em> )</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="7-1-기본-relplot"><a class="markdownIt-Anchor" href="#7-1-기본-relplot"></a> 7-1. 기본 relplot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_157_0.png" alt="png"></p>
<br>
<h3 id="7-2-col-옵션으로-그래프-분할"><a class="markdownIt-Anchor" href="#7-2-col-옵션으로-그래프-분할"></a> 7-2. col 옵션으로 그래프 분할</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_160_0.png" alt="png"></p>
<br>
<h3 id="7-3-row와-column에-표기할-데이터-column-선택"><a class="markdownIt-Anchor" href="#7-3-row와-column에-표기할-데이터-column-선택"></a> 7-3. row와 column에 표기할 데이터 column 선택</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>,hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, row=<span class="string">'sex'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_163_0.png" alt="png"></p>
<br>
<h3 id="7-4-컬러-팔레트-적용"><a class="markdownIt-Anchor" href="#7-4-컬러-팔레트-적용"></a> 7-4. 컬러 팔레트 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, row=<span class="string">'sex'</span>, data=tips, palette=<span class="string">'CMRmap_r'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_166_0.png" alt="png"></p>
<br>
<br>
<h2 id="8-jointplot"><a class="markdownIt-Anchor" href="#8-jointplot"></a> <strong>8. jointplot</strong></h2>
<p>jointplot은 scatter(산점도)와 histogram(분포)을 동시에 그려줌.(숫자형 데이터만)</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.jointplot.html?highlight=jointplot#seaborn.jointplot" target="_blank" rel="noopener">&lt;sns.jointplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.jointplot</strong> ( <em>x, y, data=None, kind=‘scatter’, height=6</em> )</p>
<ul>
<li><strong>kind</strong>: kind of plot to draw. {‘scatter’, ‘reg’, ‘resid’, ‘kde’, ‘hex’}</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="8-1-기본-jointplot-그리기"><a class="markdownIt-Anchor" href="#8-1-기본-jointplot-그리기"></a> 8-1. 기본 jointplot 그리기</h3>
<p><strong>default 로 "scatter plot"을 그린다  (kind=‘scatter’)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_178_0.png" alt="png"></p>
<br>
<h3 id="8-2-선형관계를-표현하는-regression-라인-그리기"><a class="markdownIt-Anchor" href="#8-2-선형관계를-표현하는-regression-라인-그리기"></a> 8-2. 선형관계를 표현하는 regression 라인 그리기</h3>
<p><strong>옵션: kind='reg’</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'total_bill'</span>, <span class="string">'tip'</span>, data=tips, kind=<span class="string">'reg'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_182_0.png" alt="png"></p>
<br>
<h3 id="8-3-hex-밀도-보기"><a class="markdownIt-Anchor" href="#8-3-hex-밀도-보기"></a> 8-3. hex 밀도 보기</h3>
<p><strong>옵션: kind='hex’</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'total_bill'</span>, <span class="string">'tip'</span>, data=tips, kind=<span class="string">'hex'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_186_0.png" alt="png"></p>
<br>
<h3 id="8-4-등고선-모양으로-밀집도-확인하기"><a class="markdownIt-Anchor" href="#8-4-등고선-모양으로-밀집도-확인하기"></a> 8-4. 등고선 모양으로 밀집도 확인하기</h3>
<p><strong>kind=‘kde’</strong> 옵션으로 데이터의 밀집도를 보다 부드러운 선으로 확인할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">iris = sns.load_dataset(<span class="string">'iris'</span>)</span><br><span class="line">iris</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal_length</th>
      <th>sepal_width</th>
      <th>petal_length</th>
      <th>petal_width</th>
      <th>species</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>145</th>
      <td>6.7</td>
      <td>3.0</td>
      <td>5.2</td>
      <td>2.3</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>146</th>
      <td>6.3</td>
      <td>2.5</td>
      <td>5.0</td>
      <td>1.9</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>147</th>
      <td>6.5</td>
      <td>3.0</td>
      <td>5.2</td>
      <td>2.0</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>148</th>
      <td>6.2</td>
      <td>3.4</td>
      <td>5.4</td>
      <td>2.3</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>149</th>
      <td>5.9</td>
      <td>3.0</td>
      <td>5.1</td>
      <td>1.8</td>
      <td>virginica</td>
    </tr>
  </tbody>
</table>
<p>150 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'sepal_width'</span>, <span class="string">'petal_length'</span>, data=iris, kind=<span class="string">'kde'</span>, color=<span class="string">'g'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_192_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 4. Seaborn</category>
        <category>Python - 시각화</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>시각화</tag>
        <tag>Seaborn</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (2) 분류 (Classification)</title>
    <url>/2020/07/26/S-Python-sklearn2/</url>
    <content><![CDATA[<h1 id="분류-classification"><a class="markdownIt-Anchor" href="#분류-classification"></a> <strong>분류 (Classification)</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B"><strong>0. 데이터 셋</strong></a>
<ul>
<li><a href="#0-1-iris-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B">0-1. iris 데이터 셋</a></li>
<li><a href="#0-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0">0-2. 데이터프레임 만들기</a></li>
<li><a href="#0-3-%EC%8B%9C%EA%B0%81%ED%99%94%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">0-3. 시각화로 데이터셋 파악하기</a></li>
</ul>
</li>
<li><a href="#1-training-set-validation-set-%EB%82%98%EB%88%84%EA%B8%B0"><strong>1. training set / validation set 나누기</strong></a></li>
<li><a href="#2-%ED%95%98%EC%9D%B4%ED%8D%BC-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-hyper-parameter-%ED%8A%9C%EB%8B%9D"><strong>2. 하이퍼 파라미터 (hyper-parameter) 튜닝</strong></a></li>
<li><a href="#3-%EB%B6%84%EB%A5%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"><strong>3. 분류 알고리즘</strong></a>
<ul>
<li><a href="#3-1-logistic-regression">3-1. Logistic Regression</a></li>
<li><a href="#3-2-sgd-sgdclassifier">3-2. SGD (SGDClassifier)</a></li>
<li><a href="#3-3-knn-kneighborsclassifier">3-3. KNN (KNeighborsClassifier)</a></li>
<li><a href="#3-4-svm-svc">3-4. SVM (SVC)</a></li>
<li><a href="#3-5-decision-tree-decisiontreeclassifier">3-5. Decision Tree (DecisionTreeClassifier)</a>
<ul>
<li><a href="#1-decision-tree-%EC%9D%98%EC%82%AC-%EA%B2%B0%EC%A0%95-%EB%82%98%EB%AC%B4-%EB%82%98%EB%AC%B4-%EA%B0%80%EC%A7%80%EC%B9%98%EA%B8%B0%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%86%8C%EA%B7%B8%EB%A3%B9%EC%9C%BC%EB%A1%9C-%EB%82%98%EB%88%84%EC%96%B4-%ED%8C%90%EB%B3%84%ED%95%98%EB%8A%94%EA%B2%83">1. Decision Tree (의사 결정 나무): 나무 가지치기를 통해 소그룹으로 나누어 판별하는것</a></li>
<li><a href="#2-decision-tree-%EB%B6%84%EB%A5%98-%EA%B2%B0%EA%B3%BC-%EC%8B%9C%EA%B0%81%ED%99%94">2. Decision Tree 분류 결과 시각화</a></li>
<li><a href="#3-%EA%B0%80%EC%A7%80-%EC%B9%98%EA%B8%B0-pruning">3. 가지 치기 (pruning)</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C"><strong>4. 모델 성능 평가 지표</strong></a>
<ul>
<li><a href="#4-1-%EC%98%A4%EC%B0%A8-%ED%96%89%EB%A0%AC-confusion-matrix">4-1. 오차 행렬 (Confusion Matrix)</a></li>
<li><a href="#4-2-%EC%A0%95%ED%99%95%EB%8F%84-accuracy">4-2. 정확도 (Accuracy)</a></li>
<li><a href="#4-3-%EC%A0%95%EB%B0%80%EB%8F%84-precision">4-3. 정밀도 (Precision)</a></li>
<li><a href="#4-4-%EB%AF%BC%EA%B0%90%EB%8F%84-sensitivity-%EC%9E%AC%ED%98%84%EC%9C%A8-recall">4-4. 민감도 (Sensitivity)  /  재현율 (Recall)</a></li>
<li><a href="#4-5-%ED%8A%B9%EC%9D%B4%EB%8F%84-specificity">4-5. 특이도 (Specificity)</a></li>
<li><a href="#4-6-f1-score">4-6. F1 Score</a></li>
<li></li>
</ul>
</li>
</ul>
<p></p>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>) <span class="comment"># 불필요한 경고 출력을 방지함</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="0-데이터-셋"><a class="markdownIt-Anchor" href="#0-데이터-셋"></a> <strong>0. 데이터 셋</strong></h2>
<p><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.datasets" target="_blank" rel="noopener">sklearn.dataset</a> 에서 제공해주는 다양한 샘플 데이터를 활용한다</p>
<p>여기서는 iris 데이터 셋을 활용한다</p>
 <br> 
<h3 id="0-1-iris-데이터-셋"><a class="markdownIt-Anchor" href="#0-1-iris-데이터-셋"></a> 0-1. iris 데이터 셋</h3>
<p><strong>Mission:</strong> 꽃 종류 분류하기</p>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html#sklearn.datasets.load_iris" target="_blank" rel="noopener">iris 데이터 셋</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># iris 데이터 셋 로드</span></span><br><span class="line">iris = load_iris()</span><br></pre></td></tr></tbody></table></figure>
 <br>
<p><strong>iris 데이터 셋 구성 (key values):</strong></p>
<ul>
<li>
<p><code>DESCR</code>: 데이터 셋의 정보를 보여줌</p>
</li>
<li>
<p><code>data</code>: feature data</p>
</li>
<li>
<p><code>feature_names</code>: feature data의 컬럼 이름</p>
</li>
<li>
<p><code>target</code>: label data (수치형)</p>
</li>
<li>
<p><code>target_names</code>: label data의 value 이름 (문자형)</p>
 <br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 데이터 셋 정보 확인하기</span></span><br><span class="line">print(iris[<span class="string">'DESCR'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _iris_dataset:

Iris plants dataset
--------------------

**Data Set Characteristics:**

    :Number of Instances: 150 (50 in each of three classes)
    :Number of Attributes: 4 numeric, predictive attributes and the class
    :Attribute Information:
        - sepal length in cm
        - sepal width in cm
        - petal length in cm
        - petal width in cm
        - class:
                - Iris-Setosa
                - Iris-Versicolour
                - Iris-Virginica
                
    :Summary Statistics:

    ============== ==== ==== ======= ===== ====================
                    Min  Max   Mean    SD   Class Correlation
    ============== ==== ==== ======= ===== ====================
    sepal length:   4.3  7.9   5.84   0.83    0.7826
    sepal width:    2.0  4.4   3.05   0.43   -0.4194
    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)
    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)
    ============== ==== ==== ======= ===== ====================

    :Missing Attribute Values: None
    :Class Distribution: 33.3% for each of 3 classes.
    :Creator: R.A. Fisher
    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)
    :Date: July, 1988

The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken
from Fisher's paper. Note that it's the same as in R, but not as in the UCI
Machine Learning Repository, which has two wrong data points.

This is perhaps the best known database to be found in the
pattern recognition literature.  Fisher's paper is a classic in the field and
is referenced frequently to this day.  (See Duda &amp; Hart, for example.)  The
data set contains 3 classes of 50 instances each, where each class refers to a
type of iris plant.  One class is linearly separable from the other 2; the
latter are NOT linearly separable from each other.

.. topic:: References

   - Fisher, R.A. "The use of multiple measurements in taxonomic problems"
     Annual Eugenics, 7, Part II, 179-188 (1936); also in "Contributions to
     Mathematical Statistics" (John Wiley, NY, 1950).
   - Duda, R.O., &amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis.
     (Q327.D83) John Wiley &amp; Sons.  ISBN 0-471-22361-1.  See page 218.
   - Dasarathy, B.V. (1980) "Nosing Around the Neighborhood: A New System
     Structure and Classification Rule for Recognition in Partially Exposed
     Environments".  IEEE Transactions on Pattern Analysis and Machine
     Intelligence, Vol. PAMI-2, No. 1, 67-71.
   - Gates, G.W. (1972) "The Reduced Nearest Neighbor Rule".  IEEE Transactions
     on Information Theory, May 1972, 431-433.
   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al"s AUTOCLASS II
     conceptual clustering system finds 3 classes in the data.
   - Many, many more ...
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># data 불러오기</span></span><br><span class="line">data = iris[<span class="string">'data'</span>]</span><br><span class="line">data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[5.1, 3.5, 1.4, 0.2],
       [4.9, 3. , 1.4, 0.2],
       [4.7, 3.2, 1.3, 0.2],
       [4.6, 3.1, 1.5, 0.2],
       [5. , 3.6, 1.4, 0.2]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># feature names 확인하기</span></span><br><span class="line">feature_names = iris[<span class="string">'feature_names'</span>]</span><br><span class="line">feature_names</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['sepal length (cm)',
 'sepal width (cm)',
 'petal length (cm)',
 'petal width (cm)']
</code></pre>
<p><strong>[해석]</strong> sepal: 꽃 받침;  petal: 꽃잎</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># label data 확인하기</span></span><br><span class="line">target = iris[<span class="string">'target'</span>]</span><br><span class="line">target[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 0, 0, 0, 0])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># target names 확인하기</span></span><br><span class="line">iris[<span class="string">'target_names'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['setosa', 'versicolor', 'virginica'], dtype='&lt;U10')
</code></pre>
<br>
<h3 id="0-2-데이터프레임-만들기"><a class="markdownIt-Anchor" href="#0-2-데이터프레임-만들기"></a> 0-2. 데이터프레임 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># feature data 먼저 생성하기</span></span><br><span class="line">df_iris = pd.DataFrame(data, columns = feature_names)</span><br><span class="line">df_iris.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># target column 추가하기</span></span><br><span class="line">df_iris[<span class="string">'target'</span>] = target</span><br><span class="line">df_iris.head()  <span class="comment"># 최종 dataframe</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="0-3-시각화로-데이터셋-파악하기"><a class="markdownIt-Anchor" href="#0-3-시각화로-데이터셋-파악하기"></a> 0-3. 시각화로 데이터셋 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>1. Sepal data로 보는 꽃 종류</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_iris.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)',
       'petal width (cm)', 'target'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(<span class="string">'sepal width (cm)'</span>, <span class="string">'sepal length (cm)'</span>, hue=<span class="string">'target'</span>, palette=<span class="string">'muted'</span>, data=df_iris)</span><br><span class="line">plt.title(<span class="string">'Sepal'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_32_0.png" alt="png"></p>
<br>
<p><strong>2. petal data로 보는 꽃 종류</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(<span class="string">'petal width (cm)'</span>, <span class="string">'petal length (cm)'</span>, hue=<span class="string">'target'</span>, palette=<span class="string">'muted'</span>, data=df_iris)</span><br><span class="line">plt.title(<span class="string">'Petal'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_35_0.png" alt="png"></p>
<br>
<p><strong>3. 3D plot로 보는 꽃 종류 (PCA 이용)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">ax = Axes3D(fig, elev=<span class="number">-150</span>, azim=<span class="number">110</span>)</span><br><span class="line">X_reduced = PCA(n_components=<span class="number">3</span>).fit_transform(df_iris.drop(<span class="string">'target'</span>, <span class="number">1</span>))</span><br><span class="line">ax.scatter(X_reduced[:, <span class="number">0</span>], X_reduced[:, <span class="number">1</span>], X_reduced[:, <span class="number">2</span>], c=df_iris[<span class="string">'target'</span>],</span><br><span class="line">           cmap=plt.cm.Set1, edgecolor=<span class="string">'k'</span>, s=<span class="number">40</span>)</span><br><span class="line">ax.set_title(<span class="string">"Iris 3D"</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">"x"</span>)</span><br><span class="line">ax.w_xaxis.set_ticklabels([])</span><br><span class="line">ax.set_ylabel(<span class="string">"y"</span>)</span><br><span class="line">ax.w_yaxis.set_ticklabels([])</span><br><span class="line">ax.set_zlabel(<span class="string">"z"</span>)</span><br><span class="line">ax.w_zaxis.set_ticklabels([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_38_0.png" alt="png"></p>
<br>
<br>
<h2 id="1-training-set-validation-set-나누기"><a class="markdownIt-Anchor" href="#1-training-set-validation-set-나누기"></a> <strong>1. training set / validation set 나누기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(df_iris.drop(<span class="string">'target'</span>, <span class="number">1</span>), df_iris[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((112, 4), (112,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((38, 4), (38,))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1cb7aaaeec8&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn2/output_46_1.png" alt="png"></p>
<p>'target’값이 0, 1, 2인 데이터가 Original dataset으로 부터 랜덤으로 뽑히기 때문에 <strong>비율의 차이가 존재</strong>할 수 있다. 따라서 기계학습할 때 <strong>sample size가 큰 데이터 위주로 학습</strong>하여 모델의 <strong>예측성능이 떨어질</strong> 수 있다. (위 상황에서, 학습된 머신러닝 모델이 sample size가 큰 target=1인 경우를 좀 더 잘 예측하고, target=2에 대한 예측도가 떨어질 수 있다)</p>
<p>이를 방지하기 위해 우리는 <strong><code>stratify</code>옵션</strong>을 이용하여 label의 class 분포를 균등하게 배분한다.</p>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(df_iris.drop(<span class="string">'target'</span>, <span class="number">1</span>), df_iris[<span class="string">'target'</span>], stratify=df_iris[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1cb7b17b508&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn2/output_50_1.png" alt="png"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((112, 4), (112,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((38, 4), (38,))
</code></pre>
<br>
  <br>
<h2 id="2-하이퍼-파라미터-hyper-parameter-튜닝"><a class="markdownIt-Anchor" href="#2-하이퍼-파라미터-hyper-parameter-튜닝"></a> <strong>2. 하이퍼 파라미터 (hyper-parameter) 튜닝</strong></h2>
<p>모델 학습할 때 설정 한 옵션들은 **하이퍼 파라미터 (hyper-parameter)**라고 한다. 설정한 값에 따라 모델 성능도 달라질 수 있다.</p>
<p>각 알고리즘 별, hyper-parameter의 종류가 매우 다양하다. 다음 두 가지 parameter는 기본적으로 설정해주는 것이 좋다:</p>
<ul>
<li>
<p>random_state: sampling seed 설정 (항상 동일하게 sampling 하기)</p>
</li>
<li>
<p>n_jobs=-1: CPU를 모두 사용 (학습속도가 빠름)</p>
<br>
</li>
</ul>
<h2 id="3-분류-알고리즘"><a class="markdownIt-Anchor" href="#3-분류-알고리즘"></a> <strong>3. 분류 알고리즘</strong></h2>
<h3 id="3-1-logistic-regression"><a class="markdownIt-Anchor" href="#3-1-logistic-regression"></a> 3-1. Logistic Regression</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regression#sklearn.linear_model.LogisticRegression" target="_blank" rel="noopener">[sklearn.linear_model.<strong>LogisticRegression</strong>] Document</a></p>
</blockquote>
<p>Logistic Regression, SVM(Support Vector Machine)과 같은 알고리즘은 <strong>이진(Binary Class) 분류만 가능</strong>한다. (2개의 클래스 판별만 가능한다.)</p>
<p>하지만, <strong>3개 이상의 클래스에 대한 판별</strong> **[다중 클래스(Multi-Class) 분류]**을 진행하는 경우, 다음과 같은 전략으로 판별한다.</p>
<ul>
<li>
<p><strong>one-vs-one (OvO)</strong>:   K 개의 클래스가 존재할 때, 이 중 2개의 클래스 조합을 선택하여  <font color="blue">K(K−1)/2 개</font>의 이진 클래스 분류 문제를 풀고 이진판별을 통해 가장 많은 판별값을 얻은 클래스를 선택하는 방법이다.</p>
</li>
<li>
<p><strong>one-vs-rest (OvR)</strong>: K 개의 클래스가 존재할 때, 클래스들을 “k번째 클래스(one)” &amp; "나머지(rest)"로 나누어서 <font color="blue">K개</font>의 개별 이진 분류 문제를 푼다. 즉, 각각의 클래스에 대해 표본이 속하는지(y=1) 속하지 않는지(y=0)의 이진 분류 문제를 푸는 것이다. OvO와 달리 클래스 수만큼의 이진 분류 문제를 풀면 된다.</p>
</li>
</ul>
<p>대부분 <strong>OvsR 전략을 선호</strong>합니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 1: 모델 선언</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr = LogisticRegression(random_state=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 2: 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
</code></pre>
<p><strong>step 3: 예측</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction = lr.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 2, 0])
</code></pre>
<p><strong>step 4: 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(prediction == y_valid).mean()  <span class="comment"># 정확도</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
 <br> 
<h3 id="3-2-sgd-sgdclassifier"><a class="markdownIt-Anchor" href="#3-2-sgd-sgdclassifier"></a> 3-2. SGD (SGDClassifier)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html" target="_blank" rel="noopener">[sklearn.linear_model.<strong>SGDClassifier</strong>] Document</a></p>
</blockquote>
<p><strong>stochastic gradient descent (SGD):</strong> 확률적 경사 하강법</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 출처: https://machinelearningnotepad.wordpress.com/</span></span><br><span class="line">Image(<span class="string">'https://machinelearningnotepad.files.wordpress.com/2018/04/yk1mk.png'</span>, width=<span class="number">500</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_80_0.png" alt="png" style="zoom: 33%;">
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> SGDClassifier</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 1: 모델 선언</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd = SGDClassifier(random_state=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 2: 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None, penalty='l2',
              power_t=0.5, random_state=0, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
</code></pre>
<p><strong>step 3: 예측</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction = sgd.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 4: 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(prediction == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
 <br> 
<p><strong>Change hyper-parameter values:</strong></p>
<p>e.g.: penalty = ‘l1’, random_state = 1, n_jobs = -1</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd2 = SGDClassifier(penalty=<span class="string">'l1'</span>, random_state=<span class="number">1</span>, n_jobs=<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd2.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l1',
              power_t=0.5, random_state=1, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction2 = sgd2.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(prediction2 == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1.0
</code></pre>
 <br> 
<h3 id="3-3-knn-kneighborsclassifier"><a class="markdownIt-Anchor" href="#3-3-knn-kneighborsclassifier"></a> 3-3. KNN (KNeighborsClassifier)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html" target="_blank" rel="noopener">[sklearn.neighbors.<strong>KNeighborsClassifier</strong>] Document</a></p>
</blockquote>
<p><strong>KNN (K Nearest Neighbors):</strong> K 최근접 이웃 알고리즘</p>
<p>새로운 데이터의 분류 결과가 K 개 최근접 이웃의 클래스에 의해서 결정되며, 데이터는 가장 많이 할당되는 클래스로 분류하게 된다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 출처: 데이터 캠프</span></span><br><span class="line">Image(<span class="string">'https://res.cloudinary.com/dyd911kmh/image/upload/f_auto,q_auto:best/v1531424125/KNN_final_a1mrv9.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_102_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 모델 선언</span></span><br><span class="line">knn = KNeighborsClassifier()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 2. 모델 학습</span></span><br><span class="line">knn.fit(x_train, y_train)  <span class="comment"># default: n_neighbors=5</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 3. 예측</span></span><br><span class="line">prediction = knn.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 4. 평가</span></span><br><span class="line">(prediction == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9210526315789473
</code></pre>
  <br>
<p>n_neighnors를 9개로 설정하여 다시 예측해본다:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">knn2 = KNeighborsClassifier(n_neighbors=<span class="number">9</span>)</span><br><span class="line">knn2.fit(x_train, y_train)</span><br><span class="line">knn2_pred = knn2.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(knn2_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
<br>  
<h3 id="3-4-svm-svc"><a class="markdownIt-Anchor" href="#3-4-svm-svc"></a> 3-4. SVM (SVC)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC" target="_blank" rel="noopener">[sklearn.svm.<strong>SVC</strong>] Document</a></p>
</blockquote>
<ul>
<li>새로운 데이터가 어느 카테고리에 속할지 판단하는 비확률적 이진 선형 분류 모델을 만듦.</li>
<li>경계로 표현되는 데이터들 중 가장 큰 폭을 가진 경계를 찾는 알고리즘.</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://csstudy.files.wordpress.com/2011/03/screen-shot-2011-02-28-at-5-53-26-pm.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_117_0.png" alt="png"></p>
<br>
<p>SVM은 Logistic Regression과 같이 이진 분류만 가능하다. (2개의 클래스 판별만 가능)<br>
3개 이상의 클래스인 경우: <strong>OvsR 전략</strong> 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC  <span class="comment"># SVC: Support Vector Classification</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc = SVC(random_state=<span class="number">0</span>)</span><br><span class="line">svc.fit(x_train, y_train)</span><br><span class="line">svc_pred = svc.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc  <span class="comment"># hyper-parameter 확인</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='rbf',
    max_iter=-1, probability=False, random_state=0, shrinking=True, tol=0.001,
    verbose=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(svc_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
<br>
<p>각 클래스 별 확률값을 return해주는 <code>decision_function()</code></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc.decision_function(x_valid)[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 2.22273426,  1.18194657, -0.25426485],
       [-0.22060229,  2.23192595,  0.91725911],
       [-0.23638817,  1.18969144,  2.17593611],
       [-0.23457057,  1.07146337,  2.22588253],
       [ 2.22808358,  1.16872302, -0.25381783]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc_pred[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 2, 0])
</code></pre>
<p><strong>확률값이 제일 높은 클래스</strong>로 분류(예측) 된 것을 확인하실 수 있다</p>
<br>  
<h3 id="3-5-decision-tree-decisiontreeclassifier"><a class="markdownIt-Anchor" href="#3-5-decision-tree-decisiontreeclassifier"></a> 3-5. Decision Tree (DecisionTreeClassifier)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html?highlight=decision%20tree#sklearn.tree.DecisionTreeClassifier" target="_blank" rel="noopener">[sklearn.tree.<strong>DecisionTreeClassifier</strong>] Document</a></p>
</blockquote>
<h4 id="1-decision-tree-의사-결정-나무-나무-가지치기를-통해-소그룹으로-나누어-판별하는것"><a class="markdownIt-Anchor" href="#1-decision-tree-의사-결정-나무-나무-가지치기를-통해-소그룹으로-나누어-판별하는것"></a> 1. Decision Tree (의사 결정 나무): 나무 가지치기를 통해 소그룹으로 나누어 판별하는것</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://www.researchgate.net/profile/Ludmila_Aleksejeva/publication/293194222/figure/fig1/AS:669028842487827@1536520314657/Decision-tree-for-Iris-dataset.png'</span>, width=<span class="number">500</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_132_0.png" alt="png" style="zoom: 67%;">
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">dt = DecisionTreeClassifier(random_state=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">dt.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=0, splitter='best')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">dt_pred = dt.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(dt_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9210526315789473
</code></pre>
<br>  
<h4 id="2-decision-tree-분류-결과-시각화"><a class="markdownIt-Anchor" href="#2-decision-tree-분류-결과-시각화"></a> 2. Decision Tree 분류 결과 시각화</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> export_graphviz</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>방법 1:</strong> <code>pydot</code>을 사용하여 "<em>dot</em> 파일"을 "<em>png</em> 이미지"로 전환 (<a href="https://niceman.tistory.com/169" target="_blank" rel="noopener">참고</a>)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install pydot</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Collecting pydotNote: you may need to restart the kernel to use updated packages.
  Downloading pydot-1.4.1-py2.py3-none-any.whl (19 kB)
Requirement already satisfied: pyparsing&gt;=2.1.4 in d:\anaconda\lib\site-packages (from pydot) (2.4.6)
Installing collected packages: pydot
Successfully installed pydot-1.4.1
</code></pre>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 참고: https://niceman.tistory.com/169</span></span><br><span class="line"><span class="keyword">import</span> pydot</span><br><span class="line"></span><br><span class="line"><span class="comment"># .dot결과 생성</span></span><br><span class="line">export_graphviz(dt, out_file=<span class="string">'tree.dot'</span>, feature_names=feature_names, class_names=np.unique(iris[<span class="string">'target_names'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Encoding</span></span><br><span class="line">(graph,) = pydot.graph_from_dot_file(<span class="string">'tree.dot'</span>, encoding=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># .dot파일을 .png이미지로 저장</span></span><br><span class="line">graph.write_png(<span class="string">'tree.png'</span>)</span><br><span class="line"></span><br><span class="line">Image(filename = <span class="string">'tree.png'</span>, width=<span class="number">600</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_144_0.png" alt="png" style="zoom: 80%;">
  <br>
 <br>
<p><strong>방법 2:</strong> <code>graphviz.Source</code>이용 (<a href="https://www.kaggle.com/praanj/titanic-decision-tree-complete-evaluation" target="_blank" rel="noopener">참고</a>)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install -U graphviz</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Requirement already up-to-date: graphviz in d:\anaconda\lib\site-packages (0.14.1)
Note: you may need to restart the kernel to use updated packages.
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> graphviz</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 참고: https://www.kaggle.com/vaishvik25/titanic-eda-fe-3-model-decision-tree-viz</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier, export_graphviz</span><br><span class="line"></span><br><span class="line">tree_dot = export_graphviz(dt,out_file=<span class="literal">None</span>, feature_names=feature_names, class_names=np.unique(iris[<span class="string">'target_names'</span>]))</span><br><span class="line">tree = graphviz.Source(tree_dot)</span><br><span class="line">tree</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_149_0.svg" alt="svg" style="zoom: 80%;">
 <br>
<p><strong>gini계수:</strong> 불순도를 의미함. gini계수가 높을 수록 엔트로피(Entropy)가 큼. 즉, 클래스가 혼잡하게 섞여 있음.</p>
  <br>
<h4 id="3-가지-치기-pruning"><a class="markdownIt-Anchor" href="#3-가지-치기-pruning"></a> 3. 가지 치기 (pruning)</h4>
<p>Overfitting을 방지하기 위해 적당히 가지 치기를 진행한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 수동으로 max_depth 설정</span></span><br><span class="line">dt2 = DecisionTreeClassifier(max_depth=<span class="number">2</span>)</span><br><span class="line">dt2.fit(x_train, y_train)</span><br><span class="line">dt2_pred = dt2.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(dt2_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9210526315789473
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tree2_dot = export_graphviz(dt2,out_file=<span class="literal">None</span>, feature_names=feature_names, class_names=np.unique(iris[<span class="string">'target_names'</span>]))</span><br><span class="line">tree2 = graphviz.Source(tree2_dot)</span><br><span class="line">tree2</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_156_0.svg" alt="svg"></p>
  <br>
  <br>
<h2 id="4-모델-성능-평가-지표"><a class="markdownIt-Anchor" href="#4-모델-성능-평가-지표"></a> <strong>4. 모델 성능 평가 지표</strong></h2>
<blockquote>
<p>참고자료: <a href="https://sumniya.tistory.com/26" target="_blank" rel="noopener">분류성능평가지표 - Precision(정밀도), Recall(재현율) and Accuracy(정확도)</a></p>
</blockquote>
<h3 id="4-1-오차-행렬-confusion-matrix"><a class="markdownIt-Anchor" href="#4-1-오차-행렬-confusion-matrix"></a> 4-1. 오차 행렬 (Confusion Matrix)</h3>
<img src="/images/S-Python-sklearn2/a9psOK.png" alt="confusion_matrix" style="zoom: 67%;">
  <br>
<h3 id="4-2-정확도-accuracy"><a class="markdownIt-Anchor" href="#4-2-정확도-accuracy"></a> 4-2. 정확도 (Accuracy)</h3>
<p><strong>정확도 (Accuracy):</strong> 모델이 샘플을 올바르게 예측하는 비율</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>c</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Accuracy = \frac{TP+TN}{TP+FP+TN+FN}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">c</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
 <br> 
<p><strong>!!정확도의 함정!!</strong></p>
<p>정확도는 모델의 성능을 가장 지관적으로 나타낼 수 있는 평가 지표다. 하지만, 만약 Actual positive sample과 Actual negative sample의 비율이 차이가 많이 나면 <strong>정확도의 함정</strong>에 빠질 수 있다.</p>
<p>즉, <em><strong>모두 positive / negative로 예측</strong></em> 했을 때 모델의 정확도가 매우 높은 경우다. 이 경우에 <font color="blue"><strong>예측 정확도가 높지만, 모델의 예측 성능이 좋다라고 말할 수는 없다.</strong></font></p>
  <br>
<p>유방암 환자 데이터셋을 이용하여 한번 이해해 볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_breast_cancer</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">cancer = load_breast_cancer(유방암 환자 데이터셋)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(cancer[<span class="string">'DESCR'</span>])  <span class="comment"># describe</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _breast_cancer_dataset:

Breast cancer wisconsin (diagnostic) dataset
--------------------------------------------

**Data Set Characteristics:**

    :Number of Instances: 569

    :Number of Attributes: 30 numeric, predictive attributes and the class

    :Attribute Information:
        - radius (mean of distances from center to points on the perimeter)
        - texture (standard deviation of gray-scale values)
        - perimeter
        - area
        - smoothness (local variation in radius lengths)
        - compactness (perimeter^2 / area - 1.0)
        - concavity (severity of concave portions of the contour)
        - concave points (number of concave portions of the contour)
        - symmetry 
        - fractal dimension ("coastline approximation" - 1)

        The mean, standard error, and "worst" or largest (mean of the three
        largest values) of these features were computed for each image,
        resulting in 30 features.  For instance, field 3 is Mean Radius, field
        13 is Radius SE, field 23 is Worst Radius.

        - class:
                - WDBC-Malignant
                - WDBC-Benign

    :Summary Statistics:

    ===================================== ====== ======
                                           Min    Max
    ===================================== ====== ======
    radius (mean):                        6.981  28.11
    texture (mean):                       9.71   39.28
    perimeter (mean):                     43.79  188.5
    area (mean):                          143.5  2501.0
    smoothness (mean):                    0.053  0.163
    compactness (mean):                   0.019  0.345
    concavity (mean):                     0.0    0.427
    concave points (mean):                0.0    0.201
    symmetry (mean):                      0.106  0.304
    fractal dimension (mean):             0.05   0.097
    radius (standard error):              0.112  2.873
    texture (standard error):             0.36   4.885
    perimeter (standard error):           0.757  21.98
    area (standard error):                6.802  542.2
    smoothness (standard error):          0.002  0.031
    compactness (standard error):         0.002  0.135
    concavity (standard error):           0.0    0.396
    concave points (standard error):      0.0    0.053
    symmetry (standard error):            0.008  0.079
    fractal dimension (standard error):   0.001  0.03
    radius (worst):                       7.93   36.04
    texture (worst):                      12.02  49.54
    perimeter (worst):                    50.41  251.2
    area (worst):                         185.2  4254.0
    smoothness (worst):                   0.071  0.223
    compactness (worst):                  0.027  1.058
    concavity (worst):                    0.0    1.252
    concave points (worst):               0.0    0.291
    symmetry (worst):                     0.156  0.664
    fractal dimension (worst):            0.055  0.208
    ===================================== ====== ======

    :Missing Attribute Values: None

    :Class Distribution: 212 - Malignant, 357 - Benign

    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian

    :Donor: Nick Street

    :Date: November, 1995

This is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.
https://goo.gl/U2Uwz2

Features are computed from a digitized image of a fine needle
aspirate (FNA) of a breast mass.  They describe
characteristics of the cell nuclei present in the image.

Separating plane described above was obtained using
Multisurface Method-Tree (MSM-T) [K. P. Bennett, "Decision Tree
Construction Via Linear Programming." Proceedings of the 4th
Midwest Artificial Intelligence and Cognitive Science Society,
pp. 97-101, 1992], a classification method which uses linear
programming to construct a decision tree.  Relevant features
were selected using an exhaustive search in the space of 1-4
features and 1-3 separating planes.

The actual linear program used to obtain the separating plane
in the 3-dimensional space is that described in:
[K. P. Bennett and O. L. Mangasarian: "Robust Linear
Programming Discrimination of Two Linearly Inseparable Sets",
Optimization Methods and Software 1, 1992, 23-34].

This database is also available through the UW CS ftp server:

ftp ftp.cs.wisc.edu
cd math-prog/cpo-dataset/machine-learn/WDBC/

.. topic:: References

   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction 
     for breast tumor diagnosis. IS&amp;T/SPIE 1993 International Symposium on 
     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,
     San Jose, CA, 1993.
   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and 
     prognosis via linear programming. Operations Research, 43(4), pages 570-577, 
     July-August 1995.
   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques
     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) 
     163-171.
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = cancer[<span class="string">'data'</span>]</span><br><span class="line">target = cancer[<span class="string">'target'</span>]</span><br><span class="line">feature_names = cancer[<span class="string">'feature_names'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 데이터 프레임 생성</span></span><br><span class="line">df = pd.DataFrame(data = data, columns = feature_names)</span><br><span class="line">df[<span class="string">'target'</span>] = target</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mean radius</th>
      <th>mean texture</th>
      <th>mean perimeter</th>
      <th>mean area</th>
      <th>mean smoothness</th>
      <th>mean compactness</th>
      <th>mean concavity</th>
      <th>mean concave points</th>
      <th>mean symmetry</th>
      <th>mean fractal dimension</th>
      <th>...</th>
      <th>worst texture</th>
      <th>worst perimeter</th>
      <th>worst area</th>
      <th>worst smoothness</th>
      <th>worst compactness</th>
      <th>worst concavity</th>
      <th>worst concave points</th>
      <th>worst symmetry</th>
      <th>worst fractal dimension</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>17.99</td>
      <td>10.38</td>
      <td>122.80</td>
      <td>1001.0</td>
      <td>0.11840</td>
      <td>0.27760</td>
      <td>0.3001</td>
      <td>0.14710</td>
      <td>0.2419</td>
      <td>0.07871</td>
      <td>...</td>
      <td>17.33</td>
      <td>184.60</td>
      <td>2019.0</td>
      <td>0.1622</td>
      <td>0.6656</td>
      <td>0.7119</td>
      <td>0.2654</td>
      <td>0.4601</td>
      <td>0.11890</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20.57</td>
      <td>17.77</td>
      <td>132.90</td>
      <td>1326.0</td>
      <td>0.08474</td>
      <td>0.07864</td>
      <td>0.0869</td>
      <td>0.07017</td>
      <td>0.1812</td>
      <td>0.05667</td>
      <td>...</td>
      <td>23.41</td>
      <td>158.80</td>
      <td>1956.0</td>
      <td>0.1238</td>
      <td>0.1866</td>
      <td>0.2416</td>
      <td>0.1860</td>
      <td>0.2750</td>
      <td>0.08902</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>19.69</td>
      <td>21.25</td>
      <td>130.00</td>
      <td>1203.0</td>
      <td>0.10960</td>
      <td>0.15990</td>
      <td>0.1974</td>
      <td>0.12790</td>
      <td>0.2069</td>
      <td>0.05999</td>
      <td>...</td>
      <td>25.53</td>
      <td>152.50</td>
      <td>1709.0</td>
      <td>0.1444</td>
      <td>0.4245</td>
      <td>0.4504</td>
      <td>0.2430</td>
      <td>0.3613</td>
      <td>0.08758</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>11.42</td>
      <td>20.38</td>
      <td>77.58</td>
      <td>386.1</td>
      <td>0.14250</td>
      <td>0.28390</td>
      <td>0.2414</td>
      <td>0.10520</td>
      <td>0.2597</td>
      <td>0.09744</td>
      <td>...</td>
      <td>26.50</td>
      <td>98.87</td>
      <td>567.7</td>
      <td>0.2098</td>
      <td>0.8663</td>
      <td>0.6869</td>
      <td>0.2575</td>
      <td>0.6638</td>
      <td>0.17300</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>20.29</td>
      <td>14.34</td>
      <td>135.10</td>
      <td>1297.0</td>
      <td>0.10030</td>
      <td>0.13280</td>
      <td>0.1980</td>
      <td>0.10430</td>
      <td>0.1809</td>
      <td>0.05883</td>
      <td>...</td>
      <td>16.67</td>
      <td>152.20</td>
      <td>1575.0</td>
      <td>0.1374</td>
      <td>0.2050</td>
      <td>0.4000</td>
      <td>0.1625</td>
      <td>0.2364</td>
      <td>0.07678</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 31 columns</p>
</div>
</div>
<br>
<p><strong>target:</strong> 0: Malignant (악성종양);  1: Benign (양성종양)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pos = df.loc[df[<span class="string">'target'</span>] == <span class="number">1</span>] <span class="comment"># 앙성 sample</span></span><br><span class="line">neg = df.loc[df[<span class="string">'target'</span>] == <span class="number">0</span>] <span class="comment"># 음성 sample</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pos.shape, neg.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((357, 31), (212, 31))
</code></pre>
<br>
<p><strong>시범용 sample data를 생성:</strong> 양성 환자 357 + 음성 환자 5</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sample = pd.concat([pos, neg[:<span class="number">5</span>]], sort=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(sample.drop(<span class="string">'target'</span>,<span class="number">1</span>), sample[<span class="string">'target'</span>], random_state=<span class="number">42</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((271, 30), (271,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((91, 30), (91,))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모델 정의 및 학습</span></span><br><span class="line">model = LogisticRegression()</span><br><span class="line">model.fit(x_train, y_train)</span><br><span class="line">model_pred = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<ul>
<li>Confusion Matrix</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">confusion_matrix(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  0],
       [ 2, 88]], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.heatmap(confusion_matrix(y_test, model_pred), annot=<span class="literal">True</span>, cmap=<span class="string">'Reds'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Predict'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Actual'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_192_0.png" alt="png"></p>
<br>
<ul>
<li>정확도 (Accuracy)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># logistic 모델 정확도</span></span><br><span class="line">(model_pred == y_test).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.978021978021978
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모두 양성으로 예측한 경우</span></span><br><span class="line">my_pred = np.ones(shape=y_test.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 정확도</span></span><br><span class="line">(my_pred == y_test).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.989010989010989
</code></pre>
<p>정확도만 놓고 본다면, 무조건 양성 환자로 예측하는 분류기가 성능이 더 좋다. 하지만 <strong>무조건 양성 환자로 예측해서 예측율이 98.9%로 말하는 의사는</strong> 당영히 자질이 좋은 의사라고 볼 수 없다</p>
<p>정확도(Accuracy)만 보고 분류기의 성능을 판별하는 것은 위와 같은 오류에 빠질 수 있다. 이를 보완하기 위해 다음과 같은 지표들도 같이 활용하게 된다</p>
  <br>
<h3 id="4-3-정밀도-precision"><a class="markdownIt-Anchor" href="#4-3-정밀도-precision"></a> 4-3. 정밀도 (Precision)</h3>
<p><strong>정밀도 (Precision):</strong> 양성 예측의 정확도. 즉, Positive Prediction 중에서 올바르게 예측되는 비율</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Precision=\frac{TP}{TP+FP}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> precision_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">precision_score(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1.0
</code></pre>
<br>
<h3 id="4-4-민감도-sensitivity-재현율-recall"><a class="markdownIt-Anchor" href="#4-4-민감도-sensitivity-재현율-recall"></a> 4-4. 민감도 (Sensitivity)  /  재현율 (Recall)</h3>
<p><strong>민감도 (Sensitivity) / 재현율 (Recall):</strong><br>
분류기가 양성 샘플에 대한 식별력을 나타남. 즉, Positive Condition 중에서 올바르게 예측되는 비율. True Positive Rate (TPR) 이라고도 불린다.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>e</mi><mi>n</mi><mi>s</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>i</mi><mi>t</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Sensitivity / Recall = \frac{TP}{TP+FN}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> recall_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">recall_score(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9777777777777777
</code></pre>
  <br>
<h3 id="4-5-특이도-specificity"><a class="markdownIt-Anchor" href="#4-5-특이도-specificity"></a> 4-5. 특이도 (Specificity)</h3>
<p><strong>특이도 (Specificity):</strong> 분류기가 음성 샘플에 대한 식별력을 나타남. 즉, Negative Condition 중에서 올바르게 예측되는 비율. True Negative Rate (TNR) 이라고도 불린다.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Specificity = \frac{TN}{TN+FP}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>  
<h3 id="4-6-f1-score"><a class="markdownIt-Anchor" href="#4-6-f1-score"></a> 4-6. F1 Score</h3>
<p><strong>F1 Score:</strong> 정밀도(Precision)와 재현율(Recall)의 조화 평균을 나타나는 지표임.<br>
데이터 label이 불균형 구조일 때, 모델의 성능을 정확하게 평가할 수 있으며, 성능을 하나의 숫자로 표현할 수 있다.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mn>1</mn><mtext>&nbsp;</mtext><mi>S</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mfrac><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>∗</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mfrac><mrow><mi>F</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow><mn>2</mn></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">F1\ Score = 2*\frac{Precision * Recall}{Precision + Recall}=\frac{TP}{TP+\frac{FN+FP}{2}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace">&nbsp;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4676609999999997em;vertical-align:-1.1073309999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.2376690000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1073309999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> f1_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">f1_score(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9887640449438202
</code></pre>
<br>
<br>
<h3 id=""><a class="markdownIt-Anchor" href="#"></a> </h3>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Machine Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>분류</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 분석 함수 (2)</title>
    <url>/2020/11/18/S-SQL-Analytic-Function-2/</url>
    <content><![CDATA[<h1 id="분석-함수-2"><a class="markdownIt-Anchor" href="#분석-함수-2"></a> 분석 함수 (2)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-first_value-last_value-%ED%95%A8%EC%88%98"><strong>1. FIRST_VALUE, LAST_VALUE 함수</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-first_name-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">1-2. FIRST_NAME 함수 실습</a></li>
<li><a href="#1-3-last_value-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">1-3. LAST_VALUE 함수 실습</a></li>
</ul>
</li>
<li><a href="#2-lag-lead-%ED%95%A8%EC%88%98"><strong>2. LAG, LEAD 함수</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-lag-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5-%EC%9D%B4%EC%A0%84-%ED%96%89%EC%9D%98-%EA%B0%92%EC%9D%84-%EC%B0%BE%EB%8A%94%EB%8B%A4">2-2. LAG 함수 실습 – 이전 행의 값을 찾는다</a></li>
<li><a href="#2-3-lead-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5-%EB%8B%A4%EC%9D%8C-%ED%96%89%EC%9D%98-%EA%B0%92%EC%9D%84-%EC%B0%BE%EB%8A%94%EB%8B%A4">2-3. LEAD 함수 실습 – 다음 행의 값을 찾는다</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-first_value-last_value-함수"><a class="markdownIt-Anchor" href="#1-first_value-last_value-함수"></a> <strong>1. FIRST_VALUE, LAST_VALUE 함수</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>FIRST_VALUE, LAST_VALUE 함수는 특정 집합 내에서 결과 건수의 변화 없이 해당 집합안에서 <strong>특정 컬럼의 첫번째 값 혹은 마지막 값을 구하는 함수</strong>이다.</p>
<br>
<h3 id="1-2-first_name-함수-실습"><a class="markdownIt-Anchor" href="#1-2-first_name-함수-실습"></a> 1-2. FIRST_NAME 함수 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT_GROUP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117095413411.png" alt="image-20201117095413411" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117095502521.png" alt="image-20201117095502521" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; MISSION:</strong> GROUP_NAME 기준 PRICE가 가장 작은 값을 출력한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  <span class="keyword">FIRST_VALUE</span> (A.PRICE) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE)</span><br><span class="line">    <span class="keyword">AS</span> LOWEST_PRICE_PER_GROUP</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117160221397.png" alt="image-20201117160221397" style="zoom:80%;">
<br>
<h3 id="1-3-last_value-함수-실습"><a class="markdownIt-Anchor" href="#1-3-last_value-함수-실습"></a> 1-3. LAST_VALUE 함수 실습</h3>
<p>LAST_VALUE 함수 사용 시 추가적으로 LAST_VALUE를 선택하는 범위를 지정해줘야 함.</p>
<br>
<p><strong>&gt;&gt; MISSION:</strong> GROUP_NAME 기준 PRICE가 가장 큰 값을 출력한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  <span class="keyword">LAST_VALUE</span> (A.PRICE) <span class="keyword">OVER</span> </span><br><span class="line">    (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE</span><br><span class="line">     <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="keyword">UNBOUNDED</span> <span class="keyword">PRECEDING</span>   <span class="comment">-- PARTITION의 첫번째 ROW부터</span></span><br><span class="line">     <span class="keyword">AND</span> <span class="keyword">UNBOUNDED</span> <span class="keyword">FOLLOWING</span>)            <span class="comment">-- PARTITION의 마지막 ROW까지</span></span><br><span class="line">     <span class="keyword">AS</span> HIGHEST_PRICE_PER_GROUP</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117162007699.png" alt="image-20201117162007699" style="zoom:80%;">
<br>
<ul>
<li>LAST_VALUE 함수에는 "RANGE BETWEEN ENBOUNDED PRECEDING AND <strong>UNBOUNDED FOLLOWING</strong>"를 추가함</li>
<li>DEFAULT가 "RANGE BETWEEN ENBOUNDED PRECEDING AND <strong>CURRENT ROW</strong>"이기 때문이다</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- DEFAULT 경우:</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  <span class="keyword">LAST_VALUE</span> (A.PRICE) <span class="keyword">OVER</span> </span><br><span class="line">    (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE)            </span><br><span class="line">    <span class="keyword">AS</span> HIGHEST_PRICE_PER_GROUP</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117162655768.png" alt="image-20201117162655768" style="zoom:80%;">
<br>
<ul>
<li>범위 지정은 DEFAULT로 <strong>CURRENT ROW</strong> 까지여서 우리가 기대하는 바와 달리 PRICE 값 그대로 출력함.</li>
</ul>
<br>
<br>
<h2 id="2-lag-lead-함수"><a class="markdownIt-Anchor" href="#2-lag-lead-함수"></a> <strong>2. LAG, LEAD 함수</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>LAG 와 LEAD 함수는 특정 집합 내에서 결과 건수의 변화 없이 해당 집합안에서 <strong>특정 컬럼의 이전 행의 값 혹은 다음 행의 값을 구하는 함수</strong>이다.</p>
<br>
<h3 id="2-2-lag-함수-실습-이전-행의-값을-찾는다"><a class="markdownIt-Anchor" href="#2-2-lag-함수-실습-이전-행의-값을-찾는다"></a> 2-2. LAG 함수 실습 – 이전 행의 값을 찾는다</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT_GROUP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117095413411.png" alt="image-20201117095413411" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117095502521.png" alt="image-20201117095502521" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  LAG(A.PRICE, <span class="number">1</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE) <span class="keyword">AS</span> PREV_PRICE,</span><br><span class="line">  PRICE - LAG(A.PRICE, <span class="number">1</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE) <span class="keyword">AS</span> CUR_PREV_DIFF</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117170809941.png" alt="image-20201117170809941" style="zoom:80%;">
<br>
<h3 id="2-3-lead-함수-실습-다음-행의-값을-찾는다"><a class="markdownIt-Anchor" href="#2-3-lead-함수-실습-다음-행의-값을-찾는다"></a> 2-3. LEAD 함수 실습 – 다음 행의 값을 찾는다</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  <span class="keyword">LEAD</span>(A.PRICE, <span class="number">1</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE) <span class="keyword">AS</span> NEXT_PRICE,</span><br><span class="line">  A.PRICE - <span class="keyword">LEAD</span>(A.PRICE, <span class="number">1</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE) <span class="keyword">AS</span> CUR_NEXT_DIFF</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-2/image-20201117170707029.png" alt="image-20201117170707029" style="zoom:80%;">
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 5. Analytic Function</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Analytic Function</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 집계 함수 (2) -- 고급 집계 함수</title>
    <url>/2020/11/17/S-SQL-Aggregate-2/</url>
    <content><![CDATA[<h1 id="집계-함수-2-고급-집계-함수"><a class="markdownIt-Anchor" href="#집계-함수-2-고급-집계-함수"></a> 집계 함수 (2) – 고급 집계 함수</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-grouping-set-%EC%A0%88"><strong>1. GROUPING SET 절</strong></a>
<ul>
<li><a href="#1-0-%ED%95%99%EC%8A%B5-%EC%A4%80%EB%B9%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1">1-0. 학습 준비 (데이터 생성)</a></li>
<li><a href="#1-1-group-by-%EC%A0%88-%ED%99%9C%EC%9A%A9">1-1. GROUP BY 절 활용</a>
<ul>
<li><a href="#1-2%EA%B0%9C-%EC%BB%AC%EB%9F%BC-group-by-%EC%A0%88">(1) 2개 컬럼 GROUP BY 절</a></li>
<li><a href="#2-1%EA%B0%9C-%EC%BB%AC%EB%9F%BC-group-by-%EC%A0%88">(2) 1개 컬럼 GROUP BY 절</a></li>
<li><a href="#3-group-by-%EC%95%88%ED%95%98%EA%B8%B0">(3) GROUP BY 안하기</a></li>
<li><a href="#4-%EC%B6%94%EC%B6%9C%EB%90%9C-%EC%A0%95%EB%B3%B4-%ED%95%A9%EC%B9%98%EA%B8%B0-union-all%EC%9D%98-%ED%99%9C%EC%9A%A9">(4) 추출된 정보 합치기 – UNION ALL의 활용</a></li>
</ul>
</li>
<li><a href="#1-2-grouping-set-%EC%A0%88-%ED%99%9C%EC%9A%A9">1-2. GROUPING SET 절 활용</a>
<ul>
<li><a href="#1-2-1-%EC%9A%A9%EB%8F%84">1-2-1. 용도</a></li>
<li><a href="#1-2-2-grouping-set-%EC%A0%88-%EB%AC%B8%EB%B2%95">1-2-2. GROUPING SET 절 문법</a></li>
<li><a href="#1-2-3-grouping-set-%EC%A0%88-%EC%8B%A4%EC%8A%B5">1-2-3. GROUPING SET 절 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-roll-up-%EC%A0%88"><strong>2. ROLL UP 절</strong></a>
<ul>
<li><a href="#2-1-%EC%9A%A9%EB%8F%84">2-1. 용도</a></li>
<li><a href="#2-2-rollup-%EC%A0%88-%EB%AC%B8%EB%B2%95">2-2. ROLLUP 절 문법</a>
<ul>
<li><a href="#1-%EC%A0%84%EC%B2%B4-roll-up">(1) 전체 ROLL UP</a></li>
<li><a href="#2-%EB%B6%80%EB%B6%84-roll-up">(2) 부분 ROLL UP</a></li>
</ul>
</li>
<li><a href="#2-3-rollup-%EC%A0%88-%EC%8B%A4%EC%8A%B5">2-3. ROLLUP 절 실습</a>
<ul>
<li><a href="#1-group-by%EB%A7%8C-%EC%82%AC%EC%9A%A9-roll-up-%EC%95%88%ED%95%A8">(1) GROUP BY만 사용 (ROLL UP 안함)</a></li>
<li><a href="#2-group-by-%EC%A0%84%EC%B2%B4-roll-up">(2) GROUP BY + 전체 ROLL UP</a></li>
<li><a href="#3-group-by-%EB%B6%80%EB%B6%84-roll-up">(3) GROUP BY + 부분 ROLL UP</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-cube-%EC%A0%88"><strong>3. CUBE 절</strong></a>
<ul>
<li><a href="#3-1-%EC%9A%A9%EB%8F%84">3-1. 용도</a></li>
<li><a href="#3-2-cube-%EC%A0%88-%EB%AC%B8%EB%B2%95">3-2. CUBE 절 문법</a>
<ul>
<li><a href="#1-%EC%A0%84%EC%B2%B4-%EC%BB%AC%EB%9F%BC-cube-%EC%A7%80%EC%A0%95">(1) 전체 컬럼 CUBE 지정</a></li>
<li><a href="#2-%EB%B6%80%EB%B6%84-%EC%BB%AC%EB%9F%BC-cube-%EC%A7%80%EC%A0%95">(2) 부분 컬럼 CUBE 지정</a></li>
</ul>
</li>
<li><a href="#3-3-cube-%EC%A0%88-%EC%8B%A4%EC%8A%B5">3-3. CUBE 절 실습</a>
<ul>
<li><a href="#1-%EC%A0%84%EC%B2%B4-%EC%BB%AC%EB%9F%BC-cube-%EC%A7%80%EC%A0%95-2">(1) 전체 컬럼 CUBE 지정</a></li>
<li><a href="#2-%EB%B6%80%EB%B6%84-%EC%BB%AC%EB%9F%BC-cube-%EC%A7%80%EC%A0%95-2">(2) 부분 컬럼 CUBE 지정</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-grouping-set-절"><a class="markdownIt-Anchor" href="#1-grouping-set-절"></a> <strong>1. GROUPING SET 절</strong></h2>
<h3 id="1-0-학습-준비-데이터-생성"><a class="markdownIt-Anchor" href="#1-0-학습-준비-데이터-생성"></a> 1-0. 학습 준비 (데이터 생성)</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SALES</span><br><span class="line">(</span><br><span class="line">  BRAND <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">SEGMENT</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  QUANTITY <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (BRAND, <span class="keyword">SEGMENT</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SALES (BRAND, <span class="keyword">SEGMENT</span>, QUANTITY)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'ABC'</span>, <span class="string">'Premium'</span>, <span class="number">100</span>),</span><br><span class="line">  (<span class="string">'ABC'</span>, <span class="string">'Basic'</span>, <span class="number">200</span>),</span><br><span class="line">  (<span class="string">'XYZ'</span>, <span class="string">'Premium'</span>, <span class="number">100</span>),</span><br><span class="line">  (<span class="string">'XYZ'</span>, <span class="string">'Basic'</span>, <span class="number">300</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113092929823-1605753863307.png" alt="image-20201113092929823" style="zoom:80%;">
<br>
<br>
<h3 id="1-1-group-by-절-활용"><a class="markdownIt-Anchor" href="#1-1-group-by-절-활용"></a> 1-1. GROUP BY 절 활용</h3>
<h4 id="1-2개-컬럼-group-by-절"><a class="markdownIt-Anchor" href="#1-2개-컬럼-group-by-절"></a> (1) 2개 컬럼 GROUP BY 절</h4>
<p><strong>[MISSION 1]</strong>  BRAND별, SEGMENT별 총 판패량 구하기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, </span><br><span class="line">  <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113093816617-1605753863308.png" alt="image-20201113093816617" style="zoom:80%;">
<br>
<h4 id="2-1개-컬럼-group-by-절"><a class="markdownIt-Anchor" href="#2-1개-컬럼-group-by-절"></a> (2) 1개 컬럼 GROUP BY 절</h4>
<p><strong>[MISSION 2]</strong>  BRAND별 총 판매량 구하기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">  BRAND;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-2/image-20201113094753809-1605753863308.png" alt="image-20201113094753809"></p>
<br>
<p><strong>[MISSION 3]</strong>  SEGMENT별 총 판매량 구하기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-2/image-20201113095022421-1605753863308.png" alt="image-20201113095022421"></p>
<br>
<h4 id="3-group-by-안하기"><a class="markdownIt-Anchor" href="#3-group-by-안하기"></a> (3) GROUP BY 안하기</h4>
<p><strong>[MISSION 4]</strong>  판매량 전체 합계 구하기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Aggregate-2/image-20201113095401699-1605753863308.png" alt="image-20201113095401699"></p>
<br>
<h4 id="4-추출된-정보-합치기-union-all의-활용"><a class="markdownIt-Anchor" href="#4-추출된-정보-합치기-union-all의-활용"></a> (4) 추출된 정보 합치기 – UNION ALL의 활용</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>             <span class="comment">-- BRAND별, SEGMENT별 총 판패량</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> BRAND, <span class="keyword">SEGMENT</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span>             <span class="comment">-- BRAND별 총 판패량</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> BRAND</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span>             <span class="comment">-- SEGMENT별 총 판패량</span></span><br><span class="line">  <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">SEGMENT</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span>             <span class="comment">-- 전체 총 판패량</span></span><br><span class="line">  <span class="literal">NULL</span>,</span><br><span class="line">  <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES;</span><br></pre></td></tr></tbody></table></figure>
<p><strong>[주의]</strong>  각각의 UNION query는 같은 수의 columns를 가져야 한다. 따라서 각 부분의 SELECT 절에서 컬럼수가 부족하면 NULL로 채워야 함.</p>
<img src="/images/S-SQL-Aggregate-2/image-20201113100352802-1605753863308.png" alt="image-20201113100352802" style="zoom:80%;">
<br>
<p><strong>이 방법의 단점:</strong></p>
<ul>
<li>동일한 테이블을 4번씩이나 읽고 있다. --&gt; 성능 저하 가능성이 존재</li>
<li>SQL 문이 너무 길어진다. --&gt;  복잡하다 --&gt; 유지보수가 용이하지 않다</li>
</ul>
<br>
<p><strong>&gt;&gt;</strong> 이런 불편함을 줄이기 위해서 GROUPING SET 절을 활용한다.</p>
<br>
<h3 id="1-2-grouping-set-절-활용"><a class="markdownIt-Anchor" href="#1-2-grouping-set-절-활용"></a> 1-2. GROUPING SET 절 활용</h3>
<h4 id="1-2-1-용도"><a class="markdownIt-Anchor" href="#1-2-1-용도"></a> 1-2-1. 용도</h4>
<p>GROUPING SET 절을 사용하여 여러 개의 UNION ALL을 이용한 SQL과 같은 결과를 도출할 수 있다.</p>
<br>
<h4 id="1-2-2-grouping-set-절-문법"><a class="markdownIt-Anchor" href="#1-2-2-grouping-set-절-문법"></a> 1-2-2. GROUPING SET 절 문법</h4>
<p>GROUPING SET 절을 이용하면 한번에 다양한 기준의 컬럼 조합으로 집계를 구할 수 있다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  C1,</span><br><span class="line">  C2,</span><br><span class="line">  집계함수(C3)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">GROUPING</span> <span class="keyword">SETS</span></span><br><span class="line">(</span><br><span class="line">  (C1, C2),</span><br><span class="line">  (C1),</span><br><span class="line">  (C2),</span><br><span class="line">  ()</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="1-2-3-grouping-set-절-실습"><a class="markdownIt-Anchor" href="#1-2-3-grouping-set-절-실습"></a> 1-2-3. GROUPING SET 절 실습</h4>
<p><strong>&gt;&gt; GROUPING SET 절의 활용</strong></p>
<p>GROUPING SET 절을 이용하여 BRAND, SEGMENT 기준, BRAND 기준, SEGMENT 기준, 전체기준으로 QUANTITY 합계의 값을 구할 수 있다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113092929823-1605753863307.png" alt="image-20201113092929823" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">GROUPING</span> <span class="keyword">SETS</span></span><br><span class="line">(</span><br><span class="line">  (BRAND, <span class="keyword">SEGMENT</span>),</span><br><span class="line">  (BRAND),</span><br><span class="line">  (<span class="keyword">SEGMENT</span>),</span><br><span class="line">  ()</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113104247913-1605753863308.png" alt="image-20201113104247913" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; GROUPING 함수의 활용</strong></p>
<p>GROUPING 함수를 이용하여 해당 컬럼이 GROUPING 시 사용되었으면 0, 그렇지 않으면 1을 리턴한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113092929823-1605753863307.png" alt="image-20201113092929823" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">GROUPING</span>(BRAND) <span class="keyword">AS</span> GROUPING_BRAND,</span><br><span class="line">  <span class="keyword">GROUPING</span>(<span class="keyword">SEGMENT</span>) <span class="keyword">AS</span> GROUPING_SEGMENT,</span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">GROUPING</span> <span class="keyword">SETS</span></span><br><span class="line">(</span><br><span class="line">  (BRAND, <span class="keyword">SEGMENT</span>),</span><br><span class="line">  (BRAND),</span><br><span class="line">  (<span class="keyword">SEGMENT</span>),</span><br><span class="line">  ()</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113111058889-1605753863309.png" alt="image-20201113111058889" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(BRAND) = <span class="number">0</span> <span class="keyword">AND</span> <span class="keyword">GROUPING</span>(<span class="keyword">SEGMENT</span>) = <span class="number">0</span> <span class="keyword">THEN</span> <span class="string">'브랜드별 + 등급별'</span></span><br><span class="line">       <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(BRAND) = <span class="number">0</span> <span class="keyword">AND</span> <span class="keyword">GROUPING</span>(<span class="keyword">SEGMENT</span>) = <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">'브랜드별'</span></span><br><span class="line">       <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(BRAND) = <span class="number">1</span> <span class="keyword">AND</span> <span class="keyword">GROUPING</span>(<span class="keyword">SEGMENT</span>) = <span class="number">0</span> <span class="keyword">THEN</span> <span class="string">'등급별'</span></span><br><span class="line">       <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(BRAND) = <span class="number">1</span> <span class="keyword">AND</span> <span class="keyword">GROUPING</span>(<span class="keyword">SEGMENT</span>) = <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">'전체합계'</span></span><br><span class="line">       <span class="keyword">ELSE</span> <span class="string">''</span></span><br><span class="line">       <span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">"집계기준"</span>,</span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">GROUPING</span> <span class="keyword">SETS</span></span><br><span class="line">(</span><br><span class="line">  (BRAND, <span class="keyword">SEGMENT</span>),</span><br><span class="line">  (BRAND),</span><br><span class="line">  (<span class="keyword">SEGMENT</span>),</span><br><span class="line">  ()</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> BRAND, <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113112514952-1605753863309.png" alt="image-20201113112514952" style="zoom:80%;">
<br>
<br>
<h2 id="2-roll-up-절"><a class="markdownIt-Anchor" href="#2-roll-up-절"></a> <strong>2. ROLL UP 절</strong></h2>
<h3 id="2-1-용도"><a class="markdownIt-Anchor" href="#2-1-용도"></a> 2-1. 용도</h3>
<p>지정된 GROUPING 컬럼의 소계를 생성하는데 사용된다. 간단한 문법으로 다양한 소계를 출력할 수 있다.</p>
<br>
<h3 id="2-2-rollup-절-문법"><a class="markdownIt-Anchor" href="#2-2-rollup-절-문법"></a> 2-2. ROLLUP 절 문법</h3>
<ul>
<li>
<p>ROLLUP 절은 GROUP BY 절과 함계 사용된다.</p>
</li>
<li>
<p>ROLLUP 할 컬럼은 무조건 SELECT 절에 포함되어 있어야 한다.</p>
</li>
<li>
<p>ROLLUP 절 컬럼의 <strong>지정 순서가 의미 있다</strong>.</p>
<br>
</li>
</ul>
<h4 id="1-전체-roll-up"><a class="markdownIt-Anchor" href="#1-전체-roll-up"></a> (1) 전체 ROLL UP</h4>
<ul>
<li>컬럼의 지정 순서가 <strong>의미 있음</strong></li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 전체 ROLL UP</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  C1, C2, C3,</span><br><span class="line">  집계함수(C4)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">ROLLUP</span>(C1, C2, C3);  <span class="comment">-- 소계를 생성할 컬럼을 지정한다.</span></span><br><span class="line">                       <span class="comment">-- 컬럼 지정 순서에 따라 결과값이 달라질 수 있다.</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201119102055273.png" alt="image-20201119102055273" style="zoom: 80%;">
<br>
<h4 id="2-부분-roll-up"><a class="markdownIt-Anchor" href="#2-부분-roll-up"></a> (2) 부분 ROLL UP</h4>
<ul>
<li>
<p>특정 컬럼만 분리하여 ROLL UP 할 수 있다</p>
</li>
<li>
<p>이런 경우에 분리된 특정 컬럼(C1)으로 시작하는 GROUPING SET 만 해당</p>
</li>
<li>
<p>즉, 전체 ROLL UP과 달리, GROUPING 하지 않는 전체 합계를 구하지 않는다.</p>
</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 부분 ROLL UP</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  C1, C2, C3,</span><br><span class="line">  집계함수(C4)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> C1</span><br><span class="line">  <span class="keyword">ROLLUP</span>(C2, C3)       <span class="comment">-- 특정 컬럼을 제외한 부분적인 ROLLUP도 가능하다.</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201119102820691.png" alt="image-20201119102820691" style="zoom:80%;">
<br>
<h3 id="2-3-rollup-절-실습"><a class="markdownIt-Anchor" href="#2-3-rollup-절-실습"></a> 2-3. ROLLUP 절 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113092929823-1605753863307.png" alt="image-20201113092929823" style="zoom:80%;">
<br>
<h4 id="1-group-by만-사용-roll-up-안함"><a class="markdownIt-Anchor" href="#1-group-by만-사용-roll-up-안함"></a> (1) GROUP BY만 사용 (ROLL UP 안함)</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- BRAND, SEGMENT 컬럼 기준으로 GROUP BY 한다.</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, <span class="keyword">SEGMENT</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201116101725139-1605753863309.png" alt="image-20201116101725139" style="zoom:80%;">
<br>
<h4 id="2-group-by-전체-roll-up"><a class="markdownIt-Anchor" href="#2-group-by-전체-roll-up"></a> (2) GROUP BY + 전체 ROLL UP</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- BRAND, SEGMENT 컬럼 기준으로 ROLL UP 한다.</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">ROLLUP</span> (BRAND, <span class="keyword">SEGMENT</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201116094755070-1605753863309.png" alt="image-20201116094755070" style="zoom:80%;">
<br>
<ul>
<li>전체 컬럼 ROLLUP 결과:
<ul>
<li>BRAND + SEGMENT 별 합계 --&gt; <em>GROUP BY (BRAND, SEGMENT) 결과</em></li>
<li>BRAND 별 합계 (소계)  --&gt; <em>GROUP BY + ROLL UP 절의 첫번째 컬럼</em></li>
<li>전체 합계 (총계)</li>
</ul>
</li>
</ul>
<br>
<h4 id="3-group-by-부분-roll-up"><a class="markdownIt-Anchor" href="#3-group-by-부분-roll-up"></a> (3) GROUP BY + 부분 ROLL UP</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- SEGMENT 컬럼 기준으로 GROUP BY 한다 + BRAND 컬럼 기준으로 부분 ROLL UP 한다</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">ROLLUP</span> (BRAND)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">SEGMENT</span>, BRAND</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201116105618971-1605753863309.png" alt="image-20201116105618971" style="zoom:80%;">
<br>
<ul>
<li>부분 컬럼 ROLLUP 결과:
<ul>
<li>SEGMENT, BRAND 별 합계 --&gt; <em>GROUP BY (SEGMENT, BRAND) 결과</em></li>
<li>SEGMENT 별 합계 (소계)  --&gt; <em>ROLLUP 절에서 제외된 특정 컬럼</em></li>
</ul>
</li>
</ul>
<br>
<p>**&gt;&gt; **전체 합계 (총계)를 구하지 않는다</p>
<br>
<br>
<h2 id="3-cube-절"><a class="markdownIt-Anchor" href="#3-cube-절"></a> <strong>3. CUBE 절</strong></h2>
<h3 id="3-1-용도"><a class="markdownIt-Anchor" href="#3-1-용도"></a> 3-1. 용도</h3>
<p>지정된 GROUPING 컬럼의 다차원 소계를 생성하는데 사용된다. 간단한 문법으로 다차원 소계를 출력할 수 있다.</p>
<br>
<h3 id="3-2-cube-절-문법"><a class="markdownIt-Anchor" href="#3-2-cube-절-문법"></a> 3-2. CUBE 절 문법</h3>
<ul>
<li>
<p>CUBE절은 GROUP BY 절과 함계 사용된다.</p>
</li>
<li>
<p>CUBE 할 컬럼은 무조건 SELECT 절에 포함되어 있어야 한다.</p>
</li>
<li>
<p>CUBE절 컬럼의 <strong>지정 순서가 의미 없다</strong></p>
<br>
</li>
</ul>
<h4 id="1-전체-컬럼-cube-지정"><a class="markdownIt-Anchor" href="#1-전체-컬럼-cube-지정"></a> (1) 전체 컬럼 CUBE 지정</h4>
<ul>
<li>컬럼의 지정 순서가 <strong>의미 없음</strong></li>
<li>지정한 그룹의 <strong>모든 경우의 수</strong> 에 대한 소계와 총계를 구한다</li>
</ul>
 <figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  C1, C2, C3,</span><br><span class="line">  집계함수(C4)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">CUBE</span> (C1, C2, C3);</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>CUBE 절 내 인자의 개수가 N개이면 2의 N승의 소계가 발생하게 된다.</p>
<p>CUBE (C1, C2, C3)를 GROUPING SETS으로 표현하면 총 9개의 소계가 발생한다.</p>
<img src="/images/S-SQL-Aggregate-2/image-20201116140935710-1605753863309.png" alt="image-20201116140935710" style="zoom: 67%;">
<br>
<h4 id="2-부분-컬럼-cube-지정"><a class="markdownIt-Anchor" href="#2-부분-컬럼-cube-지정"></a> (2) 부분 컬럼 CUBE 지정</h4>
<ul>
<li>
<p>특정 컬럼만 분리하여 CUBE 를 지정할 수 있다</p>
</li>
<li>
<p>이런 경우에 분리된 특정 컬럼(C1)으로 시작하는 GROUPING SET 만 해당</p>
</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  C1, C2, C3,</span><br><span class="line">  집계함수(C4)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> C1,</span><br><span class="line">  <span class="keyword">CUBE</span> (C2, C3);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201119105210943.png" alt="image-20201119105210943" style="zoom:80%;">
<br>
<h3 id="3-3-cube-절-실습"><a class="markdownIt-Anchor" href="#3-3-cube-절-실습"></a> 3-3. CUBE 절 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201113092929823-1605753863307.png" alt="image-20201113092929823" style="zoom:80%;">
<br>
<h4 id="1-전체-컬럼-cube-지정-2"><a class="markdownIt-Anchor" href="#1-전체-컬럼-cube-지정-2"></a> (1) 전체 컬럼 CUBE 지정</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- BRAND, SEGMENT 컬럼 기준으로 CUBE 한다.</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND, </span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span> SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="keyword">CUBE</span> (BRAND, <span class="keyword">SEGMENT</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, <span class="keyword">SEGMENT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<img src="/images/S-SQL-Aggregate-2/image-20201116142724305-1605753863311.png" alt="image-20201116142724305" style="zoom:80%;">
<br>
<ul>
<li>전체 컬럼 CUBE 결과:
<ul>
<li>BRAND + SEGMENT 별 합계 --&gt; <em>GROUP BY (BRAND, SEGMENT) 결과</em></li>
<li>BRAND 별 합계 (소계)</li>
<li>SEGMENT 별 합계 (소계)</li>
<li>전체 합계 (총계)</li>
</ul>
</li>
</ul>
<br>
<p><strong>&gt;&gt;</strong> 인자가 2개 이므로 총 4개의 경우의 수가 합계로 출력된다</p>
<br>
<h4 id="2-부분-컬럼-cube-지정-2"><a class="markdownIt-Anchor" href="#2-부분-컬럼-cube-지정-2"></a> (2) 부분 컬럼 CUBE 지정</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- BRAND 컬럼 기준으로 GROUP BY 한다 + SEGMENT 컬럼 기준으로 부분 CUBE 한다</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  BRAND,</span><br><span class="line">  <span class="keyword">SEGMENT</span>,</span><br><span class="line">  <span class="keyword">SUM</span>(QUANTITY)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> BRAND,</span><br><span class="line">  <span class="keyword">CUBE</span> (<span class="keyword">SEGMENT</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BRAND, <span class="keyword">SEGMENT</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Aggregate-2/image-20201116144806788-1605753863311.png" alt="image-20201116144806788" style="zoom:80%;">
 <br>
<ul>
<li>
<p>부분 컬럼 CUBE 결과:</p>
<ul>
<li>
<p>BRAND + SEGMENT 별 합계 --&gt; <em>GROUP BY (BRAND, SEGMENT) 결과</em></p>
</li>
<li>
<p>BRAND 별 합계 (소계)  --&gt; <em>CUBE 절에서 제외된 특정 컬럼</em></p>
<br>
</li>
</ul>
<p><strong>&gt;&gt;</strong>  SEGMENT 별 합계 (소계)를 구하지 않는다.</p>
<p>**&gt;&gt; ** 전체 합계 (총계)를 구하지 않는다.</p>
</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 4. Aggregate Function</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Aggregate</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 데이터 필터링 (1)</title>
    <url>/2020/11/10/S-SQL-Filtering-1/</url>
    <content><![CDATA[<h1 id="데이터-필터링-1"><a class="markdownIt-Anchor" href="#데이터-필터링-1"></a> 데이터 필터링 (1)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-where-%EC%A0%88"><strong>1. WHERE 절</strong></a>
<ul>
<li><a href="#1-1-%EC%9A%A9%EB%8F%84">1-1. 용도</a></li>
<li><a href="#1-2-where-%EC%A0%88-%EB%AC%B8%EB%B2%95">1-2. WHERE 절 문법</a></li>
<li><a href="#1-3-where-%EC%A0%88-%EC%8B%A4%EC%8A%B5">1-3. WHERE 절 실습</a>
<ul>
<li><a href="#1-%EC%A1%B0%EA%B1%B4-%ED%95%9C%EA%B0%9C">1) 조건 한개</a></li>
<li><a href="#2-%EC%A1%B0%EA%B1%B4-%EB%91%90%EA%B0%9C">2) 조건 두개</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-limit-%EC%A0%88"><strong>2. LIMIT 절</strong></a>
<ul>
<li><a href="#2-1-%EC%9A%A9%EB%8F%84">2-1. 용도</a></li>
<li><a href="#2-2-limit-%EC%A0%88-%EB%AC%B8%EB%B2%95">2-2. LIMIT 절 문법</a></li>
<li><a href="#2-3-limit-%EC%A0%88-%EC%8B%A4%EC%8A%B5">2-3. LIMIT 절 실습</a></li>
</ul>
</li>
<li><a href="#3-fetch-%EC%A0%88"><strong>3. FETCH 절</strong></a>
<ul>
<li><a href="#3-1-%EC%9A%A9%EB%8F%84">3-1. 용도</a></li>
<li><a href="#3-2-fetch-%EC%A0%88-%EB%AC%B8%EB%B2%95">3-2. FETCH 절 문법</a></li>
<li><a href="#3-3-fetch-%EC%A0%88-%EC%8B%A4%EC%8A%B5">3-3. FETCH 절 실습</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-where-절"><a class="markdownIt-Anchor" href="#1-where-절"></a> <strong>1. WHERE 절</strong></h2>
<h3 id="1-1-용도"><a class="markdownIt-Anchor" href="#1-1-용도"></a> 1-1. 용도</h3>
<p>WHERE 절은 집합을 가져올 때 어떤 집합을 가져올 것인지에 대한 <strong>조건을 설정</strong>하는 절이다.</p>
<br>
<h3 id="1-2-where-절-문법"><a class="markdownIt-Anchor" href="#1-2-where-절-문법"></a> 1-2. WHERE 절 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  COLUMN_1,</span><br><span class="line">  COLUMN_2</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  &lt;조건&gt;     <span class="comment">-- 어떤 집합을 가져올지에 대한 조건을 준다</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<p>WHERE 절에 사용할 수 있는 연산자:</p>
<div class="center">
<table>
<thead>
<tr>
<th style="text-align:center">연산자</th>
<th style="text-align:left">설명</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">=</td>
<td style="text-align:left">같음</td>
</tr>
<tr>
<td style="text-align:center">&gt;</td>
<td style="text-align:left">~보다 큰 (초과)</td>
</tr>
<tr>
<td style="text-align:center">&lt;</td>
<td style="text-align:left">~보다 작은 (미만)</td>
</tr>
<tr>
<td style="text-align:center">&gt;=</td>
<td style="text-align:left">~보다 크거나 같은 (이상)</td>
</tr>
<tr>
<td style="text-align:center">&lt;=</td>
<td style="text-align:left">~보다 작거나 같은 (이하)</td>
</tr>
<tr>
<td style="text-align:center">&lt;&gt; , !=</td>
<td style="text-align:left">~가 아닌</td>
</tr>
<tr>
<td style="text-align:center">AND</td>
<td style="text-align:left">그리고</td>
</tr>
<tr>
<td style="text-align:center">OR</td>
<td style="text-align:left">혹은</td>
</tr>
</tbody>
</table>
</div>
<br>
<h3 id="1-3-where-절-실습"><a class="markdownIt-Anchor" href="#1-3-where-절-실습"></a> 1-3. WHERE 절 실습</h3>
<h4 id="1-조건-한개"><a class="markdownIt-Anchor" href="#1-조건-한개"></a> 1) 조건 한개</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CUSTOMER 테이블에서 FIRST_NAME이 'Jamie'인 행의 FIRST_NAME &amp; LAST_NAME 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  FIRST_NAME = <span class="string">'Jamie'</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>[주의]</strong> 문자열은 꼭 <strong>작은 따옴표( ’ ’ )로 묶어</strong>야 한다. 큰 따옴표( " " )는 안됨</p>
<p><img src="/images/S-SQL-Filtering-1/image-20201107151221142.png" alt="image-20201107151221142"></p>
<br>
<h4 id="2-조건-두개"><a class="markdownIt-Anchor" href="#2-조건-두개"></a> 2) 조건 두개</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CUSTOMER 테이블에서 FIRST-NAME이 'Jamie'이면서 LAST_NAME이 'Rice'인 행을 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  LAST_NAME,</span><br><span class="line">  FIRST_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">     FIRST_NAME = <span class="string">'Jamie'</span></span><br><span class="line"> <span class="keyword">AND</span> LAST_NAME = <span class="string">'Rice'</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Filtering-1/image-20201107151533774.png" alt="image-20201107151533774"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- PAYMENT 테이블에서 AMOUNT가 1이하이거나 8이상인 행을 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  AMOUNT,</span><br><span class="line">  PAYMENT_DATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">	AMOUNT &lt;= <span class="number">1</span></span><br><span class="line"> <span class="keyword">OR</span> AMOUNT &gt;= <span class="number">8</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-1/image-20201107152434964.png" alt="image-20201107152434964" style="zoom:80%;">
<br>
<br>
<h2 id="2-limit-절"><a class="markdownIt-Anchor" href="#2-limit-절"></a> <strong>2. LIMIT 절</strong></h2>
<h3 id="2-1-용도"><a class="markdownIt-Anchor" href="#2-1-용도"></a> 2-1. 용도</h3>
<p>LIMIT 절은 특정 집합을 출력 시 출력하는 행의 수를 한정하는 역할을 한다. 부분 법위 처리시 사용된다.</p>
<p>PostgreSQL, MySQL 등에서 지원한다.</p>
<br>
<h3 id="2-2-limit-절-문법"><a class="markdownIt-Anchor" href="#2-2-limit-절-문법"></a> 2-2. LIMIT 절 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 출력하는 행의 수를 지정한다</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">LIMIT</span> N       <span class="comment">-- 상위 N 행만 출력</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 출력하는 행의 수를 지정하면서 시작위치를 지정한다</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">LIMIT</span> N <span class="keyword">OFFSET</span> M  <span class="comment">-- M번째 뒤부터 출력</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-limit-절-실습"><a class="markdownIt-Anchor" href="#2-3-limit-절-실습"></a> 2-3. LIMIT 절 실습</h3>
<p><strong>&gt;&gt; TABLE</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">film</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">*film_id <br>title <br>discription <br>release_year <br>language_id <br>rentall_duration <br>rental_rate <br>length <br>replacement_cost <br>rating <br>last_update <br>special_features <br>fulltext</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; LIMIT</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- FILM_NO [1]번 부터 5건 데이터 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RELEASE_YEAR</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> FILM_ID</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">5</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-1/image-20201109113053651.png" alt="image-20201109113053651" style="zoom:80%;">
<br>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- RENTAL_RATE 내림차순으로 정렬 후 상위 10개 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  RENTAL_RATE <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-1/image-20201109124207207.png" alt="image-20201109124207207" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; LIMIT + OFFSET</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- FILM_ID [4]번 부터 4건 데이터 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RELEASE_YEAR</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> FILM_ID</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">4</span></span><br><span class="line"><span class="keyword">OFFSET</span> <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-1/image-20201109113620070.png" alt="image-20201109113620070" style="zoom:80%;">
<br>
<br>
<h2 id="3-fetch-절"><a class="markdownIt-Anchor" href="#3-fetch-절"></a> <strong>3. FETCH 절</strong></h2>
<h3 id="3-1-용도"><a class="markdownIt-Anchor" href="#3-1-용도"></a> 3-1. 용도</h3>
<p>FETCH 절은 LIMIT 절과 동일하게, 특정 집합을 출력 시 출력하는 행의 수를 한정하는 역할을 한다. 부분 법위 처리시 사용된다.</p>
<br>
<h3 id="3-2-fetch-절-문법"><a class="markdownIt-Anchor" href="#3-2-fetch-절-문법"></a> 3-2. FETCH 절 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 출력하는 행의 수를 지정한다</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABEL_NAME</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">FIRST</span> [N] <span class="keyword">ROW</span> <span class="keyword">ONLY</span>  <span class="comment">-- N을 입력하지 않고 ROW ONLY만 입력하면 단 한 건만 출력한다.</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 출력하는 행의 수를 지정하면서 시작위치를 지정한다</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">OFFSET</span> M <span class="keyword">ROWS</span></span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">FIRST</span> [N] <span class="keyword">ROW</span> <span class="keyword">ONLY</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-3-fetch-절-실습"><a class="markdownIt-Anchor" href="#3-3-fetch-절-실습"></a> 3-3. FETCH 절 실습</h3>
<p><strong>&gt;&gt; FETCH</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- TITLE로 정렬한 집합 중에서 최초의 단 한 건의 행을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID, </span><br><span class="line">  TITLE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> TITLE</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">FIRST</span> <span class="keyword">ROW</span> <span class="keyword">ONLY</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Filtering-1/image-20201109183743426-1604987080769.png" alt="image-20201109183743426"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- TITLE로 정렬한 집합 중에서 최초의 10 건의 행을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID, </span><br><span class="line">  TITLE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> TITLE</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">FIRST</span> <span class="number">10</span> <span class="keyword">ROW</span> <span class="keyword">ONLY</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-1/image-20201109184236321.png" alt="image-20201109184236321" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; FETCH + OFFSET</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- TITLE로 정렬한 집합 중에서 6번째 행부터 5건 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> TITLE</span><br><span class="line"><span class="keyword">OFFSET</span> <span class="number">5</span> <span class="keyword">ROWS</span></span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">FIRST</span> <span class="number">5</span> <span class="keyword">ROWS</span> <span class="keyword">ONLY</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-1/image-20201109184624570.png" alt="image-20201109184624570" style="zoom:80%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 2. Data Filtering</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Filtering</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (3) 회귀 (Regression)</title>
    <url>/2020/07/29/S-Python-sklearn3/</url>
    <content><![CDATA[<h1 id="회귀-regression-예측"><a class="markdownIt-Anchor" href="#회귀-regression-예측"></a> 회귀 (Regression) 예측</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B"><strong>0. 데이터 셋</strong></a>
<ul>
<li><a href="#0-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A1%9C%EB%93%9C">0-1. 데이터 로드</a></li>
<li><a href="#0-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0">0-2. 데이터프레임 만들기</a></li>
</ul>
</li>
<li><a href="#1-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0"><strong>1. Training set / Test set 나누기</strong></a></li>
<li><a href="#2-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0"><strong>2. 평가 지표 만들기</strong></a>
<ul>
<li><a href="#2-1-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EA%B3%84%EC%82%B0%EC%8B%9D">2-1. 평가 지표 계산식</a></li>
<li><a href="#2-2-%EC%BD%94%EB%94%A9%EC%9C%BC%EB%A1%9C-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EA%B8%B0">2-2. 코딩으로 평가 지표 만들어 보기</a></li>
<li><a href="#2-3-sklearn%EC%9D%98-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0">2-3. sklearn의 평가 지표 활용하기</a></li>
<li><a href="#2-4-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%99%95%EC%9D%B8%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%95%A8%EC%88%98">2-4. 모델 성능 확인을 위한 함수</a></li>
</ul>
</li>
<li><a href="#3-%ED%9A%8C%EA%B7%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"><strong>3. 회귀 알고리즘</strong></a>
<ul>
<li><a href="#3-1-linear-regression">3-1. Linear Regression</a></li>
<li><a href="#3-2-ridge-lasso-elasticnet">3-2. Ridge &amp; LASSO &amp; ElasticNet</a>
<ul>
<li><a href="#1-%EA%B0%9C%EB%85%90">(1) 개념</a></li>
<li><a href="#2-%EC%8B%A4%EC%8A%B5">(2) 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-scaling"><strong>4. Scaling</strong></a>
<ul>
<li><a href="#4-1-scaler-%EC%86%8C%EA%B0%9C">4-1. Scaler 소개</a></li>
<li><a href="#4-2-scaling-%ED%9B%84-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%ED%99%9C%EC%9A%A9">4-2. Scaling 후 모델 학습 – 파이프라인 활용</a></li>
</ul>
</li>
<li><a href="#5-polynomial-features"><strong>5. Polynomial Features</strong></a></li>
</ul>
<p></p>
<br>
<blockquote>
<p><a href="https://scikit-learn.org/stable/supervised_learning.html#supervised-learning" target="_blank" rel="noopener">[Supervised Learning] Document</a></p>
</blockquote>
<p><strong>특성:</strong> 수치형 값을 예측 (Y의 값이 연속형 수치로 표현)</p>
<p><strong>예시:</strong></p>
<ul>
<li>
<p>주택 가격 예측</p>
</li>
<li>
<p>매출앵 예측</p>
<br>
</li>
</ul>
<h2 id="0-데이터-셋"><a class="markdownIt-Anchor" href="#0-데이터-셋"></a> <strong>0. 데이터 셋</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>) <span class="comment"># If True, print floating point numbers instead of scientific notation</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br></pre></td></tr></tbody></table></figure>
<p>[<a href="https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_boston.html#sklearn.datasets.load_boston" target="_blank" rel="noopener">Boston Dataset</a>]</p>
 <br> 
<h3 id="0-1-데이터-로드"><a class="markdownIt-Anchor" href="#0-1-데이터-로드"></a> 0-1. 데이터 로드</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = load_boston()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(data[<span class="string">'DESCR'</span>])  <span class="comment"># data description</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _boston_dataset:

Boston house prices dataset
---------------------------

**Data Set Characteristics:**  

    :Number of Instances: 506 

    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.

    :Attribute Information (in order):
        - CRIM     per capita crime rate by town
        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.
        - INDUS    proportion of non-retail business acres per town
        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)
        - NOX      nitric oxides concentration (parts per 10 million)
        - RM       average number of rooms per dwelling
        - AGE      proportion of owner-occupied units built prior to 1940
        - DIS      weighted distances to five Boston employment centres
        - RAD      index of accessibility to radial highways
        - TAX      full-value property-tax rate per $10,000
        - PTRATIO  pupil-teacher ratio by town
        - B        1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town
        - LSTAT    % lower status of the population
        - MEDV     Median value of owner-occupied homes in $1000's

    :Missing Attribute Values: None

    :Creator: Harrison, D. and Rubinfeld, D.L.

This is a copy of UCI ML housing dataset.
https://archive.ics.uci.edu/ml/machine-learning-databases/housing/
</code></pre>
<p>​</p>
<pre><code>This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.

The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic
prices and the demand for clean air', J. Environ. Economics &amp; Management,
vol.5, 81-102, 1978.   Used in Belsley, Kuh &amp; Welsch, 'Regression diagnostics
...', Wiley, 1980.   N.B. Various transformations are used in the table on
pages 244-261 of the latter.

The Boston house-price data has been used in many machine learning papers that address regression
problems.   
     
.. topic:: References

   - Belsley, Kuh &amp; Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.
   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.
</code></pre>
<p>​</p>
  <br>
<h3 id="0-2-데이터프레임-만들기"><a class="markdownIt-Anchor" href="#0-2-데이터프레임-만들기"></a> 0-2. 데이터프레임 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># step 1. features (X)</span></span><br><span class="line"><span class="comment"># data['data'] - feature data; data['feature_names'] - feature column names</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data[<span class="string">'data'</span>], columns = data[<span class="string">'feature_names'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2. target (y) 추가 </span></span><br><span class="line">df[<span class="string">'MEDV'</span>] = data[<span class="string">'target'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
      <th>MEDV</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0.0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1.0</td>
      <td>296.0</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
      <td>24.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
      <td>21.6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
      <td>34.7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
      <td>33.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
      <td>36.2</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>컬럼 소게</strong> (feature 13 + target 1):</p>
<ul>
<li>
<p><strong>CRIM</strong>: 범죄율</p>
</li>
<li>
<p><strong>ZN</strong>: 25,000 square feet 당 주거용 토지의 비율</p>
</li>
<li>
<p><strong>INDUS</strong>: 비소매(non-retail) 비즈니스 면적 비율</p>
</li>
<li>
<p><strong>CHAS</strong>: 찰스 강 더미 변수 (통로가 하천을 향하면 1; 그렇지 않으면 0)</p>
</li>
<li>
<p><strong>NOX</strong>: 산화 질소 농도 (천만 분의 1)</p>
</li>
<li>
<p><strong>RM</strong>:주거 당 평균 객실 수</p>
</li>
<li>
<p><strong>AGE</strong>: 1940 년 이전에 건축된 자가 소유 점유 비율</p>
</li>
<li>
<p><strong>DIS</strong>: 5 개의 보스턴 고용 센터까지의 가중 거리</p>
</li>
<li>
<p><strong>RAD</strong>: 고속도로 접근성 지수</p>
</li>
<li>
<p><strong>TAX</strong>: 10,000 달러 당 전체 가치 재산 세율</p>
</li>
<li>
<p><strong>PTRATIO</strong>  도시 별 학생-교사 비율</p>
</li>
<li>
<p><strong>B</strong>: 1000 (Bk-0.63) ^ 2 여기서 Bk는 도시 별 검정 비율입니다.</p>
</li>
<li>
<p><strong>LSTAT</strong>: 인구의 낮은 지위</p>
</li>
<li>
<p><strong>MEDV</strong>: 자가 주택의 중앙값 (1,000 달러 단위)</p>
<br>
<br>
</li>
</ul>
<h2 id="1-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#1-training-set-test-set-나누기"></a> <strong>1. Training set / Test set 나누기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(df.drop(<span class="string">'MEDV'</span>, <span class="number">1</span>), df[<span class="string">'MEDV'</span>], random_state=<span class="number">23</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((379, 13), (379,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((127, 13), (127,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>112</th>
      <td>0.12329</td>
      <td>0.0</td>
      <td>10.01</td>
      <td>0.0</td>
      <td>0.547</td>
      <td>5.913</td>
      <td>92.9</td>
      <td>2.3534</td>
      <td>6.0</td>
      <td>432.0</td>
      <td>17.8</td>
      <td>394.95</td>
      <td>16.21</td>
    </tr>
    <tr>
      <th>301</th>
      <td>0.03537</td>
      <td>34.0</td>
      <td>6.09</td>
      <td>0.0</td>
      <td>0.433</td>
      <td>6.590</td>
      <td>40.4</td>
      <td>5.4917</td>
      <td>7.0</td>
      <td>329.0</td>
      <td>16.1</td>
      <td>395.75</td>
      <td>9.50</td>
    </tr>
    <tr>
      <th>401</th>
      <td>14.23620</td>
      <td>0.0</td>
      <td>18.10</td>
      <td>0.0</td>
      <td>0.693</td>
      <td>6.343</td>
      <td>100.0</td>
      <td>1.5741</td>
      <td>24.0</td>
      <td>666.0</td>
      <td>20.2</td>
      <td>396.90</td>
      <td>20.32</td>
    </tr>
    <tr>
      <th>177</th>
      <td>0.05425</td>
      <td>0.0</td>
      <td>4.05</td>
      <td>0.0</td>
      <td>0.510</td>
      <td>6.315</td>
      <td>73.4</td>
      <td>3.3175</td>
      <td>5.0</td>
      <td>296.0</td>
      <td>16.6</td>
      <td>395.60</td>
      <td>6.29</td>
    </tr>
    <tr>
      <th>69</th>
      <td>0.12816</td>
      <td>12.5</td>
      <td>6.07</td>
      <td>0.0</td>
      <td>0.409</td>
      <td>5.885</td>
      <td>33.0</td>
      <td>6.4980</td>
      <td>4.0</td>
      <td>345.0</td>
      <td>18.9</td>
      <td>396.90</td>
      <td>8.79</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">y_train.head()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>112    18.8
301    22.0
401     7.2
177    24.6
69     20.9
Name: MEDV, dtype: float64
</code></pre>
<br>
  <br>
<h2 id="2-평가-지표-만들기"><a class="markdownIt-Anchor" href="#2-평가-지표-만들기"></a> <strong>2. 평가 지표 만들기</strong></h2>
<h3 id="2-1-평가-지표-계산식"><a class="markdownIt-Anchor" href="#2-1-평가-지표-계산식"></a> 2-1. 평가 지표 계산식</h3>
<p><strong>(1) MAE (Mean Absolute Error)</strong></p>
<p>MAE (평균 절대 오차): 에측값과 실제값의 차이의 <strong>절대값</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">MAE = \frac{1}{n} \sum_{i=1}^n \left\vert y_i - \widehat{y_i} \right\vert
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<p><strong>(2) MSE (Mean Squared Error)</strong></p>
<p>MSE (평균 제곱 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">MSE = \frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>(3) RMSE (Root Mean Squared Error)</strong></p>
<p>RMSE (평균 제곱근 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 뒤 <strong>루트</strong>를 씌운 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">RMSE = \sqrt{\frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1568160000000005em;vertical-align:-1.277669em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8791470000000006em;"><span class="svg-align" style="top:-5.116816em;"><span class="pstrut" style="height:5.116816em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.8391470000000005em;"><span class="pstrut" style="height:5.116816em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.196816em;"><svg width="400em" height="3.196816em" viewBox="0 0 400000 3196" preserveAspectRatio="xMinYMin slice"><path d="M702 80H400000v40H742v3062l-4 4-4 4c-.667.7
-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667
-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155
 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span></span></span></span></span></p>
  <br>
<h3 id="2-2-코딩으로-평가-지표-만들어-보기"><a class="markdownIt-Anchor" href="#2-2-코딩으로-평가-지표-만들어-보기"></a> 2-2. 코딩으로 평가 지표 만들어 보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">actual = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">pred = np.array([<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MAE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_mae</span><span class="params">(actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.abs(actual - pred).mean()</span><br><span class="line"></span><br><span class="line">my_mae(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MSE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_mse</span><span class="params">(actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> ((actual - pred)**<span class="number">2</span>).mean()</span><br><span class="line"></span><br><span class="line">my_mse(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># RMSE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_rmse</span><span class="params">(actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.sqrt(my_mse(actual, pred))</span><br><span class="line"></span><br><span class="line">my_rmse(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2.0
</code></pre>
<br>  
<h3 id="2-3-sklearn의-평가-지표-활용하기"><a class="markdownIt-Anchor" href="#2-3-sklearn의-평가-지표-활용하기"></a> 2-3. sklearn의 평가 지표 활용하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error, mean_squared_error</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_absolute_error.html" target="_blank" rel="noopener">[sklearn.metrics.<strong>mean_absolute_error</strong>]</a><br>
<a href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html" target="_blank" rel="noopener">[sklearn.metrics.<strong>mean_squared_error</strong>]</a></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MAE (my_mae VS sklearn_mae)</span></span><br><span class="line">my_mae(actual, pred), mean_absolute_error(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(2.0, 2.0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MSE (my_mse VS sklearn_mse)</span></span><br><span class="line">my_mse(actual, pred), mean_squared_error(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4.0, 4.0)
</code></pre>
 <br> 
<h3 id="2-4-모델-성능-확인을-위한-함수"><a class="markdownIt-Anchor" href="#2-4-모델-성능-확인을-위한-함수"></a> 2-4. 모델 성능 확인을 위한 함수</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">my_predictions = {}</span><br><span class="line"></span><br><span class="line">colors = [<span class="string">'r'</span>, <span class="string">'c'</span>, <span class="string">'m'</span>, <span class="string">'y'</span>, <span class="string">'k'</span>, <span class="string">'khaki'</span>, <span class="string">'teal'</span>, <span class="string">'orchid'</span>, <span class="string">'sandybrown'</span>,</span><br><span class="line">          <span class="string">'greenyellow'</span>, <span class="string">'dodgerblue'</span>, <span class="string">'deepskyblue'</span>, <span class="string">'rosybrown'</span>, <span class="string">'firebrick'</span>,</span><br><span class="line">          <span class="string">'deeppink'</span>, <span class="string">'crimson'</span>, <span class="string">'salmon'</span>, <span class="string">'darkred'</span>, <span class="string">'olivedrab'</span>, <span class="string">'olive'</span>, </span><br><span class="line">          <span class="string">'forestgreen'</span>, <span class="string">'royalblue'</span>, <span class="string">'indigo'</span>, <span class="string">'navy'</span>, <span class="string">'mediumpurple'</span>, <span class="string">'chocolate'</span>,</span><br><span class="line">          <span class="string">'gold'</span>, <span class="string">'darkorange'</span>, <span class="string">'seagreen'</span>, <span class="string">'turquoise'</span>, <span class="string">'steelblue'</span>, <span class="string">'slategray'</span>, </span><br><span class="line">          <span class="string">'peru'</span>, <span class="string">'midnightblue'</span>, <span class="string">'slateblue'</span>, <span class="string">'dimgray'</span>, <span class="string">'cadetblue'</span>, <span class="string">'tomato'</span></span><br><span class="line">         ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># prediction plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_predictions</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    df = pd.DataFrame({<span class="string">'actual'</span>: y_test, <span class="string">'prediction'</span>: pred})</span><br><span class="line">    df = df.sort_values(by=<span class="string">'actual'</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'prediction'</span>], marker=<span class="string">'x'</span>, color=<span class="string">'r'</span>)</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'actual'</span>], alpha=<span class="number">0.7</span>, marker=<span class="string">'o'</span>, color=<span class="string">'black'</span>)</span><br><span class="line">    plt.title(name_, fontsize=<span class="number">15</span>)</span><br><span class="line">    plt.legend([<span class="string">'prediction'</span>, <span class="string">'actual'</span>], fontsize=<span class="number">12</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># evaluation plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mse_eval</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> predictions</span><br><span class="line">    <span class="keyword">global</span> colors</span><br><span class="line"></span><br><span class="line">    plot_predictions(name_, actual, pred)</span><br><span class="line"></span><br><span class="line">    mse = mean_squared_error(actual, pred)</span><br><span class="line">    my_predictions[name_] = mse</span><br><span class="line"></span><br><span class="line">    y_value = sorted(my_predictions.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    df = pd.DataFrame(y_value, columns=[<span class="string">'model'</span>, <span class="string">'mse'</span>])</span><br><span class="line">    print(df)</span><br><span class="line">    min_ = df[<span class="string">'mse'</span>].min() - <span class="number">10</span></span><br><span class="line">    max_ = df[<span class="string">'mse'</span>].max() + <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    length = len(df)</span><br><span class="line">    </span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, length))</span><br><span class="line">    ax = plt.subplot()</span><br><span class="line">    ax.set_yticks(np.arange(len(df)))</span><br><span class="line">    ax.set_yticklabels(df[<span class="string">'model'</span>], fontsize=<span class="number">15</span>)</span><br><span class="line">    bars = ax.barh(np.arange(len(df)), df[<span class="string">'mse'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(df[<span class="string">'mse'</span>]):</span><br><span class="line">        idx = np.random.choice(len(colors))</span><br><span class="line">        bars[i].set_color(colors[idx])</span><br><span class="line">        ax.text(v + <span class="number">2</span>, i, str(round(v, <span class="number">3</span>)), color=<span class="string">'k'</span>, fontsize=<span class="number">15</span>, fontweight=<span class="string">'bold'</span>)</span><br><span class="line">        </span><br><span class="line">    plt.title(<span class="string">'MSE Error'</span>, fontsize=<span class="number">18</span>)</span><br><span class="line">    plt.xlim(min_, max_)</span><br><span class="line">    </span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove model</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_model</span><span class="params">(name_)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_predictions</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">del</span> my_predictions[name_]</span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
  <br>
<h2 id="3-회귀-알고리즘"><a class="markdownIt-Anchor" href="#3-회귀-알고리즘"></a> <strong>3. 회귀 알고리즘</strong></h2>
<h3 id="3-1-linear-regression"><a class="markdownIt-Anchor" href="#3-1-linear-regression"></a> 3-1. Linear Regression</h3>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html" target="_blank" rel="noopener">[sklearn.linear_model.<strong>LinearRegression</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">model = LinearRegression(n_jobs=<span class="number">-1</span>)  <span class="comment"># n_jobs: CPU코어의 사용</span></span><br><span class="line">model.fit(x_train, y_train)</span><br><span class="line">pred = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mse_eval(<span class="string">'LinearRegression'</span>, y_test, pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_59_0.png" alt="output_59_0"></p>
<pre><code>              model        mse
0  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_59_2.png" alt="output_59_2"></p>
<br>
<h3 id="3-2-ridge-lasso-elasticnet"><a class="markdownIt-Anchor" href="#3-2-ridge-lasso-elasticnet"></a> 3-2. Ridge &amp; LASSO &amp; ElasticNet</h3>
<h4 id="1-개념"><a class="markdownIt-Anchor" href="#1-개념"></a> (1) 개념</h4>
<p><a href="https://medium.com/mighty-data-science-bootcamp/linear-regression-ridge-lasso-elastic-net-fb8115c0a635" target="_blank" rel="noopener">참고</a></p>
<p><strong>규제(Regularization):</strong> 학습이 과적합 되는 것을 방지하고자 일종의 <strong>penalty</strong>를 부여하는 것.<br>
[원리] penalty를 부여하여 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>)를 축소함으로써 학습 모델의 예측 variance를 감소 시키는 것</p>
<br>
<p><strong>&gt;&gt; L2 규제 &amp; Ridge (릿지)</strong></p>
<ul>
<li>
<p><strong>L2 규제 (L2 Regularization):</strong>  각 <font color="blue">가중치 제곱의 합</font>에 규제 강도 (Regularization Strength) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 곱한다</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mn>2</mn><mtext>&nbsp;</mtext><mi mathvariant="normal">규</mi><mi mathvariant="normal">제</mi><mo>=</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup><mo>=</mo><mi>λ</mi><mtext>&nbsp;</mtext><mo stretchy="false">∥</mo><mi>β</mi><msubsup><mo stretchy="false">∥</mo><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">L2 \ 규제 = \lambda \sum_{j=1}^p \beta_j^2 = \lambda\  \lVert \beta \rVert_2^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord">2</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">규</span><span class="mord hangul_fallback">제</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mspace">&nbsp;</span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>2</mn></msub><mtext>&nbsp;</mtext><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo>:</mo><mo stretchy="false">∥</mo><mi>β</mi><msub><mo stretchy="false">∥</mo><mn>2</mn></msub><mo>=</mo><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">l_2 \ norm:  \lVert \beta \rVert_2 = \sqrt{\sum_{j=1}^p \beta_j^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.3400320000000003em;vertical-align:-1.4137769999999998em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9262550000000005em;"><span class="svg-align" style="top:-5.300032em;"><span class="pstrut" style="height:5.300032em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.4231360000000004em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.8862550000000002em;"><span class="pstrut" style="height:5.300032em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.3800320000000004em;"><svg width="400em" height="3.3800320000000004em" viewBox="0 0 400000 3380" preserveAspectRatio="xMinYMin slice"><path d="M702 80H400000v40H742v3246l-4 4-4 4c-.667.7
-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667
-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155
 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><strong>Ridge:</strong> Loss Function에 L2 규제를 더한 값을 최소화 시키는 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>β</mi><mn>0</mn></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msub><mi>β</mi><mi>j</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mi>λ</mi><mtext>&nbsp;</mtext><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup><mo fence="true">]</mo></mrow><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><mi>R</mi><mi>S</mi><mi>S</mi><mo>+</mo><mi>λ</mi><mtext>&nbsp;</mtext><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\min_{\beta_j} \ \left[ \sum_{i=1}^n \left( y_i-\beta_0-\sum_{j=1}^p\beta_jx_{ij} \right) + \lambda\ \sum_{j=1}^p\beta_j^2 \right]= \min_{\beta_j} \ \left[ RSS + \lambda\ \sum_{j=1}^p\beta_j^2 \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 크게 하면 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>) 가 더 많이 감소되고(규제를 중요시 함), <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 작게 하면 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>) 가 증가한다(규제를 중요시하지 않음)</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; L1 규제 &amp; LASSO (라쏘)</strong></p>
<ul>
<li>
<p><strong>L1 규제 (L1 Regularization):</strong> 각 <font color="blue">가중치 절대값의 합</font>에 규제 강도 (Regularization Strength) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 곱한다</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mn>1</mn><mtext>&nbsp;</mtext><mi mathvariant="normal">규</mi><mi mathvariant="normal">제</mi><mo>=</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo>=</mo><mi>λ</mi><mtext>&nbsp;</mtext><mo stretchy="false">∥</mo><mi>β</mi><msub><mo stretchy="false">∥</mo><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L1\ 규제 = \lambda \sum_{j=1}^p \left| \beta_j \right| = \lambda \ \lVert \beta \rVert_1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord">1</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">규</span><span class="mord hangul_fallback">제</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mspace">&nbsp;</span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mn>1</mn><mtext>&nbsp;</mtext><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo>:</mo><mo stretchy="false">∥</mo><mi>β</mi><msub><mo stretchy="false">∥</mo><mn>1</mn></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">l1\ norm: \lVert \beta \rVert_1 = \sum_{j=1}^p \left| \beta_j \right|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">1</span><span class="mspace">&nbsp;</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
</li>
<li>
<p><strong>LASSO:</strong> Loss Function에 L1 규제를 더한 값을 최소화 시키는 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>β</mi><mn>0</mn></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msub><mi>β</mi><mi>j</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">]</mo></mrow><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><mi>R</mi><mi>S</mi><mi>S</mi><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\min_{\beta_j} \ \left[ \sum_{i=1}^n \left( y_i-\beta_0-\sum_{j=1}^p\beta_jx_{ij} \right) + \lambda \sum_{j=1}^p \left| \beta_j \right| \right]= \min_{\beta_j} \ \left[ RSS + \lambda \sum_{j=1}^p \left| \beta_j \right| \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p>
</li>
<li>
<p>어떤 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>) 는 실제로 0이 된다. 즉, 모델에서 완전히 제외되는 특성이 생기는 것이다</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; ElasticNet</strong></p>
<p><strong>l1_ratio (default=0.5)</strong></p>
<ul>
<li>
<p>l1_ratio = 0 (L2 규제만 사용)</p>
</li>
<li>
<p>l1_ratio = 1 (L1 규제만 사용)</p>
</li>
<li>
<p>0 &lt; l1_ratio &lt;1 (L1 and L2 규제 혼합사용)</p>
<br>
</li>
</ul>
<h4 id="2-실습"><a class="markdownIt-Anchor" href="#2-실습"></a> (2) 실습</h4>
<p><strong>&gt;&gt; Ridge</strong>   <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html" target="_blank" rel="noopener">[Document]</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Ridge</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>예측 결과 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># lambda (규제강도) 범위 설정</span></span><br><span class="line">alphas = [<span class="number">100</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">0.1</span>, <span class="number">0.01</span>, <span class="number">0.001</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모델 학습</span></span><br><span class="line"><span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">    ridge = Ridge(alpha = alpha)</span><br><span class="line">    ridge.fit(x_train, y_train)</span><br><span class="line">    ridge_pred = ridge.predict(x_test)</span><br><span class="line">    mse_eval(<span class="string">'Ridge(alpha={})'</span>.format(alpha), y_test, ridge_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_75_0.png" alt="output_75_0"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_2.png" alt="output_75_2"></p>
<p><img src="/images/S-Python-sklearn3/output_75_3.png" alt="output_75_3"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1   Ridge(alpha=10)  22.793119
2  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_5.png" alt="output_75_5"></p>
<p><img src="/images/S-Python-sklearn3/output_75_6.png" alt="output_75_6"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1   Ridge(alpha=10)  22.793119
2  LinearRegression  22.770784
3    Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_8.png" alt="output_75_8"></p>
<p><img src="/images/S-Python-sklearn3/output_75_9.png" alt="output_75_9"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1   Ridge(alpha=10)  22.793119
2  LinearRegression  22.770784
3  Ridge(alpha=0.1)  22.718126
4    Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_11.png" alt="output_75_11"></p>
<p><img src="/images/S-Python-sklearn3/output_75_12.png" alt="output_75_12"></p>
<pre><code>               model        mse
0   Ridge(alpha=100)  23.487453
1    Ridge(alpha=10)  22.793119
2   LinearRegression  22.770784
3  Ridge(alpha=0.01)  22.764254
4   Ridge(alpha=0.1)  22.718126
5     Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_14.png" alt="output_75_14"></p>
<p><img src="/images/S-Python-sklearn3/output_75_15.png" alt="output_75_15"></p>
<pre><code>                model        mse
0    Ridge(alpha=100)  23.487453
1     Ridge(alpha=10)  22.793119
2    LinearRegression  22.770784
3  Ridge(alpha=0.001)  22.770117
4   Ridge(alpha=0.01)  22.764254
5    Ridge(alpha=0.1)  22.718126
6      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_17.png" alt="output_75_17"></p>
<br>
<ul>
<li><strong>coefficents 값 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ridge.coef_  <span class="comment"># for the last alpha in 'alphas'</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ -0.09608448,   0.04753482,   0.0259022 ,   3.24479273,
       -18.89579975,   4.06725732,   0.0020486 ,  -1.46883742,
         0.28149275,  -0.0094656 ,  -0.87454099,   0.01240815,
        -0.52406249])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># coefficients visulization</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_coef</span><span class="params">(columns, coef)</span>:</span></span><br><span class="line">    coef_df = pd.DataFrame(list(zip(columns, coef)))</span><br><span class="line">    coef_df.columns=[<span class="string">'feature'</span>, <span class="string">'coef'</span>]</span><br><span class="line">    coef_df = coef_df.sort_values(<span class="string">'coef'</span>, ascending=<span class="literal">False</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">9</span>, <span class="number">7</span>))</span><br><span class="line">    ax.barh(np.arange(len(coef_df)), coef_df[<span class="string">'coef'</span>])</span><br><span class="line">    idx = np.arange(len(coef_df))</span><br><span class="line">    ax.set_yticks(idx)</span><br><span class="line">    ax.set_yticklabels(coef_df[<span class="string">'feature'</span>])</span><br><span class="line">    fig.tight_layout()</span><br><span class="line">    plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, ridge.coef_)   <span class="comment"># alpha = 0.001</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_81_0.png" alt="output_81_0"></p>
<br>
<ul>
<li><strong>alpha 값에 따른 coef의 차이</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ridge_1 = Ridge(alpha=<span class="number">1</span>)</span><br><span class="line">ridge_1.fit(x_train, y_train)</span><br><span class="line">ridge_pred_1 = ridge_1.predict(x_test)</span><br><span class="line"></span><br><span class="line">ridge_100 = Ridge(alpha=<span class="number">100</span>)</span><br><span class="line">ridge_100.fit(x_train, y_train)</span><br><span class="line">ridge_pred_100 = ridge_100.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, ridge_1.coef_)   <span class="comment"># alpha = 1</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_85_0.png" alt="output_85_0"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, ridge_100.coef_)   <span class="comment"># alpha = 100</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_86_0.png" alt="output_86_0"></p>
<br>
<p><strong>&gt;&gt; LASSO</strong> <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html" target="_blank" rel="noopener">[Document]</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>예측 결과 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># lambda (규제강도) 범위 설정</span></span><br><span class="line">alphas = [<span class="number">100</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">0.1</span>, <span class="number">0.01</span>, <span class="number">0.001</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모델 학습</span></span><br><span class="line"><span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">    lasso = Lasso(alpha=alpha)</span><br><span class="line">    lasso.fit(x_train, y_train)</span><br><span class="line">    lasso_pred = lasso.predict(x_test)</span><br><span class="line">    mse_eval(<span class="string">'Lasso(alpha={})'</span>.format(alpha), y_test, lasso_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_92_0.png" alt="output_92_0"></p>
<pre><code>                model        mse
0    Lasso(alpha=100)  63.348818
1    Ridge(alpha=100)  23.487453
2     Ridge(alpha=10)  22.793119
3    LinearRegression  22.770784
4  Ridge(alpha=0.001)  22.770117
5   Ridge(alpha=0.01)  22.764254
6    Ridge(alpha=0.1)  22.718126
7      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_2.png" alt="output_92_2"></p>
<p><img src="/images/S-Python-sklearn3/output_92_3.png" alt="output_92_3"></p>
<pre><code>                model        mse
0    Lasso(alpha=100)  63.348818
1     Lasso(alpha=10)  42.436622
2    Ridge(alpha=100)  23.487453
3     Ridge(alpha=10)  22.793119
4    LinearRegression  22.770784
5  Ridge(alpha=0.001)  22.770117
6   Ridge(alpha=0.01)  22.764254
7    Ridge(alpha=0.1)  22.718126
8      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_5.png" alt="output_92_5"></p>
<p><img src="/images/S-Python-sklearn3/output_92_6.png" alt="output_92_6"></p>
<pre><code>                model        mse
0    Lasso(alpha=100)  63.348818
1     Lasso(alpha=10)  42.436622
2      Lasso(alpha=1)  27.493672
3    Ridge(alpha=100)  23.487453
4     Ridge(alpha=10)  22.793119
5    LinearRegression  22.770784
6  Ridge(alpha=0.001)  22.770117
7   Ridge(alpha=0.01)  22.764254
8    Ridge(alpha=0.1)  22.718126
9      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_8.png" alt="output_92_8"></p>
<p><img src="/images/S-Python-sklearn3/output_92_9.png" alt="output_92_9"></p>
<pre><code>                 model        mse
0     Lasso(alpha=100)  63.348818
1      Lasso(alpha=10)  42.436622
2       Lasso(alpha=1)  27.493672
3     Ridge(alpha=100)  23.487453
4     Lasso(alpha=0.1)  22.979708
5      Ridge(alpha=10)  22.793119
6     LinearRegression  22.770784
7   Ridge(alpha=0.001)  22.770117
8    Ridge(alpha=0.01)  22.764254
9     Ridge(alpha=0.1)  22.718126
10      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_11.png" alt="output_92_11"></p>
<p><img src="/images/S-Python-sklearn3/output_92_12.png" alt="output_92_12"></p>
<pre><code>                 model        mse
0     Lasso(alpha=100)  63.348818
1      Lasso(alpha=10)  42.436622
2       Lasso(alpha=1)  27.493672
3     Ridge(alpha=100)  23.487453
4     Lasso(alpha=0.1)  22.979708
5      Ridge(alpha=10)  22.793119
6     LinearRegression  22.770784
7   Ridge(alpha=0.001)  22.770117
8    Ridge(alpha=0.01)  22.764254
9     Ridge(alpha=0.1)  22.718126
10      Ridge(alpha=1)  22.690411
11   Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_14.png" alt="output_92_14"></p>
<p><img src="/images/S-Python-sklearn3/output_92_15.png" alt="output_92_15"></p>
<pre><code>                 model        mse
0     Lasso(alpha=100)  63.348818
1      Lasso(alpha=10)  42.436622
2       Lasso(alpha=1)  27.493672
3     Ridge(alpha=100)  23.487453
4     Lasso(alpha=0.1)  22.979708
5      Ridge(alpha=10)  22.793119
6     LinearRegression  22.770784
7   Ridge(alpha=0.001)  22.770117
8    Ridge(alpha=0.01)  22.764254
9   Lasso(alpha=0.001)  22.753017
10    Ridge(alpha=0.1)  22.718126
11      Ridge(alpha=1)  22.690411
12   Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_17.png" alt="output_92_17"></p>
<br>
<ul>
<li><strong>coefficients 값 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># alpha = 0.01</span></span><br><span class="line">lasso_01 = Lasso(alpha=<span class="number">0.01</span>)</span><br><span class="line">lasso_01.fit(x_train, y_train)</span><br><span class="line">lasso_pred_01 = lasso_01.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># alpha = 100</span></span><br><span class="line">lasso_100 = Lasso(alpha=<span class="number">100</span>)</span><br><span class="line">lasso_100.fit(x_train, y_train)</span><br><span class="line">lasso_pred_100 = lasso_100.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>[alpha = 0.01]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lasso_01.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ -0.09427142,   0.04759954,   0.01255668,   3.08256139,
       -15.36800113,   4.07373679,  -0.00100439,  -1.40819927,
         0.27152905,  -0.0097157 ,  -0.84377679,   0.01249204,
        -0.52790174])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, lasso_01.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_100_0.png" alt="output_100_0"></p>
<br>
<p>[alpha = 100]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lasso_100.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-0.        ,  0.        , -0.        ,  0.        , -0.        ,
        0.        , -0.        ,  0.        , -0.        , -0.02078349,
       -0.        ,  0.00644409, -0.        ])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, lasso_100.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_105_0.png" alt="output_105_0"></p>
<br>
<p><strong>&gt;&gt; ElasticNet</strong>  <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.ElasticNet.html" target="_blank" rel="noopener">[Document]</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> ElasticNet</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>예측 결과 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ratios = [<span class="number">0.2</span>, <span class="number">0.5</span>, <span class="number">0.8</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># alpha = 0.5 로 고정</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ratio <span class="keyword">in</span> ratios:</span><br><span class="line">    elasticnet = ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=ratio)</span><br><span class="line">    elasticnet.fit(x_train, y_train)</span><br><span class="line">    elas_pred = elasticnet.predict(x_test)</span><br><span class="line">    mse_eval(<span class="string">'ElasticNet(l1_ratio={})'</span>.format(ratio), y_test, elas_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_111_0.png" alt="output_111_0"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5            Ridge(alpha=10)  22.793119
6           LinearRegression  22.770784
7         Ridge(alpha=0.001)  22.770117
8          Ridge(alpha=0.01)  22.764254
9         Lasso(alpha=0.001)  22.753017
10  ElasticNet(l1_ratio=0.2)  22.749018
11          Ridge(alpha=0.1)  22.718126
12            Ridge(alpha=1)  22.690411
13         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_111_2.png" alt="output_111_2"></p>
<p><img src="/images/S-Python-sklearn3/output_111_3.png" alt="output_111_3"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5            Ridge(alpha=10)  22.793119
6   ElasticNet(l1_ratio=0.5)  22.787269
7           LinearRegression  22.770784
8         Ridge(alpha=0.001)  22.770117
9          Ridge(alpha=0.01)  22.764254
10        Lasso(alpha=0.001)  22.753017
11  ElasticNet(l1_ratio=0.2)  22.749018
12          Ridge(alpha=0.1)  22.718126
13            Ridge(alpha=1)  22.690411
14         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_111_5.png" alt="output_111_5"></p>
<p><img src="/images/S-Python-sklearn3/output_111_6.png" alt="output_111_6"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5   ElasticNet(l1_ratio=0.8)  22.865628
6            Ridge(alpha=10)  22.793119
7   ElasticNet(l1_ratio=0.5)  22.787269
8           LinearRegression  22.770784
9         Ridge(alpha=0.001)  22.770117
10         Ridge(alpha=0.01)  22.764254
11        Lasso(alpha=0.001)  22.753017
12  ElasticNet(l1_ratio=0.2)  22.749018
13          Ridge(alpha=0.1)  22.718126
14            Ridge(alpha=1)  22.690411
15         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_111_8.png" alt="output_111_8"></p>
<br>
<ul>
<li><strong>coefficients 값 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># ㅣ1_ratio = 0.2</span></span><br><span class="line">elasticnet_2 = ElasticNet(alpha = <span class="number">0.1</span>, l1_ratio = <span class="number">0.2</span>)</span><br><span class="line">elasticnet_2.fit(x_train, y_train)</span><br><span class="line">elast_pred_2 = elasticnet_2.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># l1_ratio = 0.8</span></span><br><span class="line">elasticnet_8 = ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio = <span class="number">0.8</span>)</span><br><span class="line">elasticnet_8.fit(x_train, y_train)</span><br><span class="line">elast_pred_8 = elasticnet_8.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>[ l1_ratio = 0.2 ]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">elasticnet_2.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-0.09297585,  0.05293361, -0.03950412,  1.30126199, -0.41996826,
        3.15838796, -0.00644646, -1.15290012,  0.25973467, -0.01231233,
       -0.77186571,  0.01201684, -0.60780037])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, elasticnet_2.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_119_0.png" alt="output_119_0"></p>
<br>
<p>[ l1_ratio = 0.8 ]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">elasticnet_8.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-0.08797633,  0.05035601, -0.03058513,  1.51071961, -0.        ,
        3.70247373, -0.01017259, -1.12431077,  0.24389841, -0.01189981,
       -0.73481448,  0.01259147, -0.573733  ])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, elasticnet_8.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_124_0.png" alt="output_124_0"></p>
<br>
<br>
<h2 id="4-scaling"><a class="markdownIt-Anchor" href="#4-scaling"></a> <strong>4. Scaling</strong></h2>
<h3 id="4-1-scaler-소개"><a class="markdownIt-Anchor" href="#4-1-scaler-소개"></a> 4-1. Scaler 소개</h3>
<ul>
<li>
<p>StandardScaler</p>
</li>
<li>
<p>MinMaxScaler</p>
</li>
<li>
<p>RobustScaler</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler, MinMaxScaler, RobustScaler</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>3.512192</td>
      <td>11.779683</td>
      <td>10.995013</td>
      <td>0.076517</td>
      <td>0.548712</td>
      <td>6.266953</td>
      <td>67.223483</td>
      <td>3.917811</td>
      <td>9.282322</td>
      <td>404.680739</td>
      <td>18.448549</td>
      <td>357.048100</td>
      <td>12.633773</td>
    </tr>
    <tr>
      <th>std</th>
      <td>8.338717</td>
      <td>23.492842</td>
      <td>6.792065</td>
      <td>0.266175</td>
      <td>0.115006</td>
      <td>0.681796</td>
      <td>28.563787</td>
      <td>2.084167</td>
      <td>8.583051</td>
      <td>166.813256</td>
      <td>2.154917</td>
      <td>92.745266</td>
      <td>7.259213</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.006320</td>
      <td>0.000000</td>
      <td>0.460000</td>
      <td>0.000000</td>
      <td>0.385000</td>
      <td>3.561000</td>
      <td>2.900000</td>
      <td>1.129600</td>
      <td>1.000000</td>
      <td>188.000000</td>
      <td>12.600000</td>
      <td>2.520000</td>
      <td>1.730000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.078910</td>
      <td>0.000000</td>
      <td>5.190000</td>
      <td>0.000000</td>
      <td>0.445000</td>
      <td>5.876500</td>
      <td>42.250000</td>
      <td>2.150900</td>
      <td>4.000000</td>
      <td>278.000000</td>
      <td>17.150000</td>
      <td>375.425000</td>
      <td>6.910000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.228760</td>
      <td>0.000000</td>
      <td>9.690000</td>
      <td>0.000000</td>
      <td>0.532000</td>
      <td>6.208000</td>
      <td>74.400000</td>
      <td>3.414500</td>
      <td>5.000000</td>
      <td>330.000000</td>
      <td>19.000000</td>
      <td>392.110000</td>
      <td>11.380000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>2.756855</td>
      <td>19.000000</td>
      <td>18.100000</td>
      <td>0.000000</td>
      <td>0.624000</td>
      <td>6.611000</td>
      <td>93.850000</td>
      <td>5.400900</td>
      <td>8.000000</td>
      <td>666.000000</td>
      <td>20.200000</td>
      <td>396.260000</td>
      <td>16.580000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>73.534100</td>
      <td>100.000000</td>
      <td>27.740000</td>
      <td>1.000000</td>
      <td>0.871000</td>
      <td>8.398000</td>
      <td>100.000000</td>
      <td>10.585700</td>
      <td>24.000000</td>
      <td>711.000000</td>
      <td>22.000000</td>
      <td>396.900000</td>
      <td>37.970000</td>
    </tr>
  </tbody>
</table>
</div>
</div>
 <br> 
<p><strong>&gt;&gt; StandardScaler</strong></p>
<p>평균(mean)을 0, 표준편차(std)를 1로 만들어 주는 scaler</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">std_scaler = StandardScaler()</span><br><span class="line">std_scaled = std_scaler.fit_transform(x_train)</span><br><span class="line">round(pd.DataFrame(std_scaled).describe(), <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
      <th>7</th>
      <th>8</th>
      <th>9</th>
      <th>10</th>
      <th>11</th>
      <th>12</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>-0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>-0.00</td>
      <td>-0.00</td>
      <td>-0.00</td>
      <td>-0.00</td>
      <td>0.00</td>
      <td>-0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-0.42</td>
      <td>-0.50</td>
      <td>-1.55</td>
      <td>-0.29</td>
      <td>-1.43</td>
      <td>-3.97</td>
      <td>-2.25</td>
      <td>-1.34</td>
      <td>-0.97</td>
      <td>-1.30</td>
      <td>-2.72</td>
      <td>-3.83</td>
      <td>-1.50</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>-0.41</td>
      <td>-0.50</td>
      <td>-0.86</td>
      <td>-0.29</td>
      <td>-0.90</td>
      <td>-0.57</td>
      <td>-0.88</td>
      <td>-0.85</td>
      <td>-0.62</td>
      <td>-0.76</td>
      <td>-0.60</td>
      <td>0.20</td>
      <td>-0.79</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>-0.39</td>
      <td>-0.50</td>
      <td>-0.19</td>
      <td>-0.29</td>
      <td>-0.15</td>
      <td>-0.09</td>
      <td>0.25</td>
      <td>-0.24</td>
      <td>-0.50</td>
      <td>-0.45</td>
      <td>0.26</td>
      <td>0.38</td>
      <td>-0.17</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>-0.09</td>
      <td>0.31</td>
      <td>1.05</td>
      <td>-0.29</td>
      <td>0.66</td>
      <td>0.51</td>
      <td>0.93</td>
      <td>0.71</td>
      <td>-0.15</td>
      <td>1.57</td>
      <td>0.81</td>
      <td>0.42</td>
      <td>0.54</td>
    </tr>
    <tr>
      <th>max</th>
      <td>8.41</td>
      <td>3.76</td>
      <td>2.47</td>
      <td>3.47</td>
      <td>2.81</td>
      <td>3.13</td>
      <td>1.15</td>
      <td>3.20</td>
      <td>1.72</td>
      <td>1.84</td>
      <td>1.65</td>
      <td>0.43</td>
      <td>3.49</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>&gt;&gt; MinMaxScaler</strong></p>
<p>min값과 max값을 0~1사이로 정규화 (Normalize)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">minmax_scaler = MinMaxScaler()</span><br><span class="line">minmax_scaled = minmax_scaler.fit_transform(x_train)</span><br><span class="line">round(pd.DataFrame(minmax_scaled).describe(), <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
      <th>7</th>
      <th>8</th>
      <th>9</th>
      <th>10</th>
      <th>11</th>
      <th>12</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>0.05</td>
      <td>0.12</td>
      <td>0.39</td>
      <td>0.08</td>
      <td>0.34</td>
      <td>0.56</td>
      <td>0.66</td>
      <td>0.29</td>
      <td>0.36</td>
      <td>0.41</td>
      <td>0.62</td>
      <td>0.90</td>
      <td>0.30</td>
    </tr>
    <tr>
      <th>std</th>
      <td>0.11</td>
      <td>0.23</td>
      <td>0.25</td>
      <td>0.27</td>
      <td>0.24</td>
      <td>0.14</td>
      <td>0.29</td>
      <td>0.22</td>
      <td>0.37</td>
      <td>0.32</td>
      <td>0.23</td>
      <td>0.24</td>
      <td>0.20</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.17</td>
      <td>0.00</td>
      <td>0.12</td>
      <td>0.48</td>
      <td>0.41</td>
      <td>0.11</td>
      <td>0.13</td>
      <td>0.17</td>
      <td>0.48</td>
      <td>0.95</td>
      <td>0.14</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.34</td>
      <td>0.00</td>
      <td>0.30</td>
      <td>0.55</td>
      <td>0.74</td>
      <td>0.24</td>
      <td>0.17</td>
      <td>0.27</td>
      <td>0.68</td>
      <td>0.99</td>
      <td>0.27</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>0.04</td>
      <td>0.19</td>
      <td>0.65</td>
      <td>0.00</td>
      <td>0.49</td>
      <td>0.63</td>
      <td>0.94</td>
      <td>0.45</td>
      <td>0.30</td>
      <td>0.91</td>
      <td>0.81</td>
      <td>1.00</td>
      <td>0.41</td>
    </tr>
    <tr>
      <th>max</th>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>&gt;&gt; RobustScaler</strong></p>
<p>중앙값(median)이 0, IQR(interquartile rage)이 1이 되도록 변환<br>
<strong>outlier 처리에 유용</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">robust_scaler = RobustScaler()</span><br><span class="line">robust_scaled = robust_scaler.fit_transform(x_train)</span><br><span class="line">round(pd.DataFrame(robust_scaled).median(), <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     0.0
1     0.0
2     0.0
3     0.0
4     0.0
5     0.0
6     0.0
7     0.0
8     0.0
9     0.0
10    0.0
11    0.0
12    0.0
dtype: float64
</code></pre>
  <br>
<h3 id="4-2-scaling-후-모델-학습-파이프라인-활용"><a class="markdownIt-Anchor" href="#4-2-scaling-후-모델-학습-파이프라인-활용"></a> 4-2. Scaling 후 모델 학습 – 파이프라인 활용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> make_pipeline</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># elasticnet(alpha=0.1, l1_ratio=0.2) &lt; without standard scaling &gt;</span></span><br><span class="line">elasticnet_no_scale = ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">no_scale_pred = elasticnet_no_scale.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'No Standard ElasticNet'</span>, y_test, no_scale_pred)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># elasticnet(alpha=0.1, l1_ratio=0.2) &lt; with standard scaling &gt;</span></span><br><span class="line">elasticnet_pipeline = make_pipeline(</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">with_scale_pred = elasticnet_pipeline.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'With Standard ElasticNet'</span>, y_test, with_scale_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_148_0.png" alt="output_148_0"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5   ElasticNet(l1_ratio=0.8)  22.865628
6            Ridge(alpha=10)  22.793119
7   ElasticNet(l1_ratio=0.5)  22.787269
8           LinearRegression  22.770784
9         Ridge(alpha=0.001)  22.770117
10         Ridge(alpha=0.01)  22.764254
11        Lasso(alpha=0.001)  22.753017
12  ElasticNet(l1_ratio=0.2)  22.749018
13    No Standard ElasticNet  22.749018
14          Ridge(alpha=0.1)  22.718126
15            Ridge(alpha=1)  22.690411
16         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_148_2.png" alt="output_148_2"></p>
<p><img src="/images/S-Python-sklearn3/output_148_3.png" alt="output_148_3"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4   With Standard ElasticNet  23.230164
5           Lasso(alpha=0.1)  22.979708
6   ElasticNet(l1_ratio=0.8)  22.865628
7            Ridge(alpha=10)  22.793119
8   ElasticNet(l1_ratio=0.5)  22.787269
9           LinearRegression  22.770784
10        Ridge(alpha=0.001)  22.770117
11         Ridge(alpha=0.01)  22.764254
12        Lasso(alpha=0.001)  22.753017
13  ElasticNet(l1_ratio=0.2)  22.749018
14    No Standard ElasticNet  22.749018
15          Ridge(alpha=0.1)  22.718126
16            Ridge(alpha=1)  22.690411
17         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_148_5.png" alt="output_148_5"></p>
<br>
<br>
<h2 id="5-polynomial-features"><a class="markdownIt-Anchor" href="#5-polynomial-features"></a> <strong>5. Polynomial Features</strong></h2>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.PolynomialFeatures.html?highlight=poly%20feature#sklearn.preprocessing.PolynomialFeatures" target="_blank" rel="noopener">[Document]</a></p>
<p>다항식의 계수간 상호작용을 통해 <strong>새로운 feature를 생성</strong>한다.<br>
예를 들면, [a, b] 2개의 feature가 존재한다고 가정하고,<br>
degree=2로 설정한다면, polynomial features 는 [1, a, b, a^2, ab, b^2]가 돤다</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br></pre></td></tr></tbody></table></figure>
<p><strong>Polynomial Features 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly = PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly_features = poly.fit_transform(x_train)[<span class="number">0</span>]</span><br><span class="line">poly_features</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([     0.12329   ,      0.        ,     10.01      ,      0.        ,
            0.547     ,      5.913     ,     92.9       ,      2.3534    ,
            6.        ,    432.        ,     17.8       ,    394.95      ,
           16.21      ,      0.01520042,      0.        ,      1.2341329 ,
            0.        ,      0.06743963,      0.72901377,     11.453641  ,
            0.29015069,      0.73974   ,     53.26128   ,      2.194562  ,
           48.6933855 ,      1.9985309 ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,    100.2001    ,      0.        ,
            5.47547   ,     59.18913   ,    929.929     ,     23.557534  ,
           60.06      ,   4324.32      ,    178.178     ,   3953.4495    ,
          162.2621    ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.299209  ,
            3.234411  ,     50.8163    ,      1.2873098 ,      3.282     ,
          236.304     ,      9.7366    ,    216.03765   ,      8.86687   ,
           34.963569  ,    549.3177    ,     13.9156542 ,     35.478     ,
         2554.416     ,    105.2514    ,   2335.33935   ,     95.84973   ,
         8630.41      ,    218.63086   ,    557.4       ,  40132.8       ,
         1653.62      ,  36690.855     ,   1505.909     ,      5.53849156,
           14.1204    ,   1016.6688    ,     41.89052   ,    929.47533   ,
           38.148614  ,     36.        ,   2592.        ,    106.8       ,
         2369.7       ,     97.26      , 186624.        ,   7689.6       ,
       170618.4       ,   7002.72      ,    316.84      ,   7030.11      ,
          288.538     , 155985.5025    ,   6402.1395    ,    262.7641    ])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.iloc[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>CRIM         0.12329
ZN           0.00000
INDUS       10.01000
CHAS         0.00000
NOX          0.54700
RM           5.91300
AGE         92.90000
DIS          2.35340
RAD          6.00000
TAX        432.00000
PTRATIO     17.80000
B          394.95000
LSTAT       16.21000
Name: 112, dtype: float64
</code></pre>
  <br>
<p><strong>Polynomial Features + Standard Scaling 후 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly_pipeline = make_pipeline(</span><br><span class="line">    PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>),</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly_pred = poly_pipeline.fit(x_train, y_train).predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:476: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 32.61172784964583, tolerance: 3.2374824854881266
  positive)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mse_eval(<span class="string">'Poly ElasticNet'</span>, y_test, poly_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_163_0.png" alt="output_163_0"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4   With Standard ElasticNet  23.230164
5           Lasso(alpha=0.1)  22.979708
6   ElasticNet(l1_ratio=0.8)  22.865628
7            Ridge(alpha=10)  22.793119
8   ElasticNet(l1_ratio=0.5)  22.787269
9           LinearRegression  22.770784
10        Ridge(alpha=0.001)  22.770117
11         Ridge(alpha=0.01)  22.764254
12        Lasso(alpha=0.001)  22.753017
13  ElasticNet(l1_ratio=0.2)  22.749018
14    No Standard ElasticNet  22.749018
15          Ridge(alpha=0.1)  22.718126
16            Ridge(alpha=1)  22.690411
17         Lasso(alpha=0.01)  22.635614
18           Poly ElasticNet  17.526214
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_163_2.png" alt="output_163_2"></p>
<p>2차 Polynomial Features 추가 후 학습된 모델의 성능이 많이 향상 된것을 확인할 수 있다</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Machine Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>회귀</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 분석 함수 (1) -- 평균 함수, 순위 함수</title>
    <url>/2020/11/18/S-SQL-Analytic-Function-1/</url>
    <content><![CDATA[<h1 id="분석-함수-1-평균-함수-순위-함수"><a class="markdownIt-Anchor" href="#분석-함수-1-평균-함수-순위-함수"></a> 분석 함수 (1) – 평균 함수, 순위 함수</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%B6%84%EC%84%9D-%ED%95%A8%EC%88%98%EB%9E%80"><strong>0. 분석 함수란?</strong></a>
<ul>
<li><a href="#0-1-%EA%B0%9C%EB%85%90">0-1. 개념</a></li>
<li><a href="#0-2-%EB%B6%84%EC%84%9D-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">0-2. 분석 함수 실습 준비</a></li>
<li><a href="#0-3-%EB%B6%84%EC%84%9D-%ED%95%A8%EC%88%98-%EB%AC%B8%EB%B2%95">0-3. 분석 함수 문법</a></li>
<li><a href="#0-4-%EB%B6%84%EC%84%9D-%ED%95%A8%EC%88%98-%EA%B2%B0%EA%B3%BC-%EC%98%88%EC%8B%9C">0-4. 분석 함수 결과 예시</a></li>
</ul>
</li>
<li><a href="#1-avg-%ED%95%A8%EC%88%98"><strong>1. AVG 함수</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-avg-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">1-2. AVG 함수 실습</a>
<ul>
<li><a href="#1-%EC%A0%84%EC%B2%B4-%ED%8F%89%EA%B7%A0-%EA%B0%80%EA%B2%A9price-%EA%B5%AC%ED%95%98%EA%B8%B0">(1) 전체  평균 가격(PRICE) 구하기</a></li>
<li><a href="#2-%EA%B7%B8%EB%A3%B9%EB%B3%84-%ED%8F%89%EA%B7%A0-%EA%B0%80%EA%B2%A9price-%EA%B5%AC%ED%95%98%EA%B8%B0">(2) 그룹별 평균 가격(PRICE) 구하기</a></li>
<li><a href="#3-%EA%B7%B8%EB%A3%B9%EB%B3%84-%EB%88%84%EC%A0%81-%ED%8F%89%EA%B7%A0-%EA%B0%80%EA%B2%A9price-%EA%B5%AC%ED%95%98%EA%B8%B0">(3) 그룹별 누적 평균 가격(PRICE) 구하기</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-row_number-rank-dense_rank-%ED%95%A8%EC%88%98"><strong>2. ROW_NUMBER, RANK, DENSE_RANK 함수</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1.  개념</a></li>
<li><a href="#2-2-%EC%88%9C%EC%9C%84-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">2-2. 순위 함수 실습</a>
<ul>
<li><a href="#2-2-1-row_number-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">2-2-1. ROW_NUMBER 함수 실습</a></li>
<li><a href="#2-2-2-rank-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">2-2-2. RANK 함수 실습</a></li>
<li><a href="#2-2-3-dense_rank-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5">2-2-3. DENSE_RANK 함수 실습</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="0-분석-함수란"><a class="markdownIt-Anchor" href="#0-분석-함수란"></a> <strong>0. 분석 함수란?</strong></h2>
<h3 id="0-1-개념"><a class="markdownIt-Anchor" href="#0-1-개념"></a> 0-1. 개념</h3>
<p>분석 함수는 특정 집합 내에서 결과 건수의 변화없이 해당 집합안에서 합계 및 카운트 등을 계산할 수 있는 함수이다.</p>
<br>
<h3 id="0-2-분석-함수-실습-준비"><a class="markdownIt-Anchor" href="#0-2-분석-함수-실습-준비"></a> 0-2. 분석 함수 실습 준비</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> PRODUCT_GROUP (</span><br><span class="line">  <span class="keyword">GROUP_ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  GROUP_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> PRODUCT (</span><br><span class="line">  PRODUCT_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  PRODUCT_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRICE <span class="built_in">DECIMAL</span> (<span class="number">11</span>, <span class="number">2</span>),   <span class="comment">-- DECIMAL (전체 자릿수, 소수점 자릿수)</span></span><br><span class="line">  <span class="keyword">GROUP_ID</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="keyword">GROUP_ID</span>)</span><br><span class="line">  <span class="keyword">REFERENCES</span> PRODUCT_GROUP (<span class="keyword">GROUP_ID</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
 <figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> PRODUCT_GROUP (GROUP_NAME)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'Smartphone'</span>),</span><br><span class="line">  (<span class="string">'Laptop'</span>),</span><br><span class="line">  (<span class="string">'Tablet'</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> PRODUCT (PRODUCT_NAME, <span class="keyword">GROUP_ID</span>, PRICE)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'Microsoft Lumia'</span>, <span class="number">1</span>, <span class="number">200</span>),</span><br><span class="line">  (<span class="string">'HTC One'</span>, <span class="number">1</span>, <span class="number">400</span>),</span><br><span class="line">  (<span class="string">'Nexus'</span>, <span class="number">1</span>, <span class="number">500</span>),</span><br><span class="line">  (<span class="string">'iPhone'</span>, <span class="number">1</span>, <span class="number">900</span>),</span><br><span class="line">  (<span class="string">'HP Elite'</span>, <span class="number">2</span>, <span class="number">1200</span>),</span><br><span class="line">  (<span class="string">'Lenovo Thinkpad'</span>, <span class="number">2</span>, <span class="number">700</span>),</span><br><span class="line">  (<span class="string">'Sony VAIO'</span>, <span class="number">2</span>, <span class="number">700</span>),</span><br><span class="line">  (<span class="string">'Dell Vostro'</span>, <span class="number">2</span>, <span class="number">800</span>),</span><br><span class="line">  (<span class="string">'iPad'</span>, <span class="number">3</span>, <span class="number">700</span>),</span><br><span class="line">  (<span class="string">'Kindle Fire'</span>, <span class="number">3</span>, <span class="number">150</span>),</span><br><span class="line">  (<span class="string">'Samsung Galaxy Tab'</span>, <span class="number">3</span>, <span class="number">200</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT_GROUP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117095413411.png" alt="image-20201117095413411" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117095502521.png" alt="image-20201117095502521" style="zoom:80%;">
<br>
<h3 id="0-3-분석-함수-문법"><a class="markdownIt-Anchor" href="#0-3-분석-함수-문법"></a> 0-3. 분석 함수 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  C1,</span><br><span class="line">  분석함수(C2, C3, ...) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> C4 <span class="keyword">ORDER</span> <span class="keyword">BY</span> C5)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>분석함수(C2, C3,…) :</strong> 사용하고자 하는 분석함수와 적용할 대상 컬럼을 지정</li>
<li><strong>PARTITION BY :</strong> 분석 함수를 적용 시 기준이 되는 컬럼을 지정 (즉, 그룹별로 값을 구할 때 그룹핑의 기준 컬럼)</li>
<li><strong>ORDER BY :</strong> 정렬 컬럼을 지정</li>
</ul>
<br>
<h3 id="0-4-분석-함수-결과-예시"><a class="markdownIt-Anchor" href="#0-4-분석-함수-결과-예시"></a> 0-4. 분석 함수 결과 예시</h3>
<p>집계 함수 vs 분석 함수:</p>
<ul>
<li>
<p>집계 함수는 집계의 결과만 출력한다</p>
</li>
<li>
<p>분석 함수는 집계의 결과 및 테이블의 내용을 함계 출력한다.</p>
<p>–&gt; 이게 바로 분석 함수의 역할이다.</p>
</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 집계 함수</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"> <span class="keyword">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PRODUCT</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Analytic-Function-1/image-20201117101439406.png" alt="image-20201117101439406"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 분석 함수</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">COUNT</span>(*) <span class="keyword">OVER</span>(),  <span class="comment">-- 집계 결과 </span></span><br><span class="line">  A.*               <span class="comment">-- 원래 집합</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117101622478.png" alt="image-20201117101622478" style="zoom:80%;">
<br>
<br>
<h2 id="1-avg-함수"><a class="markdownIt-Anchor" href="#1-avg-함수"></a> <strong>1. AVG 함수</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>AVG 함수는 특정 집합 내에서 결과 건수의 변화 없이 해당 집합안에서 <strong>특정 컬럼의 평균을 구하는 함수</strong>이다.</p>
<br>
<h3 id="1-2-avg-함수-실습"><a class="markdownIt-Anchor" href="#1-2-avg-함수-실습"></a> 1-2. AVG 함수 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT_GROUP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117095413411.png" alt="image-20201117095413411" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117095502521.png" alt="image-20201117095502521" style="zoom:80%;">
<br>
<h4 id="1-전체-평균-가격price-구하기"><a class="markdownIt-Anchor" href="#1-전체-평균-가격price-구하기"></a> (1) 전체  평균 가격(PRICE) 구하기</h4>
<p><strong>&gt;&gt; 집계함수 사용</strong></p>
<ul>
<li>
<p>AVG: 집계의 결과만 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 집계 함수(AVG): 집계의 결과만 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">AVG</span>(PRICE)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<p><img src="/images/S-SQL-Analytic-Function-1/image-20201117130450587.png" alt="image-20201117130450587"></p>
<br>
<p><strong>&gt;&gt; 분석함수 사용</strong></p>
<ul>
<li>
<p>AVG ( )  OVER ( ) : 결과 집합을 그대로 출력하면서 집계 결과도 함계 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 분석 함수</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  PRODUCT_NAME,</span><br><span class="line">  PRICE,</span><br><span class="line">  <span class="keyword">AVG</span>(PRICE) <span class="keyword">OVER</span>()</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117133842813.png" alt="image-20201117133842813" style="zoom:80%;">
<br>
</li>
</ul>
<h4 id="2-그룹별-평균-가격price-구하기"><a class="markdownIt-Anchor" href="#2-그룹별-평균-가격price-구하기"></a> (2) 그룹별 평균 가격(PRICE) 구하기</h4>
<p><strong>&gt;&gt; 집계함수 사용</strong></p>
<ul>
<li>
<p>GROUP BY + AVG:  집계의 결과만 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 집계 함수: GROUP BY + AVG</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">B.GROUP_NAME,</span><br><span class="line"><span class="keyword">AVG</span>(A.PRICE)</span><br><span class="line"><span class="keyword">FROM</span> PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> (A.GROUP_ID = B.GROUP_ID)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">B.GROUP_NAME;</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117131044658.png" alt="image-20201117131044658" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 분석함수 사용</strong></p>
<ul>
<li>
<p>AVG (C1)  OVER ( PARTITION BY C2 ) : 결과 집합을 그대로 출력하면서 집계 결과도 함계 출력</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 분석 함수</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">A.PRODUCT_NAME,</span><br><span class="line">A.PRICE, </span><br><span class="line">B.GROUP_NAME,</span><br><span class="line"><span class="keyword">AVG</span>(A.PRICE) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117132959087.png" alt="image-20201117132959087" style="zoom:80%;">
<br>
<h4 id="3-그룹별-누적-평균-가격price-구하기"><a class="markdownIt-Anchor" href="#3-그룹별-누적-평균-가격price-구하기"></a> (3) 그룹별 누적 평균 가격(PRICE) 구하기</h4>
<p><strong>&gt;&gt; 분석함수 사용</strong></p>
<ul>
<li>
<p>AVG (C1)  OVER ( PARTITION BY C2  ORDER BY C3 )</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  <span class="keyword">AVG</span>(A.PRICE) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117134939361.png" alt="image-20201117134939361" style="zoom:80%;">
</li>
</ul>
<br>
<br>
<h2 id="2-row_number-rank-dense_rank-함수"><a class="markdownIt-Anchor" href="#2-row_number-rank-dense_rank-함수"></a> <strong>2. ROW_NUMBER, RANK, DENSE_RANK 함수</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1.  개념</h3>
<p>ROW_NUMBER, RANK, DENSE_RANK 함수는 모두 특정 집합 내에서 결과 건수의 변화 없이 해당 집합안에서 <strong>특정 컬럼의 순위를 구하는 함수</strong>이다.</p>
<ul>
<li>
<p><strong>ROW_NUMBER:</strong> 같은 순위가 있어도 무조건 순차적으로 순으로 순위를 매긴다. (1, 2, 3, 4, 5 …)</p>
</li>
<li>
<p><strong>RANK:</strong> 같은 순위가 있으면 동일 순위로 매기고 그 다음 순위를 건너뛰다. (1, 1, 3, 4, 5 …)</p>
</li>
<li>
<p><strong>DENSE_RANK:</strong> 같은 순위가 있으면 동일 순위로 매기고 그 다음 순위를 건너뛰지 않는다. (1, 1, 2, 3, 4 …)</p>
<br>
</li>
</ul>
<h3 id="2-2-순위-함수-실습"><a class="markdownIt-Anchor" href="#2-2-순위-함수-실습"></a> 2-2. 순위 함수 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT_GROUP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117095413411.png" alt="image-20201117095413411" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117095502521.png" alt="image-20201117095502521" style="zoom:80%;">
<br>
<h4 id="2-2-1-row_number-함수-실습"><a class="markdownIt-Anchor" href="#2-2-1-row_number-함수-실습"></a> 2-2-1. ROW_NUMBER 함수 실습</h4>
<p><strong>ROW_NUMBER:</strong> 같은 순위가 있어도 무조건 순차적으로 순으로 순위를 매긴다. (1, 2, 3, 4, 5…)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  ROW_NUMBER() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117142626970.png" alt="image-20201117142626970" style="zoom:80%;">
<br>
<ul>
<li>Laptop 에서 가격순으로 정렬했을 때 "Sony VAIO"와 "Lenovo Thinkpad"의 가격이 동일해도 (즉, 가격 순위 같아도)  순차적으로 순번을 부여한다</li>
</ul>
<br>
<h4 id="2-2-2-rank-함수-실습"><a class="markdownIt-Anchor" href="#2-2-2-rank-함수-실습"></a> 2-2-2. RANK 함수 실습</h4>
<p><strong>RANK:</strong> 같은 순위가 있으면 동일 순위로 매기고 그 다음 순위는 건너뛰다. (1, 1, 3, 4, 5 …)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.PRODUCT_NAME,</span><br><span class="line">  B.GROUP_NAME,</span><br><span class="line">  A.PRICE,</span><br><span class="line">  <span class="keyword">RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> B.GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> A.PRICE)</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117150134038.png" alt="image-20201117150134038" style="zoom:80%;">
<br>
<h4 id="2-2-3-dense_rank-함수-실습"><a class="markdownIt-Anchor" href="#2-2-3-dense_rank-함수-실습"></a> 2-2-3. DENSE_RANK 함수 실습</h4>
<p><strong>DENSE_RANK:</strong> 같은 순위가 있으면 동일 순위로 매기고 그 다음 순위를 건너뛰지 않는다. (1, 1, 2, 3, 4 …)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  PRODUCT_NAME,</span><br><span class="line">  GROUP_NAME,</span><br><span class="line">  PRICE,</span><br><span class="line">  <span class="keyword">DENSE_RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> GROUP_NAME <span class="keyword">ORDER</span> <span class="keyword">BY</span> PRICE)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCT A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PRODUCT_GROUP B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.GROUP_ID = B.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Analytic-Function-1/image-20201117151955026.png" alt="image-20201117151955026" style="zoom:80%;">
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 5. Analytic Function</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Analytic Function</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (4) 앙상블 (Ensemble)</title>
    <url>/2020/08/04/S-Python-sklearn4/</url>
    <content><![CDATA[<h1 id="앙상블-ensemble"><a class="markdownIt-Anchor" href="#앙상블-ensemble"></a> 앙상블 (Ensemble)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B"><strong>0. 데이터 셋</strong></a>
<ul>
<li><a href="#0-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A1%9C%EB%93%9C">0-1. 데이터 로드</a></li>
<li><a href="#0-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0">0-2. 데이터프레임 만들기</a></li>
</ul>
</li>
<li><a href="#1-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0"><strong>1. Training set / Test set 나누기</strong></a></li>
<li><a href="#2-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0"><strong>2. 평가 지표 만들기</strong></a>
<ul>
<li><a href="#2-1-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C">2-1. 평가 지표</a></li>
<li><a href="#2-2-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%99%95%EC%9D%B8%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%95%A8%EC%88%98">2-2. 모델 성능 확인을 위한 함수</a></li>
</ul>
</li>
<li><a href="#3-%EB%8B%A8%EC%9D%BC-%ED%9A%8C%EA%B7%80-%EB%AA%A8%EB%8D%B8-%EC%A7%80%EB%82%9C-%EC%8B%9C%EA%B0%84"><strong>3. 단일 회귀 모델 (지난 시간)</strong></a>
<ul>
<li><a href="#1-linear-regression">(1)  Linear Regression</a></li>
<li><a href="#2-ridge">(2)  Ridge</a></li>
<li><a href="#3-lasso">(3)  LASSO</a></li>
<li><a href="#4-elasticnet">(4) ElasticNet</a></li>
<li><a href="#5-with-standard-scaling">(5) With Standard Scaling</a></li>
<li><a href="#6-polynomial-features">(6) Polynomial Features</a></li>
</ul>
</li>
<li><a href="#4-%EC%95%99%EC%83%81%EB%B8%94-ensemble-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"><strong>4. 앙상블 (Ensemble)  알고리즘</strong></a>
<ul>
<li><a href="#4-1-%EB%B3%B4%ED%8C%85-voting">4-1. 보팅 (Voting)</a>
<ul>
<li><a href="#%ED%9A%8C%EA%B7%80-regression">&gt;&gt; 회귀 (Regression)</a></li>
<li><a href="#%EB%B6%84%EB%A5%98-classification">&gt;&gt; 분류 (Classification)</a></li>
</ul>
</li>
<li><a href="#4-2-%EB%B0%B0%EA%B9%85-bagging">4-2. 배깅 (Bagging)</a>
<ul>
<li><a href="#random-forest">&gt;&gt; Random Forest</a></li>
</ul>
</li>
<li><a href="#4-3-%EB%B6%80%EC%8A%A4%ED%8C%85-boosting">4-3. 부스팅 (Boosting)</a>
<ul>
<li><a href="#4-3-1-gradient-boost">4-3-1. Gradient Boost</a></li>
<li><a href="#4-3-2-xgboost">4-3-2. XGBoost</a></li>
<li><a href="#4-3-3-lightgbm">4-3-3. LightGBM</a></li>
</ul>
</li>
<li><a href="#4-4-%EC%8A%A4%ED%83%9C%ED%82%B9-stacking">4-4. 스태킹 (Stacking)</a></li>
<li><a href="#4-5-weighted-blending">4-5. Weighted Blending</a></li>
<li><a href="#4-6-%EC%95%99%EC%83%81%EB%B8%94-%EB%AA%A8%EB%8D%B8-%EC%A0%95%EB%A6%AC">4-6. 앙상블 모델 정리</a></li>
</ul>
</li>
<li><a href="#5-cross-validation"><strong>5. Cross Validation</strong></a>
<ul>
<li><a href="#5-1-cross-validation-%EC%86%8C%EA%B0%9C">5-1. Cross Validation 소개</a></li>
<li><a href="#5-2-hyper-parameter-%ED%8A%9C%EB%8B%9D">5-2. Hyper-parameter 튜닝</a>
<ul>
<li><a href="#1-randomizedsearchcv">(1) RandomizedSearchCV</a></li>
<li><a href="#2-gridserchcv">(2) GridSerchCV</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<p>머신러닝 앙상블이란 <strong>여러 개의 머신러닝 모델을 이용해 최적의 답을 찾아내는 기법</strong>이다.<br>
(여러 모델을 이용하여 데이터를 학습하고, 모든 모델의 예측결과를 평균하여 예측)</p>
<br>
<p><strong>앙상블 기법의 종류</strong></p>
<ul>
<li>보팅 (Voting): 투표를 통해 결과 도출</li>
<li>배깅 (Bagging): 샘플 중복 생성을 통해 결과 도출</li>
<li>부스팅 (Boosting): 이전 오차를 보완하면서 가중치 부여</li>
<li>스태킹 (Stacking): 여러 모델을 기반으로 예측된 결과를 통해 meta 모델이 다시 한번 예측</li>
</ul>
<br>
<p><strong>참고자료 (블로그)</strong></p>
<ul>
<li>
<p><a href="https://blog.naver.com/winddori2002/221848433173" target="_blank" rel="noopener">보팅 (Voting)</a></p>
</li>
<li>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-2" target="_blank" rel="noopener">배경 (Bagging)</a></p>
</li>
<li>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-3" target="_blank" rel="noopener">부스팅 (Boosting)</a></p>
<br>
<br>
</li>
</ul>
<h2 id="0-데이터-셋"><a class="markdownIt-Anchor" href="#0-데이터-셋"></a> <strong>0. 데이터 셋</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>) <span class="comment"># If True, print floating point numbers instead of scientific notation</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h3 id="0-1-데이터-로드"><a class="markdownIt-Anchor" href="#0-1-데이터-로드"></a> 0-1. 데이터 로드</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = load_boston()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(data[<span class="string">'DESCR'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _boston_dataset:

Boston house prices dataset
---------------------------

**Data Set Characteristics:**  

    :Number of Instances: 506 

    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.

    :Attribute Information (in order):
        - CRIM     per capita crime rate by town
        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.
        - INDUS    proportion of non-retail business acres per town
        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)
        - NOX      nitric oxides concentration (parts per 10 million)
        - RM       average number of rooms per dwelling
        - AGE      proportion of owner-occupied units built prior to 1940
        - DIS      weighted distances to five Boston employment centres
        - RAD      index of accessibility to radial highways
        - TAX      full-value property-tax rate per $10,000
        - PTRATIO  pupil-teacher ratio by town
        - B        1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town
        - LSTAT    % lower status of the population
        - MEDV     Median value of owner-occupied homes in $1000's

    :Missing Attribute Values: None

    :Creator: Harrison, D. and Rubinfeld, D.L.

This is a copy of UCI ML housing dataset.
https://archive.ics.uci.edu/ml/machine-learning-databases/housing/
</code></pre>
<p>​</p>
<pre><code>This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.

The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic
prices and the demand for clean air', J. Environ. Economics &amp; Management,
vol.5, 81-102, 1978.   Used in Belsley, Kuh &amp; Welsch, 'Regression diagnostics
...', Wiley, 1980.   N.B. Various transformations are used in the table on
pages 244-261 of the latter.

The Boston house-price data has been used in many machine learning papers that address regression
problems.   
     
.. topic:: References

   - Belsley, Kuh &amp; Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.
   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.
</code></pre>
<p>​</p>
 <br> 
<h3 id="0-2-데이터프레임-만들기"><a class="markdownIt-Anchor" href="#0-2-데이터프레임-만들기"></a> 0-2. 데이터프레임 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame(data[<span class="string">'data'</span>], columns = data[<span class="string">'feature_names'</span>])</span><br><span class="line">df[<span class="string">'MEDV'</span>] = data[<span class="string">'target'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
      <th>MEDV</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0.0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1.0</td>
      <td>296.0</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
      <td>24.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
      <td>21.6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
      <td>34.7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
      <td>33.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
      <td>36.2</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>컬럼 소게</strong> (feature 13 + target 1):</p>
<ul>
<li>
<p><strong>CRIM</strong>: 범죄율</p>
</li>
<li>
<p><strong>ZN</strong>: 25,000 square feet 당 주거용 토지의 비율</p>
</li>
<li>
<p><strong>INDUS</strong>: 비소매(non-retail) 비즈니스 면적 비율</p>
</li>
<li>
<p><strong>CHAS</strong>: 찰스 강 더미 변수 (통로가 하천을 향하면 1; 그렇지 않으면 0)</p>
</li>
<li>
<p><strong>NOX</strong>: 산화 질소 농도 (천만 분의 1)</p>
</li>
<li>
<p><strong>RM</strong>:주거 당 평균 객실 수</p>
</li>
<li>
<p><strong>AGE</strong>: 1940 년 이전에 건축된 자가 소유 점유 비율</p>
</li>
<li>
<p><strong>DIS</strong>: 5 개의 보스턴 고용 센터까지의 가중 거리</p>
</li>
<li>
<p><strong>RAD</strong>: 고속도로 접근성 지수</p>
</li>
<li>
<p><strong>TAX</strong>: 10,000 달러 당 전체 가치 재산 세율</p>
</li>
<li>
<p><strong>PTRATIO</strong>  도시 별 학생-교사 비율</p>
</li>
<li>
<p><strong>B</strong>: 1000 (Bk-0.63) ^ 2 여기서 Bk는 도시 별 검정 비율입니다.</p>
</li>
<li>
<p><strong>LSTAT</strong>: 인구의 낮은 지위</p>
</li>
<li>
<p><strong>MEDV</strong>: 자가 주택의 중앙값 (1,000 달러 단위)</p>
<br>
</li>
</ul>
<h2 id="1-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#1-training-set-test-set-나누기"></a> <strong>1. Training set / Test set 나누기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(df.drop(<span class="string">'MEDV'</span>, <span class="number">1</span>), df[<span class="string">'MEDV'</span>], random_state=<span class="number">23</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((379, 13), (379,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((127, 13), (127,))
</code></pre>
  <br>
<h2 id="2-평가-지표-만들기"><a class="markdownIt-Anchor" href="#2-평가-지표-만들기"></a> <strong>2. 평가 지표 만들기</strong></h2>
<h3 id="2-1-평가-지표"><a class="markdownIt-Anchor" href="#2-1-평가-지표"></a> 2-1. 평가 지표</h3>
<p><strong>(1) MAE (Mean Absolute Error)</strong></p>
<p>MAE (평균 절대 오차): 에측값과 실제값의 차이의 <strong>절대값</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">MAE = \frac{1}{n} \sum_{i=1}^n \left\vert y_i - \widehat{y_i} \right\vert
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<p><strong>(2) MSE (Mean Squared Error)</strong></p>
<p>MSE (평균 제곱 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">MSE = \frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>(3) RMSE (Root Mean Squared Error)</strong></p>
<p>RMSE (평균 제곱근 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 뒤 <strong>루트</strong>를 씌운 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">RMSE = \sqrt{\frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1568160000000005em;vertical-align:-1.277669em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8791470000000006em;"><span class="svg-align" style="top:-5.116816em;"><span class="pstrut" style="height:5.116816em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.8391470000000005em;"><span class="pstrut" style="height:5.116816em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.196816em;"><svg width="400em" height="3.196816em" viewBox="0 0 400000 3196" preserveAspectRatio="xMinYMin slice"><path d="M702 80H400000v40H742v3062l-4 4-4 4c-.667.7
-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667
-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155
 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span></span></span></span></span></p>
  <br>
<h3 id="2-2-모델-성능-확인을-위한-함수"><a class="markdownIt-Anchor" href="#2-2-모델-성능-확인을-위한-함수"></a> 2-2. 모델 성능 확인을 위한 함수</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># sklearn 평가지표 활용</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error, mean_squared_error</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">my_predictions = {}</span><br><span class="line"></span><br><span class="line">colors = [<span class="string">'r'</span>, <span class="string">'c'</span>, <span class="string">'m'</span>, <span class="string">'y'</span>, <span class="string">'k'</span>, <span class="string">'khaki'</span>, <span class="string">'teal'</span>, <span class="string">'orchid'</span>, <span class="string">'sandybrown'</span>,</span><br><span class="line">          <span class="string">'greenyellow'</span>, <span class="string">'dodgerblue'</span>, <span class="string">'deepskyblue'</span>, <span class="string">'rosybrown'</span>, <span class="string">'firebrick'</span>,</span><br><span class="line">          <span class="string">'deeppink'</span>, <span class="string">'crimson'</span>, <span class="string">'salmon'</span>, <span class="string">'darkred'</span>, <span class="string">'olivedrab'</span>, <span class="string">'olive'</span>, </span><br><span class="line">          <span class="string">'forestgreen'</span>, <span class="string">'royalblue'</span>, <span class="string">'indigo'</span>, <span class="string">'navy'</span>, <span class="string">'mediumpurple'</span>, <span class="string">'chocolate'</span>,</span><br><span class="line">          <span class="string">'gold'</span>, <span class="string">'darkorange'</span>, <span class="string">'seagreen'</span>, <span class="string">'turquoise'</span>, <span class="string">'steelblue'</span>, <span class="string">'slategray'</span>, </span><br><span class="line">          <span class="string">'peru'</span>, <span class="string">'midnightblue'</span>, <span class="string">'slateblue'</span>, <span class="string">'dimgray'</span>, <span class="string">'cadetblue'</span>, <span class="string">'tomato'</span></span><br><span class="line">         ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># prediction plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_predictions</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    df = pd.DataFrame({<span class="string">'actual'</span>: y_test, <span class="string">'prediction'</span>: pred})</span><br><span class="line">    df = df.sort_values(by=<span class="string">'actual'</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'prediction'</span>], marker=<span class="string">'x'</span>, color=<span class="string">'r'</span>)</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'actual'</span>], alpha=<span class="number">0.7</span>, marker=<span class="string">'o'</span>, color=<span class="string">'black'</span>)</span><br><span class="line">    plt.title(name_, fontsize=<span class="number">15</span>)</span><br><span class="line">    plt.legend([<span class="string">'prediction'</span>, <span class="string">'actual'</span>], fontsize=<span class="number">12</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># evaluation plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mse_eval</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> predictions</span><br><span class="line">    <span class="keyword">global</span> colors</span><br><span class="line"></span><br><span class="line">    plot_predictions(name_, actual, pred)</span><br><span class="line"></span><br><span class="line">    mse = mean_squared_error(actual, pred)</span><br><span class="line">    my_predictions[name_] = mse</span><br><span class="line"></span><br><span class="line">    y_value = sorted(my_predictions.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    df = pd.DataFrame(y_value, columns=[<span class="string">'model'</span>, <span class="string">'mse'</span>])</span><br><span class="line">    print(df)</span><br><span class="line">    min_ = df[<span class="string">'mse'</span>].min() - <span class="number">10</span></span><br><span class="line">    max_ = df[<span class="string">'mse'</span>].max() + <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    length = len(df)</span><br><span class="line">    </span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, length))</span><br><span class="line">    ax = plt.subplot()</span><br><span class="line">    ax.set_yticks(np.arange(len(df)))</span><br><span class="line">    ax.set_yticklabels(df[<span class="string">'model'</span>], fontsize=<span class="number">15</span>)</span><br><span class="line">    bars = ax.barh(np.arange(len(df)), df[<span class="string">'mse'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(df[<span class="string">'mse'</span>]):</span><br><span class="line">        idx = np.random.choice(len(colors))</span><br><span class="line">        bars[i].set_color(colors[idx])</span><br><span class="line">        ax.text(v + <span class="number">2</span>, i, str(round(v, <span class="number">3</span>)), color=<span class="string">'k'</span>, fontsize=<span class="number">15</span>, fontweight=<span class="string">'bold'</span>)</span><br><span class="line">        </span><br><span class="line">    plt.title(<span class="string">'MSE Error'</span>, fontsize=<span class="number">18</span>)</span><br><span class="line">    plt.xlim(min_, max_)</span><br><span class="line">    </span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove model</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_model</span><span class="params">(name_)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_predictions</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">del</span> my_predictions[name_]</span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># coefficients visulization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_coef</span><span class="params">(columns, coef)</span>:</span></span><br><span class="line">    coef_df = pd.DataFrame(list(zip(columns, coef)))</span><br><span class="line">    coef_df.columns=[<span class="string">'feature'</span>, <span class="string">'coef'</span>]</span><br><span class="line">    coef_df = coef_df.sort_values(<span class="string">'coef'</span>, ascending=<span class="literal">False</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">9</span>, <span class="number">7</span>))</span><br><span class="line">    ax.barh(np.arange(len(coef_df)), coef_df[<span class="string">'coef'</span>])</span><br><span class="line">    idx = np.arange(len(coef_df))</span><br><span class="line">    ax.set_yticks(idx)</span><br><span class="line">    ax.set_yticklabels(coef_df[<span class="string">'feature'</span>])</span><br><span class="line">    fig.tight_layout()</span><br><span class="line">    plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><br> <br></p>
<h2 id="3-단일-회귀-모델-지난-시간"><a class="markdownIt-Anchor" href="#3-단일-회귀-모델-지난-시간"></a> <strong>3. 단일 회귀 모델 (지난 시간)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Ridge</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> ElasticNet</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler, MinMaxScaler, RobustScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> make_pipeline</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-linear-regression"><a class="markdownIt-Anchor" href="#1-linear-regression"></a> (1)  Linear Regression</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">linear_reg = LinearRegression(n_jobs=<span class="number">-1</span>)</span><br><span class="line">linear_reg.fit(x_train, y_train)</span><br><span class="line">linear_pred = linear_reg.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'LinearRegression'</span>, y_test, linear_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_43_0.png" alt="output_43_0"></p>
<pre><code>              model        mse
0  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_43_2.png" alt="output_43_2"></p>
<br>
<h3 id="2-ridge"><a class="markdownIt-Anchor" href="#2-ridge"></a> (2)  Ridge</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ridge = Ridge(alpha=<span class="number">1</span>)</span><br><span class="line">ridge.fit(x_train, y_train)</span><br><span class="line">ridge_pred = ridge.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Ridge(alpha=1)'</span>, y_test, ridge_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_46_0.png" alt="output_46_0"></p>
<pre><code>              model        mse
0  LinearRegression  22.770784
1    Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_46_2.png" alt="output_46_2"></p>
<br>
<h3 id="3-lasso"><a class="markdownIt-Anchor" href="#3-lasso"></a> (3)  LASSO</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lasso = Lasso(alpha=<span class="number">0.01</span>)</span><br><span class="line">lasso.fit(x_train, y_train)</span><br><span class="line">lasso_pred = lasso.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Lasso(alpha=0.01)'</span>, y_test, lasso_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_49_0.png" alt="output_49_0"></p>
<pre><code>               model        mse
0   LinearRegression  22.770784
1     Ridge(alpha=1)  22.690411
2  Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_49_2.png" alt="output_49_2"></p>
<br>
<h3 id="4-elasticnet"><a class="markdownIt-Anchor" href="#4-elasticnet"></a> (4) ElasticNet</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">elasticnet = ElasticNet(alpha=<span class="number">0.5</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">elasticnet.fit(x_train, y_train)</span><br><span class="line">elas_pred = elasticnet.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'ElasticNet(l1_ratio=0.2)'</span>, y_test, elas_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_52_0.png" alt="output_52_0"></p>
<pre><code>                      model        mse
0  ElasticNet(l1_ratio=0.2)  24.481069
1          LinearRegression  22.770784
2            Ridge(alpha=1)  22.690411
3         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_52_2.png" alt="output_52_2"></p>
<br>
<h3 id="5-with-standard-scaling"><a class="markdownIt-Anchor" href="#5-with-standard-scaling"></a> (5) With Standard Scaling</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">standard_elasticnet = make_pipeline(</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.5</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">elas_scaled_pred = standard_elasticnet.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Standard ElasticNet'</span>, y_test, elas_scaled_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_55_0.png" alt="output_55_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_55_2.png" alt="output_55_2"></p>
<br>
<h3 id="6-polynomial-features"><a class="markdownIt-Anchor" href="#6-polynomial-features"></a> (6) Polynomial Features</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 2-Degree Polynomial Features + Standard Scaling</span></span><br><span class="line">poly_elasticnet = make_pipeline(</span><br><span class="line">    PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>),</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.5</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">poly_pred = poly_elasticnet.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Poly ElasticNet'</span>, y_test, poly_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_58_0-1596543446470.png" alt="output_58_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
5           Poly ElasticNet  20.805986
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_58_2-1596543452273.png" alt="output_58_2"></p>
<br>
<br>
<h2 id="4-앙상블-ensemble-알고리즘"><a class="markdownIt-Anchor" href="#4-앙상블-ensemble-알고리즘"></a> <strong>4. 앙상블 (Ensemble)  알고리즘</strong></h2>
<p><a href="https://scikit-learn.org/stable/modules/classes.html?highlight=ensemble#module-sklearn.ensemble" target="_blank" rel="noopener">[sklearn.ensemble] Document</a></p>
<p><strong>앙상블 기법의 종류</strong></p>
<ul>
<li>
<p>보팅 (Voting): 투표를 통해 결과 도출</p>
</li>
<li>
<p>배깅 (Bagging): 샘플 중복 생성을 통해 결과 도출</p>
</li>
<li>
<p>부스팅 (Boosting): 이전 오차를 보완하면서 가중치 부여</p>
</li>
<li>
<p>스태킹 (Stacking): 여러 모델을 기반으로 예측된 결과를 통해 meta 모델이 다시 한번 예측</p>
<br>
</li>
</ul>
<h3 id="4-1-보팅-voting"><a class="markdownIt-Anchor" href="#4-1-보팅-voting"></a> 4-1. 보팅 (Voting)</h3>
<h4 id="회귀-regression"><a class="markdownIt-Anchor" href="#회귀-regression"></a> &gt;&gt; 회귀 (Regression)</h4>
<p>Voting은 단어 뜻 그대로 <strong>투표를 통해 최종 결과를 결정하는 방식</strong>이다. Voting과 Bagging은 모두 투표방식이지만, 다음과 같은 큰 차이점이 있다:</p>
<ul>
<li>Voting은 다른 알고리즘 model을 조합해서 사용함</li>
<li>Bagging은 같은 알고리즘 내에서 다른 sample 조합을 사용함</li>
</ul>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> VotingRegressor</span><br></pre></td></tr></tbody></table></figure>
<p>반드시, <strong>Tuple 형태로 모델</strong>을 정의해야 한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 보팅에 참여한 single models 지정</span></span><br><span class="line">single_models = [</span><br><span class="line">    (<span class="string">'linear_reg'</span>, linear_reg),</span><br><span class="line">    (<span class="string">'ridge'</span>, ridge),</span><br><span class="line">    (<span class="string">'lasso'</span>, lasso),</span><br><span class="line">    (<span class="string">'elasticnet'</span>, elasticnet),</span><br><span class="line">    (<span class="string">'standard_elasticnet'</span>, standard_elasticnet),</span><br><span class="line">    (<span class="string">'poly_elasticnet'</span>, poly_elasticnet)</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># voting regressor 만들기</span></span><br><span class="line">voting_regressor = VotingRegressor(single_models, n_jobs=<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">voting_regressor.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>VotingRegressor(estimators=[('linear_reg',
                             LinearRegression(copy_X=True, fit_intercept=True,
                                              n_jobs=-1, normalize=False)),
                            ('ridge',
                             Ridge(alpha=1, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=None, solver='auto',
                                   tol=0.001)),
                            ('lasso',
                             Lasso(alpha=0.01, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, pr...
                                                                 interaction_only=False,
                                                                 order='C')),
                                             ('standardscaler',
                                              StandardScaler(copy=True,
                                                             with_mean=True,
                                                             with_std=True)),
                                             ('elasticnet',
                                              ElasticNet(alpha=0.5, copy_X=True,
                                                         fit_intercept=True,
                                                         l1_ratio=0.2,
                                                         max_iter=1000,
                                                         normalize=False,
                                                         positive=False,
                                                         precompute=False,
                                                         random_state=None,
                                                         selection='cyclic',
                                                         tol=0.0001,
                                                         warm_start=False))],
                                      verbose=False))],
                n_jobs=-1, weights=None)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">voting_pred = voting_regressor.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Voting Ensemble'</span>, y_test, voting_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_74_0-1596543659301.png" alt="output_74_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
5           Voting Ensemble  22.092158
6           Poly ElasticNet  20.805986
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_74_2-1596543665427.png" alt="output_74_2"></p>
<br>
<h4 id="분류-classification"><a class="markdownIt-Anchor" href="#분류-classification"></a> &gt;&gt; 분류 (Classification)</h4>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-1" target="_blank" rel="noopener">참고 자료 (Blog)</a></p>
<p>분류기 모델을 만들때, Voting 앙상블은 1가지의 <strong>중요한 parameter</strong>가 있다:</p>
<ul>
<li><code>voting</code> = {‘hard’, ‘soft’}</li>
</ul>
<br>
<p>class를 0, 1로 분류 예측을 하는 이진 분류를 예로 들어 보자.</p>
<p><strong>(1) hard 로 설정한 경우</strong></p>
<p>Hard Voting 방식에서는 결과 값에 대한 다수 class를 사용한다.</p>
<blockquote>
<p>분류를 예측한 값이 1, 0, 0, 1, 1 이었다고 가정한다면 1이 3표, 0이 2표를 받았기 때문에 Hard Voting 방식에서는 1이 최종 값으로 예측을 하게 된다.</p>
</blockquote>
 <br> 
<p><strong>(2) soft 로 설정한 경우</strong></p>
<p>soft voting 방식은 각각의 확률의 평균 값을 계산한다음에 가장 확률이 높은 값으로 확정짓게 된다.</p>
<blockquote>
<p>가령 class 0이 나올 확률이 (0.4, 0.9, 0.9, 0.4, 0.4)이었고, class 1이 나올 확률이 (0.6, 0.1, 0.1, 0.6, 0.6) 이었다면,</p>
<ul>
<li>class 0이 나올 최종 확률은 (0.4+0.9+0.9+0.4+0.4) / 5 = 0.44,</li>
<li>class 1이 나올 최종 확률은 (0.6+0.1+0.1+0.6+0.6) / 5 = 0.4</li>
</ul>
<p>가 되기 때문에 앞선 Hard Voting의 결과와는 다른 결과 값이 최종으로 선출되게 된다.</p>
</blockquote>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> VotingClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression, RidgeClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">models = [</span><br><span class="line">    (<span class="string">'Logit'</span>, LogisticRegression()),</span><br><span class="line">    (<span class="string">'ridge'</span>, RidgeClassifier())</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<p>voting 옵션 지정</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">vc = VotingClassifier(models, voting=<span class="string">'soft'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="4-2-배깅-bagging"><a class="markdownIt-Anchor" href="#4-2-배깅-bagging"></a> 4-2. 배깅 (Bagging)</h3>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-2" target="_blank" rel="noopener">참고 자료 (Blog)</a></p>
<p>Bagging은 <strong>Bootstrap Aggregating의 줄임말</strong>이다.</p>
<p>Bootstrap은 여러 개의 dataset을 중첩을 허용하게 하여 샘플링하여 분할하는 방식.</p>
<p>데이터 셋의 구성이 [1, 2, 3, 4, 5]로 되어 있다면,</p>
<ol>
<li>group 1 = [1, 2, 3]</li>
<li>group 2 = [1, 3, 4]</li>
<li>group 3 = [2, 3, 5]</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://teddylee777.github.io/images/2019-12-17/image-20191217015537872.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_94_0-1596543677837.png" alt="output_94_0"></p>
<br>  
<p><strong>Voting VS Bagging</strong></p>
<ul>
<li><strong>Voting</strong>은 여러 알고리즘의 조합에 대한 앙상블</li>
<li><strong>Bagging</strong>은 하나의 단일 알고리즘에 대하여 여러 개의 샘플 조합으로 앙상블</li>
</ul>
<p><strong>대표적인 Bagging 앙상블</strong></p>
<ol>
<li>
<p>Random Forest</p>
</li>
<li>
<p>Bagging</p>
</li>
</ol>
  <br> 
<h4 id="random-forest"><a class="markdownIt-Anchor" href="#random-forest"></a> &gt;&gt; Random Forest</h4>
<ul>
<li>Decision Tree 기반 Bagging 앙상블</li>
<li>굉장히 인기있는 앙상블 모델</li>
<li>사용성이 쉽고, 성능도 우수함</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html" target="_blank" rel="noopener">[sklearn.ensemble.<strong>RandomForestRegressor</strong>] Document</a><br>
<a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html" target="_blank" rel="noopener">[sklearn.ensemble.<strong>RandomForestClassifier</strong>] Document</a></p>
  <br>
<ul>
<li><strong>회귀 (Regression)</strong></li>
</ul>
<p><strong>Hyper-parameter의 default value로 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rfr = RandomForestRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">rfr.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=None, oob_score=False,
                      random_state=1, verbose=0, warm_start=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rfr_pred = rfr.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'RandomForest Ensemble'</span>, y_test, rfr_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_107_0-1596543686370.png" alt="output_107_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
5           Voting Ensemble  22.092158
6           Poly ElasticNet  20.805986
7     RandomForest Ensemble  13.781191
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_107_2-1596543692042.png" alt="output_107_2"></p>
<br>
<p><strong>주요 Hyper-parameter</strong></p>
<ul>
<li><strong>random_state:</strong> random seed 고정 값</li>
<li><strong>n_jobs:</strong> CPU 사용 갯수</li>
<li><strong>max_depth:</strong> 깊어질 수 있는 최대 깊이. 과대적합 방지용</li>
<li><strong>n_estimators:</strong> 암상블하는 트리의 갯수</li>
<li><strong>max_features:</strong> best split을 판단할 때 최대로 사용할 feature의 갯수 {‘auto’, ‘sqrt’, ‘log2’}. 과대적합 방지용</li>
<li><strong>min_samples_split:</strong> 트리가 분할할 때 최소 샘플의 갯수. default=2. 과대적합 방지용</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://teddylee777.github.io/images/2020-01-09/decistion-tree.png'</span>, width=<span class="number">600</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn4/output_110_0-1596543700142.png" alt="output_110_0" style="zoom: 50%;">
 <br> 
<p><strong>With Hyper-parameter Tuning</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rfr_t = RandomForestRegressor(random_state=<span class="number">1</span>, n_estimators=<span class="number">500</span>, max_depth=<span class="number">7</span>, max_features=<span class="string">'sqrt'</span>)</span><br><span class="line">rfr_t.fit(x_train, y_train)</span><br><span class="line">rfr_t_pred = rfr_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'RandomForest Ensemble w/ Tuning'</span>, y_test, rfr_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_113_0-1596543713401.png" alt="output_113_0"></p>
<pre><code>                             model        mse
0              Standard ElasticNet  26.010756
1         ElasticNet(l1_ratio=0.2)  24.481069
2                 LinearRegression  22.770784
3                   Ridge(alpha=1)  22.690411
4                Lasso(alpha=0.01)  22.635614
5                  Voting Ensemble  22.092158
6                  Poly ElasticNet  20.805986
7            RandomForest Ensemble  13.781191
8  RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_113_2-1596543719396.png" alt="output_113_2"></p>
<br>
<h3 id="4-3-부스팅-boosting"><a class="markdownIt-Anchor" href="#4-3-부스팅-boosting"></a> 4-3. 부스팅 (Boosting)</h3>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-3" target="_blank" rel="noopener">참고 자료 (Blog)</a></p>
<p>악한 학습기를 순차적으로 학습을 하되, 이전 학습에 대하여 잘멋 예측된 데이터에 <strong>가중치를 부여해 오차를 보완</strong>해 나가는 방식이다.</p>
<p><strong>장점</strong></p>
<ul>
<li>성능이 매우 우수하다 (LightGBM, XGBoost)</li>
</ul>
<p><strong>단점</strong></p>
<ul>
<li>부스팅 알고리즘의 특성상 계속 약점(오분류/잔차)을 보완하려고 하기 때문에 <strong>잘못된 레이블링이나 아웃라이어에 필요 이상으로 민감</strong>할 수 있다</li>
<li>다른 앙상블 대비 <strong>학습 시간이 오래걸린다는 단점</strong>이 존재</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://keras.io/img/graph-kaggle-1.jpeg'</span>, width=<span class="number">800</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_120_0-1596543725618.jpg" alt="output_120_0"></p>
  <br>
<p><strong>대표적인 Boosting 앙상블</strong></p>
<ol>
<li>
<p>AdaBoost</p>
</li>
<li>
<p>GradientBoost</p>
</li>
<li>
<p>LightGBM (LGBM)</p>
</li>
<li>
<p>XGBoost</p>
</li>
</ol>
  <br> 
<h4 id="4-3-1-gradient-boost"><a class="markdownIt-Anchor" href="#4-3-1-gradient-boost"></a> 4-3-1. Gradient Boost</h4>
<ul>
<li><strong>장점:</strong> 성능이 우수함</li>
<li><strong>단점:</strong> 학습 시간이 너무 오래 걸린다</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingRegressor.html?highlight=gradient%20boost#sklearn.ensemble.GradientBoostingRegressor" target="_blank" rel="noopener">[sklearn.ensemble.<strong>GradientBoostingRegressor</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> GradientBoostingRegressor, GradientBoostingClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># default value로 학습</span></span><br><span class="line">gbr = GradientBoostingRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">gbr.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=1, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">gbr_pred = gbr.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble'</span>, y_test, gbr_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_129_0-1596543733348.png" alt="output_129_0"></p>
<pre><code>                             model        mse
0              Standard ElasticNet  26.010756
1         ElasticNet(l1_ratio=0.2)  24.481069
2                 LinearRegression  22.770784
3                   Ridge(alpha=1)  22.690411
4                Lasso(alpha=0.01)  22.635614
5                  Voting Ensemble  22.092158
6                  Poly ElasticNet  20.805986
7            RandomForest Ensemble  13.781191
8           GradientBoost Ensemble  13.451877
9  RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_129_2-1596543738508.png" alt="output_129_2"></p>
<br>
<p><strong>주요 Hyper-parameter</strong></p>
<ul>
<li><strong>random_state:</strong> random seed 고정 값</li>
<li><strong>n_jobs:</strong> CPU 사용 갯수</li>
<li><strong>learning rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. default=0.1 (n_estimators와 같이 튜닝해야 함)</li>
<li><strong>n_estimators:</strong> 부스팅 스테이지 수. default=100<br>
(Random Forest 트리의 갯수 설정과 비슷)</li>
<li><strong>subsample:</strong> 샘플 사용 비율 (max_features와 비슷). 과대적합 방지용</li>
<li><strong>min_samples_split:</strong> 노드 분할시 최소 샘플의 갯수. default=2. 과대적합 방지용</li>
</ul>
<blockquote>
<p>There’s a trade-off between <font color="blue"><em>learning_rate</em></font> and <font color="blue"><em>n_estimators</em></font>.<br>
둘의 곱을 유지하는 것이 좋다</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># with hyper-parameter tuning</span></span><br><span class="line"><span class="comment"># learning_rate=0.01 (without tuning n_estimators together)</span></span><br><span class="line">gbr_t = GradientBoostingRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>)</span><br><span class="line">gbr_t.fit(x_train, y_train)</span><br><span class="line">gbr_t_pred = gbr_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble w/ tuning (lr=0.01)'</span>, y_test, gbr_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_133_0-1596543744823.png" alt="output_133_0"></p>
<pre><code>                                         model        mse
0                          Standard ElasticNet  26.010756
1   GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                     ElasticNet(l1_ratio=0.2)  24.481069
3                             LinearRegression  22.770784
4                               Ridge(alpha=1)  22.690411
5                            Lasso(alpha=0.01)  22.635614
6                              Voting Ensemble  22.092158
7                              Poly ElasticNet  20.805986
8                        RandomForest Ensemble  13.781191
9                       GradientBoost Ensemble  13.451877
10             RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_133_2-1596543750011.png" alt="output_133_2"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># tuning: learning_rate=0.01, n_estimators=1000</span></span><br><span class="line">gbr_t2 = GradientBoostingRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">1000</span>)</span><br><span class="line">gbr_t2.fit(x_train, y_train)</span><br><span class="line">gbr_t2_pred = gbr_t2.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble w/ tuning (lr=0.01, est=1000)'</span>, y_test, gbr_t2_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_135_0-1596543755501.png" alt="output_135_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                               RandomForest Ensemble  13.781191
9                              GradientBoost Ensemble  13.451877
10  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
11                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_135_2-1596543760559.png" alt="output_135_2"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># tuning: learning_rate=0.01, n_estimators=1000, subsample=0.8</span></span><br><span class="line">gbr_t3 = GradientBoostingRegressor(random_state=<span class="number">42</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">1000</span>, subsample=<span class="number">0.7</span>)</span><br><span class="line">gbr_t3.fit(x_train, y_train)</span><br><span class="line">gbr_t3_pred = gbr_t3.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble w/ tuning (lr=0.01, est=1000, subsample=0.7)'</span>, y_test, gbr_t3_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_137_0-1596543766188.png" alt="output_137_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                               RandomForest Ensemble  13.781191
9                              GradientBoost Ensemble  13.451877
10  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
12                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_137_2-1596543771241.png" alt="output_137_2"></p>
<br>
<h4 id="4-3-2-xgboost"><a class="markdownIt-Anchor" href="#4-3-2-xgboost"></a> 4-3-2. XGBoost</h4>
<p>e<strong>X</strong>treme <strong>G</strong>radient <strong>B</strong>oosting</p>
<p><a href="https://xgboost.readthedocs.io/en/latest/" target="_blank" rel="noopener">[XGBoost] Document</a></p>
<p><strong>주요 특징</strong></p>
<ul>
<li>
<p>scikit-learn 패키지 아님</p>
</li>
<li>
<p>성능이 우수함</p>
</li>
<li>
<p>GBM보다는 빠르고 성능도 향상됨</p>
</li>
<li>
<p>여전히 학습 속도가 느림</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install xgboost</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Requirement already satisfied: xgboost in d:\anaconda\lib\site-packages (1.1.1)
Requirement already satisfied: scipy in d:\anaconda\lib\site-packages (from xgboost) (1.4.1)
Requirement already satisfied: numpy in d:\anaconda\lib\site-packages (from xgboost) (1.18.1)
Note: you may need to restart the kernel to use updated packages.
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> XGBRegressor, XGBClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># default value로 학습</span></span><br><span class="line">xgb = XGBRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">xgb.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.300000012, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1,
             objective='reg:squarederror', random_state=1, reg_alpha=0,
             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact',
             validate_parameters=1, verbosity=None)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">xgb_pred = xgb.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'XGBoost'</span>, y_test, xgb_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_146_0-1596543778583.png" alt="output_146_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
13                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_146_2-1596543783973.png" alt="output_146_2"></p>
<br>
<p><strong>주요 Hyper-parameter</strong></p>
<ul>
<li>
<p><strong>random_state:</strong> random seed 고정 값</p>
</li>
<li>
<p><strong>n_jobs:</strong> CPU 사용 갯수</p>
</li>
<li>
<p><strong>learning_rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. n_estimators와 같이 튜닝. default=0.1</p>
</li>
<li>
<p><strong>n_estimators:</strong> 부스팅 스테이지 수. (랜덤포레스트 트리의 갯수 설정과 비슷한 개념). default=100</p>
</li>
<li>
<p><strong>max_depth:</strong> 트리의 깊이. 과대적합 방지용. default=3.</p>
</li>
<li>
<p><strong>subsample:</strong> 샘플 사용 비율. 과대적합 방지용. default=1.0</p>
</li>
<li>
<p><strong>max_features:</strong> 최대로 사용할 feature의 비율. 과대적합 방지용. default=1.0</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># with hyeper-parameter tuning</span></span><br><span class="line">xgb_t = XGBRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">1000</span>, subsample=<span class="number">0.7</span>, max_features=<span class="number">0.8</span>, max_depth=<span class="number">7</span>)</span><br><span class="line">xgb_t.fit(x_train, y_train)</span><br><span class="line">xgb_t_pred = xgb_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'XGBoost w/ Tuning'</span>, y_test, xgb_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[16:55:00] WARNING: C:\Users\Administrator\workspace\xgboost-win64_release_1.1.0\src\learner.cc:480: 
Parameters: { max_features } might not be used.

  This may not be accurate due to some parameters are only used in language bindings but
  passed down to XGBoost core.  Or some parameters are not used but slip through this
  verification. Please open an issue if you find above cases.
</code></pre>
<p>​<br>
​</p>
<p><img src="/images/S-Python-sklearn4/output_150_1-1596543791859.png" alt="output_150_1"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
13                                  XGBoost w/ Tuning  11.987602
14                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_150_3-1596543797426.png" alt="output_150_3"></p>
<br>
<h4 id="4-3-3-lightgbm"><a class="markdownIt-Anchor" href="#4-3-3-lightgbm"></a> 4-3-3. LightGBM</h4>
<p><a href="https://lightgbm.readthedocs.io/en/latest/" target="_blank" rel="noopener">[LightGBM] Document</a></p>
<p><strong>주요 특징</strong></p>
<ul>
<li>
<p>scikit-learn 패키지가 아님</p>
</li>
<li>
<p>성능이 우수함</p>
</li>
<li>
<p>속도도 매우 빠름</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install lightgbm</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Requirement already satisfied: lightgbm in d:\anaconda\lib\site-packages (2.3.1)
Requirement already satisfied: scipy in d:\anaconda\lib\site-packages (from lightgbm) (1.4.1)
Requirement already satisfied: numpy in d:\anaconda\lib\site-packages (from lightgbm) (1.18.1)
Requirement already satisfied: scikit-learn in d:\anaconda\lib\site-packages (from lightgbm) (0.22.1)
Requirement already satisfied: joblib&gt;=0.11 in d:\anaconda\lib\site-packages (from scikit-learn-&gt;lightgbm) (0.14.1)
Note: you may need to restart the kernel to use updated packages.
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lightgbm <span class="keyword">import</span> LGBMRegressor, LGBMClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># default value 로 학습</span></span><br><span class="line">lgbm = LGBMRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">lgbm.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=1, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_pred = lgbm.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'LightGBM'</span>, y_test, lgbm_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_158_0-1596543804030.png" alt="output_158_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12                                           LightGBM  12.882170
13  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
14                                  XGBoost w/ Tuning  11.987602
15                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_158_2-1596543812633.png" alt="output_158_2"></p>
<br>
<p><strong>주요 Hyperparameter</strong></p>
<ul>
<li>
<p><strong>random_state:</strong> random seed 고정 값</p>
</li>
<li>
<p><strong>n_jobs:</strong> CPU 사용 갯수</p>
</li>
<li>
<p><strong>learning_rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. n_estimators와 같이 튜닝. default=0.1</p>
</li>
<li>
<p><strong>n_estimators:</strong> 부스팅 스테이지 수. (랜덤포레스트 트리의 갯수 설정과 비슷한 개념). default=100</p>
</li>
<li>
<p><strong>max_depth:</strong> 트리의 깊이. 과대적합 방지용. default=3.</p>
</li>
<li>
<p><strong>colsample_bytree:</strong> 샘플 사용 비율 (max_features와 비슷한 개념). 과대적합 방지용. default=1.0</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># with hyper-parameter tuning</span></span><br><span class="line">lgbm_t = LGBMRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">2000</span>, colsample_bytree=<span class="number">0.9</span>, subsample=<span class="number">0.7</span>, max_depth=<span class="number">5</span>)</span><br><span class="line">lgbm_t.fit(x_train, y_train)</span><br><span class="line">lgbm_t_pred = lgbm_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'LightGBM w/ Tuning'</span>, y_test, lgbm_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_162_0-1596543872792.png" alt="output_162_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12                                           LightGBM  12.882170
13  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
14                                 LightGBM w/ Tuning  12.200040
15                                  XGBoost w/ Tuning  11.987602
16                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_162_2-1596543881929.png" alt="output_162_2"></p>
<br>
<h3 id="4-4-스태킹-stacking"><a class="markdownIt-Anchor" href="#4-4-스태킹-stacking"></a> 4-4. 스태킹 (Stacking)</h3>
<p>개별 모델이 예측한 데이터를 기반으로 <strong>final_estimators</strong> 종합하여 예측을 수행</p>
<ul>
<li>
<p>성능을 극으로 끌오올릴 때 활용하기도 함</p>
</li>
<li>
<p>과대적합을 유발할 수 있다. (특히, 데이터셋이 적은 경우)</p>
<br>
</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.StackingRegressor.html" target="_blank" rel="noopener">[sklearn.ensemble.<strong>StackingRegressor</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> StackingRegressor</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">stack_models = [</span><br><span class="line">    (<span class="string">'elasticnet'</span>, poly_elasticnet),</span><br><span class="line">    (<span class="string">'randomforest'</span>, rfr_t),</span><br><span class="line">    (<span class="string">'lgbm'</span>, lgbm_t)</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">stack_reg = StackingRegressor(stack_models, final_estimator=xgb, n_jobs=<span class="number">-1</span>)</span><br><span class="line">stack_reg.fit(x_train, y_train)</span><br><span class="line">stack_pred = stack_reg.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Stacking Ensemble'</span>, y_test, stack_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_171_0-1596543891772.png" alt="output_171_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
15                                 LightGBM w/ Tuning  12.200040
16                                  XGBoost w/ Tuning  11.987602
17                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_171_2-1596543909420.png" alt="output_171_2"></p>
<br>
<h3 id="4-5-weighted-blending"><a class="markdownIt-Anchor" href="#4-5-weighted-blending"></a> 4-5. Weighted Blending</h3>
<p>각 모델의 <strong>예측값</strong>에 대하여 weight를 곱해혀 최종 output 산출</p>
<ul>
<li>
<p>모델에 대한 가중치를 조절하여, 최종 output을 산출함</p>
</li>
<li>
<p><strong>가중치의 합은 1.0</strong>이 되도록 설정</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">final_outputs = {</span><br><span class="line">    <span class="string">'randomforest'</span>: rfr_t_pred,</span><br><span class="line">    <span class="string">'xgboost'</span>: xgb_t_pred,</span><br><span class="line">    <span class="string">'lgbm'</span>: lgbm_t_pred</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">final_prediction=\</span><br><span class="line">final_outputs[<span class="string">'randomforest'</span>] * <span class="number">0.5</span>\</span><br><span class="line">+final_outputs[<span class="string">'xgboost'</span>] * <span class="number">0.3</span>\</span><br><span class="line">+final_outputs[<span class="string">'lgbm'</span>] * <span class="number">0.2</span>\</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mse_eval(<span class="string">'Weighted Blending'</span>, y_test, final_prediction)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_178_0-1596543918172.png" alt="output_178_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
15                                 LightGBM w/ Tuning  12.200040
16                                  XGBoost w/ Tuning  11.987602
17                    RandomForest Ensemble w/ Tuning  11.481491
18                                  Weighted Blending  10.585610
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_178_2-1596543958921.png" alt="output_178_2"></p>
<br>
<h3 id="4-6-앙상블-모델-정리"><a class="markdownIt-Anchor" href="#4-6-앙상블-모델-정리"></a> 4-6. 앙상블 모델 정리</h3>
<ol>
<li>
<p>앙상블은 대체적으로 단일 모델 대비 성능이 좋다</p>
</li>
<li>
<p>앙상블을 앙상블하는 기법인 Stacking과 Weighted Blending도 참고해 볼만 하다</p>
</li>
<li>
<p>앙상블 모델은 적절한 <strong>Hyper-parameter Tuning</strong>이 중요하다</p>
</li>
<li>
<p>앙상블 모델은 대체적으로 학습시간이 더 오래 걸린다</p>
</li>
<li>
<p>따라서, 모델 튜닝을 하는 데에 시간이 오래 소유된다</p>
<br>
</li>
</ol>
  <br>
<h2 id="5-cross-validation"><a class="markdownIt-Anchor" href="#5-cross-validation"></a> <strong>5. Cross Validation</strong></h2>
<h3 id="5-1-cross-validation-소개"><a class="markdownIt-Anchor" href="#5-1-cross-validation-소개"></a> 5-1. Cross Validation 소개</h3>
<p><a href="https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation" target="_blank" rel="noopener">Cross Validation 알아보기</a></p>
<p><a href="https://3months.tistory.com/321" target="_blank" rel="noopener">참고 자료: 딥러닝 모델의 K-겹 교차검증 (K-fold Cross Validation)</a></p>
<p>전에 진행했던 실습에서도 보였듯이, Hyper-parameter의 값은 모델의 성능을 좌우한다. 그러므로 예측 모델의 성능을 높이기 위해, Hyper-parameter Tuning이 매우 중요하다.</p>
<ul>
<li>
<p>이를 실현하기 위해 저희는 Training data을 다시 Training set과 Validation set으로 나눈다. Trainging set에서 Hyper-parameter값을 바뀌가면서 모델 학습하고, Validation set에서 모델의 성능을 평가하여, 모델 성능을 제일 높일 수 있는 Hyper-parameter값을 선택한다</p>
</li>
<li>
<p>하지만, 데이터의 일부만 Validation set으로 사용해 모델 성능을 평가하게 되면, 훈련된 모델이 Test set에 대한 성능 평가의 신뢰성이 떨어질 수 있다. 이를 방지하기 위해 **K-fold Cross Validation (K-겹 교차검증)**을 많이 활용한다</p>
<ul>
<li>K겹 교차 검증은 모든 데이터가 최소 한 번은 validation set으로 쓰이도록 한다<br>
(아래의 그림을 보면, 데이터를 5개로 쪼개 매번 validation set을 바꿔나가는 것을 볼 수 있다)</li>
<li>K번 검증을 통해 구한 K 개의 평가지표 값을 평균 내어 모델 성능을 평가한다</li>
</ul>
</li>
</ul>
<p><img src="/images/S-Python-sklearn4/grid_search_cross_validation.png" alt="CV"></p>
<br>
<p>[예시]</p>
<ul>
<li>
<p>Estimation 1일 때,<br>
Training set: [2, 3, 4, 5] / Validation set: [1]</p>
</li>
<li>
<p>Estimation 2일 때,<br>
Training set: [1, 3, 4, 5] / Validation set: [2]</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> KFold</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">n_splits = <span class="number">5</span></span><br><span class="line">kfold = KFold(n_splits=n_splits, random_state=<span class="number">1</span>, shuffle = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
      <th>MEDV</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0.0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1.0</td>
      <td>296.0</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
      <td>24.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
      <td>21.6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
      <td>34.7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
      <td>33.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
      <td>36.2</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">X = np.array(df.drop(<span class="string">'MEDV'</span>, <span class="number">1</span>))</span><br><span class="line">Y = np.array(df[<span class="string">'MEDV'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_fold = LGBMRegressor(random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line">total_error = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> train_index, test_index <span class="keyword">in</span> kfold.split(X):</span><br><span class="line">    x_train_fold, x_test_fold = X[train_index], X[test_index]</span><br><span class="line">    y_train_fold, y_test_fold = Y[train_index], Y[test_index]</span><br><span class="line">    lgbm_fold_pred = lgbm_fold.fit(x_train_fold, y_train_fold).predict(x_test_fold)</span><br><span class="line">    error = mean_squared_error(y_test_fold, lgbm_fold_pred)</span><br><span class="line">    print(<span class="string">'Fold = {}, prediction score = {:.2f}'</span>.format(i, error))</span><br><span class="line">    total_error += error</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">print(<span class="string">'---'</span>*<span class="number">10</span>)</span><br><span class="line">print(<span class="string">'Average Error: %s'</span> % (total_error / n_splits))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Fold = 1, prediction score = 9.76
Fold = 2, prediction score = 20.58
Fold = 3, prediction score = 6.95
Fold = 4, prediction score = 12.18
Fold = 5, prediction score = 10.87
------------------------------
Average Error: 12.06743160435072
</code></pre>
<br>
<h3 id="5-2-hyper-parameter-튜닝"><a class="markdownIt-Anchor" href="#5-2-hyper-parameter-튜닝"></a> 5-2. Hyper-parameter 튜닝</h3>
<p><strong>Hyper-parameter 튜닝</strong> 시 경우의 수가 너무 많으므로 우리는 <strong>자동화</strong>할 틸요가 있다</p>
<p>sklearn 패키지에서 자주 사용되는 hyper-parameter 튜닝을 돕는 클래스는 다음 2가지가 있다:</p>
<ol>
<li><strong>RandomizedSerchCV</strong></li>
<li><strong>GridSerchCV</strong></li>
</ol>
<p><strong>적용하는 방법</strong></p>
<ol>
<li>
<p>사용할 Search 방법을 선택한다</p>
</li>
<li>
<p>hyper-parameter 도메인(값의 범위)을 설정한다 (<code>max_depth</code>, <code>n_estimators</code>… 등등)</p>
</li>
<li>
<p>학습을 시킨 후, 기다린다</p>
</li>
<li>
<p>도출된 결과 값을 모델에 적용하고 성능을 비교한다</p>
<br>
</li>
</ol>
<h4 id="1-randomizedsearchcv"><a class="markdownIt-Anchor" href="#1-randomizedsearchcv"></a> (1) RandomizedSearchCV</h4>
<ul>
<li>
<p>모든 매개 변수 값이 시도되는 것이 아니라 지정된 분포에서 고정 된 수의 매개 변수 설정이 샘플링된다.</p>
</li>
<li>
<p>시도 된 매개 변수 설정의 수는 <code>n_iter</code>에 의해 제공됨.</p>
<br>
</li>
</ul>
<p><strong>주요 Hyper-parameter (LGBM)</strong></p>
<ul>
<li><strong>random_state:</strong> random seed 고정 값</li>
<li><strong>n_jobs:</strong> CPU 사용 갯수</li>
<li><strong>learning_rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. n_estimators와 같이 튜닝. default=0.1</li>
<li><strong>n_estimators:</strong> 부스팅 스테이지 수. (랜덤포레스트 트리의 갯수 설정과 비슷한 개념). default=100</li>
<li><strong>max_depth:</strong> 트리의 깊이. 과대적합 방지용. default=3.</li>
<li><strong>colsample_bytree:</strong> 샘플 사용 비율 (max_features와 비슷한 개념). 과대적합 방지용. default=1.0</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">params = {</span><br><span class="line">    <span class="string">'learning_rate'</span>: [<span class="number">0.005</span>, <span class="number">0.01</span>, <span class="number">0.03</span>, <span class="number">0.05</span>],</span><br><span class="line">    <span class="string">'n_estimators'</span>: [<span class="number">500</span>, <span class="number">1000</span>, <span class="number">2000</span>, <span class="number">3000</span>],</span><br><span class="line">    <span class="string">'max_depth'</span>: [<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>],</span><br><span class="line">    <span class="string">'colsample_bytree'</span>: [<span class="number">0.8</span>, <span class="number">0.9</span>, <span class="number">1.0</span>],</span><br><span class="line">    <span class="string">'subsample'</span>: [<span class="number">0.7</span>, <span class="number">0.8</span>, <span class="number">0.9</span>, <span class="number">1.0</span>],</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> RandomizedSearchCV</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><figcaption><span>조절하여, 총 몇 회의 시도를 진행할 것인자 정의한다  </span></figcaption><table><tbody><tr><td class="code"><pre><span class="line">(회수가 늘어나면, 더 좋은 parameter를 찾을 확률은 올라가지만, 그만큼 시간이 오래걸린다.)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">rcv_lgbm = RandomizedSearchCV(LGBMRegressor(), params, random_state=1, cv=5, n_iter=100, scoring='neg_mean_squared_error')</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rcv_lgbm.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>RandomizedSearchCV(cv=5, error_score=nan,
                   estimator=LGBMRegressor(boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0,
                                           importance_type='split',
                                           learning_rate=0.1, max_depth=-1,
                                           min_child_samples=20,
                                           min_child_weight=0.001,
                                           min_split_gain=0.0, n_estimators=100,
                                           n_jobs=-1, num_leaves=31,
                                           objective=None, random_state=None,
                                           reg_alpha=0.0, reg_lambda=0.0,
                                           silen...
                                           subsample_freq=0),
                   iid='deprecated', n_iter=100, n_jobs=None,
                   param_distributions={'colsample_bytree': [0.8, 0.9, 1.0],
                                        'learning_rate': [0.005, 0.01, 0.03,
                                                          0.05],
                                        'max_depth': [3, 5, 7],
                                        'n_estimators': [500, 1000, 2000, 3000],
                                        'subsample': [0.7, 0.8, 0.9, 1.0]},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring='neg_mean_squared_error',
                   verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rcv_lgbm.best_score_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>-11.132039701508374
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rcv_lgbm.best_params_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'subsample': 0.8,
 'n_estimators': 1000,
 'max_depth': 3,
 'learning_rate': 0.05,
 'colsample_bytree': 0.9}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_best = LGBMRegressor(learning_rate=<span class="number">0.05</span>, n_estimators=<span class="number">1000</span>, subsample=<span class="number">0.8</span>, max_depth=<span class="number">3</span>, colsample_bytree=<span class="number">0.9</span>)</span><br><span class="line">lgbm_best_pred = lgbm_best.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'RandomSearch LGBM'</span>, y_test, lgbm_best_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_216_0-1596543976320.png" alt="output_216_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14                                  RandomSearch LGBM  12.661917
15  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
16                                 LightGBM w/ Tuning  12.200040
17                                  XGBoost w/ Tuning  11.987602
18                    RandomForest Ensemble w/ Tuning  11.481491
19                                  Weighted Blending  10.585610
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_216_2-1596543983232.png" alt="output_216_2"></p>
<br>
<h4 id="2-gridserchcv"><a class="markdownIt-Anchor" href="#2-gridserchcv"></a> (2) GridSerchCV</h4>
<ul>
<li>모든 매개 변수 값에 대하여 <strong>완전 탐색</strong>을 시도한다</li>
<li>따라서, 최적화할 parameter가 많다면, <strong>시간이 매우 오래</strong>걸린다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">params = {</span><br><span class="line">    <span class="string">'learning_rate'</span>: [<span class="number">0.04</span>, <span class="number">0.05</span>, <span class="number">0.06</span>],</span><br><span class="line">    <span class="string">'n_estimators'</span>: [<span class="number">800</span>, <span class="number">1000</span>, <span class="number">1200</span>],</span><br><span class="line">    <span class="string">'max_depth'</span>: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">    <span class="string">'colsample_bytree'</span>: [<span class="number">0.8</span>, <span class="number">0.85</span>, <span class="number">0.9</span>],</span><br><span class="line">    <span class="string">'subsample'</span>: [<span class="number">0.8</span>, <span class="number">0.85</span>, <span class="number">0.9</span>],</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search = GridSearchCV(LGBMRegressor(), params, cv=<span class="number">5</span>, n_jobs=<span class="number">-1</span>, scoring=<span class="string">'neg_mean_squared_error'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>GridSearchCV(cv=5, error_score=nan,
             estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None,
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, random_state=None,
                                     reg_alpha=0.0, reg_lambda=0.0, silent=True,
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0),
             iid='deprecated', n_jobs=-1,
             param_grid={'colsample_bytree': [0.8, 0.85, 0.9],
                         'learning_rate': [0.04, 0.05, 0.06],
                         'max_depth': [3, 4, 5],
                         'n_estimators': [800, 1000, 1200],
                         'subsample': [0.8, 0.85, 0.9]},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring='neg_mean_squared_error', verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search.best_score_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>-11.10039780445118
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search.best_params_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'colsample_bytree': 0.9,
 'learning_rate': 0.05,
 'max_depth': 3,
 'n_estimators': 800,
 'subsample': 0.8}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_best = LGBMRegressor(learning_rate=<span class="number">0.05</span>, n_estimators=<span class="number">800</span>, subsample=<span class="number">0.8</span>, max_depth=<span class="number">3</span>, colsample_bytree=<span class="number">0.9</span>)</span><br><span class="line">lgbm_best_pred = lgbm_best.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GridSearch LGBM'</span>, y_test, lgbm_best_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_226_0-1596543990796.png" alt="output_226_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14                                    GridSearch LGBM  12.794172
15                                  RandomSearch LGBM  12.661917
16  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
17                                 LightGBM w/ Tuning  12.200040
18                                  XGBoost w/ Tuning  11.987602
19                    RandomForest Ensemble w/ Tuning  11.481491
20                                  Weighted Blending  10.585610
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_226_2-1596543997347.png" alt="output_226_2"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - Machine Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>앙상블</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 조인 (1)</title>
    <url>/2020/11/12/S-SQL-Join-1/</url>
    <content><![CDATA[<h1 id="조인-1"><a class="markdownIt-Anchor" href="#조인-1"></a> 조인 (1)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%A1%B0%EC%9D%B8%EC%9D%B4%EB%9E%80"><strong>1. 조인이란?</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-%EC%A1%B0%EC%9D%B8%EC%9D%98-%EC%A2%85%EB%A5%98">1-2. 조인의 종류</a></li>
</ul>
</li>
<li><a href="#2-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84"><strong>2. 실습 준비</strong></a></li>
<li><a href="#3-inner-%EC%A1%B0%EC%9D%B8"><strong>3. INNER 조인</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-inner-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">3-2. INNER 조인 문법</a></li>
<li><a href="#3-3-inner-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">3-3. INNER 조인 실습</a>
<ul>
<li><a href="#3-3-1-basket-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%8B%A4%EC%8A%B5">3-3-1. BASKET 데이터를 활용한 간단한 실습</a></li>
<li><a href="#3-3-2-dvdrental-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EC%8B%A4%EC%8A%B5">3-3-2. dvdrental 데이터를 활용한 실습</a>
<ul>
<li><a href="#1-2%EA%B0%9C%EC%9D%98-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A1%B0%EC%9D%B8">(1) 2개의 테이블 조인</a></li>
<li><a href="#2-3%EA%B0%9C%EC%9D%98-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A1%B0%EC%9D%B8">(2)  3개의 테이블 조인</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-outer-%EC%A1%B0%EC%9D%B8"><strong>4. OUTER 조인</strong></a>
<ul>
<li><a href="#4-1-%EA%B0%9C%EB%85%90">4-1. 개념</a></li>
<li><a href="#4-2-outer-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">4-2. OUTER 조인 문법</a>
<ul>
<li><a href="#1-left-outer-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">(1) LEFT OUTER 조인 문법</a></li>
<li><a href="#2-right-outer-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">(2) RIGHT OUTER 조인 문법</a></li>
</ul>
</li>
<li><a href="#4-3-outer-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">4-3. OUTER 조인 실습</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-조인이란"><a class="markdownIt-Anchor" href="#1-조인이란"></a> <strong>1. 조인이란?</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>조인은 2개 이상의 테이블에 있는 정보 중 사용자가 필요한 집합에 맞게 가상의 테이블처럼 만들어서 결과를 보여주는 것이다.</p>
<br>
<h3 id="1-2-조인의-종류"><a class="markdownIt-Anchor" href="#1-2-조인의-종류"></a> 1-2. 조인의 종류</h3>
<table>
<thead>
<tr>
<th style="text-align:left">종류</th>
<th style="text-align:left">설명</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">INNER 조인</td>
<td style="text-align:left">특정 컬럼을 기준으로 정확히 매칭된 집합을 출력한다</td>
</tr>
<tr>
<td style="text-align:left">OUTER 조인</td>
<td style="text-align:left">특정 컬럼을 기준으로 매칭된 집합을 출력하지만 한쪽의 집합은 모두 출력하고 다른 한쪽의 집합은 매칭되는 컬럼의 값 만을 출력한다<br> (왼쪽 집합을 기준으로 하면 LEFT OUTER, 오른쪽 집합을 기준으로 하면 RIGHT OUTER)</td>
</tr>
<tr>
<td style="text-align:left">SELT 조인</td>
<td style="text-align:left">동일한 테이블 끼리의 특정 컬럼을 기준으로 매칭되는 집합을 출력한다</td>
</tr>
<tr>
<td style="text-align:left">FULL OUTER 조인</td>
<td style="text-align:left">INNER, LEFT OUTER, RIGHT OUTER 조인 집합을 모두 출력한다</td>
</tr>
<tr>
<td style="text-align:left">CROSS 조인</td>
<td style="text-align:left">Cartesian Product이라고도 하며 조인되는 두 테이블에서 곱집합을 반환한다</td>
</tr>
</tbody>
</table>
<br>
<br>
<h2 id="2-실습-준비"><a class="markdownIt-Anchor" href="#2-실습-준비"></a> <strong>2. 실습 준비</strong></h2>
<p><strong>실습을 위한 데이터 생성</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BASKET_A</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  FRUIT <span class="built_in">VARCHAR</span> (<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BASKET_B</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  FRUIT <span class="built_in">VARCHAR</span> (<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> BASKET_A</span><br><span class="line">  (<span class="keyword">ID</span>, FRUIT)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, <span class="string">'Apple'</span>),</span><br><span class="line">  (<span class="number">2</span>, <span class="string">'Orange'</span>),</span><br><span class="line">  (<span class="number">3</span>, <span class="string">'Banana'</span>),</span><br><span class="line">  (<span class="number">4</span>, <span class="string">'Cucumber'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- INSERT, UPDATE, DELETE로 데이터의 삽입 혹은 갱신을 실시한 후에 꼭 COMMIT/ROLLBACK을 실현해야함.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> BASKET_B</span><br><span class="line">  (<span class="keyword">ID</span>, FRUIT)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="number">1</span>, <span class="string">'Orange'</span>),</span><br><span class="line">  (<span class="number">2</span>, <span class="string">'Apple'</span>),</span><br><span class="line">  (<span class="number">3</span>, <span class="string">'Watermelon'</span>),</span><br><span class="line">  (<span class="number">4</span>, <span class="string">'Pear'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> BASKET_A;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-1/image-20201111095120367.png" alt="image-20201111095120367" style="zoom:80%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> BASKET_B;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-1/image-20201111095201056.png" alt="image-20201111095201056" style="zoom:80%;">
<br>
<br>
<h2 id="3-inner-조인"><a class="markdownIt-Anchor" href="#3-inner-조인"></a> <strong>3. INNER 조인</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>INNER 조인은 대표적인 조인의 종유이다. 이는 특정 컬럼을 기준으로 정확히 매칭된 집합을 출력한다.</p>
<img src="/images/S-SQL-Join-1/image-20201111110318071.png" alt="image-20201111110318071" style="zoom:50%;">
<br>
<h3 id="3-2-inner-조인-문법"><a class="markdownIt-Anchor" href="#3-2-inner-조인-문법"></a> 3-2. INNER 조인 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.COL_A1, A.COL_A2, ...,</span><br><span class="line">  B.COL_B1, B.COL_B2, ...</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_A A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  TABLE_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.COL_Z_A = B.COL_Z_B         <span class="comment">-- 조인의 기준이 되는 컬럼을 지정</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-3-inner-조인-실습"><a class="markdownIt-Anchor" href="#3-3-inner-조인-실습"></a> 3-3. INNER 조인 실습</h3>
<h4 id="3-3-1-basket-데이터를-활용한-간단한-실습"><a class="markdownIt-Anchor" href="#3-3-1-basket-데이터를-활용한-간단한-실습"></a> 3-3-1. BASKET 데이터를 활용한 간단한 실습</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>                  <span class="comment">-- 지정한 컬럼을 조회한다</span></span><br><span class="line">  A.ID ID_A,</span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID ID_B,</span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span>                    <span class="comment">-- BASKET_A 테이블에과 BASKET_B 테이블을</span></span><br><span class="line">  BASKET_A A            <span class="comment">-- FRUIT 컬럼 기준으로 조인한다.</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.FRUIT = B.FRUIT</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-1/image-20201111111333754.png" alt="image-20201111111333754"></p>
<br>
<h4 id="3-3-2-dvdrental-데이터를-활용한-실습"><a class="markdownIt-Anchor" href="#3-3-2-dvdrental-데이터를-활용한-실습"></a> 3-3-2. dvdrental 데이터를 활용한 실습</h4>
<h5 id="1-2개의-테이블-조인"><a class="markdownIt-Anchor" href="#1-2개의-테이블-조인"></a> (1) 2개의 테이블 조인</h5>
<p><strong>&gt;&gt; 테이블 구성</strong></p>
<img src="/images/S-SQL-Join-1/image-20201111112825354.png" alt="image-20201111112825354" style="zoom:80%;">
<ul>
<li>
<p>한 명의 고객은 여러 건의 결제내역을 가질 수 있다</p>
</li>
<li>
<p>하나의 결제는 반드시 고객을 가져야 한다</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; 실습</strong></p>
<p><strong>MISSION 1:</strong> CUSTOMER 테이블에 있는 고객 정보와 PAYMENT 테이블에 있는 결제정보를 종합하여 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.CUSTOMER_ID, A.FIRST_NAME,</span><br><span class="line">  A.LAST_NAME,   A.EMAIL,</span><br><span class="line">  B.AMOUNT,      B.PAYMENT_DATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PAYMENT B</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">  A.CUSTOMER_ID = B.CUSTOMER_ID</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-1/image-20201111114614830.png" alt="image-20201111114614830"></p>
<br>
<p><strong>MISSION 2:</strong>  위에서 추출된 데이터에서 CUSTOMER_ID가 2인 행만 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.CUSTOMER_ID, A.FIRST_NAME,</span><br><span class="line">  A.LAST_NAME,   A.EMAIL,</span><br><span class="line">  B.AMOUNT,      B.PAYMENT_DATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  PAYMENT B</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">  A.CUSTOMER_ID = B.CUSTOMER_ID</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  A.CUSTOMER_ID = <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-1/image-20201111125419551.png" alt="image-20201111125419551"></p>
<br>
<h5 id="2-3개의-테이블-조인"><a class="markdownIt-Anchor" href="#2-3개의-테이블-조인"></a> (2)  3개의 테이블 조인</h5>
<p><strong>&gt;&gt; 테이블 구성</strong></p>
<img src="/images/S-SQL-Join-1/image-20201111130320223.png" alt="image-20201111130320223" style="zoom:80%;">
<ul>
<li>한 명의 직원은 여러 건의 결제내역을 처리한다</li>
<li>하나의 결제는 반드시 처리한 직원이 존재한다</li>
<li>한 명의 고객은 여러 건의 결제내역을 가질 수 있다</li>
<li>하나의 결제는 반드시 고객을 가져야 한다</li>
</ul>
<br>
<p><strong>&gt;&gt; 실습</strong></p>
<p><strong>MISSION:</strong> 결제를 진행한 고객 정보(CUSTOMER), 해당 고객의 결제내역(PAYMENT), 그리고 해당 결제를 처리하는 직원정보(STAFF)를 종합하여 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.CUSTOMER_ID, A.FIRST_NAME,</span><br><span class="line">  A.LAST_NAME,   A.EMAIL,</span><br><span class="line">  B.AMOUNT,      B.PAYMENT_DATE,</span><br><span class="line">  C.FIRST_NAME <span class="keyword">AS</span> S_FIRST_NAME,</span><br><span class="line">  C.LAST_NAME <span class="keyword">AS</span> S_LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMER A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> PAYMENT B</span><br><span class="line">        <span class="keyword">ON</span> A.CUSTOMER_ID = B.CUSTOMER_ID</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> STAFF C</span><br><span class="line">        <span class="keyword">ON</span> B.STAFF_ID = C.STAFF_ID</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-1/image-20201111132315338.png" alt="image-20201111132315338"></p>
<br>
<br>
<h2 id="4-outer-조인"><a class="markdownIt-Anchor" href="#4-outer-조인"></a> <strong>4. OUTER 조인</strong></h2>
<h3 id="4-1-개념"><a class="markdownIt-Anchor" href="#4-1-개념"></a> 4-1. 개념</h3>
<p>특정 집합을 기준으로 매칭된 집합을 출력하지만, 한쪽의 집합은 모두 출력하고 다른 한쪽의 집합은 매칭되는 컬럼의 값 만을 출력한다.</p>
<img src="/images/S-SQL-Join-1/image-20201111133926396.png" alt="image-20201111133926396" style="zoom:50%;">
<img src="/images/S-SQL-Join-1/image-20201111134145555.png" alt="image-20201111134145555" style="zoom:50%;">
<br>
<h3 id="4-2-outer-조인-문법"><a class="markdownIt-Anchor" href="#4-2-outer-조인-문법"></a> 4-2. OUTER 조인 문법</h3>
<h4 id="1-left-outer-조인-문법"><a class="markdownIt-Anchor" href="#1-left-outer-조인-문법"></a> (1) LEFT OUTER 조인 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- LEFT OUTER JOIN</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.COL_A1, A.COL_A2, ...,</span><br><span class="line">  B.COL_B1, B.COL_B2, ...</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_A A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span>  <span class="comment">-- 'LEFT JOIN'만 사용해도 좋다</span></span><br><span class="line">  TABLE_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.COL_Z_A = B.COL_Z_B</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="2-right-outer-조인-문법"><a class="markdownIt-Anchor" href="#2-right-outer-조인-문법"></a> (2) RIGHT OUTER 조인 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- RIGHT OUTER JOIN</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.COL_A1, A.COL_A2, ...,</span><br><span class="line">  B.COL_B1, B.COL_B2, ...</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_A A</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span>  <span class="comment">-- 'RIGHT JOIN'만 사용해도 좋다</span></span><br><span class="line">  TABLE_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.COL_Z_A = B.COL_Z_B</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="4-3-outer-조인-실습"><a class="markdownIt-Anchor" href="#4-3-outer-조인-실습"></a> 4-3. OUTER 조인 실습</h3>
<img src="/images/S-SQL-Join-1/image-20201111141327969.png" alt="image-20201111141327969" style="zoom: 70%;">
<br>
<p><strong>&gt;&gt; LEFT OUTER JOIN</strong></p>
<p><strong>(1) LEFT ONLY + LEFT&amp;RIGHT</strong></p>
<img src="/images/S-SQL-Join-1/image-20201111144634389.png" alt="image-20201111144634389" style="zoom:50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.ID    ID_A, </span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID    ID_B, </span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BASKET_A A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">  A.FRUIT = B.FRUIT</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-1/image-20201111141611545.png" alt="image-20201111141611545" style="zoom:80%;">
<br>
<p><strong>(2) LEFT ONLY</strong></p>
<img src="/images/S-SQL-Join-1/image-20201111144750586.png" alt="image-20201111144750586" style="zoom:50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.ID    ID_A, </span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID    ID_B, </span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BASKET_A A</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">  A.FRUIT = B.FRUIT  </span><br><span class="line"><span class="keyword">WHERE</span> B.ID <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-1/image-20201111145103252.png" alt="image-20201111145103252" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; RIGHT OUTER JOIN</strong></p>
<p><strong>(1) RIGHT ONLY + LEFT&amp;RIGHT</strong></p>
<img src="/images/S-SQL-Join-1/image-20201111151323862.png" alt="image-20201111151323862" style="zoom:50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.ID ID_A, </span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID ID_B,</span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BASKET_A A</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span></span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span> A.FRUIT = B.FRUIT</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-1/image-20201111151622024.png" alt="image-20201111151622024" style="zoom:80%;">
<br>
<p><strong>(2) RIGHT ONLY</strong></p>
<img src="/images/S-SQL-Join-1/image-20201111151416027.png" alt="image-20201111151416027" style="zoom:50%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.ID ID_A, </span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID ID_B,</span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BASKET_A A</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span></span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span> A.FRUIT = B.FRUIT</span><br><span class="line"><span class="keyword">WHERE</span> A.ID <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-1/image-20201111151747625.png" alt="image-20201111151747625" style="zoom:80%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 3. Join</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Join</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 조인 (2)</title>
    <url>/2020/11/12/S-SQL-Join-2/</url>
    <content><![CDATA[<h1 id="조인-2"><a class="markdownIt-Anchor" href="#조인-2"></a> <strong>조인 (2)</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-self-%EC%A1%B0%EC%9D%B8"><strong>1. SELF 조인</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-self-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">1-2. SELF 조인 문법</a></li>
<li><a href="#1-3-self-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">1-3. SELF 조인 실습</a>
<ul>
<li><a href="#1-3-1-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">1-3-1. 실습 준비</a></li>
<li><a href="#1-3-2-self-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">1-3-2. SELF 조인 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-full-outer-%EC%A1%B0%EC%9D%B8"><strong>2. FULL OUTER 조인</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-full-outer-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">2-2. FULL OUTER 조인 문법</a></li>
<li><a href="#2-3-full-outer-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">2-3. FULL OUTER 조인 실습</a>
<ul>
<li><a href="#2-3-1-basket-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%8B%A4%EC%8A%B5">2-3-1. BASKET 데이터를 활용한 간단한 실습</a></li>
<li><a href="#2-3-2-%EC%B6%94%EA%B0%80-%EC%8B%A4%EC%8A%B5">2-3-2. 추가 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-cross-%EC%A1%B0%EC%9D%B8"><strong>3. CROSS 조인</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-cross-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">3-2. CROSS 조인 문법</a></li>
<li><a href="#3-3-cross-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">3-3. CROSS 조인 실습</a>
<ul>
<li><a href="#3-3-0-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">3-3-0. 실습 준비</a></li>
<li><a href="#3-3-1-cross-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">3-3-1. CROSS 조인 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-natural-%EC%A1%B0%EC%9D%B8"><strong>4. NATURAL 조인</strong></a>
<ul>
<li><a href="#4-1-%EA%B0%9C%EB%85%90">4-1. 개념</a></li>
<li><a href="#4-2-natural-%EC%A1%B0%EC%9D%B8-%EB%AC%B8%EB%B2%95">4-2. NATURAL 조인 문법</a></li>
<li><a href="#4-3-natural-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">4-3. NATURAL 조인 실습</a>
<ul>
<li><a href="#4-3-0-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">4-3-0. 실습 준비</a></li>
<li><a href="#4-3-1-natural-%EC%A1%B0%EC%9D%B8-%EC%8B%A4%EC%8A%B5">4-3-1. NATURAL 조인 실습</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-self-조인"><a class="markdownIt-Anchor" href="#1-self-조인"></a> <strong>1. SELF 조인</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>SELF 조인은 같은 테이블 끼리 특정 컬럼을 기준으로 매칭 되는 컬럼을 출력하는 조인이다.</p>
<p>즉, 같은 테이블의 데이터를 각각의 집합으로 분류한 후  조인한다.</p>
<br>
<h3 id="1-2-self-조인-문법"><a class="markdownIt-Anchor" href="#1-2-self-조인-문법"></a> 1-2. SELF 조인 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.COL_1, A.COL_2, ...,</span><br><span class="line">  B.COL_1, B.COL_3, ...</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME <span class="keyword">AS</span> A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  TABLE_NAME <span class="keyword">AS</span> B    <span class="comment">-- THE SAME TABLE WITH THE FORMER</span></span><br><span class="line"><span class="keyword">ON</span> A.COL_T = B.COL_T</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-3-self-조인-실습"><a class="markdownIt-Anchor" href="#1-3-self-조인-실습"></a> 1-3. SELF 조인 실습</h3>
<h4 id="1-3-1-실습-준비"><a class="markdownIt-Anchor" href="#1-3-1-실습-준비"></a> 1-3-1. 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMPLOYEE</span><br><span class="line">(</span><br><span class="line">    EMPLOYEE_ID <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    FIRST_NAME <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    LAST_NAME <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    MANAGER_ID <span class="built_in">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (MANAGER_ID)               <span class="comment">-- MANAGER_ID는 같은 테이블 (EMPLOYEE)의 EMPLOYEE_ID를 참조함</span></span><br><span class="line">    <span class="keyword">REFERENCES</span> EMPLOYEE (EMPLOYEE_ID)</span><br><span class="line">    <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMPLOYEE (</span><br><span class="line">    EMPLOTEE_ID,</span><br><span class="line">    FIRST_NAME,</span><br><span class="line">    LAST_NAME,</span><br><span class="line">    MANAGER_ID</span><br><span class="line">)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'Windy'</span>, <span class="string">'Hays'</span>, <span class="literal">NULL</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'Ava'</span>, <span class="string">'Christensen'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">'Hassan'</span>, <span class="string">'Conner'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">'Anna'</span>, <span class="string">'Reeves'</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">'Sau'</span>, <span class="string">'Norman'</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="number">6</span>, <span class="string">'Kelsie'</span>, <span class="string">'Hays'</span>, <span class="number">3</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="string">'Tory'</span>, <span class="string">'Goff'</span>, <span class="number">3</span>),</span><br><span class="line">(<span class="number">8</span>, <span class="string">'Salley'</span>, <span class="string">'Lester'</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> EMPLOYEE</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111155046250.png" alt="image-20201111155046250" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 조직도</strong></p>
<img src="/images/S-SQL-Join-2/image-20201111155421168.png" alt="image-20201111155421168" style="zoom: 67%;">
<br>
<h4 id="1-3-2-self-조인-실습"><a class="markdownIt-Anchor" href="#1-3-2-self-조인-실습"></a> 1-3-2. SELF 조인 실습</h4>
<p><strong>&gt;&gt; SELF INNER 조인 실습</strong></p>
<p><strong>MISSION:</strong></p>
<ul>
<li>각 직원의 상위 관리자를 출력</li>
<li>최고관리자인 'Windy Hays’는 결과 집합에 포함시키지 않음.</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  E.FIRST_NAME || <span class="string">' '</span> || E.LAST_NAME <span class="keyword">AS</span> EMPLOYEE,</span><br><span class="line">  M.FIRST_NAME || <span class="string">' '</span> || M.LAST_NAME <span class="keyword">AS</span> MANAGER</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  EMPLOYEE E  <span class="comment">-- EMPLOYEE 중심</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  EMPLOYEE M  <span class="comment">-- MANAGER 중심</span></span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  E.MANAGER_ID = M.EMPLOYEE_ID   <span class="comment">-- 매칭 시 헷갈리지 않도록 주의</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  MANAGER</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111162640186.png" alt="image-20201111162640186" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; SELF LEFT OUTER 조인 실습</strong></p>
<p><strong>MISSION:</strong></p>
<ul>
<li>각 직원의 상위 관리자를 출력하면서 모든 직원을 출력</li>
<li>최고관리자인 'Windy Hays’가 결과 집합에 포함시킴</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  E.FIRST_NAME || <span class="string">' '</span> || E.LAST_NAME <span class="keyword">AS</span> EMPLOYEE,</span><br><span class="line">  M.FIRST_NAME || <span class="string">' '</span> || M.LAST_NAME <span class="keyword">AS</span> MANAGER</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  EMPLOYEE E</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">  EMPLOYEE M</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  E.MANAGER_ID = M.EMPLOYEE_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  MANAGER</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111163954892.png" alt="image-20201111163954892" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 부정형 조건 실습</strong></p>
<p><strong>MISSION:</strong> FILM 테이블에서 영화의 상영시간이 동일한 서로 다른 영화의 리스트를 출력</p>
<table>
<thead>
<tr>
<th style="text-align:center">film</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">*film_id <br>title <br>discription <br>release_year <br>language_id <br>rentall_duration <br>rental_rate <br>length <br>replacement_cost <br>rating <br>last_update <br>special_features <br>fulltext</td>
</tr>
</tbody>
</table>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.TITLE,</span><br><span class="line">  B.TITLE,</span><br><span class="line">  A.LENGTH</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  FILM A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  FILM B</span><br><span class="line"><span class="keyword">ON</span> A.FILM_ID != B.FILM_ID <span class="keyword">AND</span></span><br><span class="line">   A.LENGTH = B.LENGTH</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111183444264.png" alt="image-20201111183444264" style="zoom:80%;">
<br>
<br>
<h2 id="2-full-outer-조인"><a class="markdownIt-Anchor" href="#2-full-outer-조인"></a> <strong>2. FULL OUTER 조인</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>FULL OUTER 조인은 INNER, LEFT OUTER, RIGHT OUTER 조인 집합을 모두 출력하는 조인 방식이다.</p>
<p>즉, 두 테이블간 출력가능한 모든 데이터를 포함한 집합을 출력한다.</p>
<img src="/images/S-SQL-Join-2/image-20201111192014271.png" alt="image-20201111192014271" style="zoom:50%;">
<br>
<h3 id="2-2-full-outer-조인-문법"><a class="markdownIt-Anchor" href="#2-2-full-outer-조인-문법"></a> 2-2. FULL OUTER 조인 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.COL_A1, A.COL_A2, ...,</span><br><span class="line">  B.COL_B1, B.COL_B2, ...</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_A A</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span>  </span><br><span class="line">  TABLE_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.COL_Z_A = B.COL_Z_B</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-full-outer-조인-실습"><a class="markdownIt-Anchor" href="#2-3-full-outer-조인-실습"></a> 2-3. FULL OUTER 조인 실습</h3>
<h4 id="2-3-1-basket-데이터를-활용한-간단한-실습"><a class="markdownIt-Anchor" href="#2-3-1-basket-데이터를-활용한-간단한-실습"></a> 2-3-1. BASKET 데이터를 활용한 간단한 실습</h4>
<img src="/images/S-SQL-Join-2/image-20201111141327969.png" alt="image-20201111141327969" style="zoom: 67%;">
<br>
<p><strong>&gt;&gt; FULL OUTER JOIN</strong></p>
<p><strong>(1) LEFT ONLY + LEFT&amp;RIGHT + RIGHT ONLY</strong></p>
<img src="/images/S-SQL-Join-2/image-20201111193914893.png" alt="image-20201111193914893" style="zoom:50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  A.ID ID_A,</span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID ID_B,</span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BASKET_A A</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.FRUIT = B.FRUIT</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111193119708.png" alt="image-20201111193119708" style="zoom:80%;">
<br>
<p><strong>(2) ONLY OUTER (LEFT ONLY + RIGHT ONLY)</strong></p>
<img src="/images/S-SQL-Join-2/image-20201111194125768.png" alt="image-20201111194125768" style="zoom:50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  A.ID ID_A,</span><br><span class="line">  A.FRUIT FRUIT_A,</span><br><span class="line">  B.ID ID_B,</span><br><span class="line">  B.FRUIT FRUIT_B</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BASKET_A A</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">  BASKET_B B</span><br><span class="line"><span class="keyword">ON</span> </span><br><span class="line">  A.FRUIT = B.FRUIT </span><br><span class="line"><span class="keyword">WHERE</span> A.ID <span class="keyword">IS</span> <span class="literal">NULL</span>    <span class="comment">-- LEFT OUTER</span></span><br><span class="line">   <span class="keyword">OR</span> B.ID <span class="keyword">IS</span> <span class="literal">NULL</span>    <span class="comment">-- RIGHT OUTER</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111194613680.png" alt="image-20201111194613680" style="zoom:80%;">
<br>
<h4 id="2-3-2-추가-실습"><a class="markdownIt-Anchor" href="#2-3-2-추가-실습"></a> 2-3-2. 추가 실습</h4>
<p><strong>&gt;&gt; 실습 준비</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> DEPARTMENTS    <span class="comment">-- 종재하지 않으면 생성</span></span><br><span class="line">(</span><br><span class="line">  DEPARTMENT_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  DEPARTMENT_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> EMPLOYEES</span><br><span class="line">(</span><br><span class="line">  EMPLOYEE_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  EMPLOYEE_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>),</span><br><span class="line">  DEPARTMENT_ID <span class="built_in">INTEGER</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> DEPARTMENTS(DEPARTMENT_NAME)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'Sales'</span>),</span><br><span class="line">(<span class="string">'Marketing'</span>),</span><br><span class="line">(<span class="string">'HR'</span>),</span><br><span class="line">(<span class="string">'IT'</span>),</span><br><span class="line">(<span class="string">'Production'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMPLOYEES(</span><br><span class="line">  EMPLOYEE_NAME,</span><br><span class="line">  DEPARTMENT_ID</span><br><span class="line">)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'Bette Nicholson'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">'Christian Gable'</span>, <span class="number">1</span>),</span><br><span class="line">(<span class="string">'Joe Swank'</span>, <span class="number">2</span>),</span><br><span class="line">(<span class="string">'Fred Costner'</span>, <span class="number">3</span>),</span><br><span class="line">(<span class="string">'Sandra Kilmer'</span>, <span class="number">4</span>),</span><br><span class="line">(<span class="string">'Julia Mcqueen'</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DEPARTMENTS;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111200237831.png" alt="image-20201111200237831" style="zoom:80%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> EMPLOYEES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111200326518.png" alt="image-20201111200326518" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; FULL OUTER JOIN 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  E.EMPLOYEE_NAME,</span><br><span class="line">  D.DEPARTMENT_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  EMPLOYEES E</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">  DEPARTMENTS D</span><br><span class="line"><span class="keyword">ON</span> E.DEPARTMENT_ID = D.DEPARTMENT_ID</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111201327463.png" alt="image-20201111201327463" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; RIGHT OUTER ONLY 실습</strong></p>
<img src="/images/S-SQL-Join-2/image-20201111202627226.png" alt="image-20201111202627226" style="zoom:50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 소속한 직원이 없는 부서만 출력</span></span><br><span class="line"><span class="comment">-- FULL OUTER + RIGHT ONLY</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  E.EMPLOYEE_NAME,</span><br><span class="line">  D.DEPARTMENT_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  EMPLOYEES E</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">  DEPARTMENTS D</span><br><span class="line"><span class="keyword">ON</span> E.DEPARTMENT_ID = D.DEPARTMENT_ID</span><br><span class="line"><span class="keyword">WHERE</span> E.EMPLOYEE_NAME <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201111202501663.png" alt="image-20201111202501663">
<br>
<p><strong>[P.S.]</strong> FULL OUTER JOIN+ RIGHT ONLY = RIGHT OUTER JOIN+ RIGHT ONLY</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- RIGHT OUTER + RIGHT ONLY</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  E.EMPLOYEE_NAME,</span><br><span class="line">  D.DEPARTMENT_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  EMPLOYEES E</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  DEPARTMENTS D</span><br><span class="line"><span class="keyword">ON</span> E.DEPARTMENT_ID = D.DEPARTMENT_ID</span><br><span class="line"><span class="keyword">WHERE</span> E.EMPLOYEE_NAME <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-2/image-20201111202503508.png" alt="image-20201111202503508"></p>
<br>
<p><strong>&gt;&gt; LEFT OUTER ONLY 실습</strong></p>
<img src="/images/S-SQL-Join-2/image-20201111202802778.png" alt="image-20201111202802778" style="zoom: 50%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 소속한 부서가 없는 직원만 출력</span></span><br><span class="line"><span class="comment">-- FULL OUTER + LEFT ONLY</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  E.EMPLOYEE_NAME,</span><br><span class="line">  D.DEPARTMENT_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  EMPLOYEES E</span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">  DEPARTMENTS D</span><br><span class="line"><span class="keyword">ON</span> E.DEPARTMENT_ID = D.DEPARTMENT_ID</span><br><span class="line"><span class="keyword">WHERE</span> D.DEPARTMENT_NAME <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-2/image-20201111203302334.png" alt="image-20201111203302334"></p>
<br>
<p><strong>[P.S.]</strong> FULL OUTER JOIN+ LEFT ONLY = LEFT OUTER JOIN+ LEFT ONLY</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- LEFT OUTER + LEFT ONLY</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  E.EMPLOYEE_NAME,</span><br><span class="line">  D.DEPARTMENT_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  EMPLOYEES E</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  DEPARTMENTS D</span><br><span class="line"><span class="keyword">ON</span> E.DEPARTMENT_ID = D.DEPARTMENT_ID</span><br><span class="line"><span class="keyword">WHERE</span> D.DEPARTMENT_NAME <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-2/image-20201111203302334.png" alt="image-20201111203302334"></p>
<br>
<br>
<h2 id="3-cross-조인"><a class="markdownIt-Anchor" href="#3-cross-조인"></a> <strong>3. CROSS 조인</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>두 개의 테이블의 CATESIAN PRODUCT 연산의 결과를 출력한다. 데이터 복제에 많이 쓰이는 기법이다.</p>
<ul>
<li>
<p>CATESIAN  PRODUCT:</p>
<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Cartesian_Product_qtl1.svg/1200px-Cartesian_Product_qtl1.svg.png" alt="CARTESIAN PRODUCT" style="zoom: 25%;">
</li>
</ul>
<br>
<h3 id="3-2-cross-조인-문법"><a class="markdownIt-Anchor" href="#3-2-cross-조인-문법"></a> 3-2. CROSS 조인 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CROSS_TABLE_1</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span></span><br><span class="line">  CROSS_TABLE_2</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-3-cross-조인-실습"><a class="markdownIt-Anchor" href="#3-3-cross-조인-실습"></a> 3-3. CROSS 조인 실습</h3>
<h4 id="3-3-0-실습-준비"><a class="markdownIt-Anchor" href="#3-3-0-실습-준비"></a> 3-3-0. 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CROSS_T1</span><br><span class="line">(</span><br><span class="line">  LABEL <span class="built_in">CHAR</span>(<span class="number">1</span>) PRIMARY <span class="keyword">KEY</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CROSS_T2</span><br><span class="line">(</span><br><span class="line">  SCORE <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CROSS_T1 (LABEL)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'A'</span>),</span><br><span class="line">(<span class="string">'B'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CROSS_T2 (SCORE)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>),</span><br><span class="line">(<span class="number">2</span>),</span><br><span class="line">(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CROSS_T1</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-2/image-20201112090311812.png" alt="image-20201112090311812"></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CROSS_T2</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-2/image-20201112090405111.png" alt="image-20201112090405111"></p>
<br>
<h4 id="3-3-1-cross-조인-실습"><a class="markdownIt-Anchor" href="#3-3-1-cross-조인-실습"></a> 3-3-1. CROSS 조인 실습</h4>
<img src="/images/S-SQL-Join-2/image-20201112091802546.png" alt="image-20201112091802546" style="zoom: 67%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 방법 1</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CROSS_T1</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span></span><br><span class="line">  CROSS_T2</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  LABEL</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201112091538328.png" alt="image-20201112091538328" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 방법 2</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CROSS_T1, CROSS_T2   <span class="comment">-- INNER JOIN을 표현하는 다른 방법 (조건 없는 INNER JOIN)</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  LABEL</span><br></pre></td></tr></tbody></table></figure>
<br>
<ul>
<li>
<p>위 두 개의 SQL 문 결과 집합이 동일하므로 같은 SQL문이라고 할 수 있다. SQL문의 목적은 집합을 출력하는 것이 때문이다.</p>
<p>즉, 추출한 정보가 같다면 SQL문 자체는 다르더라도 동일한 SQL 문이다.</p>
</li>
</ul>
<br>
<br>
<h2 id="4-natural-조인"><a class="markdownIt-Anchor" href="#4-natural-조인"></a> <strong>4. NATURAL 조인</strong></h2>
<h3 id="4-1-개념"><a class="markdownIt-Anchor" href="#4-1-개념"></a> 4-1. 개념</h3>
<p>두개의 테이블에서 같은 이름을 가진 컬럼 간의 INNER 조인 집합 결과를 출력한다. SQL문 자체가 간소해지는 방법이다.</p>
<br>
<h3 id="4-2-natural-조인-문법"><a class="markdownIt-Anchor" href="#4-2-natural-조인-문법"></a> 4-2. NATURAL 조인 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_A</span><br><span class="line"><span class="keyword">NATURAL</span> <span class="keyword">JOIN</span>    <span class="comment">-- 자동으로 두 테이블이 동일하게 가지고 있는 컬럼을 기준으로 INNER 조인한다</span></span><br><span class="line">  TABLE_B</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>
<p>NATURAL 조인은 INNER 조인의 또 다른 SQL 작성 방식이다.</p>
<p>즉, 조인 컬럼을 명시하지 않아도 된다.</p>
</li>
</ul>
<br>
<h3 id="4-3-natural-조인-실습"><a class="markdownIt-Anchor" href="#4-3-natural-조인-실습"></a> 4-3. NATURAL 조인 실습</h3>
<h4 id="4-3-0-실습-준비"><a class="markdownIt-Anchor" href="#4-3-0-실습-준비"></a> 4-3-0. 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CATEGORIES</span><br><span class="line">(</span><br><span class="line">  CATEGORY_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  CATEGORY_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> PRODUCTS</span><br><span class="line">(</span><br><span class="line">  PRODUCT_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  PRODUCT_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  CATEGORY_ID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (CATEGORY_ID)</span><br><span class="line">  <span class="keyword">REFERENCES</span> CATEGORIES (CATEGORY_ID)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CATEGORIES</span><br><span class="line">(CATEGORY_NAME)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'Smart Phone'</span>),</span><br><span class="line">  (<span class="string">'Laptop'</span>),</span><br><span class="line">  (<span class="string">'Tablet'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> PRODUCTS</span><br><span class="line">(PRODUCT_NAME, CATEGORY_ID)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'iPhone'</span>, <span class="number">1</span>),</span><br><span class="line">  (<span class="string">'Samsung Galaxy'</span>, <span class="number">1</span>),</span><br><span class="line">  (<span class="string">'HP Elite'</span>, <span class="number">2</span>),</span><br><span class="line">  (<span class="string">'Lenovo Thinkpad'</span>, <span class="number">2</span>),</span><br><span class="line">  (<span class="string">'iPad'</span>, <span class="number">3</span>),</span><br><span class="line">  (<span class="string">'Kindle Fire'</span>, <span class="number">3</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CATEGORIES;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201112113447690.png" alt="image-20201112113447690" style="zoom:80%;">
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCTS;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201112113548016.png" alt="image-20201112113548016" style="zoom:80%;">
<br>
<h4 id="4-3-1-natural-조인-실습"><a class="markdownIt-Anchor" href="#4-3-1-natural-조인-실습"></a> 4-3-1. NATURAL 조인 실습</h4>
<p><strong>(1) 예제 데이터를 활용한 간단한 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PRODUCTS A</span><br><span class="line"><span class="keyword">NATURAL</span> <span class="keyword">JOIN</span></span><br><span class="line">  CATEGORIES B;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201112114726576.png" alt="image-20201112114726576" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 대체 방법 1</span></span><br><span class="line"><span class="comment">-- INNER JOIN으로 실현</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  P.CATEGORY_ID,  P.PRODUCT_ID,</span><br><span class="line">  P.PRODUCT_NAME, C.CATEGORY_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PRODUCTS P</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  CATEGORIES C</span><br><span class="line"><span class="keyword">ON</span> P.CATEGORY_ID = C.CATEGORY_ID;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 대체 방법 2  (INNER JOIN 대체 명령어)</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  P.CATEGORY_ID,  P.PRODUCT_ID,</span><br><span class="line">  P.PRODUCT_NAME, C.CATEGORY_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PRODUCTS P,</span><br><span class="line">  CATEGORIES C</span><br><span class="line"><span class="keyword">WHERE</span> P.CATEGORY_ID = C.CATEGORY_ID;</span><br></pre></td></tr></tbody></table></figure>
<br>
<img src="/images/S-SQL-Join-2/image-20201112114726576.png" alt="image-20201112114726576" style="zoom:80%;">
<br>
<p><strong>(2) “dvdrental” 데이터를 활용한 실습</strong></p>
<p><strong>&gt;&gt; 테이블 구성</strong></p>
<img src="/images/S-SQL-Join-2/image-20201112135034156.png" alt="image-20201112135034156" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 실습</strong></p>
<p>두 테이블이 모두 “country_id”  컬럼이 존재한다.</p>
<p>이 두 테이블에 대해서 NATURAL JOIN을 진행해보면:</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CITY A</span><br><span class="line"><span class="keyword">NATURAL</span> <span class="keyword">JOIN</span></span><br><span class="line">  COUNTRY B;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Join-2/image-20201112135747118.png" alt="image-20201112135747118" style="zoom:80%;">
<br>
<p>기대와 다르게 출력 결과가 0건이다.</p>
<br>
<p>그 이유는:</p>
<p>두 테이블 간에 동일한 이름으로 존재하는 컬럼이 COUNTRY_ID 외에 LAST_UPDATE 도 존재한다.  이런 경우 NATURAL JOIN 시에는 <strong>LAST_UPDATE 컬럼까지 INNER조인에 성공해야만</strong> 결과값이 나온다.  하지만 두 테이블의 LAST_UPDATE 값이 서로 다르므로 위 SQL문을 실행 후 조건에 만족하는 결과가 없다.</p>
<br>
<p>따라서 NATURAL 조인이 아닌 INNER 조인을 이용해야한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CITY A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  COUNTRY B</span><br><span class="line"><span class="keyword">ON</span> A.COUNTRY_ID = B.COUNTRY_ID;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Join-2/image-20201112142508575.png" alt="image-20201112142508575"></p>
<p>INNER 조인으로 ON절에 조인 컬럼을 명시하였고, 의도한 대로 데이터가 출력되었다.</p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- INNER JOIN 대체 명령어</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CITY A,</span><br><span class="line">  COUNTRY B</span><br><span class="line"><span class="keyword">WHERE</span> A.COUNTRY_ID = B.COUNTRY_ID;</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>이러한 이유로 NATURAL 조인은 실무에 잘 사용되지 않는다.</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 3. Join</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Join</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 데이터 조작 (1)</title>
    <url>/2020/12/07/S-SQL-Manipulation-1/</url>
    <content><![CDATA[<h1 id="데이터-조작-1"><a class="markdownIt-Anchor" href="#데이터-조작-1"></a> 데이터 조작 (1)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-insert-%EB%AC%B8"><strong>1. INSERT 문</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-insert-%EB%AC%B8%EB%B2%95">1-2. INSERT 문법</a></li>
<li><a href="#1-3-insert-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">1-3. INSERT 문 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">&gt;&gt; 실습 준비</a></li>
<li><a href="#insert-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">&gt;&gt; INSERT 문 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-update-%EB%AC%B8"><strong>2. UPDATE 문</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-update-%EB%AC%B8%EB%B2%95">2-2. UPDATE 문법</a></li>
<li><a href="#2-3-update-%EC%8B%A4%EC%8A%B5">2-3. UPDATE 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-2">&gt;&gt; 실습 준비</a></li>
<li><a href="#update-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">&gt;&gt; UPDATE 문 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-update-join-%EB%AC%B8"><strong>3. UPDATE JOIN 문</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-update-join-%EB%AC%B8%EB%B2%95">3-2. UPDATE JOIN 문법</a></li>
<li><a href="#3-3-update-join-%EC%8B%A4%EC%8A%B5">3-3. UPDATE JOIN 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-3">&gt;&gt; 실습 준비</a></li>
<li><a href="#update-join-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">&gt;&gt; UPDATE JOIN 문 실습</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-insert-문"><a class="markdownIt-Anchor" href="#1-insert-문"></a> <strong>1. INSERT 문</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>INSERT는 테이블이 만들어지면 데이블 안에 데이터를 추가하는 명령어이다.</p>
<br>
<h3 id="1-2-insert-문법"><a class="markdownIt-Anchor" href="#1-2-insert-문법"></a> 1-2. INSERT 문법</h3>
<p><strong>&gt;&gt; 1) 테이블의 컬럼 순서대로 입력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">  TABLE_NAME      <span class="comment">-- INSERT할 테이블 지정</span></span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(</span><br><span class="line">  VALUE1,         <span class="comment">-- 각 컬럼 값을 입력한다</span></span><br><span class="line">  VALUE2,</span><br><span class="line">  VALUE3,</span><br><span class="line">  ...</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<p><strong>&gt;&gt; 2) 테이블 컬럼 지정</strong>  (더 많이 쓰임. 컬럼 명을 명시해주기 때문에 유지보수에 용이함)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">   TABLE_NAME</span><br><span class="line">   (</span><br><span class="line">    COLUMN_1,</span><br><span class="line">    COLUMN_2</span><br><span class="line">   )</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(</span><br><span class="line">  VALUE1,</span><br><span class="line">  VALUE2</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-3-insert-문-실습"><a class="markdownIt-Anchor" href="#1-3-insert-문-실습"></a> 1-3. INSERT 문 실습</h3>
<h4 id="실습-준비"><a class="markdownIt-Anchor" href="#실습-준비"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- LINK라는 테이블을 생성함</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">LINK</span> (</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">URL</span> <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  DESCRIPTION <span class="built_in">VARCHAR</span> (<span class="number">255</span>),</span><br><span class="line">  REL <span class="built_in">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="insert-문-실습"><a class="markdownIt-Anchor" href="#insert-문-실습"></a> &gt;&gt; INSERT 문 실습</h4>
<p><strong>(1) 1개 ROW 입력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">   <span class="keyword">LINK</span> (<span class="keyword">URL</span>, <span class="keyword">NAME</span>)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'http://naver.com'</span>, <span class="string">'Naver'</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201203111802507.png" alt="image-20201203111802507">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 내용 안에 작은 따움표를 추가하고 싶으면 작은 따움표 두개(''##'')를 더 추가해주면 됨. </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">   <span class="keyword">LINK</span> (<span class="keyword">URL</span>, <span class="keyword">NAME</span>)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'''http://naver.com'''</span>, <span class="string">'Naver'</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> FILM;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Manipulation-1/image-20201203113353940.png" alt="image-20201203113353940"></p>
<br>
<br>
<p><strong>(2) 동시에 N개 ROW 입력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">   <span class="keyword">LINK</span> (<span class="keyword">URL</span>, <span class="keyword">NAME</span>)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line"> (<span class="string">'http://www.google.com'</span>, <span class="string">'Google'</span>),</span><br><span class="line"> (<span class="string">'http://www.bing.com'</span>, <span class="string">'Bing'</span>),</span><br><span class="line"> (<span class="string">'http://www.baidu.com'</span>, <span class="string">'BaiDu'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201203135135326.png" alt="image-20201203135135326" style="zoom:80%;">
<br>
<br>
<p><strong>(3) 테이블 프레임에 테이블을 입력</strong></p>
<p>&gt;  LINK 테이블의 스키마(껍데기)만 가져와서 LINK_TMP 테이블을 생성한다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> LINK_TMP <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">0</span> = <span class="number">1</span>;      <span class="comment">-- LINK_TMP 테이블의 구조는 LINK와 같고 데이터는 0건이 된다.</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">       LINK_TMP</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINK_TMP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201203135135326.png" alt="image-20201203135135326" style="zoom:80%;">
<br>
<br>
<h2 id="2-update-문"><a class="markdownIt-Anchor" href="#2-update-문"></a> <strong>2. UPDATE 문</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>UPDATE 문은 테이블에 존재하는 데이터를 수정하는 작업이다. 업무를 처리하는데 필수적인 것이며 동시성에 유의해야 한다.</p>
<ul>
<li>UPDATE는 대상 행에 대해서 락(LOCK)을 잡는다.</li>
<li>락(LOCK)이란 다른 사용자는 해당 행에 대해서 작업을 하지 못한다는 것이다. (대기하게 됨)</li>
<li>즉 UPDATE를 한 후 재빨리 COMMIT을 하지 않는다면 RDBMS의 동시성이 낮아진다.</li>
</ul>
<br>
<h3 id="2-2-update-문법"><a class="markdownIt-Anchor" href="#2-2-update-문법"></a> 2-2. UPDATE 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line">  TABLE_NAME           <span class="comment">-- UPDATE할 테이블 지정</span></span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">  COLUMN_1 = VALUE1,   <span class="comment">-- 수정할 컬럼 및 값 입력</span></span><br><span class="line">  COLUMN_2 = VALUE2</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  조건;                 <span class="comment">-- 대상 조건</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-update-실습"><a class="markdownIt-Anchor" href="#2-3-update-실습"></a> 2-3. UPDATE 실습</h3>
<h4 id="실습-준비-2"><a class="markdownIt-Anchor" href="#실습-준비-2"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">LINK</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> LAST_UPDATE <span class="built_in">DATE</span>;    <span class="comment">-- LINK테이블에 LAST_UPDATE컬럼을 추가</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">LINK</span> <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> LAST_UPDATE <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_DATE</span>;  <span class="comment">-- LAST_UPDATE 컬럼의 기본값을 현재시간으로 함</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201203160947571.png" alt="image-20201203160947571" style="zoom:80%;">
<br>
<br>
<h4 id="update-문-실습"><a class="markdownIt-Anchor" href="#update-문-실습"></a> &gt;&gt; UPDATE 문 실습</h4>
<p><strong>(1) 지정 범위 수정</strong> (WHERE절)</p>
<p><strong>[MISSION]</strong>  LAST_UPDATE 컬럼의 값을 지정한 DEFAULT값으로 UPDATE하기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">LINK</span></span><br><span class="line">   <span class="keyword">SET</span> LAST_UPDATE = <span class="keyword">DEFAULT</span></span><br><span class="line"> <span class="keyword">WHERE</span> LAST_UPDATE <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201203171411659.png" alt="image-20201203171411659" style="zoom:80%;">
<br>
<br>
<p><strong>(2) 전체 테이블 수정</strong></p>
<p><strong>[MISSION]</strong>  REL컬럼의 값을 'NO DATA’로 수정하기</p>
<ul>
<li>이 기능은 조심해서 사용 필요.</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">LINK</span></span><br><span class="line">   <span class="keyword">SET</span> REL = <span class="string">'NO DATA'</span>;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201203172450557.png" alt="image-20201203172450557" style="zoom:80%;">
<br>
<br>
<p><strong>(3) 전체 테이블 수정 – 특정 컬럼을 이용</strong></p>
<p><strong>[MISSION]</strong>  DESCRIPTION 컬럼을 NAME 컬럼의 값으로 채우기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">LINK</span></span><br><span class="line">   <span class="keyword">SET</span> DESCRIPTION = <span class="keyword">NAME</span>;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201204092744650.png" alt="image-20201204092744650" style="zoom:80%;">
<br>
<br>
<h2 id="3-update-join-문"><a class="markdownIt-Anchor" href="#3-update-join-문"></a> <strong>3. UPDATE JOIN 문</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>UPDATA 시 다른 테이블의 내용을 참조하고 싶을 때 UPDATE JOIN 문을 사용한다. 복잡한 업무를 처리하는데 매우 유용한 방법이다.</p>
<br>
<h3 id="3-2-update-join-문법"><a class="markdownIt-Anchor" href="#3-2-update-join-문법"></a> 3-2. UPDATE JOIN 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line">       TARGET_TABLE A              <span class="comment">-- UPDATE할 테이블 지정</span></span><br><span class="line">   <span class="keyword">SET</span> A.COLUMN_1 = 표현식          <span class="comment">-- 특정 컬럼 UPDATE</span></span><br><span class="line">  <span class="keyword">FROM</span> REF_TABLE B                 <span class="comment">-- 참조 테이블 지정</span></span><br><span class="line"> <span class="keyword">WHERE</span> A.COLUMN_1 = B.COLUMN_1;    <span class="comment">-- 조인 조건</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-3-update-join-실습"><a class="markdownIt-Anchor" href="#3-3-update-join-실습"></a> 3-3. UPDATE JOIN 실습</h3>
<h4 id="실습-준비-3"><a class="markdownIt-Anchor" href="#실습-준비-3"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> PRODUCT_SEGMENT</span><br><span class="line">(</span><br><span class="line"> <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"> <span class="keyword">SEGMENT</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"> DISCOUNT <span class="built_in">NUMERIC</span> (<span class="number">4</span>, <span class="number">2</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> PRODUCT_SEGMENT</span><br><span class="line">(<span class="keyword">SEGMENT</span>, DISCOUNT)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">   (<span class="string">'Grand Luxury'</span>, <span class="number">0.05</span>),</span><br><span class="line">   (<span class="string">'Luxury'</span>, <span class="number">0.06</span>),</span><br><span class="line">   (<span class="string">'Mass'</span>, <span class="number">0.1</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> PRODUCT</span><br><span class="line">(</span><br><span class="line"> <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"> <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"> PRICE <span class="built_in">NUMERIC</span>(<span class="number">10</span>, <span class="number">2</span>),          <span class="comment">-- 정가</span></span><br><span class="line"> NET_PRICE <span class="built_in">NUMERIC</span>(<span class="number">10</span>, <span class="number">2</span>),      <span class="comment">-- 할인가 (실 판매가)</span></span><br><span class="line"> SEGMENT_ID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span>(SEGMENT_ID)</span><br><span class="line"> <span class="keyword">REFERENCES</span> PRODUCT_SEGMENT(<span class="keyword">ID</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> PRODUCT (<span class="keyword">NAME</span>, PRICE, SEGMENT_ID)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">	(<span class="string">'K5'</span>, <span class="number">804.89</span>, <span class="number">1</span>),</span><br><span class="line">  	(<span class="string">'K7'</span>, <span class="number">228.55</span>, <span class="number">3</span>),</span><br><span class="line">  	(<span class="string">'K9'</span>, <span class="number">366.45</span>, <span class="number">2</span>),</span><br><span class="line"> 	(<span class="string">'SONATA'</span>, <span class="number">145.33</span>, <span class="number">3</span>),</span><br><span class="line"> 	(<span class="string">'SPARK'</span>, <span class="number">551.77</span>, <span class="number">2</span>),</span><br><span class="line"> 	(<span class="string">'AVANTE'</span>, <span class="number">261.58</span>, <span class="number">3</span>),</span><br><span class="line"> 	(<span class="string">'LOZTE'</span>, <span class="number">519.62</span>, <span class="number">2</span>),</span><br><span class="line"> 	(<span class="string">'SANTAFE'</span>, <span class="number">843.31</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'TUSON'</span>, <span class="number">254.18</span>, <span class="number">3</span>),</span><br><span class="line"> 	(<span class="string">'TRAX'</span>, <span class="number">427.78</span>, <span class="number">2</span>),</span><br><span class="line"> 	(<span class="string">'ORANDO'</span>, <span class="number">936.29</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'RAY'</span>, <span class="number">910.34</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'MORNING'</span>, <span class="number">208.33</span>, <span class="number">3</span>),</span><br><span class="line"> 	(<span class="string">'VERNA'</span>, <span class="number">985.45</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'K8'</span>, <span class="number">841.26</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'TICO'</span>, <span class="number">896.38</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'MATIZ'</span>, <span class="number">575.74</span>, <span class="number">2</span>),</span><br><span class="line"> 	(<span class="string">'SPORTAGE'</span>, <span class="number">530.64</span>, <span class="number">2</span>),</span><br><span class="line"> 	(<span class="string">'ACCENT'</span>, <span class="number">892.43</span>, <span class="number">1</span>),</span><br><span class="line"> 	(<span class="string">'TOSCA'</span>, <span class="number">161.71</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Manipulation-1/image-20201204103115223.png" alt="image-20201204103115223"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT_SEGMENT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201204103657029.png" alt="image-20201204103657029" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201204103747274.png" alt="image-20201204103747274" style="zoom:80%;">
<br>
<br>
<h4 id="update-join-문-실습"><a class="markdownIt-Anchor" href="#update-join-문-실습"></a> &gt;&gt; UPDATE JOIN 문 실습</h4>
<p><strong>[MISSION]</strong>  PRODUCT_SEGMENT 테이블에 있는 할인율(DISCOUNT) 정보를 이용해서 PRODUCT 테이블의 NET_PRICE (할인가 / 실 판매가)를 계산하여 채우기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> PRODUCT A</span><br><span class="line">   <span class="keyword">SET</span> NET_PRICE = A.PRICE * (<span class="number">1</span> - B.DISCOUNT)</span><br><span class="line">  <span class="keyword">FROM</span> PRODUCT_SEGMENT B</span><br><span class="line"> <span class="keyword">WHERE</span> A.SEGMENT_ID = B.ID;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> PRODUCT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-1/image-20201204112104933.png" alt="image-20201204112104933" style="zoom:80%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 8. Manipulation</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Manipulation</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 데이터 필터링 (2)</title>
    <url>/2020/11/10/S-SQL-Filtering-2/</url>
    <content><![CDATA[<h1 id="데이터-필터링-2"><a class="markdownIt-Anchor" href="#데이터-필터링-2"></a> 데이터 필터링 (2)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-in-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>1. IN 연산자</strong></a>
<ul>
<li><a href="#1-1-%EC%9A%A9%EB%8F%84">1-1. 용도</a></li>
<li><a href="#1-2-in-%EC%97%B0%EC%82%B0%EC%9E%90-%EB%AC%B8%EB%B2%95">1-2. IN 연산자 문법</a>
<ul>
<li><a href="#1-in-%EB%AC%B8%EB%B2%95">1) IN 문법</a></li>
<li><a href="#2-not-in-%EB%AC%B8%EB%B2%95">2) NOT IN 문법</a></li>
</ul>
</li>
<li><a href="#1-3-in-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">1-3. IN 연산자 실습</a></li>
</ul>
</li>
<li><a href="#2-between-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>2. BETWEEN 연산자</strong></a>
<ul>
<li><a href="#2-1-%EC%9A%A9%EB%8F%84">2-1. 용도</a></li>
<li><a href="#2-2-batween-%EC%97%B0%EC%82%B0%EC%9E%90-%EB%AC%B8%EB%B2%95">2-2. BATWEEN 연산자 문법</a>
<ul>
<li><a href="#1-between-%EB%AC%B8%EB%B2%95">1) BETWEEN 문법</a></li>
<li><a href="#2-not-between-%EB%AC%B8%EB%B2%95">2) NOT BETWEEN 문법</a></li>
</ul>
</li>
<li><a href="#2-3-between-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">2-3. BETWEEN 연산자 실습</a></li>
</ul>
</li>
<li><a href="#3-like-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>3. LIKE 연산자</strong></a>
<ul>
<li><a href="#3-1-%EC%9A%A9%EB%8F%84">3-1. 용도</a></li>
<li><a href="#3-2-like-%EC%97%B0%EC%82%B0%EC%9E%90-%EB%AC%B8%EB%B2%95">3-2. LIKE 연산자 문법</a>
<ul>
<li><a href="#1-like-%EB%AC%B8%EB%B2%95">1) LIKE 문법</a></li>
<li><a href="#2-not-like-%EB%AC%B8%EB%B2%95">2) NOT LIKE 문법</a></li>
<li><a href="#3-%ED%8A%B9%EC%A0%95-%ED%8C%A8%ED%84%B4">3) 특정 패턴</a></li>
</ul>
</li>
<li><a href="#3-3-like-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">3-3. LIKE 연산자 실습</a></li>
</ul>
</li>
<li><a href="#4-is-null-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>4. IS NULL 연산자</strong></a>
<ul>
<li><a href="#4-1-%EC%9A%A9%EB%8F%84">4-1. 용도</a></li>
<li><a href="#4-2-is-null-%EC%97%B0%EC%82%B0%EC%9E%90-%EB%AC%B8%EB%B2%95">4-2. IS NULL 연산자 문법</a>
<ul>
<li><a href="#1-is-null-%EB%AC%B8%EB%B2%95">1) IS NULL 문법</a></li>
<li><a href="#2-is-not-null-%EB%AC%B8%EB%B2%95">2) IS NOT NULL 문법</a></li>
</ul>
</li>
<li><a href="#4-3-is-null-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">4-3. IS NULL 연산자 실습</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-in-연산자"><a class="markdownIt-Anchor" href="#1-in-연산자"></a> <strong>1. IN 연산자</strong></h2>
<h3 id="1-1-용도"><a class="markdownIt-Anchor" href="#1-1-용도"></a> 1-1. 용도</h3>
<p>IN 연산자는 특정 집합(컬럼 혹은 리스트)에서 특정 집합 혹은 리스트가 존재하는지 판단하는 연산자이다.</p>
<br>
<h3 id="1-2-in-연산자-문법"><a class="markdownIt-Anchor" href="#1-2-in-연산자-문법"></a> 1-2. IN 연산자 문법</h3>
<h4 id="1-in-문법"><a class="markdownIt-Anchor" href="#1-in-문법"></a> 1) IN 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME 집합에서 VALUE1, VALUE2등의 값이 존재하는지 확인 (조건에 만족한 행을 출력)</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span> COLUMN_NAME <span class="keyword">IN</span> (VALUE1, VALUE2, ...)</span><br></pre></td></tr></tbody></table></figure>
 <br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME 집합에서 TABLE_NAME2 테이블의 COLUMMN_NAME2 집합이 존재하는지 확인</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABEL_NAME</span><br><span class="line"><span class="keyword">WHERE</span> COLUMN_NAME <span class="keyword">IN</span> </span><br><span class="line">  (<span class="keyword">SELECT</span> COLUMN_NAME2 <span class="keyword">FROM</span> TABLE_NAME2)  <span class="comment">-- 서브 커리</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="2-not-in-문법"><a class="markdownIt-Anchor" href="#2-not-in-문법"></a> 2) NOT IN 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- NOT IN --</span></span><br><span class="line"><span class="comment">-- COLUMN_NAME 집합에서 값이 VALUE1, VALUE2가 아닌 행을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  COLUMN_NAME <span class="keyword">NOT</span> <span class="keyword">IN</span> (VALUE1, VALUE2)</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-3-in-연산자-실습"><a class="markdownIt-Anchor" href="#1-3-in-연산자-실습"></a> 1-3. IN 연산자 실습</h3>
<p><strong>&gt;&gt; TABLE</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">rental</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">* rental_id <br>rental_date <br>inventory_id <br>customer_id <br>return_date <br>staff_id <br>last_update</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; IN 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CUSTOMER_ID가 1 혹은 2인 행을 뽑아서 RETURN_DATE 내림차순으로 출력한다 </span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  RENTAL_ID,</span><br><span class="line">  RETURN_DATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  CUSTOMER_ID <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  RETURN_DATE <span class="keyword">DESC</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201109192003435.png" alt="image-20201109192003435" style="zoom:80%;">
<br>
<ul>
<li>IN 연산자는 ‘OR’ &amp;&amp; ‘=’ 과 같다</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- OR 사용 --</span></span><br><span class="line"><span class="comment">-- CUSTOMER_ID가 1 혹은 2인 행을 뽑아서 RETURN_DATE 내림차순으로 출력한다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  RENTAL_ID,</span><br><span class="line">  RETURN_DATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  CUSTOMER_ID = <span class="number">1</span> <span class="keyword">OR</span></span><br><span class="line">  CUSTOMER_ID = <span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  RETURN_DATE <span class="keyword">DESC</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201109192003435-1604987159526.png" alt="image-20201109192003435" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; NOT IN 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CUSTOMER_ID가 1 혹은 2가 아닌 행을 뽑아서 RETURN_DATE 내림차순으로 출력한다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  RENTAL_ID,</span><br><span class="line">  RETURN_DATE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  CUSTOMER_ID <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  RETURN_DATE <span class="keyword">DESC</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201109194032659.png" alt="image-20201109194032659" style="zoom:80%;">
<br>
<ul>
<li>NOT IN 연산자는 ‘AND’ &amp;&amp; ‘!=’ 과 같다</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CUSTOMER_ID가 1 혹은 2가 아닌 행을 뽑아서 RETURN_DATE 내림차순으로 출력한다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  RENTAL_ID,</span><br><span class="line">  RETURN_DATE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  CUSTOMER_ID != <span class="number">1</span> <span class="keyword">AND</span></span><br><span class="line">  CUSTOMER_ID != <span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  RETURN_DATE <span class="keyword">DESC</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201109194032659-1604987190631.png" alt="image-20201109194032659" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 서브 커리</strong></p>
<p><strong>Mission:</strong> 2005년 5월 27일에 DVD 반납한 고객의  이름(FIRST_NAME &amp; LAST_NAME)을 출력</p>
<ol>
<li>먼저 RENTAL 테이블에서 2005년 5월 27일에 DVD 반납한 고객의 ID(CUSTOMER_ID)를 추출 (서브 커리 부분)</li>
<li>그다음 CUSTOMER 테이블에서 해당 ID인 고객의 이름(FIRST_NAME &amp; LAST_NAME)을 출력 (메인 커리 부분)</li>
</ol>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 서브 커리 부분 --</span></span><br><span class="line"><span class="comment">-- RETURN_DATE가 2005년 5월 27일인 CUSTOMER_ID를 출력한다</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  CUSTOMER_ID</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  RENTAL</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  <span class="keyword">CAST</span>(RETURN_DATE <span class="keyword">AS</span> <span class="built_in">DATE</span>) = <span class="string">'2005-05-27'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201109213802126.png" alt="image-20201109213802126" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 메인 커리 부분 --</span></span><br><span class="line"><span class="comment">-- 해당 ID인 고객의 FIRST_NAME &amp; LAST_NAME 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME, LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  CUSTOMER_ID <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">      CUSTOMER_ID</span><br><span class="line">    <span class="keyword">FROM</span> </span><br><span class="line">      RENTAL</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">      <span class="keyword">CAST</span>(RETURN_DATE <span class="keyword">AS</span> <span class="built_in">DATE</span>) = <span class="string">'2005-05-27'</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201109214929978.png" alt="image-20201109214929978" style="zoom:80%;">
<br>
<br>
<h2 id="2-between-연산자"><a class="markdownIt-Anchor" href="#2-between-연산자"></a> <strong>2. BETWEEN 연산자</strong></h2>
<h3 id="2-1-용도"><a class="markdownIt-Anchor" href="#2-1-용도"></a> 2-1. 용도</h3>
<p>BETWEEN 연산자는 특정 집합에서 어떠한 컬럼의 값이 특정 범위안에 들어가는 집합을 출력하는 연산자이다.</p>
<br>
<h3 id="2-2-batween-연산자-문법"><a class="markdownIt-Anchor" href="#2-2-batween-연산자-문법"></a> 2-2. BATWEEN 연산자 문법</h3>
<h4 id="1-between-문법"><a class="markdownIt-Anchor" href="#1-between-문법"></a> 1) BETWEEN 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME의 값이 VALUE_A와 VALUE_B사이에 있는 집합을 출력한다</span></span><br><span class="line"><span class="comment">-- COLUMN_NAME &gt;= VALUE_A AND COLUMN_NAME &lt;= B</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span> COLUMN_NAME </span><br><span class="line">  <span class="keyword">BETWEEN</span> VALUE_A <span class="keyword">AND</span> VALUE_B</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="2-not-between-문법"><a class="markdownIt-Anchor" href="#2-not-between-문법"></a> 2) NOT BETWEEN 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME의 값이 VALUE_A와 VALUE_B 사이에 있지 않은 집합을 출력한다</span></span><br><span class="line"><span class="comment">-- COLUMN_NAME &lt; VALUE_A OR COLUMN_NAME &gt; VALUE_B</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  * </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span> COLUMN_NAME</span><br><span class="line">  <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> VALUE_A <span class="keyword">AND</span> VALUE_B</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-between-연산자-실습"><a class="markdownIt-Anchor" href="#2-3-between-연산자-실습"></a> 2-3. BETWEEN 연산자 실습</h3>
<p><strong>&gt;&gt; TABLE</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">payment</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">* payment_id <br>customer_id <br>staff_id <br>rental_id <br>amount <br>payment_date</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; BETWEEN  실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- PAYMENT 테이블에서 AMOUNT가 8과 9사이에 있는 행의 CUSTOMER_ID, PAYMENT_ID, AMOUNT를 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID, </span><br><span class="line">  PAYMENT_ID,</span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> AMOUNT <span class="keyword">BETWEEN</span> <span class="number">8</span> <span class="keyword">AND</span> <span class="number">9</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110090038727.png" alt="image-20201110090038727" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 위 SQL은 이 SQL과 결과가 동일함</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  PAYMENT_ID,</span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> AMOUNT &gt;= <span class="number">8</span> <span class="keyword">AND</span></span><br><span class="line">      AMOUNT &lt;- <span class="number">9</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<p><strong>&gt;&gt; NOT BETWEEN 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- PAYMENT 테이블에서 AMOUNT가 8부터 9사이가 아닌 행의 CUSTOMER_ID, PAYMENT_ID, AMOUNT를 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  PAYMENT_ID,</span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> AMOUNT <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">8</span> <span class="keyword">AND</span> <span class="number">9</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110091032703.png" alt="image-20201110091032703" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 위 SQL은 이 SQL과 결과가 동일함</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID,</span><br><span class="line">  PAYMENT_ID,</span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> AMOUNT &lt; <span class="number">8</span> <span class="keyword">OR</span></span><br><span class="line">      AMOUNT &gt; <span class="number">9</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<p><strong>&gt;&gt; 일자 비교</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- PAYMENT_DATE가 2007년 2월 7일부터 2007년 2월 15일 데이터를 추출함</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- [방법 1]</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID, PAYMENT_ID,</span><br><span class="line">  AMOUNT,      PAYMENT_DATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">CAST</span>(PAYMENT_DATE <span class="keyword">AS</span> <span class="built_in">DATE</span>)</span><br><span class="line">  <span class="keyword">BETWEEN</span> <span class="string">'2007-02-07'</span> <span class="keyword">AND</span> <span class="string">'2007-02-15'</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">-- [방법 2]</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID, PAYMENT_ID,</span><br><span class="line">  AMOUNT,      PAYMENT_DATE</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> TO_CHAR(PAYMENT_DATE, <span class="string">'YYYY-MM-DD'</span>)</span><br><span class="line">  <span class="keyword">BETWEEN</span> <span class="string">'2007-02-07'</span> <span class="keyword">AND</span> <span class="string">'2007-02-15'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110092522372.png" alt="image-20201110092522372" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CAST( # AS DATE)와 TO_CHAR( # , 'YYYY-MM-DD')의 결과 확인</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CUSTOMER_ID, PAYMENT_ID,</span><br><span class="line">  AMOUNT,      PAYMENT_DATE,</span><br><span class="line">  <span class="keyword">CAST</span>(PAYMENT_DATE <span class="keyword">AS</span> <span class="built_in">DATE</span>),          </span><br><span class="line">  TO_CHAR(PAYMENT_DATE, <span class="string">'YYYY-MM-DD'</span>)  </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  PAYMENT</span><br><span class="line"><span class="keyword">WHERE</span> TO_CHAR(PAYMENT_DATE, <span class="string">'YYYY-MM-DD'</span>)</span><br><span class="line">  <span class="keyword">BETWEEN</span> <span class="string">'2007-02-07'</span> <span class="keyword">AND</span> <span class="string">'2007-02-15'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110093852708.png" alt="image-20201110093852708" style="zoom:80%;">
<br>
<br>
<h2 id="3-like-연산자"><a class="markdownIt-Anchor" href="#3-like-연산자"></a> <strong>3. LIKE 연산자</strong></h2>
<h3 id="3-1-용도"><a class="markdownIt-Anchor" href="#3-1-용도"></a> 3-1. 용도</h3>
<p>LIKE연산자는 특정 집합에서 어떠한 컬럼의 값이 특정 값과 유사한 패턴을 갖는 집합을 출력하는 연산자이다.</p>
<br>
<h3 id="3-2-like-연산자-문법"><a class="markdownIt-Anchor" href="#3-2-like-연산자-문법"></a> 3-2. LIKE 연산자 문법</h3>
<h4 id="1-like-문법"><a class="markdownIt-Anchor" href="#1-like-문법"></a> 1) LIKE 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME 컬럼의 값이 특정 패턴과 유사한 집합을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span> COLUMN_NAME</span><br><span class="line">  <span class="keyword">LIKE</span> 특정패턴</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="2-not-like-문법"><a class="markdownIt-Anchor" href="#2-not-like-문법"></a> 2) NOT LIKE 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME 컬럼의 값이 특정 패턴과 유사하지 않은 집합을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span> COLUMN_NAME</span><br><span class="line">  <span class="keyword">NOT</span> <span class="keyword">LIKE</span> 특정패턴</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="3-특정-패턴"><a class="markdownIt-Anchor" href="#3-특정-패턴"></a> 3) 특정 패턴</h4>
<ul>
<li>특정 패턴에서 **%**는 어떠한 <strong>문자 혹은 문자열</strong>을 의미함 (길이가 상관없음)</li>
<li>특정 패턴에서 **_**는 <strong>한 개의 문자</strong>를 의미함</li>
</ul>
<br>
<h3 id="3-3-like-연산자-실습"><a class="markdownIt-Anchor" href="#3-3-like-연산자-실습"></a> 3-3. LIKE 연산자 실습</h3>
<p><strong>&gt;&gt; TABLE</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">customer</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">* customer_id <br>store_id <br>first_name <br>email <br>address_id <br>activebool <br>create_date <br>last_update <br>active</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; LIKE 실습</strong></p>
<p>[<code>## LIKE '&amp;&amp;'</code>] 절은 <code>TURE</code> / <code>FALSE</code>를 반환한다.</p>
<p>'<code>%</code>'와 '<code>_</code>'를 이해하기 위해 다음 예를 살펴본다:</p>
<div width="100%">
<table>
<thead>
<tr>
<th style="text-align:left">SQL</th>
<th style="text-align:center">결과값</th>
<th style="text-align:left">설명</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">SELECT</td>
<td style="text-align:center"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">‘FOO’ LIKE ‘FOO’,</td>
<td style="text-align:center">TRUE</td>
<td style="text-align:left">'FOO’는 'FOO’이므로 참이다</td>
</tr>
<tr>
<td style="text-align:left">‘FOO’ LIKE ‘F%’,</td>
<td style="text-align:center">TRUE</td>
<td style="text-align:left">'F%'는 'F’로 시작하면 모두 참이다</td>
</tr>
<tr>
<td style="text-align:left">‘FOO’ LIKE ‘_O_’,</td>
<td style="text-align:center">TRUE</td>
<td style="text-align:left">'_O_'는 3자리 문자열이고 가운든 문자가 'O’라면 모두 참이다</td>
</tr>
<tr>
<td style="text-align:left">‘BAR’ LIKE ‘B_’</td>
<td style="text-align:center">TRUE</td>
<td style="text-align:left">'_B_'는 B로 시작하는 2자리 문자열이면 모두 참. 하지만 'BAR’는 'B’로 시작하는 3자리 문자열이다</td>
</tr>
</tbody>
</table>
</div>
<br>
  <figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- FIRST_NAME이 'Jen'으로 시작하는 집합을 출력</span></span><br><span class="line"><span class="comment">-- 즉, 'Jen'뒤에 어떤 문자 혹은 문자열이든 OK</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME, </span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  FIRST_NAME <span class="keyword">LIKE</span> <span class="string">'Jen%'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110105536650.png" alt="image-20201110105536650" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- FIRST_NAME에 'er'이 존재하는 모든 집합을 출력</span></span><br><span class="line"><span class="comment">-- 즉, 'er'앞과 뒤에 어떤 문자 혹은 문자열이든 OK</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  FIRST_NAME <span class="keyword">LIKE</span> <span class="string">'%er%'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110113041772.png" alt="image-20201110113041772" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- FIRST_NAME: 하나의 문자 + 'her' + 임의의 문자/문자열</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  FIRST_NAME <span class="keyword">LIKE</span> <span class="string">'_her%'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110113454144.png" alt="image-20201110113454144" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; NOT LIKE 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- FIRST_NAME이 'jen'으로 시작하지 않는 집합을 출력</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  FIRST_NAME <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">'Jen%'</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110113847995.png" alt="image-20201110113847995" style="zoom:80%;">
<br>
<br>
<h2 id="4-is-null-연산자"><a class="markdownIt-Anchor" href="#4-is-null-연산자"></a> <strong>4. IS NULL 연산자</strong></h2>
<h3 id="4-1-용도"><a class="markdownIt-Anchor" href="#4-1-용도"></a> 4-1. 용도</h3>
<p>IS NULL 연산자는 특정 컬럼 혹은 값이 NULL 값인지 아닌지를 판단하는 연산자이다.</p>
<p>IS NULL 혹은 IS NOT NULL로 NULL 유무를 판단한다.</p>
<br>
<h3 id="4-2-is-null-연산자-문법"><a class="markdownIt-Anchor" href="#4-2-is-null-연산자-문법"></a> 4-2. IS NULL 연산자 문법</h3>
<h4 id="1-is-null-문법"><a class="markdownIt-Anchor" href="#1-is-null-문법"></a> 1) IS NULL 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME 컬럼의 값이 NULL인 집합을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  COLUMN_NAME <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="2-is-not-null-문법"><a class="markdownIt-Anchor" href="#2-is-not-null-문법"></a> 2) IS NOT NULL 문법</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_NAME 컬럼의 값이 NULL이 아닌 집합을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  COLUMN_NAME <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="4-3-is-null-연산자-실습"><a class="markdownIt-Anchor" href="#4-3-is-null-연산자-실습"></a> 4-3. IS NULL 연산자 실습</h3>
<p><strong>&gt;&gt; 실습 준비</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CONTACTS</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">INT</span> <span class="keyword">GENERATED</span> <span class="keyword">BY</span> <span class="keyword">DEFAULT</span> <span class="keyword">AS</span> <span class="keyword">IDENTITY</span>,</span><br><span class="line">  FIRST_NAME <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  LAST_NAME <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  EMAIL <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PHONE <span class="built_in">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>(<span class="keyword">ID</span>)    </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line">  <span class="keyword">INTO</span> </span><br><span class="line">    CONTACTS(FIRST_NAME, LAST_NAME, EMIAL, PHONE)</span><br><span class="line">  <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">'John'</span>, <span class="string">'Doe'</span>, <span class="string">'john.doe@example.com'</span>, <span class="literal">NULL</span>),</span><br><span class="line">    (<span class="string">'Lily'</span>, <span class="string">'Bush'</span>, <span class="string">'lily.bush@example.com'</span>, <span class="string">'(408-234-2764)'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CONTACTS</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110132419710.png" alt="image-20201110132419710" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; IS NULL 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- PHONE 컬럼의 값이 NULL인 집합을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CONTACTS</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  PHONE <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110133053492.png" alt="image-20201110133053492" style="zoom:80%;">
<br>
<ul>
<li><strong>[주의]</strong> NULL은 “=” 연산으로 비교할 수 없다</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CONTACTS</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  PHONE = <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110133321244.png" alt="image-20201110133321244" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; IS NOT NULL 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- PHONE 컬럼의 값이 NULL이 아닌 집합을 출력</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CONTACTS</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  PHONE <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Filtering-2/image-20201110133559770.png" alt="image-20201110133559770" style="zoom:80%;">
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 2. Data Filtering</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Filtering</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 집합 연산자</title>
    <url>/2020/11/20/S-SQL-Operation/</url>
    <content><![CDATA[<h1 id="집합-연산자"><a class="markdownIt-Anchor" href="#집합-연산자"></a> 집합 연산자</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-union-%EC%97%B0%EC%82%B0"><strong>1. UNION 연산</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-union-%EC%97%B0%EC%82%B0-%EB%AC%B8%EB%B2%95">1-2. UNION 연산 문법</a></li>
<li><a href="#1-3-union-%EC%97%B0%EC%82%B0-%EC%8B%A4%EC%8A%B5">1-3. UNION 연산 실습</a>
<ul>
<li><a href="#1-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">(1) 실습 준비</a></li>
<li><a href="#2-union-%EC%97%B0%EC%82%B0-%EC%8B%A4%EC%8A%B5">(2) UNION 연산 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-union-all-%EC%97%B0%EC%82%B0"><strong>2. UNION ALL 연산</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-union-all-%EB%AC%B8%EB%B2%95">2-2. UNION ALL 문법</a></li>
<li><a href="#2-3-union-all-%EC%8B%A4%EC%8A%B5">2-3. UNION ALL 실습</a></li>
</ul>
</li>
<li><a href="#3-intersect-%EC%97%B0%EC%82%B0"><strong>3. INTERSECT 연산</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-intersect-%EC%97%B0%EC%82%B0-%EB%AC%B8%EB%B2%95">3-2. INTERSECT 연산 문법</a></li>
<li><a href="#3-3-intersect-%EC%97%B0%EC%82%B0-%EC%8B%A4%EC%8A%B5">3-3. INTERSECT 연산 실습</a>
<ul>
<li><a href="#1-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-2">(1) 실습 준비</a></li>
<li><a href="#2-intersect-%EC%97%B0%EC%82%B0-%EC%8B%A4%EC%8A%B5">(2) INTERSECT 연산 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-except-%EC%97%B0%EC%82%B0"><strong>4. EXCEPT 연산</strong></a>
<ul>
<li><a href="#4-1-%EA%B0%9C%EB%85%90">4-1. 개념</a></li>
<li><a href="#4-2-except-%EC%97%B0%EC%82%B0-%EB%AC%B8%EB%B2%95">4-2. EXCEPT 연산 문법</a></li>
<li><a href="#4-3-except-%EC%97%B0%EC%82%B0-%EC%8B%A4%EC%8A%B5">4-3. EXCEPT 연산 실습</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-union-연산"><a class="markdownIt-Anchor" href="#1-union-연산"></a> <strong>1. UNION 연산</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>두 개 이상의 SELECT 문들의 결과 집합을 단일 결과 집합으로 결합하며 결합 시 <strong>중복된 데이터는 제거</strong> 된다.</p>
<img src="/images/S-SQL-Operation/image-20201120094109951.png" alt="image-20201120094109951" style="zoom: 67%;">
<br>
<h3 id="1-2-union-연산-문법"><a class="markdownIt-Anchor" href="#1-2-union-연산-문법"></a> 1-2. UNION 연산 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    COLUMN_1_1,</span><br><span class="line">    COLUMN_1_2</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    TABLE_NAME_1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    COLUMN_2_1,</span><br><span class="line">    COLUMN_2_2</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    TABLE_NAME_2;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>두 개의 SELECT 문 간 컬럼의 개수는 동일해야 하고 해당 순서의 열에는 서로 호환되는 데이터 유형이어야 한다.</li>
<li>두 개의 SELECT 문에서 중복되는 데이터 값이 있다면 중복을 제거 된다.</li>
<li>ORDER BY 로 정렬하고자 할 경우 맨 마지막 SELECT문에 ORDER BY 절을 사용한다.</li>
</ul>
<br>
<h3 id="1-3-union-연산-실습"><a class="markdownIt-Anchor" href="#1-3-union-연산-실습"></a> 1-3. UNION 연산 실습</h3>
<h4 id="1-실습-준비"><a class="markdownIt-Anchor" href="#1-실습-준비"></a> (1) 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SALES2007_1</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">  AMOUNT <span class="built_in">NUMERIC</span>(<span class="number">15</span>, <span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SALES2007_1</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'Mike'</span>, <span class="number">150000.25</span>),</span><br><span class="line">  (<span class="string">'Jon'</span>, <span class="number">132000.75</span>),</span><br><span class="line">  (<span class="string">'Mary'</span>, <span class="number">100000</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SALES2007_2</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">  AMOUNT <span class="built_in">NUMERIC</span>(<span class="number">15</span>, <span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SALES2007_2</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'Mike'</span>, <span class="number">120000.25</span>),</span><br><span class="line">  (<span class="string">'Jon'</span>, <span class="number">142000.75</span>),</span><br><span class="line">  (<span class="string">'Mary'</span>, <span class="number">100000</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES2007_1;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119164810289.png" alt="image-20201119164810289" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119164843257.png" alt="image-20201119164843257" style="zoom:80%;">
<br>
<br>
<h4 id="2-union-연산-실습"><a class="markdownIt-Anchor" href="#2-union-연산-실습"></a> (2) UNION 연산 실습</h4>
<p><strong>&gt;&gt; 일반 UNION</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 전체 UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119165223471.png" alt="image-20201119165223471" style="zoom:80%;">
<ul>
<li>(‘Mary’, ‘100000’) 중복 제거됨</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- NAME만 UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119165446423.png" alt="image-20201119165446423">
<ul>
<li>‘Mike’, ‘Jon’, ‘Mary’ 중복 제거됨</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- AMOUNT만 UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119165653248.png" alt="image-20201119165653248" style="zoom:80%;">
<ul>
<li>‘100000’ 중복 제거됨</li>
</ul>
<br>
<p><strong>&gt;&gt; UNION + ORDER BY</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SALES2007_2</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span>             <span class="comment">-- ORDER BY는 맨 마지막 SELECT 문에 기재해야 한다.</span></span><br><span class="line">  AMOUNT <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119170006052.png" alt="image-20201119170006052" style="zoom:80%;">
<br>
<br>
<h2 id="2-union-all-연산"><a class="markdownIt-Anchor" href="#2-union-all-연산"></a> <strong>2. UNION ALL 연산</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>두 개 이상의 SELECT 문들의 결과 집합을 단일 결과 집합으로 결합하며 결합 시 <strong>중복된 데이터도 모두 출력</strong>한다.</p>
<img src="/images/S-SQL-Operation/image-20201120094352298.png" alt="image-20201120094352298" style="zoom:67%;">
<br>
<h3 id="2-2-union-all-문법"><a class="markdownIt-Anchor" href="#2-2-union-all-문법"></a> 2-2. UNION ALL 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    COLUMN_1_1,</span><br><span class="line">    COLUMN_1_2</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    TABLE_NAME_1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    COLUMN_2_1,</span><br><span class="line">    COLUMN_2_2</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    TABLE_NAME_2;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>두 개의 SELECT 문 간 컬럼의 개수는 동일해야 하고 해당 순서의 열에는 서로 호환되는 데이터 유형이어야 한다.</li>
<li>두 개의 SELECT 문에서 중복되는 데이터 값이 있어도 모두 출력한다.</li>
<li>ORDER BY 로 정렬하고자 할 경우 맨 마지막 SELECT문에 ORDER BY 절을 사용한다.</li>
</ul>
<br>
<h3 id="2-3-union-all-실습"><a class="markdownIt-Anchor" href="#2-3-union-all-실습"></a> 2-3. UNION ALL 실습</h3>
<p><strong>&gt;&gt; 일반 UNION ALL</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 전체 UNION ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119170843555.png" alt="image-20201119170843555" style="zoom:80%;">
<ul>
<li>(‘Mary’, ‘100000’) 중복 데이터 출력함</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- NAME만 UNION ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">NAME</span></span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119170949324.png" alt="image-20201119170949324" style="zoom:80%;">
<ul>
<li>‘Mike’, ‘Jon’, ‘Mary’ 중복 데이터 출력함</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- AMOUNT만 UNION ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  AMOUNT</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119171104105.png" alt="image-20201119171104105" style="zoom:80%;">
<ul>
<li>‘100000’ 중복 데이터 출력함</li>
</ul>
<br>
<p><strong>&gt;&gt; UNION ALL + ORDER BY</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  SALES2007_2</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span>                 <span class="comment">-- ORDER BY는 맨 마지막 SELECT 문에 기재해야 한다.</span></span><br><span class="line">  AMOUNT <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201119171511374.png" alt="image-20201119171511374" style="zoom:80%;">
<br>
<br>
<h2 id="3-intersect-연산"><a class="markdownIt-Anchor" href="#3-intersect-연산"></a> <strong>3. INTERSECT 연산</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>INTERSECT 연산자는 두 개 이상의 SELECT 문들의 결과 집합의 교집합을 출력하는 연산자다.</p>
<img src="/images/S-SQL-Operation/image-20201120095222453.png" style="zoom:67%;">
<br>
<h3 id="3-2-intersect-연산-문법"><a class="markdownIt-Anchor" href="#3-2-intersect-연산-문법"></a> 3-2. INTERSECT 연산 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   COLUMN_1_1,</span><br><span class="line">   COLUMN_1_2</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   TABLE_NAME_1</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   COLUMN_2_1,</span><br><span class="line">   COLUMN_2_2</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   TABLE_NAME_2;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>두 개의 SELECT 문 간 컬럼의 개수는 동일해야 하고 해당 순서의 열에는 서로 호환되는 데이터 유형이어야 한다.</li>
<li>ORDER BY 로 정렬하고자 할 경우 맨 마지막 SELECT문에 ORDER BY 절을 사용한다.</li>
</ul>
<br>
<h3 id="3-3-intersect-연산-실습"><a class="markdownIt-Anchor" href="#3-3-intersect-연산-실습"></a> 3-3. INTERSECT 연산 실습</h3>
<h4 id="1-실습-준비-2"><a class="markdownIt-Anchor" href="#1-실습-준비-2"></a> (1) 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMPLOYEES1</span><br><span class="line">(</span><br><span class="line">  EMPLOYEE_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  EMPLOYEE_NAME <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">KEYS</span></span><br><span class="line">(</span><br><span class="line">  EMPLOYEE_ID <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  EFFECTIVE_DATE <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (EMPLOYEE_ID)</span><br><span class="line">  <span class="keyword">REFERENCES</span> EMPLOYEES1 (EMPLOYEE_ID)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> HIPOS</span><br><span class="line">(</span><br><span class="line">  EMPLOYEE_ID <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  EFFECTIVE_DATE <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (EMPLOYEE_ID)</span><br><span class="line">  <span class="keyword">REFERENCES</span> EMPLOYEES1 (EMPLOYEE_ID)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMPLOYEES1 (EMPLOYEE_NAME)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'Joyce Edwards'</span>),</span><br><span class="line">(<span class="string">'Diane Collins'</span>),</span><br><span class="line">(<span class="string">'Alice Stewart'</span>),</span><br><span class="line">(<span class="string">'Julie Sanchez'</span>),</span><br><span class="line">(<span class="string">'Heather Morris'</span>),</span><br><span class="line">(<span class="string">'Teresa Rogers'</span>),</span><br><span class="line">(<span class="string">'Doris Reed'</span>),</span><br><span class="line">(<span class="string">'Gloria Cook'</span>),</span><br><span class="line">(<span class="string">'Evelyn Morgan'</span>),</span><br><span class="line">(<span class="string">'Jean Bell'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">KEYS</span></span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'2000-02-01'</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'2001-06-01'</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">'2002-01-01'</span>),</span><br><span class="line">(<span class="number">7</span>, <span class="string">'2005-06-01'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> HIPOS</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">9</span>, <span class="string">'2000-01-01'</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">'2002-06-01'</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">'2006-06-01'</span>),</span><br><span class="line">(<span class="number">10</span>, <span class="string">'2005-06-01'</span>);</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> EMPLOYEES1;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201120111618068.png" alt="image-20201120111618068" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">KEYS</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201120111732244.png" alt="image-20201120111732244" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> HIPOS;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201120111807673.png" alt="image-20201120111807673" style="zoom:80%;">
<br>
<br>
<h4 id="2-intersect-연산-실습"><a class="markdownIt-Anchor" href="#2-intersect-연산-실습"></a> (2) INTERSECT 연산 실습</h4>
<p><strong>&gt;&gt; 일반 INTERSECT</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- "KEYS" INTERSECT "HIPOS"</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   EMPLOYEE_ID</span><br><span class="line"> <span class="keyword">FROM</span> </span><br><span class="line">   <span class="keyword">KEYS</span></span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   EMPLOYEE_ID</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   HIPOS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Operation/image-20201120113731964.png" alt="image-20201120113731964"></p>
<br>
<ul>
<li>INNER 조인 연산과 결과가 동일함** (실무에서 INTERSECT 연산 보다 INNER 조인 더 많이 쓰인다)</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- INNER JOIN (1)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.EMPLOYEE_ID</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  <span class="keyword">KEYS</span> A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">  HIPOS B</span><br><span class="line"><span class="keyword">ON</span> A.EMPLOYEE_ID = B.EMPLOYEE_ID;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- INNER JOIN (2)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.EMPLOYEE_ID</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  <span class="keyword">KEYS</span> A, HIPOS B</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  A.EMPLOYEE_ID = B.EMPLOYEE_ID;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Operation/image-20201120113731964-1605855152002.png" alt="image-20201120113731964"></p>
<br>
<p><strong>&gt;&gt; INTERSECT + ORDER BY</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   EMPLOYEE_ID</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   <span class="keyword">KEYS</span></span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   EMPLOYEE_ID</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   HIPOS</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> EMPLOYEE_ID <span class="keyword">DESC</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Operation/image-20201120130136496.png" alt="image-20201120130136496"></p>
<br>
<br>
<h2 id="4-except-연산"><a class="markdownIt-Anchor" href="#4-except-연산"></a> <strong>4. EXCEPT 연산</strong></h2>
<h3 id="4-1-개념"><a class="markdownIt-Anchor" href="#4-1-개념"></a> 4-1. 개념</h3>
<p>EXCEPT 연산자는 맨위에 SELECT 문의 결과 집합에서 그 아래에 있는 SELECT 문의 결과 집합을 제외한 결과를 리턴한다. (실무에서 많이 쓰임)</p>
<img src="/images/S-SQL-Operation/image-20201120132000229.png" alt="image-20201120132000229" style="zoom:67%;">
<br>
<h3 id="4-2-except-연산-문법"><a class="markdownIt-Anchor" href="#4-2-except-연산-문법"></a> 4-2. EXCEPT 연산 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   COLUMN_1_1,</span><br><span class="line">   COLUMN_1_2</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   TABLE_NAME_1</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   COLUMN_2_1,</span><br><span class="line">   COLUMN_2_2</span><br><span class="line"> <span class="keyword">FROM</span></span><br><span class="line">   TABLE_NAME_2;</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>두 개의 SELECT 문 간 컬럼의 개수는 동일해야 하고 해당 순서의 열에는 서로 호환되는 데이터 유형이어야 한다.</li>
<li>ORDER BY 로 정렬하고자 할 경우 맨 마지막 SELECT문에 ORDER BY 절을 사용한다.</li>
</ul>
<br>
<h3 id="4-3-except-연산-실습"><a class="markdownIt-Anchor" href="#4-3-except-연산-실습"></a> 4-3. EXCEPT 연산 실습</h3>
<p><strong>&gt;&gt; 실습 데이터</strong></p>
<p>dvdrental 데이터셋의 “film” 테이블(영화dvd 정보) 과 “inventory” 테이블(dvd 제고 정보) 을 활용한다.</p>
<img src="/images/S-SQL-Operation/image-20201120133728012.png" alt="image-20201120133728012" style="zoom:70%;">
<ul>
<li>한 편의 영화가 여러 개의 제고가 있을 수 있다</li>
</ul>
<br>
<p><strong>&gt;&gt; MISSION: 제고가 존재하지 않는 영화의 ID와 제목을 추출한다</strong></p>
<p>(1) 먼저 제고가 존재하는 영화의 ID와 제목을 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>            </span><br><span class="line">  A.FILM_ID,</span><br><span class="line">  B.TITLE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  INVENTORY A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  FILM B</span><br><span class="line"><span class="keyword">ON</span> A.FILM_ID = B.FILM_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> B.TITLE;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201120140138350.png" alt="image-20201120140138350" style="zoom:80%;">
<br>
<p>(2) 이제 전체 영화에서 제고 있는 영화를 제거하면 제거 없는 영화의 정보를 추출할 수 있다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">EXCEPT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>            </span><br><span class="line">  A.FILM_ID,</span><br><span class="line">  B.TITLE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  INVENTORY A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span></span><br><span class="line">  FILM B</span><br><span class="line"><span class="keyword">ON</span> A.FILM_ID = B.FILM_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> TITLE;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Operation/image-20201120140607930.png" alt="image-20201120140607930" style="zoom:80%;">
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 6. Aggregate Operations</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 데이터 조작 (2)</title>
    <url>/2020/12/07/S-SQL-Manipulation-2/</url>
    <content><![CDATA[<h1 id="데이터-조작-2"><a class="markdownIt-Anchor" href="#데이터-조작-2"></a> 데이터 조작 (2)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-delete-%EB%AC%B8"><strong>1. DELETE 문</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-delete-%EB%AC%B8%EB%B2%95">1-2. DELETE 문법</a>
<ul>
<li><a href="#1-delete">(1) DELETE</a></li>
<li><a href="#2-delete-join">(2) DELETE JOIN</a></li>
</ul>
</li>
<li><a href="#1-3-delete-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">1-3. DELETE 문 실습</a>
<ul>
<li><a href="#1-%ED%8A%B9%EC%A0%95-%EC%A1%B0%EA%B1%B4%EC%9D%98-%ED%96%89%EC%9D%84-%EC%82%AD%EC%A0%9C">(1) 특정 조건의 행을 삭제</a></li>
<li><a href="#2-delete-join%EC%9D%98-%EC%82%AC%EC%9A%A9">(2) DELETE JOIN의 사용</a></li>
<li><a href="#3-%EC%A0%84%EC%B2%B4-%ED%96%89-%EC%82%AD%EC%A0%9C">(3) 전체 행 삭제</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-upsert-%EB%AC%B8"><strong>2. UPSERT 문</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-upsert-%EB%AC%B8%EB%B2%95">2-2. UPSERT 문법</a></li>
<li><a href="#2-3-upsert-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">2-3. UPSERT 문 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">&gt;&gt; 실습 준비</a></li>
<li><a href="#upsert-%EB%AC%B8-%EC%8B%A4%EC%8A%B5-do-nothing">&gt;&gt; UPSERT 문 실습 – DO NOTHING</a></li>
<li><a href="#upsert-%EB%AC%B8-%EC%8B%A4%EC%8A%B5-update">&gt;&gt; UPSERT 문 실습 – UPDATE</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-export-%EC%9E%91%EC%97%85"><strong>3. EXPORT 작업</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-export-%EC%9E%91%EC%97%85-%EC%8B%A4%EC%8A%B5">3-2. EXPORT 작업 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%97%91%EC%85%80csv-%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%B6%9C%EB%A0%A5">&gt;&gt; 실습 – 엑셀(.CSV) 형식으로 출력</a></li>
<li><a href="#%EC%8B%A4%EC%8A%B5-%ED%85%8D%EC%8A%A4%ED%8A%B8txt-%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EC%B6%9C%EB%A0%A5">&gt;&gt; 실습 – 텍스트(.TXT) 파일로 출력</a></li>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%BB%AC%EB%9F%BC%EB%AA%85-%EC%97%86%EC%9D%B4-%EC%B6%9C%EB%A0%A5">&gt;&gt; 실습 – 컬럼명 없이 출력</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-import-%EC%9E%91%EC%97%85"><strong>4. IMPORT 작업</strong></a>
<ul>
<li><a href="#4-1-%EA%B0%9C%EB%85%90">4-1. 개념</a></li>
<li><a href="#4-2-import-%EC%9E%91%EC%97%85-%EC%8B%A4%EC%8A%B5">4-2. IMPORT 작업 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-2">&gt;&gt; 실습 준비</a></li>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%97%91%EC%85%80%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%A0%81%EC%9E%AC">&gt;&gt; 실습 – 엑셀파일을 적재</a></li>
<li><a href="#%EC%8B%A4%EC%8A%B5-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%A0%81%EC%9E%AC">&gt;&gt; 실습 – 텍스트 파일을 적재</a></li>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%BB%AC%EB%9F%BC%EB%AA%85%EC%9D%B4-%EC%97%86%EB%8A%94-%EC%97%91%EC%85%80-%ED%8C%8C%EC%9D%BC-%EC%A0%81%EC%9E%AC">&gt;&gt; 실습 – 컬럼명이 없는 엑셀 파일 적재</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-delete-문"><a class="markdownIt-Anchor" href="#1-delete-문"></a> <strong>1. DELETE 문</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>DELETE문은 테이블에서 특정 데이터를 삭제하거나 테이블 내에 존재하는 모든 데이터를 삭제할 수 있다.</p>
<br>
<h3 id="1-2-delete-문법"><a class="markdownIt-Anchor" href="#1-2-delete-문법"></a> 1-2. DELETE 문법</h3>
<h4 id="1-delete"><a class="markdownIt-Anchor" href="#1-delete"></a> (1) DELETE</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line">  <span class="keyword">FROM</span> TARGET_TABLE A</span><br><span class="line"> <span class="keyword">WHERE</span> 조건식;          <span class="comment">-- 삭제할 행에 대한 조건</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="2-delete-join"><a class="markdownIt-Anchor" href="#2-delete-join"></a> (2) DELETE JOIN</h4>
<p>DELETE 시 다른 테이블의 내용을 참조하고 싶을 때 DELETE JOIN 문을 사용한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line">  <span class="keyword">FROM</span> TARGET_TABLE A</span><br><span class="line"> <span class="keyword">USING</span> REF_TABLE B     <span class="comment">-- 참조 테이블 지정 </span></span><br><span class="line"> <span class="keyword">WHERE</span> 조건식;          <span class="comment">-- JOIN &amp; DELETE 조건</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<br>
<h3 id="1-3-delete-문-실습"><a class="markdownIt-Anchor" href="#1-3-delete-문-실습"></a> 1-3. DELETE 문 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204135107666.png" alt="image-20201204135107666" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINK_TMP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201203135135326.png" alt="image-20201203135135326" style="zoom:80%;">
<br>
<br>
<h4 id="1-특정-조건의-행을-삭제"><a class="markdownIt-Anchor" href="#1-특정-조건의-행을-삭제"></a> (1) 특정 조건의 행을 삭제</h4>
<p><strong>[MISSION]</strong> LINK테이블에서 ID가 5인 행을 삭제</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204135107666.png" alt="image-20201204135107666" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line">  <span class="keyword">FROM</span> <span class="keyword">LINK</span></span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">ID</span> = <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204135350865.png" alt="image-20201204135350865" style="zoom:80%;">
<br>
<br>
<h4 id="2-delete-join의-사용"><a class="markdownIt-Anchor" href="#2-delete-join의-사용"></a> (2) DELETE JOIN의 사용</h4>
<p><strong>[MISSION]</strong>  LINK_TMP 테이블에서 ID가 LINK 테이블의 ID 와 매칭된 행을 삭제</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204135350865.png" alt="image-20201204135350865" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINK_TMP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201203135135326.png" alt="image-20201203135135326" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line">  <span class="keyword">FROM</span> LINK_TMP A</span><br><span class="line"> <span class="keyword">USING</span> <span class="keyword">LINK</span> B</span><br><span class="line"> <span class="keyword">WHERE</span> A.ID = B.ID;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINK_TMP;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Manipulation-2/image-20201204144847961.png" alt="image-20201204144847961"></p>
<br>
<br>
<h4 id="3-전체-행-삭제"><a class="markdownIt-Anchor" href="#3-전체-행-삭제"></a> (3) 전체 행 삭제</h4>
<p><strong>&gt;&gt; LINK 테이블</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204135350865.png" alt="image-20201204135350865" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">LINK</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204150231132.png" alt="image-20201204150231132" style="zoom:80%;">
<br>
<br>
<p><strong>&gt;&gt; LINK_TMP 테이블</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINK_TMP;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204144847961.png" alt="image-20201204144847961" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> LINK_TMP;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINK_TMP;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Manipulation-2/image-20201204150440196.png" alt="image-20201204150440196"></p>
<br>
<br>
<h2 id="2-upsert-문"><a class="markdownIt-Anchor" href="#2-upsert-문"></a> <strong>2. UPSERT 문</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>UPSERT문은 INSERT를 시도할 때 조건(상황)에 따라 UPDATE를 할 수 있는 구문이다. 복잡한 업무 처리에 자주 사용된다.</p>
<br>
<h3 id="2-2-upsert-문법"><a class="markdownIt-Anchor" href="#2-2-upsert-문법"></a> 2-2. UPSERT 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TABLE_NAME (COLUMN_1) </span><br><span class="line">     <span class="keyword">VALUES</span> (VALUE_1)                 <span class="comment">-- INSERT 시도</span></span><br><span class="line"><span class="keyword">ON</span> CONFLICT TARGET <span class="keyword">ACTION</span>;            <span class="comment">-- 충돌 시 다른 액션</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-upsert-문-실습"><a class="markdownIt-Anchor" href="#2-3-upsert-문-실습"></a> 2-3. UPSERT 문 실습</h3>
<h4 id="실습-준비"><a class="markdownIt-Anchor" href="#실습-준비"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CUSTOMERS</span><br><span class="line">(</span><br><span class="line">  CUSTOMER_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">  EMAIL <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  ACTIVE <span class="built_in">BOOL</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">TRUE</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>
<p>NAME 컬럼이 UNIQUE 제약 조건 컬럼임을 주의 한다.</p>
</li>
<li>
<p>즉 NAME 컬럼은 중복된 값이 존재할 수 없다</p>
<br>
</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CUSTOMERS (<span class="keyword">NAME</span>, EMAIL)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'IBM'</span>, <span class="string">'contact@ibm.com'</span>),</span><br><span class="line">  (<span class="string">'Microsoft'</span>, <span class="string">'contact@microsoft.com'</span>),</span><br><span class="line">  (<span class="string">'Intel'</span>, <span class="string">'contact@intel.com'</span>);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMERS;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204161107381.png" alt="image-20201204161107381" style="zoom:80%;">
<br>
<br>
<h4 id="upsert-문-실습-do-nothing"><a class="markdownIt-Anchor" href="#upsert-문-실습-do-nothing"></a> &gt;&gt; UPSERT 문 실습 – DO NOTHING</h4>
<p><strong>DO NOTHING:</strong>  INSERT 액션이 충돌 시 (기존에 존재할 경우) 아무것도 안함</p>
<br>
<p><strong>[MISSION]</strong>  Microsoft(기존에 존재하는 NAME)에 EMAIL 주소 추가</p>
<ul>
<li>'Microsoft’라는 NAME이 이미 존재하므로 NAME의 UNIQUE 조건과 충돌</li>
<li>이런 경우에 아무 액션도 취하지 않음 (즉, 변화 없음)</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CUSTOMERS (<span class="keyword">NAME</span>, EMAIL)</span><br><span class="line">     <span class="keyword">VALUES</span> (<span class="string">'Microsoft'</span>,</span><br><span class="line">             <span class="string">'hotline@microsoft.com'</span>)</span><br><span class="line"><span class="keyword">ON</span> CONFLICT (<span class="keyword">NAME</span>)      <span class="comment">-- 충돌 시(기존에 존재할 경우)</span></span><br><span class="line"><span class="keyword">DO</span> <span class="keyword">NOTHING</span>;             <span class="comment">-- 아무 것도 안함</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201204161107381.png" alt="image-20201204161107381" style="zoom:80%;">
<br>
<ul>
<li>해당 DO NOTHING 명령어 없으면 SQL ERROR 발생</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CUSTOMERS (<span class="keyword">NAME</span>, EMAIL)</span><br><span class="line">     <span class="keyword">VALUES</span> (<span class="string">'Microsoft'</span>,</span><br><span class="line">             <span class="string">'hotline@microsoft.com'</span>)</span><br><span class="line"><span class="keyword">ON</span> CONFLICT (<span class="keyword">NAME</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207095200026.png" alt="image-20201207095200026" style="zoom: 80%;">
<br>
<br>
<h4 id="upsert-문-실습-update"><a class="markdownIt-Anchor" href="#upsert-문-실습-update"></a> &gt;&gt; UPSERT 문 실습 – UPDATE</h4>
<p><strong>UPDATE:</strong>  INSERT 액션이 충돌 시 (기존에 존재할 경우) UPDATE 함</p>
<br>
<p><strong>[MISSION]</strong>  Microsoft(기존에 존재하는 NAME)에 EMAIL 주소 추가</p>
<ul>
<li>
<p>'Microsoft’라는 NAME이 이미 존재하므로 NAME의 UNIQUE 조건과 충돌</p>
</li>
<li>
<p>이런 경우에 데이터를 UPDATE함</p>
</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> CUSTOMERS (<span class="keyword">NAME</span>, EMAIL)</span><br><span class="line">     <span class="keyword">VALUES</span> (<span class="string">'Microsoft'</span>,</span><br><span class="line">             <span class="string">'hotline@microsoft.com'</span>)</span><br><span class="line"><span class="keyword">ON</span> CONFLICT (<span class="keyword">NAME</span>)       <span class="comment">-- 충돌 검증 컬럼</span></span><br><span class="line">  <span class="keyword">DO</span> <span class="keyword">UPDATE</span></span><br><span class="line">        <span class="keyword">SET</span> EMAIL = EXCLUDED.EMAIL || <span class="string">'; '</span> || CUSTOMERS.EMAIL;</span><br><span class="line">            <span class="comment">-- EXCLUDED.EMAIL은 위에서 INSERT 시도한 EMAIL값을 가리킴</span></span><br><span class="line">            </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207102128506.png" alt="image-20201207102128506" style="zoom:80%;">
<br>
<br>
<h2 id="3-export-작업"><a class="markdownIt-Anchor" href="#3-export-작업"></a> <strong>3. EXPORT 작업</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>EXPORT는 테이블의 데이터를 다른 형태의 데이터로 추출하는 작업이다. 대표적으로 CSV 형식으로 가장 많이 추출한다.</p>
<br>
<h3 id="3-2-export-작업-실습"><a class="markdownIt-Anchor" href="#3-2-export-작업-실습"></a> 3-2. EXPORT 작업 실습</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DATEGORY;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207110518434.png" alt="image-20201207110518434" style="zoom:80%;">
<br>
<h4 id="실습-엑셀csv-형식으로-출력"><a class="markdownIt-Anchor" href="#실습-엑셀csv-형식으로-출력"></a> &gt;&gt; 실습 – 엑셀(.CSV) 형식으로 출력</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY (CATEGORY_ID, NAME, LAST_UPDATE)  <span class="comment">-- 추출할 테이블과 컬럼을 지정</span></span><br><span class="line">TO 'E:\Study_SQL\DB_CATEGORY.csv'               <span class="comment">-- 추출한 데이터를 저장할 파일을 지정</span></span><br><span class="line">DELIMITER ','       <span class="comment">-- 구분자를 지정</span></span><br><span class="line">CSV HEADER;         <span class="comment">-- 파일 형식을 지정</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>저장 디랙토리(폴더)는 반드시 미리 존재해야 한다 (여기서는 ‘E:\Study_SQL’)</li>
</ul>
<br>
<img src="/images/S-SQL-Manipulation-2/image-20201207111613206.png" alt="image-20201207111613206" style="zoom: 60%;">
<br>
<img src="/images/S-SQL-Manipulation-2/image-20201207111745428.png" alt="image-20201207111745428" style="zoom:50%;">
<br>
<h4 id="실습-텍스트txt-파일로-출력"><a class="markdownIt-Anchor" href="#실습-텍스트txt-파일로-출력"></a> &gt;&gt; 실습 – 텍스트(.TXT) 파일로 출력</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY(CATEGORY_ID, NAME, LAST_UPDATE)</span><br><span class="line">TO 'E:\Study_SQL\DB_CATEGORY.txt'</span><br><span class="line">DELIMITER '|'</span><br><span class="line">CSV HEADER;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207112258741.png" alt="image-20201207112258741" style="zoom:60%;">
<br>
<img src="/images/S-SQL-Manipulation-2/image-20201207112337940.png" alt="image-20201207112337940" style="zoom:50%;">
<br>
<h4 id="실습-컬럼명-없이-출력"><a class="markdownIt-Anchor" href="#실습-컬럼명-없이-출력"></a> &gt;&gt; 실습 – 컬럼명 없이 출력</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY(CATEGORY_ID, NAME, LAST_UPDATE)</span><br><span class="line">TO 'E:\Study_SQL\DB_CATEGORY_2.csv'</span><br><span class="line">DELIMITER ','</span><br><span class="line">CSV;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207112700637.png" alt="image-20201207112700637" style="zoom:50%;">
<br>
<br>
<h2 id="4-import-작업"><a class="markdownIt-Anchor" href="#4-import-작업"></a> <strong>4. IMPORT 작업</strong></h2>
<h3 id="4-1-개념"><a class="markdownIt-Anchor" href="#4-1-개념"></a> 4-1. 개념</h3>
<p>IMPORT는 다른 형식의 데이터를 테이블에 넣는 작업을 말한다. 데이터 구축 시 자주 사용 된다.</p>
<br>
<h3 id="4-2-import-작업-실습"><a class="markdownIt-Anchor" href="#4-2-import-작업-실습"></a> 4-2. IMPORT 작업 실습</h3>
<h4 id="실습-준비-2"><a class="markdownIt-Anchor" href="#실습-준비-2"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CATEGORY_IMPORT</span><br><span class="line">(</span><br><span class="line">  CATEGORY_ID <span class="built_in">SERIAL</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">"NAME"</span> <span class="built_in">VARCHAR</span>(<span class="number">25</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  LAST_UPDATE <span class="built_in">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NOW</span>(),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> CATEGORY_IMPORT_PKEY PRIMARY <span class="keyword">KEY</span> (CATEGORY_ID)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207113847655.png" alt="image-20201207113847655">
<br>
<h4 id="실습-엑셀파일을-적재"><a class="markdownIt-Anchor" href="#실습-엑셀파일을-적재"></a> &gt;&gt; 실습 – 엑셀파일을 적재</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY_IMPORT(CATEGORY_ID, "NAME", LAST_UPDATE)  <span class="comment">-- 적재할 테이블 및 컬럼을 지정</span></span><br><span class="line">FROM 'E:\Study_SQL\DB_CATEGORY.csv'                     <span class="comment">-- 적재할 파일을 지정</span></span><br><span class="line">DELIMITER ','        <span class="comment">-- 적재할 파일의 구분자를 알려준다</span></span><br><span class="line">CSV HEADER;          <span class="comment">-- 파일 형식을 지정한다</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207114306348.png" alt="image-20201207114306348" style="zoom:80%;">
<br>
<h4 id="실습-텍스트-파일을-적재"><a class="markdownIt-Anchor" href="#실습-텍스트-파일을-적재"></a> &gt;&gt; 실습 – 텍스트 파일을 적재</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 실습 전 먼저 데이터를 삭제해야 함</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY_IMPORT(CATEGORY_ID, "NAME", LAST_UPDATE)</span><br><span class="line">FROM 'E:\Study_SQL\DB_CATEGORY.txt'</span><br><span class="line">DELIMITER '|'</span><br><span class="line">CSV HEADER;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207130748150.png" alt="image-20201207130748150" style="zoom:80%;">
<br>
<h4 id="실습-컬럼명이-없는-엑셀-파일-적재"><a class="markdownIt-Anchor" href="#실습-컬럼명이-없는-엑셀-파일-적재"></a> &gt;&gt; 실습 – 컬럼명이 없는 엑셀 파일 적재</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 실습 전 먼저 데이터를 삭제해야 함</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY_IMPORT(CATEGORY_ID, "NAME", LAST_UPDATE)</span><br><span class="line">FROM 'E:\Study_SQL\DB_CATEGORY_2.csv'</span><br><span class="line">DELIMITER ','</span><br><span class="line">CSV;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207131800879.png" alt="image-20201207131800879" style="zoom:80%;">
<br>
<ul>
<li>
<p>DB_CATEGOROY_2.csv 파일은 컬럼명(header) 이 존재하지 않으므로 반드시 HEADER를 제거해야한다.</p>
</li>
<li>
<p>HEADER를 제거하지 않을 경우 가장 첫번째 데이터를 헤더로 인식하여 한건이 누락된다</p>
</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line">COPY CATEGORY_IMPORT(CATEGORY_ID, "NAME", LAST_UPDATE)</span><br><span class="line">FROM 'E:\Study_SQL\DB_CATEGORY_2.csv'</span><br><span class="line">DELIMITER ','</span><br><span class="line">CSV HEADER;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CATEGORY_IMPORT;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Manipulation-2/image-20201207132305818.png" alt="image-20201207132305818" style="zoom:80%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 8. Manipulation</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Manipulation</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 데이터 조회</title>
    <url>/2020/11/06/S-SQL-Selecting/</url>
    <content><![CDATA[<h1 id="데이터-조회"><a class="markdownIt-Anchor" href="#데이터-조회"></a> 데이터 조회</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-select-%EB%AC%B8"><strong>1. SELECT 문</strong></a>
<ul>
<li><a href="#1-1-%EC%9A%A9%EB%8F%84">1-1. 용도</a></li>
<li><a href="#1-2-select-%EB%AC%B8%EB%B2%95">1-2. SELECT 문법</a></li>
<li><a href="#1-3-select-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">1-3. SELECT 문 실습</a></li>
</ul>
</li>
<li><a href="#2-order-by-%EB%AC%B8"><strong>2. ORDER BY 문</strong></a>
<ul>
<li><a href="#2-1-%EC%9A%A9%EB%8F%84">2-1. 용도</a></li>
<li><a href="#2-2-order-by-%EB%AC%B8%EB%B2%95">2-2. ORDER BY 문법</a></li>
<li><a href="#2-3-order-by-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">2-3. ORDER BY 문 실습</a>
<ul>
<li><a href="#1-%EB%8B%A8%EC%9D%BC-%EA%B8%B0%EC%A4%80-%EC%A0%95%EB%A0%AC">1) 단일 기준 정렬</a></li>
<li><a href="#2-%EB%8B%A4%EC%A4%91-%EA%B8%B0%EC%A4%80-n%EC%B0%A8-%EC%A0%95%EB%A0%AC">2) 다중 기준 N차 정렬</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-select-distinct-%EB%AC%B8"><strong>3. SELECT DISTINCT 문</strong></a>
<ul>
<li><a href="#3-1-%EC%9A%A9%EB%8F%84">3-1. 용도</a></li>
<li><a href="#3-2-select-distinct-%EB%AC%B8%EB%B2%95">3-2. SELECT DISTINCT 문법</a>
<ul>
<li><a href="#1-%EB%8B%A8%EC%9D%BC-%EC%BB%AC%EB%9F%BC">1) 단일 컬럼</a></li>
<li><a href="#2-%EB%8B%A4%EC%A4%91-%EC%BB%AC%EB%9F%BC">2) 다중 컬럼</a></li>
</ul>
</li>
<li><a href="#3-3-select-distinct-%EB%AC%B8-%EC%8B%A4%EC%8A%B5">3-3.  SELECT DISTINCT 문 실습</a>
<ul>
<li><a href="#0-%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%83%9D%EC%84%B1">0) 실습 준비 (데이터 생성)</a></li>
<li><a href="#1-%EB%8B%A8%EC%9D%BC-%EC%BB%AC%EB%9F%BC-2">1) 단일 컬럼</a></li>
<li><a href="#2-%EB%8B%A4%EC%A4%91-%EC%BB%AC%EB%9F%BC-2">2) 다중 컬럼</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-select-문"><a class="markdownIt-Anchor" href="#1-select-문"></a> <strong>1. SELECT 문</strong></h2>
<h3 id="1-1-용도"><a class="markdownIt-Anchor" href="#1-1-용도"></a> 1-1. 용도</h3>
<p>SELECT 문은 일반적으로 테이플에 저장된 데이터를 가져오는 데 쓰인다.</p>
<p>SQL에서 가장 많이 쓰이는 문장이다.</p>
<br>
<h3 id="1-2-select-문법"><a class="markdownIt-Anchor" href="#1-2-select-문법"></a> 1-2. SELECT 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  COLUMN_1,</span><br><span class="line">  COLUMN_2,</span><br><span class="line">  중략...</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-3-select-문-실습"><a class="markdownIt-Anchor" href="#1-3-select-문-실습"></a> 1-3. SELECT 문 실습</h3>
<p><strong>&gt; 전체 컬럼을 조회</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Selecting/image-20201106151704452.png" alt="image-20201106151704452"></p>
<br>
<p><strong>&gt; 지정한 컬럼을 조회</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME,</span><br><span class="line">  EMAIL</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Selecting/image-20201106151807348.png" alt="image-20201106151807348"></p>
<p><strong>[주의]</strong> 여러 컬럼을 조회할 때, SELECT 명령어 뒤 컬럼 이름을 입력 시:</p>
<ul>
<li>마지막 컬럼명을 제외한 모든 컬럼명 뒤에 따움표( , )를 붙여야 함</li>
<li>마지막 컬럼명 뒤에는 아무것도 입력하지 않는다</li>
</ul>
<br>
<p><strong>&gt; 테이블 Alias(별칭) 활용하기</strong></p>
<p>테이블에 별칭을 지정하면 코드의 가독성이 높아진다.  특히 테이블이 많아  지면, 선택한 컬럼이 어느 테이블에서 추출한 건지를 햇갈릴 수 있다. 테이블 별칭을 활용하면 보다 쉽게 구별할 수 있다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.FIRST_NAME,</span><br><span class="line">  A.LAST_NAME,</span><br><span class="line">  A.EMAIL</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMER A <span class="comment">-- OR "CUSTOMER AS A"</span></span><br></pre></td></tr></tbody></table></figure>
<p><strong>[주의]</strong> 테이블 Alias는 현재의 SELECT 문장에 대해서만 유효하다.</p>
<br>
<br>
<h2 id="2-order-by-문"><a class="markdownIt-Anchor" href="#2-order-by-문"></a> <strong>2. ORDER BY 문</strong></h2>
<h3 id="2-1-용도"><a class="markdownIt-Anchor" href="#2-1-용도"></a> 2-1. 용도</h3>
<p>ORDER BY 문은 SELECT 문에서 가져온 데이터를 정렬하는 데 사용한다.</p>
<p>업무 처리상 매우 중요한 기능이다.</p>
<br>
<h3 id="2-2-order-by-문법"><a class="markdownIt-Anchor" href="#2-2-order-by-문법"></a> 2-2. ORDER BY 문법</h3>
<p>ORDER BY를 활용하면 가져온 데이터를 특정 컬럼을 기준으로 오름차순(ASC) 혹은 내림차순(DESC)으로 정렬할 수 있다.</p>
<ul>
<li>
<p>컬럼명 뒤에 <code>ASC</code>를 불이면 – 오름차순으로 정렬</p>
</li>
<li>
<p>컬럼명 뒤에 <code>DESC</code>를 불이면 – 내림차순으로 정렬</p>
</li>
<li>
<p>컬럼명 뒤에 아무것도 안 불이면 – Default로 오름차순으로 정렬</p>
</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  COLUMN_1,</span><br><span class="line">  COLUMN_2</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TAL_NAME</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span>   <span class="comment">-- Default: 오름차순(ASC)</span></span><br><span class="line">  COLUMN_1 <span class="keyword">ASC</span>,    <span class="comment">-- 오름차순 정렬</span></span><br><span class="line">  COLUMN_2 <span class="keyword">DESC</span>   <span class="comment">-- 내림차순 정렬</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-order-by-문-실습"><a class="markdownIt-Anchor" href="#2-3-order-by-문-실습"></a> 2-3. ORDER BY 문 실습</h3>
<h4 id="1-단일-기준-정렬"><a class="markdownIt-Anchor" href="#1-단일-기준-정렬"></a> 1) 단일 기준 정렬</h4>
<p>단일 컬럼을 기준으로 한 번의 정렬만 실시함.</p>
<br>
<p><strong>&gt; ASC(오름차순) 정렬</strong></p>
<ul>
<li>
<p>ORDER BY 미사용 시 (미정렬)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Selecting/image-20201106152037841.png" alt="image-20201106152037841" style="zoom:80%;">
<br>
</li>
<li>
<p>“FIRST_NAME” 기준으로 오름차순 정렬</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- ASC 명령어 명시</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  FIRST_NAME <span class="keyword">ASC</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- Default로 정렬</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  FIRST_NAME</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Selecting/image-20201106152244978.png" alt="image-20201106152244978" style="zoom:80%;">
</li>
</ul>
<br>
<p>**&gt; DESC(내림차순) 정렬 **</p>
<ul>
<li>
<p>"FIRST_NAME"기준으로 내림차순 정렬</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  FIRST_NAME <span class="keyword">DESC</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Selecting/image-20201106152323551.png" alt="image-20201106152323551" style="zoom:80%;">
</li>
</ul>
<br>
<br>
<h4 id="2-다중-기준-n차-정렬"><a class="markdownIt-Anchor" href="#2-다중-기준-n차-정렬"></a> 2) 다중 기준 N차 정렬</h4>
<p>여러 컬럼을 기준으로 N차 정렬을 실시함.</p>
<ul>
<li>
<p>COLUMN_1 기준으로 1차 정렬한 다음,</p>
</li>
<li>
<p>COLUMN_1의 값이 동일한 데이터에 대해서 COLUMN_2 기준으로 2차 정렬을 실시한다,</p>
</li>
<li>
<p>(위 규칙대로 계속 실행)…</p>
</li>
</ul>
<br>
<p><strong>&gt; ASC(오름차순) + DESC(내림차순) 정렬</strong></p>
<ul>
<li>
<p>먼저 FIRST_NAME 오름차순으로 정렬, FIRST_NAME이 동일한 데이터는 LAST_NAME 내림차순으로 정렬</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  FIRST_NAME <span class="keyword">DESC</span>,  <span class="comment">-- 1차 정렬 (FIRST_NAME 내림차순)</span></span><br><span class="line">  LAST_NAME <span class="keyword">ASC</span>  <span class="comment">-- 2차 정렬 (LAST_NAME 오름차순)</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Selecting/image-20201106152444007.png" alt="image-20201106152444007" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p>ORDER BY 기준을 정할 때, 컬럼명 내신에 SELECT 시 컬럼이 들어오는 순서로 대체해도 된다. (하지만 가독성을 위해 위 방법 더 추천)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  <span class="number">1</span> <span class="keyword">DESC</span>,  <span class="comment">-- 1: FIRST_NAME (내림차순)</span></span><br><span class="line">  <span class="number">2</span> <span class="keyword">ASC</span>    <span class="comment">-- 2: LAST_NAME (오름차순)</span></span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<br>
<h2 id="3-select-distinct-문"><a class="markdownIt-Anchor" href="#3-select-distinct-문"></a> <strong>3. SELECT DISTINCT 문</strong></h2>
<h3 id="3-1-용도"><a class="markdownIt-Anchor" href="#3-1-용도"></a> 3-1. 용도</h3>
<p>SELECT 시 DISTINCT를 사용하면 중복 값을 제외한 결과값이 출력된다. 즉 같은 결과의 행이라면 중복을 제거할 수 있다.</p>
<br>
<h3 id="3-2-select-distinct-문법"><a class="markdownIt-Anchor" href="#3-2-select-distinct-문법"></a> 3-2. SELECT DISTINCT 문법</h3>
<h4 id="1-단일-컬럼"><a class="markdownIt-Anchor" href="#1-단일-컬럼"></a> 1) 단일 컬럼</h4>
<ul>
<li>
<p><strong>단일 컬럼</strong>을 추출할 때 <strong>해당 컬럼의 값이 중복된 행을 제거</strong>하여 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_1의 값이 중복 값 존재 시 중복 값을 제거</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> COLUMN_1</span><br><span class="line"><span class="keyword">FROM</span> TABLE_NAME</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<h4 id="2-다중-컬럼"><a class="markdownIt-Anchor" href="#2-다중-컬럼"></a> 2) 다중 컬럼</h4>
<ul>
<li>
<p><strong>다중 컬럼</strong>을 추출할 때 <strong><font color="red">모든 컬럼의 값이 모두 중복 된 행</font>을 제거</strong>하여 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- COLUMN_1 + COLUMN_2의 값이 중복 값 존재 시 중복 값을 제거 </span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> COLUMN_1, COLUMN_2</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  TABLE_NAME</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>&gt;&gt; 중복 값 제거 후 정렬하여 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 결과를 명확하게 하기 위해 ORDER BY 절 사용</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> COLUMN_1, COLUMN_2</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  COLUMN_1,   <span class="comment">-- default로 오름차순 정렬</span></span><br><span class="line">  COLUMN_2    <span class="comment">-- default로 오름차순 정렬</span></span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<ul>
<li>
<p><strong>다중 컬럼</strong>을 추출할 때 <strong><font color="red">특정 컬럼의 값을 기준으로</font> 중복된 행을 제거</strong>하여 추출 (DISTINCT ON 절)</p>
<p><strong>[제거 규칙]</strong>  기준 컬럼의 값이 동일한 행 중에서 하나의 행만 보류</p>
<p>​                         - 기본적으로 중복된 행 중의 첫 번째를 보류</p>
<p>​                         - ORDER BY 문을 사용할 경우 정렬 후의 첫 번째 행을 보류</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">DISTINCT</span> <span class="keyword">ON</span> (COLUMN_1)</span><br><span class="line">               COLUMN_1, COLUMN_2</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  <span class="keyword">DISTINCT</span> <span class="keyword">ON</span> (COLUMN_1)</span><br><span class="line">               COLUMN_1, COLUMN_2</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  TABLE_NAME</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  COLUMN_1 </span><br><span class="line">  COLUMN_2</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<br>
<h3 id="3-3-select-distinct-문-실습"><a class="markdownIt-Anchor" href="#3-3-select-distinct-문-실습"></a> 3-3.  SELECT DISTINCT 문 실습</h3>
<h4 id="0-실습-준비-데이터-생성"><a class="markdownIt-Anchor" href="#0-실습-준비-데이터-생성"></a> 0) 실습 준비 (데이터 생성)</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T1 (<span class="keyword">ID</span> <span class="built_in">SERIAL</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>, BCOLOR <span class="built_in">VARCHAR</span>, FCOLOR <span class="built_in">VARCHAR</span>);</span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line">  <span class="keyword">INTO</span> T1(BCOLOR, FCOLOR)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">'red'</span>, <span class="string">'red'</span>),</span><br><span class="line">  (<span class="string">'red'</span>, <span class="string">'red'</span>),</span><br><span class="line">  (<span class="string">'red'</span>, <span class="literal">NULL</span>),</span><br><span class="line">  (<span class="literal">NULL</span>, <span class="string">'red'</span>),</span><br><span class="line">  (<span class="string">'red'</span>, <span class="string">'green'</span>),</span><br><span class="line">  (<span class="string">'red'</span>, <span class="string">'blue'</span>),</span><br><span class="line">  (<span class="string">'green'</span>, <span class="string">'red'</span>),</span><br><span class="line">  (<span class="string">'green'</span>, <span class="string">'blue'</span>),</span><br><span class="line">  (<span class="string">'green'</span>, <span class="string">'green'</span>),</span><br><span class="line">  (<span class="string">'blue'</span>, <span class="string">'red'</span>),</span><br><span class="line">  (<span class="string">'blue'</span>, <span class="string">'green'</span>),</span><br><span class="line">  (<span class="string">'blue'</span>, <span class="string">'blue'</span>)</span><br><span class="line">;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  *</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  T1</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Selecting/image-20201106152615942.png" alt="image-20201106152615942" style="zoom:80%;">
<br>
<h4 id="1-단일-컬럼-2"><a class="markdownIt-Anchor" href="#1-단일-컬럼-2"></a> 1) 단일 컬럼</h4>
<ul>
<li>
<p>BCOLOR 컬럼의 값이 중복된 행을 제거 + BCOLOR 기준으로 정렬하여 추출</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> BCOLOR</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  T1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  BCOLOR</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<p>​                                                               <img src="/images/S-SQL-Selecting/image-20201106152737312.png" alt="image-20201106152737312"></p>
<br>
<h4 id="2-다중-컬럼-2"><a class="markdownIt-Anchor" href="#2-다중-컬럼-2"></a> 2) 다중 컬럼</h4>
<ul>
<li>
<p>BCOLOR &amp; FCOLOR 두 컬럼을 추출 시:</p>
<ol>
<li>
<p><strong>두 컬럼 의 값이 <font color="red">모두 중복된 행</font>을 제거</strong></p>
</li>
<li>
<p>BCOLOR &amp; FCOLOR 기준으로 <strong>정렬하여 추출</strong></p>
</li>
</ol>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> BCOLOR, </span><br><span class="line">           FCOLOR</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  T1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BCOLOR,</span><br><span class="line">  FCOLOR</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<p>​                                            <img src="/images/S-SQL-Selecting/image-20201106160613919.png" alt="image-20201106160613919" style="zoom:80%;"></p>
<br>
<ul>
<li>
<p>BCOLOR &amp; FCOLOR 두 컬럼을 추출 시:</p>
<ol>
<li>
<p><strong><font color="red">BCOLOR의  값</font>을 기준으로 <font color="red">중복된 행</font>을 제거</strong></p>
</li>
<li>
<ul>
<li>
<p>미정렬 시 BCOLOR값이 동일한 행 중에 첫 번째 행만 보류</p>
</li>
<li>
<p>BCOLOR, FCOLOR 기준으로 정렬 시 FCOLOR의 첫 번째 값을 가진 행만 보류</p>
</li>
</ul>
</li>
</ol>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 미정렬 시</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> <span class="keyword">ON</span> (BCOLOR)</span><br><span class="line">               BCOLOR, FCOLOR</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  T1</span><br></pre></td></tr></tbody></table></figure>
<p>​                                     <img src="/images/S-SQL-Selecting/image-20201106160706340.png" alt="image-20201106160706340" style="zoom:80%;"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- BCOLOR, FCOLOR 기준으로 정렬  (FCOLOR 오름차순)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> <span class="keyword">ON</span> (BCOLOR)</span><br><span class="line">               BCOLOR, FCOLOR</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  T1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BCOLOR, </span><br><span class="line">  FCOLOR</span><br></pre></td></tr></tbody></table></figure>
<p>​                                     <img src="/images/S-SQL-Selecting/image-20201106160800896.png" alt="image-20201106160800896" style="zoom:80%;"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- BCOLOR, FCOLOR 기준으로 정렬  (FCOLOR 내림차순)</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">DISTINCT</span> <span class="keyword">ON</span> (BCOLOR)</span><br><span class="line">               BCOLOR, FCOLOR</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  T1</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  BCOLOR, </span><br><span class="line">  FCOLOR <span class="keyword">DESC</span></span><br></pre></td></tr></tbody></table></figure>
<p>​                                     <img src="/images/S-SQL-Selecting/image-20201106160853425.png" alt="image-20201106160853425" style="zoom:80%;"></p>
</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 1. Data Selecting</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Selecting</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 서브쿼리 (SubQuery)</title>
    <url>/2020/11/27/S-SQL-SubQuery/</url>
    <content><![CDATA[<h1 id="서브쿼리"><a class="markdownIt-Anchor" href="#서브쿼리"></a> 서브쿼리</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC%EB%9E%80"><strong>1. 서브쿼리란?</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%9D%B4%ED%95%B4">1-2. 서브쿼리 이해</a>
<ul>
<li><a href="#mission">[MISSION]</a></li>
<li><a href="#method-1-%EB%A9%94%EC%9D%B8%EC%BF%BC%EB%A6%AC-2%EA%B0%9C-%EC%82%AC%EC%9A%A9">&gt;&gt; Method 1: 메인쿼리 2개 사용</a></li>
<li><a href="#method-2-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%82%AC%EC%9A%A9">&gt;&gt; Method 2: 서브쿼리 사용</a>
<ul>
<li><a href="#1-%EC%A4%91%EC%B2%A9-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC%EC%9D%98-%ED%99%9C%EC%9A%A9">(1) 중첩 서브쿼리의 활용</a></li>
<li><a href="#2-%EC%9D%B8%EB%9D%BC%EC%9D%B8-%EB%B7%B0%EC%9D%98-%ED%99%9C%EC%9A%A9">(2) 인라인 뷰의 활용</a></li>
<li><a href="#3-%EC%8A%A4%EC%B9%BC%EB%9D%BC-%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC%EC%9D%98-%ED%99%9C%EC%9A%A9">(3) 스칼라 서브쿼리의 활용</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-any-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>2. ANY 연산자</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-any-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">2-2. ANY 연산자 실습</a>
<ul>
<li><a href="#%EC%A4%80%EB%B9%84">&gt;&gt; 준비</a></li>
<li><a href="#mission-1">&gt;&gt; MISSION 1</a></li>
<li><a href="#mission-2">&gt;&gt; MISSION 2</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-all-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>3. ALL 연산자</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-all-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">3-2. ALL 연산자 실습</a>
<ul>
<li><a href="#mission-1-2">&gt;&gt; MISSION 1</a></li>
<li><a href="#mission-2-2">&gt;&gt; MISSION 2</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-exists-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>4. EXISTS 연산자</strong></a>
<ul>
<li><a href="#4-1-%EA%B0%9C%EB%85%90">4-1. 개념</a></li>
<li><a href="#4-2-exists-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">4-2. EXISTS 연산자 실습</a>
<ul>
<li><a href="#mission-2">&gt;&gt; MISSION</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#5-not-exists-%EC%97%B0%EC%82%B0%EC%9E%90"><strong>5. NOT EXISTS 연산자</strong></a>
<ul>
<li><a href="#5-1-%EA%B0%9C%EB%85%90">5-1. 개념</a></li>
<li><a href="#5-2-not-exists-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%8B%A4%EC%8A%B5">5-2. NOT EXISTS 연산자 실습</a>
<ul>
<li><a href="#mission-3">&gt;&gt; MISSION</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-서브쿼리란"><a class="markdownIt-Anchor" href="#1-서브쿼리란"></a> <strong>1. 서브쿼리란?</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>서브쿼리는 SQL문 내에서 메인 쿼리가 아닌 하위에 존재하는 쿼리를 말한다.</p>
<p>서브쿼리를 활용함으로써 다양한 결과를 도출할 수 있다.</p>
<br>
<h3 id="1-2-서브쿼리-이해"><a class="markdownIt-Anchor" href="#1-2-서브쿼리-이해"></a> 1-2. 서브쿼리 이해</h3>
<h4 id="mission"><a class="markdownIt-Anchor" href="#mission"></a> [MISSION]</h4>
<p><strong>FILM 테이블에서 RENTAL_RATE가 평균 보다 큰 집합 구하기</strong></p>
<img src="/images/S-SQL-SubQuery/image-20201123221816036.png" alt="image-20201123221816036" style="zoom:80%;">
<br>
<br>
<h4 id="method-1-메인쿼리-2개-사용"><a class="markdownIt-Anchor" href="#method-1-메인쿼리-2개-사용"></a> &gt;&gt; Method 1: 메인쿼리 2개 사용</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">AVG</span>(RENTAL_RATE)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-SubQuery/image-20201123222059927.png" alt="image-20201123222059927"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  RENTAL_RATE &gt; <span class="number">2.98</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201123222217182.png" alt="image-20201123222217182" style="zoom:80%;">
<br>
<p><strong>Q:</strong>  위 2개의 SQL문을 결합하여 하나의 SQL문으로 결과를 도출할 수 없을까?</p>
<p><strong>A:</strong>  서브쿼리를 사용하면 된다! (<strong>중첩 서브쿼리</strong>, <strong>인라인 뷰</strong>, <strong>스칼라 서브쿼리</strong>가 존재한다.)</p>
<br>
<h4 id="method-2-서브쿼리-사용"><a class="markdownIt-Anchor" href="#method-2-서브쿼리-사용"></a> &gt;&gt; Method 2: 서브쿼리 사용</h4>
<h5 id="1-중첩-서브쿼리의-활용"><a class="markdownIt-Anchor" href="#1-중첩-서브쿼리의-활용"></a> (1) 중첩 서브쿼리의 활용</h5>
<p><em><strong>중첩 서브쿼리 (Nested Subquery):</strong></em>  메인쿼리의 WHERE절에 나타나는 서브쿼리</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  RENTAL_RATE &gt; </span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="keyword">AVG</span>(RENTAL_RATE)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201123222217182.png" alt="image-20201123222217182" style="zoom:80%;">
<br>
<br>
<h5 id="2-인라인-뷰의-활용"><a class="markdownIt-Anchor" href="#2-인라인-뷰의-활용"></a> (2) 인라인 뷰의 활용</h5>
<p><em><strong>인라인 뷰 (Inline View):</strong></em> 메인쿼리의 FROM 절에 나타나는 서브쿼리 (서브쿼리 SELECT 절의 결과를 메인쿼리의 FROM 절에서 하나의 테이블처럼 사용)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.FILM_ID,</span><br><span class="line">  A.TITLE,</span><br><span class="line">  A.RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM A,</span><br><span class="line">  (</span><br><span class="line">   <span class="keyword">SELECT</span></span><br><span class="line">      <span class="keyword">AVG</span>(RENTAL_RATE) <span class="keyword">AS</span> AVG_RENTAL_RATE</span><br><span class="line">   <span class="keyword">FROM</span></span><br><span class="line">      FILM</span><br><span class="line">  ) B</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  A.RENTAL_RATE &gt; B.AVG_RENTAL_RATE;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201123222217182.png" alt="image-20201123222217182" style="zoom:80%;">
<br>
<br>
<h5 id="3-스칼라-서브쿼리의-활용"><a class="markdownIt-Anchor" href="#3-스칼라-서브쿼리의-활용"></a> (3) 스칼라 서브쿼리의 활용</h5>
<p><em><strong>스칼라 서브쿼리 (Scala Subquery):</strong></em>  SELECT의 리스트 안에 존재하는 서브쿼리</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  A.FILM_ID,</span><br><span class="line">  A.TITLE,</span><br><span class="line">  A.RENTAL_RATE</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">    A.FILM_ID,</span><br><span class="line">    A.TITLE,</span><br><span class="line">    A.RENTAL_RATE,</span><br><span class="line">    (</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="keyword">AVG</span>(L.RENTAL_RATE)</span><br><span class="line">       <span class="keyword">FROM</span> FILM L</span><br><span class="line">    ) <span class="keyword">AS</span> AVG_RENTAL_RATE</span><br><span class="line"> <span class="keyword">FROM</span> </span><br><span class="line">    FILM A</span><br><span class="line">) A</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  A.RENTAL_RATE &gt; A.AVG_RENTAL_RATE;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201123222217182.png" alt="image-20201123222217182" style="zoom:80%;">
<br>
<br>
<h2 id="2-any-연산자"><a class="markdownIt-Anchor" href="#2-any-연산자"></a> <strong>2. ANY 연산자</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>ANY 연산자는 주로 메인쿼리 WHERE절의 비교 조건식에서 서브쿼리와 함께 사용된다. 서브쿼리에 의해 반환된 값 집합과 비교할 때 한번이라도 조건에 만족한다면 TURE를 반환한다. (즉, 서브쿼리 결과 집합중의 어떤 한 값 보다만 어떻다라면 TRUE를 반환)</p>
<br>
<h3 id="2-2-any-연산자-실습"><a class="markdownIt-Anchor" href="#2-2-any-연산자-실습"></a> 2-2. ANY 연산자 실습</h3>
<img src="/images/S-SQL-SubQuery/image-20201124090317401.png" alt="image-20201124090317401" style="zoom: 67%;">
<br>
<br>
<h4 id="준비"><a class="markdownIt-Anchor" href="#준비"></a> &gt;&gt; 준비</h4>
<p><strong>먼저 영화 분류별 상영시간이 가장 긴 영화의 카테고리 ID 및 상영시간을 출력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  B.CATEGORY_ID,</span><br><span class="line">  <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM A,</span><br><span class="line">  FILM_CATEGORY B</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  A.FILM_ID = B.FILM_ID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">  B.CATEGORY_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  B.CATEGORY_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201124095000723.png" alt="image-20201124095000723" style="zoom:80%;">
<br>
<br>
<h4 id="mission-1"><a class="markdownIt-Anchor" href="#mission-1"></a> &gt;&gt; MISSION 1</h4>
<p><strong>영화의 상영시간이 위 집합 중 어느 하나의(ANY) 값 보다만 크거나 같으면 추출 [즉, 위에서 추출된 값 들의 최소값 보다만 크거나 같으면 추출]</strong></p>
<blockquote>
<p>" &gt;= ANY " 활용</p>
</blockquote>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  TITLE, <span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="keyword">LENGTH</span> &gt;= <span class="keyword">ANY</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)        <span class="comment">-- SELECT한 변수는 하나여야 함</span></span><br><span class="line">    <span class="keyword">FROM</span> FILM A,</span><br><span class="line">         FILM_CATEGORY B</span><br><span class="line">   <span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> B.CATEGORY_ID</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 결과적으로 상영시간이 MIN(max) = 178 min 보다 긴거나 같은 영화를 모두 추출</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201124101911386.png" alt="image-20201124101911386" style="zoom:80%;">
<br>
<ul>
<li>
<p>서브쿼리가 반환되는 결과가 하나의 값이 아닌 여러 값의 집합이기 때문에 ANY 연산자를 안 쓰면 ERROR가 난다.  (명확한 기준이 없기 때문)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  TITLE, <span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="keyword">LENGTH</span> &gt;=</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)</span><br><span class="line">    <span class="keyword">FROM</span> FILM A,</span><br><span class="line">         FILM_CATEGORY B</span><br><span class="line">   <span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> B.CATEGORY_ID</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201124102530072.png" alt="image-20201124102530072">
<br>
</li>
</ul>
<br>
<h4 id="mission-2"><a class="markdownIt-Anchor" href="#mission-2"></a> &gt;&gt; MISSION 2</h4>
<p><strong>영화의 상영시간이 위에서 추출된 값들과 동일한 영화만 추출  [즉, 위 집합 중 어느 하나의(ANY) 값과 같으면 추출]</strong></p>
<blockquote>
<p>" = ANY " 활용</p>
</blockquote>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  TITLE, <span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="keyword">LENGTH</span> = <span class="keyword">ANY</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)</span><br><span class="line">    <span class="keyword">FROM</span> FILM A,</span><br><span class="line">         FILM_CATEGORY B</span><br><span class="line">   <span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> B.CATEGORY_ID</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201124104225665.png" alt="image-20201124104225665" style="zoom:80%;">
<br>
<br>
<ul>
<li>
<p>"=ANY"는 "IN"과 동일</p>
<p>의미: 추출된 결과 집합 리스트 안의 값들과 매칭되는 값들을 찾는다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  TITLE, <span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="keyword">LENGTH</span> <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)</span><br><span class="line">    <span class="keyword">FROM</span> FILM A,</span><br><span class="line">         FILM_CATEGORY B</span><br><span class="line">   <span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> B.CATEGORY_ID</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201124104225665.png" alt="image-20201124104225665" style="zoom:80%;">
<br>
</li>
</ul>
<br>
<h2 id="3-all-연산자"><a class="markdownIt-Anchor" href="#3-all-연산자"></a> <strong>3. ALL 연산자</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>ALL 연산자는 주로 메인쿼리 WHERE절의 비교 조건식에서 서브쿼리와 함께 사용된다. 서브쿼리에 의해 반환된 값 집합과 비교할 때 모두 조건에 만족해야만 TURE를 반환한다. (즉, 서브쿼리 결과 집합중의 모든 값 보다 어떻다해야 TRUE를 반환)</p>
<br>
<h3 id="3-2-all-연산자-실습"><a class="markdownIt-Anchor" href="#3-2-all-연산자-실습"></a> 3-2. ALL 연산자 실습</h3>
<img src="/images/S-SQL-SubQuery/image-20201124090317401.png" alt="image-20201124090317401" style="zoom:67%;">
<br>
<br>
<h4 id="mission-1-2"><a class="markdownIt-Anchor" href="#mission-1-2"></a> &gt;&gt; MISSION 1</h4>
<p><strong>[준비] : 먼저 영화 분류별 상영시간이 가장 긴 영화의 카테고리 ID 및 상영시간을 출력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  B.CATEGORY_ID,</span><br><span class="line">  <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM A,</span><br><span class="line">  FILM_CATEGORY B</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  A.FILM_ID = B.FILM_ID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">  B.CATEGORY_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  B.CATEGORY_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201124095000723.png" alt="image-20201124095000723" style="zoom:80%;">
<br>
<p><strong>[MISSION] : 영화의 상영시간이 위 집합의 모든(ALL) 값 보다 크거나 같아야 추출 [즉, 위에서 추출된 값 들의 최대값 보다 크거나 같아야 추출]</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  TITLE, <span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  <span class="keyword">LENGTH</span> &gt;= <span class="keyword">ALL</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">MAX</span>(<span class="keyword">LENGTH</span>)</span><br><span class="line">    <span class="keyword">FROM</span> FILM A,</span><br><span class="line">         FILM_CATEGORY B</span><br><span class="line">   <span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span>  B.CATEGORY_ID</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 결과적으로 상영시간이 MAX(max) = 185 min 보다 긴거나 같은 영화를 추출</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201125110610018.png" alt="image-20201125110610018" style="zoom:80%;">
<br>
<br>
<h4 id="mission-2-2"><a class="markdownIt-Anchor" href="#mission-2-2"></a> &gt;&gt; MISSION 2</h4>
<p><strong>[준비] : 먼저 평가기준(RATING)별 영화의 평균 상영시간을 출력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  RATING,</span><br><span class="line">  <span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(<span class="keyword">LENGTH</span>), <span class="number">2</span>) <span class="keyword">AS</span> AVG_LENGTH  <span class="comment">-- 소수점 2자리</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">  RATING</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  AVG_LENGTH;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201125115107688.png" alt="image-20201125115107688" style="zoom:80%;">
<br>
<p><strong>[MISSION] : 위에서 출력된 평균 상영시간보다 긴 영화의 정보를 출력</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FILM_ID,</span><br><span class="line">  TITLE,</span><br><span class="line">  <span class="keyword">LENGTH</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">  <span class="keyword">LENGTH</span> &gt;= <span class="keyword">ALL</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(<span class="keyword">AVG</span>(LENHTH), <span class="number">2</span>)    <span class="comment">-- SELECT한 변수는 하나여야 함</span></span><br><span class="line">    <span class="keyword">FROM</span> FILM</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> RATING</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">LENGTH</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 결과적으로 상영시간이 MAX(avg_length) = 120.44 min 보다 긴거나 같은 영화를 추출</span></span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201125115313350.png" alt="image-20201125115313350" style="zoom:80%;">
<br>
<br>
<h2 id="4-exists-연산자"><a class="markdownIt-Anchor" href="#4-exists-연산자"></a> <strong>4. EXISTS 연산자</strong></h2>
<h3 id="4-1-개념"><a class="markdownIt-Anchor" href="#4-1-개념"></a> 4-1. 개념</h3>
<p>EXISTS 연산자는 주로 메인쿼리 WHERE절에서 서브쿼리와 함께 사용된다.</p>
<p>동작원리는 다음과 같습니다:</p>
<ol>
<li>
<p>먼저 메인쿼리의 TABLE에 접근하여 하나의 레코드를 가져온다.</p>
</li>
<li>
<p>이 레코드에 대해서 EXISTS 이하의 서브쿼리를 실행하고 서브쿼리에 의해 반환된 값 집합이 존재하는지를 판단한다.</p>
</li>
<li>
<p>서브쿼리에 의해 반환된 값 집합이 <strong>존재한다면</strong> <code>TRUE</code>를 반환하고 메인쿼리의 SELECT문을 그대로 실행한다.</p>
<p>반환된 값 집합이 <strong>존재하지 않다면</strong> <code>FALSE</code>를 반환하고 메인쿼리의 SELECT문을 실행하지 않고 바로 다음 레코드로 넘어간다.</p>
<br> 
</li>
</ol>
<p><strong>&gt;&gt; 장점:</strong> 서브쿼리에 의해 반환된 값 집합의 존재여부만을 판단하므로 연산 시 부하가 줄어든다 (성능상 유리함)</p>
<br>
<blockquote>
<p>EXISTS 연산자와 IN 연산자의 차이점은 <a href="https://doorbw.tistory.com/" target="_blank" rel="noopener">Tigercow.Dor</a>님의 <a href="https://doorbw.tistory.com/222" target="_blank" rel="noopener">IN / EXISTS / NOT IN / NOT EXISTS 비교</a> 에서 자세히 설명되어 있음. 참고 바람.</p>
</blockquote>
<br>
<h3 id="4-2-exists-연산자-실습"><a class="markdownIt-Anchor" href="#4-2-exists-연산자-실습"></a> 4-2. EXISTS 연산자 실습</h3>
<img src="/images/S-SQL-SubQuery/image-20201126110600155.png" alt="image-20201126110600155" style="zoom:67%;">
<br>
<br>
<h4 id="mission-2"><a class="markdownIt-Anchor" href="#mission-2"></a> &gt;&gt; MISSION</h4>
<p><strong>지불내역(AMOUNT)이 11달러 초과한 고객의 이름을 출력하라</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER C</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line"><span class="keyword">EXISTS</span>(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="number">1</span>         <span class="comment">-- 반환 값이 임의로 지정해도 좋다. 존재 여부만 판단하기 떄문에 무엇을 반환하든 상관없음.</span></span><br><span class="line">    <span class="keyword">FROM</span> PAYMENT P</span><br><span class="line">   <span class="keyword">WHERE</span> P.CUSTOMER_ID = C.CUSTOMER_ID</span><br><span class="line">     <span class="keyword">AND</span> AMOUNT &gt; <span class="number">11</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  FIRST_NAME, LAST_NAME;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201126113245331.png" alt="image-20201126113245331" style="zoom:80%;">
<br>
<ul>
<li>
<p>동작 순서:</p>
<ol>
<li>
<p>먼저 메인쿼리의 CUSTOMER 테이블에서 N번째 레코드를 가져온다</p>
</li>
<li>
<p>그 다음 EXISTS 이하의 서브쿼리를 실행:</p>
<p>PAYMENT 테이블에서</p>
<ul>
<li>CUSTOMER_ID는 CUSTOMER 테이블의 CUSTOMER_ID과 동일하면서 (가져온 N번째 레코드의 CUSTOMER_ID랑만 비교)</li>
<li>지불내역(AMOUNT)이 11달러 초과한</li>
</ul>
<p>값의 존재 여부를 판단(하여 TURE이면 1를 반환)</p>
</li>
<li>
<p>STEP 2에서</p>
<ul>
<li>
<p>TURE로 판단되면 메인쿼리의 SELECT문을 그대로 실행 (즉 N번째 고객의 이름을 추출);</p>
</li>
<li>
<p>FALSE로 판단되면 메인쿼리의 SELECT 문을 실현하지 않고 그 다음 레코드 (N+1 번째 레코드)를 가져와 STEP 2 를 진행한다.</p>
</li>
</ul>
</li>
<li>
<p>위 과정을 반복하여 마지막 레코드까지 완료되면 해당 SQL문의 동작이 종료된다.</p>
</li>
</ol>
</li>
</ul>
<br>
<br>
<h2 id="5-not-exists-연산자"><a class="markdownIt-Anchor" href="#5-not-exists-연산자"></a> <strong>5. NOT EXISTS 연산자</strong></h2>
<h3 id="5-1-개념"><a class="markdownIt-Anchor" href="#5-1-개념"></a> 5-1. 개념</h3>
<p>NOT EXISTS 연산자는 주로 메인쿼리 WHERE절에서 서브쿼리와 함께 사용된다. 위에서 EXISTS에 대해서 이해했다면 크게 어려운 점이 없다.</p>
<p>동작원리는 다음과 같습니다:</p>
<ol>
<li>
<p>먼저 메인쿼리의 TABLE에 접근하여 하나의 레코드를 가져온다.</p>
</li>
<li>
<p>이 레코드에 대해서 EXISTS 이하의 서브쿼리를 실행하고 서브쿼리에 의해 반환된 값 집합이 존재하는지를 판단한다.</p>
</li>
<li>
<p>STEP 3는 EXISTS 연산자와 정 반대이다:</p>
<p>서브쿼리에 의해 반환된 값 집합이 <strong>존재하지 않다면</strong> <code>TRUE</code> 를 반환하고 메인쿼리의 SELECT문을 그대로 실행한다.</p>
<p>반환된 값 집합이 <strong>존재한다면</strong> <code>FALSE</code>를 반환하고 메인쿼리의 SELECT문을 실행하지 않고 바로 다음 레코드로 넘어간다.</p>
<br> 
</li>
</ol>
<p><strong>&gt;&gt; 장점:</strong> 서브쿼리에 의해 반환된 값 집합의 존재여부만을 판단하므로 연산 시 부하가 줄어든다 (성능상 유리함)</p>
<br>
<h3 id="5-2-not-exists-연산자-실습"><a class="markdownIt-Anchor" href="#5-2-not-exists-연산자-실습"></a> 5-2. NOT EXISTS 연산자 실습</h3>
<img src="/images/S-SQL-SubQuery/image-20201126110600155.png" alt="image-20201126110600155" style="zoom:67%;">
<br>
<br>
<h4 id="mission-3"><a class="markdownIt-Anchor" href="#mission-3"></a> &gt;&gt; MISSION</h4>
<p><strong>지불내역(AMOUNT)이 11달러 초과한 적이 없는 고객의 이름을 출력하라</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  FIRST_NAME,</span><br><span class="line">  LAST_NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  CUSTOMER C</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line"><span class="keyword">NOT</span> <span class="keyword">EXISTS</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">FROM</span> PAYMENT P</span><br><span class="line">   <span class="keyword">WHERE</span> P.CUSTOMER_ID = C.CUSTOMER_ID</span><br><span class="line">     <span class="keyword">AND</span> P.AMOUNT &gt; <span class="number">11</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">  FIRST_NAME, LAST_NAME;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-SubQuery/image-20201127111302306.png" alt="image-20201127111302306" style="zoom:80%;">
<br>
<br>
<p>​</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 7. SubQuery</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 테이블 관리 (2)</title>
    <url>/2020/12/21/S-SQL-Table-2/</url>
    <content><![CDATA[<h1 id="테이블-관리-2"><a class="markdownIt-Anchor" href="#테이블-관리-2"></a> 테이블 관리 (2)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%BB%AC%EB%9F%BC-%EC%B6%94%EA%B0%80"><strong>1. 컬럼 추가</strong></a>
<ul>
<li><a href="#1-1-%EC%BB%AC%EB%9F%BC-%EC%B6%94%EA%B0%80-%EB%AC%B8%EB%B2%95">1-1. 컬럼 추가 문법</a></li>
<li><a href="#1-2-%EC%BB%AC%EB%9F%BC-%EC%B6%94%EA%B0%80-%EC%8B%A4%EC%8A%B5">1-2. 컬럼 추가 실습</a></li>
</ul>
</li>
<li><a href="#2-%EC%BB%AC%EB%9F%BC-%EC%A0%9C%EA%B1%B0"><strong>2. 컬럼 제거</strong></a>
<ul>
<li><a href="#2-1-%EC%BB%AC%EB%9F%BC-%EC%A0%9C%EA%B1%B0-%EB%AC%B8%EB%B2%95">2-1. 컬럼 제거 문법</a></li>
<li><a href="#2-2-%EC%BB%AC%EB%9F%BC-%EC%A0%9C%EA%B1%B0-%EC%8B%A4%EC%8A%B5">2-2. 컬럼 제거 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">&gt;&gt; 실습 준비</a></li>
<li><a href="#%EC%BB%AC%EB%9F%BC-%EC%A0%9C%EA%B1%B0-%EC%8B%A4%EC%8A%B5">&gt;&gt; 컬럼 제거 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-%EC%BB%AC%EB%9F%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%EA%B2%BD"><strong>3. 컬럼 데이터 타입 변경</strong></a>
<ul>
<li><a href="#3-1-%EC%BB%AC%EB%9F%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%EA%B2%BD-%EB%AC%B8%EB%B2%95">3-1. 컬럼 데이터 타입 변경 문법</a></li>
<li><a href="#3-2-%EC%BB%AC%EB%9F%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%EA%B2%BD-%EC%8B%A4%EC%8A%B5">3-2. 컬럼 데이터 타입 변경 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-2">&gt;&gt; 실습 준비</a></li>
<li><a href="#%EC%BB%AC%EB%9F%BC-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%EA%B2%BD-%EC%8B%A4%EC%8A%B5">&gt;&gt; 컬럼 데이터 타입 변경 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-%EC%BB%AC%EB%9F%BC-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD"><strong>4. 컬럼 이름 변경</strong></a>
<ul>
<li><a href="#4-1-%EC%BB%AC%EB%9F%BC-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD-%EB%AC%B8%EB%B2%95">4-1. 컬럼 이름 변경 문법</a></li>
<li><a href="#4-2-%EC%BB%AC%EB%9F%BC-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD-%EC%8B%A4%EC%8A%B5">4-2. 컬럼 이름 변경 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84-3">&gt;&gt;  실습 준비</a></li>
<li><a href="#%EC%BB%AC%EB%9F%BC-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD-%EC%8B%A4%EC%8A%B5">&gt;&gt;  컬럼 이름 변경 실습</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-컬럼-추가"><a class="markdownIt-Anchor" href="#1-컬럼-추가"></a> <strong>1. 컬럼 추가</strong></h2>
<h3 id="1-1-컬럼-추가-문법"><a class="markdownIt-Anchor" href="#1-1-컬럼-추가-문법"></a> 1-1. 컬럼 추가 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> COL_NAME_1 SETTING</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> COL_NAME_2 SETTING</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-2-컬럼-추가-실습"><a class="markdownIt-Anchor" href="#1-2-컬럼-추가-실습"></a> 1-2. 컬럼 추가 실습</h3>
<br>
<blockquote>
<p>ORACLE (오라클):</p>
<ul>
<li>create, drop, alter 명령어 (DDL)를 치는 순간 자동으로 commit이 됩니다. 즉, commit 할 필요가 없습니다.</li>
<li>하지만 delete, update, merge, insert 등 명령어는 commit 필요</li>
</ul>
<p>PostgreSQL:</p>
<ul>
<li>create, drop, alter, delete, update, merge, insert 명령어 모두 commit 을 필요합니다.</li>
</ul>
</blockquote>
<br>
<p><strong>(1) 아래와 같은 테이블을 생성한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TB_CUST(</span><br><span class="line">  CUST_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  CUST_NAME <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201210094138951.png" alt="image-20201210094138951"></p>
<br>
<br>
<p><strong>(2) 폰변호를 저장할 컬럼을 추가한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TB_CUST</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> PHONE_NUMBER <span class="built_in">VARCHAR</span>(<span class="number">13</span>);</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201210094238362.png" alt="image-20201210094238362"></p>
<br>
<br>
<p><strong>(3) 팩스번호 및 이메일 주소를 저장할 컬럼을 추가한다. (한 번에 2개 추가)</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TB_CUST</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> FAX_NUMBER <span class="built_in">VARCHAR</span>(<span class="number">13</span>),</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> EMAIL_ADDR <span class="built_in">VARCHAR</span>(<span class="number">50</span>);</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201210094317700.png" alt="image-20201210094317700"></p>
<br>
<br>
<p><strong>&gt;&gt; TB_CUST의 생성 과정(DDL) 확인</strong></p>
<img src="/images/S-SQL-Table-2/image-20201210095902038.png" alt="image-20201210095902038" style="zoom:80%;">
<br>
<br>
<p><strong>(4) NOT NULL 제약 컬럼 추가</strong></p>
<p><strong>&gt;&gt; 문제</strong></p>
<p>테이블에 데이터가 있을 때는 NOT NULL 제약 컬럼을 바로 추가할 수 없다.</p>
<p>추가하는 순간 해당 컬럼에 값이 없어서 NOT NULL 제약을 위반하게 되기 때문이다.</p>
<br>
<p>[[ 실습 ]]</p>
<ul>
<li>
<p>먼저 테이블에 데이터를 입력한다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_CUST</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'홍길동'</span>, <span class="string">'010-1234-5678'</span>, <span class="string">'02-123-1234'</span>, <span class="string">'dbmsexpert@naver.com'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201210103454365.png" alt="image-20201210103454365">
<br>
</li>
<li>
<p>데이터를 입력 후 아래와 같이 NOT NULL 컬럼을 추가하면 기존에 레코드가 있기 때문에 ERROR가 발생한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TB_CUST</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> ADDRESS <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201210105714436.png" alt="image-20201210105714436" style="zoom:80%;">
</li>
</ul>
<br>
<p><strong>&gt;&gt; 해결</strong></p>
<p>이런 경우 해결책은 우선 NULL 조건으로 컬럼을 추가한 다음, 컬럼 값을 부여하는 UPDATE 작업을 진행하고 다시 NOT NULL 제약을 추가하는 것이다.</p>
<br>
<p>[[ 실습 ]]</p>
<ul>
<li>
<p>먼저 NULL 조건으로 컬럼을 추가한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TB_CUST</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> ADDRESS <span class="built_in">VARCHAR</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<ul>
<li>
<p>그 다음 ADDRESS 컬럼을 UPDATE 한다. (컬럼 값 부여)</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> TB_CUST</span><br><span class="line">   <span class="keyword">SET</span> ADDRESS = <span class="string">'서울시 영등포구'</span></span><br><span class="line"> <span class="keyword">WHERE</span> CUST_ID = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201210142057665.png" alt=""></p>
  <br>
<img src="/images/S-SQL-Table-2/image-20201210142716523.png" alt="image-20201210142716523" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p>마지막으로 ALTER COLUMN으로 NOT NULL로 제약 조건을 준다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TB_CUST</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> ADDRESS <span class="keyword">SET</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201210142834604.png" alt="image-20201210142834604" style="zoom:80%;">
</li>
</ul>
<br>
<br>
<h2 id="2-컬럼-제거"><a class="markdownIt-Anchor" href="#2-컬럼-제거"></a> <strong>2. 컬럼 제거</strong></h2>
<h3 id="2-1-컬럼-제거-문법"><a class="markdownIt-Anchor" href="#2-1-컬럼-제거-문법"></a> 2-1. 컬럼 제거 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> COL_NAME_1,</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> COL_NAME_2, </span><br><span class="line">  ... ;</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- CASCADE 옵션: 해당 컬럼과 관련 있는 모든 개체들이 함께 삭제(DROP)된다.</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> COL_NAME <span class="keyword">CASCADE</span>;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-2-컬럼-제거-실습"><a class="markdownIt-Anchor" href="#2-2-컬럼-제거-실습"></a> 2-2. 컬럼 제거 실습</h3>
<h4 id="실습-준비"><a class="markdownIt-Anchor" href="#실습-준비"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> PUBLISHERS (</span><br><span class="line">  PUBLISHER_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CATEGORIES (</span><br><span class="line">  CATEGORY_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BOOKS (</span><br><span class="line">  BOOK_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  TITLE <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  ISBN <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PUBLISHED_DATE <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  DESCRIPTION <span class="built_in">VARCHAR</span>,</span><br><span class="line">  CATEGORY_ID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PUBLISHER_ID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (CATEGORY_ID) <span class="keyword">REFERENCES</span> CATEGORIES (CATEGORY_ID),</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (PUBLISHER_ID) <span class="keyword">REFERENCES</span> PUBLISHERS (PUBLISHER_ID)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201217140819313.png" alt="image-20201217140819313" style="zoom:67%;">
<br>
<br>
<p>3개의 TABLE을 하나의 뷰로 생성한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> BOOK_INFO <span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  B.BOOK_ID,</span><br><span class="line">  B.TITLE,</span><br><span class="line">  B.ISBN,</span><br><span class="line">  B.PUBLISHED_DATE,</span><br><span class="line">  P.NAME</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  BOOKS B,</span><br><span class="line">  PUBLISHERS P</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">  P.PUBLISHER_ID = B.PUBLISHER_ID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">  B.TITLE;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201217140850918.png" alt="image-20201217140850918"></p>
<br>
<br>
<h4 id="컬럼-제거-실습"><a class="markdownIt-Anchor" href="#컬럼-제거-실습"></a> &gt;&gt; 컬럼 제거 실습</h4>
<img src="/images/S-SQL-Table-2/image-20201217140819313.png" alt="image-20201217140819313" style="zoom:67%;">
<p><strong>관계:</strong></p>
<ul>
<li>한 개의 카테고리가 여러 개의 책을 가진다. 한 개의 책은 반드시 카테고리를 가진다.</li>
<li>한 개의 출판사는 여러 개의 책을 출판한다. 한 개의 책은 반드시 출판사를 가진다.</li>
</ul>
<br>
<p><strong>[실습 1]  BOOKS 테이블에서 CATEGORY_ID 컬럼을 제거한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> BOOKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201217142424062.png" alt="image-20201217142424062"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> BOOKS <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> CATEGORY_ID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> COOKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201217142727702.png" alt="image-20201217142727702"></p>
<ul>
<li>BOOKS 테이블은 자식 테이블이므로 CATEGORY_ID 컬럼은 제거가 가능하다.</li>
<li>컬럼이 제거되면서 CATEGORY_ID의 FK (Foreign Key) 도 함께 삭제된다.</li>
</ul>
<br>
<p><strong>[실습 2]  BOOKS 테이블에서 PUBLISHER_ID 컬럼을 제거한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> BOOKS <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> PUBLISHER_ID;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201217143419783.png" alt="image-20201217143419783" style="zoom:80%;">
<ul>
<li>PUBLISHER_ID 컬럼을 제거하고자 하는 경우 위와 같은 에러가 발생한다.</li>
<li>해당 컬럼은 BOOK_INFO 뷰에서 참조하고 있기 때문이다.</li>
</ul>
<br>
<p>이런 경우에는 CASCADE 옵션을 줘서 삭제한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> BOOKS <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> PUBLISHER_ID <span class="keyword">CASCADE</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> BOOKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201217144023588.png" alt="image-20201217144023588"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> BOOK_INFO;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201217144204332.png" alt="image-20201217144204332" style="zoom:80%;">
<ul>
<li>컬럼 삭제에는 성공했지만 BOOK_INFO 뷰도 같이 DROP 되었다.</li>
</ul>
<br>
<p><strong>[실습 3]  동시에 N개의 컬럼을 제거한다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> BOOKS</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> ISBN,</span><br><span class="line">  <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> DESCRIPTION;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201217144804982.png" alt="image-20201217144804982"></p>
<br>
<br>
<h2 id="3-컬럼-데이터-타입-변경"><a class="markdownIt-Anchor" href="#3-컬럼-데이터-타입-변경"></a> <strong>3. 컬럼 데이터 타입 변경</strong></h2>
<h3 id="3-1-컬럼-데이터-타입-변경-문법"><a class="markdownIt-Anchor" href="#3-1-컬럼-데이터-타입-변경-문법"></a> 3-1. 컬럼 데이터 타입 변경 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> COL_NAME_1 <span class="keyword">TYPE</span> NEW_TYPE,</span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> COL_NAME_2 <span class="keyword">TYPE</span> NEW_TYPE,</span><br><span class="line">  ... ;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-2-컬럼-데이터-타입-변경-실습"><a class="markdownIt-Anchor" href="#3-2-컬럼-데이터-타입-변경-실습"></a> 3-2. 컬럼 데이터 타입 변경 실습</h3>
<h4 id="실습-준비-2"><a class="markdownIt-Anchor" href="#실습-준비-2"></a> &gt;&gt; 실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ASSETS (</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">TEXT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  ASSET_NO <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  DESCRIPTION <span class="built_in">TEXT</span>,</span><br><span class="line">  LOCATION <span class="built_in">TEXT</span>,</span><br><span class="line">  DATE_ACQUIRED <span class="built_in">DATE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ASSETS (</span><br><span class="line">  <span class="keyword">NAME</span>,</span><br><span class="line">  ASSET_NO,</span><br><span class="line">  LOCATION,</span><br><span class="line">  DATE_ACQUIRED</span><br><span class="line">)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'Server'</span>, <span class="string">'10001'</span>, <span class="string">'Server room'</span>, <span class="string">'2017-01-01'</span>),</span><br><span class="line">(<span class="string">'UPS'</span>, <span class="string">'10002'</span>, <span class="string">'Server room'</span>, <span class="string">'2017-01-02'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ASSETS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218185044584.png" alt="image-20201218185044584"></p>
<br>
<h4 id="컬럼-데이터-타입-변경-실습"><a class="markdownIt-Anchor" href="#컬럼-데이터-타입-변경-실습"></a> &gt;&gt; 컬럼 데이터 타입 변경 실습</h4>
<p><img src="/images/S-SQL-Table-2/image-20201218185255265.png" alt="image-20201218185255265"></p>
<p><strong>[MISSION 1]</strong>  NAME, DESCRIPTION, LOCATION 컬럼의 데이터 타입을 TEXT에서 VARCHAR로 바꾸기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 1개 컬럼의 데이터 타입 변경</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> ASSETS <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> <span class="keyword">NAME</span> <span class="keyword">TYPE</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 한번에 N개 컬럼의 데이터 타입 변경</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> ASSETS </span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> DESCRIPTION <span class="keyword">TYPE</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> LOCATION <span class="keyword">TYPE</span> <span class="built_in">VARCHAR</span>(<span class="number">500</span>);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201218190150074.png" alt="image-20201218190150074" style="zoom:80%;">
<br>
<br>
<p><strong>[MISSION 2]</strong>  ASSET_NO 컬럼의 데이터 타입을 VARCHAR 에서 INT로 바꾸기</p>
<ul>
<li>
<p>그냥 <code>TYPE INT</code> 로 바꾸면 ERROR 가 발생한다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> ASSETS <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> ASSET_NO <span class="keyword">TYPE</span> <span class="built_in">INT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201218190725819.png" alt="image-20201218190725819" style="zoom:80%;">
<br>
</li>
<li>
<p><strong>[주의]</strong> <code>USING col_name::integer</code> 구문을 추가해야 함</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> ASSETS</span><br><span class="line">  <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> ASSET_NO <span class="keyword">TYPE</span> <span class="built_in">INT</span> <span class="keyword">USING</span> ASSET_NO::<span class="built_in">INTEGER</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-2/image-20201218190942598.png" alt="image-20201218190942598" style="zoom:80%;">
</li>
</ul>
<br>
<br>
<h2 id="4-컬럼-이름-변경"><a class="markdownIt-Anchor" href="#4-컬럼-이름-변경"></a> <strong>4. 컬럼 이름 변경</strong></h2>
<h3 id="4-1-컬럼-이름-변경-문법"><a class="markdownIt-Anchor" href="#4-1-컬럼-이름-변경-문법"></a> 4-1. 컬럼 이름 변경 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br><span class="line">  <span class="keyword">RENAME</span> <span class="keyword">COLUMN</span> COL_NAME_OLD <span class="keyword">TO</span> COL_NAME_NEW;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="4-2-컬럼-이름-변경-실습"><a class="markdownIt-Anchor" href="#4-2-컬럼-이름-변경-실습"></a> 4-2. 컬럼 이름 변경 실습</h3>
<h4 id="실습-준비-3"><a class="markdownIt-Anchor" href="#실습-준비-3"></a> &gt;&gt;  실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> CUSTOMER_GROUPS;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> CUSTOMERS;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> CUSTOMER_DATA;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CUSTOMER_GROUPS (</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CUSTOMERS (</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PHONE <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  EMAIL <span class="built_in">VARCHAR</span>,</span><br><span class="line">  <span class="keyword">GROUP_ID</span> <span class="built_in">INT</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="keyword">GROUP_ID</span>) <span class="keyword">REFERENCES</span> CUSTOMER_GROUPS (<span class="keyword">ID</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMER_GROUPS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218220746648.png" alt="image-20201218220746648"></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMERS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218220814142.png" alt="image-20201218220814142"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> CUSTOMER_DATA</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">SELECT</span></span><br><span class="line">  C.ID,</span><br><span class="line">  C.NAME,</span><br><span class="line">  G.NAME CUSTOMER_GROUP</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">  CUSTOMERS C,</span><br><span class="line">  CUSTOMER_GROUPS G</span><br><span class="line"><span class="keyword">WHERE</span> C.GROUP_ID = G.ID;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMER_DATA;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218220315994.png" alt="image-20201218220315994"></p>
<br>
<h4 id="컬럼-이름-변경-실습"><a class="markdownIt-Anchor" href="#컬럼-이름-변경-실습"></a> &gt;&gt;  컬럼 이름 변경 실습</h4>
<p><strong>[MISSION 1]</strong>  CUSTOMERS 테이블 EMIAL 컬럼의 이름을 바꾸기:  EMAIL --&gt; CONTACT_EMAIL</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> CUSTOMERS</span><br><span class="line">  <span class="keyword">RENAME</span> <span class="keyword">COLUMN</span> EMIAL <span class="keyword">TO</span> CONTACT_EMAIL;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMERS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218221154310.png" alt="image-20201218221154310"></p>
<br>
<p><strong>[MISSION 2]</strong>  CUSTOMER_GROUPS 테이블의 NAME 컬럼의 이름을 바꾸기:  NAME --&gt; GROUP_NAME</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> CUSTOMER_GROUPS</span><br><span class="line">  <span class="keyword">RENAME</span> <span class="keyword">COLUMN</span> <span class="keyword">NAME</span> <span class="keyword">TO</span> GROUP_NAME;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMER_GROUPS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218221509265.png" alt="image-20201218221509265"></p>
<br>
<p>뷰 CUSTOMER_DATA 에서 참조중인 CUSTOMER_GROUP 테이블의 NAME 컬럼의 이름도 바뀌었는지 살펴본다</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> CUSTOMER_DATA;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-2/image-20201218221834951.png" alt="image-20201218221834951"></p>
<ul>
<li>컬럼명이 바뀐 것이 뷰에 자동으로 적용된 것을 확인할 수 있다.</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 9. Table</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Advanced (1) Customizing Table Calculations</title>
    <url>/2022/06/27/S-Tableau-Advanced-1-Customizing-Table-Calculations/</url>
    <content><![CDATA[<h1 id="table-calculations"><a class="markdownIt-Anchor" href="#table-calculations"></a> Table Calculations</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-including-helper-functions-in-table-calculations"><strong>1. Including Helper Functions in Table Calculations</strong></a>
<ul>
<li><a href="#helper-functions">&gt;&gt; Helper Functions</a></li>
<li><a href="#four-helper-functions">&gt;&gt; Four Helper Functions</a></li>
<li><a href="#using-helper-functions-with-another-function">&gt;&gt; Using Helper Functions with Another Function</a></li>
</ul>
</li>
<li><a href="#2-secondary-calculations"><strong>2. Secondary Calculations</strong></a></li>
<li><a href="#3-pareto-charts"><strong>3. Pareto Charts</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-including-helper-functions-in-table-calculations"><a class="markdownIt-Anchor" href="#1-including-helper-functions-in-table-calculations"></a> <strong>1. Including Helper Functions in Table Calculations</strong></h2>
<h3 id="helper-functions"><a class="markdownIt-Anchor" href="#helper-functions"></a> &gt;&gt; Helper Functions</h3>
<p>You might need to write a custom table calculation when you want your calculation to reference another row or column of the table. To direct Tableau to the correct values, we can make use of <strong>Helper functions</strong>.</p>
<p>Helper functions are special table calculations that can be used to point to a location of specific values in the data table. They’re often combined with other expressions or functions to build more powerful calculations.</p>
<br>
<h3 id="four-helper-functions"><a class="markdownIt-Anchor" href="#four-helper-functions"></a> &gt;&gt; Four Helper Functions</h3>
<ul>
<li>
<p><strong>INDEX():</strong> Shows the current row of the partition</p>
<p>Scope: Table  --&gt;	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701092512144.png" alt="image-20210701092512144" style="zoom:80%;">	     	 Scope: Pane  – 	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701092656339-165631081898731.png" alt="image-20210701092656339" style="zoom:80%;"></p>
<br>
</li>
<li>
<p><strong>FIRST():</strong> Reports how far each cell is from the first cell in the partition	<font color="blue">[ INDEX(FIRST) - INDEX(now) ]</font></p>
<p>Scope: Table  --&gt;	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210628170447588.png" alt="image-20210628170447588" style="zoom:80%;"></p>
<p>Scope: Pane   --&gt;	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210628170412602.png" alt="image-20210628170412602" style="zoom:80%;"></p>
<br>
</li>
<li>
<p><strong>LAST():</strong> Reports how far each cell is from the last cell in the partition     <font color="blue">[ INDEX(LAST) - INDEX(now) ]</font></p>
<p>Scope: Table  --&gt;	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701091652724.png" alt="image-20210701091652724" style="zoom:80%;"></p>
<p>Scope: Pane   --&gt;	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701091812692.png" alt="image-20210701091812692" style="zoom:80%;"></p>
<br>
</li>
<li>
<p><strong>SIZE():</strong> Returns the number of rows in the current scope</p>
<p><strong><font color="darkblue">SIZE()</font></strong> returns 12 if the current part of the table shows sales for months in a year</p>
</li>
</ul>
<br>
<br>
<h3 id="using-helper-functions-with-another-function"><a class="markdownIt-Anchor" href="#using-helper-functions-with-another-function"></a> &gt;&gt; Using Helper Functions with Another Function</h3>
<p>Helper functions can be used alone or with another function.</p>
<p>When using with other functions (like LOOKUP function), helper functions can be used to direct the expressions to the location of a specific value based on the structure of the table.</p>
<br>
<p><strong>[ <font color="navy">LOOKUP</font></strong> function  +  <strong><font color="navy">Helper</font></strong> functions <strong>]</strong></p>
<ul>
<li>
<p><strong>LOOKUP(expression, offset):</strong></p>
<p>Returns the value of the given expression in a target row, specified as a relative offset from the current row.</p>
<br>
</li>
<li>
<p><strong>[Example] :</strong></p>
<ul>
<li>
<p>Find the profit value from three rows up the table:</p>
<p><code>LOOKUP( SUM([Profit]), -3 )</code></p>
<p>​		<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701102902227.png" alt="image-20210701102902227" style="zoom:80%;"></p>
<br>
</li>
<li>
<p>Compare the profit value to the last month of the year:</p>
<ol>
<li>
<p>Use LAST() function as the offset of the LOOKUP function to return the value of the SUM of Profit for the last month in the partition)</p>
<p><code>LOOKUP( SUM([Profit]), LAST() )</code>	+	Change the scope to  [ Pane (down) ]</p>
<p>​		<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701104404674.png" alt="image-20210701104404674" style="zoom:80%;"></p>
</li>
<li>
<p>Calculate how monthly profits compared to the last month of each year</p>
<p><code>SUM([Profit]) - LOOKUP( SUM([Profit]), LAST() )</code></p>
<p>​		<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210701105519703.png" alt="image-20210701105519703" style="zoom:80%;"></p>
</li>
</ol>
</li>
</ul>
</li>
</ul>
<br>
<br>
<h2 id="2-secondary-calculations"><a class="markdownIt-Anchor" href="#2-secondary-calculations"></a> <strong>2. Secondary Calculations</strong></h2>
<p>Often, we use table calculations to add another layer of meaning to our data.</p>
<p>Especially, with the table calculations <strong>Running Total</strong> and <strong>Moving Calculation</strong>, we have the option to add one more layer of meaning to our view — that is, to add a secondary table calculation on top of the primary one.</p>
<p>Since secondary calculations can be displayed with an independent scope and direction from the primary calculation, it’s important to consider how the secondary calculation changes the story your data tells.</p>
<br>
<p><strong>[Example]</strong></p>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>With the Superstore dataset, we wonder the contribution of each segment to the running total of sales for the quarter.</p>
 <br>
<p><strong><font color="navy">[Step 1]</font></strong> <strong>Create the Basic View:</strong> sum of sales by quarter for each segment</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702103708499.png" alt="image-20210702103708499" style="zoom: 40%;">
<br>
<p><strong><font color="navy">[Step 2]</font></strong> <strong>&lt; Primary Table Calculation &gt;</strong> Calculate the running total of SUM(sales) for each quarter</p>
<p>​			<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702104129698.png" alt="image-20210702104129698" style="zoom:55%;"> 	<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702104202709-165631085320633.png" alt="image-20210702104202709" style="zoom: 40%;"></p>
<br>
<p><strong><font color="navy">[Step 3]</font></strong> <strong>&lt; Secondary Table Calculation &gt;</strong> Calculate the contribution of each segment to the running total</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702104824578.png" alt="image-20210702104824578" style="zoom: 50%;">
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702104947979.png" alt="image-20210702104947979" style="zoom: 40%;">
<br>
<br>
<h2 id="3-pareto-charts"><a class="markdownIt-Anchor" href="#3-pareto-charts"></a> <strong>3. Pareto Charts</strong></h2>
<p>The Pareto Chart was designed to help highlight the <a href="https://en.wikipedia.org/wiki/Pareto_principle" target="_blank" rel="noopener">Pareto principle</a>, which is sometimes called the Law of the Vital Few or the 80/20 rule. The Pareto principle states that in many cases, the majority of the results will come from a vital few of the causes.</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702130301577.png" alt="image-20210702130301577" style="zoom:50%;">
<br>
<p>A Pareto chart can help highlight the uneven distribution of contributions to your KPIs, so you can focus your efforts for the greatest impact.</p>
<br>
<p><strong>[Example]</strong></p>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>Build a Pareto chart to show how customers contribute to profitability, including how much is lost to unprofitable customers.</p>
<br>
<p><strong><font color="navy">[Step 1]</font></strong> Create a sorted bar chart to show the profit by customer</p>
<ul>
<li>
<p>Sort Customer ID by Descending Profit</p>
</li>
<li>
<p>Fit it to the Entire View</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702154222851.png" alt="image-20210702154222851" style="zoom:60%;">
</li>
</ul>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702133813598.png" alt="image-20210702133813598" style="zoom:45%;">
<br>
<p><strong><font color="navy">[Step 2]</font></strong> Use table calculations to show the percentage of total running sum of profit</p>
<ul>
<li><strong>Primary calculation:</strong>      [Running Total] – [Sum]  /  Compute using: [Specific Dimensions] – [Customer ID]</li>
<li><strong>Secondary calculation:</strong> [Percent of Total] / Compute using: [Specific Dimensions] – [Customer ID]</li>
</ul>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702134001248.png" alt="image-20210702134001248" style="zoom:50%;">
<br>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702134302137.png" alt="image-20210702134302137" style="zoom:45%;">
<br>
<p><strong><font color="navy">[Step 3]</font></strong> Color the profitable and unprofitable parts</p>
<ul>
<li>
<p>Add [SUM(Profit)] to the [Color] Mark</p>
</li>
<li>
<p>Edit colors:  use the full color range</p>
<p><img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702140759224.png" alt="image-20210702140759224" style="zoom:50%;">    <img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702140631532-165631099939437.png" alt="image-20210702140631532" style="zoom:40%;"></p>
</li>
</ul>
<br>
<p><strong><font color="navy">[Step 4]</font></strong> Add reference lines to highlight the 80/20 rules</p>
<ul>
<li>
<p><strong>[4-1]  Add a 20% reference line to x-axis</strong></p>
<p>To add the 20% reference line, we first need to change the x-axis (Customer ID axis) to a percent of total</p>
<ol>
<li>
<p>Ctrl + drag a copy of [Customer ID] to [Detail]</p>
<p>(Since the profit table calculation is using [Customer ID] to set the scope and direction, if there isn’t a copy of this dimension in the view, we’ll break the calculation)</p>
<br>
</li>
<li>
<p>change the [Customer ID] on Columns to a Measure, showing the [Count(Distinct)]</p>
</li>
</ol>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702142913450.png" alt="image-20210702142913450" style="zoom: 50%;">
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702142945118.png" alt="image-20210702142945118" style="zoom: 50%;">
<br>
<ol start="3">
<li>
<p>Add a similar table calculation on the Count (Distinct) of Custom ID</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702155034147.png" alt="image-20210702155034147" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702155133673.png" alt="image-20210702155133673" style="zoom:50%;">
</li>
</ol>
<br>
<ol start="4">
<li>
<p>Change the mark type to Bar</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702155326064.png" alt="image-20210702155326064" style="zoom:50%;">
<br>
</li>
<li>
<p>Add a 20% reference line to x-axis and simplify the axis label.</p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702155536598.png" alt="image-20210702155536598" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702160104585.png" alt="image-20210702160104585" style="zoom:50%;">
</li>
</ol>
<br>
</li>
<li>
<p><strong>[4-2] Add a 80% reference line to y-axis and simplify the axis label.</strong></p>
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702155913088.png" alt="image-20210702155913088" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-1-Customizing-Table-Calculations/image-20210702160315005.png" alt="image-20210702160315005" style="zoom:50%;">
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 4. Advanced</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 테이블 관리 (3)</title>
    <url>/2020/12/21/S-SQL-Table-3/</url>
    <content><![CDATA[<h1 id="테이블-관리-3"><a class="markdownIt-Anchor" href="#테이블-관리-3"></a> 테이블 관리 (3)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A0%9C%EA%B1%B0"><strong>1. 테이블 제거</strong></a>
<ul>
<li><a href="#1-1-%EA%B0%9C%EB%85%90">1-1. 개념</a></li>
<li><a href="#1-2-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A0%9C%EA%B1%B0-%EB%AC%B8%EB%B2%95">1-2. 테이블 제거 문법</a></li>
<li><a href="#1-3-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A0%9C%EA%B1%B0-%EC%8B%A4%EC%8A%B5">1-3. 테이블 제거 실습</a>
<ul>
<li><a href="#%EC%8B%A4%EC%8A%B5-%EC%A4%80%EB%B9%84">&gt;&gt;  실습 준비</a></li>
<li><a href="#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%A0%9C%EA%B1%B0-%EC%8B%A4%EC%8A%B5">&gt;&gt; 테이블 제거 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-%EC%9E%84%EC%8B%9C-%ED%85%8C%EC%9D%B4%EB%B8%94"><strong>2. 임시 테이블</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-%EC%9E%84%EC%8B%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1-%EB%AC%B8%EB%B2%95">2-2. 임시 테이블 생성 문법</a></li>
<li><a href="#2-3-%EC%9E%84%EC%8B%9C-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%8B%A4%EC%8A%B5">2-3. 임시 테이블 실습</a></li>
</ul>
</li>
<li><a href="#3-truncate"><strong>3. TRUNCATE</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-truncate-%EB%AC%B8%EB%B2%95">3-2. TRUNCATE 문법</a></li>
<li><a href="#3-3-truncate-%EC%8B%A4%EC%8A%B5">3-3. TRUNCATE 실습</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-테이블-제거"><a class="markdownIt-Anchor" href="#1-테이블-제거"></a> <strong>1. 테이블 제거</strong></h2>
<h3 id="1-1-개념"><a class="markdownIt-Anchor" href="#1-1-개념"></a> 1-1. 개념</h3>
<p>존재하는 테이블을 제거할 수 있다. 하지반 테이블 제거 시는 항상 주의해야하고 FK (Foreign Key) 관계도 유의해야 한다.</p>
<br>
<h3 id="1-2-테이블-제거-문법"><a class="markdownIt-Anchor" href="#1-2-테이블-제거-문법"></a> 1-2. 테이블 제거 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="1-3-테이블-제거-실습"><a class="markdownIt-Anchor" href="#1-3-테이블-제거-실습"></a> 1-3. 테이블 제거 실습</h3>
<h4 id="실습-준비"><a class="markdownIt-Anchor" href="#실습-준비"></a> &gt;&gt;  실습 준비</h4>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DIRECTOR</span><br><span class="line">(</span><br><span class="line">  DIRECTOR_ID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  FIRSTNAME <span class="built_in">VARCHAR</span> (<span class="number">50</span>),</span><br><span class="line">  LASTNAME <span class="built_in">VARCHAR</span> (<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> FILMS</span><br><span class="line">(</span><br><span class="line">  FILM_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  TITLE <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PREMIERE_DAY <span class="built_in">DATE</span>,</span><br><span class="line">  DIRECTOR_ID <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (DIRECTOR_ID) <span class="keyword">REFERENCES</span> DIRECTOR (DIRECTOR_ID)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> DIRECTOR</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'준호'</span>, <span class="string">'봉'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> FILMS</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'기생충'</span>, <span class="string">'2019-05-30'</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DIRECTOR;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201218235703439.png" alt="image-20201218235703439"></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> FILMS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201218235726706.png" alt="image-20201218235726706"></p>
<br>
<p><img src="/images/S-SQL-Table-3/image-20201219000405118.png" alt="image-20201219000405118"></p>
<br>
<br>
<h4 id="테이블-제거-실습"><a class="markdownIt-Anchor" href="#테이블-제거-실습"></a> &gt;&gt; 테이블 제거 실습</h4>
<p><strong>[MISSION 1]</strong>  부모 테이블 (DIRECTOR 테이블)을 제거하기</p>
<blockquote>
<p>부모 테이블은 바로 제거할 수 없다. 부모 테이블의 컬럼이 자식 테이블에서 첨조되고 있기 때문에 참조 누락성 제약조건으로 인해 제거할 수 없다. 굳이 제거하고 싶으면 CASCADE 옵션을 사용해야한다.</p>
</blockquote>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> DIRECTOR;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-3/image-20201219001645684.png" alt="image-20201219001645684" style="zoom:80%;">
<br>
<p>지금 DIRECTOR 테이블의 DIRECTOR_ID 컬럼이 FILMS 테이블에서 FK로 참조되고 있기 때문에 FK 제약 조건으로 인해 테이블 제거할 수 없다.</p>
<p>이 경우에 <code>DROP TABLE ... CASCADE</code> 명령어를 이용하여 해당 테이블과 관계된 모든 개체를 함계 삭제한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> DIRECTOR <span class="keyword">CASCADE</span>;  <span class="comment">-- CASCADE 옵션으로 제거 성공</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 제거 성공 확인</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DIRECTOR;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-3/image-20201219002930259.png" alt="image-20201219002930259" style="zoom:80%;">
<br>
<p>부모 테이블이 제거된 경우 자식 테이블의 행은 존재하지반 FK 제약 조건은 삭제됨.</p>
<p><img src="/images/S-SQL-Table-3/image-20201219003312930.png" alt="image-20201219003312930"></p>
<br>
<img src="/images/S-SQL-Table-3/image-20201219003236123.png" alt="image-20201219003236123" style="zoom:80%;">
<br>
<br>
<p><strong>[MISSION 2]</strong>  자식 테이블 (FILMS 테이블)을 제거하기</p>
<blockquote>
<p>자식 테이블은 바로 제거할 수 있다.</p>
</blockquote>
<p>두 테이블을 다시 생성한 후 자식 테이블 (FILMS 테이블)을 먼저 제거 한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> FILMS;  <span class="comment">-- 자식 테이블 제거 성공</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 제거 성공 확인</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> FILMS;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-3/image-20201219004411124.png" alt="image-20201219004411124" style="zoom:80%;">
<br>
<br>
<h2 id="2-임시-테이블"><a class="markdownIt-Anchor" href="#2-임시-테이블"></a> <strong>2. 임시 테이블</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>임시 테이블은 DB 접속 세션의 활동 기간 동안 존재하는 테이블이다. 세션이 종료되면 임시 테이블은 자동으로 소멸된다.</p>
<br>
<h3 id="2-2-임시-테이블-생성-문법"><a class="markdownIt-Anchor" href="#2-2-임시-테이블-생성-문법"></a> 2-2. 임시 테이블 생성 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> TEMP <span class="keyword">TABLE</span> </span><br><span class="line">  TABLE_NAME (<span class="keyword">COLUMN</span>);</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="2-3-임시-테이블-실습"><a class="markdownIt-Anchor" href="#2-3-임시-테이블-실습"></a> 2-3. 임시 테이블 실습</h3>
<p><strong>[실습 1]  임시 테이블 생성 후 세션 재접속</strong></p>
<blockquote>
<p>세션을 종료 후 재접속을 하면 임시 테이블이 소멸된다.</p>
</blockquote>
<br>
<ol>
<li>
<p>임시 테이블 생성</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> TEMP <span class="keyword">TABLE</span> </span><br><span class="line">  TB_CUST_TEMP_TEST (CUST_ID <span class="built_in">INT</span>);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TB_CUST_TEMP_TEST;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201219145857043.png" alt="image-20201219145857043"></p>
</li>
</ol>
<br>
<ol start="2">
<li>
<p>테이블에 값을 입력하기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TB_CUST_TEMP_TEST</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>);</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201219150041690.png" alt="image-20201219150041690"></p>
<br>
</li>
<li>
<p>세션 종료 후 재접속</p>
<img src="/images/S-SQL-Table-3/image-20201219152332829.png" alt="image-20201219152332829" style="zoom:67%;">
</li>
</ol>
<br>
<ol start="4">
<li>
<p>임시 테이블 불러오기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TB_CUST_TEMP_TEST;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-3/image-20201219152608366.png" alt="image-20201219152608366" style="zoom:80%;">
<br>
</li>
</ol>
<ul>
<li>세션을 종료 후 재접속을 하면 임시 테이블이 소멸된 것을 확인할 수 있다.</li>
</ul>
<br>
<br>
<p><strong>[실습 2]  기존에 존재하는 테이블과 같은 이름으로 임시 테이블 생성 후 제거</strong></p>
<blockquote>
<p>같은 이름의 일반 테이블과 임시 테이블이 동시에 존재할 경우:</p>
<ul>
<li>
<p>SELECT 문으로 테이블 조회할 때 <strong>임시 테이블</strong>을 볼러온다</p>
</li>
<li>
<p>DROP 문으로 테이블 제거할 때도 <strong>임시 테이블</strong>을 먼저 제거한다.</p>
</li>
</ul>
</blockquote>
<br>
<ol>
<li>
<p>일반 테이블 생성</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TB_CUST_TEMP_TEST</span><br><span class="line">(</span><br><span class="line">  CUST_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  CUST_NAME <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
<br>
<ol start="2">
<li>
<p>같은 이름의 임시 테이블 생성</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> TEMP <span class="keyword">TABLE</span> TB_CUST_TEMP_TEST</span><br><span class="line">( CUST_ID <span class="built_in">INT</span> );</span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
<br>
<ol start="3">
<li>
<p>테이블 조회</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TB_CUST_TEMP_TEST;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201219164733538.png" alt="image-20201219164733538"></p>
<ul>
<li>임시 테이블을 불러오는 것을 확인할 수 있다</li>
</ul>
</li>
</ol>
<br>
<ol start="4">
<li>
<p>테이블 제거</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> TB_CUST_TEMP_TEST;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TB_CUST_TEMP_TEST;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201219164935024.png" alt="image-20201219164935024"></p>
<ul>
<li>임시 테이블이 제거되고 일반 테이블이 그대로 남아있는 것을 확인할 수 있다.</li>
</ul>
</li>
</ol>
<br>
<br>
<h2 id="3-truncate"><a class="markdownIt-Anchor" href="#3-truncate"></a> <strong>3. TRUNCATE</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>대용량의 테이블을 빠르게 지우는 방법으로 TRUNCATE가 있다. 테이블의 세그먼트 자체를 바로 지우기 때문에 빠르게 데이터가 지워진다.</p>
<br>
<p><strong>&gt;&gt; DELETE  <font color="red">VS</font>  TRUNCATE</strong></p>
<img src="/images/S-SQL-Table-3/image-20201221144141568.png" alt="image-20201221144141568" style="zoom: 50%;">
<br>
<table>
<thead>
<tr>
<th style="text-align:left">DELETE</th>
<th style="text-align:left">TRUNCATE</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">데이터가 지워지지만 테이블 용량이 줄어 들지 않는다.</td>
<td style="text-align:left">테이블을 삭제하지 않고 데이터만 삭제하지만, 테이블 용량이 줄어 든다.</td>
</tr>
<tr>
<td style="text-align:left">원하는 데이터만 지울 수 있다.</td>
<td style="text-align:left">한꺼번에 다 지워야 한다.</td>
</tr>
<tr>
<td style="text-align:left">삭제 후 잘못 삭제한 것을 되돌릴 수 있다.</td>
<td style="text-align:left">삭제 후 되돌릴 수 없다.</td>
</tr>
<tr>
<td style="text-align:left">속도가 느리다.</td>
<td style="text-align:left">속도가 빠르다.</td>
</tr>
</tbody>
</table>
<br>
<h3 id="3-2-truncate-문법"><a class="markdownIt-Anchor" href="#3-2-truncate-문법"></a> 3-2. TRUNCATE 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 1개의 테이블 데이터를 빠라게 삭제</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> BIG_TABLE;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- N개의 테이블 데이터를 빠르게 삭제</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> BIG_TABLE_1, BIG_TABLE_2;</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-3-truncate-실습"><a class="markdownIt-Anchor" href="#3-3-truncate-실습"></a> 3-3. TRUNCATE 실습</h3>
<p>먼저 ACCOUNT 테이블과 동일한 새로운 테이블 BIG_TABLE를 만든다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> BIG_TABLE <span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SELECT</span> * <span class="keyword">FORM</span> <span class="keyword">ACCOUNT</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201221150858588.png" alt="image-20201221150858588"></p>
<br>
<p>이제 TRUNCATE 문을 이용하여 BIG_TABLE의 데이터를 모두 삭제한다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> BIG_TABLE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> BIG_TABLE;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201221151023059.png" alt="image-20201221151023059"></p>
<br>
<p>* ROLLBACK을 통해 데이터를 다시 복원할 수 없다.</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ROLLBACK</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FORM</span> BIG_TABLE;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-3/image-20201221151023059.png" alt="image-20201221151023059"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 9. Table</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL &gt;&gt; 테이블 관리 (1)</title>
    <url>/2020/12/21/S-SQL-Table-1/</url>
    <content><![CDATA[<h1 id="테이블-관리-1"><a class="markdownIt-Anchor" href="#테이블-관리-1"></a> 테이블 관리 (1)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85"><strong>1. 데이터 타입</strong></a>
<ul>
<li><a href="#boolean-character-numeric">&gt;&gt; Boolean, Character, Numeric</a></li>
<li><a href="#time-arrays-json">&gt;&gt; Time, Arrays, JSON</a></li>
</ul>
</li>
<li><a href="#2-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1"><strong>2. 테이블 생성</strong></a></li>
<li><a href="#3-ctas-create-table-as-select"><strong>3. CTAS (CREATE TABLE AS SELECT)</strong></a>
<ul>
<li><a href="#3-1-%EA%B0%9C%EB%85%90">3-1. 개념</a></li>
<li><a href="#3-2-ctas-%EB%AC%B8%EB%B2%95">3-2. CTAS 문법</a></li>
<li><a href="#3-3-ctas-%EC%8B%A4%EC%8A%B5">3-3. CTAS 실습</a></li>
</ul>
</li>
<li><a href="#4-%ED%85%8C%EC%9D%B4%EB%B8%94-%EA%B5%AC%EC%A1%B0-%EB%B3%80%EA%B2%BD"><strong>4. 테이블 구조 변경</strong></a></li>
<li><a href="#5-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD"><strong>5. 테이블 이름 변경</strong></a>
<ul>
<li><a href="#5-1-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD-%EB%AC%B8%EB%B2%95">5-1. 테이블 이름 변경 문법</a></li>
<li><a href="#5-2-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%9D%B4%EB%A6%84-%EB%B3%80%EA%B2%BD-%EC%8B%A4%EC%8A%B5">5-2. 테이블 이름 변경 실습</a></li>
<li><a href="#5-3-%EA%B1%B8%EB%A1%A0">5-3. 걸론</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-데이터-타입"><a class="markdownIt-Anchor" href="#1-데이터-타입"></a> <strong>1. 데이터 타입</strong></h2>
<p>테이블은 컬럼으로 이루어져 있고 컬럼은 다양한 데이터 타입을 지원한다. 이는 RDBMS가 제 역할을 하는데 있어서 매우 중요하다.</p>
<br>
<p>다양한 데이터 타입 지원:</p>
<ul>
<li>Boolean</li>
<li>Character</li>
<li>Numeric</li>
<li>Time</li>
<li>Arrays</li>
<li>JSON</li>
</ul>
<br>
<h3 id="boolean-character-numeric"><a class="markdownIt-Anchor" href="#boolean-character-numeric"></a> &gt;&gt; Boolean, Character, Numeric</h3>
<table>
<thead>
<tr>
<th style="text-align:left">데이터 타입</th>
<th style="text-align:left">세부 타입</th>
<th style="text-align:left">설명</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Boolean</td>
<td style="text-align:left">Boolean</td>
<td style="text-align:left">참과 거짓의 값을 저장한다.</td>
</tr>
<tr>
<td style="text-align:left">Character</td>
<td style="text-align:left">CHAR</td>
<td style="text-align:left">고정형 길이의 문자열을 저장한다. <br>만약 CHAR(10)인데 'ABCDE’만 입력할 경우 실제로는 'ABCDE     '로 뒤에 공백을 붙여 저장한다.</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">VARCHAR</td>
<td style="text-align:left">가변형 길이의 분자열을 저장한다. <br> 만약 VARCHAR(10) 인데 'ABCDE’만 입력할 경우 실제로 'ABCDE’만 저장한다. (뒤에 공백을 붙이지 않는다)</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">TEXT</td>
<td style="text-align:left">대용량의 문자데이터를 저장한다.</td>
</tr>
<tr>
<td style="text-align:left">Numeric</td>
<td style="text-align:left">INT</td>
<td style="text-align:left">정수형데이터를 저장한다. 크기는 4byte이다. (범위는 -2,147,483,648 to 2,147,483,647)</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">SMALLINT</td>
<td style="text-align:left">정수형 데이터를 저장한다. 크기는 2byte이다. (범위는 -32,768 to 32,767)</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">float</td>
<td style="text-align:left">부동 소수점의 데이터를 저장한다. 크기는 8byte이다.</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">numeric</td>
<td style="text-align:left">NUMERIC(15, 2)와 같이 전체 크기와 소수점의 자리를 지정할 수 있다.</td>
</tr>
</tbody>
</table>
<br>
<p><strong>[실습]</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span></span><br><span class="line">DATA_TYPE_TEST_1</span><br><span class="line">(</span><br><span class="line">  A_BOOLEAN <span class="built_in">BOOLEAN</span>,</span><br><span class="line">  B_CHAR <span class="built_in">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">  C_VARCHAR <span class="built_in">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">  D_TEXT <span class="built_in">TEXT</span>,</span><br><span class="line">  E_INT <span class="built_in">INT</span>,</span><br><span class="line">  F_SMALLINT <span class="built_in">SMALLINT</span>,</span><br><span class="line">  G_FLOAT <span class="built_in">FLOAT</span>,</span><br><span class="line">  H_NUMERIC <span class="built_in">NUMERIC</span>(<span class="number">15</span>, <span class="number">2</span>)</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> </span><br><span class="line">DATA_TYPE_TEST_1</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(</span><br><span class="line">  <span class="literal">TRUE</span>,        <span class="comment">-- A_BOOLEAN</span></span><br><span class="line">  <span class="string">'ABCDE'</span>,     <span class="comment">-- B_CHAR</span></span><br><span class="line">  <span class="string">'ABCDE'</span>,     <span class="comment">-- C_VARCHAR</span></span><br><span class="line">  <span class="string">'TEXT'</span>,      <span class="comment">-- D_TEXT</span></span><br><span class="line">  <span class="number">1000</span>,        <span class="comment">-- E_INT</span></span><br><span class="line">  <span class="number">10</span>,          <span class="comment">-- F_SMALLINT</span></span><br><span class="line">  <span class="number">10.12345</span>,    <span class="comment">-- G_FLOAT</span></span><br><span class="line">  <span class="number">10.25</span>        <span class="comment">-- H_NUMERIC</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DATA_TYPE_TEST_1;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201207164552207.png" alt="image-20201207164552207"></p>
<br>
<br>
<h3 id="time-arrays-json"><a class="markdownIt-Anchor" href="#time-arrays-json"></a> &gt;&gt; Time, Arrays, JSON</h3>
<table>
<thead>
<tr>
<th style="text-align:left">데이터 타입</th>
<th style="text-align:left">세부 타입</th>
<th style="text-align:left">설명</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Time</td>
<td style="text-align:left">Date</td>
<td style="text-align:left">일자 데이터를 저장한다.</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">TIME</td>
<td style="text-align:left">시간 데이터를 저장한다.</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left">TIMESTAMP</td>
<td style="text-align:left">일자와 시간 데이터를 모두 저장한다.</td>
</tr>
<tr>
<td style="text-align:left">Arrays</td>
<td style="text-align:left">array</td>
<td style="text-align:left">배열 형식의 데이터를 저장한다. <br> 한개의 컬럼에 여러개의 데이터를 동시에 저장할 수 있으며 저장한 데이터의 순서로 조회할 수 있다.</td>
</tr>
<tr>
<td style="text-align:left">JSON</td>
<td style="text-align:left">JSON</td>
<td style="text-align:left">JSON형식의 데이터를 저장한다. <br> JSON형식의 데이터를 입력해서 JSON형식대로 각 LEVEL의 데이터를 저장할 수 있다.</td>
</tr>
</tbody>
</table>
<br>
<p><strong>[실습]</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> DATA_TYPE_TEST_2</span><br><span class="line">(</span><br><span class="line">  A_DATE <span class="built_in">DATE</span>,</span><br><span class="line">  B_TIME <span class="built_in">TIME</span>,</span><br><span class="line">  C_TIMESTAMP <span class="built_in">TIMESTAMP</span>,</span><br><span class="line">  D_ARRAY <span class="built_in">TEXT</span>[],</span><br><span class="line">  E_JSON <span class="keyword">JSON</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> DATA_TYPE_TEST_2</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(</span><br><span class="line"> <span class="keyword">CURRENT_DATE</span>,        <span class="comment">-- A_DATE</span></span><br><span class="line"> <span class="keyword">LOCALTIME</span>,           <span class="comment">-- B_TIME</span></span><br><span class="line"> <span class="keyword">CURRENT_TIMESTAMP</span>,   <span class="comment">-- C_TIMESTAMP</span></span><br><span class="line"> <span class="built_in">ARRAY</span> [<span class="string">'010-1234-1234'</span>, <span class="string">'010-4321-4321'</span>],  <span class="comment">-- D_ARRAY</span></span><br><span class="line"> <span class="string">'{"customer": "John Doe", "items": {"product": "Beer", "qty": 6}}'</span>  <span class="comment">-- E_JSON</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> DATA_TYPE_TEST_2;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201207171138943.png" alt="image-20201207171138943">
<br>
<br>
<h2 id="2-테이블-생성"><a class="markdownIt-Anchor" href="#2-테이블-생성"></a> <strong>2. 테이블 생성</strong></h2>
<p>테이블은 데이터를 담는 그릇으로써 반드시 생성해야만 데이터를 저장할 수 있다.</p>
<br>
<p><strong>&gt;&gt; 테이블 생성 시 컬럼의 제약 조건</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">제약조건명</th>
<th style="text-align:left">설명</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">NOT NULL</td>
<td style="text-align:left">해당 제약 조건이 있는 컬럼은 NULL이 저장될 수 없다.</td>
</tr>
<tr>
<td style="text-align:left">UNIQUE</td>
<td style="text-align:left">해당 제약 조건이 있는 컬럼의 값은 테이블 내에서 유일해야 한다.</td>
</tr>
<tr>
<td style="text-align:left">PRIMARY KEY</td>
<td style="text-align:left">해당 제약 조건이 있는 컬럼의 값은 테이블 내에서 유일해야 하고 반드시 NOT NULL이어야 한다.</td>
</tr>
<tr>
<td style="text-align:left">CHECK</td>
<td style="text-align:left">해당 제약 조건이 있는 컬럼은 지정하는 조건에 맞는 값이 들어가야 한다.</td>
</tr>
<tr>
<td style="text-align:left">REFERENCES</td>
<td style="text-align:left">해당 제약 조건이 있는 컬럼의 값은 참조하는 테이블의 특정 컬럼에 값이 존재해야 한다.</td>
</tr>
</tbody>
</table>
<br>
<p><strong>&gt;&gt; 테이블 생성 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">ACCOUNT</span></span><br><span class="line">(</span><br><span class="line">  USER_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  USERNAME <span class="built_in">VARCHAR</span> (<span class="number">50</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">PASSWORD</span> <span class="built_in">VARCHAR</span> (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  EMAIL <span class="built_in">VARCHAR</span> (<span class="number">355</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  CREATED_ON <span class="built_in">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  LAST_LOGIN <span class="built_in">TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">ROLE</span></span><br><span class="line">(</span><br><span class="line">  ROLE_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  ROLE_NAME <span class="built_in">VARCHAR</span> (<span class="number">255</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ACCOUNT_ROLE</span><br><span class="line">(</span><br><span class="line">  USER_ID <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  ROLE_ID <span class="built_in">INTEGER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  GRANT_DATE <span class="built_in">TIMESTAMP</span> <span class="keyword">WITHOUT</span> <span class="built_in">TIME</span> ZONE,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (USER_ID, ROLE_ID),   <span class="comment">-- 기본키는 USER_ID + ROLE_ID로 한다</span></span><br><span class="line">  <span class="keyword">CONSTRAINT</span> ACCOUNT_ROLE_ROLE_ID_FKEY <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (ROLE_ID)  <span class="comment">-- ROLE_ID 컬럼은 ROLE 테이블의 ROLE_ID 컬럼을 참조한다</span></span><br><span class="line">  <span class="keyword">REFERENCES</span> <span class="keyword">ROLE</span> (ROLE_ID) <span class="keyword">MATCH</span> SIMPLE  <span class="comment">-- ROLE_ID 컬럼은 ROLE 테이블의 ROLE_ID컬럼에 대한 삭제 혹은 변경 시 아무것도 하지 않는다</span></span><br><span class="line">  <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span>,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> ACCOUNT_ROLE_USER_ID_FKEY <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (USER_ID)  <span class="comment">-- USER_ID 컬럼은 ACCOUNT 테이블의 USER_ID 컬럼을 참조한다</span></span><br><span class="line">  <span class="keyword">REFERENCES</span> <span class="keyword">ACCOUNT</span> (USER_ID) <span class="keyword">MATCH</span> SIMPLE  <span class="comment">-- USER_ID 컬럼은 ACCOUNT 테이블의  USER_ID 컬럼에 대한 삭제 혹은 변경 시 아무것도 하지 않는다</span></span><br><span class="line">  <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span> <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">NO</span> <span class="keyword">ACTION</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208111620532.png" alt="image-20201208111620532">
<ul>
<li>ACCOUNT 테이블과 ROLE 테이블은 다대다의 매칭관계이다.</li>
<li>두 테이블의 내용이 매칭될 수 있도록 ACCOUNT_ROLE 테이블을 생성하여 1대다의 관계를 만들어 준다.</li>
</ul>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">ACCOUNT</span></span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">'홍길동'</span>, <span class="string">'1234'</span>, <span class="string">'honggd@naver.com'</span>, <span class="keyword">CURRENT_TIMESTAMP</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">ACCOUNT</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208113648219.png" alt="image-20201208113648219">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">ROLE</span></span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'DBA'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">ROLE</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208113804601.png" alt="image-20201208113804601"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ACCOUNT_ROLE </span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="keyword">CURRENT_TIMESTAMP</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ACCOUNT_ROLE;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208114018320.png" alt="image-20201208114018320"></p>
<br>
<p><strong>&gt;&gt; 에러</strong></p>
<p><strong>(1)  참조 누락성 제약 조건 위반</strong></p>
<ul>
<li>참조키(Foreign Key)에 해당 데이터가 존재하지 않는 경우</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ACCOUNT_ROLE</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">1</span>, <span class="keyword">CURRENT_TIMESTAMP</span>);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208131508151.png" alt="image-20201208131508151" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ACCOUNT_ROLE</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="keyword">CURRENT_TIMESTAMP</span>);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208131440441.png" alt="image-20201208131440441" style="zoom:80%;">
<br>
<p><strong>(2)  고유 제약 조건 위반</strong></p>
<ul>
<li>중복값이 없어야 하는 PRIMARY KEY에 중복이 발생한 경우</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ACCOUNT_ROLE</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="keyword">CURRENT_TIMESTAMP</span>);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208131635637.png" alt="image-20201208131635637" style="zoom:80%;">
<br>
<p><strong>(3)  참조 시 갱신/삭제 불가</strong></p>
<ul>
<li>데이터가 참조되어 있을 때 해당 데이터를 갱신/삭제 불가한다.</li>
</ul>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">ACCOUNT</span></span><br><span class="line"><span class="keyword">SET</span> USER_ID = <span class="number">2</span></span><br><span class="line"><span class="keyword">WHERE</span> USER_ID = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208133014712.png" alt="image-20201208133014712" style="zoom:80%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">ACCOUNT</span></span><br><span class="line"><span class="keyword">WHERE</span> USER_ID = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208133014712.png" alt="image-20201208133014712" style="zoom:80%;">
<br>
<br>
<h2 id="3-ctas-create-table-as-select"><a class="markdownIt-Anchor" href="#3-ctas-create-table-as-select"></a> <strong>3. CTAS (CREATE TABLE AS SELECT)</strong></h2>
<h3 id="3-1-개념"><a class="markdownIt-Anchor" href="#3-1-개념"></a> 3-1. 개념</h3>
<p>CTAS는 CREATE TABLE AS SELECT의 약어로써 SELECT문을 기반으로 CREATE TABLE을 할 수 있는 CREATE문이다.</p>
<br>
<h3 id="3-2-ctas-문법"><a class="markdownIt-Anchor" href="#3-2-ctas-문법"></a> 3-2. CTAS 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> NEW_TABLE   <span class="comment">-- 새로운 테이블의 이름을 설정한다</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span>문                 <span class="comment">-- SELECT문을 작성한다</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> NEW_TABLE (NEW_COLUMN_1, NEW_COLUMN_2)  <span class="comment">-- 새로운 테이블명의 이름과 컬럼명을 설정한다</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span>문                 <span class="comment">-- SELECT문을 작성한다</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> NEW_TABLE   <span class="comment">-- 기존에 테이블이 존재하지 않는 경우만 생성한다</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span>문                 <span class="comment">-- SELECT문을 작성한다</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="3-3-ctas-실습"><a class="markdownIt-Anchor" href="#3-3-ctas-실습"></a> 3-3. CTAS 실습</h3>
<p><strong>[MISSION]</strong>  액션영화의 정보만으로 신규 테이블을 생성</p>
<img src="/images/S-SQL-Table-1/image-20201208140314164.png" alt="image-20201208140314164" style="zoom:67%;">
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">CATEGORY</span> <span class="keyword">WHERE</span> CATEGORY_ID = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208140547218.png" alt="image-20201208140547218"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  A.FILM_ID, </span><br><span class="line">  A.TITLE,</span><br><span class="line">  A.RELEASE_YEAR,</span><br><span class="line">  A.LENGTH,</span><br><span class="line">  A.RATING</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM A,</span><br><span class="line">  FILM_CATEGORY B</span><br><span class="line"><span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line"><span class="keyword">AND</span> B.CATEGORY_ID = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208140813355.png" alt="image-20201208140813355" style="zoom:80%;">
<br>
<br>
<p>&gt;&gt; 액션 영화 테이블 생성</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ACTION_FILM <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  A.FILM_ID, </span><br><span class="line">  A.TITLE,</span><br><span class="line">  A.RELEASE_YEAR,</span><br><span class="line">  A.LENGTH,</span><br><span class="line">  A.RATING</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  FILM A,</span><br><span class="line">  FILM_CATEGORY B</span><br><span class="line"><span class="keyword">WHERE</span> A.FILM_ID = B.FILM_ID</span><br><span class="line"><span class="keyword">AND</span> B.CATEGORY_ID = <span class="number">1</span>;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ACTION_FILM;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208140813355.png" alt="image-20201208140813355" style="zoom:80%;">
<br>
<br>
<h2 id="4-테이블-구조-변경"><a class="markdownIt-Anchor" href="#4-테이블-구조-변경"></a> <strong>4. 테이블 구조 변경</strong></h2>
<p>한번 만들어진 테이블이라고 하더라도 데이블 구조를 변경할 수 있다. 이 기능으로 인해 업무변화에 유연하게 대처할 수 있다.</p>
<br>
<p><strong>&gt;&gt; 테이블 구조 변경 실습</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> LINKS </span><br><span class="line">(</span><br><span class="line">  LINK_ID <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  TITLE <span class="built_in">VARCHAR</span> (<span class="number">512</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">URL</span> <span class="built_in">VARCHAR</span> (<span class="number">1024</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span></span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208143703988.png" alt="image-20201208143703988"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 1) ACTIVE 컬럼을 추가</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> LINKS <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> ACTIVE <span class="built_in">BOOLEAN</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208143726988.png" alt="image-20201208143726988"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 2) ACTIVE 컬럼을 제거</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> LINKS <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> ACTIVE;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208143703988.png" alt="image-20201208143703988"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 3) TITLE 컬럼을 LINK_TITLE 컬럼으로 변경</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> LINKS <span class="keyword">RENAME</span> <span class="keyword">COLUMN</span> TITLE <span class="keyword">TO</span> LINK_TITLE;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208144037777.png" alt="image-20201208144037777"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 4) TARGET 컬럼을 추가</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> LINKS <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> TARGET <span class="built_in">VARCHAR</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208144143373.png" alt="image-20201208144143373"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 5) TARGET 컬럼의 DEFAULT값을 "_blank"로 설정</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> LINKS <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> TARGET</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="string">'_blank'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208144308010.png" alt="image-20201208144308010"></p>
<br>
<ul>
<li>
<p>데이터 추가 해보기</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> LINKS (LINK_TITLE, <span class="keyword">URL</span>)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'PostgreSQL Tutorial'</span>, <span class="string">'http://www.postgresqltutorial.com/'</span>);</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> LINKS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208151743700.png" alt="image-20201208151743700"></p>
</li>
</ul>
<br>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 6) 체크 제약 조건 추가</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> LINKS <span class="keyword">ADD</span> <span class="keyword">CHECK</span> (TARGET <span class="keyword">IN</span> (<span class="string">'_self'</span>, <span class="string">'_blank'</span>, <span class="string">'_parent'</span>, <span class="string">'_top'</span>));</span><br></pre></td></tr></tbody></table></figure>
<br>
<ul>
<li>
<p>TARGET 컬럼의 체크 제약 조건에 없는 ‘whatever’ 값으로 INSERT 시도</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> LINKS (LINK_TITLE, <span class="keyword">URL</span>, TARGET)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'PostgreSQL'</span>, <span class="string">'http://www.postgresql.org/'</span>, <span class="string">'whatever'</span>);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208154416334.png" alt="image-20201208154416334" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p>TARGET 컬럼의 체크 제약 조건에 없는 ‘whatever’ 값으로 INSERT 시도</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> LINKS (LINK_TITLE, <span class="keyword">URL</span>, TARGET)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'PostgreSQL'</span>, <span class="string">'http://www.postgresql.org/'</span>, <span class="string">'_self'</span>);</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208154617221.png" alt="image-20201208154617221" style="zoom:80%;">
</li>
</ul>
<br>
<br>
<h2 id="5-테이블-이름-변경"><a class="markdownIt-Anchor" href="#5-테이블-이름-변경"></a> <strong>5. 테이블 이름 변경</strong></h2>
<p>한번 만들어진 테이블이라고 하더라도 테이블 이름을 변경할 수 있다. 이 기능으로 인해 업무변화에 유연하게 대처할 수 있다.</p>
<br>
<h3 id="5-1-테이블-이름-변경-문법"><a class="markdownIt-Anchor" href="#5-1-테이블-이름-변경-문법"></a> 5-1. 테이블 이름 변경 문법</h3>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> OLD_TABLE_NAME</span><br><span class="line">  <span class="keyword">RENAME</span> <span class="keyword">TO</span> NEW_TABLE_NAME</span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="5-2-테이블-이름-변경-실습"><a class="markdownIt-Anchor" href="#5-2-테이블-이름-변경-실습"></a> 5-2. 테이블 이름 변경 실습</h3>
<p><strong>&gt;&gt; 테이블 이름 변경 실습 (1)</strong></p>
<p><strong>[MISSION]</strong> VENDORS 테이블을 SUPPLIERS 테이블로 변경</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- VENDORS 테이블 생성</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> VENDORS</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> VENDORS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208164854947.png" alt="image-20201208164854947"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- VENDORS 테이블의 이름을 SUPPLIERS 로 변경</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> VENDORS <span class="keyword">RENAME</span> <span class="keyword">TO</span> SUPPLIERS;</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> SUPPLIERS;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208164854947.png" alt="image-20201208164854947"></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> VENDORS;</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-SQL-Table-1/image-20201208171311297.png" alt="image-20201208171311297" style="zoom:80%;">
<br>
<p><strong>&gt;&gt; 테이블 이름 변경 실습 (2)</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- SUPPLIER_GROUPS 테이블 생성</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SUPPLIER_GROUPS</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">ID</span> <span class="built_in">SERIAL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">  <span class="keyword">NAME</span> <span class="built_in">VARCHAR</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- SUPPLIERS 테이블에 컬럼 추가 후 FK 생성</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> SUPPLIERS <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="keyword">GROUP_ID</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;  <span class="comment">-- SUPPLIERS 테이블에 GROUP_ID 컬럼 추가</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> SUPPLIERS <span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="keyword">GROUP_ID</span>)  </span><br><span class="line"><span class="keyword">REFERENCES</span> SUPPLIER_GROUPS (<span class="keyword">ID</span>);   <span class="comment">-- SUPPLIER_GROUPS 테이블의 ID 컬럼을 참조하여 SUPPLIERS 테이블의 GROUP_ID 컬러의 값을 지정</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208170321928.png" alt="image-20201208170321928"></p>
<br>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">-- 아래와 같은 뷰를 생성 (뷰는 실체하는 데이터가 아닌 보기용)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> SUPPLIER_DATA <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  S.ID,</span><br><span class="line">  S.NAME,</span><br><span class="line">  G.NAME <span class="string">"GROUP"</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  SUPPLIERS S, SUPPLIER_GROUPS G</span><br><span class="line"><span class="keyword">WHERE</span> G.ID = S.GROUP_ID;</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-SQL-Table-1/image-20201208171537315.png" alt="image-20201208171537315"></p>
<br>
<p><strong>1)  먼저 SUPPLIERS 테이블의 생성 과정 (DDL)를 살펴 본다</strong></p>
<p>[SUPPLIERS 테이블 --&gt; 우클릭 --&gt; SQL 생성 --&gt; DDL]</p>
<img src="/images/S-SQL-Table-1/image-20201208172445817.png" alt="image-20201208172445817" style="zoom: 67%;">
<ul>
<li>지금 SUPPLIERS 테이블의 GROUP_ID 컬럼은 SUPPLIER_GROUPS 테이블의 ID 컬럼을 참조하고 있다.</li>
<li>그렇다면 여기서 부모 테이블인 SUPPLIER_GROUPS 테이블의 테이블명을 바꾸면 자식 테이블인 SUPPLIERS 테이블은 어떻게 될까?</li>
</ul>
<br>
<p><strong>2) SUPPLIER_GROUPS 테이블의 이름을 “GROUPS” 로 바꾼다</strong></p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> SUPPLIER_GROUPS <span class="keyword">RENAME</span> <span class="keyword">TO</span> <span class="keyword">GROUPS</span>;</span><br></pre></td></tr></tbody></table></figure>
<p>다시 SUPPLIERS 테이블의 DDL을 확인:</p>
<img src="/images/S-SQL-Table-1/image-20201209093846550.png" alt="image-20201209093846550" style="zoom: 67%;">
<ul>
<li>이제 SUPPLIERS 테이블의 GROUP_ID 컬럼은 GROUPS 테이블의 ID 컬럼을 참조하고 있다.</li>
<li>즉 테이블명의 변경이 자동으로 반영된다.</li>
</ul>
<br>
<p>그렇다면 우리가 만들었던 SUPPLIER_DATA 뷰는 어떻게 되었을까?</p>
<img src="/images/S-SQL-Table-1/image-20201209093635706.png" alt="image-20201209093635706" style="zoom:80%;">
<ul>
<li>테이블명이 바뀌었음에도 불구하고 자동으로 GROUPS 테이블을 참조하고 있다.</li>
<li>즉 테이블명의 변경이 자동으로 반영된다.</li>
</ul>
<br>
<h3 id="5-3-걸론"><a class="markdownIt-Anchor" href="#5-3-걸론"></a> 5-3. 걸론</h3>
<ol>
<li>ALTER TALBE 문을 활용하여 테이블의 이름을 변경 가능.</li>
<li>테이블 이름 변경하면, 기존의 참조무걸성 제약조건이나 뷰 등이 자동으로 반영된다.</li>
</ol>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - SQL】</category>
        <category>SQL - 9. Table</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Advanced (2) Time-Based Data</title>
    <url>/2022/06/27/S-Tableau-Advanced-2-Time-Based-Data/</url>
    <content><![CDATA[<h1 id="time-based-data"><a class="markdownIt-Anchor" href="#time-based-data"></a> Time-Based Data</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-using-sparklines-to-show-trends-over-time"><strong>1. Using Sparklines to Show Trends Over Time</strong></a>
<ul>
<li><a href="#create-a-sparklines-chart">&gt;&gt; Create a sparklines chart</a></li>
</ul>
</li>
<li><a href="#2-using-a-slope-chart-to-tell-a-before-and-after-story"><strong>2. Using a Slope Chart to Tell a Before and After Story</strong></a>
<ul>
<li><a href="#create-a-slope-chart">&gt;&gt; Create a slope chart</a></li>
</ul>
</li>
<li><a href="#3-monitoring-quality-control-with-a-control-chart"><strong>3. Monitoring Quality Control with a Control Chart</strong></a>
<ul>
<li><a href="#create-a-control-chart">&gt;&gt; Create a control chart</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-using-sparklines-to-show-trends-over-time"><a class="markdownIt-Anchor" href="#1-using-sparklines-to-show-trends-over-time"></a> <strong>1. Using Sparklines to Show Trends Over Time</strong></h2>
<p>Sparkline charts are small line charts that displayed without axes and headers.</p>
<p>Sparkline charts present high level comparisons of data over a period of time. Also, they fit in a small area and are mostly used to show trends in a simple, condensed way.</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705085649245.png" alt="image-20210705085649245" style="zoom: 67%;">
<br>
<br>
<h3 id="create-a-sparklines-chart"><a class="markdownIt-Anchor" href="#create-a-sparklines-chart"></a> &gt;&gt; Create a sparklines chart</h3>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>We want to analyze sales by country over time. We’ll create a chart with sparklines to view the general trend for each country at a glance.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Create a line chart</strong></p>
<p>Build a view that displays Sales by Country against discrete month of Order Date and let the chart fit height.</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705091450773.png" alt="image-20210705091450773" style="zoom:45%;">
<br>
<p><strong>[STEP 2] Use an independent axis range for sales</strong></p>
<p>By default, the rows display the same range. To make the individual lines more distinct, we can set the Sales axis to display as independent ranges per row.</p>
<ul>
<li>Right-click the Sales axis --&gt; [Edit Axis]</li>
<li>[Range] --&gt; select [Independent axis ranges for each row or column]</li>
</ul>
<p><img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705092253903-165631147574938.png" alt="image-20210705092253903" style="zoom:40%;"><img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705092450515.png" alt="image-20210705092450515" style="zoom:45%;"></p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705092722627.png" alt="image-20210705092722627" style="zoom:50%;">
<br>
<p><strong>[STEP 3] Highlight the last data point for each country</strong></p>
<ul>
<li>
<p>Create a calculated field that calculates the last sales mark of 2016</p>
<ul>
<li>
<p>This calculation finds the last row in each pane,</p>
<p>- If the value is not null, then returns SUM(Sales)</p>
<p>- If the value is null, then returns 0</p>
</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705093756770.png" alt="image-20210705093756770" style="zoom:50%;">
</li>
<li>
<p>Create a synchronized dual axis chart with “Last Sales” and “SUM(Sales)”</p>
</li>
<li>
<p>Hide the nulls from the view and change the circle marks color</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705101158559.png" alt="image-20210705101158559" style="zoom:45%;">
</li>
</ul>
<br>
<p><strong>[STEP 4] Hide the axes and set default number to standard currency</strong></p>
<ul>
<li>Hide the date and sales headers</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705101440095.png" alt="image-20210705101440095" style="zoom:50%;">
<br>
<ul>
<li>Set default number to standard currency</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705102202194.png" alt="image-20210705102202194" style="zoom:45%;">
<br>
<p><strong>[STEP 5] Add the sparklines sheet to the dashboard</strong></p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705102751579.png" alt="image-20210705102751579" style="zoom:50%;">
<br>
<br>
<h2 id="2-using-a-slope-chart-to-tell-a-before-and-after-story"><a class="markdownIt-Anchor" href="#2-using-a-slope-chart-to-tell-a-before-and-after-story"></a> <strong>2. Using a Slope Chart to Tell a Before and After Story</strong></h2>
<p>When you have time-based data that is shown by rank, an interesting way to summarize change over time is by using a slope chart.</p>
<p>Slope charts show changes in rank or position for a dimension using a start point and an end point. You can use a slope chart when you want to show whether a particular dimension has increased or decreased between two points in time.</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705112102150.png" alt="image-20210705112102150" style="zoom:50%;">
<br>
<h3 id="create-a-slope-chart"><a class="markdownIt-Anchor" href="#create-a-slope-chart"></a> &gt;&gt; Create a slope chart</h3>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>We want to know the rank of the top 10 names and see if these names have decreased or increased in popularity.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Remain data of the two time points to compare</strong></p>
<ul>
<li><strong>Columns:</strong> Discrete [Birth Year]  	<strong>Rows:</strong>        SUM(Count)</li>
<li>Filter the Birth Year to 2011 and 2013, and widen rows in the view (Ctrl + ‘-&gt;’ arrow)</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705135923667.png" alt="image-20210705135923667" style="zoom:50%;">
<br>
<p><strong>[STEP 2] Rank the names of two years by count</strong></p>
<ul>
<li>Label the marks with Name</li>
<li>Add a Rank quick table calculation, and compute using Name</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705140429955.png" alt="image-20210705140429955" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705140509304.png" alt="image-20210705140509304" style="zoom:50%;">
<br>
<p><strong>[STEP 3] Show only the top 10 names</strong></p>
<ul>
<li>Ctrl + drag [SUM(Count)] rank calculation in Rows to Filters pane</li>
<li>set the range from 1 to 10</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705141345386.png" alt="image-20210705141345386" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705141404426.png" alt="image-20210705141404426" style="zoom:50%;">
<br>
<ul>
<li>
<p>Reverse the rank of Count axis, and show line ends</p>
<ul>
<li>
<p>Right-click the Count axis --&gt; Edit Axis --&gt; Scale: [Reversed]</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705141803003.png" alt="image-20210705141803003" style="zoom:50%;"> 
</li>
</ul>
<br>
<ul>
<li>
<p>On Marks card, click [Label] --&gt; Marks to Label: Line Ends</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705141936224.png" alt="image-20210705141936224" style="zoom:50%;"> 
<br>
</li>
<li>
<p>Edit the labels to display rank before name, and align the view to top left</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705144048930.png" alt="image-20210705144048930" style="zoom:50%;"> 
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705144154646.png" alt="image-20210705144154646" style="zoom:50%;"> 
</li>
</ul>
</li>
</ul>
<br>
<p><strong>[STEP 4] Hide the Rank of Count axis and the row grid lines in the view</strong></p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705144418294.png" alt="image-20210705144418294" style="zoom:50%;">
<br>
<br>
<h2 id="3-monitoring-quality-control-with-a-control-chart"><a class="markdownIt-Anchor" href="#3-monitoring-quality-control-with-a-control-chart"></a> <strong>3. Monitoring Quality Control with a Control Chart</strong></h2>
<p>Control charts are used to study how a process changes over time. It is a statistical process control tool to determine if a manufacturing or business process is either inside or outside a predefined boundary.</p>
<p>Control charts are based on the line charts. By adding a mean line and an upper and lower control limits, which are typically based on the standard deviation, the simple line chart is transformed into a control chart. The control limits allow you to easily identify when the process is in or out of control.</p>
<br>
<h3 id="create-a-control-chart"><a class="markdownIt-Anchor" href="#create-a-control-chart"></a> &gt;&gt; Create a control chart</h3>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>When analyzing company’s sales over the past few years, we want to know whether there are seasonal effects on sales: Are sales lower or higher than a predicted range during certain months?</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Create the base line chart that showing sales over the order date</strong></p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705163543273.png" alt="image-20210705163543273" style="zoom:50%;">
<br>
<p><strong>[STEP 2] Add a reference line for average sales by pane</strong></p>
<ul>
<li>
<p>[Analytics] Pane --&gt; Drag [Reference Line] to the view --&gt; Drop it on [Pane]</p>
</li>
<li>
<p>Set the mean reference line:</p>
<ul>
<li>Value: SUM(Sales) set to Average</li>
<li>Label: None</li>
<li>Line: Gray dashed line</li>
</ul>
<p><img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705164442375-165631151607540.png" alt="image-20210705164442375" style="zoom:40%;"><img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705163910350.png" alt="image-20210705163910350" style="zoom:50%;"></p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705170924058.png" alt="image-20210705170924058" style="zoom:50%;"> 
</li>
</ul>
<br>
<p><strong>[STEP 3] Add the upper and lower control limits line by pane</strong></p>
<ul>
<li>
<p>Calculate the upper and lower control limits using a window standard deviation:</p>
<p>​	Upper control limit: <code>WINDOW_AVG(SUM([Sales])) + WINDOW_STDEV(SUM([Sales]))</code></p>
<p>​	Lower control limit: <code>WINDOW_AVG(SUM([Sales])) - WINDOW_STDEV(SUM([Sales]))</code></p>
<br>
</li>
<li>
<p>Add the control limits band to the view</p>
<ul>
<li>
<p>Add the Upper and Lower Control Limit fields to Detail</p>
</li>
<li>
<p>Add a reference band using the control limits as boundaries</p>
<p>- [Analytics] Pane --&gt; Drag [Reference Line] to the view --&gt; Drop it on [Pane]</p>
<p>- Set the reference band:</p>
<pre><code>* Band From Value: Lower Control Limit set to Minimum
* Band To Value: Upper Control Limit set to Maximum
* Label: None on both
* Line: Red dashed line
* Fill: Light gray
</code></pre>
</li>
</ul>
<p><img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705170616393-165631155928542.png" alt="image-20210705170616393" style="zoom:40%;"><img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705165723714.png" alt="image-20210705165723714" style="zoom:55%;"></p>
</li>
</ul>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705171326710.png" alt="image-20210705171326710" style="zoom:50%;">
<br>
<ul>
<li>
<p>Set the Upper and Lower Control Limit fields to Compute Using: Pane (across)</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705171458678.png" alt="image-20210705171458678" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705171546539.png" alt="image-20210705171546539" style="zoom:50%;">
</li>
</ul>
<br>
<p><strong>[STEP 4] Highlight the points out of the control boundaries</strong></p>
<ul>
<li>
<p>Create a synchronized dual axis using another instance of Sales on Rows, and hide the right axis</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705171914939.png" alt="image-20210705171914939" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705172002211.png" alt="image-20210705172002211" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705172030100.png" alt="image-20210705172030100" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705172152903.png" alt="image-20210705172152903" style="zoom:50%;">
<br>
</li>
<li>
<p>Remove the [Lower Control Limit] and [Upper Control Limit] fields under the [SUM(Sales) (2)] Marks card, and change the mark type to Circle</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705172515621.png" alt="image-20210705172515621" style="zoom:50%;">
</li>
</ul>
<br>
<ul>
<li>
<p>Create a calculated field named “KPI” to highlight marks outside of the control boundaries, and rename the color legend to “KPI”</p>
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705172832868.png" alt="image-20210705172832868" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-2-Time-Based-Data/image-20210705172914273.png" alt="image-20210705172914273" style="zoom:50%;">
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 4. Advanced</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Advanced (3) Seasonality Show Trends with Cycle Plots</title>
    <url>/2022/06/27/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/</url>
    <content><![CDATA[<h1 id="seasonality-show-trends-with-cycle-plots"><a class="markdownIt-Anchor" href="#seasonality-show-trends-with-cycle-plots"></a> Seasonality: Show Trends with Cycle Plots</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-seasonality"><strong>1. Seasonality</strong></a></li>
<li><a href="#2-cycle-plots"><strong>2. Cycle Plots</strong></a></li>
<li><a href="#3-create-a-cycle-plot"><strong>3. Create a Cycle plot</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-seasonality"><a class="markdownIt-Anchor" href="#1-seasonality"></a> <strong>1. Seasonality</strong></h2>
<p><strong>Seasonality</strong> is any predictable change in a time series that repeats over a one-year period.</p>
<p>Discovering seasonality in our data is important because it helps us identify cyclic trends in our data that can help us with forecasting or making changes to our processes.</p>
<br>
<p>When you want to show seasonality over time, there are some options that can show a clear picture:</p>
<ul>
<li>
<p><strong>Single Line Chart:</strong> Shows seasonality over a one year period</p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706090238793.png" alt="image-20210706090238793" style="zoom:67%;"> 
<br>
</li>
<li>
<p><strong>Highlight Table:</strong> Shows seasonality using various colors and shades</p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706090403568.png" alt="image-20210706090403568" style="zoom:67%;"> 
<br>
</li>
<li>
<p><strong>Multiple Lines Chart:</strong> Shows seasonality over several years using multiple lines</p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706090515046.png" alt="image-20210706090515046" style="zoom:67%;"> 
</li>
</ul>
<br>
<br>
<h2 id="2-cycle-plots"><a class="markdownIt-Anchor" href="#2-cycle-plots"></a> <strong>2. Cycle Plots</strong></h2>
<p>Except these, <strong>Cycle plots</strong> are another way to show seasonality.</p>
<p><strong>Cycle plots</strong> are line charts that show the trends of <em><strong><font color="navy">two different time periods</font></strong></em> simultaneously (e.g. showing both month and year). The seasonal variations by month can be seen more easily with a cycle plot because it shows <em><strong><font color="navy">both the trend and the month-of-the-year effect.</font></strong></em></p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706091115235.png" alt="image-20210706091115235" style="zoom: 67%;">
<br>
<br>
<h2 id="3-create-a-cycle-plot"><a class="markdownIt-Anchor" href="#3-create-a-cycle-plot"></a> <strong>3. Create a Cycle plot</strong></h2>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>We have four years of sales data and have noticed peak sales during some months throughout the years. Does this indicate there is seasonality in our data? We would like to build a cycle plot to find out it.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Expand the Order Date in the view to show only discrete Year and Month</strong></p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706101729860.png" alt="image-20210706101729860" style="zoom:50%;">
<br>
<p><strong>[STEP 2] Invert the order of YEAR and MONTH and add an average line per pane</strong></p>
<p><img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706101954644.png" alt="image-20210706101954644" style="zoom:50%;"> <img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706102014377-165631183817810.png" alt="image-20210706102014377" style="zoom:45%;"></p>
<br>
<p><strong>[STEP 3] Change the marks to a light blue area</strong></p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706102121146.png" alt="image-20210706102121146" style="zoom:50%;">
<br>
<br>
<p><strong>[STEP 4] Add a dark blue line to the marks using a synchronized dual axis chart</strong></p>
<img src="/images/S-Tableau-Advanced-3-Seasonality-Show-Trends-with-Cycle-Plots/image-20210706102257272.png" alt="image-20210706102257272" style="zoom:50%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 4. Advanced</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (10) Showing Breakdowns of the Whole</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/</url>
    <content><![CDATA[<h1 id="showing-the-breakdowns-of-the-whole-pie-chart-tree-map"><a class="markdownIt-Anchor" href="#showing-the-breakdowns-of-the-whole-pie-chart-tree-map"></a> Showing the Breakdowns of the Whole (Pie Chart &amp; Tree Map)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-pie-chart"><strong>1. Pie Chart</strong></a>
<ul>
<li><a href="#create-a-pie-chart">&gt;&gt; Create a pie chart</a></li>
</ul>
</li>
<li><a href="#2-tree-map"><strong>2. Tree Map</strong></a>
<ul>
<li><a href="#build-a-treemap">&gt;&gt; Build a treemap</a>
<ul>
<li><a href="#style-1-one-dimension">Style 1: one dimension</a></li>
<li><a href="#style-2-two-dimensions-hierarchical-data-region-country">Style 2: two dimensions (hierarchical data: Region -&gt; Country)</a></li>
<li><a href="#style-3-add-a-second-color-3-dimensions">Style 3: add a second color (3 dimensions)</a></li>
<li><a href="#style-4-word-cloud">Style 4: Word Cloud</a></li>
<li><a href="#style-5-bubble-chart">Style 5: Bubble Chart</a></li>
<li><a href="#style-6-add-a-dimension-to-rows">Style 6: add a dimension to rows</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-pie-chart"><a class="markdownIt-Anchor" href="#1-pie-chart"></a> <strong>1. Pie Chart</strong></h2>
<h3 id="create-a-pie-chart"><a class="markdownIt-Anchor" href="#create-a-pie-chart"></a> &gt;&gt; Create a pie chart</h3>
<p><strong>Method 1:</strong> Use Marks</p>
<ul>
<li>Mark : Pie Chart</li>
<li>[Color] : dimension field   [best: within 5 dimension members]</li>
<li>[Angle] : measure field</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531095837772-16553669238901.png" alt="image-20210531095837772" style="zoom:50%;">
<br>
<p><strong>Method 2:</strong> Use [Show Me]</p>
<ul>
<li>Choose [dimension field] and [measure field]</li>
<li>click [Show Me] --&gt; [Pie Chart]</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531100157662-16553669238912.png" alt="image-20210531100157662" style="zoom:45%;">
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531100358442-16553669238913.png" alt="image-20210531100358442" style="zoom:50%;">
<br>
<br>
<h2 id="2-tree-map"><a class="markdownIt-Anchor" href="#2-tree-map"></a> <strong>2. Tree Map</strong></h2>
<p>If you have hierarchical data, or data with more than 5 dimension members, a pie chart is not ideal. Instead, a treemap may be a good choice.</p>
<p><strong>Treemaps</strong>:</p>
<ul>
<li>using [nested rectangles] to show [hierarchical data] as a part of the whole</li>
<li>the square shape helps your eye to compare relative sizes</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531102957245-16553669238914.png" alt="image-20210531102957245" style="zoom: 67%;">
<br>
<h3 id="build-a-treemap"><a class="markdownIt-Anchor" href="#build-a-treemap"></a> &gt;&gt; Build a treemap</h3>
<h4 id="style-1-one-dimension"><a class="markdownIt-Anchor" href="#style-1-one-dimension"></a> Style 1: one dimension</h4>
<ul>
<li>[Color] &amp; [Size] : 1 measure field</li>
<li>[Detail] :               1 dimension field</li>
<li>[Label] :                measure &amp; dimension</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531103536900-16553669238915.png" alt="image-20210531103536900" style="zoom: 80%;">
<br>
<h4 id="style-2-two-dimensions-hierarchical-data-region-country"><a class="markdownIt-Anchor" href="#style-2-two-dimensions-hierarchical-data-region-country"></a> Style 2: two dimensions (hierarchical data: Region -&gt; Country)</h4>
<ul>
<li>[Color] :  1st dimension field (Region)   [best: within 7 colors]</li>
<li>[Size] :     1 measure field</li>
<li>[Detail] :  2nd dimension field (Country)</li>
<li>[Label] :   measure &amp; dimensions</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531104030412-16553669238927.png" alt="image-20210531104030412" style="zoom:80%;">
<br>
<h4 id="style-3-add-a-second-color-3-dimensions"><a class="markdownIt-Anchor" href="#style-3-add-a-second-color-3-dimensions"></a> Style 3: add a second color (3 dimensions)</h4>
<ul>
<li>[Color 1] :  1st dimension field (Region)</li>
<li>[Size] :        1 measure field</li>
<li>[Detail] :     2nd dimension field (Country)</li>
<li>[Color 2] :   3rd dimension field (Birth Rate Bin)  [<em>add shades of color</em>]</li>
<li>[Label] :      measure &amp; dimensions</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531105001952-16553669238916.png" alt="image-20210531105001952" style="zoom:80%;">
<br>
<h4 id="style-4-word-cloud"><a class="markdownIt-Anchor" href="#style-4-word-cloud"></a> Style 4: Word Cloud</h4>
<p>Treemap --&gt;  change the Marks to [Text]</p>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531105309022-16553669238928.png" alt="image-20210531105309022" style="zoom:90%;">
<br>
<h4 id="style-5-bubble-chart"><a class="markdownIt-Anchor" href="#style-5-bubble-chart"></a> Style 5: Bubble Chart</h4>
<p>Treemap --&gt; change the Marks to [Circle]</p>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531105540971-16553669238929.png" alt="image-20210531105540971" style="zoom:90%;">
<br>
<h4 id="style-6-add-a-dimension-to-rows"><a class="markdownIt-Anchor" href="#style-6-add-a-dimension-to-rows"></a> Style 6: add a dimension to rows</h4>
<img src="/images/S-Tableau-Fundamentals-10-Showing-Breakdowns-of-the-Whole/image-20210531105703995-165536692389210.png" alt="image-20210531105703995" style="zoom:80%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (1) Connecting to Data</title>
    <url>/2021/06/28/S-Tableau-Fundamentals-1-Connect-to-and-Customize-Data/</url>
    <content><![CDATA[<h1 id="connecting-to-data"><a class="markdownIt-Anchor" href="#connecting-to-data"></a> Connecting to Data</h1>
<br>
<h4 id="data-connecting"><a class="markdownIt-Anchor" href="#data-connecting"></a> &gt;&gt; Data Connecting</h4>
<ul>
<li>
<p><strong>Tableau Desktop</strong>: Connect to a data source</p>
<ol>
<li>[Connect] Pane --&gt; click the file type</li>
<li>[Open] dialog box --&gt; select the data source --&gt; click [Open]</li>
</ol>
</li>
<li>
<p><strong>Tableau Online (Explorer)</strong>: Connect to a published data source</p>
<ol>
<li>
<p>[Home] page --&gt; select [Workbook]</p>
<p>[Explore] page --&gt; [New] menu --&gt; select [Workbook]</p>
</li>
<li>
<p>[Connect to Data] dialog box --&gt; select data source and click [Connect]</p>
</li>
</ol>
</li>
<li>
<p><strong>Tableau Online (Creator)</strong>: Publish and connect to a data source</p>
<ol>
<li>
<p>[Home] Page --&gt; select [Workbook]</p>
<p>[Explore] page --&gt; [New] menu --&gt; select [Workbook]</p>
</li>
<li>
<p>[Connect to Data] dialog box --&gt; [Files] tab</p>
</li>
<li>
<p>click [Upload from computer]</p>
</li>
<li>
<p>[Open] dialog box --&gt; select the data source --&gt; click [Open]</p>
</li>
</ol>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Advanced (5) Geographic Analysis</title>
    <url>/2022/06/27/S-Tableau-Advanced-5-Geographic-Analysis/</url>
    <content><![CDATA[<h1 id="geographic-analysis"><a class="markdownIt-Anchor" href="#geographic-analysis"></a> Geographic Analysis</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-map-dense-data-with-hexbins"><strong>1. Map Dense Data with Hexbins</strong></a>
<ul>
<li><a href="#create-a-hexbin-map">&gt;&gt; Create a hexbin map</a></li>
</ul>
</li>
<li><a href="#2-map-shapes-using-spatial-files"><strong>2. Map Shapes Using Spatial Files</strong></a>
<ul>
<li><a href="#use-spatial-files-to-map-data">&gt;&gt; Use spatial files to map data</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-map-dense-data-with-hexbins"><a class="markdownIt-Anchor" href="#1-map-dense-data-with-hexbins"></a> <strong>1. Map Dense Data with Hexbins</strong></h2>
<p>When we want to see a distribution with just one measure, we use bins to create a histogram. However, if we want to show the density of values across two measures, hexbins (also called as density plots) would be a good choice.</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706160651101.png" alt="image-20210706160651101" style="zoom: 60%;">
<p><strong>“hexbins”</strong> = <strong>“hexagons”</strong> + <strong>"bins"</strong></p>
<ul>
<li><strong>"bins"</strong> : Much like the bins we create for histograms, hexbins create buckets in the view, which help us to understand the distribution of data.</li>
<li><strong>"hexagons"</strong> : Tessellate – they can cover the view without overlapping or gaps</li>
</ul>
<br>
<p>To create hexbins,</p>
<ul>
<li>
<p>we use two Tableau built-in calculations:  HEXBINX(x, y)  &amp;  HEXBINY(x, y)</p>
<ul>
<li>HEXBINX assigns values to a bin on the x-axis</li>
<li>HEXBINY assigns values to the bin for the y-axis</li>
</ul>
</li>
<li>
<p>and use them both as <strong>continuous dimensions</strong>:</p>
<ul>
<li>Continuous: let tableau to present an axis, rather than headers</li>
<li>Dimensions: let them to behave categorically, rather than aggregate to a sum of HEXBINX, or sum of HEXBINY</li>
</ul>
</li>
</ul>
<br>
<h3 id="create-a-hexbin-map"><a class="markdownIt-Anchor" href="#create-a-hexbin-map"></a> &gt;&gt; Create a hexbin map</h3>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>With the data from downtown New York City, we want to see taxi activity by time of day and location.</p>
<p>Create a hexbin map that shows density of taxicab pickups, and filter by the time of day.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Build the basic map</strong></p>
<ul>
<li>Columns: Pickuplon (set to dimension)</li>
<li>Rows:        Pickuplat (set to dimension)</li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706161847081.png" alt="image-20210706161847081" style="zoom:50%;">
<br>
<p><strong>[STEP 2] Filter the view by Pickup TimeRanges, and change the mark type to Shape</strong></p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706162123838.png" alt="image-20210706162123838" style="zoom:50%;">
<br>
<p><strong>[STEP 3] Create a Scale Factor parameter</strong></p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706171924852.png" alt="image-20210706171924852" style="zoom:60%;">
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706162658024.png" alt="image-20210706162658024" style="zoom:50%;">
<br>
<br>
<p><strong>[STEP 4] Create HexbinX and HexbinY calculations and set their geographic roles</strong></p>
<ul>
<li>Create HexbinX and HexbinY calculations that scale based on the Scale Factor parameter
<ul>
<li><font color="blue">HexbinX:</font> <code>HEXBINX([Pickuplon]*[Scale Factor], [Pickuplat]*[Scale Factor]) / [Scale Factor]</code></li>
<li><font color="blue">HexbinY:</font> <code>HEXBINY([Pickuplon]*[Scale Factor], [Pickuplat]*[Scale Factor]) / [Scale Factor]</code></li>
</ul>
</li>
</ul>
<br>
<ul>
<li>
<p>Set the geographic roles of the HexbinX and HexbinY calculations</p>
<ul>
<li>Drag both the HexbinX and HexbinY fields from Measures to <font color="blue">Dimensions</font></li>
<li>Set the geographic Role for <font color="blue">HexbinX to Longitude</font>, and <font color="blue">HexbinY to Latitude</font></li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706164933649.png" alt="image-20210706164933649" style="zoom:50%;">
</li>
</ul>
<br>
<br>
<p><strong>[STEP 5] Update the view with HexbinX and HexbinY, colored by Number of Records</strong></p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706172918043.png" alt="image-20210706172918043" style="zoom:50%;">
<br>
<br>
<p><strong>[STEP 6] Edit the color and shape of the marks</strong></p>
<ul>
<li>
<p><strong>Color:</strong></p>
<ul>
<li>Choose a [Blue] color palette</li>
<li>Select [Stepped Color], with 5 steps</li>
<li>Click [Advanced]  --&gt; adjust the range of the scale: 1 ~ 500</li>
<li>transparency: 80%</li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707093550434.png" alt="image-20210707093550434" style="zoom:50%;"> 
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Shape:</strong> Add the hexagon custom shape, and apply the hexagon to the marks in the view</p>
<ul>
<li>
<p>Create a new folder called “Hex” in the [My Tableau Repository] --&gt; [Shapes] folder</p>
<p>- Windows: <code>Documents\My Tableau Repository\Shapes\Hex</code></p>
<p>- Mac: <code>Documents/My Tableau Repository/Shapes/Hex</code></p>
<br>
</li>
<li>
<p>Download or copy the ‘hex_solid.png’ to the Hex folder</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706170740697.png" alt="image-20210706170740697" style="zoom:50%;"> 
<br>
</li>
<li>
<p>[Marks] card  --&gt; click [Shape]  --&gt; click [More Shapes]</p>
</li>
<li>
<p>Click [Reload Shapes]  --&gt; click [Apply]</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707094442673.png" alt="image-20210707094442673" style="zoom:50%;"> 
<br>
</li>
<li>
<p>[Select Shape Palette]  --&gt; select [Hex]</p>
</li>
<li>
<p>Click the solid hexagon image  -&gt; click [Apply]  -&gt; click [OK]</p>
<p><img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706171455051-165631225173024.png" alt="image-20210706171455051" style="zoom:60%;">	 <img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210706171536059.png" alt="image-20210706171536059" style="zoom:60%;"></p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707094543671.png" alt="image-20210707094543671" style="zoom:50%;"> 
</li>
</ul>
</li>
</ul>
 <br>
<p><strong>[STEP 7] Adjust the formatting of the view, using the parameter and mark size</strong></p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707094739294.png" alt="image-20210707094739294" style="zoom:50%;">
<br>
<p><strong>[STEP 8] Update the map layers to show highways</strong></p>
<ul>
<li>
<p>[Map] --&gt; [Map Layers]</p>
</li>
<li>
<p>check [Streets and Highways]</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707094924608.png" alt="image-20210707094924608" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707094956056.png" alt="image-20210707094956056" style="zoom:50%;">
</li>
</ul>
<br>
<br>
<h2 id="2-map-shapes-using-spatial-files"><a class="markdownIt-Anchor" href="#2-map-shapes-using-spatial-files"></a> <strong>2. Map Shapes Using Spatial Files</strong></h2>
<p>If geography influences our data questions or business, or location is a vital part of our analysis, we may need to work with spatial files to create maps.</p>
<p>A spatial file contains geographic data that identifies types of natural and man-made features on Earth, and encodes geographic features as geometrical shapes, which we use to visualize and analyze geographic data.</p>
<ul>
<li>
<p>Three types of geographic features we can use spatial files to map</p>
<ul>
<li><em>Discrete locations on the ground</em>:        wells, mountain peaks, building entrances, or railway stops</li>
<li><em>Geographic features or designations</em>:  lakes, farms, park boundaries, neighborhoods, or school districts</li>
<li><em>Linear features</em>:                                      rivers, roads, trails, or highways</li>
</ul>
</li>
<li>
<p>Types of geometrical shapes that Tableau Desktop supports:</p>
<ul>
<li><em>Points, Circles</em>:  for distinct locations on the ground</li>
<li><em>Polygons</em>:          for geographic features or designations</li>
<li><em>Lines</em>:                for linear features</li>
</ul>
</li>
</ul>
<br>
<p><strong>[Examples]</strong></p>
<ul>
<li>
<p><strong>Locations:</strong></p>
<p>Show railway stops to explore the frequency of usage at each stop.</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707105154024.png" alt="image-20210707105154024" style="zoom: 67%;">
<br>
</li>
<li>
<p><strong>Areas:</strong></p>
<p>Show a country’s population broken down by government designations such as prefecture and municipality.</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707105635118.png" alt="image-20210707105635118" style="zoom:67%;">
<br>
</li>
<li>
<p><strong>Linear features:</strong></p>
<p>Explore the relationship between a highway network and the median income of local residents near it.</p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707105827515.png" alt="image-20210707105827515" style="zoom:67%;">
</li>
</ul>
<br>
<br>
<h3 id="use-spatial-files-to-map-data"><a class="markdownIt-Anchor" href="#use-spatial-files-to-map-data"></a> &gt;&gt; Use spatial files to map data</h3>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>For a study on railway usage in areas of the United Kingdom, we would like to use a spatial file to create a map that shows a network of stations as well as the number of entries and exits, per station, for specific years.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Connect to the spatial file</strong></p>
<ul>
<li>[Connect] Pane  --&gt; [Spatial file]</li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707125304915.png" alt="image-20210707125304915" style="zoom:50%;">
<p>* When connecting to the spatial data, a Geometry field is created to represent the point, polygon, or linear geometries.</p>
<br>
<p><strong>[STEP 2] In the worksheet, drag the Geometry field to Detail</strong></p>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707125652711.png" alt="image-20210707125652711" style="zoom:50%;">
<p>* It works in conjunction with latitude and longitude to create the map</p>
<p>* Tableau Desktop aggregates the Geometry measure using the COLLECT aggregation.</p>
<p>​	- By default, the geometry measure is aggregated into a single mark when added to the view</p>
<p>​	- We can add dimensions to disaggregate the data</p>
<br>
<p><strong>[STEP 3] Add and Edit the Color, Detail, and Size Marks</strong></p>
<ul>
<li>Add Network Route on Color, Station name on Detail, and 2015-2016 Entries &amp; Exits on Size</li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707132149895.png" alt="image-20210707132149895" style="zoom:50%;">
<br>
<ul>
<li>Increase the mark size, decrease the mark-color opacity, and give marks a gray border.</li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210707132756910.png" alt="image-20210707132756910" style="zoom:50%;">
<br>
<br>
<p><strong>[STEP 4] Use map layers to edit the background</strong></p>
<ul>
<li>Change the background style to [Normal]</li>
<li>Add the coastline, county borders, and county names</li>
</ul>
<img src="/images/S-Tableau-Advanced-5-Geographic-Analysis/image-20210708092758858-165631228248326.png" alt="image-20210708092758858" style="zoom:50%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 4. Advanced</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Advanced (6) Dashboarding</title>
    <url>/2022/06/27/S-Tableau-Advanced-6-Dashboarding/</url>
    <content><![CDATA[<h1 id="dashboarding"><a class="markdownIt-Anchor" href="#dashboarding"></a> Dashboarding</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-swapping-sheets-and-refining-the-layout"><strong>1. Swapping Sheets and Refining the Layout</strong></a>
<ul>
<li><a href="#sheet-swapping">&gt;&gt; Sheet Swapping</a></li>
</ul>
</li>
<li><a href="#2-adding-context-to-dashboard-filter-actions"><strong>2. Adding Context to Dashboard Filter Actions</strong></a>
<ul>
<li><a href="#context-filter">&gt;&gt; Context Filter</a></li>
<li><a href="#use-context-filters-to-control-filter-actions">&gt;&gt; Use Context Filters to Control Filter Actions</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-swapping-sheets-and-refining-the-layout"><a class="markdownIt-Anchor" href="#1-swapping-sheets-and-refining-the-layout"></a> <strong>1. Swapping Sheets and Refining the Layout</strong></h2>
<h3 id="sheet-swapping"><a class="markdownIt-Anchor" href="#sheet-swapping"></a> &gt;&gt; Sheet Swapping</h3>
<p>Sheet swapping is where sheets are hidden/displayed (i.e. swapped) depending on user dashboard selections.</p>
<p>This is a very helpful and efficient way for us to share numerous views in a single dashboard, which can avoid squeezing in too much information or linking to several dashboards.</p>
<br>
<p>To swap sheets, we need <strong>a parameter</strong> used for selecting a view and <strong>collapsing containers</strong> to show the corresponding view.</p>
<p>Let’s look at how this works through the following example:</p>
<br>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>For a study about environment noise in Brooklyn, we want to include rotating views that show noise rankings (Slope Chart &amp; Bump Chart) and control-chart data in the dashboard. Let’s use a parameter to swap these views and employ layout and titling options.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Create a parameter for swapping the slope, bump, and control charts in the dashboard</strong></p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210708111333540.png" alt="image-20210708111333540" style="zoom:67%;">
<br>
<p><strong>[STEP 2] Create a Select Sheet filter calculation to apply a filter to each view, which will enable the correct view to show, and hide the other views</strong></p>
<ul>
<li>Create the filter calculated field based on the parameter</li>
</ul>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210708111502614.png" alt="image-20210708111502614" style="zoom:67%;">
<br>
<ul>
<li>
<p>Use the calculated field as a filter for each swapped view, show the parameter control and test the parameter</p>
<ul>
<li>
<p>Display the [Slope Chart] sheet, drag the [Select a Chart Filter] field to [Filters], dropping it below [YEAR(Created Date)]</p>
</li>
<li>
<p>In the dialog box opened,</p>
<p>- select [Custom value list],</p>
<p>- type [Slope Chart] in the text field,</p>
<p>- click “+”</p>
<p>- and then click [OK]</p>
</li>
<li>
<p>Do the same work with [Bump Chart] and [Control Chart] . (P.S. The view will disappear at the end of this step)</p>
</li>
</ul>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712105839024.png" alt="image-20210712105839024" style="zoom:40%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712105151323.png" alt="image-20210712105151323" style="zoom:40%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712105335881.png" alt="image-20210712105335881" style="zoom:40%;">
<br>
<ul>
<li>Return to [Slope Chart] sheet, show the parameter control and test the parameter. End with the Slope Chart selected and displayed</li>
</ul>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712105733489.png" alt="image-20210712105733489" style="zoom:45%;">
</li>
</ul>
<br>
<p><strong>[STEP 3] Drag the swapped views into the dashboard, and hide their titles</strong></p>
<ul>
<li>
<p>Use a container to contain the views to swap. This will allow the views to share the same space, rather than be tiled separately.</p>
<p>- Drag a Vertical container into the view and drop it below the existed views when the horizontal gray band is shown</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712124751089.png" alt="image-20210712124751089" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712125248022.png" alt="image-20210712125248022" style="zoom:45%;">
<br>
</li>
<li>
<p>Drag the three charts into the container</p>
<p>- First drag in the slope chart, the view that is currently displayed in the parameter control</p>
<p>- Drop it when the container border appeared and highlighted in dark blue</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712125903509.png" alt="image-20210712125903509" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712125940385.png" alt="image-20210712125940385" style="zoom:45%;">
<br>
<p>- Next, drag in the Bump Chart, being careful to drop it only when we see the horizontal gray band and the blue container border.</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712130244408.png" alt="image-20210712130244408" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712130325401.png" alt="image-20210712130325401" style="zoom:45%;">
<br>
<p>- Finally, do the same thing for the Control Chart</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712130521443.png" alt="image-20210712130521443" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712130556710.png" alt="image-20210712130556710" style="zoom:45%;">
<br>
<p>This view brings in the parameter control, because the Slope Chart is the worksheet that we showed the control on.</p>
<p>And, note that only the Scatter Plot view displayed in the dashboard, based on its selection in the control.</p>
<br>
</li>
<li>
<p>Hide the view titles for each of the swapped views</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712131453952.png" alt="image-20210712131453952" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712131422755.png" alt="image-20210712131422755" style="zoom:45%;">
</li>
</ul>
<br>
<p><strong>[STEP 4] Remove all controls except the parameter control, move the dashboard title, and make the title dynamic</strong></p>
<ul>
<li>
<p>Close all controls and legends except for the parameter control</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712132159831.png" alt="image-20210712132159831" style="zoom:50%;">
<br> 
</li>
<li>
<p>Enlarge the container with the swapped views:</p>
<p>- click it</p>
<p>- display its menu</p>
<p>- click [Select Container: Vertical]</p>
<p>- on the container’s top border, drag the sizing handle upward to enlarge it</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712132530983.png" alt="image-20210712132530983" style="zoom:50%;"> 
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712132918748.png" alt="image-20210712132918748" style="zoom:50%;">   
</li>
</ul>
<br>
<ul>
<li>
<p>Reset the location and size of the title container</p>
<p>- click the title container to select it</p>
<p>- drag its handle to place the container between the top two views and the swapped-views container</p>
<p>- on the title container’s bottom border, drag the sizing handle upward to make the container smaller</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712133715718.png" alt="image-20210712133715718" style="zoom:50%;"> 
</li>
</ul>
<br>
<ul>
<li>
<p>Move the parameter control:</p>
<p>- click the parameter control to select it. display its menu, and click [Floating]</p>
<p>- position the control at the left end within the title container</p>
<p>- drag up its container border to fit within the title container</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712134655113.png" alt="image-20210712134655113" style="zoom:50%;"> 
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712134626891.png" alt="image-20210712134626891" style="zoom:50%;"> 
</li>
</ul>
<br>
<ul>
<li>
<p>Edit the dashboard title</p>
<p>- open the [Edit Title] dialog box</p>
<p>- remove the existed title</p>
<p>- on the [Insert] menu, select [Parameters.Select a Chart]</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712134943322.png" alt="image-20210712134943322" style="zoom:50%;"> 
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712135032391.png" alt="image-20210712135032391" style="zoom:50%;"> 
<br>
<p>- The title now updates with each view</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712135106398.png" alt="image-20210712135106398" style="zoom:50%;"> 
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712135243343.png" alt="image-20210712135243343" style="zoom:50%;">  
<br> 
</li>
</ul>
<p><strong>[STEP 5] Add container borders, padding, and a text container for an overall title, then make sizing adjustments</strong></p>
<ul>
<li>
<p>Add a border to the title container</p>
<p>- click the title container to select it</p>
<p>- click the [Layout] tab --&gt; [Border] --&gt; select a solid black line at a minimal thickness</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712135844389.png" alt="image-20210712135844389" style="zoom:50%;"> 
</li>
</ul>
<br>
<ul>
<li>
<p>Add a similar border to the swapped-views container</p>
<p>- click it</p>
<p>- display its menu</p>
<p>- click [Select Container: Vertical]</p>
<p>- add the border</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712142157180.png" alt="image-20210712142157180" style="zoom:50%;">  
</li>
</ul>
<br>
<ul>
<li>
<p>Add padding</p>
<p>- For example: select the sparklines view and add four points of Inner Padding</p>
<p>- do the same with the highlight table</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712140436538.png" alt="image-20210712140436538" style="zoom:50%;">  
</li>
</ul>
<br>
<ul>
<li>
<p>Add an overall dashboard title</p>
<p>- from the [Dashboard] tab, drag a [Text] container onto the dashboard</p>
<p>- drop it at the top when the horizontal gray band above the two top views appears</p>
<p>- type the title and edit it</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712141223319.png" alt="image-20210712141223319" style="zoom:50%;"> 
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712140734133.png" alt="image-20210712140734133" style="zoom:50%;"> 
<br>
<p>- drag up the text container border for the ideal height</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712141635381.png" alt="image-20210712141635381" style="zoom:50%;"> 
</li>
</ul>
<p><br><br></p>
<h2 id="2-adding-context-to-dashboard-filter-actions"><a class="markdownIt-Anchor" href="#2-adding-context-to-dashboard-filter-actions"></a> <strong>2. Adding Context to Dashboard Filter Actions</strong></h2>
<h3 id="context-filter"><a class="markdownIt-Anchor" href="#context-filter"></a> &gt;&gt; Context Filter</h3>
<p>By default, all filters set in Tableau are computed independently, which means that each filter accesses all rows in the data source without regard to other filters. However, by setting one or more categorical filters as context filters, we can make other filters as dependent ones that process only the data that passes through the context filter.</p>
<br>
<p>We can create a context filter to:</p>
<ul>
<li>
<p>Improve performance –</p>
<p>If we set a lot of filters or have a large data source, the queries can be slow. We can set one or more context filters to improve performance.</p>
</li>
<li>
<p>Create a dependent numerical or top N filter –</p>
<p>We can set a context filter to include only the data of interest, and then set a numerical or a top N filter.</p>
</li>
</ul>
<br>
<h3 id="use-context-filters-to-control-filter-actions"><a class="markdownIt-Anchor" href="#use-context-filters-to-control-filter-actions"></a> &gt;&gt; Use Context Filters to Control Filter Actions</h3>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>For the main markets that use Superstore, we want to help users see only the top 25 cities for sales by Market and the top 10 products for sales by Market - City.</p>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] On the Top 10 Product Sales worksheet, add a filter for the top 10 Product Names by Sales</strong></p>
<ul>
<li>
<p>Drag [Product Name] from Dimensions to the [Filters] card</p>
</li>
<li>
<p>In the dialog box opened:</p>
<p>- click [Top] --&gt; [By field] : [Top] [10] by [Sales] [Sum]</p>
</li>
</ul>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712155732099.png" alt="image-20210712155732099" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712160023934.png" alt="image-20210712160023934" style="zoom:45%;">
<br>
<p><strong>[STEP 2] On the Top 25 Cities for Sales worksheet, add a filter for the [City and State] field for the top 25 by Sales</strong></p>
<ul>
<li>
<p>Drag the [City and State] field to [Filters] card</p>
</li>
<li>
<p>In the dialog box opened:</p>
<p>- click [Top] --&gt; [By field] : [Top] [25] by [Sales] [Sum]</p>
</li>
</ul>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712160721965.png" alt="image-20210712160721965" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712160803907.png" alt="image-20210712160803907" style="zoom:45%;">
<br>
<p><strong>[STEP 3] On the Worldwide Sales dashboard, use the Market sheet as a filter, then test it to observe the results</strong></p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712161027261.png" alt="image-20210712161027261" style="zoom:45%;">
<br>
<ul>
<li>
<p>When we click a market to filter to its top 25 cities and top 10 products, the results are not what we are expected.</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712161301799.png" alt="image-20210712161301799" style="zoom:45%;">
<br>
<ul>
<li>
<p>USCA market shows only 7 cities and 3 products</p>
</li>
<li>
<p>The reason is that without using market as a context filter, the Top 25 Cities filter and Top 10 Products filter access all rows in the data:</p>
<p>When we see 7 cities from the USCA market, that means seven of the top cities overall happen to be in the USCA market</p>
</li>
<li>
<p>To get each market to show its top cities and top products for sales,  we need to add context to the filter action</p>
</li>
</ul>
</li>
</ul>
<br>
<p><strong>[STEP 4] On the product and cities worksheets, add the Action (Market) filter to context</strong></p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712162750768.png" alt="image-20210712162750768" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712162824982.png" alt="image-20210712162824982" style="zoom:45%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712162905014.png" alt="image-20210712162905014" style="zoom:45%;">
<br>
<p><strong>[STEP 5] Create a dashboard filter that shows the top 10 product sales for the selected city on the map</strong></p>
<ul>
<li>
<p>In the dashboard, make sure no markets are selected</p>
</li>
<li>
<p>Create a filter action: [Dashboard] menu  --&gt; [Actions]  --&gt; [Add actions] : Filter</p>
<p>​	<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712164305607.png" alt="image-20210712164305607" style="zoom:50%;">   	 <img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712164433421-165631271936250.png" alt="image-20210712164433421" style="zoom:50%;"></p>
</li>
<li>
<p>Edit the filter action like follows and click [OK] --&gt; [OK]</p>
<p>​	<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712164611493.png" alt="image-20210712164611493" style="zoom:50%;"> 		<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712164901826-165631273369852.png" alt="image-20210712164901826" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>Test the filter on the map view, we find that the list of product names never has 10 entries.</p>
<p>We want the filter action we just cerated to apply in the context of the city</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712165144515.png" alt="image-20210712165144515" style="zoom:50%;">
</li>
</ul>
<br>
<ul>
<li>
<p>In the Top 10 Product Sales sheet, add the action filter to context</p>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712165939041.png" alt="image-20210712165939041" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712170141434.png" alt="image-20210712170141434" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712170051474.png" alt="image-20210712170051474" style="zoom:50%;">
</li>
</ul>
<p>​		Now, the result is what we want.</p>
<br>
<p><strong>[STEP 6] Add the dashboard title</strong></p>
<ul>
<li>Click [Show dashboard title] to display the title, Worldwide Sales</li>
</ul>
<img src="/images/S-Tableau-Advanced-6-Dashboarding/image-20210712170317291-165631274862354.png" alt="image-20210712170317291" style="zoom:50%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 4. Advanced</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (13) Sharing Your Work</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-13-Sharing-Your-Work/</url>
    <content><![CDATA[<h1 id="sharing-your-work"><a class="markdownIt-Anchor" href="#sharing-your-work"></a> Sharing Your Work</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-the-tableau-file-types"><strong>1. The Tableau File Types</strong></a></li>
<li><a href="#2-sharing-your-work-with-others"><strong>2. Sharing Your Work with Others</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-the-tableau-file-types"><a class="markdownIt-Anchor" href="#1-the-tableau-file-types"></a> <strong>1. The Tableau File Types</strong></h2>
<p><strong>Four Tableau file types:</strong></p>
<ul>
<li><strong>.TDS (Tableau data source file)</strong>
<ul>
<li>contains metadata changes, like group and calculated fields</li>
<li>does not contain any of the actual data necessary to create your viz</li>
<li>but store the information necessary to connect to the original data source</li>
</ul>
</li>
<li><strong>.TWB (Tableau workbook file)</strong>
<ul>
<li>contains your worksheets and dashboards</li>
<li>store the information necessary to connect to the data source as well as the information needed to build the view</li>
<li>does not include the data from the underlying data source</li>
<li>when saving as a .TWB file, a link is established to the data source used. Therefore, the next time you open your .TWB file, the view will automatically update with any changed made to the original data source</li>
</ul>
</li>
<li><strong>.TWBX (packaged Tableau workbook file)</strong>
<ul>
<li>stores the information necessary to connect to the data source, the information needed to build the viz, and also includes a copy of the local data used.</li>
<li>does not create an extract of the data, but it contain both live connections and/or data extracts.</li>
</ul>
</li>
<li><strong>.TDE (Tableau data extract file)</strong>
<ul>
<li>a snapshot of your data that Tableau saves locally.</li>
<li>helpful when you’re connecting to extremely large data sets, of which you only need some fields.</li>
</ul>
</li>
</ul>
<br>
<br>
<h2 id="2-sharing-your-work-with-others"><a class="markdownIt-Anchor" href="#2-sharing-your-work-with-others"></a> <strong>2. Sharing Your Work with Others</strong></h2>
<ul>
<li>
<p>Publish to Tableau Online ( or Tableau Server):</p>
<ul>
<li>[Server] Menu --&gt; [Publish Workbook]</li>
<li>
<ol>
<li>[Tableau Online] button</li>
<li>[Server] : <a href="https://online.tableau.com" target="_blank" rel="noopener">https://online.tableau.com</a></li>
</ol>
</li>
<li>Click [Connect]</li>
<li>Sign in to Tableau Online</li>
</ul>
</li>
<li>
<p>Save your file as a Tableau packaged workbook (.twbx)</p>
<ul>
<li>others can work with it in Tableau Desktop or Tableau Reader</li>
</ul>
</li>
<li>
<p>Share only an image of a view or the data</p>
<ul>
<li>[Worksheet] Menu --&gt; [Export] --&gt; Image / Data / Crosstab to Excel</li>
</ul>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (2) Customizing a Data Source</title>
    <url>/2021/06/28/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/</url>
    <content><![CDATA[<h1 id="customizing-a-data-source"><a class="markdownIt-Anchor" href="#customizing-a-data-source"></a> Customizing a Data Source</h1>
<p></p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1-organize-fields-into-folders">1. Organize fields into folders</a></li>
<li><a href="#2-methods-to-change-the-data-fields-role-measures-or-dimensions">2. Methods to change the data field’s ROLE (measures or dimensions)</a></li>
<li><a href="#3-edit-fields-default-properties">3. Edit Fields’ Default Properties</a></li>
<li><a href="#4-save-data-as-a-tableau-data-source-tds">4. Save data as a Tableau Data Source (.tds)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h3 id="1-organize-fields-into-folders"><a class="markdownIt-Anchor" href="#1-organize-fields-into-folders"></a> 1. Organize fields into folders</h3>
<p><strong>Step 1. [Data] Pane Menu --&gt; [Group by Folder] (폴더별 그룹화)</strong></p>
<p>​				<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520085309334.png" alt="image-20210520085309334" style="zoom:50%;"></p>
<br>
<p><strong>Step 2. Right-click the blank area --&gt; select [Create Folder] (폴더 만들기)  --&gt; Name the folder</strong></p>
<p>​				<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520085347461-16298783319542.png" alt="image-20210520085347461" style="zoom:50%;">					<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520085548660.png" alt="image-20210520085548660" style="zoom:80%;"></p>
<br>
<p><strong>Step 3.  Drag fields into the folder</strong></p>
<p>​				<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520085807304.png" alt="image-20210520085807304" style="zoom:50%;"></p>
<br>
<br>
<h3 id="2-methods-to-change-the-data-fields-role-measures-or-dimensions"><a class="markdownIt-Anchor" href="#2-methods-to-change-the-data-fields-role-measures-or-dimensions"></a> 2. Methods to change the data field’s ROLE (measures or dimensions)</h3>
<p><strong>Method 1</strong>. Click and drag the field to the desirable area (Measures area or Dimensions area)</p>
<p><strong>Method 2.</strong> Right-click the field --&gt; [Convert to Dimension ( / Discrete) ]    [차원(/측정값)으로 변환]</p>
<p>​					<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520091203996.png" alt="image-20210520091203996" style="zoom:50%;"></p>
<br>
<h3 id="3-edit-fields-default-properties"><a class="markdownIt-Anchor" href="#3-edit-fields-default-properties"></a> 3. Edit Fields’ Default Properties</h3>
<p>Right-click the field --&gt; [Default Properties] --&gt; Can change [Number Format] or [default color] or [default Aggregation]</p>
<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520091653945.png" alt="image-20210520091653945" style="zoom:50%;">
<br>
<h3 id="4-save-data-as-a-tableau-data-source-tds"><a class="markdownIt-Anchor" href="#4-save-data-as-a-tableau-data-source-tds"></a> 4. Save data as a Tableau Data Source (.tds)</h3>
<p>Menu bar --&gt; [Data]  --&gt; click the Data source we want to save --&gt; [Add to Saved Data Source]</p>
<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520094018899.png" alt="image-20210520094018899" style="zoom:50%;">
<br>
<ul>
<li>
<p>If saving the data source to the default [Datasources] (데이터 원본) folder under the [My Tableau Repository]:</p>
<p>It will be available on the <em>data connection</em>  page under [Saved Data Source]</p>
<p><img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520094122673.png" alt="image-20210520094122673" style="zoom:50%;">		<img src="/images/S-Tableau-Fundamentals-2-Customizing-a-Data-Source/image-20210520094525623-16298783692603.png" alt="image-20210520094525623" style="zoom: 50%;"></p>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (11) Highlighting Data with Reference Lines</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/</url>
    <content><![CDATA[<h1 id="highlighting-data-with-reference-lines"><a class="markdownIt-Anchor" href="#highlighting-data-with-reference-lines"></a> Highlighting Data with Reference Lines</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#reference-line">&gt;&gt; Reference Line</a></li>
<li><a href="#reference-band">&gt;&gt; Reference Band</a></li>
<li><a href="#reference-distribution">&gt;&gt; Reference Distribution</a></li>
<li><a href="#reference-box-plot">&gt;&gt; Reference Box Plot</a></li>
</ul>
<p></p>
<br>
<h2 id="reference-line"><a class="markdownIt-Anchor" href="#reference-line"></a> &gt;&gt; Reference Line</h2>
<img src="/images/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/image-20210531125300888-16553670552931.png" alt="image-20210531125300888" style="zoom: 80%;">
<br>
<br>
<p><strong>2 ways to add reference line</strong></p>
<ol>
<li>
<p>From the view:</p>
<ul>
<li>
<p>Right-click the axis --&gt; Add Reference Line</p>
<img src="/images/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/image-20210531124137890-16553670552942.png" alt="image-20210531124137890" style="zoom: 67%;"> 
<p>* [Line] --&gt; [Value] only displays the <em>measures in our view</em></p>
<br>
</li>
</ul>
</li>
<li>
<p>From the Analytics pane</p>
<ul>
<li>
<p>Analytics --&gt; Drag [Reference Line] to the view</p>
<img src="/images/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/image-20210531125012133-16553670552953.png" alt="image-20210531125012133" style="zoom:67%;"> 
<br>
<br>
</li>
</ul>
</li>
</ol>
<h2 id="reference-band"><a class="markdownIt-Anchor" href="#reference-band"></a> &gt;&gt; Reference Band</h2>
<p>Reference Bands</p>
<ul>
<li>display data that falls within a certain window value</li>
<li>and display as shaded areas between two constant or computed values</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/image-20210531125850573-16553670552954.png" alt="image-20210531125850573" style="zoom: 67%;">
<br>
<br>
<h2 id="reference-distribution"><a class="markdownIt-Anchor" href="#reference-distribution"></a> &gt;&gt; Reference Distribution</h2>
<p>Reference Distributions</p>
<ul>
<li>are a variation of reference Bands</li>
<li>It adds a gradient of shading to indicate the distribution of values along the axis</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/image-20210531130225430-16553670552955.png" alt="image-20210531130225430" style="zoom: 67%;">
<br>
<br>
<h2 id="reference-box-plot"><a class="markdownIt-Anchor" href="#reference-box-plot"></a> &gt;&gt; Reference Box Plot</h2>
<p>Reference Box Plots describe the distribution of values along the axis</p>
<img src="/images/S-Tableau-Fundamentals-11-Highlighting-Data-with-Reference-Lines/image-20210531130452568-16553670552956.png" alt="image-20210531130452568" style="zoom:67%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (5) Mapping Data Geographically</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-5-Mapping-Data-Geographically/</url>
    <content><![CDATA[<h1 id="mapping-data-geographically"><a class="markdownIt-Anchor" href="#mapping-data-geographically"></a> Mapping Data Geographically</h1>
<br>
<h2 id="1-concept-mapping-your-data"><a class="markdownIt-Anchor" href="#1-concept-mapping-your-data"></a> 1. Concept: Mapping Your Data</h2>
<ul>
<li>
<p><strong>Two map types in Tableau</strong></p>
<ol>
<li>
<p>symbol maps</p>
<p>- Use symbols to represent a central point of a geographic region</p>
</li>
<li>
<p>filled maps</p>
<p>- Boundaries of a geographic region filled with color</p>
</li>
</ol>
</li>
<li>
<p><strong>Geographic Data</strong></p>
<ul>
<li>Data that describes a physical location</li>
<li>Basically consists of a latitude coordinate (위도 좌표) and a longitude coordinate (경도 좌표)</li>
<li>When combining latitude and longitude together, it’s known as a coordinate point</li>
</ul>
</li>
<li>
<p><strong>9 geographic information types that Tableau can recognize</strong></p>
<ul>
<li>US Area Codes</li>
<li>US-based CBSA / MSA</li>
<li>Cities Worldwide</li>
<li>US Congressional Districts</li>
<li>Worldwide Countries / Regions</li>
<li>US Countries</li>
<li>Worldwide States / Provinces</li>
<li>Postal Codes</li>
<li>Latitude and Longitude</li>
</ul>
</li>
<li>
<p><strong>Geocoding</strong></p>
<ul>
<li>The process that Tableau automatically assigns coordinates to the places according to Tableau’s recognized geographic information types mentioned above.</li>
</ul>
</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Advanced (4) Customer Behavior Analyze Survey Data</title>
    <url>/2022/06/27/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/</url>
    <content><![CDATA[<h1 id="customer-behavior-analyze-survey-data"><a class="markdownIt-Anchor" href="#customer-behavior-analyze-survey-data"></a> Customer Behavior: Analyze Survey Data</h1>
<br>
<p>Surveys are a useful way to collect data from the people your organization serves, but the results can be challenging to visualize.</p>
<p>However, in Tableau Desktop, we can make survey data easier to consume by restructuring our data and visualizing it in a bar chart as follows.</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706105022838.png" alt="image-20210706105022838" style="zoom:67%;">
<br>
<h4 id="practice"><a class="markdownIt-Anchor" href="#practice"></a> &gt;&gt; Practice</h4>
<p><strong><font color="navy">&lt;&lt; Goal &gt;&gt;</font></strong></p>
<p>A survey about college campus security has done in a local university, the students were asked to answer each question with one of five responses, ranging from Strongly Agree to Strongly Disagree.</p>
<p>We would like to know</p>
<ul>
<li>
<p>how the responses were distributed by the two campuses surveyed,</p>
</li>
<li>
<p>the average response to each question,</p>
</li>
<li>
<p>and to see what areas of security need attention.</p>
</li>
</ul>
<br>
<p><strong><font color="navy">&lt;&lt; Process &gt;&gt;</font></strong></p>
<p><strong>[STEP 1] Pivot the five questions: transpose data from columns to rows</strong></p>
<ul>
<li>
<p>Select the five questions fields --&gt; Right-click --&gt; Pivot</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706124325253.png" alt="image-20210706124325253" style="zoom:40%;"> 
<br>
</li>
<li>
<p>Rename the new fields “Question” and “Responses”</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706124455189.png" alt="image-20210706124455189" style="zoom:40%;"> 
</li>
</ul>
<br>
<p><strong>[STEP 2] First looking at the data as a whole</strong></p>
<p>Show the total percentage of responses:</p>
<ul>
<li>
<p>Drag Responses to Columns  --&gt; Change the aggregation to Count  --&gt; Add a [Percent of Total] Quick Table Calculation</p>
</li>
<li>
<p>Change the axis title and format the label so it does not display decimal places</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706125857806.png" alt="image-20210706125857806" style="zoom:40%;">
<br>
</li>
</ul>
<p><strong>[STEP 3] Break down the responses by Campus and Questions</strong></p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706130527510.png" alt="image-20210706130527510" style="zoom:50%;">
<br>
<p><strong>[STEP 4] Color the bars by Responses</strong></p>
<ul>
<li>
<p>Make a copy of the [Responses] field, convert it to a dimension, and rename it [Responses (dimensions)]</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706131323482.png" alt="image-20210706131323482" style="zoom:50%;">
<br>
</li>
<li>
<p>Color the view by [Responses (dimension)] and rename the aliases to match the survey</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706131814108.png" alt="image-20210706131814108" style="zoom:50%;">
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706131939248.png" alt="image-20210706131939248" style="zoom:50%;">
</li>
</ul>
<br>
<ul>
<li>
<p>Edit legend colors and change the title to Responses</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706132303482.png" alt="image-20210706132303482" style="zoom:50%;">
</li>
</ul>
<br>
<p><strong>[STEP 5] Calculate the average response to each question</strong></p>
<ul>
<li>
<p>Create a calculated field, fixed on Campus and Question, to determine the average response</p>
<p>[Average Response] :</p>
<p><code>{ FIXED [Campus], [Question] : AVG([Responses]) }</code></p>
</li>
</ul>
<br>
<ul>
<li>
<p>Add [Average Response] to rows, make it discrete, and format it so it has one decimal place</p>
<img src="/images/S-Tableau-Advanced-4-Customer-Behavior-Analyze-Survey-Data/image-20210706133302359.png" alt="image-20210706133302359" style="zoom:50%;">
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 4. Advanced</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (7) Create Calculated Fields</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-7-Create-Calculated-Fields/</url>
    <content><![CDATA[<h1 id="creating-calculated-fields-for-deeper-analysis"><a class="markdownIt-Anchor" href="#creating-calculated-fields-for-deeper-analysis"></a> Creating Calculated Fields for Deeper Analysis</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-understand-calculated-fields"><strong>1. Understand Calculated Fields</strong></a>
<ul>
<li><a href="#use-cases-for-calculated-fields">&gt;&gt; Use cases for calculated fields</a></li>
<li><a href="#parts-of-a-calculated-field">&gt;&gt; Parts of a calculated field</a></li>
</ul>
</li>
<li><a href="#2-create-calculated-fields"><strong>2. Create Calculated Fields</strong></a>
<ul>
<li><a href="#methods-to-create-calculated-fields">&gt;&gt; Methods to create calculated fields:</a></li>
<li><a href="#calculation-editor">&gt;&gt; Calculation Editor</a></li>
<li><a href="#difference-between-apply-%EC%A0%81%EC%9A%A9-and-ok-%ED%99%95%EC%9D%B8">&gt;&gt; Difference between [Apply] (적용) and [OK] (확인)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-understand-calculated-fields"><a class="markdownIt-Anchor" href="#1-understand-calculated-fields"></a> <strong>1. Understand Calculated Fields</strong></h2>
<h3 id="use-cases-for-calculated-fields"><a class="markdownIt-Anchor" href="#use-cases-for-calculated-fields"></a> &gt;&gt; Use cases for calculated fields</h3>
<ul>
<li>Create a new field using existing ones</li>
<li>Format string values</li>
<li>Change a field’s data type to work with others</li>
<li>Manipulate date fields</li>
<li>Control how data is aggregated in a calculation</li>
</ul>
<br>
<h3 id="parts-of-a-calculated-field"><a class="markdownIt-Anchor" href="#parts-of-a-calculated-field"></a> &gt;&gt; Parts of a calculated field</h3>
<ul>
<li>
<p>Fields</p>
</li>
<li>
<p>Functions</p>
</li>
<li>
<p>Operators</p>
</li>
<li>
<p>Parameters</p>
</li>
<li>
<p>Comments</p>
<p>​			<img src="/images/S-Tableau-Fundamentals-7-Create-Calculated-Fields/image-20210528093133979-16553661767751.png" alt="image-20210528093133979" style="zoom:50%;"></p>
</li>
</ul>
<br>
<br>
<h2 id="2-create-calculated-fields"><a class="markdownIt-Anchor" href="#2-create-calculated-fields"></a> <strong>2. Create Calculated Fields</strong></h2>
<h3 id="methods-to-create-calculated-fields"><a class="markdownIt-Anchor" href="#methods-to-create-calculated-fields"></a> &gt;&gt; Methods to create calculated fields:</h3>
<ol>
<li>
<p>From the [Data] pane</p>
<img src="/images/S-Tableau-Fundamentals-7-Create-Calculated-Fields/image-20210528093556838-16553661767772.png" alt="image-20210528093556838" style="zoom:67%;"> 
</li>
<li>
<p>From the [Analysis] menu</p>
<img src="/images/S-Tableau-Fundamentals-7-Create-Calculated-Fields/image-20210528093637073-16553661767783.png" alt="image-20210528093637073" style="zoom:67%;"> 
</li>
<li>
<p>Create ad-hoc calculations using existing fields or on an empty shelf in the view</p>
<ul>
<li>
<p>double-click an existing field, an empty shelf, or part of an empty shelf</p>
<img src="/images/S-Tableau-Fundamentals-7-Create-Calculated-Fields/image-20210528095549492-16553661767784.png" alt="image-20210528095549492" style="zoom: 80%;"> 
<img src="/images/S-Tableau-Fundamentals-7-Create-Calculated-Fields/image-20210528095611301-16553661767785.png" alt="image-20210528095611301" style="zoom:80%;"> 
<br>
</li>
</ul>
</li>
</ol>
<h3 id="calculation-editor"><a class="markdownIt-Anchor" href="#calculation-editor"></a> &gt;&gt; Calculation Editor</h3>
<img src="/images/S-Tableau-Fundamentals-7-Create-Calculated-Fields/image-20210528094350559-16553661767786.png" alt="image-20210528094350559" style="zoom:67%;">
<br>
<h3 id="difference-between-apply-적용-and-ok-확인"><a class="markdownIt-Anchor" href="#difference-between-apply-적용-and-ok-확인"></a> &gt;&gt; Difference between [Apply] (적용) and [OK] (확인)</h3>
<ul>
<li>[Apply] : preview how the calculation changes the data in the view</li>
<li>[OK] :      save the calculation</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (6) Using Crosstabs Totals and Aggregation</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/</url>
    <content><![CDATA[<h1 id="using-crosstabs"><a class="markdownIt-Anchor" href="#using-crosstabs"></a> Using Crosstabs</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-creating-and-editing-crosstabs"><strong>1. Creating and Editing Crosstabs</strong></a>
<ul>
<li><a href="#create-a-crosstab-data-table">&gt;&gt; Create a Crosstab (Data table)</a></li>
<li><a href="#edit-the-gridline">&gt;&gt; Edit the gridline</a></li>
</ul>
</li>
<li><a href="#2-working-with-totals-and-aggregation"><strong>2. Working with Totals and Aggregation</strong></a>
<ul>
<li><a href="#add-totals-and-subtotals">&gt;&gt; Add totals and subtotals</a></li>
<li><a href="#change-the-aggregation-type-of-the-view">&gt;&gt; Change the aggregation type of the view</a></li>
</ul>
</li>
<li><a href="#3-creating-highlight-tables"><strong>3. Creating Highlight Tables</strong></a>
<ul>
<li><a href="#why-building-highlight-tables">&gt;&gt; Why building highlight tables?</a></li>
<li><a href="#how-to-build-a-highlight-table">&gt;&gt; How to build a highlight table?</a></li>
</ul>
</li>
<li><a href="#4-creating-heat-maps"><strong>4. Creating Heat Maps</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-creating-and-editing-crosstabs"><a class="markdownIt-Anchor" href="#1-creating-and-editing-crosstabs"></a> <strong>1. Creating and Editing Crosstabs</strong></h2>
<h3 id="create-a-crosstab-data-table"><a class="markdownIt-Anchor" href="#create-a-crosstab-data-table"></a> &gt;&gt; Create a Crosstab (Data table)</h3>
<ol>
<li>
<p>Drag [dimension] to [Columns] / [Rows]</p>
</li>
<li>
<p>Drag [measures] to the [View]</p>
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526140941075-16553658383002.png" alt="image-20210526140941075" style="zoom:50%;">
<p>- Automatically brings in [Measure Names], [Measure Values] and [Measure values shelf ]</p>
<br>
</li>
</ol>
<h3 id="edit-the-gridline"><a class="markdownIt-Anchor" href="#edit-the-gridline"></a> &gt;&gt; Edit the gridline</h3>
<ol>
<li>
<p>right-click on a value in the crosstab</p>
</li>
<li>
<p>select [Format]</p>
<p>​		<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526141958945-16553658383003.png" alt="image-20210526141958945" style="zoom:50%;"></p>
</li>
</ol>
<br>
<br>
<h2 id="2-working-with-totals-and-aggregation"><a class="markdownIt-Anchor" href="#2-working-with-totals-and-aggregation"></a> <strong>2. Working with Totals and Aggregation</strong></h2>
<h3 id="add-totals-and-subtotals"><a class="markdownIt-Anchor" href="#add-totals-and-subtotals"></a> &gt;&gt; Add totals and subtotals</h3>
<ol>
<li>
<p><strong><font color="darkblue">Form the Analysis Menu:</font></strong></p>
<p>[Menu] - [Analysis] --&gt;</p>
<p>[Totals] --&gt;</p>
<p>[Show Row Grand Totals] / [Show Column Grand Totals] / [Add All Subtotals]</p>
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526143521096-16553658383004.png" alt="image-20210526143521096" style="zoom: 67%;">
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526143456694-16553658383005.png" alt="image-20210526143456694" style="zoom: 80%;">
<br>
</li>
<li>
<p><strong><font color="darkblue">From the Analytics Pane</font></strong></p>
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526143709607-16553658383006.png" alt="image-20210526143709607" style="zoom:67%;">
</li>
</ol>
<br>
<br>
<h3 id="change-the-aggregation-type-of-the-view"><a class="markdownIt-Anchor" href="#change-the-aggregation-type-of-the-view"></a> &gt;&gt; Change the aggregation type of the view</h3>
<p>When calculating [Average] for total, be careful with the difference between [weighted average] and [average]</p>
<br>
<ul>
<li>
<p>For <strong><font color="green">weighted average</font></strong>, change the aggregation on the <strong><font color="green">measure field</font></strong></p>
<p>​		<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526143836193-16553658383007.png" alt="image-20210526143836193" style="zoom:67%;"></p>
</li>
</ul>
<br>
<ul>
<li>
<p>For <strong><font color="blue">average</font></strong> of the values showed <strong><font color="blue">in the view</font></strong>, change the aggregation from the <strong><font color="blue">Analysis Menu</font></strong>.</p>
<p>​		<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526145935997-16553658383008.png" alt="image-20210526145935997" style="zoom:80%;"></p>
</li>
</ul>
<br>
<br>
<h2 id="3-creating-highlight-tables"><a class="markdownIt-Anchor" href="#3-creating-highlight-tables"></a> <strong>3. Creating Highlight Tables</strong></h2>
<h3 id="why-building-highlight-tables"><a class="markdownIt-Anchor" href="#why-building-highlight-tables"></a> &gt;&gt; Why building highlight tables?</h3>
<p>Crosstabs is difficult to find outliers or make comparisons across categories.</p>
<p>However, with highlight we can easily emphasize outliers and trends.</p>
<br>
<h3 id="how-to-build-a-highlight-table"><a class="markdownIt-Anchor" href="#how-to-build-a-highlight-table"></a> &gt;&gt; How to build a highlight table?</h3>
<ul>
<li>
<p><strong>Method 1: Normal Way (use Marks)</strong></p>
<ol>
<li>
<p>A highlight table encodes the measure on Text and Color</p>
<ul>
<li>Drag the [measure] field to [Text] Mark</li>
<li>Hold [Ctrl] and drag the [measure] [Text] Mark to the [Color] Mark</li>
</ul>
</li>
<li>
<p>Set the mark type to [Square]</p>
</li>
<li>
<p>Set the [Columns] dimension and [Rows] dimension</p>
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526170544332-16553658383009.png" alt="image-20210526170544332" style="zoom:67%;">
</li>
<li>
<p>Edit colors to highlight outliers</p>
<ul>
<li>
<p>If you want to distinguish data that below or above a particular value by color:</p>
<p>choose a color palette with white in the center first</p>
<p>then set the particular value as the midpoint ( [Center] ) of the color gradient</p>
</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526170411482-165536583830110.png" alt="image-20210526170411482" style="zoom: 67%;">
<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210527092546019-165536583830111.png" alt="image-20210527092546019" style="zoom: 80%;">
<br>
</li>
</ol>
</li>
<li>
<p><strong>Method 2: use [Show Me]</strong></p>
<ol>
<li>
<p>select the measures and dimensions you’re interested in</p>
</li>
<li>
<p>click the [highlight table] icon in the [Show Me] menu</p>
<p>​		<img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210526170921504-165536583830112.png" alt="image-20210526170921504" style="zoom: 67%;"></p>
</li>
</ol>
</li>
</ul>
<br>
<br>
<h2 id="4-creating-heat-maps"><a class="markdownIt-Anchor" href="#4-creating-heat-maps"></a> <strong>4. Creating Heat Maps</strong></h2>
<ul>
<li>
<p>Create a heat map:</p>
<ul>
<li>Need 1 or more [dimensions], and 1 or 2 [measures]</li>
<li>can create by using [Color] and [Size] marks or use the [Show me]</li>
</ul>
</li>
<li>
<p>Adjust the view:</p>
<ul>
<li>
<p>Edit Color:</p>
<p>- For color-blindness, [Orange - (White) - Blue] palette is a good choice</p>
</li>
<li>
<p>Adjust Size:</p>
<p>- Two small tick marks on the slider indicate the best range for the mark size</p>
<p><img src="/images/S-Tableau-Fundamentals-6-Using-Crosstabs-Totals-and-Aggregation/image-20210528085803966-165536583830113.png" alt="image-20210528085803966"></p>
</li>
</ul>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (4) Build Common Views</title>
    <url>/2021/06/28/S-Tableau-Fundamentals-4-Build-Common-Views/</url>
    <content><![CDATA[<h1 id="build-common-views"><a class="markdownIt-Anchor" href="#build-common-views"></a> Build Common Views</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-working-with-dates-to-visualize-time-based-data"><strong>1. Working with Dates to Visualize Time-Based Data</strong></a></li>
<li><a href="#2-create-custom-date-fields-and-hierarchies"><strong>2. Create Custom Date Fields and Hierarchies</strong></a>
<ul>
<li><a href="#create-a-custom-continuous-date-value">&gt;&gt; Create a custom continuous date value</a></li>
<li><a href="#create-a-custom-discrete-date-part">&gt;&gt; Create a custom discrete date part</a></li>
<li><a href="#create-a-custom-date-hierarchy">&gt;&gt; Create a custom date hierarchy</a></li>
</ul>
</li>
<li><a href="#3-comparing-multiple-measures-in-views"><strong>3. Comparing Multiple Measures in Views</strong></a>
<ul>
<li><a href="#create-text-tables-with-multiple-measures">&gt;&gt; Create text tables with multiple measures</a></li>
<li><a href="#make-views-with-multiple-measures-on-the-same-axis">&gt;&gt; Make views with multiple measures on the same axis</a></li>
<li><a href="#build-dual-and-combined-axis-charts">&gt;&gt; Build dual and combined axis charts</a></li>
<li><a href="#using-scatter-plots-to-show-relationships-between-measures">&gt;&gt; Using Scatter Plots To Show Relationships Between Measures</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-working-with-dates-to-visualize-time-based-data"><a class="markdownIt-Anchor" href="#1-working-with-dates-to-visualize-time-based-data"></a> <strong>1. Working with Dates to Visualize Time-Based Data</strong></h2>
<p>&gt;&gt; Change date field and calender defaults</p>
<ul>
<li>
<p>[Data] --&gt; Data Source Name --&gt; [Date Properties]</p>
<p>​			<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521145523588-16298809215928.png" alt="image-20210521145523588" style="zoom:50%;">					<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521145648241.png" alt="image-20210521145648241" style="zoom:80%;"></p>
</li>
</ul>
<br>
<br>
<h2 id="2-create-custom-date-fields-and-hierarchies"><a class="markdownIt-Anchor" href="#2-create-custom-date-fields-and-hierarchies"></a> <strong>2. Create Custom Date Fields and Hierarchies</strong></h2>
<h3 id="create-a-custom-continuous-date-value"><a class="markdownIt-Anchor" href="#create-a-custom-continuous-date-value"></a> &gt;&gt; Create a custom continuous date value</h3>
<ol>
<li>
<p>[Data] Pane --&gt; [Order Date] --&gt; click the down-arrow</p>
</li>
<li>
<p>[Create] --&gt; [Custom date]</p>
</li>
<li>
<p>[Name] :  “Continuous Date (Months)”</p>
<p>[Detail] : “Months”</p>
<p>[Date Value]</p>
</li>
<li>
<p>Click [OK]</p>
<p>​					<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521161538861-16298808457426.png" alt="image-20210521161538861" style="zoom:50%;">					<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521161650010.png" alt="image-20210521161650010" style="zoom: 80%;"></p>
</li>
</ol>
<br>
<h3 id="create-a-custom-discrete-date-part"><a class="markdownIt-Anchor" href="#create-a-custom-discrete-date-part"></a> &gt;&gt; Create a custom discrete date part</h3>
<ol>
<li>
<p>[Data] Pane --&gt; [Order Date] --&gt; click the down-arrow</p>
</li>
<li>
<p>[Create] --&gt; [Custom date]</p>
</li>
<li>
<p>[Name] :  “Discrete Date (Months)”</p>
<p>[Detail] : “Months”</p>
<p>[Date Part]</p>
</li>
<li>
<p>Click [OK]</p>
<p>​				<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521161538861-16298808772617.png" alt="image-20210521161538861" style="zoom:50%;">						<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521162304726.png" alt="image-20210521162304726" style="zoom:80%;"></p>
</li>
</ol>
<br>
<h3 id="create-a-custom-date-hierarchy"><a class="markdownIt-Anchor" href="#create-a-custom-date-hierarchy"></a> &gt;&gt; Create a custom date hierarchy</h3>
<ol>
<li>Create a custom discrete date part field, “Discrete Date (Years)”</li>
<li>Create another custom discrete date part field, “Discrete Date (Months)”</li>
<li>In the [Data] pane, drag [Discrete Date (Months)] on top of [Discrete Date (Years)]</li>
<li>In the dialog box, change the name of the hierarchy to “Custom Dates”</li>
<li>Click [OK]</li>
</ol>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521163445426.png" alt="image-20210521163445426" style="zoom:80%;">
<br>
<br>
<h2 id="3-comparing-multiple-measures-in-views"><a class="markdownIt-Anchor" href="#3-comparing-multiple-measures-in-views"></a> <strong>3. Comparing Multiple Measures in Views</strong></h2>
<p><strong>[Measure Values]</strong> (<font color="viridis">측정값</font>) and <strong>[Measure Names]</strong> (<font color="blue">측정값 이름</font>) fields are automatically created by Tableau.</p>
<p>They serve as containers for the measures in the [Data] Pane:</p>
<ul>
<li><font color="viridis">[Measure Values]</font> field:  a measure that contains the values of the measures</li>
<li><font color="blue">[Measure Names]</font> field: a dimension that contains the names of the measures
<ul>
<li>Note: it does not include measures, such as [Latitude], that do not aggregate the same way as other measures</li>
</ul>
</li>
</ul>
<p>With  <strong>Measure Values</strong> and <strong>Measure Names</strong> fields, you can build certain types of views that involve multiple measures, enabling you to compare them.</p>
<br>
<h3 id="create-text-tables-with-multiple-measures"><a class="markdownIt-Anchor" href="#create-text-tables-with-multiple-measures"></a> &gt;&gt; Create text tables with multiple measures</h3>
<p><strong>[개요]</strong></p>
<ul>
<li>Text tables can contain up to <strong>fifty measures on Rows</strong> and <strong>sixteen on Columns</strong></li>
<li>Measures in text tables <strong>can have different units</strong></li>
</ul>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210521170225404.png" alt="image-20210521170225404" style="zoom:67%;">
<br>
<br>
<h3 id="make-views-with-multiple-measures-on-the-same-axis"><a class="markdownIt-Anchor" href="#make-views-with-multiple-measures-on-the-same-axis"></a> &gt;&gt; Make views with multiple measures on the same axis</h3>
<p><strong>[개요]</strong></p>
<ul>
<li>You can add <strong>fifty measures</strong> to the same axis</li>
<li>Measures that share an axis should have the <strong>same unit of measurement</strong></li>
<li>Measures that share the same axis use the <strong>same type of mark</strong>, such as bar</li>
</ul>
<br>
<p><strong>[실습]</strong></p>
<ol>
<li>Add [Category] to [Columns]</li>
<li>Add [Sales] to [Rows]</li>
<li>Drag [Profit] from the [Data] pane to the [Sales] axis
<ul>
<li>[Measure Values] and [Measure Names] will be added to the view automatically</li>
</ul>
</li>
<li>Drag [Measure Name] from the [Data] pane, to color on the [Marks] card.</li>
</ol>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526084305992.png" alt="image-20210526084305992" style="zoom:60%;">
<br>
<br>
<h3 id="build-dual-and-combined-axis-charts"><a class="markdownIt-Anchor" href="#build-dual-and-combined-axis-charts"></a> &gt;&gt; Build dual and combined axis charts</h3>
<p><strong>[개요]</strong></p>
<ul>
<li>
<p><strong>Dual axis charts</strong> have <font color="viridis">two axes for the measures</font> and <font color="blue">one for the dimensions</font></p>
</li>
<li>
<p><strong>Dual axis charts</strong> use <font color="viridis">two measures</font> and <font color="blue">one or more dimensions</font></p>
</li>
<li>
<p>Measures can have <strong>different units</strong></p>
</li>
<li>
<p>Measures can use the <strong>same or different mark types</strong></p>
</li>
</ul>
<br>
<p><strong>[실습]</strong></p>
<ul>
<li>
<p><strong>Measures with same number format</strong>  [Sales &amp; Profit]</p>
<ol>
<li>
<p><strong><font color="darkblue">Set the dimension and the first measure in the view</font></strong></p>
<p>[Columns] : <font color="viridis">Month(Order Date)</font>  (<em>dimension</em>)</p>
<p>[Rows] : <font color="viridis">SUM(Sales)</font>  (<em>first measure</em>)</p>
<br>
</li>
<li>
<p><strong><font color="darkblue">Make a dual axis chart:</font></strong></p>
<p>Drag <font color="viridis">[Profit]</font> (<em>second measure</em>) from Data pane to the right edge of the view</p>
<p>until you see <em>&lt; a light green ruler icon &gt;</em> and <em>&lt; a black dotted line &gt;</em></p>
<p>and drop the measure.</p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526095349671.png" alt="image-20210526095349671" style="zoom: 50%;">
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526100126518.png" alt="image-20210526100126518" style="zoom:50%;">
<br>
</li>
<li>
<p><strong><font color="darkblue">Change the mark type for each measure</font></strong></p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526094017490.png" alt="image-20210526094017490" style="zoom:50%;">
<br>
</li>
<li>
<p><strong><font color="darkblue">Set the scales same</font></strong></p>
<p>Right-click the axis want to change --&gt; Synchronize Axis</p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526101345020.png" alt="image-20210526101345020" style="zoom:50%;">
</li>
</ol>
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Measures with different number formats</strong>  [Sales &amp; Discount]</p>
<p>&gt; Without [Synchronize Axis] (축 동기화)</p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526102648297.png" alt="image-20210526102648297" style="zoom:50%;">
</li>
</ul>
<br>
<br>
<h3 id="using-scatter-plots-to-show-relationships-between-measures"><a class="markdownIt-Anchor" href="#using-scatter-plots-to-show-relationships-between-measures"></a> &gt;&gt; Using Scatter Plots To Show Relationships Between Measures</h3>
<blockquote>
<p><a href="https://elearning.tableau.com/tableau-fundamentals/786137/scorm/3htuzbdo9a99x" target="_blank" rel="noopener">E-Learning Link</a></p>
</blockquote>
<p><strong>[What can we do with scatter plots?]</strong></p>
<ul>
<li>
<p>Evaluate data clusters</p>
</li>
<li>
<p>Identify correlations and trends</p>
<p>- Use correlations and trends to analyze data</p>
</li>
<li>
<p>Identify outliers</p>
<p>- Manage outliers</p>
<p>- Exclude an outlier from a view</p>
<p>- Add an annotation to an outlier</p>
</li>
</ul>
<br>
<p><strong>[Details]</strong></p>
<ul>
<li><strong>Build a scatter plot</strong></li>
</ul>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526110123760.png" alt="image-20210526110123760" style="zoom: 67%;">
<br>
<ul>
<li>
<p><strong>Evaluate data clusters</strong></p>
<p>- Two clusters divided by the eruption duration classes, [long] and [short]</p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526110409805.png" alt="image-20210526110409805" style="zoom: 67%;">
<br>
</li>
<li>
<p><strong>Identify correlations and trends</strong></p>
<p>- Positive Correlation</p>
<p>- Negative Correlation</p>
<p>- No Correlation</p>
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Use correlations and trends to analyze data</strong></p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526111021545.png" alt="image-20210526111021545" style="zoom: 67%;">
<p>- Positive relationship between [wait time between eruptions] and [eruption duration]</p>
<p>- the longer the wait time between eruptions, the longer the eruption duration</p>
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Identify outliers</strong></p>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526111537532.png" alt="image-20210526111537532" style="zoom:67%;">
<ul>
<li>
<p>Exclude an outlier</p>
<ol>
<li>
<p>Press [Ctrl] and select the outlier</p>
</li>
<li>
<p>On the tooltip that appers, click [Exclude]</p>
<br>
</li>
</ol>
</li>
<li>
<p>Add an annotation to an outlier</p>
<ol>
<li>Right-click the outlier</li>
<li>Point to [Annotate] (주석 추가)</li>
<li>Click [Mark]</li>
<li>Use the [Edit Annotation] dialog box to create annotation</li>
<li>click [OK]</li>
</ol>
<img src="/images/S-Tableau-Fundamentals-4-Build-Common-Views/image-20210526123454393.png" alt="image-20210526123454393" style="zoom: 67%;">
<br>
</li>
</ul>
<br>
</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (12) Create Dashboards and Stories</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/</url>
    <content><![CDATA[<h1 id="create-dashboards-and-stories"><a class="markdownIt-Anchor" href="#create-dashboards-and-stories"></a> Create Dashboards and Stories</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-plan-for-a-successful-dashboard"><strong>1. Plan for a Successful Dashboard</strong></a>
<ul>
<li><a href="#considerations-for-planning-a-dashboard">&gt;&gt; Considerations for planning a dashboard</a></li>
<li><a href="#steps-for-planning-a-dashboard">&gt;&gt; Steps for planning a dashboard</a></li>
</ul>
</li>
<li><a href="#2-creating-a-dashboard"><strong>2. Creating a Dashboard</strong></a>
<ul>
<li><a href="#add-views-to-a-dashboard">&gt;&gt; Add views to a dashboard</a></li>
<li><a href="#dashboard-settings">&gt;&gt; Dashboard Settings</a></li>
<li><a href="#highlight-and-filter-data-in-dashboards">&gt;&gt; Highlight and filter data in dashboards</a></li>
</ul>
</li>
<li><a href="#3-creating-interactive-dashboards-using-actions"><strong>3. Creating Interactive Dashboards Using Actions</strong></a>
<ul>
<li><a href="#actions-in-tableau">&gt;&gt; Actions in Tableau</a></li>
<li><a href="#methods-for-running-an-action">&gt;&gt; Methods for running an action</a></li>
<li><a href="#add-actions-to-a-dashboard">&gt;&gt; Add actions to a dashboard</a>
<ul>
<li><a href="#1-filter-action">1. Filter Action</a></li>
<li><a href="#2-highlight-action">2. Highlight Action</a></li>
<li><a href="#3-go-to-sheet-action">3. Go to Sheet Action</a></li>
<li><a href="#4-go-to-url-action">4. Go to URL Action</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-refining-a-dashboard"><strong>4. Refining a dashboard</strong></a>
<ul>
<li><a href="#start-with-the-layout">&gt;&gt; Start with the layout</a></li>
<li><a href="#determine-the-device-layout-tableau-desktop-only">&gt;&gt; Determine the device layout (Tableau Desktop Only)</a></li>
<li><a href="#color-sizing-and-fonts">&gt;&gt; Color, sizing and fonts</a></li>
<li><a href="#tooltips">&gt;&gt; Tooltips</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-plan-for-a-successful-dashboard"><a class="markdownIt-Anchor" href="#1-plan-for-a-successful-dashboard"></a> <strong>1. Plan for a Successful Dashboard</strong></h2>
<h3 id="considerations-for-planning-a-dashboard"><a class="markdownIt-Anchor" href="#considerations-for-planning-a-dashboard"></a> &gt;&gt; Considerations for planning a dashboard</h3>
<ul>
<li>
<p><strong>Who is your audience?</strong></p>
<ul>
<li>determine which chart to use</li>
<li>how you arrange the charts on the dashboard</li>
<li>the level of detail</li>
<li>the level of interaction</li>
</ul>
</li>
<li>
<p><strong>What information is important to your audience?</strong></p>
<ul>
<li>
<p>consider what the key takeaways are for your audience</p>
</li>
<li>
<p>simple and only includes relevant information</p>
</li>
<li>
<p>consistent design, language and color scheme</p>
</li>
</ul>
</li>
<li>
<p><strong>Why are you creating a dashboard?</strong></p>
<ul>
<li>a conclusion or a key question?</li>
<li>to inform your users?</li>
<li>to explore the data?</li>
</ul>
</li>
<li>
<p><strong>Where is the dashboard going to be viewed?</strong></p>
<ul>
<li>viewing on different size devices? (desktop, laptop, tablet, phone?)</li>
<li>print the dashboard?</li>
<li>look at offline?</li>
</ul>
</li>
</ul>
<br>
<h3 id="steps-for-planning-a-dashboard"><a class="markdownIt-Anchor" href="#steps-for-planning-a-dashboard"></a> &gt;&gt; Steps for planning a dashboard</h3>
<p><strong>Four General Steps</strong></p>
<ol>
<li>Determine purpose + audience</li>
<li>Plan the dashboard</li>
<li>Build using design best practices</li>
<li>Test it for usability and performance</li>
</ol>
<br>
<br>
<h2 id="2-creating-a-dashboard"><a class="markdownIt-Anchor" href="#2-creating-a-dashboard"></a> <strong>2. Creating a Dashboard</strong></h2>
<h3 id="add-views-to-a-dashboard"><a class="markdownIt-Anchor" href="#add-views-to-a-dashboard"></a> &gt;&gt; Add views to a dashboard</h3>
<ol>
<li>
<p>Create a new dashboard</p>
<ul>
<li>click the [New Dashboard] icon <img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210531142831913-16553671932551.png" alt="image-20210531142831913" style="zoom: 67%;"></li>
</ul>
</li>
<li>
<p>Add views to a dashboard</p>
<ul>
<li>drag the worksheet in the [Sheets] list to the canvas</li>
</ul>
</li>
<li>
<p>Replace one worksheet with another</p>
<ul>
<li>
<p>select the worksheet in the dashboard view</p>
</li>
<li>
<p>in the [Sheets] list, hover over the title of the worksheet you would like to use and click the [Swap Sheets] icon</p>
</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210531143614360-16553671932562.png" alt="image-20210531143614360" style="zoom: 67%;">
</li>
<li>
<p>Return to worksheet in three ways</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210531143729562-16553671932563.png" alt="image-20210531143729562" style="zoom: 67%;">
</li>
</ol>
<br>
<br>
<h3 id="dashboard-settings"><a class="markdownIt-Anchor" href="#dashboard-settings"></a> &gt;&gt; Dashboard Settings</h3>
<ul>
<li>
<p><strong>Dashboard Panel</strong></p>
<ul>
<li>
<p>[Device Preview] : to see what your dashboard would look like on certain devices</p>
</li>
<li>
<p>[Size] : Fixed Size / Automatic / Range</p>
</li>
<li>
<p>[Sheets] : Sheet names of the views in this workbook that  can be used to build your dashboard</p>
</li>
<li>
<p>[Objects] : containers, images, text or web pages that can be added to a dashboard</p>
<p>- Object layout: Tiled (arrange in a single layer grid) / Floating (freely moved on the dashboard)</p>
</li>
<li>
<p>[Show dashboard title]</p>
</li>
</ul>
</li>
<li>
<p><strong>Layout Panel</strong></p>
<ul>
<li>
<p>[Item hierarchy]</p>
<p>- contains all the floating objects and any tiled objects listed in a hierarchy</p>
<p>- selecting any object on the list will highlight it in the view</p>
<p>​	* containers framed in blue</p>
<p>​	* sheets framed in gray</p>
</li>
<li>
<p>[Settings] : adjust objects’ position and size</p>
<p>- tiled objects are fixed (can’t change the position or size)</p>
</li>
</ul>
</li>
</ul>
<br>
<h3 id="highlight-and-filter-data-in-dashboards"><a class="markdownIt-Anchor" href="#highlight-and-filter-data-in-dashboards"></a> &gt;&gt; Highlight and filter data in dashboards</h3>
<ul>
<li>
<p><strong>Legend Highlights</strong></p>
<ul>
<li>Legend highlights help the data to stand out from other marks</li>
<li>activate: [Legend] Card --&gt; select Highlight Selected Items</li>
</ul>
</li>
<li>
<p><strong>Use a view as a filter</strong></p>
<ul>
<li>means the marks you select in one view will filter the results of the other views in your dashboard</li>
</ul>
</li>
<li>
<p><strong>Apply the filter to all sheets</strong></p>
<ul>
<li>
<p>filter card --&gt; [Apply to Worksheets] --&gt; [All using This Data Source]</p>
<br>
</li>
</ul>
</li>
</ul>
<br>
<h2 id="3-creating-interactive-dashboards-using-actions"><a class="markdownIt-Anchor" href="#3-creating-interactive-dashboards-using-actions"></a> <strong>3. Creating Interactive Dashboards Using Actions</strong></h2>
<h3 id="actions-in-tableau"><a class="markdownIt-Anchor" href="#actions-in-tableau"></a> &gt;&gt; Actions in Tableau</h3>
<ul>
<li><strong><font color="darkblue">Filter Action</font></strong>
<ul>
<li>Using the data from one view to filter data in another</li>
<li>Typically, a filter action sends information from a selected mark to another sheet showing related information</li>
</ul>
</li>
<li><strong><font color="darkblue">Highlight Action</font></strong>
<ul>
<li>Allow you to call attention to marks of interest by retaining color for specific marks and dimming all others</li>
<li>Several methods to highlight marks
<ol>
<li>Manually select the marks you want to highlight</li>
<li>use the legend to select related marks</li>
<li>use the highlighter to search for marks in context</li>
<li>create an advanced highlight action</li>
</ol>
</li>
</ul>
</li>
<li><strong><font color="darkblue">Go to Sheet Action</font></strong>
<ul>
<li>Navigation to other worksheets, dashboards, or stories</li>
</ul>
</li>
<li><strong><font color="darkblue">Go to URL Action (Tableau Desktop Only)</font></strong>
<ul>
<li>Create hyperlinks to external resources, such as a web page, email link, or a file</li>
</ul>
</li>
<li><strong><font color="darkblue">Parameter and set actions (Tableau Desktop Only)</font></strong>
<ul>
<li>Parameter actions: Let your audience change a parameter value through direct interaction with a viz</li>
<li>Set actions: Let users change the values in a set by directly interacting with marks on a viz</li>
</ul>
</li>
</ul>
<br>
<h3 id="methods-for-running-an-action"><a class="markdownIt-Anchor" href="#methods-for-running-an-action"></a> &gt;&gt; Methods for running an action</h3>
<ul>
<li><strong><font color="darkblue">Hover</font></strong>
<ul>
<li>Rest the mouse pointer over a mark to run the action</li>
<li>Works well for highlight actions</li>
</ul>
</li>
<li><strong><font color="darkblue">Select</font></strong>
<ul>
<li>Click a mark to run the action</li>
<li>Works well for most types of actions except URL actions</li>
</ul>
</li>
<li><strong><font color="darkblue">Menu</font></strong>
<ul>
<li>Click a selected mark --&gt; select an option on the tooltip</li>
<li>Works well for URL actions</li>
</ul>
</li>
</ul>
<br>
<h3 id="add-actions-to-a-dashboard"><a class="markdownIt-Anchor" href="#add-actions-to-a-dashboard"></a> &gt;&gt; Add actions to a dashboard</h3>
<h4 id="1-filter-action"><a class="markdownIt-Anchor" href="#1-filter-action"></a> 1. Filter Action</h4>
<ul>
<li>
<p><strong><font color="darkblue">Concept:</font></strong></p>
<ul>
<li>
<p>Filter actions create a filter on a target sheet based on a selection at the source sheet</p>
</li>
<li>
<p>With filter action, you can use the data from one view to filter data in another</p>
</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Caution:</font></strong> The filter chosen must in both the source and target sheets</p>
</li>
<li>
<p><strong><font color="darkblue">Create a filter action</font></strong>:</p>
<ul>
<li>
<p>[Dashboard] --&gt; [Actions]</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601101609404-16553671932564.png" alt="image-20210601101609404" style="zoom:50%;"> 
</li>
<li>
<p>[Add Action] --&gt; [Filter]</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601102157673-16553671932565.png" alt="image-20210601102157673" style="zoom:67%;">  
<br>
</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Edit a filter action:</font></strong></p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601111831004-16553671932566.png" alt="image-20210601111831004" style="zoom:67%;">  
<ul>
<li>
<p>Filter Action Name</p>
</li>
<li>
<p>Source Sheets</p>
</li>
<li>
<p>Run action on: Hover / <em>Select</em> / Menu</p>
</li>
<li>
<p>Target Sheets</p>
</li>
<li>
<p>Clearing the selection will:</p>
<ol>
<li>Leave the filter:       the filter stay in place until the next selection</li>
<li>Show all values:      returns the view to an unfiltered state</li>
<li>Exclude all values:  remove the marks and axes of target sheets from the view</li>
</ol>
</li>
<li>
<p>Target Filters:</p>
<ol>
<li>select specific fields to respond to this filter action</li>
<li>let all fields respond to this filter action</li>
</ol>
</li>
</ul>
<br>
</li>
</ul>
<h4 id="2-highlight-action"><a class="markdownIt-Anchor" href="#2-highlight-action"></a> 2. Highlight Action</h4>
<ul>
<li>
<p><strong><font color="darkblue">Concept:</font></strong> Highlight actions are used to call attention relevant data by retaining color for some marks while dimming all the others</p>
</li>
<li>
<p><strong><font color="darkblue">Create a highlight action:</font></strong></p>
<ul>
<li>
<p>[Dashboard] --&gt; [Actions]</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601101609404-16553671932564.png" alt="image-20210601101609404" style="zoom:50%;"> 
</li>
<li>
<p>[Add Action] --&gt; [Highlight]</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601111124788-16553671932567.png" alt="image-20210601111124788" style="zoom:67%;"> 
<br>
</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Edit a highlight action:</font></strong></p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601111754485-16553671932569.png" alt="image-20210601111754485" style="zoom:67%;">  
<ul>
<li>Highlight Action name</li>
<li>Source Sheets</li>
<li>Run action on: <em>Hover</em> / Select / Menu</li>
<li>Target Sheets</li>
<li>Target Highlighting: the types of fields that will be highlighted
<ol>
<li>Selected Fields</li>
<li>Dates and Times</li>
<li>All fields</li>
</ol>
</li>
</ul>
</li>
</ul>
<br>
<h4 id="3-go-to-sheet-action"><a class="markdownIt-Anchor" href="#3-go-to-sheet-action"></a> 3. Go to Sheet Action</h4>
<ul>
<li>
<p><strong><font color="darkblue">Concept:</font></strong> The Go to Sheet action allows users to go from one dashboard to another sheet or dashboard.</p>
</li>
<li>
<p><strong><font color="darkblue">Create a Go to Sheet action</font></strong>:</p>
<ul>
<li>[Dashboard] – &gt; [Actions]</li>
<li>In the [Actions] dialog box, [Add Action] --&gt; [Go to Sheet]</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Edit a Go to Sheet action</font></strong></p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601124642824-16553671932568.png" alt="image-20210601124642824" style="zoom:67%;"> 
<ul>
<li>Go to Sheet action name</li>
<li>Source Sheets</li>
<li>Run action on: Hover / Select / Menu</li>
<li>Target Sheets</li>
</ul>
</li>
</ul>
<br>
<h4 id="4-go-to-url-action"><a class="markdownIt-Anchor" href="#4-go-to-url-action"></a> 4. Go to URL Action</h4>
<ul>
<li>
<p><strong><font color="darkblue">Concept:</font></strong> URL actions allow end users to connect to web-based resources, and these can by dynamically programmed to update based on the user’s selection.</p>
</li>
<li>
<p><strong><font color="darkblue">Create a Go to URL action:</font></strong></p>
<ul>
<li>[Dashboard] --&gt; [Actions]</li>
<li>In the [Actions] dialog box, [Add Action] --&gt; [Go to URL]</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Edit a Go to URL action: </font></strong></p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601125527606-165536719325610.png" alt="image-20210601125527606" style="zoom:67%;">  
<ul>
<li>Go to URL Action name</li>
<li>Source Sheets</li>
<li>Run action on: Hover / Select / <em>Menu</em></li>
<li>URL: with an ftp, http, or https prefix</li>
<li>Arrow button at the right of the URL box: enter field and filter values as parameters in the URL</li>
</ul>
</li>
</ul>
<br>
<br>
<h2 id="4-refining-a-dashboard"><a class="markdownIt-Anchor" href="#4-refining-a-dashboard"></a> <strong>4. Refining a dashboard</strong></h2>
<h3 id="start-with-the-layout"><a class="markdownIt-Anchor" href="#start-with-the-layout"></a> &gt;&gt; Start with the layout</h3>
<ul>
<li>
<p><strong>Select worksheets to include</strong></p>
</li>
<li>
<p><strong>Set the layout orientation with containers</strong></p>
<ul>
<li>Horizontal layout container</li>
<li>Vertical layout container</li>
</ul>
<p><img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601155525747-165536719325613.png" alt="image-20210601155525747" style="zoom: 67%;">   (More Info. : <a href="https://tabsoft.co/dashboardlayout" target="_blank" rel="noopener">Size and Lay Out Your Dashboard</a>)</p>
</li>
<li>
<p><strong>Use non-worksheet objects</strong></p>
<ul>
<li>Text</li>
<li>Image</li>
<li>Web Page</li>
<li>Navigation : Add a button that navigates to another dashboard or sheet</li>
<li>Extension : Insert a dashboard extension</li>
<li>Export : Add a button to allow dashboard consumers to export the dashboard according to the export type you determine (PDF, PowerPoint, or Image)</li>
</ul>
</li>
<li>
<p><strong>Consider Floating a view</strong></p>
<ul>
<li>To save space or improve its proximity to another item, you can float a view, filter, legend, text, image, web page, or even a layout container</li>
</ul>
</li>
<li>
<p><strong>Add white space</strong></p>
<ul>
<li>
<p><strong><font color="darkblue">Two methods:</font></strong></p>
<ol>
<li>Insert and resize a blank container</li>
<li>Adjust either the outer or inner padding of a view, container, or object</li>
</ol>
</li>
<li>
<p><strong><font color="darkblue">Padding:</font></strong></p>
<ol>
<li>[Inner Padding] : sets the spacing between item contents and the perimeter of the border and background color</li>
<li>[Outer Padding] : provides additional spacing beyond the border and background color</li>
</ol>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601161555654-165536719325611.png" alt="image-20210601161555654" style="zoom:80%;">
</li>
</ul>
</li>
<li>
<p><strong>Use borders and background colors sparingly</strong></p>
</li>
</ul>
<br>
<h3 id="determine-the-device-layout-tableau-desktop-only"><a class="markdownIt-Anchor" href="#determine-the-device-layout-tableau-desktop-only"></a> &gt;&gt; Determine the device layout (Tableau Desktop Only)</h3>
<p><strong>Step 1. Make a dashboard by using the default</strong></p>
<ul>
<li>The default dashboard acts as a template for other device layouts</li>
<li>Only sheets that are put onto the default dashboard will be available for the device specific layouts</li>
</ul>
<p><strong>Step 2. Add a device layout</strong></p>
<ul>
<li>
<p>[Dashboard] Pane --&gt; click [Device Preview]</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601172026867-165536719325612.png" alt="image-20210601172026867" style="zoom:67%;">
</li>
<li>
<p>Choose a layout in [Device Preview Bar]:</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210601171953192-165536719325614.png" alt="image-20210601171953192" style="zoom:67%;"> 
<ul>
<li>Device Type: Default / Desktop / Tablet / Phone</li>
<li>Screen Orientation: Landscape (가로) / Portrait (세로)</li>
</ul>
</li>
<li>
<p>click [Add ** Layout]</p>
</li>
</ul>
<p><strong>Step 3. Edit the layout added</strong></p>
<ul>
<li>
<p><strong><font color="darkblue">Size</font></strong></p>
<ul>
<li>
<p>Default:   keeps the size from the default dashboard</p>
</li>
<li>
<p>Fit all:       fits all the dimensions like automatic sizing on the default</p>
</li>
<li>
<p>Fit width: fits the dashboard horizontally but allows a hard-coded height</p>
<p>​				  (It means the user would scroll vertically to consume the entire dashboard)</p>
</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Layout</font></strong></p>
<ul>
<li>Default</li>
<li>Custom : Available to edit</li>
</ul>
</li>
</ul>
<br>
<h3 id="color-sizing-and-fonts"><a class="markdownIt-Anchor" href="#color-sizing-and-fonts"></a> &gt;&gt; Color, sizing and fonts</h3>
<ul>
<li>
<p><strong>Color</strong></p>
</li>
<li>
<p><strong>Sizing</strong></p>
<ul>
<li>Keep users’ screen size in mind</li>
<li>When using <strong><font color="green">crosstabs</font></strong>, don’t use Fit Entire View; use a combination of a scroll bar and either <strong><font color="green">Fit Width or Fit Height</font></strong></li>
<li>To resize <strong><font color="green">elements</font></strong>, try <strong><font color="green">Shift+drag</font></strong></li>
<li>To resize <strong><font color="green">individual worksheets</font></strong>, use <strong><font color="green">CTRL</font></strong> and the arrow keys to resize rather than manually dragging</li>
</ul>
</li>
<li>
<p><strong>Font</strong></p>
<ul>
<li>
<p>The quickest way to make a fast, large-scale change to all the titles in your dashboard is to change them at the workbook level (A workbook is the largest possible container for formatting settings) :</p>
<ol>
<li>
<p>Click [Format] --&gt; Select [Workbook]</p>
</li>
<li>
<p>Edit in [Format Workbook] Pane --&gt; [Fonts]</p>
<p><img src="D:\1. 아이투맥스\3. Tableau 학습\Typora Note\E_Analyst\2. Tableau Fundamentals\2-12. Create Dashboards and Stories.assets\image-20210602090303105.png" alt="image-20210602090303105" style="zoom:50%;">		 <img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210602090411235-165536719325716.png" alt="image-20210602090411235" style="zoom:50%;"></p>
</li>
</ol>
</li>
</ul>
</li>
</ul>
<br>
<h3 id="tooltips"><a class="markdownIt-Anchor" href="#tooltips"></a> &gt;&gt; Tooltips</h3>
<ul>
<li>
<p><strong>Customize tooltips:</strong></p>
<ul>
<li>[Worksheet] --&gt; [Tooltip]</li>
</ul>
</li>
<li>
<p><strong>Add visualizations in tooltips</strong></p>
<ul>
<li>
<p><strong><font color="darkblue">Viz in tooltips:</font></strong></p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210602091801243-165536719325717.png" alt="image-20210602091801243" style="zoom:67%;">
</li>
<li>
<p><strong><font color="darkblue">Add a viz in tooltip</font></strong></p>
<ol>
<li>
<p>From the main (source) viz, click [Tooltip] on the [Marks] card.</p>
</li>
<li>
<p>Click [Insert]  --&gt; [Sheets]</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210602092038063-165536719325720.png" alt="image-20210602092038063" style="zoom:67%;">
</li>
<li>
<p>Select the target sheet that should appear in the tooltip --&gt; click [OK]</p>
</li>
</ol>
</li>
<li>
<p><strong><font color="darkblue">Learn more</font></strong></p>
<ol>
<li>
<p>You can set the size of a view in a tooltip</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210602102704800-165536719325718.png" alt="image-20210602102704800" style="zoom:67%;">
</li>
<li>
<p>The view in the tooltip is always static</p>
<p>- The viz in the tooltip is a static image, not an interactive viz.</p>
<p>- Multiple target sheets can appear in the same tooltip</p>
</li>
<li>
<p>It’s possible to format tooltip text</p>
<img src="/images/S-Tableau-Fundamentals-12-Create-Dashboards-and-Stories/image-20210602103038725-165536719325719.png" alt="image-20210602103038725" style="zoom:67%;">
</li>
<li>
<p>Hovering on a mark filters the target viz</p>
<p>- On the sheet for the target viz, there is a “tooltip” filter on the [Filters] shelf</p>
<p>- When a tooltip containing a viz is displayed, the target viz is filtered based on the mark you’re hovering over</p>
</li>
<li>
<p>Show Me resets the tooltip</p>
<p>- If you use [Show Me] in the source sheet to change the view structure, you will reset all tooltip edits, including Viz in Tooltip references.</p>
</li>
</ol>
</li>
</ul>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (3) Organize Data and Create Filters</title>
    <url>/2021/06/28/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/</url>
    <content><![CDATA[<h1 id="organize-data-and-create-filters"><a class="markdownIt-Anchor" href="#organize-data-and-create-filters"></a> Organize Data and Create Filters</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-creating-groups-in-your-data"><strong>1. Creating Groups in Your Data</strong></a>
<ul>
<li><a href="#groups-in-tableau">&gt;&gt; Groups in Tableau</a></li>
<li><a href="#methods-to-create-groups">&gt;&gt; Methods to create groups</a></li>
<li><a href="#details-for-each-method">&gt;&gt; Details for each method</a><br>
*
<ul>
<li><a href="#method-1-creating-a-group-from-the-data-pane"><em>Method 1.</em> Creating a group from the Data pane</a></li>
<li><a href="#method-2-creating-a-group-from-within-the-view"><em>Method 2.</em> Creating a group from within the view</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-creating-hierarchies-%EA%B3%84%EC%B8%B5-in-your-data"><strong>2. Creating Hierarchies (계층) in Your Data</strong></a>
<ul>
<li><a href="#hierarchies-in-tableau">&gt;&gt;  Hierarchies in Tableau</a></li>
<li><a href="#date-hierarchies">&gt;&gt; Date hierarchies</a></li>
<li><a href="#methods-to-create-hierarchies">&gt;&gt; Methods to create hierarchies</a></li>
</ul>
</li>
<li><a href="#3-understanding-filtering-in-tableau"><strong>3. Understanding Filtering in Tableau</strong></a>
<ul>
<li><a href="#filter-types-in-tableau">&gt;&gt; Filter types in Tableau</a></li>
<li><a href="#filtering-order-of-operations">&gt;&gt; Filtering order of operations</a></li>
</ul>
</li>
<li><a href="#4-filtering-your-data"><strong>4. Filtering Your Data</strong></a>
<ul>
<li><a href="#filtering-on-dimensions">&gt;&gt; Filtering on Dimensions</a></li>
<li><a href="#filtering-on-measures">&gt;&gt; Filtering on Measures</a></li>
<li><a href="#filtering-on-dates">&gt;&gt; Filtering on Dates</a></li>
</ul>
</li>
<li><a href="#5-sorting-your-data"><strong>5. Sorting Your Data</strong></a>
<ul>
<li><a href="#two-sorting-methods">&gt;&gt; Two sorting methods:</a></li>
<li><a href="#customizing-the-sort-using-the-sort-menu">&gt;&gt; Customizing the sort using the Sort menu</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-creating-groups-in-your-data"><a class="markdownIt-Anchor" href="#1-creating-groups-in-your-data"></a> <strong>1. Creating Groups in Your Data</strong></h2>
<h3 id="groups-in-tableau"><a class="markdownIt-Anchor" href="#groups-in-tableau"></a> &gt;&gt; Groups in Tableau</h3>
<p>Groups in Tableau are represented by a <font color="blue">paper clip</font>: <img style="display: inline; zoom: 10%;" src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520102251965.png" alt="image-20210520102251965"></p>
<ul>
<li>In the [Data] Pane: displayed to the left of the field</li>
<li>In the [tooltip]: represents the <em>Group Members</em> button that is used to create a group.</li>
</ul>
<br>
<h3 id="methods-to-create-groups"><a class="markdownIt-Anchor" href="#methods-to-create-groups"></a> &gt;&gt; Methods to create groups</h3>
<ul>
<li>Create a group based on a field in the Data pane.</li>
<li>Create a group based on labels in the view.</li>
<li>Create a group based on marks in the view.</li>
</ul>
<br>
<h3 id="details-for-each-method"><a class="markdownIt-Anchor" href="#details-for-each-method"></a> &gt;&gt; Details for each method</h3>
<h5 id="method-1-creating-a-group-from-the-data-pane"><a class="markdownIt-Anchor" href="#method-1-creating-a-group-from-the-data-pane"></a> <em>Method 1.</em> Creating a group from the Data pane</h5>
<ol>
<li>
<p>Create a group</p>
<ul>
<li>Field --&gt; right-click / click the arrow --&gt; [Create] &gt; [Group]</li>
</ul>
</li>
<li>
<p>Adding members</p>
<ul>
<li>
<p><font color="blue">Select</font> relative terms <font color="blue">directly</font></p>
</li>
<li>
<p><font color="blue">Use [Find]</font>to find terms <font color="blue">with specific pattern</font></p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520132444788.png" alt="image-20210520132444788" style="zoom:50%;"> 
</li>
<li>
<p><font color="blue">Dragging fields</font> into the existing group</p>
</li>
</ul>
</li>
<li>
<p>Group remaining members as the group [Other]</p>
<ul>
<li>check <font color="blue">[Include ‘Other’]</font></li>
</ul>
</li>
<li>
<p>Editing a group</p>
<ul>
<li><font color="blue">Rename</font> the group</li>
</ul>
</li>
</ol>
<br>
<p><strong>[[실습]]</strong></p>
<blockquote>
<p><em>Create a Group in the Data pane with World Indicators.twbx</em></p>
</blockquote>
<p><strong><font color="darkblue">&lt;Scenario&gt;</font></strong></p>
<p>You want to find out average life expectancy for three countries within the Oceania region, and then compare that with other regions.</p>
<p>You will create a group named Oceania for the  three countries, <strong>Australia</strong>, <strong>New Zealand</strong>, and <strong>Papua New Guinea</strong>, and compare the group with the rest of the countries.</p>
<br>
<p><strong><font color="darkblue">&lt;실현&gt;</font></strong></p>
<ol>
<li>
<p>Create a group on [Country] that includes [Australia], [New Zealand], and [Papua New Guinea], and name it [Oceania]</p>
<ul>
<li>[Country] --&gt; [Create] --&gt; [Group]</li>
<li>Ctrl + select [Australia], [New Zealand], and [Papua New Guinea] and click [Group]</li>
<li>Rename the alias [Oceania]</li>
</ul>
<p>​							<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520130248760-16298788936074.png" alt="image-20210520130248760" style="zoom:50%;">			<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520130831794.png" alt="image-20210520130831794" style="zoom: 67%;"></p>
<br>
</li>
<li>
<p>Group all other countries together as [Other]</p>
<ul>
<li>Check the [Include “Other”] checkbox</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520131328568.png" alt="image-20210520131328568" style="zoom: 50%;">
<br>
</li>
<li>
<p>Name the group field</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520131734622.png" alt="image-20210520131734622" style="zoom:50%;">
<br>
</li>
<li>
<p>Compare the [AVG(Life Expectancy Female)] of Oceania group with others</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520132228954.png" alt="image-20210520132228954" style="zoom:50%;">
</li>
</ol>
<br>
<br>
<h5 id="method-2-creating-a-group-from-within-the-view"><a class="markdownIt-Anchor" href="#method-2-creating-a-group-from-within-the-view"></a> <em>Method 2.</em> Creating a group from within the view</h5>
<ul>
<li>
<p>Creating a group by selecting marks from within the view</p>
<ol>
<li>Click and drag to select the marks</li>
<li>In the tooltip opens, click the paper clip</li>
<li>choose the dimensions to be applied</li>
</ol>
</li>
<li>
<p>Creating a group using labels in the view</p>
<ol>
<li>Hold [Ctrl] to select the marks in the view</li>
<li>Use the dropdown or right-click one of the selected fields, then select the Group (paper clip) icon</li>
<li>choose the dimensions to be applied</li>
</ol>
</li>
</ul>
<br>
<p><strong>[[실습]]</strong></p>
<blockquote>
<p><em>Create a Group in the View with World Indicators.twbx</em></p>
</blockquote>
<br>
<p><strong><font color="darkblue">&lt;Scenario&gt;</font></strong></p>
<p>You want to quickly compare the income of two separate country groups to determine if tourism is similar based on the size in a treemap.</p>
<p>You will create a group from <strong>Spain</strong>, <strong>France</strong>, and <strong>Germany</strong> to compare to tourism in the <strong>United States</strong> within the view.</p>
<br>
<p><strong><font color="darkblue">&lt;실현&gt;</font></strong></p>
<ol>
<li>
<p>Create a group in the treemap that contains [Spain], [France], and [Germany]. Group on [All Dimensions].</p>
<ul>
<li>
<p>drag to select [Spain], [France], and [Germany]</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520135604712.png" alt="image-20210520135604712" style="zoom: 50%;">
<br>
</li>
<li>
<p>In the dialog opened, click the paper clip, then select [All Dimensions]</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520135836155.png" alt="image-20210520135836155" style="zoom:50%;">
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520135919816.png" alt="image-20210520135919816" style="zoom:50%;">
<br>
</li>
</ul>
</li>
<li>
<p>Create a second group from a single mark: [United States]</p>
<ul>
<li>Click [United States] to select it</li>
<li>In the dialog that opens, click the paper clip</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520140146128.png" alt="image-20210520140146128" style="zoom:50%;">
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520140201714.png" alt="image-20210520140201714" style="zoom:50%;">
<br>
</li>
<li>
<p>Compare the size of each group</p>
<ul>
<li>The two groups are roughly the same size</li>
</ul>
</li>
</ol>
<br>
<br>
<h2 id="2-creating-hierarchies-계층-in-your-data"><a class="markdownIt-Anchor" href="#2-creating-hierarchies-계층-in-your-data"></a> <strong>2. Creating Hierarchies (계층) in Your Data</strong></h2>
<h3 id="hierarchies-in-tableau"><a class="markdownIt-Anchor" href="#hierarchies-in-tableau"></a> &gt;&gt;  Hierarchies in Tableau</h3>
<ul>
<li>In Tableau, a hierarchy is an arrangement of data fields in a hierarchical format with an ‘above’ and ‘below’ structure.</li>
<li>Hierarchies are represented by a hierarchy icon: <img style="display: inline; zoom:5%;" src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520142502277.png" alt="image-20210520142502277"></li>
</ul>
<br>
<h3 id="date-hierarchies"><a class="markdownIt-Anchor" href="#date-hierarchies"></a> &gt;&gt; Date hierarchies</h3>
<ul>
<li>dates and times are automatically placed in the dimensions area of the [Data] pane and are identified by the date <img style="display: inline; zoom:10%;" src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520142835197.png" alt="image-20210520142835197"> or date-time <img style="display: inline; zoom:10%;" src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520142901428-16298791452895.png" alt="image-20210520142901428"> icon, and can be drilled up and down as a hierarchy.</li>
<li>Date fields can consist of the following:
<ul>
<li>Year</li>
<li>Quarter</li>
<li>Month</li>
<li>Day</li>
<li>Time</li>
</ul>
</li>
</ul>
<br>
<h3 id="methods-to-create-hierarchies"><a class="markdownIt-Anchor" href="#methods-to-create-hierarchies"></a> &gt;&gt; Methods to create hierarchies</h3>
<p><strong>3 Steps:</strong></p>
<ol>
<li>
<p>Method 1: Field --&gt; right-click --&gt; Hierarchy (계층) --&gt; Create Hierarchy (계층 만들기)</p>
<p>Method 2: In the [Data] Pane, drag one field onto the other field</p>
</li>
<li>
<p>dialog box opened --&gt; name the hierarchy</p>
</li>
<li>
<p>drag other fields into the existing hierarchy</p>
</li>
</ol>
<br>
<br>
<h2 id="3-understanding-filtering-in-tableau"><a class="markdownIt-Anchor" href="#3-understanding-filtering-in-tableau"></a> <strong>3. Understanding Filtering in Tableau</strong></h2>
<h3 id="filter-types-in-tableau"><a class="markdownIt-Anchor" href="#filter-types-in-tableau"></a> &gt;&gt; Filter types in Tableau</h3>
<ul>
<li>
<p><strong>Extract Filters</strong></p>
<ul>
<li>When you connect to data, you can choose to extract it. As part of this process, you can filter out data that isn’t relevant to your analysis.</li>
</ul>
<p>[e.g.] you are querying a data source that has data for the last 20 years, but you only want last 5 years of data.</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520155333200.png" alt="image-20210520155333200" style="zoom: 67%;">
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Data Source Filters</strong></p>
<ul>
<li>Reduce the amount of data being fed into Tableau</li>
<li>Restrict what data the viewer sees  (like filtering sensitive data out)</li>
</ul>
<p>[e.g.] Filter the data of United States</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520160131923.png" alt="image-20210520160131923" style="zoom: 80%;">
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Context Filters</strong></p>
<ul>
<li>All filters in Tableau are computed independently. If you want one filter to be applied before other filters, make it a context filter so it will be processed first.</li>
</ul>
<p>[e.g.] you have two dimension filters, one on Region and another top 10 on products, both filters will apply to the entire data set. If you want to see the top 10 products in each region, set the Region filter as the context filter.</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520160538065.png" alt="image-20210520160538065" style="zoom:67%;">
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Dimension Filters</strong></p>
<ul>
<li>Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude.</li>
</ul>
<p>[e.g.] Show products that have low sales in specific regions.</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520160815384.png" alt="image-20210520160815384" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Measure Filters</strong></p>
<ul>
<li>Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include.</li>
</ul>
<p>[e.g.] Show only products that have sales greater than 10,000.</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520161045931.png" alt="image-20210520161045931" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Date Filters</strong></p>
<ul>
<li>Date filters allow you to filter data by a range of dates, relative dates, or exact dates.</li>
</ul>
<p>[e.g.] Show products that have been ordered starting January 2017.</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520161203700.png" alt="image-20210520161203700" style="zoom:80%;">
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Table Calculation Filters</strong></p>
<ul>
<li>If you want to filter the view without filtering the underlying data, Table Calculations filters are the way to go.</li>
</ul>
<p>[e.g.] Filter data using a table calculation</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520161333305.png" alt="image-20210520161333305" style="zoom:80%;">
</li>
</ul>
<br>
<h3 id="filtering-order-of-operations"><a class="markdownIt-Anchor" href="#filtering-order-of-operations"></a> &gt;&gt; Filtering order of operations</h3>
<p>When you use multiple filters on your data, the filters get applied in a very specific order, called the order of operations.</p>
<p>Tableau executes filters in the following order:</p>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210520161944956.png" alt="image-20210520161944956" style="zoom:80%;">
<br>
<br>
<h2 id="4-filtering-your-data"><a class="markdownIt-Anchor" href="#4-filtering-your-data"></a> <strong>4. Filtering Your Data</strong></h2>
<h3 id="filtering-on-dimensions"><a class="markdownIt-Anchor" href="#filtering-on-dimensions"></a> &gt;&gt; Filtering on Dimensions</h3>
<p><strong>Methods to create a dimension filter</strong></p>
<ul>
<li>
<p>Filter by including or excluding data points</p>
<ol>
<li>
<p>Drag to select data points in the view</p>
</li>
<li>
<p>On the tooltip that appears,</p>
<p>select [Keep Only] to include the selected marks</p>
<p>select [Exclude] to exclude the selected marks</p>
</li>
<li>
<p>Tableau add the filter to the Filters shelf automatically</p>
</li>
</ol>
</li>
<li>
<p>Filter by dragging dimensions to the Filters shelf</p>
<ol>
<li>Drag the dimension field from the [Data] pane to the [Filters] shelf</li>
</ol>
</li>
</ul>
<br>
<h3 id="filtering-on-measures"><a class="markdownIt-Anchor" href="#filtering-on-measures"></a> &gt;&gt; Filtering on Measures</h3>
<p><strong>Method to create a measure filter</strong></p>
<ol>
<li>Drag a measure to the [Filters] shelf --&gt; [Filter Field] dialog box appears</li>
<li>Select an aggregation</li>
<li>Select a filter type
<ul>
<li>Range of Values</li>
<li>At Least</li>
<li>At Most</li>
<li>Special: Filter on Null values</li>
</ul>
</li>
</ol>
<br>
<h3 id="filtering-on-dates"><a class="markdownIt-Anchor" href="#filtering-on-dates"></a> &gt;&gt; Filtering on Dates</h3>
<p><strong>Method to create a date filter</strong></p>
<ol>
<li>Drag a date field to the [Filters] shelf --&gt; [Filter Field] dialog box appears</li>
<li>Select to filter by <font color="blue">[Discrete date parts]</font> or <font color="viridis">[Continuous date values]</font>
<ul>
<li><em>Discrete date parts:</em> years, quarters, months etc.</li>
<li><em>Continuous date values:</em>
<ul>
<li>Relative dates (相对日期)  [可以设置“基准日期”（Anchor）：默认为“today” ]</li>
<li>Range of dates</li>
<li>Starting date</li>
<li>Ending date</li>
<li>Special: filter on Null value</li>
</ul>
</li>
</ul>
</li>
</ol>
<br>
<br>
<h2 id="5-sorting-your-data"><a class="markdownIt-Anchor" href="#5-sorting-your-data"></a> <strong>5. Sorting Your Data</strong></h2>
<h3 id="two-sorting-methods"><a class="markdownIt-Anchor" href="#two-sorting-methods"></a> &gt;&gt; Two sorting methods:</h3>
<ul>
<li>Computed sorts
<ul>
<li>organize the data by applying rules</li>
<li>update dynamically</li>
</ul>
</li>
<li>manual sorts
<ul>
<li>a specific order that you want your data to be in</li>
<li>maintain the order that you put things in</li>
</ul>
</li>
</ul>
<br>
<h3 id="customizing-the-sort-using-the-sort-menu"><a class="markdownIt-Anchor" href="#customizing-the-sort-using-the-sort-menu"></a> &gt;&gt; Customizing the sort using the Sort menu</h3>
<ul>
<li>
<p><strong>정렬 기준 (Sort By):</strong></p>
<ul>
<li>Data source order</li>
<li>Alphabetic</li>
<li>Field (비중첩)</li>
<li>Manual</li>
<li>Nested (중첩)</li>
</ul>
<br>
</li>
<li>
<p><strong>정렬 수단 (Sort from):</strong></p>
<ul>
<li>axis            (축)                    — 중첩</li>
<li>header       (머리글)</li>
<li>field label  (필드 레이블)   — 비중첩</li>
</ul>
<img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210521132025109.png" alt="image-20210521132025109" style="zoom: 67%;">
<blockquote>
<p>모든 경우에:</p>
<ul>
<li>1 click:    sorts descending   [한 번 클릭: 내림차순]</li>
<li>2 clicks:  sorts ascending      [두 번 클릭: 오름차순]</li>
<li>3 clicks:  clear the sort          [세 번 클릭: 정렬 해제]</li>
</ul>
</blockquote>
</li>
</ul>
<br>
<ul>
<li>
<p><strong>중첩 (Nested) VS 비중첩</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">중첩</th>
<th style="text-align:center">비중첩</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210521133253249.png" alt="image-20210521133253249" style="zoom:80%;"></td>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-3-Organize-Data-and-Create-Filters/image-20210521133326272.png" alt="image-20210521133326272" style="zoom:80%;"></td>
</tr>
<tr>
<td style="text-align:center">* 각 Pane을 독립적으로 고려함 <br>* Pane별로 행을 정렬</td>
<td style="text-align:center">* 전체 Table 기준으로 집계 후 차원값을 정렬 <br>* 모든 Pane에서 같은 값 순서를 적용</td>
</tr>
<tr>
<td style="text-align:center">Sort by Nested;<br>Sort form Axis</td>
<td style="text-align:center">Sort by Field;<br>Sort form Field Label</td>
</tr>
</tbody>
</table>
<br>
</li>
<li>
<p><strong>Disable the sort</strong></p>
<p>Menu bar --&gt; [Worksheet] --&gt; uncheck [Show Sort Controls]</p>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (9) Using Quick Table Calculations to Analyze Data</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-9-Using-Quick-Table-Calculations-to-Analyze-Data/</url>
    <content><![CDATA[<h1 id="using-quick-table-calculations-to-analyze-data"><a class="markdownIt-Anchor" href="#using-quick-table-calculations-to-analyze-data"></a> Using Quick Table Calculations to Analyze Data</h1>
<br>
<h4 id="concept-table-calculations"><a class="markdownIt-Anchor" href="#concept-table-calculations"></a> &gt;&gt; Concept: Table calculations</h4>
<p>Table calculations are</p>
<ul>
<li>computations that are applied to the values in the data table for the view</li>
<li>and calculations available often dependent on the table structure itself</li>
</ul>
<br>
<h4 id="quick-table-calculations"><a class="markdownIt-Anchor" href="#quick-table-calculations"></a> &gt;&gt; Quick Table Calculations</h4>
<p>Quick Table Calculations:</p>
<ul>
<li>Running Total	         (汇总)</li>
<li>Difference                   (差异)</li>
<li>Percent Difference    (百分比差异)</li>
<li>Percent of Total         (合计百分比)</li>
<li>Rank                             (排序)</li>
<li>Percentile                    (百分位)</li>
<li>Moving Average         (移动平均)</li>
<li>YTD Total : <em>same as Running Total, but is running along the date dimension and restarting for event Year part of the date dimension</em>     (YTD总计)</li>
<li>Compound Growth Rate (통합 성장률 / 复合增长率)</li>
<li>Year over Year Growth  (전년대비 성장률 / 年度同比增长)</li>
<li>YTD Growth : <em>compares the YTD Total of current year with YTD Total for the previous year</em>  (YTD增长)</li>
</ul>
<blockquote>
<p><a href="https://public.tableau.com/views/TableCalculations-RunningTotalvsYTDTotalvsYTDGrowth/TableCalculations-YTDvsRunningTotal?%3Aembed=y&amp;%3AshowVizHome=no&amp;%3Adisplay_count=y&amp;%3Adisplay_static_image=y&amp;%3AbootstrapWhenNotified=true" target="_blank" rel="noopener">Running Total vs YTD Total vs YTD Growth</a></p>
<p><font color="red">YTD (Year to Date): The period from the beginning of a fiscal year to the end of a reporting period. (올해 초부터 현재까지)</font></p>
</blockquote>
<br>
<h4 id="calculation-scope-and-direction"><a class="markdownIt-Anchor" href="#calculation-scope-and-direction"></a> &gt;&gt; Calculation Scope and Direction</h4>
<p><strong>Scope</strong>: Table / Pane / Cell    (<em>Scope: the segment of the table that the calculation is applied to</em>)</p>
<p>​			<img src="/images/S-Tableau-Fundamentals-9-Using-Quick-Table-Calculations-to-Analyze-Data/image-20210531090118121-16553668327231.png" alt="image-20210531090118121" style="zoom:50%;"></p>
<br>
<p><strong>Direction:</strong> across / down / across then down / down then across</p>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (11) Filtering and LOD Expression</title>
    <url>/2022/06/27/S-Tableau-Intermediate-11-Filtering-and-LOD-Expression/</url>
    <content><![CDATA[<h1 id="filtering-and-lod-expression"><a class="markdownIt-Anchor" href="#filtering-and-lod-expression"></a> Filtering and LOD Expression</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-level-of-details-lod-expression"><strong>1. Level of Details (LOD) Expression</strong></a></li>
<li><a href="#2-using-lod-expression-with-filters"><strong>2. Using LOD Expression with Filters</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-level-of-details-lod-expression"><a class="markdownIt-Anchor" href="#1-level-of-details-lod-expression"></a> <strong>1. Level of Details (LOD) Expression</strong></h2>
<p>우리가 [Measure]필드를 View에 추가했을 때 Tableau는 자동으로 [Measure]의 집계값을 계산하여 보여줍니다.<br>
집계의 기준이 기본적으로 [View에 있는 최하위 세부 수준]으로 되어 있습니다.</p>
<p>하지만 만약에 우리가 다른 기준으로 집계하고 싶다면 어떻게 해야할까요?<br>
이런 경우에 LoD 계산식을 이용하면 됩니다!</p>
<br>
<p><strong>LoD 계산식 :</strong> View에 있는 최하위 세부수준(LoD)과 <strong><font color="darkblue">다른</font></strong> 세부수준 (Grouping 기준)으로 집계하고 싶은 경우에 사용</p>
<ol>
<li>
<p><strong>FIXED():</strong> View에 있는 세부수준을 **<font color="darkblue">무시</font>**하고 원하는 그룹핑 기준 (세부수준)을 **<font color="darkblue">직접 정하</font>**고 싶을 때</p>
</li>
<li>
<p><strong>INCLUDE():</strong> View에 없는 세부수준을 **<font color="darkblue">추가</font>**하고 싶을 때</p>
</li>
<li>
<p><strong>EXCLUDE():</strong> View에 있는 일부 세부수준을 **<font color="darkblue">제거</font>**하고 싶을 때</p>
</li>
</ol>
<br>
<p>​															<strong>각 LoD 계산식을 적용했을 때 실제 집계 시 사용되는 집계 기준</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">View에 있는 최하위 세부수준 보다</th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>A가 더 상위수준일 때</strong></td>
<td style="text-align:center"><strong>A가 더 하위수준일 때</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>FIXED(A)</strong></td>
<td style="text-align:center">A</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td style="text-align:center"><strong>INCLUDE(A)</strong></td>
<td style="text-align:center">View에 있는 최하위 세부수준</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td style="text-align:center"><strong>EXCLUDE(A)</strong></td>
<td style="text-align:center">A를 제외한 View에 있는 최하위 세부수준</td>
<td style="text-align:center">해당없음</td>
</tr>
</tbody>
</table>
<br>
<br>
<h2 id="2-using-lod-expression-with-filters"><a class="markdownIt-Anchor" href="#2-using-lod-expression-with-filters"></a> <strong>2. Using LOD Expression with Filters</strong></h2>
<p><strong>Order of Filters：</strong></p>
<img src="/images/S-Tableau-Intermediate-11-Filtering-and-LOD-Expression/image-20210610165738698.png" alt="image-20210610165738698" style="zoom: 50%;">
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (10) Controlling Table Calculations</title>
    <url>/2022/06/27/S-Tableau-Intermediate-10-Controlling-Table-Calculations/</url>
    <content><![CDATA[<h1 id="controlling-table-calculations"><a class="markdownIt-Anchor" href="#controlling-table-calculations"></a> Controlling Table Calculations</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-scope-and-direction"><strong>1. Scope and Direction</strong></a></li>
<li><a href="#2-table-calculations-with-null-values"><strong>2. Table Calculations with Null Values</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-scope-and-direction"><a class="markdownIt-Anchor" href="#1-scope-and-direction"></a> <strong>1. Scope and Direction</strong></h2>
<p>Table calculations are performed with a scope and direction. The scope and direction make the results relative to other data in the view.</p>
<br>
<p><strong>Options for scope:</strong></p>
<ul>
<li>
<p>Table</p>
</li>
<li>
<p>Pane: <em>Panes are created when multiple dimensions are used in the view</em></p>
</li>
<li>
<p>Cell</p>
<img src="/images/S-Tableau-Intermediate-10-Controlling-Table-Calculations/image-20210609161229115.png" alt="image-20210609161229115" style="zoom: 40%;"> 
</li>
</ul>
<br>
<p><strong>Options for direction:</strong></p>
<ul>
<li>across</li>
<li>down</li>
<li>across then down (only available in specific contexts)</li>
<li>down then across (only available in specific contexts)</li>
</ul>
<p>​                            <strong>across then down</strong>                                                                                <strong>down then across</strong></p>
<p>​	<img src="/images/S-Tableau-Intermediate-10-Controlling-Table-Calculations/image-20210609162057744.png" alt="image-20210609162057744" style="zoom: 60%;">				<img src="/images/S-Tableau-Intermediate-10-Controlling-Table-Calculations/image-20210609162020611-16563144312531.png" alt="image-20210609162020611" style="zoom: 60%;"></p>
<br>
<br>
<h2 id="2-table-calculations-with-null-values"><a class="markdownIt-Anchor" href="#2-table-calculations-with-null-values"></a> <strong>2. Table Calculations with Null Values</strong></h2>
<p>If there are null values in the table calculations:</p>
<ul>
<li>In some cases, like [Running Total], the null value gets skipped over. Regardless of the scope and direction I pick, the nulls are just treated like zeros, which is fine.</li>
<li>But in some cases like [Difference From], there will be a bunch of blank values at the beginning since there is no previous value to compare to</li>
</ul>
<br>
<p>In the second situation, we’ll get an indicator (<img src="/images/S-Tableau-Intermediate-10-Controlling-Table-Calculations/image-20210609163417803.png" alt="image-20210609163417803" style="zoom:67%;">) that there are blank values.</p>
<p>If clicking the indicator about the nulls,</p>
<ul>
<li>
<p>using [Filter Data] will show only non-null values on the table calculation</p>
</li>
<li>
<p>using [Show data at default position] will make the null values shown as zeros</p>
<img src="/images/S-Tableau-Intermediate-10-Controlling-Table-Calculations/image-20210609163533924.png" alt="image-20210609163533924" style="zoom:67%;"> 
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (16) Using Advanced Filter Actions</title>
    <url>/2022/06/27/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/</url>
    <content><![CDATA[<h1 id="using-advanced-filter-actions"><a class="markdownIt-Anchor" href="#using-advanced-filter-actions"></a> Using Advanced Filter Actions</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-filter-data-across-different-data-sources"><strong>1. Filter Data Across Different Data Sources</strong></a></li>
<li><a href="#2-create-a-link-for-navigating-to-a-different-dashboard"><strong>2. Create a Link for Navigating to a different dashboard</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-filter-data-across-different-data-sources"><a class="markdownIt-Anchor" href="#1-filter-data-across-different-data-sources"></a> <strong>1. Filter Data Across Different Data Sources</strong></h2>
<p><strong>[Mission] Filter data by regions</strong></p>
<ul>
<li>
<p>Create space for the region filter:</p>
<ul>
<li>
<p>Drag [Horizontal] to the dashboard view</p>
<br>
</li>
</ul>
</li>
<li>
<p>Create a view that can act as the filter</p>
<ul>
<li>
<p>Open a new worksheet, named as “Region Selection”</p>
</li>
<li>
<p>Drag [Region] to [Columns] &amp; [Text]</p>
</li>
<li>
<p>Hide the header of the Region</p>
<img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210614155749738.png" alt="image-20210614155749738" style="zoom: 50%;">
<br> 
</li>
</ul>
</li>
<li>
<p>Put this worksheet (Region filter) in the empty space we created on the dashboard</p>
<img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210614160119054.png" alt="image-20210614160119054" style="zoom:67%;"> 
<br>
</li>
<li>
<p>Use this view as a filter</p>
<img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210614160217191.png" alt="image-20210614160217191" style="zoom:80%;"> 
<ul>
<li>
<p>Now, only superstore data are filtered when making a selection on the custom filter, but not the coffee chain data.</p>
<br>
</li>
</ul>
</li>
<li>
<p>Using a filter action to set the target worksheets</p>
<ul>
<li>
<p>[Dashboard] menu  --&gt; [Actions]  --&gt; [Add Action] – [Filter]</p>
<img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210614160854722.png" alt="image-20210614160854722" style="zoom:67%;"> 
</li>
<li>
<p>Edit the filter action:</p>
<p>- Set the source sheet and target sheets</p>
<p>- Run action on: [Select]</p>
  <img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210720174528043.png" alt="image-20210720174528043" style="zoom: 50%;"> 
  <img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210720174605575.png" alt="image-20210720174605575" style="zoom:50%;"> 
<p>- Target Filters: help you filter on specific fields (mapping the common field with different names)</p>
<ul>
<li>
<p>[Selected Fields]  --&gt; [Add Filter]</p>
<p><img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210720174723959-165631039174110.png" alt="image-20210720174723959" style="zoom:50%;">   <img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210614161509780.png" alt="image-20210614161509780" style="zoom: 67%;"></p>
<br>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<br>
<h2 id="2-create-a-link-for-navigating-to-a-different-dashboard"><a class="markdownIt-Anchor" href="#2-create-a-link-for-navigating-to-a-different-dashboard"></a> <strong>2. Create a Link for Navigating to a different dashboard</strong></h2>
<ul>
<li>
<p>Create a view that can act as the link, named as “Navigate”</p>
</li>
<li>
<p>Create a calculated field “Navigate” :</p>
<p><code>"Click here to view the Profit by Location dashboard."</code></p>
</li>
<li>
<p>Add this calculation to the view  --&gt;</p>
<p>Change the mark type to a [Shape]  --&gt;</p>
<p>Make the shape an [arrow]   --&gt;</p>
<p>Make the cell size bigger: [Format] menu  /  Ctrl + Shift + B  --&gt;</p>
<p>Hide field label</p>
</li>
<li>
<p>Add the navigation link to the Profit Analysis dashboard</p>
</li>
<li>
<p>Create a filter action</p>
<ul>
<li>
<p>[Dashboard]  --&gt; [Actions]  --&gt; [Add Action]  --&gt; [Filter]</p>
</li>
<li>
<p>Edit the filter action</p>
<br>
</li>
</ul>
<img src="/images/S-Tableau-Intermediate-16-Using-Advanced-Filter-Actions/image-20210614162941336.png" alt="image-20210614162941336" style="zoom:67%;">
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (1) Working with a Data Extract</title>
    <url>/2022/06/27/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/</url>
    <content><![CDATA[<h1 id="working-with-a-data-extract"><a class="markdownIt-Anchor" href="#working-with-a-data-extract"></a> Working with a Data Extract</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-extract-data"><strong>1. Extract Data</strong></a>
<ul>
<li><a href="#concept">&gt;&gt; Concept</a></li>
<li><a href="#advantages">&gt;&gt; Advantages</a></li>
<li><a href="#limitations">&gt;&gt; Limitations</a></li>
</ul>
</li>
<li><a href="#2-create-and-edit-extracts"><strong>2. Create and edit Extracts</strong></a>
<ul>
<li><a href="#two-places-to-create-extracts">&gt;&gt; Two places to create extracts</a></li>
<li><a href="#two-places-to-edit-extracts">&gt;&gt; Two places to edit Extracts</a></li>
<li><a href="#update-data">&gt;&gt; Update Data</a></li>
<li><a href="#hide-unhide-fields">&gt;&gt; Hide / Unhide fields</a></li>
</ul>
</li>
<li><a href="#3-refresh-extracts"><strong>3. Refresh Extracts</strong></a>
<ul>
<li><a href="#two-types">&gt;&gt; Two Types:</a></li>
<li><a href="#full-refresh-default">&gt;&gt; Full Refresh (Default)</a></li>
<li><a href="#update-the-data-extract">&gt;&gt; Update the data extract</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-extract-data"><a class="markdownIt-Anchor" href="#1-extract-data"></a> <strong>1. Extract Data</strong></h2>
<h3 id="concept"><a class="markdownIt-Anchor" href="#concept"></a> &gt;&gt; Concept</h3>
<p>An extract is a copy of the data that brought into the Tableau data engine.</p>
<br>
<h3 id="advantages"><a class="markdownIt-Anchor" href="#advantages"></a> &gt;&gt; Advantages</h3>
<ol>
<li>Use the Tableau data engine to run queries rather than send a query to the data source
<ul>
<li><strong><font color="green">Reduce the time</font></strong> it takes for queries to run</li>
</ul>
</li>
<li>Allow you to keep a copy of the data:
<ul>
<li><strong><font color="green">Can be accessed offline</font></strong></li>
</ul>
</li>
<li>May include only a <strong><font color="green">subset of the data</font></strong></li>
</ol>
<br>
<h3 id="limitations"><a class="markdownIt-Anchor" href="#limitations"></a> &gt;&gt; Limitations</h3>
<ol>
<li>Data doesn’t update automatically
<ul>
<li>Need to refresh the Extract</li>
<li><em>A Live connection queries the data from the database and the data are updated every time you open your workbook</em></li>
</ul>
</li>
<li>Your extracted data source may not include all the fields required for the views
<ul>
<li>Because extracts may include only a subset of the data</li>
</ul>
</li>
</ol>
<br>
<br>
<h2 id="2-create-and-edit-extracts"><a class="markdownIt-Anchor" href="#2-create-and-edit-extracts"></a> <strong>2. Create and edit Extracts</strong></h2>
<h3 id="two-places-to-create-extracts"><a class="markdownIt-Anchor" href="#two-places-to-create-extracts"></a> &gt;&gt; Two places to create extracts</h3>
<ul>
<li>
<p><strong><font color="darkblue">From the Data Source page</font></strong></p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602152449487.png" alt="image-20210602152449487" style="zoom:67%;">
<br> 
</li>
<li>
<p><strong><font color="darkblue">On the worksheet</font></strong></p>
<p>- [Data] Pane --&gt; right-click the data source --&gt; [Use Extract]</p>
<p>- Switch between a live or extracted data connection: check / uncheck [Use Extract]</p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602152258117.png" alt="image-20210602152258117" style="zoom:50%;"> 
<p>​									<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602152950020.png" alt="image-20210602152950020" style="zoom: 50%;"></p>
</li>
</ul>
<br>
<h3 id="two-places-to-edit-extracts"><a class="markdownIt-Anchor" href="#two-places-to-edit-extracts"></a> &gt;&gt; Two places to edit Extracts</h3>
<ul>
<li>
<p><strong><font color="darkblue">From the data source page</font></strong></p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602161938019.png" alt="image-20210602161938019" style="zoom:80%;">
<br> 
</li>
<li>
<p><strong><font color="darkblue">On the worksheet</font></strong></p>
<p>- [Data] Pane --&gt; right-click the data source --&gt; [Extract Data]</p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602154111980.png" alt="image-20210602154111980" style="zoom:67%;"> 
<br>
<p><strong><font color="darkblue">[Edit extracts from the Extract Data dialog box]</font></strong></p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602152648443.png" alt="image-20210602152648443" style="zoom:67%;"> 
</li>
</ul>
<br>
<h3 id="update-data"><a class="markdownIt-Anchor" href="#update-data"></a> &gt;&gt; Update Data</h3>
<ul>
<li>
<p>[Data] Pane --&gt; right-click the data source --&gt; [Extract] --&gt; [Refresh]</p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602162736858.png" alt="image-20210602162736858" style="zoom: 67%;"> 
<br>
</li>
</ul>
<h3 id="hide-unhide-fields"><a class="markdownIt-Anchor" href="#hide-unhide-fields"></a> &gt;&gt; Hide / Unhide fields</h3>
<ul>
<li>
<p><strong><font color="darkblue">Hide unused fields</font></strong></p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602164034539.png" alt="image-20210602164034539" style="zoom:67%;"> 
<br>
</li>
<li>
<p><strong><font color="darkblue">Unhide fields</font></strong></p>
<ul>
<li>
<p>[Data] Pane --&gt; right-click --&gt; [Show Hidden Fields]</p>
<p><img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602164326135.png" alt="image-20210602164326135" style="zoom:67%;"> 		<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602164355176-16563148778111.png" alt="image-20210602164355176" style="zoom:67%;"></p>
</li>
<li>
<p>Field to show --&gt; right-click --&gt; check [Unhide]</p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602164533673.png" alt="image-20210602164533673" style="zoom:67%;"> 
</li>
</ul>
</li>
</ul>
<br>
<br>
<h2 id="3-refresh-extracts"><a class="markdownIt-Anchor" href="#3-refresh-extracts"></a> <strong>3. Refresh Extracts</strong></h2>
<blockquote>
<p><a href="https://help.tableau.com/current/pro/desktop/en-us/extracting_refresh.htm" target="_blank" rel="noopener">[Tableau Help] – Refresh Extracts</a>  (<a href="https://help.tableau.com/current/pro/desktop/zh-cn/extracting_refresh.htm" target="_blank" rel="noopener">中： 刷新数据提取</a> / <a href="https://help.tableau.com/current/pro/desktop/ko-kr/extracting_refresh.htm" target="_blank" rel="noopener">한: 추출 새로 고침</a>)</p>
</blockquote>
<h3 id="two-types"><a class="markdownIt-Anchor" href="#two-types"></a> &gt;&gt; Two Types:</h3>
<ul>
<li><strong><font color="darkblue">Full extract refresh</font></strong> (default) [完全刷新]
<ul>
<li>all of the rows are replaced with the data in the original data source</li>
<li>[good] ensures that you have an exact copy of what is in the original data</li>
<li>[bad]   can sometimes take a long time and be expensive on the database</li>
</ul>
</li>
<li><strong><font color="darkblue">Incremental extract refresh</font></strong> [增量刷新]
<ul>
<li>configure a refresh to add only the rows that are new since the previous time you extracted the data</li>
<li><strong>Note:</strong> If the data structure of the source data changes (for example, a new column is added), you will need to do a full extract refresh before you can start doing incremental refreshes again.</li>
</ul>
</li>
</ul>
<br>
<h3 id="full-refresh-default"><a class="markdownIt-Anchor" href="#full-refresh-default"></a> &gt;&gt; Full Refresh (Default)</h3>
<ul>
<li>
<p>[Data] Pane --&gt; right-click the data source --&gt; [Extract] --&gt; [Refresh]</p>
<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602162736858.png" alt="image-20210602162736858" style="zoom: 67%;"> 
</li>
</ul>
<br>
<h3 id="update-the-data-extract"><a class="markdownIt-Anchor" href="#update-the-data-extract"></a> &gt;&gt; Update the data extract</h3>
<p>Overwrite the existing extract by creating a new extract after the data extract edit (e.g. unhide fields)</p>
<ul>
<li>
<p>[Data] Pane --&gt; right-click --&gt; [Extract Data]</p>
</li>
<li>
<p>[Number of Rows] --&gt; check [All rows] --&gt; check [Incremental refresh]</p>
</li>
<li>
<p>Click [Extract]</p>
<p><img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602165123365-16563149058183.png" alt="image-20210602165123365" style="zoom:60%;">		<img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210602165055997-16563149236555.png" alt="image-20210602165055997" style="zoom:60%;"> <img src="/images/S-Tableau-Intermediate-1-Working-with-a-Data-Extract/image-20210603164635661.png" alt="image-20210603164635661" style="zoom: 67%;"></p>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Fundamentals (8) Using Calculations</title>
    <url>/2022/06/16/S-Tableau-Fundamentals-8-Using-Calculations/</url>
    <content><![CDATA[<h1 id="using-calculations"><a class="markdownIt-Anchor" href="#using-calculations"></a> Using Calculations</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-working-with-strings-and-type-conversion-functions"><strong>1. Working with Strings and Type Conversion Functions</strong></a>
<ul>
<li><a href="#concatenate-string-fields">Concatenate string fields</a></li>
</ul>
</li>
<li><a href="#2-working-with-dates"><strong>2. Working with Dates</strong></a>
<ul>
<li><a href="#using-date-specific-calculations">Using Date-specific Calculations</a></li>
</ul>
</li>
<li><a href="#3-working-with-aggregations"><strong>3. Working with Aggregations</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-working-with-strings-and-type-conversion-functions"><a class="markdownIt-Anchor" href="#1-working-with-strings-and-type-conversion-functions"></a> <strong>1. Working with Strings and Type Conversion Functions</strong></h2>
<h3 id="concatenate-string-fields"><a class="markdownIt-Anchor" href="#concatenate-string-fields"></a> Concatenate string fields</h3>
<p>To concatenate strings means to add them together</p>
<ul>
<li>
<p>Use “+” operator to connect strings</p>
<img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528101257676-16553666285341.png" alt="image-20210528101257676" style="zoom:80%;"> 
<br>
</li>
<li>
<p>For fields with other data types, use type conversion function “STR()” to change them into strings</p>
<img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528102740095-16553666285352.png" alt="image-20210528102740095" style="zoom:80%;"> 
</li>
</ul>
 <br>
<br>
<h2 id="2-working-with-dates"><a class="markdownIt-Anchor" href="#2-working-with-dates"></a> <strong>2. Working with Dates</strong></h2>
<h3 id="using-date-specific-calculations"><a class="markdownIt-Anchor" href="#using-date-specific-calculations"></a> Using Date-specific Calculations</h3>
<blockquote>
<p><a href="https://help.tableau.com/current/pro/desktop/en-us/functions_functions_date.htm" target="_blank" rel="noopener">[Tableau Help] – Date Functions</a></p>
</blockquote>
<p><strong>[Example - DATEDIFF]</strong></p>
<p>DATEDIFF: Returns the difference between two dates. The difference is expressed in units of date_part</p>
<img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528104621973-16553666285353.png" alt="image-20210528104621973" style="zoom:80%;">
<br>
<br>
<h2 id="3-working-with-aggregations"><a class="markdownIt-Anchor" href="#3-working-with-aggregations"></a> <strong>3. Working with Aggregations</strong></h2>
<p>When dragging [measure] fields into the view, Tableau automatically aggregates [measure] to the lowest level of detail in the view.</p>
<br>
<table>
<thead>
<tr>
<th style="text-align:center">Calculated Field</th>
<th style="text-align:center">Bring into the view</th>
<th style="text-align:center">Order of Operations</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528123951612-16553666285355.png" alt="image-20210528123951612" style="zoom:30%;"></td>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528124107136-16553666285354.png" alt="image-20210528124107136" style="zoom:40%;"></td>
<td style="text-align:center">1. calculate the ratio for each row<br>2. sum the results of those ratios</td>
</tr>
<tr>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528124605478-16553666285356.png" alt="image-20210528124605478" style="zoom:30%;"></td>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528124624680-16553666285357.png" alt="image-20210528124624680" style="zoom:40%;"></td>
<td style="text-align:center">1. sum the Profit values and Sales values<br>2. divide two totals and calculate the ratio</td>
</tr>
</tbody>
</table>
<p>* When you pre-define aggregation in a calculated field, Tableau won’t perform further aggregation when you bring the field into the view. Instead, Tableau adds an “AGG” at the start of the field to indicate that the aggregation was pre-defined in the calculation.</p>
<br>
<p><strong>[calculation without aggregation]  VS  [calculation including aggregation]</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">calculation without aggregation</th>
<th style="text-align:center">calculation including aggregation</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>Example</strong></td>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528123951612-16553666285355.png" alt="image-20210528123951612" style="zoom:30%;"></td>
<td style="text-align:center"><img src="/images/S-Tableau-Fundamentals-8-Using-Calculations/image-20210528124605478-16553666285356.png" alt="image-20210528124605478" style="zoom:30%;"></td>
</tr>
<tr>
<td style="text-align:center"><strong>Level of Detail</strong></td>
<td style="text-align:center">1. first performed at the row-level detail<br>2. then aggregated and brought into the view</td>
<td style="text-align:center">the result will be at the level of detail in the view</td>
</tr>
<tr>
<td style="text-align:center"><strong>Brought into <br>the view</strong></td>
<td style="text-align:center">perform aggregation automatically</td>
<td style="text-align:center">further aggregation can’t be performed</td>
</tr>
</tbody>
</table>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 2. Fundamentals</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (13) Advanced Mapping</title>
    <url>/2022/06/27/S-Tableau-Intermediate-13-Advanced-Mapping/</url>
    <content><![CDATA[<h1 id="advanced-mapping"><a class="markdownIt-Anchor" href="#advanced-mapping"></a> Advanced Mapping</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-modifying-locations"><strong>1. Modifying Locations</strong></a>
<ul>
<li><a href="#edit-errors-in-geocode-data">&gt;&gt; Edit errors in geocode data</a></li>
<li><a href="#assign-locations-to-data">&gt;&gt; Assign locations to data</a></li>
</ul>
</li>
<li><a href="#2-customizing-geocodes-for-addresses"><strong>2. Customizing Geocodes for Addresses</strong></a></li>
<li><a href="#3-using-a-background-image"><strong>3. Using a Background Image</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-modifying-locations"><a class="markdownIt-Anchor" href="#1-modifying-locations"></a> <strong>1. Modifying Locations</strong></h2>
<h3 id="edit-errors-in-geocode-data"><a class="markdownIt-Anchor" href="#edit-errors-in-geocode-data"></a> &gt;&gt; Edit errors in geocode data</h3>
<p><strong>[Problem] Not all the counties are shown in the map</strong></p>
<ul>
<li>
<p><font color="red">Error: [Ambiguous]</font> : same counties in other states have the same names</p>
</li>
<li>
<p><font color="red">Error: [Unrecognized]</font> : typos (spelling errors)</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611142730705.png" alt="image-20210611142730705" style="zoom: 50%;"> 
</li>
</ul>
<br>
<p><strong>[Fix the problems]</strong></p>
<ul>
<li>
<p><strong>Fix the ambiguous errors</strong></p>
<ul>
<li>[Map] menu --&gt; [Edit Locations]</li>
</ul>
<p>​				<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611133106539.png" alt="image-20210611133106539"> 	<img class="inline-img" src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611133132793-16563139674001.png" alt="image-20210611133132793" style="zoom:67%;"></p>
<br>
<ul>
<li>Fix the state to Washington</li>
</ul>
<p>​								<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611134212289.png" alt="image-20210611134212289" style="zoom:67%;"></p>
<br>
</li>
<li>
<p><strong>Fix the typos (spelling errors)</strong></p>
<ul>
<li>
<p>[Edit Locations] dialog box</p>
<p>​						<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611135850152.png" alt="image-20210611135850152" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>click the error and type the correct spelling</p>
</li>
</ul>
<p>​								<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611134402850.png" alt="image-20210611134402850" style="zoom: 80%;"></p>
</li>
</ul>
<br>
<br>
<h3 id="assign-locations-to-data"><a class="markdownIt-Anchor" href="#assign-locations-to-data"></a> &gt;&gt; Assign locations to data</h3>
<p><strong>[Mission] Add the location of each region’s corporate headquarters</strong></p>
<br>
<p><strong>[Problem] Values in the field are North, South, East, and West, which Tableau doesn’t have a default location for.</strong></p>
<br>
<p><strong>[Fix the problem]</strong> – Add specific locations</p>
<ul>
<li>
<p>Select the warning box --&gt; Select [Edit Locations]</p>
<p><img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611140725873.png" alt="image-20210611140725873" style="zoom:150%;"> <img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611140820483-16563139806243.png" alt="image-20210611140820483" style="zoom:80%;"></p>
<br>
</li>
<li>
<p>match the data to specific values (match our regions to specific cities)</p>
<p><img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611140903967.png" alt="image-20210611140903967" style="zoom: 67%;">	<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611141123526-16563139852945.png" alt="image-20210611141123526" style="zoom: 67%;"></p>
<br>
</li>
<li>
<p>Problem fixed</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611141330274.png" alt="image-20210611141330274" style="zoom: 67%;"> 
</li>
</ul>
<br>
<br>
<h2 id="2-customizing-geocodes-for-addresses"><a class="markdownIt-Anchor" href="#2-customizing-geocodes-for-addresses"></a> <strong>2. Customizing Geocodes for Addresses</strong></h2>
<p>When there are geographic fields that Tableau doesn’t recognize, you can assign your own Custom Geocodes to map your data.</p>
<br>
<p><strong>[Mission] Map the various tour sites located around the city</strong></p>
<br>
<p><strong>[Problem] Tableau cannot recognize <em>Street Address</em> as geographic data</strong></p>
<p>​																<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611142902652.png" alt="image-20210611142902652" style="zoom:80%;">		<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611142927831-16563139932607.png" alt="image-20210611142927831" style="zoom:80%;"></p>
<br>
<p><strong>[Fix the problem] Custom geocode addresses by matching a <em>street address</em> to a specific <em>latitude and longitude coordinate</em></strong></p>
<ul>
<li>
<p>Generate the latitude and longitude coordinate with address using a batch geocoding website</p>
</li>
<li>
<p>Create an excel spreadsheet (named as “Geocoded addresses”) which contains each Tour Site along with its matching latitude and longitude coordinate</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611145803655.png" alt="image-20210611145803655" style="zoom:67%;">
</li>
<li>
<p>Add the data source “Geocoded addresses”</p>
</li>
<li>
<p><strong><font color="green">[First]</font></strong> Start with the “Geocoded addresses” data source:</p>
<ul>
<li>
<p>[Rows] : Latitude</p>
<p>[Columns] : Longitude</p>
</li>
<li>
<p>[Label] : [Tour Site]</p>
</li>
</ul>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611150700556.png" alt="image-20210611150700556" style="zoom:50%;">
<br>
</li>
<li>
<p><strong><font color="green">[Second]</font></strong> Switch to the original data source:</p>
<ul>
<li>
<p>blend two data sources with the common field [Tour Site]</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611151314021.png" alt="image-20210611151314021" style="zoom:80%;">
</li>
<li>
<p>[Size] : [Number of Records]</p>
</li>
</ul>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611151444104.png" alt="image-20210611151444104" style="zoom:50%;">
<br>
</li>
<li>
<p>Add streets and highways into the map</p>
<ul>
<li>
<p>[Map] menu --&gt; [Map layers]</p>
<p>​			<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611152346166.png" alt="image-20210611152346166" style="zoom:80%;"></p>
</li>
<li>
<p>check the [Streets and Highways]</p>
<p>​			<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611152429750.png" alt="image-20210611152429750" style="zoom:80%;"></p>
</li>
</ul>
</li>
</ul>
<br>
<br>
<h2 id="3-using-a-background-image"><a class="markdownIt-Anchor" href="#3-using-a-background-image"></a> <strong>3. Using a Background Image</strong></h2>
<p>We can use an background image and X/Y coordinates to show locations  on a map</p>
<br>
<p><strong>[Mission] Create an interactive map that shows the location of meeting rooms and their seating capacity in a company’s building</strong></p>
<ul>
<li>Add a background image of an office layout, and</li>
<li>Then plot the meeting room data on top of it</li>
</ul>
<br>
<p><strong>[Data]</strong></p>
<ul>
<li>Room information and X / Y coordinates for each room</li>
<li>Contains no X / Y coordinate values (NULL) for the room Woodland</li>
</ul>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611154316516.png" alt="image-20210611154316516" style="zoom: 50%;">
<br>
<p><strong>[Process]</strong></p>
<ul>
<li>
<p>Add [X] to [Columns]</p>
<p>Add [Y] to [Rows]</p>
<p>remove axis</p>
<br>
</li>
<li>
<p>Add the background image</p>
<ul>
<li>
<p>[Map] menu --&gt; [Background images] --&gt; Data source name</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611155035997.png" alt="image-20210611155035997" style="zoom: 50%;">
</li>
<li>
<p>Add Image</p>
<p>- X Field:  Left – 0, Right – 627 (pixels value)</p>
<p>- Y Field:  Right – 0, Left – 673 (pixels value)</p>
<p><img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611155349612-16563141127019.png" alt="image-20210611155349612" style="zoom:40%;">	<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611155531723.png" alt="image-20210611155531723" style="zoom:40%;"></p>
</li>
</ul>
<br>
</li>
<li>
<p>Drag [Room Name] to [Detail]</p>
<p>Drag [Room Capacity] to [Size]</p>
<p>Set [Tooltip]</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611155930497.png" alt="image-20210611155930497" style="zoom: 67%;">
</li>
<li>
<p>Deal with the NULL data</p>
<ul>
<li>
<p>Right-click anywhere on the view --&gt; [Annotate] --&gt; [Point]</p>
<p>​	<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611160129997.png" alt="image-20210611160129997" style="zoom: 50%;">	<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611160210010-165631413185611.png" alt="image-20210611160210010" style="zoom:40%;"></p>
</li>
<li>
<p>Drag the annotation to the location of Room Woodland</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611160451072.png" alt="image-20210611160451072" style="zoom:50%;">
<br>
</li>
<li>
<p>Update the room information file with Room Woodland’s X / Y coordinates</p>
</li>
<li>
<p>Refresh the data source connection in Tableau by pressing F5</p>
<img src="/images/S-Tableau-Intermediate-13-Advanced-Mapping/image-20210611160920327.png" alt="image-20210611160920327" style="zoom:50%;">
<br>
</li>
<li>
<p>Delete the annotation (coordinate tool) by selecting it and pressing the Delete key on the keyboard</p>
</li>
</ul>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (12) Using Parameters to Control Data in the View</title>
    <url>/2022/06/27/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/</url>
    <content><![CDATA[<h1 id="using-parameters-to-control-data-in-the-view"><a class="markdownIt-Anchor" href="#using-parameters-to-control-data-in-the-view"></a> Using Parameters to Control Data in the View</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-concept"><strong>1. Concept</strong></a></li>
<li><a href="#2-use-a-parameter-in-a-calculation"><strong>2. Use a Parameter in a Calculation</strong></a>
<ul>
<li><a href="#step-1-create-a-parameter">Step 1. Create a parameter</a></li>
<li><a href="#step-2-use-the-parameter">Step 2. Use the parameter</a></li>
<li><a href="#step-3-show-parameter-control">Step 3. Show parameter control</a></li>
</ul>
</li>
<li><a href="#3-use-a-parameter-with-a-filter"><strong>3. Use a Parameter with a Filter</strong></a>
<ul>
<li><a href="#step-1-add-a-parameter-to-a-filter">Step 1. Add a parameter to a filter</a></li>
<li><a href="#step-2-create-and-save-the-parameter">Step 2. Create and save the parameter</a></li>
<li><a href="#step-3-show-parameter-control-2">Step 3. Show parameter control</a></li>
</ul>
</li>
<li><a href="#4-use-a-parameter-to-swap-measures"><strong>4. Use a Parameter to Swap Measures</strong></a>
<ul>
<li><a href="#step-1-create-a-parameter-2">Step 1. Create a parameter</a></li>
<li><a href="#step-2-use-the-parameter-in-a-calculation">Step 2. Use the parameter in a calculation</a></li>
<li><a href="#step-3-show-parameter-control-3">Step 3. Show parameter control</a></li>
<li><a href="#step-4-apply-a-dynamic-title-with-the-parameter">Step 4. Apply a dynamic title with the parameter</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-concept"><a class="markdownIt-Anchor" href="#1-concept"></a> <strong>1. Concept</strong></h2>
<p>A parameter is a workbook variable that can replace a constant value in a calculation, filter, or reference line. It allows you to customize the view according to your needs.</p>
<p>The parameters are global. This means that the value of the parameter is applied to every sheet where it is used.</p>
<br>
<br>
<h2 id="2-use-a-parameter-in-a-calculation"><a class="markdownIt-Anchor" href="#2-use-a-parameter-in-a-calculation"></a> <strong>2. Use a Parameter in a Calculation</strong></h2>
<h3 id="step-1-create-a-parameter"><a class="markdownIt-Anchor" href="#step-1-create-a-parameter"></a> Step 1. Create a parameter</h3>
<ul>
<li>[Data] pane --&gt; [Create Parameter] --&gt; [Create parameter] dialog box</li>
</ul>
<p>​	   <img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611085437341-16563141659221.png" alt="image-20210611085437341" style="zoom:67%;"> 			<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611091113430.png" alt="image-20210611091113430" style="zoom:67%;"></p>
<br>
<ul>
<li>
<p>Settings:</p>
<p><em><font color="darkblue">[Name]</font></em></p>
<p><em><font color="darkblue">[Data type]</font></em> : Float / Integer / String / Boolean / Date / Date &amp; Time</p>
<p><em><font color="darkblue">[Current value]</font></em> : the first number the parameter will use</p>
<p><em><font color="darkblue">[Display format]</font></em></p>
<p><em><font color="darkblue">[Allowable values]</font></em> : All / List / Range</p>
<br>
</li>
</ul>
<h3 id="step-2-use-the-parameter"><a class="markdownIt-Anchor" href="#step-2-use-the-parameter"></a> Step 2. Use the parameter</h3>
<ul>
<li>
<p>Create a calculated field</p>
<p><img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611090401553-16563142111963.png" alt="image-20210611090401553" style="zoom:67%;">			<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611091146937.png" alt="image-20210611091146937" style="zoom:67%;"></p>
<br>
</li>
</ul>
<h3 id="step-3-show-parameter-control"><a class="markdownIt-Anchor" href="#step-3-show-parameter-control"></a> Step 3. Show parameter control</h3>
<ul>
<li>
<p>Right-click the parameter, and select [Show Parameter Control]</p>
<p><img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611090801657-16563142464645.png" alt="image-20210611090801657" style="zoom:67%;">			<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611090916567.png" alt="image-20210611090916567"></p>
</li>
</ul>
<br>
<br>
<h2 id="3-use-a-parameter-with-a-filter"><a class="markdownIt-Anchor" href="#3-use-a-parameter-with-a-filter"></a> <strong>3. Use a Parameter with a Filter</strong></h2>
<p><strong>[Mission] Make a &lt; Top N Filter&gt; parameter</strong></p>
<h3 id="step-1-add-a-parameter-to-a-filter"><a class="markdownIt-Anchor" href="#step-1-add-a-parameter-to-a-filter"></a> Step 1. Add a parameter to a filter</h3>
<ul>
<li>
<p>a) Drag the dimension field to [Rows] / [Columns]  --&gt; click [Filter and then add]  --&gt; open the Filter dialog box</p>
<p>b) Drag the dimension field to [Filter] --&gt; open the Filter dialog box</p>
<p>​				<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611091755122-16563142644887.png" alt="image-20210611091755122" style="zoom:67%;">			<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611091620060.png" alt="image-20210611091620060" style="zoom:67%;"></p>
</li>
</ul>
<br>
<h3 id="step-2-create-and-save-the-parameter"><a class="markdownIt-Anchor" href="#step-2-create-and-save-the-parameter"></a> Step 2. Create and save the parameter</h3>
<ul>
<li>
<p>[Top]  --&gt; [By field]  --&gt; [Create a new parameter]  --&gt; Settings --&gt;  [OK]</p>
<p><img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611092143936-16563142848899.png" alt="image-20210611092143936" style="zoom:50%;">		<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611092346025-165631429595711.png" alt="image-20210611092346025" style="zoom: 50%;">		<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611092524428.png" alt="image-20210611092524428" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>Both the filter and parameter are created</p>
<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611092939904.png" alt="image-20210611092939904" style="zoom: 67%;">
</li>
</ul>
<br>
<h3 id="step-3-show-parameter-control-2"><a class="markdownIt-Anchor" href="#step-3-show-parameter-control-2"></a> Step 3. Show parameter control</h3>
<ul>
<li>
<p>Right-click the parameter, and select [Show Parameter Control]</p>
<p><img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611093058789-165631432561313.png" alt="image-20210611093058789">			<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611093137142.png" alt="image-20210611093137142" style="zoom:120%;"></p>
</li>
</ul>
<br>
<br>
<h2 id="4-use-a-parameter-to-swap-measures"><a class="markdownIt-Anchor" href="#4-use-a-parameter-to-swap-measures"></a> <strong>4. Use a Parameter to Swap Measures</strong></h2>
<p>Using a parameter, you can create one view and give users the ability to choose which measure to display, which is called <em>dynamic measure selection</em>.</p>
<br>
<h3 id="step-1-create-a-parameter-2"><a class="markdownIt-Anchor" href="#step-1-create-a-parameter-2"></a> Step 1. Create a parameter</h3>
<ul>
<li>
<p>Create the parameter and include a list of values that represents each measure we want to show.</p>
<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611104005746.png" alt="image-20210611104005746" style="zoom: 67%;">
</li>
</ul>
<br>
<h3 id="step-2-use-the-parameter-in-a-calculation"><a class="markdownIt-Anchor" href="#step-2-use-the-parameter-in-a-calculation"></a> Step 2. Use the parameter in a calculation</h3>
<ul>
<li>
<p>Tie a parameter to something you’ll use in the view, such as a calculation, filter, or reference line.</p>
</li>
<li>
<p>use a CASE statement to match the parameter variables and return the correct measure data</p>
<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611104353589.png" alt="image-20210611104353589" style="zoom: 67%;">
</li>
</ul>
<br>
<h3 id="step-3-show-parameter-control-3"><a class="markdownIt-Anchor" href="#step-3-show-parameter-control-3"></a> Step 3. Show parameter control</h3>
<ul>
<li>Use the parameter in the view and display the parameter control to enable users to switch among the measures</li>
</ul>
<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611104549840.png" alt="image-20210611104549840" style="zoom:120%;">
<br>
<h3 id="step-4-apply-a-dynamic-title-with-the-parameter"><a class="markdownIt-Anchor" href="#step-4-apply-a-dynamic-title-with-the-parameter"></a> Step 4. Apply a dynamic title with the parameter</h3>
<p><img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611110246784-165631438763515.png" alt="image-20210611110246784" style="zoom:67%;"> 		<img src="/images/S-Tableau-Intermediate-12-Using-Parameters-to-Control-Data-in-the-View/image-20210611110317775.png" alt="image-20210611110317775" style="zoom: 80%;"></p>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (14) Viewing Distribution</title>
    <url>/2022/06/27/S-Tableau-Intermediate-14-Viewing-Distribution/</url>
    <content><![CDATA[<h1 id="viewing-distribution"><a class="markdownIt-Anchor" href="#viewing-distribution"></a> Viewing Distribution</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-building-histograms"><strong>1. Building Histograms</strong></a>
<ul>
<li><a href="#methods-to-create-histograms">&gt;&gt; Methods to create histograms</a></li>
</ul>
</li>
<li><a href="#2-building-box-and-whisker-plots"><strong>2. Building Box and Whisker Plots</strong></a>
<ul>
<li><a href="#box-plot">&gt;&gt; Box Plot</a></li>
<li><a href="#methods-to-create-box-plot">&gt;&gt; Methods to create box plot</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-building-histograms"><a class="markdownIt-Anchor" href="#1-building-histograms"></a> <strong>1. Building Histograms</strong></h2>
<h3 id="methods-to-create-histograms"><a class="markdownIt-Anchor" href="#methods-to-create-histograms"></a> &gt;&gt; Methods to create histograms</h3>
<p><strong>[Method 1] : Use <em>Show Me</em></strong></p>
<ul>
<li>Select [Measure] field  --&gt; click [Show Me]  --&gt; click the histogram thumbnail</li>
</ul>
<p>​			<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614090214293.png" alt="image-20210614090214293" style="zoom: 67%;">	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614090252568-16563138518251.png" alt="image-20210614090252568" style="zoom:67%;"></p>
<br>
<ul>
<li>
<p>Edit bins : Right-click [Age (bin)] --&gt; [Edit]</p>
<p>​	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614094434541.png" alt="image-20210614094434541" style="zoom:67%;"><img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614094518358-16563138585103.png" alt="image-20210614094518358" style="zoom:67%;"></p>
</li>
</ul>
<br>
<p><strong>[Method 2] : In the <em>Data</em> pane</strong></p>
<ul>
<li>
<p>Right-click [Measure] field  --&gt; select [Create]  --&gt; select [Bins]  --&gt; edit bins --&gt; click [OK]</p>
<p>​	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614090452204-16563138656405.png" alt="image-20210614090452204" style="zoom:80%;">	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614091832293.png" alt="image-20210614091832293" style="zoom:67%;"></p>
<ul>
<li>
<p><strong><font color="darkblue">Size of bins</font></strong>: Default value  – Tableau suggested size</p>
</li>
<li>
<p><strong><font color="darkblue">Bin range:</font></strong></p>
<p>-  [a, b)       a&lt;= x &lt; b</p>
<p>-  For a bin size of 5, on data starting at 0:</p>
<p>​	[0, 4] – [5, 9] – [10, 14] …    /  [0, 5) – [5, 10) – [10, 15) …</p>
<br>
</li>
</ul>
</li>
<li>
<p>Binning a measure creates a dimension : [Age (bin)]</p>
<p><img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614093247671.png" alt="image-20210614093247671"></p>
</li>
<li>
<p>Build the view:</p>
<ul>
<li>
<p>Drag <font color="viridans">[Age]</font> to [Rows]</p>
</li>
<li>
<p>Drag <font color="blue">[Age (bin)]</font> to [Columns]</p>
</li>
<li>
<p>Change the aggregation of <font color="viridans">[Age]</font> from Sum to Count</p>
<p>Change <font color="blue">[Age (bin)]</font> into continuous field <font color="viridans">[Age (bin)]</font></p>
</li>
</ul>
<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614094121764.png" alt="image-20210614094121764" style="zoom: 50%;">
<br>
</li>
<li>
<p>Fix the tick marks to the bin size</p>
<ul>
<li>
<p>Right-click the x-axis  --&gt; click [Edit Axis]</p>
</li>
<li>
<p>[Tick Marks] Tab  --&gt; [Major tick marks]  --&gt; [Fixed]  --&gt; [Every] : (<em>size of bins</em>)</p>
<p><img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614095218159.png" alt="image-20210614095218159">	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614095105087-16563138867437.png" alt="image-20210614095105087" style="zoom:80%;"></p>
</li>
</ul>
</li>
</ul>
<br>
<br>
<h2 id="2-building-box-and-whisker-plots"><a class="markdownIt-Anchor" href="#2-building-box-and-whisker-plots"></a> <strong>2. Building Box and Whisker Plots</strong></h2>
<h3 id="box-plot"><a class="markdownIt-Anchor" href="#box-plot"></a> &gt;&gt; Box Plot</h3>
<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/scode=mtistory2&amp;fname=https%253A%252F%252Ft1.daumcdn.png" alt="boxplot" style="zoom:67%;">
<ul>
<li>
<p>IQR:                 Q3 - Q1</p>
<p>Upper fence: Q3 + 1.5 * IQR</p>
<p>Lower fence:  Q1 - 1.5 * IQR</p>
</li>
<li>
<p>The bottom and top whiskers are not always the same length:</p>
<p>the whiskers will show the last <em>data point</em> that is within the 1.5*IQR</p>
</li>
</ul>
<br>
<h3 id="methods-to-create-box-plot"><a class="markdownIt-Anchor" href="#methods-to-create-box-plot"></a> &gt;&gt; Methods to create box plot</h3>
<p><strong>[Method 1] In the <em>Data</em> pane</strong></p>
<ul>
<li>
<p>[Columns] : [Dimension] field</p>
<p>[Rows]       : [Measure] field</p>
<p>[Details]    : [Dimension] field</p>
<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614102522465.png" alt="image-20210614102522465" style="zoom: 67%;">
<br>
</li>
<li>
<p>[Analytics] Pane  --&gt; Drag [Box Plot] to the view  --&gt; [Cell]</p>
<p>​			<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614102707088.png" alt="image-20210614102707088" style="zoom:80%;">	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614102805162-16563138976839.png" alt="image-20210614102805162" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>Edit the box plot</p>
<p>​			<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614102853313.png" alt="image-20210614102853313" style="zoom:67%;">	<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614102924358-165631390273611.png" alt="image-20210614102924358"></p>
</li>
</ul>
<br>
<p><strong>[Method 2] : Use <em>Show Me</em></strong></p>
<ul>
<li>Hold [Ctrl] and select [Dimension] field and [Measure] field</li>
<li>[Show Me]  --&gt; click the box and whisker icon</li>
</ul>
<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614103215928.png" alt="image-20210614103215928" style="zoom: 67%;">
<ul>
<li>
<p>Using the Marks card to adjust the formatting</p>
<ul>
<li>Mark Type : Circle</li>
<li>Size &amp; Color</li>
</ul>
<img src="/images/S-Tableau-Intermediate-14-Viewing-Distribution/image-20210614103542826.png" alt="image-20210614103542826" style="zoom:67%;">
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (2) Joining Tables</title>
    <url>/2022/06/27/S-Tableau-Intermediate-2-Joining-Tables/</url>
    <content><![CDATA[<h1 id="joining-tables"><a class="markdownIt-Anchor" href="#joining-tables"></a> Joining Tables</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-table-joins"><strong>1. Table joins</strong></a>
<ul>
<li><a href="#4-types-of-joins-in-tableau">&gt;&gt; 4 types of joins in Tableau</a></li>
<li><a href="#how-to-join-tables">&gt;&gt; How to join tables?</a></li>
</ul>
</li>
<li><a href="#2-joining-tables-using-calculations"><strong>2. Joining Tables Using Calculations</strong></a>
<ul>
<li><a href="#when-we-use-join-calculations">&gt;&gt; When we use Join calculations?</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-table-joins"><a class="markdownIt-Anchor" href="#1-table-joins"></a> <strong>1. Table joins</strong></h2>
<h3 id="4-types-of-joins-in-tableau"><a class="markdownIt-Anchor" href="#4-types-of-joins-in-tableau"></a> &gt;&gt; 4 types of joins in Tableau</h3>
<ul>
<li>inner joins  (default)</li>
<li>left joins</li>
<li>right joins</li>
<li>full outer joins</li>
</ul>
<br>
<h3 id="how-to-join-tables"><a class="markdownIt-Anchor" href="#how-to-join-tables"></a> &gt;&gt; How to join tables?</h3>
<blockquote>
<p><a href="https://help.tableau.com/current/pro/desktop/en-us/joining_tables.htm" target="_blank" rel="noopener">[Tableau Help] – Join Your Data</a> (<a href="https://help.tableau.com/current/pro/desktop/zh-cn/joining_tables.htm" target="_blank" rel="noopener">中: 联接数据</a> / <a href="https://help.tableau.com/current/pro/desktop/ko-kr/joining_tables.htm" target="_blank" rel="noopener">한: 데이터 조인</a>)</p>
</blockquote>
<br>
<p><strong>Two situations :</strong></p>
<ul>
<li>
<p><strong><font color="darkblue">Join tables in the same data database</font></strong></p>
</li>
<li>
<p><strong><font color="darkblue">Join tables in different databases</font></strong></p>
<p>Connecting to multiple databases:</p>
<ul>
<li><font color="blue">blue</font>:      primary database</li>
<li><font color="orange">orange</font>: secondary database</li>
</ul>
<img src="/images/S-Tableau-Intermediate-2-Joining-Tables/image-20210603084026249.png" alt="image-20210603084026249" style="zoom:67%;"> 
</li>
</ul>
<br>
<p><strong>How to join tables?</strong></p>
<ol>
<li>
<p>Connect to the relevant data source or sources</p>
</li>
<li>
<p>Drag the first table to the canvas</p>
</li>
<li>
<p>Select [Open] from the menu or double-click the first table to open the join canvas</p>
<img src="/images/S-Tableau-Intermediate-2-Joining-Tables/image-20210603165714869.png" alt="image-20210603165714869" style="zoom: 50%;"> 
<img src="/images/S-Tableau-Intermediate-2-Joining-Tables/image-20210603165828247.png" alt="image-20210603165828247" style="zoom:50%;"> 
<br>
</li>
<li>
<p>Double-click or drag another table to the join canvas</p>
</li>
<li>
<p>Select a join type --&gt; Add one or more join clauses</p>
<img src="/images/S-Tableau-Intermediate-2-Joining-Tables/image-20210603170308172.png" alt="image-20210603170308172" style="zoom: 67%;"> 
</li>
</ol>
<br>
<br>
<h2 id="2-joining-tables-using-calculations"><a class="markdownIt-Anchor" href="#2-joining-tables-using-calculations"></a> <strong>2. Joining Tables Using Calculations</strong></h2>
<h3 id="when-we-use-join-calculations"><a class="markdownIt-Anchor" href="#when-we-use-join-calculations"></a> &gt;&gt; When we use Join calculations?</h3>
<p>Join calculations are typically used to fix mismatched field types, or just a mismatch in the values in the two tables when adding the join clause.</p>
<p>We can use Join calculation to create a new field that match the field use for join clause in the other table</p>
<br>
<p><strong>[Example]</strong></p>
<p>We have [Name] field in table A, [First Name] and [Last Name] fields in table B. To join these two tables:</p>
<ul>
<li>
<p>Use Join calculation to create a new field “[Name]” for table B, which will be used for matching the [Name] field in table A</p>
</li>
<li>
<p>Join calculation function:</p>
<p><code>[First Name] + " " + [Last Name]</code></p>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (4) Using Unions to Combine Data</title>
    <url>/2022/06/27/S-Tableau-Intermediate-4-Using-Unions-to-Combine-Data/</url>
    <content><![CDATA[<h1 id="using-unions-to-combine-data"><a class="markdownIt-Anchor" href="#using-unions-to-combine-data"></a> Using Unions to Combine Data</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-concept"><strong>1. Concept</strong></a></li>
<li><a href="#2-union-your-data"><strong>2. Union Your Data</strong></a></li>
<li><a href="#3-create-a-union-manually"><strong>3. Create a Union Manually</strong></a></li>
<li><a href="#4-merge-mismatched-fields"><strong>4. Merge Mismatched Fields</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-concept"><a class="markdownIt-Anchor" href="#1-concept"></a> <strong>1. Concept</strong></h2>
<p>A union is way to connect multiple tables from a single data source.</p>
<p>It combines rows from two or more tables to lengthen the scope of your data.</p>
<br>
<h2 id="2-union-your-data"><a class="markdownIt-Anchor" href="#2-union-your-data"></a> <strong>2. Union Your Data</strong></h2>
<p>The tables that you combine using a union must have the same structure:</p>
<ul>
<li>same number of fields</li>
<li>related fields must have matching field names and data types</li>
</ul>
<br>
<p>After the data union,</p>
<ul>
<li>all the rows are included in the union, even the duplicate values</li>
<li>two new columns(Sheet &amp; Table Name) will be automatically generated</li>
</ul>
<br>
<h2 id="3-create-a-union-manually"><a class="markdownIt-Anchor" href="#3-create-a-union-manually"></a> <strong>3. Create a Union Manually</strong></h2>
<p>Two ways to create a union:</p>
<ol>
<li>
<p>drag and drop</p>
<ul>
<li>clicking and dragging the first sheet to the empty canvas</li>
<li>click and drag the second sheet <em>underneath</em> the first sheet until the [Union] box appears</li>
<li>drop the second sheet when the box changes to a solid orange color</li>
</ul>
<img src="/images/S-Tableau-Intermediate-4-Using-Unions-to-Combine-Data/image-20210604155657013.png" alt="image-20210604155657013" style="zoom:80%;">
</li>
<li>
<p>Use [New Union] option</p>
<ul>
<li>
<p>double-click the New Union option</p>
<p><img src="/images/S-Tableau-Intermediate-4-Using-Unions-to-Combine-Data/image-20210604155857525-16563146432711.png" alt="image-20210604155857525" style="zoom:80%;">        <img src="/images/S-Tableau-Intermediate-4-Using-Unions-to-Combine-Data/image-20210604155935753.png" alt="image-20210604155935753" style="zoom:77%;"></p>
</li>
</ul>
<ol>
<li>
<p>Specific (manual):</p>
<p>create unions manually by selecting specific files that are imported in the Data Source page.</p>
</li>
<li>
<p>Wildcard (automatic):</p>
<p>created automatically by searching for files through a directory</p>
</li>
</ol>
</li>
</ol>
<br>
<h2 id="4-merge-mismatched-fields"><a class="markdownIt-Anchor" href="#4-merge-mismatched-fields"></a> <strong>4. Merge Mismatched Fields</strong></h2>
<p>For duplicate fields with mismatched field names but the same values, we can combine them by using Merge Mismatched Fields</p>
<br>
<p>Process:</p>
<ol>
<li>Go to the [Data Source] page</li>
<li>Select the fields we want to merge</li>
<li>From the drop-down menu, click [Merge Mismatched Fields]</li>
<li>Rename the merged field</li>
</ol>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>-Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (15) Comparing Measures Against a Goal</title>
    <url>/2022/06/27/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/</url>
    <content><![CDATA[<h1 id="comparing-measures-against-a-goal"><a class="markdownIt-Anchor" href="#comparing-measures-against-a-goal"></a> Comparing Measures Against a Goal</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-building-bar-in-bar-charts"><strong>1. Building Bar-in-Bar Charts</strong></a>
<ul>
<li><a href="#process-to-build-a-bar-in-bar-chart">Process to build a bar-in-bar chart</a></li>
</ul>
</li>
<li><a href="#2-building-bullet-graphs"><strong>2. Building Bullet Graphs</strong></a>
<ul>
<li><a href="#methods-to-create-a-bullet-graph">&gt;&gt; Methods to create a bullet graph</a>
<ul>
<li><a href="#method-1-in-the-data-pane">[Method 1] In the Data Pane</a></li>
<li><a href="#method-2-use-the-show-me">[Method 2] Use the <em>Show Me</em></a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-building-bar-in-bar-charts"><a class="markdownIt-Anchor" href="#1-building-bar-in-bar-charts"></a> <strong>1. Building Bar-in-Bar Charts</strong></h2>
<p>Bar-in-bar charts are useful for comparing two measures as overlapping bars in the same space.</p>
<p>Making the bars different sizes can avoid that the bars bidden underneath the others</p>
<br>
<h3 id="process-to-build-a-bar-in-bar-chart"><a class="markdownIt-Anchor" href="#process-to-build-a-bar-in-bar-chart"></a> Process to build a bar-in-bar chart</h3>
<ul>
<li>
<p>Add <font color="blue">[dimension]</font> to [Rows]</p>
<p>Add the <font color="viridans">1st [Measure]</font> to [Columns]</p>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614110224399.png" alt="image-20210614110224399" style="zoom:67%;">
<br>
</li>
<li>
<p>Drag the <font color="viridans">2nd [Measure]</font> to the view, dropping it on the x-axis when two green bars appear.</p>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614110405228.png" alt="image-20210614110405228" style="zoom:67%;">
<br>
</li>
<li>
<p>Side-by-side bars for two [Measures]</p>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614110512156.png" alt="image-20210614110512156" style="zoom:67%;">
<br>
</li>
<li>
<p>Move the [Measure Names] from [Rows] to [Color] mark</p>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614110845733.png" alt="image-20210614110845733" style="zoom:67%;">
<br>
</li>
<li>
<p>Unstack bars</p>
<p>[Analysis] menu --&gt; [Stack Marks] --&gt; [Off]</p>
<p><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614111240025.png" alt="image-20210614111240025" style="zoom:80%;">	<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614111307271-16563136198991.png" alt="image-20210614111307271" style="zoom:60%;"></p>
</li>
</ul>
<br>
<ul>
<li>
<p>Make the bars different size</p>
<ul>
<li>
<p>Hold [Ctrl] and drag [Measure Name] to [Size]</p>
</li>
<li>
<p>Edit size:</p>
<ul>
<li>Smallest : controls the size for the thinner bars</li>
<li>Largest :   controls the size for the thicker bars</li>
</ul>
<p><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614111715412.png" alt="image-20210614111715412">	<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614111734298.png" alt="image-20210614111734298">	<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614111758855-16563136537213.png" alt="image-20210614111758855" style="zoom: 67%;"></p>
<br>
</li>
</ul>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614111931130.png" alt="image-20210614111931130" style="zoom: 67%;">
</li>
</ul>
<br>
<br>
<h2 id="2-building-bullet-graphs"><a class="markdownIt-Anchor" href="#2-building-bullet-graphs"></a> <strong>2. Building Bullet Graphs</strong></h2>
<p>Bullet graphs can be useful when you want to see how far a measure has progressed toward a goal. (i.e. comparing a measure against another measure)</p>
<br>
<h3 id="methods-to-create-a-bullet-graph"><a class="markdownIt-Anchor" href="#methods-to-create-a-bullet-graph"></a> &gt;&gt; Methods to create a bullet graph</h3>
<h4 id="method-1-in-the-data-pane"><a class="markdownIt-Anchor" href="#method-1-in-the-data-pane"></a> [Method 1] In the Data Pane</h4>
<p>[Question] How far enrollment has progressed towards the maximum enrollment that would be allowed</p>
<ul>
<li>
<p>Build a view that shows current enrollment by department</p>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614125445025.png" alt="image-20210614125445025" style="zoom:80%;">
<br>
</li>
<li>
<p>Use Maximum Enrollment as a reference line</p>
<ul>
<li>
<p>Add [Maximum Enrollment] to [Detail]</p>
</li>
<li>
<p>Right-click the x-axis (Students Enrolled axis), and choose [Add Reference Line]</p>
</li>
<li>
<p>Edit the reference line with [Scope], [Line] and [Formatting]</p>
<p><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614125641240.png" alt="image-20210614125641240" style="zoom: 50%;">         <img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614125736991-16563136858875.png" alt="image-20210614125736991" style="zoom:67%;"></p>
<br>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614125952753.png" alt="image-20210614125952753" style="zoom:80%;"> 
</li>
</ul>
<br>
</li>
<li>
<p>Add distribution areas to show stages of process</p>
<ul>
<li>
<p>Right-click the x-axis (Student Enrolled axis), and choose [Add Reference Line]</p>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614130221752.png" alt="image-20210614130221752" style="zoom:80%;">
</li>
<li>
<p>Edit the distribution</p>
<p>- Scope: [Per Cell]</p>
<p>- Computation: [Percentages] 25, 50, 75  —  [Percent of]  Sum(Maximum Enrolled) / Sum</p>
<p>- Label : [None]</p>
<p>- Formatting : check [Fill Below]</p>
<p><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614130533550.png" alt="image-20210614130533550" style="zoom: 67%;">					<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614130351229-16563137195357.png" alt="image-20210614130351229" style="zoom: 67%;"></p>
<br>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614130758991.png" alt="image-20210614130758991" style="zoom:80%;"> 
</li>
</ul>
<br>
</li>
<li>
<p>Use color to distinguish whether a department has reached its maximum enrollment</p>
<ul>
<li>
<p>Create a calculated field “Max Enrolled?”</p>
<p><code>SUM([Students Enrolled]) &gt;= SUM([Maximum Enrollment])</code></p>
</li>
<li>
<p>Drag [Max Enrolled?] to [Color]</p>
</li>
</ul>
<img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614131317367.png" alt="image-20210614131317367" style="zoom:80%;">
</li>
</ul>
<br>
<h4 id="method-2-use-the-show-me"><a class="markdownIt-Anchor" href="#method-2-use-the-show-me"></a> [Method 2] Use the <em>Show Me</em></h4>
<ul>
<li>
<p>Select two measures we want to compare, and any dimensions we want to include</p>
</li>
<li>
<p>Click [Show Me] and select the bullet graph icon</p>
<ul>
<li>
<p>Here, Tableau uses</p>
<p>- the <em>Maximum Enrollment</em> for the bars and</p>
<p>- <em>current enrollment</em> for the reference lines and distribution</p>
</li>
</ul>
<p><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614132009819.png" alt="image-20210614132009819" style="zoom:85%;"> <img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614132031246-165631376553311.png" alt="image-20210614132031246" style="zoom:80%;"> <img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614132150639-165631379546813.png" alt="image-20210614132150639" style="zoom:60%;"></p>
<br>
</li>
<li>
<p>Swap how the two measures are used</p>
<ul>
<li>
<p>Right-click the x-axis (Maximum Enrollment axis)  --&gt; [Swap Reference Line Fields]</p>
<p><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614132818737.png" alt="image-20210614132818737" style="zoom:80%;"><img src="/images/S-Tableau-Intermediate-15-Comparing-Measures-Against-a-Goal/image-20210614132853178-165631381365915.png" alt="image-20210614132853178" style="zoom:60%;"></p>
</li>
</ul>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (5) Filtering Across Data Sources</title>
    <url>/2022/06/27/S-Tableau-Intermediate-5-Filtering-Across-Data-Sources/</url>
    <content><![CDATA[<h1 id="filtering-across-data-sources"><a class="markdownIt-Anchor" href="#filtering-across-data-sources"></a> Filtering Across Data Sources</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-concept"><strong>1. Concept</strong></a></li>
<li><a href="#2-create-a-cross-database-filter"><strong>2. Create a cross-database filter</strong></a>
<ul>
<li><a href="#establish-a-relationship-between-the-data-sources-with-the-common-fields">Establish a relationship between the data sources with the common fields</a></li>
<li><a href="#create-and-apply-a-cross-database-filter">Create and apply a cross-database filter</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-concept"><a class="markdownIt-Anchor" href="#1-concept"></a> <strong>1. Concept</strong></h2>
<p>While working with multiple data sources in a workbook, you might want to compare the data between them using a field they have in common. To do so, you can apply a cross-database filter to filter data across multiple primary data sources.</p>
<br>
<h2 id="2-create-a-cross-database-filter"><a class="markdownIt-Anchor" href="#2-create-a-cross-database-filter"></a> <strong>2. Create a cross-database filter</strong></h2>
<ol>
<li>
<h3 id="establish-a-relationship-between-the-data-sources-with-the-common-fields"><a class="markdownIt-Anchor" href="#establish-a-relationship-between-the-data-sources-with-the-common-fields"></a> Establish a relationship between the data sources with the common fields</h3>
<ul>
<li>
<p>Automatically</p>
</li>
<li>
<p>Manually: [Data] Menu --&gt; [Edit Blend Relationships]</p>
<br>
</li>
</ul>
</li>
<li>
<h3 id="create-and-apply-a-cross-database-filter"><a class="markdownIt-Anchor" href="#create-and-apply-a-cross-database-filter"></a> Create and apply a cross-database filter</h3>
<ul>
<li>
<p><strong><font color="darkblue">In the dashboard</font></strong></p>
<ol>
<li>dashboard --&gt; source worksheet --&gt; down arrow [Menu] --&gt; [Filters] --&gt; [<em>common field</em>]</li>
</ol>
<img src="/images/S-Tableau-Intermediate-5-Filtering-Across-Data-Sources/image-20210607090719281.png" alt="image-20210607090719281" style="zoom: 67%;">
<br>
<ol start="2">
<li>filter card appeared --&gt; down arrow [Menu] --&gt; [Apply to Worksheets] --&gt; [All using Related Data Sources]</li>
</ol>
<img src="/images/S-Tableau-Intermediate-5-Filtering-Across-Data-Sources/image-20210607091123611.png" alt="image-20210607091123611" style="zoom: 50%;">
<br>
</li>
<li>
<p><strong><font color="darkblue">In the view</font></strong></p>
<ol>
<li>Source worksheet --&gt; drag the common field to [Filters] --&gt; click [All]</li>
</ol>
<img src="/images/S-Tableau-Intermediate-5-Filtering-Across-Data-Sources/image-20210607093344614.png" alt="image-20210607093344614" style="zoom: 67%;">
<ol start="2">
<li>[Filters] card --&gt; [common field] --&gt; [Apply to Worksheets] --&gt; [All Using Related Data Sources]</li>
</ol>
<img src="/images/S-Tableau-Intermediate-5-Filtering-Across-Data-Sources/image-20210607092036185.png" alt="image-20210607092036185" style="zoom:67%;">
<br>
</li>
</ul>
<br>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (3) Blending Multiple Data Sources</title>
    <url>/2022/06/27/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/</url>
    <content><![CDATA[<h1 id="blending-multiple-data-sources"><a class="markdownIt-Anchor" href="#blending-multiple-data-sources"></a> Blending Multiple Data Sources</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-data-blending"><strong>1. Data Blending</strong></a>
<ul>
<li><a href="#concept">&gt;&gt; Concept</a>
<ul>
<li><a href="#advantages">&gt;&gt; Advantages</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-blending-your-data"><strong>2. Blending Your Data</strong></a><br>
*
<ul>
<li><a href="#features">&gt;&gt; Features</a></li>
<li><a href="#steps-for-blending-data">&gt;&gt; Steps for blending data</a></li>
</ul>
</li>
<li><a href="#3-left-join-vs-blending"><strong>3. Left Join VS Blending</strong></a>
<ul>
<li><a href="#difference-between-joins-and-data-blending">&gt;&gt; Difference between joins and data blending</a></li>
<li><a href="#left-join">&gt;&gt; Left join</a></li>
<li><a href="#data-blending">&gt;&gt; Data blending</a></li>
</ul>
</li>
<li><a href="#4-blending-data-without-a-common-field"><strong>4. Blending Data without a Common Field</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-data-blending"><a class="markdownIt-Anchor" href="#1-data-blending"></a> <strong>1. Data Blending</strong></h2>
<blockquote>
<p><a href="https://help.tableau.com/current/pro/desktop/en-gb/multiple_connections.htm" target="_blank" rel="noopener">[Tableau Help] – Blend Your Data</a> (<a href="https://help.tableau.com/current/pro/desktop/zh-cn/multiple_connections.htm" target="_blank" rel="noopener">中: 混合您的数据</a> / <a href="https://help.tableau.com/current/pro/desktop/ko-kr/multiple_connections.htm" target="_blank" rel="noopener">한: 데이터 혼합</a>)</p>
</blockquote>
<br>
<h3 id="concept"><a class="markdownIt-Anchor" href="#concept"></a> &gt;&gt; Concept</h3>
<p>Data blending is a method for combining data from multiple sources. Unlike relationships and joins, blends <em>never truly combine the data</em>, they query each data source independentyly and just simply <em>blend the results</em> from multiple data sources <em>in a visulisation</em>.</p>
<p>In a data blend, one data source is <font color="blue">primary</font> and the other is <font color="orange">secondary</font>. The primary data source is determined by the field you first <em>add to a view.</em> Data blending brings in additional information from the secondary data source and displays it with data from the primary data source <em>directly in the view.</em></p>
<br>
<h4 id="advantages"><a class="markdownIt-Anchor" href="#advantages"></a> &gt;&gt; Advantages</h4>
<ul>
<li>can handle different levels of detail</li>
<li>able to work with published data sources</li>
<li>can be established individually on every sheet</li>
</ul>
<br>
<br>
<h2 id="2-blending-your-data"><a class="markdownIt-Anchor" href="#2-blending-your-data"></a> <strong>2. Blending Your Data</strong></h2>
<h4 id="features"><a class="markdownIt-Anchor" href="#features"></a> &gt;&gt; Features</h4>
<ul>
<li>Data blending requires that the data sources <strong><font color="darkblue">share a common dimension</font></strong>.</li>
<li>Data blending <strong><font color="darkblue">works like a left join</font></strong>. It returns all results from the primary data source, and returns only the matching results from the secondary data source.</li>
<li>Data blending is <strong><font color="darkblue">Tableau worksheet specific</font></strong>, which means that you can change which data source is primary and which is secondary on different worksheets in the same workbook.</li>
</ul>
<br>
<h3 id="steps-for-blending-data"><a class="markdownIt-Anchor" href="#steps-for-blending-data"></a> &gt;&gt; Steps for blending data</h3>
<ol>
<li>Ensure that the workbook has multiple data source</li>
<li>Drag a field to the view. (The data source this first field comes from will become the primary data source)</li>
<li>Switch to another data source and make sure there is a blend relationship to the primary data source
<ul>
<li>If there is an orange linking field icon (<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604101207322.png" alt="image-20210604101207322">), the data sources are automatically linked.</li>
<li>If there are grey, broken link icons (<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604101254705.png" alt="image-20210604101254705">), click the icon next to the field that should link the two data sources.</li>
<li>If a link icon does not appear next to the desired field, you need to define blend relationships for blending.</li>
</ul>
</li>
<li>Drag a field into the view from the secondary data source</li>
</ol>
<br>
<br>
<h2 id="3-left-join-vs-blending"><a class="markdownIt-Anchor" href="#3-left-join-vs-blending"></a> <strong>3. Left Join VS Blending</strong></h2>
<h3 id="difference-between-joins-and-data-blending"><a class="markdownIt-Anchor" href="#difference-between-joins-and-data-blending"></a> &gt;&gt; Difference between joins and data blending</h3>
<p>The main difference between left join and blending is when the aggregation is performed</p>
<ul>
<li>
<p>A join combines the data and then aggregates.</p>
</li>
<li>
<p>A blend aggregates and then combines the data</p>
</li>
</ul>
<br>
<h3 id="left-join"><a class="markdownIt-Anchor" href="#left-join"></a> &gt;&gt; Left join</h3>
<p>When using left join to combine data, a query is sent to the database where the join is performed.</p>
<p>Order:</p>
<ol>
<li>
<p>A left join returns all rows from the left table and any corresponding rows from the right table</p>
</li>
<li>
<p>then the results of the join are sent back to Tableau and aggregated for display in the visulisation</p>
</li>
</ol>
<blockquote>
<p>[Left join] For each row of the left table, check the right table’s rows one by one that whether corresponding information exsists:</p>
<ul>
<li>If YES: that data is returned and <em>combined to the left table</em></li>
<li>If NO: returns a null</li>
</ul>
</blockquote>
<br>
<p><strong><font color="darkblue">[Example] : common colomns --&gt; User ID &amp; Patron ID</font></strong></p>
<p>A  --left join-- B:</p>
<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604111544374.png" alt="image-20210604111544374" style="zoom:80%;"> 
<br>
<p>B --left join-- A:</p>
<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604111637226.png" alt="image-20210604111637226" style="zoom:80%;"> 
<br>
<h3 id="data-blending"><a class="markdownIt-Anchor" href="#data-blending"></a> &gt;&gt; Data blending</h3>
<p>When using data blending to combine data, a query is sent to the database for each data source that is used on the sheet.</p>
<p>Order:</p>
<ol>
<li>The results of the queries are sent back to Tableau as aggregated data</li>
<li>and then presented together in the visualisation</li>
</ol>
<blockquote>
<p>[Data blending] For each row of the left table, check the right table’s rows one by one that whether corresponding information exsists:</p>
<ul>
<li>
<p>If YES: that data is returned. However, different from the left join,</p>
<ul>
<li>
<p>if there is only one row match the left table row in the right, it returns that value</p>
</li>
<li>
<p>if there are several rows match the same left table row in the right, it returns an aggregate value</p>
<p>- for dimensions:  returns an asterisk(*) that indicates multiple values</p>
<p>- for measures:     return the aggregation (default: sum)</p>
</li>
</ul>
</li>
<li>
<p>If NO: returns a null</p>
</li>
</ul>
</blockquote>
<br>
<p><strong><font color="darkblue">[Example] : common colomns --&gt; User ID &amp; Patron ID</font></strong></p>
<p>dimensions aggregation:</p>
<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604130926578.png" alt="image-20210604130926578" style="zoom:80%;"> 
<br>
<p>measures aggregation:</p>
<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604131010154.png" alt="image-20210604131010154" style="zoom:80%;"> 
<br>
<br>
<h2 id="4-blending-data-without-a-common-field"><a class="markdownIt-Anchor" href="#4-blending-data-without-a-common-field"></a> <strong>4. Blending Data without a Common Field</strong></h2>
<p>If the data sources have a shared dimension with the same name, Tableau can automatically link them.</p>
<p>However, if they do have the common member but with different names, we can manually link them in three ways:</p>
<ol>
<li>
<p>Create a <font color="green">custom relationship</font></p>
</li>
<li>
<p><font color="green">Rename</font> one of them to match the other</p>
</li>
<li>
<p>[If the values are different too (e.g. use full names in one and abbreviations in another)]:</p>
<p><font color="green">Edit aliases</font> of the values in a data source to make them match the other data source</p>
</li>
</ol>
<br>
<p><strong><font color="darkblue">1. Create a custom relationship:</font></strong></p>
<ul>
<li>
<p>[Data] menu --&gt; [Edit Blend Relationship]</p>
<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210607093907267.png" alt="image-20210607093907267" style="zoom:67%;"> 
<br>
</li>
<li>
<p>In the [Relationship] dialog box:</p>
<ul>
<li>
<p>select the primary and secondary data source</p>
</li>
<li>
<p>choose [Custom]</p>
</li>
<li>
<p>Add mapping fields</p>
<p><img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604133553537-16563147514931.png" alt="image-20210604133553537" style="zoom:67%;">  <img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604133703236.png" alt="image-20210604133703236" style="zoom:67%;"></p>
<br>
</li>
</ul>
</li>
<li>
<p>The relationship appears, along with the automatic relationship Tableau found on State</p>
<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604134148022.png" alt="image-20210604134148022" style="zoom:80%;"> 
</li>
</ul>
<br>
<br>
<p><strong><font color="darkblue">2. Rename the common member:</font></strong></p>
<ul>
<li>
<p>[Data] Pane --&gt; common member field --&gt; right-click --&gt; [Rename]</p>
<p><img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604134356472-16563147740013.png" alt="image-20210604134356472" style="zoom:80%;">    <img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604134428319.png" alt="image-20210604134428319" style="zoom:80%;"></p>
<br>
</li>
<li>
<p>Tableau will now recognize the link between them</p>
</li>
</ul>
<br>
<br>
<p><strong><font color="darkblue">3. Edit aliases:</font></strong></p>
<ul>
<li>[Data] Menu --&gt; select data source --&gt; [Edit Aliases] --&gt; choose the common member field</li>
</ul>
<p>​		<img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604135203007-16563147922405.png" alt="image-20210604135203007" style="zoom:67%;">    <img src="/images/S-Tableau-Intermediate-3-Blending-Multiple-Data-Sources/image-20210604140017281.png" alt="image-20210604140017281" style="zoom: 80%;"></p>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Talbeau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (8) Using Split and Custom Split</title>
    <url>/2022/06/27/S-Tableau-Intermediate-8-Using-Split-and-Custom-Split/</url>
    <content><![CDATA[<h1 id="using-split-and-custom-split"><a class="markdownIt-Anchor" href="#using-split-and-custom-split"></a> Using Split and Custom Split</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-concept"><strong>1. Concept</strong></a></li>
<li><a href="#2-using-splits"><strong>2. Using Splits</strong></a>
<ul>
<li><a href="#two-places-to-create-splits-custom-splits">&gt;&gt; Two places to create splits / custom splits</a></li>
<li><a href="#custom-splits">&gt;&gt; Custom splits</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-concept"><a class="markdownIt-Anchor" href="#1-concept"></a> <strong>1. Concept</strong></h2>
<p>If you have string fields in your data that contain multiple units of information, you can use split or custom split options in Tableau to separate the values based on a separator or a repeated pattern of values present in each row of the field.</p>
<ul>
<li>[Split] : Split strings based on a default separator, like a space or a comma</li>
<li>[Custom Split] : Split strings based on a custom separator</li>
</ul>
<br>
<br>
<h2 id="2-using-splits"><a class="markdownIt-Anchor" href="#2-using-splits"></a> <strong>2. Using Splits</strong></h2>
<h3 id="two-places-to-create-splits-custom-splits"><a class="markdownIt-Anchor" href="#two-places-to-create-splits-custom-splits"></a> &gt;&gt; Two places to create splits / custom splits</h3>
<ul>
<li>
<p>On the Data Source Page:</p>
<p>the dimension you want to split --&gt; drop-down menu --&gt; [Split] / [Custom Split]</p>
<p><img src="/images/S-Tableau-Intermediate-8-Using-Split-and-Custom-Split/image-20210608154104954.png" alt="image-20210608154104954" style="zoom:67%;"> 	<img src="/images/S-Tableau-Intermediate-8-Using-Split-and-Custom-Split/image-20210608154203595-16563144840331.png" alt="image-20210608154203595" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>On the Data pane in the worksheet:</p>
<p>right-click the dimension you want to split --&gt; [Transform] --&gt; [Split] / [Custom Split]</p>
<img src="/images/S-Tableau-Intermediate-8-Using-Split-and-Custom-Split/image-20210608154938851.png" alt="image-20210608154938851" style="zoom:67%;"> 
<br>
</li>
</ul>
<h3 id="custom-splits"><a class="markdownIt-Anchor" href="#custom-splits"></a> &gt;&gt; Custom splits</h3>
<p><img src="/images/S-Tableau-Intermediate-8-Using-Split-and-Custom-Split/image-20210608154337879-16563145155593.png" alt="image-20210608154337879" style="zoom:95%;">		 <img src="/images/S-Tableau-Intermediate-8-Using-Split-and-Custom-Split/image-20210608154622042.png" alt="image-20210608154622042" style="zoom:80%;"></p>
<ul>
<li>[Use the separator] : the specific separator to split fields</li>
<li>[Split off] : the component of the fields you want to split off</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>-Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (7) Using Context Filters to Limit Scope</title>
    <url>/2022/06/27/S-Tableau-Intermediate-7-Using-Context-Filters-to-Limit-Scope/</url>
    <content><![CDATA[<h1 id="using-context-filters-to-limit-scope"><a class="markdownIt-Anchor" href="#using-context-filters-to-limit-scope"></a> Using Context Filters to Limit Scope</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-concept"><strong>1. Concept</strong></a></li>
<li><a href="#2-creating-context-filter"><strong>2. Creating Context Filter</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-concept"><a class="markdownIt-Anchor" href="#1-concept"></a> <strong>1. Concept</strong></h2>
<p>By default, all filters set in Tableau are computed independently. That is, each filter accesses all rows in your data source without regard to other filters. However, you can set one or more categorical filters as context filters for the view.</p>
<p>A context filter will pre-filter the data to create a context for this worksheet, making other dimension and measure filters dependent on this result.</p>
<br>
<h2 id="2-creating-context-filter"><a class="markdownIt-Anchor" href="#2-creating-context-filter"></a> <strong>2. Creating Context Filter</strong></h2>
<p>Use [Add To Context] function:</p>
<ul>
<li>
<p>field --&gt; drop-down arrow --&gt; [Add to Context]</p>
<p><img src="/images/S-Tableau-Intermediate-7-Using-Context-Filters-to-Limit-Scope/image-20210607172541543.png" alt="image-20210607172541543" style="zoom:80%;"> 	 <img src="/images/S-Tableau-Intermediate-7-Using-Context-Filters-to-Limit-Scope/image-20210607172600720-16563145453401.png" alt="image-20210607172600720" style="zoom:80%;"></p>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (6) Using Sets to Highlight Data</title>
    <url>/2022/06/27/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/</url>
    <content><![CDATA[<h1 id="using-sets-to-highlight-data"><a class="markdownIt-Anchor" href="#using-sets-to-highlight-data"></a> Using Sets to Highlight Data</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-creating-sets"><strong>1. Creating Sets</strong></a>
<ul>
<li><a href="#method-1-from-the-dimensions-pane">Method 1. From the Dimensions Pane</a></li>
<li><a href="#method-2-create-sets-by-selecting-the-marks-in-the-view">Method 2. Create sets by selecting the marks in the view</a></li>
</ul>
</li>
<li><a href="#2-uses-for-sets"><strong>2. Uses for Sets</strong></a></li>
<li><a href="#3-combining-sets"><strong>3. Combining Sets</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="1-creating-sets"><a class="markdownIt-Anchor" href="#1-creating-sets"></a> <strong>1. Creating Sets</strong></h2>
<h3 id="method-1-from-the-dimensions-pane"><a class="markdownIt-Anchor" href="#method-1-from-the-dimensions-pane"></a> Method 1. From the Dimensions Pane</h3>
<ul>
<li>
<p>[Data] Pane --&gt; Dimension field --&gt; Drop down [Menu] --&gt; [Create] --&gt; [Set]</p>
<p>​					<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607160552672.png" alt="image-20210607160552672" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>[Create Set] dialog box</p>
<ol>
<li>
<p>[General]</p>
<p>- Specifically select individual dimension members to include in your set</p>
<p>​				<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607160943419.png" alt="image-20210607160943419" style="zoom:67%;"></p>
<br>
</li>
<li>
<p>[Condition]</p>
<p>- Create a set on a condition</p>
<p>​				<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607160918594.png" alt="image-20210607160918594" style="zoom: 67%;"></p>
<br>
</li>
<li>
<p>[Top]</p>
<p>- Select the top / bottom X member on a specific metric</p>
<p>​				<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607161201221.png" alt="image-20210607161201221" style="zoom:67%;"></p>
</li>
</ol>
</li>
</ul>
<br>
<br>
<h3 id="method-2-create-sets-by-selecting-the-marks-in-the-view"><a class="markdownIt-Anchor" href="#method-2-create-sets-by-selecting-the-marks-in-the-view"></a> Method 2. Create sets by selecting the marks in the view</h3>
<ul>
<li>
<p>Select multiple marks by clicking and dragging your mouse</p>
</li>
<li>
<p>Hover your mouse over the set until you see a tooptip menu</p>
</li>
<li>
<p>Click the sets icon that looks like two conjoined circles  --&gt; Click [Create Set]</p>
<p><img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607161742384.png" alt="image-20210607161742384" style="zoom: 50%;"> <img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607162033804-16563145766931.png" alt="image-20210607162033804" style="zoom: 50%;"></p>
</li>
<li>
<p>[Create Set] dialog box</p>
<p>​				<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607162150178.png" alt="image-20210607162150178" style="zoom:67%;"></p>
</li>
</ul>
<br>
<br>
<h2 id="2-uses-for-sets"><a class="markdownIt-Anchor" href="#2-uses-for-sets"></a> <strong>2. Uses for Sets</strong></h2>
<ul>
<li>
<p><strong>Viewing in / out sets</strong></p>
<p>Dragging the set into the view can identify all the dimension members that are in and out of the set</p>
<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607162835832.png" alt="image-20210607162835832" style="zoom:67%;"> 
<br>
</li>
<li>
<p><strong>Use sets to compare members in a set to members not in the set</strong></p>
<p>- Show In/Out of Set</p>
<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607163345551.png" alt="image-20210607163345551" style="zoom:67%;"> 
<br>
<p>- Show Members in Set</p>
<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607163547344.png" alt="image-20210607163547344" style="zoom:67%;"> 
<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607163615578.png" alt="image-20210607163615578" style="zoom:67%;"> 
</li>
</ul>
<br>
<ul>
<li>
<p><strong>Use as a filter</strong></p>
<p>Sets can by used as a reusable filter by dragging the set into the Filters shelf.</p>
<p>Any set you create can be used across all worksheets in a workbook.</p>
<br>
</li>
</ul>
<br>
<h2 id="3-combining-sets"><a class="markdownIt-Anchor" href="#3-combining-sets"></a> <strong>3. Combining Sets</strong></h2>
<p>A combined set allows you to compare multiple sets with one another to determine intersections or differences across the sets.</p>
<p>Notice: You can only combine sets that have been created with the same dimensions.</p>
<br>
<p><strong>Steps for combining sets:</strong></p>
<ul>
<li>
<p>Select sets to combine</p>
</li>
<li>
<p>right-click --&gt; [Create Combined Set]</p>
<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607164233557.png" alt="image-20210607164233557" style="zoom: 80%;"> 
</li>
<li>
<p>Choose the combine style in [Create Set] dialog box</p>
<img src="/images/S-Tableau-Intermediate-6-Using-Sets-to-Highlight-Data/image-20210607164427597.png" alt="image-20210607164427597" style="zoom:80%;"> 
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Start - (2) Introduction to Tableau Desktop</title>
    <url>/2021/06/28/S-Tableau-Start-2/</url>
    <content><![CDATA[<h1 id="introduction-to-tableau-desktop"><a class="markdownIt-Anchor" href="#introduction-to-tableau-desktop"></a> Introduction to Tableau Desktop</h1>
<p></p><ul class="markdownIt-TOC">
<li>
<ul>
<li>
<ul>
<li><a href="#process-in-tableau-desktop"><strong>&gt;&gt; Process in Tableau Desktop</strong></a></li>
<li><a href="#several-ways-to-build-visualizations"><strong>&gt;&gt; Several Ways to Build Visualizations</strong></a></li>
<li><a href="#build-a-dashboard"><strong>&gt;&gt; Build a Dashboard</strong></a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h4 id="process-in-tableau-desktop"><a class="markdownIt-Anchor" href="#process-in-tableau-desktop"></a> <strong>&gt;&gt; Process in Tableau Desktop</strong></h4>
<p>Connecting To Your Data   --&gt;   Analyzing Your Data   --&gt;   Sharing Your Analysis</p>
<br>
<h4 id="several-ways-to-build-visualizations"><a class="markdownIt-Anchor" href="#several-ways-to-build-visualizations"></a> <strong>&gt;&gt; Several Ways to Build Visualizations</strong></h4>
<ul>
<li>Dragging or double-clicking to put fields on <strong>Rows</strong> or <strong>Columns</strong>.</li>
<li>Dragging fields to the <strong>Marks</strong> card.</li>
<li>Dragging fields to the <strong>View</strong>.</li>
<li>Selecting fields and clicking on a chart type in <strong>Show Me</strong>.</li>
</ul>
<br>
<h4 id="build-a-dashboard"><a class="markdownIt-Anchor" href="#build-a-dashboard"></a> <strong>&gt;&gt; Build a Dashboard</strong></h4>
<ol>
<li>
<p><strong><font color="darkblue">Select worksheets to show in the dashboard</font></strong></p>
</li>
<li>
<p><strong><font color="darkblue">Fine-tune a dashboard</font></strong></p>
<ul>
<li>
<p>Adjust the views to fit the dashboard space</p>
<img src="/images/S-Tableau-Start-2/image-20210518141001749.png" alt="image-20210518141001749" style="zoom: 50%;">
<img src="/images/S-Tableau-Start-2/image-20210518141304834.png" alt="image-20210518141304834" style="zoom:50%;">
<br>
</li>
<li>
<p>Set a chart to be used as a filter for other charts</p>
<img src="/images/S-Tableau-Start-2/image-20210518141603210.png" alt="image-20210518141603210" style="zoom:50%;">
  <br>
</li>
<li>
<p>Add a dashboard title and instructions</p>
<p>​         <img src="/images/S-Tableau-Start-2/image-20210518141956876.png" alt="image-20210518141956876" style="zoom: 50%;">  – Double Click the Title-- <img src="/images/S-Tableau-Start-2/image-20210518142018617-16298781617561.png" alt="image-20210518142018617" style="zoom:60%;"></p>
<br>
</li>
</ul>
</li>
<li>
<p><strong><font color="darkblue">Save a dashboard</font></strong></p>
<ul>
<li><em>.twb (Tableau Workbook)</em> :  without copy of the data source file</li>
<li><em>.twbx (Tableau Packaged Workbook)</em> : includes a copy of the data file and any other source files</li>
</ul>
</li>
</ol>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 1. Start</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Intermediate (9) Advanced Calculations Aggregating Dimensions</title>
    <url>/2022/06/27/S-Tableau-Intermediate-9-Advanced-Calculations-Aggregating-Dimensions/</url>
    <content><![CDATA[<h1 id="advanced-calculations-aggregating-dimensions"><a class="markdownIt-Anchor" href="#advanced-calculations-aggregating-dimensions"></a> Advanced Calculations: Aggregating Dimensions</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-three-situations-that-dimension-aggregations-are-needed">1. Three situations that dimension aggregations are needed</a></li>
<li><a href="#2-three-ways-to-aggregate-dimensions">2. Three ways to aggregate dimensions</a></li>
<li><a href="#3-five-types-of-aggregations-that-can-be-applied-to-dimensions">3. Five types of aggregations that can be applied to dimensions</a></li>
</ul>
<p></p>
<br>
<h2 id="1-three-situations-that-dimension-aggregations-are-needed"><a class="markdownIt-Anchor" href="#1-three-situations-that-dimension-aggregations-are-needed"></a> 1. Three situations that dimension aggregations are needed</h2>
<ol>
<li>When blending multiple data sources
<ul>
<li>When blending multiple data sources in which the dimensions don’t have a consistent level of detail, Tableau will aggregate the linked dimensions to the same level of detail</li>
</ul>
</li>
<li>In calculations
<ul>
<li>When dimensions are used in calculations with aggregated measures, they must be aggregated</li>
<li>Tableau can’t mix aggregate and non-aggregate comparisons in calculations</li>
</ul>
</li>
<li>When you just want to know the aggregation of a dimension</li>
</ol>
<br>
<h2 id="2-three-ways-to-aggregate-dimensions"><a class="markdownIt-Anchor" href="#2-three-ways-to-aggregate-dimensions"></a> 2. Three ways to aggregate dimensions</h2>
<ol>
<li>
<p>Aggregated in a calculated field</p>
</li>
<li>
<p>Aggregated by right-clicking and dragging the dimension into the view</p>
<p>​							<img src="/images/S-Tableau-Intermediate-9-Advanced-Calculations-Aggregating-Dimensions/image-20210608162432334.png" alt="image-20210608162432334" style="zoom:80%;"></p>
</li>
<li>
<p>Aggregated after they are added to the view by using the context menu</p>
<p>[dimension] field --&gt; drop-down menu --&gt; Attribute / [Measure]</p>
<p>​		<img src="/images/S-Tableau-Intermediate-9-Advanced-Calculations-Aggregating-Dimensions/image-20210608162831618.png" alt="image-20210608162831618" style="zoom:80%;"></p>
</li>
</ol>
<br>
<br>
<h2 id="3-five-types-of-aggregations-that-can-be-applied-to-dimensions"><a class="markdownIt-Anchor" href="#3-five-types-of-aggregations-that-can-be-applied-to-dimensions"></a> 3. Five types of aggregations that can be applied to dimensions</h2>
<ol>
<li>Minimum <font color="blue">[dimension]</font>
<ul>
<li>returns the first alphabetic value (the top of the list)</li>
</ul>
</li>
<li>Maximum <font color="blue">[dimension]</font>
<ul>
<li>returns the last alphabetic value (the last of the list)</li>
</ul>
</li>
<li>Count <font color="viridens">[measure]</font>
<ul>
<li>returns the total number of entries in the field</li>
</ul>
</li>
<li>Count (Distinct) <font color="viridens">[measure]</font>
<ul>
<li>returns the total number of unique entries in the field</li>
</ul>
</li>
<li>Attribute
<ul>
<li>if it has a single value for all rows --&gt; returns the value of the expression</li>
<li>otherwise --&gt; returns an asterisk (*)</li>
</ul>
</li>
</ol>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 3. Intermediate</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>Tableau &gt;&gt; Start - (1) Basics of Reading Data</title>
    <url>/2021/06/28/S-Tableau-Start-1/</url>
    <content><![CDATA[<h1 id="basics-of-reading-data"><a class="markdownIt-Anchor" href="#basics-of-reading-data"></a> Basics of Reading Data</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-understanding-basic-data-concepts"><strong>1. Understanding Basic Data Concepts</strong></a>
<ul>
<li><a href="#1-1-data-sources">1-1. Data Sources</a></li>
<li><a href="#1-2-data-field">1-2. Data Field</a></li>
</ul>
</li>
<li><a href="#2-understanding-data-structure-details"><strong>2. Understanding Data Structure Details</strong></a>
<ul>
<li><a href="#2-1-granularity-and-aggregation-in-tableau">2-1. Granularity and Aggregation in Tableau</a></li>
<li><a href="#2-2-how-data-is-represented-in-tableau">2-2. How data is represented in Tableau</a>
<ul>
<li><a href="#1-dimensions-measures">1. Dimensions &amp; Measures</a></li>
<li><a href="#2-discrete-continuous">2. Discrete &amp; Continuous</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-reading-common-chart-types"><strong>3. Reading Common Chart Types</strong></a>
<ul>
<li><a href="#3-1-overview-to-reading-charts">3-1. Overview to reading charts</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-understanding-basic-data-concepts"><a class="markdownIt-Anchor" href="#1-understanding-basic-data-concepts"></a> <strong>1. Understanding Basic Data Concepts</strong></h2>
<h3 id="1-1-data-sources"><a class="markdownIt-Anchor" href="#1-1-data-sources"></a> 1-1. Data Sources</h3>
<p><strong>&gt;&gt; Common types of data sets</strong></p>
<ul>
<li><strong>Spreadsheets:</strong>
<ul>
<li>e.g.: Excel, Google Sheets</li>
<li>the records are stored as single rows of data</li>
</ul>
</li>
<li><strong>Relational Databases:</strong>
<ul>
<li>store data in multiple tables</li>
<li>“relational”: logical connection between tables</li>
<li>users pull data from different tables using SQL</li>
</ul>
</li>
<li><strong>Cloud Data:</strong>
<ul>
<li>e.g.: AWS, Microsoft Azure, Salesforce</li>
</ul>
</li>
<li><strong>Other Types:</strong>
<ul>
<li>.kml, .shp, created in R</li>
</ul>
</li>
</ul>
<br>
<h3 id="1-2-data-field"><a class="markdownIt-Anchor" href="#1-2-data-field"></a> 1-2. Data Field</h3>
<p>&gt;&gt; A field = A column</p>
<p>&gt;&gt; Data Field automatically assigned a <em><strong>Role</strong></em> and a  <em><strong>Type</strong></em></p>
<ul>
<li><strong>Role</strong>: “<em>Dimension</em>” or “<em>Measure</em>”
<ul>
<li><font color="blue"><em>Dimension</em></font>: qualitative fields / (categorical data)   * blue in tableau</li>
<li><font color="green"><em>Measure</em></font>: quantitative fields / (numerical data)      * green in tableau</li>
</ul>
</li>
<li><strong>Type</strong>: String, Integer, Date, Date&amp;Time, Boolean, Geographic, Mixed or cluster</li>
</ul>
<br>
<br>
<h2 id="2-understanding-data-structure-details"><a class="markdownIt-Anchor" href="#2-understanding-data-structure-details"></a> <strong>2. Understanding Data Structure Details</strong></h2>
<h3 id="2-1-granularity-and-aggregation-in-tableau"><a class="markdownIt-Anchor" href="#2-1-granularity-and-aggregation-in-tableau"></a> 2-1. Granularity and Aggregation in Tableau</h3>
<p><strong>&gt;&gt; Data granularity(数据粒度):</strong> the level of detail for a piece of data</p>
<ul>
<li>Less granular: describe as an <em>aggregation</em> / <em>aggregated data</em></li>
</ul>
<br>
<p><strong>&gt;&gt; move dimensions &amp; measures in /out of a view --&gt; level of details changes</strong></p>
<ul>
<li><strong>Dimensions:</strong> break down aggregated total by category</li>
<li><strong>Measures:</strong> aggregated as SUM (default), or average, median…</li>
</ul>
<br>
<p><strong>&gt;&gt; “SUM(Profit)/SUM(Sales)”  VS  "Profit/Sales"</strong></p>
<p><font color="red">Caution the trap of granularity</font> when aggregating</p>
<ul>
<li>“SUM(Profit) / SUM(Sales)”   [correct]
<ol>
<li>first <font color="blue">sums</font> the profits and sales <font color="blue">to</font> whatever <font color="blue">the granularity of the view is</font></li>
<li><font color="blue">then computes</font> the ratio at <font color="blue">that</font> aggregation</li>
</ol>
</li>
<li>“Profit / Sales”  [incorrect]
<ol>
<li>first <font color="blue">compute</font> the profit ratio <font color="blue">at the lowest level of granularity</font></li>
<li><font color="blue">then sum</font> the ratio <font color="blue">to the requested aggregation</font> of the view</li>
</ol>
</li>
</ul>
<br>
<h3 id="2-2-how-data-is-represented-in-tableau"><a class="markdownIt-Anchor" href="#2-2-how-data-is-represented-in-tableau"></a> 2-2. How data is represented in Tableau</h3>
<h4 id="1-dimensions-measures"><a class="markdownIt-Anchor" href="#1-dimensions-measures"></a> 1. Dimensions &amp; Measures</h4>
<ul>
<li>
<p>Measures: aggregations</p>
<p>- aggregated up to the granularity set by the dimensions in the view</p>
</li>
<li>
<p>Dimensions: categorical fields</p>
<p>- set the granularity, or the level of detail</p>
</li>
</ul>
<br>
<h4 id="2-discrete-continuous"><a class="markdownIt-Anchor" href="#2-discrete-continuous"></a> 2. Discrete &amp; Continuous</h4>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">Discrete</th>
<th style="text-align:center">Continuous</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>Value</strong></td>
<td style="text-align:center">have distinct, separate values</td>
<td style="text-align:center">take on any value in a range</td>
</tr>
<tr>
<td style="text-align:center"><strong>Color</strong></td>
<td style="text-align:center"><font color="blue">Blue</font></td>
<td style="text-align:center"><font color="viridans">Green</font></td>
</tr>
<tr>
<td style="text-align:center"><strong>Label <br>vs<br> Axis</strong></td>
<td style="text-align:center">Label<br><br><img src="/images/S-Tableau-Start-1/image-20210517161223334.png" alt="image-20210517161223334" style="zoom:50%;"><br><br><em><font color="gray">Market(discrete)</font></em></td>
<td style="text-align:center">Axis<br><br><img src="/images/S-Tableau-Start-1/image-20210517160710233.png" alt="image-20210517160710233" style="zoom:50%;"><br> <br><em><font color="gray">profit (continuous)</font></em></td>
</tr>
<tr>
<td style="text-align:center"><strong>Color</strong></td>
<td style="text-align:center">Color Palette<br><br><img src="/images/S-Tableau-Start-1/image-20210517161958731.png" alt="image-20210517161958731" style="zoom:25%;"><br><br><em><font color="gray">SUM(Sales - discrete)</font></em></td>
<td style="text-align:center">Color Gradient<br><br><img src="/images/S-Tableau-Start-1/image-20210517162028994.png" alt="image-20210517162028994" style="zoom:25%;"><br> <br><em><font color="gray">SUM(Sales - continuous)</font></em></td>
</tr>
<tr>
<td style="text-align:center"><strong>Color <br>&amp; <br>Maps</strong></td>
<td style="text-align:center">A <strong>Dimension</strong> on color – <strong>"Symbol Map"</strong><br><br><img src="/images/S-Tableau-Start-1/image-20210517162753289.png" alt="image-20210517162753289" style="zoom:67%;"><br>A <strong>Measure</strong> on color – <strong>"Filled Map"</strong><br><br><img src="/images/S-Tableau-Start-1/image-20210517162915695.png" alt="image-20210517162915695" style="zoom: 67%;"><br></td>
<td style="text-align:center">A <strong>Dimension</strong> on color – <strong>"Symbol Map"</strong><br><br><img src="/images/S-Tableau-Start-1/image-20210517163002064.png" alt="image-20210517163002064" style="zoom:67%;"><br>A <strong>Measure</strong> on color – <strong>"Filled Map"</strong><br><br><img src="/images/S-Tableau-Start-1/image-20210517163033554.png" alt="image-20210517163033554" style="zoom:67%;"><br></td>
</tr>
<tr>
<td style="text-align:center"><strong>Dates</strong></td>
<td style="text-align:center"><img src="/images/S-Tableau-Start-1/image-20210517163347483.png" alt="image-20210517163347483" style="zoom: 50%;"></td>
<td style="text-align:center"><img src="/images/S-Tableau-Start-1/image-20210517163408062.png" alt="image-20210517163408062" style="zoom:50%;"></td>
</tr>
<tr>
<td style="text-align:center"><strong>Filtering</strong></td>
<td style="text-align:center">List<br><br><img src="/images/S-Tableau-Start-1/image-20210517163617518.png" alt="image-20210517163617518" style="zoom: 67%;"></td>
<td style="text-align:center">Range<br><br><img src="/images/S-Tableau-Start-1/image-20210517163720510.png" alt="image-20210517163720510" style="zoom:67%;"></td>
</tr>
</tbody>
</table>
<br>
<br>
<h2 id="3-reading-common-chart-types"><a class="markdownIt-Anchor" href="#3-reading-common-chart-types"></a> <strong>3. Reading Common Chart Types</strong></h2>
<h3 id="3-1-overview-to-reading-charts"><a class="markdownIt-Anchor" href="#3-1-overview-to-reading-charts"></a> 3-1. Overview to reading charts</h3>
<p><strong>&gt;&gt; Elements of Charts</strong></p>
<ul>
<li>Quantitative Axis / Qualitative Axis</li>
<li>Marks (View화면에서 Data를 표현하는 도구)</li>
<li>Labels (축에 표시되는 값)</li>
<li>Filter (Side bar)</li>
<li>Legend (Side bar)</li>
<li>Tooltip (show details about the data when clicking a mark)</li>
</ul>
<br>
<p><strong>&gt;&gt; Appropriate Purpose</strong></p>
<ul>
<li>
<p>Bar Charts: Comparing categories of data</p>
</li>
<li>
<p>Line Charts: Viewing data over time</p>
</li>
<li>
<p>Scatter Plots: Viewing data relationships and outliers</p>
</li>
</ul>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Tableau】</category>
        <category>Tableau - 1. Start</category>
      </categories>
      <tags>
        <tag>Tableau</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Pandas 전처리 -- 부동산 데이터</title>
    <url>/2020/06/22/E-Python-Pandas-Pre-1/</url>
    <content><![CDATA[<h1 id="pandas-전처리-실습-부동산-데이터"><a class="markdownIt-Anchor" href="#pandas-전처리-실습-부동산-데이터"></a> &lt;Pandas 전처리&gt; 실습 – 부동산 데이터</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EC%83%98%ED%94%8C%EB%8D%B0%EC%9D%B4%ED%84%B0"><strong>0. 샘플데이터</strong></a></li>
<li><a href="#1-column-%EC%9D%B4%EB%A6%84-%EC%A0%9C%EC%A0%95%EC%9D%98-rename"><strong>1. column 이름 제정의 (rename)</strong></a></li>
<li><a href="#2-data-overview"><strong>2. Data Overview</strong></a>
<ul>
<li><a href="#2-1-data-shape-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-1. Data Shape 확인하기</a></li>
<li><a href="#2-2-%EA%B1%B8%EC%B8%A1%EA%B0%92%EA%B3%BC-data-type-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-2. 걸측값과 Data Type 확인하기</a></li>
<li><a href="#2-3-%ED%86%B5%EA%B3%84%EA%B0%92-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-3. 통계값 확인하기</a></li>
</ul>
</li>
<li><a href="#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98"><strong>3. 데이터 타입 변환</strong></a>
<ul>
<li><a href="#3-1-strstrip%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B3%B5%EB%B0%B1%EC%9D%B4-%EC%9E%88%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B3%B5%EB%B0%B1-%EC%97%86%EC%95%A0%EA%B8%B0">3-1. str.strip()을 활용하여 공백이 있는 데이터의 공백 없애기</a></li>
<li><a href="#3-2-%EB%B9%88-%EA%B3%B5%EB%B0%B1%EC%97%90-0%EC%9D%84-%EB%84%A3%EC%96%B4%EC%A3%BC%EA%B8%B0">3-2. 빈 공백에 0을 넣어주기</a></li>
<li><a href="#3-3-nan-%EA%B0%92%EC%9D%80-fillna%EB%A1%9C-%EC%B1%84%EC%9B%8C%EC%A3%BC%EA%B8%B0">3-3. NaN 값은 fillna로 채워주기</a></li>
<li><a href="#3-4-strreplace-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EC%BD%A4%EB%A7%88%EB%A5%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-4. str.replace() 를 활용하여 콤마를 제거하기</a></li>
<li><a href="#3-5-strreplace%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-5. str.replace()를 활용하여 “-” 제거하기</a></li>
<li><a href="#3-6-%EA%B7%9C%EB%AA%A8%EA%B5%AC%EB%B6%84-column%EC%97%90-%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%84%EC%9A%A9%EB%A9%B4%EC%A0%81-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-6. 규모구분 column에 불필요한 “전용면적” 제거하기</a></li>
</ul>
</li>
<li><a href="#4-%EC%A0%84%EC%B2%98%EB%A6%AC-%EB%82%B4%EC%9A%A9-%EB%B3%B5%EC%8A%B5%ED%95%98%EA%B8%B0"><strong>4. 전처리 내용 복습하기</strong></a></li>
<li><a href="#5-%EC%A7%80%EC%97%AD%EB%B3%84-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0"><strong>5. 지역별 분양가격을 확인해보기</strong></a>
<ul>
<li><a href="#5-1-%EC%A7%80%EC%97%AD%EB%B3%84-%ED%8F%89%EA%B7%A0-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-1. 지역별 평균 분양가격 확인해보기</a></li>
<li><a href="#5-2-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%B4-100%EB%B3%B4%EB%8B%A4-%EC%9E%91%EC%9D%80-%ED%96%89%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%B4%EB%B3%B4%EA%B8%B0">5-2. 분양가격이 100보다 작은 행을 제거해보기</a></li>
<li><a href="#5-3-%EC%A7%80%EC%97%AD%EB%B3%84-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B0%AF%EC%88%98%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-3. 지역별 “분양가격” 데이터의 갯수를 확인해보기</a></li>
<li><a href="#5-4-%EC%A7%80%EC%97%AD%EB%B3%84-%EC%A0%9C%EC%9D%BC-%EB%B9%84%EC%8B%BC-%EB%B6%84%EC%96%91%EA%B0%80%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-4. 지역별 제일 비싼 분양가를 확인해보기</a></li>
</ul>
</li>
<li><a href="#6-%EC%97%B0%EB%8F%84%EB%B3%84-%ED%8F%89%EA%B7%A0-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0"><strong>6. 연도별 평균 분양가격을 확인해보기</strong></a></li>
<li><a href="#7-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0"><strong>7. 피벗테이블 활용하기</strong></a></li>
<li><a href="#8-%EC%97%B0%EB%8F%84%EB%B3%84-%EA%B7%9C%EB%AA%A8%EB%B3%84-%EA%B0%80%EA%B2%A9%EC%9D%84-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>8. 연도별, 규모별 가격을 알아보기</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="0-샘플데이터"><a class="markdownIt-Anchor" href="#0-샘플데이터"></a> <strong>0. 샘플데이터</strong></h2>
<p><a href="https://www.data.go.kr/" target="_blank" rel="noopener">공공데이터포털</a> 에서 제공하는 공공데이터 “민간 아파트 가격동향” 를 활용한다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"seoul_house_price.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격(㎡)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
<p><br><br></p>
<h2 id="1-column-이름-제정의-rename"><a class="markdownIt-Anchor" href="#1-column-이름-제정의-rename"></a> <strong>1. column 이름 제정의 (rename)</strong></h2>
<p><strong>[목표] 분양가격 column의 이름을 재정의:</strong></p>
<blockquote>
<p>“분양가격(m<sup>2</sup>)​” --&gt; “분양가격”</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.rename(columns = {<span class="string">"분양가격(㎡)"</span> : <span class="string">"분양가격"</span>})</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
<br>
 <br>
<h2 id="2-data-overview"><a class="markdownIt-Anchor" href="#2-data-overview"></a> <strong>2. Data Overview</strong></h2>
<h3 id="2-1-data-shape-확인하기"><a class="markdownIt-Anchor" href="#2-1-data-shape-확인하기"></a> 2-1. Data Shape 확인하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4505, 5)
</code></pre>
<br>
<h3 id="2-2-걸측값과-data-type-확인하기"><a class="markdownIt-Anchor" href="#2-2-걸측값과-data-type-확인하기"></a> 2-2. 걸측값과 Data Type 확인하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4505 entries, 0 to 4504
Data columns (total 5 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   지역명     4505 non-null   object
 1   규모구분    4505 non-null   object
 2   연도      4505 non-null   int64 
 3   월       4505 non-null   int64 
 4   분양가격    4210 non-null   object
dtypes: int64(2), object(3)
memory usage: 176.1+ KB
</code></pre>
<br>
<h3 id="2-3-통계값-확인하기"><a class="markdownIt-Anchor" href="#2-3-통계값-확인하기"></a> 2-3. 통계값 확인하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>연도</th>
      <th>월</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>4505.000000</td>
      <td>4505.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>2017.452830</td>
      <td>6.566038</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.311432</td>
      <td>3.595519</td>
    </tr>
    <tr>
      <th>min</th>
      <td>2015.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>2016.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>2017.000000</td>
      <td>7.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>2019.000000</td>
      <td>10.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>2020.000000</td>
      <td>12.000000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
 <br>
<h2 id="3-데이터-타입-변환"><a class="markdownIt-Anchor" href="#3-데이터-타입-변환"></a> <strong>3. 데이터 타입 변환</strong></h2>
<p><strong>[목표] &lt;object 타입&gt;으로 되어있는 "분양가격"을 &lt;int 타입&gt;으로 변환하기</strong></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-193-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: invalid literal for int() with base 10: '  '
</code></pre>
<br>
<blockquote>
<p>!! “분양가격” column에 <font color="blue">“2칸 공백” 값이 있어서</font> Error가 납니다</p>
</blockquote>
  <br>
<h3 id="3-1-strstrip을-활용하여-공백이-있는-데이터의-공백-없애기"><a class="markdownIt-Anchor" href="#3-1-strstrip을-활용하여-공백이-있는-데이터의-공백-없애기"></a> 3-1. str.strip()을 활용하여 공백이 있는 데이터의 공백 없애기</h3>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.str.strip()</strong></p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">'  '</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>28</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>29</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>34</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>81</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>113</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>114</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>119</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>166</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>198</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>199</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>204</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>251</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>283</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>284</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>289</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>336</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.strip(<span class="string">'  '</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-2-빈-공백에-0을-넣어주기"><a class="markdownIt-Anchor" href="#3-2-빈-공백에-0을-넣어주기"></a> 3-2. 빈 공백에 0을 넣어주기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">''</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-198-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: cannot convert float NaN to integer
</code></pre>
<br>
<blockquote>
<p>!! “분양가격” column에 <font color="blue">“NaN” 값이 있어서</font> Error가 또 납니다 ㅠㅠ</p>
</blockquote>
<br>  
<h3 id="3-3-nan-값은-fillna로-채워주기"><a class="markdownIt-Anchor" href="#3-3-nan-값은-fillna로-채워주기"></a> 3-3. NaN 값은 fillna로 채워주기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>368</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>369</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>374</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>388</th>
      <td>강원</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>421</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4461</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4488</th>
      <td>전남</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4493</th>
      <td>경북</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4499</th>
      <td>경남</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
<p>295 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-203-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: invalid literal for int() with base 10: '6,657'
</code></pre>
<br>
<blockquote>
<p>!! 이번에는 <font color="blue">","가 들어간</font> 데이터가 문제네요…</p>
</blockquote>
  <br>
<h3 id="3-4-strreplace-를-활용하여-콤마를-제거하기"><a class="markdownIt-Anchor" href="#3-4-strreplace-를-활용하여-콤마를-제거하기"></a> 3-4. str.replace() 를 활용하여 콤마를 제거하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">"6,657"</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2125</th>
      <td>서울</td>
      <td>전체</td>
      <td>2017</td>
      <td>11</td>
      <td>6,657</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.replace(<span class="string">','</span>, <span class="string">''</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-206-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: cannot convert float NaN to integer
</code></pre>
<br>
<blockquote>
<p>!! 다시 NaN값이 생겨서 fillna로 채워줍니다.</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-208-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: invalid literal for int() with base 10: '-'
</code></pre>
<br>
<blockquote>
<p>!! 이번에는 <font color="blue">"-"가</font> 멀썽이네요…</p>
</blockquote>
 <br>
<h3 id="3-5-strreplace를-활용하여-제거하기"><a class="markdownIt-Anchor" href="#3-5-strreplace를-활용하여-제거하기"></a> 3-5. str.replace()를 활용하여 “-” 제거하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">""</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-211-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: cannot convert float NaN to integer
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4505 entries, 0 to 4504
Data columns (total 5 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   지역명     4505 non-null   object
 1   규모구분    4505 non-null   object
 2   연도      4505 non-null   int64 
 3   월       4505 non-null   int64 
 4   분양가격    4505 non-null   int32 
dtypes: int32(1), int64(2), object(2)
memory usage: 158.5+ KB
</code></pre>
<br>
<blockquote>
<p>이제 드디어 “분양가격” column의 Type을 int로 성공적으로 바꿨습니다!!!</p>
</blockquote>
<br>
<h3 id="3-6-규모구분-column에-불필요한-전용면적-제거하기"><a class="markdownIt-Anchor" href="#3-6-규모구분-column에-불필요한-전용면적-제거하기"></a> 3-6. 규모구분 column에 불필요한 “전용면적” 제거하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"규모구분"</span>] = df[<span class="string">"규모구분"</span>].str.replace(<span class="string">"전용면적"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
   <br>
<h2 id="4-전처리-내용-복습하기"><a class="markdownIt-Anchor" href="#4-전처리-내용-복습하기"></a> <strong>4. 전처리 내용 복습하기</strong></h2>
<p><strong>방급 진행 했던 전처리 과정을 복습해봅시다!</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">"seoul_house_price.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
   <br>
<p><strong>(1) 콤마가 있는 경우</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.str.replace</strong> (’,’, ‘’)</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.iloc[<span class="number">2125</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명           서울
규모구분          전체
연도          2017
월             11
분양가격(㎡)    6,657
Name: 2125, dtype: object
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df2.rename(columns = {<span class="string">"분양가격(㎡)"</span> : <span class="string">"분양가격"</span>})</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.replace(<span class="string">","</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.iloc[<span class="number">2125</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명       서울
규모구분      전체
연도      2017
월         11
분양가격    6657
Name: 2125, dtype: object
</code></pre>
 <br>
<p><strong>(2) - 가 있는 경우</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] **.str.replace(’-’, ‘’)</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"-"</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3683</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3686</th>
      <td>대전</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3688</th>
      <td>대전</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3690</th>
      <td>울산</td>
      <td>전체</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3691</th>
      <td>울산</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3692</th>
      <td>울산</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3693</th>
      <td>울산</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3694</th>
      <td>울산</td>
      <td>전용면적 102㎡초과</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3696</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"-"</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
 <br>
<p><strong>(3) 공백이 2개 들어간 경우</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] **.str.strip("  ")</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>28</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>29</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>34</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>81</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>113</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>114</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>119</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>166</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>198</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>199</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>204</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>251</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>283</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>284</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>289</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>336</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.strip(<span class="string">"  "</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
  <br> 
<p><strong>(4) 빈 칸을 0으로 채우기</strong></p>
<blockquote>
<p><em>df_name</em>.loc [ <em>df_name</em> [ “<em>col_name</em>” ] == “” , “<em>col_name</em>”] = 0</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>28</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>29</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>34</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>81</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>113</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>114</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>119</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>166</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>198</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>199</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>204</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>251</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>283</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>284</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>289</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>336</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>3683</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3686</th>
      <td>대전</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3688</th>
      <td>대전</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3690</th>
      <td>울산</td>
      <td>전체</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3691</th>
      <td>울산</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3692</th>
      <td>울산</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3693</th>
      <td>울산</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3694</th>
      <td>울산</td>
      <td>전용면적 102㎡초과</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3696</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
 <br>  
<p><strong>(5) NaN 값을 0으로 바꾸기</strong></p>
<blockquote>
<p><em>df_name</em>.loc [ <em>df_name</em> [ “<em>col_name</em>” ] <strong>.isna()</strong> ]<br>
<em>df_name</em> [ “<em>col_name</em>” ].fillna(0)</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>368</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>369</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>374</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>388</th>
      <td>강원</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>421</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4461</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4488</th>
      <td>전남</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4493</th>
      <td>경북</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4499</th>
      <td>경남</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
<p>295 rows × 5 columns</p>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
 <br>  
<p><strong>(6) column type 바꾸기</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.astype(…)</strong></p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       5841
1       5652
2       5882
3       5721
4       5879
        ... 
4500    3955
4501    4039
4502    3962
4503       0
4504    3601
Name: 분양가격, Length: 4505, dtype: int32
</code></pre>
 <br>
   <br>
<h2 id="5-지역별-분양가격을-확인해보기"><a class="markdownIt-Anchor" href="#5-지역별-분양가격을-확인해보기"></a> <strong>5. 지역별 분양가격을 확인해보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4505 entries, 0 to 4504
Data columns (total 5 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   지역명     4505 non-null   object
 1   규모구분    4505 non-null   object
 2   연도      4505 non-null   int64 
 3   월       4505 non-null   int64 
 4   분양가격    4505 non-null   int32 
dtypes: int32(1), int64(2), object(2)
memory usage: 158.5+ KB
</code></pre>
 <br>
<h3 id="5-1-지역별-평균-분양가격-확인해보기"><a class="markdownIt-Anchor" href="#5-1-지역별-평균-분양가격-확인해보기"></a> 5-1. 지역별 평균 분양가격 확인해보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원    2339.807547
경기    4072.667925
경남    2761.275472
경북    2432.128302
광주    2450.728302
대구    3538.920755
대전    2479.135849
부산    3679.920755
서울    7225.762264
세종    2815.098113
울산    1826.101887
인천    3578.433962
전남    2270.177358
전북    2322.060377
제주    2979.407547
충남    2388.324528
충북    2316.871698
Name: 분양가격, dtype: float64
</code></pre>
  <br> 
<h3 id="5-2-분양가격이-100보다-작은-행을-제거해보기"><a class="markdownIt-Anchor" href="#5-2-분양가격이-100보다-작은-행을-제거해보기"></a> 5-2. 분양가격이 100보다 작은 행을 제거해보기</h3>
<blockquote>
<p>특정 조건에 만족하는 행을 제거하고자 할 때는</p>
<ol>
<li>index를 list로 가져온다
<ul>
<li><em>idx</em> = df.loc [ <em>조건식</em> ] <strong>.index</strong></li>
</ul>
</li>
<li>drop을 활용하여 행을 제거한다
<ul>
<li><em>df_name</em> = <em>df_name</em> <strong>.drop</strong> (<em>idx</em>, axis = 0)</li>
</ul>
</li>
</ol>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx = df.loc[df[<span class="string">"분양가격"</span>] &lt; <span class="number">100</span>].index</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Int64Index([  28,   29,   34,   81,  113,  114,  119,  166,  198,  199,
            ...
            4418, 4448, 4453, 4458, 4459, 4461, 4488, 4493, 4499, 4503],
           dtype='int64', length=320)
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.drop(idx, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4498</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4185 rows × 5 columns</p>
</div>
   <br>
<p>다시 한 번 지역명으로 group을 묶어 분양가격을 확인해보자!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원    2412.642023
경기    4072.667925
경남    2814.376923
경북    2547.486166
광주    3049.028169
대구    3663.335938
대전    3128.433333
부산    3679.920755
서울    7225.762264
세종    2984.004000
울산    3043.503145
인천    3633.275862
전남    2304.969349
전북    2348.648855
제주    3432.795652
충남    2501.604743
충북    2316.871698
Name: 분양가격, dtype: float64
</code></pre>
 <br>
<h3 id="5-3-지역별-분양가격-데이터의-갯수를-확인해보기"><a class="markdownIt-Anchor" href="#5-3-지역별-분양가격-데이터의-갯수를-확인해보기"></a> 5-3. 지역별 “분양가격” 데이터의 갯수를 확인해보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].count()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원    257
경기    265
경남    260
경북    253
광주    213
대구    256
대전    210
부산    265
서울    265
세종    250
울산    159
인천    261
전남    261
전북    262
제주    230
충남    253
충북    265
Name: 분양가격, dtype: int64
</code></pre>
 <br>  
<h3 id="5-4-지역별-제일-비싼-분양가를-확인해보기"><a class="markdownIt-Anchor" href="#5-4-지역별-제일-비싼-분양가를-확인해보기"></a> 5-4. 지역별 제일 비싼 분양가를 확인해보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].max()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원     3906
경기     5670
경남     4303
경북     3457
광주     4881
대구     5158
대전     4877
부산     4623
서울    13835
세종     3931
울산     3594
인천     5188
전남     3053
전북     3052
제주     5462
충남     3201
충북     2855
Name: 분양가격, dtype: int32
</code></pre>
<p><br>  <br></p>
<h2 id="6-연도별-평균-분양가격을-확인해보기"><a class="markdownIt-Anchor" href="#6-연도별-평균-분양가격을-확인해보기"></a> <strong>6. 연도별 평균 분양가격을 확인해보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"연도"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>연도
2015    2788.707819
2016    2934.250000
2017    3143.311795
2018    3326.951034
2019    3693.422149
2020    3853.960526
Name: 분양가격, dtype: float64
</code></pre>
 <br>
   <br>
<h2 id="7-피벗테이블-활용하기"><a class="markdownIt-Anchor" href="#7-피벗테이블-활용하기"></a> <strong>7. 피벗테이블 활용하기</strong></h2>
<ul>
<li>
<p><strong>행 인덱스:</strong> 연도</p>
</li>
<li>
<p><strong>열 인덱스:</strong> 규모구분</p>
</li>
<li>
<p><strong>값:</strong> 분양가 (평균)</p>
 <br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"연도"</span>, columns = <span class="string">"규모구분"</span>, values = <span class="string">"분양가격"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>규모구분</th>
      <th>102㎡초과</th>
      <th>60㎡이하</th>
      <th>60㎡초과 85㎡이하</th>
      <th>85㎡초과 102㎡이하</th>
      <th>전체</th>
    </tr>
    <tr>
      <th>연도</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2015</th>
      <td>2980.977778</td>
      <td>2712.583333</td>
      <td>2694.490196</td>
      <td>2884.395833</td>
      <td>2694.862745</td>
    </tr>
    <tr>
      <th>2016</th>
      <td>3148.099476</td>
      <td>2848.144279</td>
      <td>2816.965686</td>
      <td>3067.380435</td>
      <td>2816.073529</td>
    </tr>
    <tr>
      <th>2017</th>
      <td>3427.649746</td>
      <td>3112.538071</td>
      <td>2981.950980</td>
      <td>3204.075145</td>
      <td>3008.279412</td>
    </tr>
    <tr>
      <th>2018</th>
      <td>3468.355932</td>
      <td>3286.184783</td>
      <td>3227.458128</td>
      <td>3467.184211</td>
      <td>3235.098522</td>
    </tr>
    <tr>
      <th>2019</th>
      <td>4039.854839</td>
      <td>3486.910112</td>
      <td>3538.545918</td>
      <td>3933.538462</td>
      <td>3515.974490</td>
    </tr>
    <tr>
      <th>2020</th>
      <td>4187.566667</td>
      <td>3615.968750</td>
      <td>3594.852941</td>
      <td>4532.090909</td>
      <td>3603.911765</td>
    </tr>
  </tbody>
</table>
</div>
<p><br>  <br></p>
<h2 id="8-연도별-규모별-가격을-알아보기"><a class="markdownIt-Anchor" href="#8-연도별-규모별-가격을-알아보기"></a> <strong>8. 연도별, 규모별 가격을 알아보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby([<span class="string">"연도"</span>, <span class="string">"규모구분"</span>])[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>연도    규모구분         
2015   102㎡초과          2980.977778
       60㎡이하           2712.583333
       60㎡초과 85㎡이하     2694.490196
       85㎡초과 102㎡이하    2884.395833
      전체               2694.862745
2016   102㎡초과          3148.099476
       60㎡이하           2848.144279
       60㎡초과 85㎡이하     2816.965686
       85㎡초과 102㎡이하    3067.380435
      전체               2816.073529
2017   102㎡초과          3427.649746
       60㎡이하           3112.538071
       60㎡초과 85㎡이하     2981.950980
       85㎡초과 102㎡이하    3204.075145
      전체               3008.279412
2018   102㎡초과          3468.355932
       60㎡이하           3286.184783
       60㎡초과 85㎡이하     3227.458128
       85㎡초과 102㎡이하    3467.184211
      전체               3235.098522
2019   102㎡초과          4039.854839
       60㎡이하           3486.910112
       60㎡초과 85㎡이하     3538.545918
       85㎡초과 102㎡이하    3933.538462
      전체               3515.974490
2020   102㎡초과          4187.566667
       60㎡이하           3615.968750
       60㎡초과 85㎡이하     3594.852941
       85㎡초과 102㎡이하    4532.090909
      전체               3603.911765
Name: 분양가격, dtype: float64
</code></pre>
  <br> 
<p>예쁘게 출력이 안되어서 보기가 힘들때는 pd.DataFrame()으로 한 번 더 감싸주면 됩니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame(df.groupby([<span class="string">"연도"</span>, <span class="string">"규모구분"</span>])[<span class="string">"분양가격"</span>].mean())</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>분양가격</th>
    </tr>
    <tr>
      <th>연도</th>
      <th>규모구분</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="5" valign="top">2015</th>
      <th>102㎡초과</th>
      <td>2980.977778</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>2712.583333</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>2694.490196</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>2884.395833</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>2694.862745</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2016</th>
      <th>102㎡초과</th>
      <td>3148.099476</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>2848.144279</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>2816.965686</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3067.380435</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>2816.073529</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2017</th>
      <th>102㎡초과</th>
      <td>3427.649746</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3112.538071</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>2981.950980</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3204.075145</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3008.279412</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2018</th>
      <th>102㎡초과</th>
      <td>3468.355932</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3286.184783</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>3227.458128</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3467.184211</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3235.098522</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2019</th>
      <th>102㎡초과</th>
      <td>4039.854839</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3486.910112</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>3538.545918</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3933.538462</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3515.974490</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2020</th>
      <th>102㎡초과</th>
      <td>4187.566667</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3615.968750</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>3594.852941</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>4532.090909</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3603.911765</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
 <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (3) DataFrame의 합침 및 병합</title>
    <url>/2020/06/19/S-Python-Pandas-Pre3/</url>
    <content><![CDATA[<h1 id="dataframe의-합침-및-병합"><a class="markdownIt-Anchor" href="#dataframe의-합침-및-병합"></a> DataFrame의 합침 및 병합</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-dataframe-%ED%95%A9%EC%B9%98%EA%B8%B0-concat"><strong>1. DataFrame 합치기 (concat)</strong></a>
<ul>
<li><a href="#1-1-row-%EA%B8%B0%EC%A4%80-%ED%95%A9%EC%B9%98%EA%B8%B0-%EB%B0%91%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%A8">1-1. Row 기준 합치기 (밑으로 합침)</a></li>
<li><a href="#1-2-column-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0-%EC%98%86%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%A8">1-2. column 기준으로 합치기 (옆으로 합침)</a></li>
</ul>
</li>
<li><a href="#2-dataframe-%EB%B3%91%ED%95%A9%ED%95%98%EA%B8%B0-merge"><strong>2. DataFrame 병합하기 (merge)</strong></a>
<ul>
<li><a href="#2-0-%EC%98%88%EC%A0%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0">2-0. 예제 데이터 만들기</a></li>
<li><a href="#2-1-left-right-%EB%B0%A9%EC%8B%9D">2-1. left, right 방식</a></li>
<li><a href="#2-2-inner-outer-%EB%B0%A9%EC%8B%9D">2-2. inner, outer 방식</a></li>
<li><a href="#2-3-column%EB%AA%85%EC%9D%80-%EB%8B%A4%EB%A5%B4%EC%A7%80%EB%A7%8C-%EB%8F%99%EC%9D%BC%ED%95%9C-%EC%84%B1%EC%A7%88%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%B8-%EA%B2%BD%EC%9A%B0">2-3. column명은 다르지만, 동일한 성질의 데이터 인 경우?</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">'korean-idol-2.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<br>
<h2 id="1-dataframe-합치기-concat"><a class="markdownIt-Anchor" href="#1-dataframe-합치기-concat"></a> <strong>1. DataFrame 합치기 (concat)</strong></h2>
<h3 id="1-1-row-기준-합치기-밑으로-합침"><a class="markdownIt-Anchor" href="#1-1-row-기준-합치기-밑으로-합침"></a> 1-1. Row 기준 합치기 (밑으로 합침)</h3>
<blockquote>
<p><em>df_concat</em> = <strong>pd.concat</strong> ( [ <em>df_name1</em> , <em>df_name2</em> ], sort = False)<br>
<em>df_concat</em> <strong>.reset_index</strong> (drop = True)</p>
</blockquote>
<blockquote>
<ul>
<li>합칠 데이터프리임을 list로 묶어준다.</li>
<li><strong>sort=False 옵션</strong>을 주어 column의 순서가 유지되도록 한다</li>
<li>합친 dataframe을 새 변수에 대입한 뒤 <strong>reset_index 옵션</strong>으로 index를 초기화한다 (아님 각각 원래의 index을 가지고 있음)</li>
<li>reseet_index에서 <strong>drop=True 옵션</strong>을 사용해 원래의 행 index가 새로 index column으로 생성되지 않도록 한다</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy = df.copy()</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) sort 옵션</strong></p>
<p><strong>sort = False:</strong> column 순서 유지;<br>
<strong>sort = True:</strong> column을 이름순으로 재정열</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df_copy], sort = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df_copy], sort = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>그룹</th>
      <th>브랜드평판지수</th>
      <th>생년월일</th>
      <th>성별</th>
      <th>소속사</th>
      <th>이름</th>
      <th>키</th>
      <th>혈액형</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>방탄소년단</td>
      <td>10523260</td>
      <td>1995-10-13</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>지민</td>
      <td>173.6</td>
      <td>A</td>
    </tr>
    <tr>
      <th>1</th>
      <td>빅뱅</td>
      <td>9916947</td>
      <td>1988-08-18</td>
      <td>남자</td>
      <td>YG</td>
      <td>지드래곤</td>
      <td>177.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>2</th>
      <td>NaN</td>
      <td>8273745</td>
      <td>1996-12-10</td>
      <td>남자</td>
      <td>커넥트</td>
      <td>강다니엘</td>
      <td>180.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>3</th>
      <td>방탄소년단</td>
      <td>8073501</td>
      <td>1995-12-30</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>뷔</td>
      <td>178.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>4</th>
      <td>마마무</td>
      <td>7650928</td>
      <td>1995-07-23</td>
      <td>여자</td>
      <td>RBW</td>
      <td>화사</td>
      <td>162.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>5</th>
      <td>방탄소년단</td>
      <td>5208335</td>
      <td>1997-09-01</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>정국</td>
      <td>178.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>6</th>
      <td>뉴이스트</td>
      <td>4989792</td>
      <td>1995-08-09</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>민현</td>
      <td>182.3</td>
      <td>O</td>
    </tr>
    <tr>
      <th>7</th>
      <td>아이들</td>
      <td>4668615</td>
      <td>1998-08-26</td>
      <td>여자</td>
      <td>큐브</td>
      <td>소연</td>
      <td>NaN</td>
      <td>B</td>
    </tr>
    <tr>
      <th>8</th>
      <td>방탄소년단</td>
      <td>4570308</td>
      <td>1992-12-04</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>진</td>
      <td>179.2</td>
      <td>O</td>
    </tr>
    <tr>
      <th>9</th>
      <td>핫샷</td>
      <td>4036489</td>
      <td>1994-03-22</td>
      <td>남자</td>
      <td>스타크루이엔티</td>
      <td>하성운</td>
      <td>167.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>10</th>
      <td>소녀시대</td>
      <td>3918661</td>
      <td>1989-03-09</td>
      <td>여자</td>
      <td>SM</td>
      <td>태연</td>
      <td>NaN</td>
      <td>A</td>
    </tr>
    <tr>
      <th>11</th>
      <td>아스트로</td>
      <td>3506027</td>
      <td>1997-03-30</td>
      <td>남자</td>
      <td>판타지오</td>
      <td>차은우</td>
      <td>183.0</td>
      <td>B</td>
    </tr>
    <tr>
      <th>12</th>
      <td>뉴이스트</td>
      <td>3301654</td>
      <td>1995-07-21</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>백호</td>
      <td>175.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>13</th>
      <td>뉴이스트</td>
      <td>3274137</td>
      <td>1995-06-08</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>JR</td>
      <td>176.0</td>
      <td>O</td>
    </tr>
    <tr>
      <th>14</th>
      <td>방탄소년단</td>
      <td>2925442</td>
      <td>1993-03-09</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>슈가</td>
      <td>174.0</td>
      <td>O</td>
    </tr>
    <tr>
      <th>0</th>
      <td>방탄소년단</td>
      <td>10523260</td>
      <td>1995-10-13</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>지민</td>
      <td>173.6</td>
      <td>A</td>
    </tr>
    <tr>
      <th>1</th>
      <td>빅뱅</td>
      <td>9916947</td>
      <td>1988-08-18</td>
      <td>남자</td>
      <td>YG</td>
      <td>지드래곤</td>
      <td>177.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>2</th>
      <td>NaN</td>
      <td>8273745</td>
      <td>1996-12-10</td>
      <td>남자</td>
      <td>커넥트</td>
      <td>강다니엘</td>
      <td>180.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>3</th>
      <td>방탄소년단</td>
      <td>8073501</td>
      <td>1995-12-30</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>뷔</td>
      <td>178.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>4</th>
      <td>마마무</td>
      <td>7650928</td>
      <td>1995-07-23</td>
      <td>여자</td>
      <td>RBW</td>
      <td>화사</td>
      <td>162.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>5</th>
      <td>방탄소년단</td>
      <td>5208335</td>
      <td>1997-09-01</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>정국</td>
      <td>178.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>6</th>
      <td>뉴이스트</td>
      <td>4989792</td>
      <td>1995-08-09</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>민현</td>
      <td>182.3</td>
      <td>O</td>
    </tr>
    <tr>
      <th>7</th>
      <td>아이들</td>
      <td>4668615</td>
      <td>1998-08-26</td>
      <td>여자</td>
      <td>큐브</td>
      <td>소연</td>
      <td>NaN</td>
      <td>B</td>
    </tr>
    <tr>
      <th>8</th>
      <td>방탄소년단</td>
      <td>4570308</td>
      <td>1992-12-04</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>진</td>
      <td>179.2</td>
      <td>O</td>
    </tr>
    <tr>
      <th>9</th>
      <td>핫샷</td>
      <td>4036489</td>
      <td>1994-03-22</td>
      <td>남자</td>
      <td>스타크루이엔티</td>
      <td>하성운</td>
      <td>167.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>10</th>
      <td>소녀시대</td>
      <td>3918661</td>
      <td>1989-03-09</td>
      <td>여자</td>
      <td>SM</td>
      <td>태연</td>
      <td>NaN</td>
      <td>A</td>
    </tr>
    <tr>
      <th>11</th>
      <td>아스트로</td>
      <td>3506027</td>
      <td>1997-03-30</td>
      <td>남자</td>
      <td>판타지오</td>
      <td>차은우</td>
      <td>183.0</td>
      <td>B</td>
    </tr>
    <tr>
      <th>12</th>
      <td>뉴이스트</td>
      <td>3301654</td>
      <td>1995-07-21</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>백호</td>
      <td>175.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>13</th>
      <td>뉴이스트</td>
      <td>3274137</td>
      <td>1995-06-08</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>JR</td>
      <td>176.0</td>
      <td>O</td>
    </tr>
    <tr>
      <th>14</th>
      <td>방탄소년단</td>
      <td>2925442</td>
      <td>1993-03-09</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>슈가</td>
      <td>174.0</td>
      <td>O</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<p><strong>(2) reset_index 옵션</strong></p>
<p><strong>reset_index():</strong> index가 초기화됨, 원래의 index가 새로 index column으로 저장됨<br>
<strong>reset_index(drop = True):</strong>  index가 초기화됨, 원래의 index가 새로 index column으로 생성되지 않음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_concat = pd.concat([df, df_copy], sort = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_concat.reset_index()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>index</th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2</td>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>5</td>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>6</td>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>7</td>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>8</td>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>9</td>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>10</td>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>11</td>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>12</td>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>13</td>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>14</td>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>15</th>
      <td>0</td>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>16</th>
      <td>1</td>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>17</th>
      <td>2</td>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>18</th>
      <td>3</td>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>19</th>
      <td>4</td>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>20</th>
      <td>5</td>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>21</th>
      <td>6</td>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>22</th>
      <td>7</td>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>23</th>
      <td>8</td>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>24</th>
      <td>9</td>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>25</th>
      <td>10</td>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>26</th>
      <td>11</td>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>27</th>
      <td>12</td>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>28</th>
      <td>13</td>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>29</th>
      <td>14</td>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_concat.reset_index(drop = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>15</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>16</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>17</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>18</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>19</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>20</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>21</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>22</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>23</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>24</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>25</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>26</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>27</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>28</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>29</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<br>
<h3 id="1-2-column-기준으로-합치기-옆으로-합침"><a class="markdownIt-Anchor" href="#1-2-column-기준으로-합치기-옆으로-합침"></a> 1-2. column 기준으로 합치기 (옆으로 합침)</h3>
<blockquote>
<p>column 기준으로 합치고자 할 때는 <strong>axis = 1 옵션</strong>을 준다:<br>
<strong>pd.concat</strong> ( [<em>df_name1</em>, <em>df_name2</em>], <strong>axis = 1</strong>)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">'korean-idol-2.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>3050</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df2], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>뷔</td>
      <td>3050</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>정국</td>
      <td>2900</td>
      <td>5</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>소연</td>
      <td>4500</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<blockquote>
<p>행의 갯수가 맞지 않을 시</p>
<ul>
<li>두 DataFrame이 행 index기준으로 합치게 됨</li>
<li>행 갯수가 적은 DataFrame의 빈칸에는 NaN로 채워지게 됨</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df3 = df2.drop([<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line">df3</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>4500</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df3], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>지드래곤</td>
      <td>3500.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>소연</td>
      <td>4500.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>JR</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>슈가</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df4 = df2.drop([<span class="number">13</span>, <span class="number">14</span>])</span><br><span class="line">pd.concat([df,df4], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>지드래곤</td>
      <td>3500.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>뷔</td>
      <td>3050.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>정국</td>
      <td>2900.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>소연</td>
      <td>4500.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="2-dataframe-병합하기-merge"><a class="markdownIt-Anchor" href="#2-dataframe-병합하기-merge"></a> <strong>2. DataFrame 병합하기 (merge)</strong></h2>
<blockquote>
<p><strong>concat과 merge의 차이:</strong></p>
<ul>
<li><strong>concat:</strong> row 나 column 기준으로 단순하게 이어 붙히기</li>
<li><strong>merge:</strong> 특정 고유한 키(unique id) 값을 기준으로 병합하기</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>3050</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>df와 df2는 <strong>"이름"이라는 column이 겹친다</strong><br>
따라서, 우리는 "이름"을 기준으로 두 DataFrame을 <strong>병합</strong>할 수 있다</p>
<blockquote>
<p><strong>pd.merge (<em>left_df</em>, <em>right_df</em>, on = “기준 column”, how = “…” )</strong></p>
<ul>
<li>left_df와 right_df 에는 병합할 두 DataFrame을 대입한다</li>
<li>on 에는 병합의 기준이 되는 column을 넣어 준다</li>
<li>how 에는 ‘left’, ‘right’, ‘inner’, 'outer’라는 4가지의 병합 방식중 한가지를 택한다</li>
</ul>
</blockquote>
<br>  
<h3 id="2-0-예제-데이터-만들기"><a class="markdownIt-Anchor" href="#2-0-예제-데이터-만들기"></a> 2-0. 예제 데이터 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right = df2.drop([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right = df_right.reset_index(drop = <span class="literal">True</span>)</span><br><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>concat로 합치는 경우:</strong><br>
데이터가 행 index기준으로 합치게 되기 때문에 <strong>이름이 다른 시람의 데이터가 합치게 된다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df_right], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>JR</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>슈가</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>따리서, 우리는 merge를 사용하여 두 DataFrame를 “이름” 기준으로 병합한다</p>
 <br> 
<h3 id="2-1-left-right-방식"><a class="markdownIt-Anchor" href="#2-1-left-right-방식"></a> 2-1. left, right 방식</h3>
<blockquote>
<ul>
<li>"left"옵션을 부여할 때: left DataFrame에 키 값이 존재하면 해당 데이터를 유지하고, 병합한 right DataFrame의 값은 NaN이 대입 됨</li>
<li>반대로, "right"옵션을 부여할 때 right DataFrame을 기준으로 병합하게 됨</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">"left"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">"right"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>현재, left DataFrame이 더 많은 데이터를 보유하고 있으니, right를 기준으로 병합하면 DataFrame 사이즈가 줄어드게 된다</p>
 <br> 
<h3 id="2-2-inner-outer-방식"><a class="markdownIt-Anchor" href="#2-2-inner-outer-방식"></a> 2-2. inner, outer 방식</h3>
<blockquote>
<ul>
<li>inner 방식은 두 DataFrame에 <strong>모두 키 값이 존재</strong>하는 경우만 병합한다 (교집합과 비슷)</li>
<li>outer 방식은 <strong>하나의 DataFrame에만 키 값이 존재</strong>하더라도 모두 병합한다 (합집합과 비슷)</li>
<li>outer 방식에서는 없는 값은 NaN으로 대입된다</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">'inner'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">'outer'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-3-column명은-다르지만-동일한-성질의-데이터-인-경우"><a class="markdownIt-Anchor" href="#2-3-column명은-다르지만-동일한-성질의-데이터-인-경우"></a> 2-3. column명은 다르지만, 동일한 성질의 데이터 인 경우?</h3>
<blockquote>
<p><strong>pd.merge</strong> ( <em>left_df</em>, <em>right_df</em>, <strong>left_on = “<em>left_col</em>”, right_on = “<em>right_col</em>”</strong>, how = “…” )</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right.columns = [<span class="string">"성함"</span>, <span class="string">"연봉"</span>, <span class="string">"기족수"</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>성함</th>
      <th>연봉</th>
      <th>기족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>df의 "이름"과  df_right의 "성함"은 column name이 다르지만, 동일한 성질의 데이터다.<br>
이럴 때는 left_on, right_on 옵션을 사용해 기준 column을 지정한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, left_on = <span class="string">"이름"</span>, right_on = <span class="string">"성함"</span>, how = <span class="string">"outer"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성함</th>
      <th>연봉</th>
      <th>기족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>JR</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>슈가</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【STUDY - Python】</category>
        <category>Python - 2. Pandas</category>
        <category>Python - 전처리</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Text Mining -- 감성 분류 분석 (호텔 리뷰 데이터)</title>
    <url>/2020/08/29/E-Python-TextMining-2/</url>
    <content><![CDATA[<h1 id="text-mining-실습-호텔-리뷰-데이터-감성-분류-긍정부정-키워드-분석"><a class="markdownIt-Anchor" href="#text-mining-실습-호텔-리뷰-데이터-감성-분류-긍정부정-키워드-분석"></a> 【Text Mining 실습】 – 호텔 리뷰 데이터: 감성 분류 &amp;  긍정/부정 키워드 분석</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0"><strong>2. 데이터셋 살펴보기</strong></a></li>
<li><a href="#3-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC"><strong>3. 한국어 텍스트 데이터 전처리</strong></a>
<ul>
<li><a href="#3-0-konlpy-%EC%84%A4%EC%B9%98">3-0. konlpy 설치</a></li>
<li><a href="#3-1-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%A0%81%EC%9A%A9">3-1. 정규 표현식 적용</a></li>
<li><a href="#3-2-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%98%95%ED%83%9C%EC%86%8C-%EB%B6%84%EC%84%9D-%EB%AA%85%EC%82%AC-%EB%8B%A8%EC%9C%84">3-2. 한국어 형태소 분석 - 명사 단위</a></li>
<li><a href="#3-3-%EB%B6%88%EC%9A%A9%EC%96%B4-%EC%82%AC%EC%A0%84">3-3. 불용어 사전</a></li>
<li><a href="#3-4-word-count">3-4. Word Count</a></li>
<li><a href="#3-5-tf-idf-%EC%A0%81%EC%9A%A9">3-5. TF-IDF 적용</a></li>
</ul>
</li>
<li><a href="#4-%EA%B0%90%EC%84%B1-%EB%B6%84%EB%A5%98-logistic-regression"><strong>4. 감성 분류 – Logistic Regression</strong></a>
<ul>
<li><a href="#4-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%83%9D%EC%84%B1">4-1. 데이터셋 생성</a></li>
<li><a href="#4-2-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0">4-2. Training set / Test set 나누기</a></li>
<li><a href="#4-3-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5">4-3. 모델 학습</a></li>
<li><a href="#4-4-%EC%83%98%ED%94%8C%EB%A7%81-%EC%9E%AC%EC%A1%B0%EC%A0%95">4-4. 샘플링 재조정</a></li>
<li><a href="#4-5-%EB%AA%A8%EB%8D%B8-%EC%9E%AC%ED%95%99%EC%8A%B5">4-5. 모델 재학습</a></li>
</ul>
</li>
<li><a href="#5-%EA%B8%8D%EC%A0%95-%EB%B6%80%EC%A0%95-%ED%82%A4%EC%9B%8C%EB%93%9C-%EB%B6%84%EC%84%9D"><strong>5. 긍정 / 부정 키워드 분석</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>제주 호텔의 리뷰 데이터(평가 점수 + 평가 내용)을 활용해 다음 2가지 분석을 진행합니다:</p>
<ol>
<li>
<p>리뷰속에 담긴 사람의 긍정 / 부정 감성을 파악하여 분류할 수 있는 감성 분류 예측 모델을 만든다</p>
</li>
<li>
<p>만든 모델을 활용해 긍정 / 부정 키워드를 출력해, 이용객들이 느낀 제주 호텔의 장,단점을 파악한다</p>
</li>
</ol>
  <br> 
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 사용할 데이터셋</strong></p>
<p><a href="https://www.tripadvisor.co.kr/" target="_blank" rel="noopener">Tripadvisor</a> 여행사이트에서 "제주 호텔"로 검색해서 나온 리뷰들을 활용합니다. (평점 &amp; 평가 내용 포함)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/tripadviser_review.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>4</td>
      <td>여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 ...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>2일 이상 연박시 침대, 이불, 베게등 침구류 교체 및 어메니티 보강이 필요해 보입...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4</td>
      <td>지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 ...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>5</td>
      <td>방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요!...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버...</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>
<p>rating: 이용자 리뷰의 평가 점수 (1~5)</p>
</li>
<li>
<p>text: 이용자 리뷰 평가 내용</p>
<br>
</li>
</ul>
<h2 id="2-데이터셋-살펴보기"><a class="markdownIt-Anchor" href="#2-데이터셋-살펴보기"></a> <strong>2. 데이터셋 살펴보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># dimension</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1001, 2)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>rating    0
text      0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 1001 entries, 0 to 1000
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   rating  1001 non-null   int64 
 1   text    1001 non-null   object
dtypes: int64(1), object(1)
memory usage: 15.8+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># text 변수 확인</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다.'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'text'</span>][<span class="number">100</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'올 봄에 벚꽃기간에 방문, 협재를 바라보는 바다뷰가 좋고 대로변이라 렌트해서 가기도 좋음. 조식은 이용안했는데 근처 옹포밥집까지 아침 산책겸 걸어가서 하고옴. 루프탑 수영장과 바가 있었는데 내가 갔을때는 밤에 비바람이 너무 불어서 이용못하고옴 ㅠㅠ  단점으로는 모 유명 여행블로거 리뷰처럼 화장실 물떄가... 그거빼곤 다 만족'
</code></pre>
  <br>
<p>“text” 내용을 확인해보면, 소량의 "특수 문자"와 "모음"이 존재하는 경우가 있습니다. 이들은 Text Mining을 적용할 의미가 없기 때문에 정규표현식을 이용해서 제거해보도록 할게요.</p>
<p><br>  <br></p>
<h2 id="3-한국어-텍스트-데이터-전처리"><a class="markdownIt-Anchor" href="#3-한국어-텍스트-데이터-전처리"></a> <strong>3. 한국어 텍스트 데이터 전처리</strong></h2>
<p>기계가 텍스트 형식으로 되어 있는 리뷰 데이터를 이해하려면, 텍스트 데이터를 단어 단위로 분리하는 전처리 괴정이 필요합니다. 여기서 분리된 단어들은 Bag of Words로 Count 기반으로 나타날 수도 있고, TF-IDF를 통해서 점수로 나타날 수도 있습니다.</p>
<p>먼저 리뷰의 평가 내용을 단어화해서 형태소를 추출하고, 그 다음 Bag of Words를 생성하여 TF-IDF 변환을 진행하겠습니다.</p>
<br>
<h3 id="3-0-konlpy-설치"><a class="markdownIt-Anchor" href="#3-0-konlpy-설치"></a> 3-0. konlpy 설치</h3>
<p>영문이 아닌 한글을 처리해야 하기 때문에 "konlpy"이라는 library를 사용합니다.</p>
<blockquote>
<p>참고 자료:</p>
<ol>
<li><a href="https://ellun.tistory.com/46" target="_blank" rel="noopener">파이썬 한글 형태소 분석기 KoNLPy 설치방법 및 에러해결</a></li>
<li><a href="https://konlpy-ko.readthedocs.io/ko/v0.4.3/install/#id2" target="_blank" rel="noopener">KoNLPy 홈메이지 – 설치하기</a></li>
<li><a href="https://data-scientist-brian-kim.tistory.com/54" target="_blank" rel="noopener">[Anaconda에서 KoNLPy 설치하기] 삽질은 이제 그만~</a></li>
</ol>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">!pip install konlpy==<span class="number">0.5</span><span class="number">.2</span> jpype1 Jpype1-py3</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    Requirement already satisfied: konlpy==0.5.2 in d:\anaconda\lib\site-packages (0.5.2)
    Requirement already satisfied: jpype1 in d:\anaconda\lib\site-packages (1.0.2)
    Requirement already satisfied: Jpype1-py3 in d:\anaconda\lib\site-packages (0.5.5.4)
    Requirement already satisfied: tweepy&gt;=3.7.0 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (3.9.0)
    Requirement already satisfied: lxml&gt;=4.1.0 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (4.5.0)
    Requirement already satisfied: colorama in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (0.4.3)
    Requirement already satisfied: numpy&gt;=1.6 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (1.18.1)
    Requirement already satisfied: beautifulsoup4==4.6.0 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (4.6.0)
    Requirement already satisfied: typing-extensions; python_version &lt; "3.8" in d:\anaconda\lib\site-packages (from jpype1) (3.7.4.1)
    Requirement already satisfied: requests[socks]&gt;=2.11.1 in d:\anaconda\lib\site-packages (from tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (2.23.0)
    Requirement already satisfied: requests-oauthlib&gt;=0.7.0 in d:\anaconda\lib\site-packages (from tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.3.0)
    Requirement already satisfied: six&gt;=1.10.0 in d:\anaconda\lib\site-packages (from tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.14.0)
    Requirement already satisfied: chardet&lt;4,&gt;=3.0.2 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (3.0.4)
    Requirement already satisfied: certifi&gt;=2017.4.17 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (2020.6.20)
    Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.25.8)
    Requirement already satisfied: idna&lt;3,&gt;=2.5 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (2.9)
    Requirement already satisfied: PySocks!=1.5.7,&gt;=1.5.6; extra == "socks" in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.7.1)
    Requirement already satisfied: oauthlib&gt;=3.0.0 in d:\anaconda\lib\site-packages (from requests-oauthlib&gt;=0.7.0-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (3.1.0)
</pre>
</div>
<br>
<h3 id="3-1-정규-표현식-적용"><a class="markdownIt-Anchor" href="#3-1-정규-표현식-적용"></a> 3-1. 정규 표현식 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 함수 정의</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_regular_expression</span><span class="params">(text)</span>:</span></span><br><span class="line">    hangul = re.compile(<span class="string">'[^ ㄱ-ㅣ 가-힣]'</span>)  <span class="comment"># 한글 추출 규칙: 띄어 쓰기(1 개)를 포함한 한글</span></span><br><span class="line">    result = hangul.sub(<span class="string">''</span>, text)  <span class="comment"># 위에 설정한 "hangul"규칙을 "text"에 적용(.sub)시킴</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p>만들어 놓은 정규 표현식을 "text"의 첫 행에 적용해서 결과 한번 확인해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다.'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다'
</code></pre>
<br>
<p>정규 표현식을 적용한 후 특수 문자가 잘 제거된 것을 확인할 수 있습니다.</p>
  <br>
<h3 id="3-2-한국어-형태소-분석-명사-단위"><a class="markdownIt-Anchor" href="#3-2-한국어-형태소-분석-명사-단위"></a> 3-2. 한국어 형태소 분석 - 명사 단위</h3>
<p><strong>&gt;&gt; 명사 형태소 추출</strong></p>
<blockquote>
<p>참고 자료: <a href="https://konlpy.org/ko/v0.5.2/api/konlpy.tag/" target="_blank" rel="noopener">konlpy.tag 패키지 Documentation</a></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> konlpy.tag <span class="keyword">import</span> Okt</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br></pre></td></tr></tbody></table></figure>
<br>  
<p>명사 형태소 추출 함수 <code>Okt()</code> 를 이용하여 정규표현식을 적용한 “text” 첫 행 내용의 형태소를 추출해 보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">okt = Okt()  <span class="comment"># 명사 형태소 추출 함수</span></span><br><span class="line">nouns = okt.nouns(apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>]))</span><br><span class="line">nouns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['여행', '집중', '휴식', '제공', '호텔', '위치', '선정', '또한', '청소', '청결', '상태']
</code></pre>
<br>
<p>이제 이를 전체 말뭉치(corpus)에 적용해서 명사 형태소를 추출해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 말뭉치 생성</span></span><br><span class="line">corpus = <span class="string">""</span>.join(df[<span class="string">'text'</span>].tolist())</span><br><span class="line">corpus</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow: auto">
    '여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다.2일 이상 연박시 침대, 이불, 베게등 침구류 교체 및 어메니티 보강이 필요해 보입니다. 베스트 웨스턴 회원의 경우 객실 뷰와 층수 요청에 적극적으로 반영해 주시길 바랍니다.지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 알고오시면 좋을거같아요 (세면도구와  잠옷은필수로챙기셔야해용) 그것만챙겨오시면 잘쉬었다가실수있답니당방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요!! 다음에도 제주도 오면 꼭 여기서 지낼겁니다ㅎㅎ 1박만 머문다는게 너무 아쉽네요ㅠㅠ저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버스정류이 있어서 너무 좋았습니다. 12시에 도착해서 가방 맡기려 했는데 일찍 정비된방이 있다며 바로 입실하고 룸도 업그레이드 해주셔서 직원분이 친절해 정말 좋았어요^^바다전망이라해서 기대했는데 영아니네요.. 전일 함덕대명콘도에서 1박했는데 그곳이 실내 분위기랑 바다전망이 훨 좋아요..손님이 없는 날이라고 가장 바다가 이쁘게 보이는 방으로 배치해 주셨다. 불편함에 대해 바로 대응 써비스 해주었고 조식도 사소한 부분까지 신경써서 아주 맛있었다. 특급 호텔은 아니지만 트랜디하고 즐거운 다양함에 대해 고민한 흔적이 였보인다. 여름에 꼭와서 수영장을 사용해 보고 싶다 ~ !엄마와 둘이 여행왔다가 가격대비 좋다고 하여 다녀왔어요 ㅎㅎ 듣던대로 깔끔했고 위치도 너무 좋았어요 주위 마트 식당들 동문시장도 가까워서 좋았고 앞에 바다가 있어서 더 좋았습니다 ㅎㅎ 또 방문의사 있어요 ~딸 둘과의 4일동안의 제주여행줌 2박 숙소로 정해진 제주 휘슬락 호텔~ 처음엔 공항과 가까운 곳으로만 생각했으나 시설도 넘 깨끗하고 직원분들도 모두 친절모드로 제주여행의 마지막을 넘넘 좋게 마무리하고 돌아가네요~~^^ 테라스에서 보이는 전경도 넘 멋지네요♡ 인근 동문재래시장도 가까워 야시장 이용도하고 너무너무 잘다녀왔어요. 다음에 또 이용할께요.제주여행 2일차!!! 호텔 휘슬락에 체크인 ㄱㄱㄱ. 뷰 기가막힙니다... 깨끗하고요~~ 주변에 갈데 많습니다. 여친과 잊지못할 추억 만들어봅니다^^ 좋은 가성비에 분위기 나쁘지않네요 추천 드립니다. 후회없으실듯!!!예전에 그랜드 호텔일 때 저희 아이 돌잔치를 여기 삼다정에서 했었더랬죠. 제주도에서는 아주 전통있는 호텔입니다. 그 후로 메종 글래드로 업그레이드 되었는데, 위치, 시설, 서비스에 비해 매우 합리적인 가격대의 만족스러운 호텔입니다. 그래서 저희는 명절에 제주도 내려오면 늘 글래드에 숙박해요. 특히 1층에 아티제와 백미당이 있어서, 여기 커피와 베이커리를 좋아하는 저희 가족에게는 플러스예요.지금까지 제주여행을 다니면서 여러호텔을 이용해보았지만, 메종 글래드에서 가장 만족스러웠습니다. 우선 공항의 접근성과 쇼핑의 편리함 그리고 조식의만족도가 최고이며 무엇보다 직원분들의 친절함이 기억에 남습니다. 앞으로 우리가족은 제주에 갈땐 메종을 찾기로했답니다.엄마랑 첫 제주도 여행인데 침구가 너무 좋았고, 직원분들도 친절하셔서 편안하게 쉬고 왔습니다. 교통도 편해서 짧은 여행이었지만 알차게 볼 수 있었도요. 3층에서 이틀 묵었었는데 정원 같은 곳이 바로 보여서 이뻤어요. 거기 돌아다니니까 수영장도 2개 있었는데 겨울이라 못써서 아쉬웠습니다 ㅠㅠ 여름에 꼭 여기 오려구요!! ㅎㅎㅎ 추천합니다~~친구가 제주도에 놀러와서 투숙을 하였는데 객실이 깔끔하고 뷰도 좋았어요. 야외 수영장이 보이는 방향이었는데 야간에는 조명을 켜서 너무 예쁘더라구요. 체크인하러 가는 그 순간조차도 벨맨에게 대접을 받았습니다. 왠만하면 실명을 거론하지 않는데 프론트에 문J.. 이름이 기억이 안나지만 체크인이 너무 친절해서 기분이 좋았습니다. 웃는 모습이 너무 선하고 밝아서 여행 첫날부터 스타트가 좋았네요. 다음에 투숙을 할 경우가 생긴다면 또 다시 이용할거에요~!!차를 좋아하는 아이들에게는 최고의 선물~~ 카운터에서 친절하게 안내해주셔서 편하게 이용하고 왔어요~~ 삼다정 디너 최고입니다. 기회가 되면 여름에 또 오고 싶네요~~직원분들은 눈만 마주쳐도 도와주려고 할 정도로 엄청 친절. 미니바 무료도 굿. 시설은 최근 지어진거라 당연 청결. 주변에 관광지도 가까운곳이 많음. 제주여행숙고소 강추~~ 내가 숙은 위치에서 찍은 야경뷰조식조타하여 일부러 저녁 많이 안 먹고 일찍 일어나서 동네 한바퀴 돌아주고 씻고 나서 2층가서 먹방 했네요. 신라호텔보다 퀄리티 좋음신제주에 위치한 매우 깨끗한 호텔입니다. 특히 조식을 추천 드립니다.   구제주에 오래된 호텔에 비할 수 없는 기분 좋은 호텔이였습니다.모녀 여행 중 제주시 1박을 위해 선택한 호텔입니다. 우선 공항에서 가깝고 오픈한 지 얼만 안 된 것 같아 예약했습니다.  호텔은 대로변에 있어 접근성이 좋고 (호텔은 5~10분거리), 더군다나 공항까지 셔틀버스 운행합니다. 데스크 직원분들 매우 친절하시고 주차안내분도 친절하셔서 첫 인상이 좋았습니다. 룸은 트윈으로 했는데 생각보다 큰 방에 퀸 사이즈가 2개여서  ㅋㅋㅋㅋ 대만족이었습니다. 스타일러가 있어서 여행 중 입었던 옷 다 돌렸습니다. 조식은 가짓수가 많지는 않으나 있어야 될 것은 다 있는 느낌?   근데 화장실이 조명이 너무 어둡고 내부인테리어도 어두워서 ㅋㅋㅋ 그 외의 호텔 분위기와 매우 이질적입니다. (이건 개인적인 취향인 것 같네요) 어메니티도 구비되어 있는데 향이 독특합니다. ㅋㅋㅋ 실망한 부분은 여행 시 산 과일을 먹으려고 나이프와 포크 부탁했는데 서비스가 안되더라고요..그리고 차와 커피 준비된 부분이 빈약합니다. (어느 부분은 특급호텔 표방인 것 같고 어떤 부분은 모텔인 것 같은 )  하지만 결론적으로 가성비  훌륭, 접근성 훌륭, 청결도 훌륭해서 엄마와 함께 쾌적한 시간을 보냈습니다. 감사합니다.슈페리어킹룸에 하루 숙박한 후기입니다.  제주여행의 마지막날 숙박했는데요 지은지 얼마 안 된 느낌의 새 건물 이었습니다. 건물 안 인테리어는 약간 유럽 스타일이었구요 그림이나 조각들이 생각보다 많아서 놀랐어요 복도랑 객실도 그림이 전시되어 있고 전부 카펫으로 되어 있었습니다. 객실은 비슷한 등급의 다른 호텔들보다 큰 편이었고 침대는 두 명이서 자기에 충분할 정도로 정말 컸습니다. 비가 오는 날이라 비를 조금 맞았는데 객실 내에 LG 스타일러가 있어서 외투를 돌렸더니 뽀송뽀송해져서 완전 만족 합니다!! 진짜 스타일러 강추!!!! 그리고 무료셔틀 이용했는데 공항까지 한 7분 정도 걸렸습니당! 셔틀은 운행하는 시간이 정해져 있는데 미리 예약 하셔야 이용 하실 수 있어요~~  다음에 제주도 온다면 또 이용하고 싶은 호텔이네요~^^시티뷰이지만 오름도 볼 수 있고 무엇보다도 교통이 훌륭하였다 다만 바로 도로가인 관계로 밤에 차량 소리가 다소 신경쓰였다급하게 방문했는데 방도 깔끔하고 직원분들 모두 친절하셔서 좋았습니다~  1층 편의점도 있어서 좋았어요~ 칫솔은 챙겨야합니다 ㅎㅎ 재방문 의사 있습니다동계훈련을 신제주로 오게 되었는데̄̈,  훈련 하는동안 라마다호텔에서 편하게 잘 쉬었다̆̎ 갑니다̆̎!  가족과 연인과 함께 와도 좋을 것 같아요̆̈!  조식도 괜찮고 전체적으로 깔끔하고 편리하게 되어있네요̆̈ ◡̈⋆  사진이 너무 많아 첨부하진 못했지만, 엘리베이터 가는̆̈ 곳 쪽에 빔으로 실시간 비행기 시간을 알려줘서 너무 편하고 신기했어요̆̈! 
</div>
<br>
<p><font color="blue"><em>[P.S.  브라우저 메모리 부족으로 부분만  출력]</em></font></p>
<br>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 적용</span></span><br><span class="line">apply_regular_expression(corpus)</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow: auto">
    '여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다일 이상 연박시 침대 이불 베게등 침구류 교체 및 어메니티 보강이 필요해 보입니다 베스트 웨스턴 회원의 경우 객실 뷰와 층수 요청에 적극적으로 반영해 주시길 바랍니다지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 알고오시면 좋을거같아요 세면도구와  잠옷은필수로챙기셔야해용 그것만챙겨오시면 잘쉬었다가실수있답니당방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요 다음에도 제주도 오면 꼭 여기서 지낼겁니다ㅎㅎ 박만 머문다는게 너무 아쉽네요ㅠㅠ저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버스정류이 있어서 너무 좋았습니다 시에 도착해서 가방 맡기려 했는데 일찍 정비된방이 있다며 바로 입실하고 룸도 업그레이드 해주셔서 직원분이 친절해 정말 좋았어요바다전망이라해서 기대했는데 영아니네요 전일 함덕대명콘도에서 박했는데 그곳이 실내 분위기랑 바다전망이 훨 좋아요손님이 없는 날이라고 가장 바다가 이쁘게 보이는 방으로 배치해 주셨다 불편함에 대해 바로 대응 써비스 해주었고 조식도 사소한 부분까지 신경써서 아주 맛있었다 특급 호텔은 아니지만 트랜디하고 즐거운 다양함에 대해 고민한 흔적이 였보인다 여름에 꼭와서 수영장을 사용해 보고 싶다  엄마와 둘이 여행왔다가 가격대비 좋다고 하여 다녀왔어요 ㅎㅎ 듣던대로 깔끔했고 위치도 너무 좋았어요 주위 마트 식당들 동문시장도 가까워서 좋았고 앞에 바다가 있어서 더 좋았습니다 ㅎㅎ 또 방문의사 있어요 딸 둘과의 일동안의 제주여행줌 박 숙소로 정해진 제주 휘슬락 호텔 처음엔 공항과 가까운 곳으로만 생각했으나 시설도 넘 깨끗하고 직원분들도 모두 친절모드로 제주여행의 마지막을 넘넘 좋게 마무리하고 돌아가네요 테라스에서 보이는 전경도 넘 멋지네요 인근 동문재래시장도 가까워 야시장 이용도하고 너무너무 잘다녀왔어요 다음에 또 이용할께요제주여행 일차 호텔 휘슬락에 체크인 ㄱㄱㄱ 뷰 기가막힙니다 깨끗하고요 주변에 갈데 많습니다 여친과 잊지못할 추억 만들어봅니다 좋은 가성비에 분위기 나쁘지않네요 추천 드립니다 후회없으실듯예전에 그랜드 호텔일 때 저희 아이 돌잔치를 여기 삼다정에서 했었더랬죠 제주도에서는 아주 전통있는 호텔입니다 그 후로 메종 글래드로 업그레이드 되었는데 위치 시설 서비스에 비해 매우 합리적인 가격대의 만족스러운 호텔입니다 그래서 저희는 명절에 제주도 내려오면 늘 글래드에 숙박해요 특히 층에 아티제와 백미당이 있어서 여기 커피와 베이커리를 좋아하는 저희 가족에게는 플러스예요지금까지 제주여행을 다니면서 여러호텔을 이용해보았지만 메종 글래드에서 가장 만족스러웠습니다 우선 공항의 접근성과 쇼핑의 편리함 그리고 조식의만족도가 최고이며 무엇보다 직원분들의 친절함이 기억에 남습니다 앞으로 우리가족은 제주에 갈땐 메종을 찾기로했답니다엄마랑 첫 제주도 여행인데 침구가 너무 좋았고 직원분들도 친절하셔서 편안하게 쉬고 왔습니다 교통도 편해서 짧은 여행이었지만 알차게 볼 수 있었도요 층에서 이틀 묵었었는데 정원 같은 곳이 바로 보여서 이뻤어요 거기 돌아다니니까 수영장도 개 있었는데 겨울이라 못써서 아쉬웠습니다 ㅠㅠ 여름에 꼭 여기 오려구요 ㅎㅎㅎ 추천합니다친구가 제주도에 놀러와서 투숙을 하였는데 객실이 깔끔하고 뷰도 좋았어요 야외 수영장이 보이는 방향이었는데 야간에는 조명을 켜서 너무 예쁘더라구요 체크인하러 가는 그 순간조차도 벨맨에게 대접을 받았습니다 왠만하면 실명을 거론하지 않는데 프론트에 문 이름이 기억이 안나지만 체크인이 너무 친절해서 기분이 좋았습니다 웃는 모습이 너무 선하고 밝아서 여행 첫날부터 스타트가 좋았네요 다음에 투숙을 할 경우가 생긴다면 또 다시 이용할거에요차를 좋아하는 아이들에게는 최고의 선물 카운터에서 친절하게 안내해주셔서 편하게 이용하고 왔어요 삼다정 디너 최고입니다 기회가 되면 여름에 또 오고 싶네요직원분들은 눈만 마주쳐도 도와주려고 할 정도로 엄청 친절 미니바 무료도 굿 시설은 최근 지어진거라 당연 청결 주변에 관광지도 가까운곳이 많음 제주여행숙고소 강추 내가 숙은 위치에서 찍은 야경뷰조식조타하여 일부러 저녁 많이 안 먹고 일찍 일어나서 동네 한바퀴 돌아주고 씻고 나서 층가서 먹방 했네요 신라호텔보다 퀄리티 좋음신제주에 위치한 매우 깨끗한 호텔입니다 특히 조식을 추천 드립니다   구제주에 오래된 호텔에 비할 수 없는 기분 좋은 호텔이였습니다모녀 여행 중 제주시 박을 위해 선택한 호텔입니다 우선 공항에서 가깝고 오픈한 지 얼만 안 된 것 같아 예약했습니다  호텔은 대로변에 있어 접근성이 좋고 호텔은 분거리 더군다나 공항까지 셔틀버스 운행합니다 데스크 직원분들 매우 친절하시고 주차안내분도 친절하셔서 첫 인상이 좋았습니다 룸은 트윈으로 했는데 생각보다 큰 방에 퀸 사이즈가 개여서  ㅋㅋㅋㅋ 대만족이었습니다 스타일러가 있어서 여행 중 입었던 옷 다 돌렸습니다 조식은 가짓수가 많지는 않으나 있어야 될 것은 다 있는 느낌   근데 화장실이 조명이 너무 어둡고 내부인테리어도 어두워서 ㅋㅋㅋ 그 외의 호텔 분위기와 매우 이질적입니다 이건 개인적인 취향인 것 같네요 어메니티도 구비되어 있는데 향이 독특합니다 ㅋㅋㅋ 실망한 부분은 여행 시 산 과일을 먹으려고 나이프와 포크 부탁했는데 서비스가 안되더라고요그리고 차와 커피 준비된 부분이 빈약합니다 어느 부분은 특급호텔 표방인 것 같고 어떤 부분은 모텔인 것 같은   하지만 결론적으로 가성비  훌륭 접근성 훌륭 청결도 훌륭해서 엄마와 함께 쾌적한 시간을 보냈습니다 감사합니다슈페리어킹룸에 하루 숙박한 후기입니다  제주여행의 마지막날 숙박했는데요 지은지 얼마 안 된 느낌의 새 건물 이었습니다 건물 안 인테리어는 약간 유럽 스타일이었구요 그림이나 조각들이 생각보다 많아서 놀랐어요 복도랑 객실도 그림이 전시되어 있고 전부 카펫으로 되어 있었습니다 객실은 비슷한 등급의 다른 호텔들보다 큰 편이었고 침대는 두 명이서 자기에 충분할 정도로 정말 컸습니다 비가 오는 날이라 비를 조금 맞았는데 객실 내에  스타일러가 있어서 외투를 돌렸더니 뽀송뽀송해져서 완전 만족 합니다 진짜 스타일러 강추 그리고 무료셔틀 이용했는데 공항까지 한 분 정도 걸렸습니당 셔틀은 운행하는 시간이 정해져 있는데 미리 예약 하셔야 이용 하실 수 있어요  다음에 제주도 온다면 또 이용하고 싶은 호텔이네요시티뷰이지만 오름도 볼 수 있고 무엇보다도 교통이 훌륭하였다 다만 바로 도로가인 관계로 밤에 차량 소리가 다소 신경쓰였다급하게 방문했는데 방도 깔끔하고 직원분들 모두 친절하셔서 좋았습니다  층 편의점도 있어서 좋았어요 칫솔은 챙겨야합니다 ㅎㅎ 재방문 의사 있습니다동계훈련을 신제주로 오게 되었는데  훈련 하는동안 라마다호텔에서 편하게 잘 쉬었다 갑니다  가족과 연인과 함께 와도 좋을 것 같아요  조식도 괜찮고 전체적으로 깔끔하고 편리하게 되어있네요   사진이 너무 많아 첨부하진 못했지만 엘리베이터 가는 곳 쪽에 빔으로 실시간 비행기 시간을 알려줘서 너무 편하고 신기했어요
</div>
<br>
<p><font color="blue"><em>[P.S. 브라우저 메모리 부족으로 부분만  출력]</em></font></p>
<br>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 말뭉치(corpus)에서 명사 형태소 추출</span></span><br><span class="line">nouns = okt.nouns(apply_regular_expression(corpus))</span><br><span class="line">print(nouns)</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow: scroll">
    ['여행', '집중', '휴식', '제공', '호텔', '위치', '선정', '또한', '청소', '청결', '상태', '일', '이상', '연', '침대', '이불', '등', '침구', '류', '교체', '및', '어메니티', '보강', '베스트', '웨스턴', '회원', '경우', '객실', '뷰', '층수', '요청', '적극', '반영', '지인', '소개', '온', '호텔', '거', '처음', '당황', '세면', '도구', '잠옷', '필수', '그것', '방', '눈', '정도', '호텔', '처음', '것', '다음', '제주도', '꼭', '여기', '박만', '저녁', '맥주', '한잔', '렌트', '안', '뚜벅', '호텔', '바로', '앞', '버스', '정류', '시', '도착', '가방', '일찍', '정비', '방이', '바로', '입실', '룸', '업그레이드', '직원', '정말', '바다', '전망', '영', '전일', '함덕', '대명', '콘도', '곳', '실내', '분위기', '바다', '전망', '훨', '손님', '날', '가장', '바다', '방', '배치', '대해', '바로', '대응', '써비스', '조식', '부분', '신경', '아주', '특급', '호텔', '트랜디', '대해', '고민', '흔적', '여름', '꼭', '수영장', '사용', '보고', '엄마', '둘', '여행', '가격', '대비', '위치', '주위', '마트', '식당', '시장', '앞', '바다', '더', '또', '방문', '의사', '딸', '둘', '동안', '제주', '여행', '줌', '박', '숙소', '정해진', '제주', '휘슬', '락', '호텔', '처음', '공항', '곳', '생각', '시설', '직원', '모두', '친절', '모드', '여행', '마지막', '마무리', '테라스', '전경', '인근', '재래시장', '야시장', '이용도', '다음', '또', '이용', '제주', '여행', '일차', '호텔', '휘슬락', '체크', '뷰', '기', '주변', '여친', '추억', '가성', '비', '분위기', '추천', '후회', '예전', '그랜드', '호텔', '일', '때', '저희', '아이', '돌잔치', '여기', '다정', '했었더랬', '제주도', '아주', '전통', '호텔', '그', '후', '메종', '글래드', '업그레이드', '위치', '시설', '서비스', '매우', '합리', '가격', '대의', '호텔', '저희', '명절', '제주도', '늘', '글래드', '숙박', '층', '아티', '제', '백미', '여기', '커피', '베이커리', '저희', '가족', '플러스', '지금', '여행', '호텔', '이용', '메종', '글래드', '가장', '우선', '공항', '접근성', '쇼핑', '조식', '만족도', '최고', '무엇', '직원', '기억', '앞', '우리', '가족', '제주', '땐', '메종', '찾기', '엄마', '첫', '제주도', '여행', '침구', '직원', '쉬', '교통', '여행', '볼', '수', '도', '층', '이틀', '정원', '곳', '바로', '보', '거기', '수영장', '개', '겨울', '여름', '꼭', '여기', '추천', '친구', '제주도', '놀러와', '투숙', '객실', '뷰', '야외', '수영장', '방향', '야간', '조명', '체크', '그', '순간', '맨', '대접', '실명', '거론', '프론트', '문', '이름', '기억', '안나', '체크', '기분', '모습', '여행', '첫날', '스타트', '다음', '투숙', '경우', '또', '다시', '이용', '차', '아이', '최고', '선물', '카운터', '안내', '이용', '다정', '디너', '최고', '기회', '여름', '또', '직원', '눈', '정도', '친절', '미니바', '무료', '굿', '시설', '최근', '연', '청결', '주변', '관광지', '곳', '제주', '여행', '숙고', '소', '강추', '내', '숙', '위치', '야경', '뷰', '조식', '일부러', '저녁', '안', '일찍', '일어나서', '동네', '바퀴', '층', '먹방', '신라', '호텔', '퀄리티', '제주', '위치', '매우', '호텔', '조식', '추천', '제주', '호텔', '비', '수', '기분', '호텔', '모녀', '여행', '중', '제주시', '박', '위해', '선택', '호텔', '우선', '공항', '오픈', '얼', '안', '것', '예약', '호텔', '대로', '변', '접근성', '호텔', '분', '거리', '더군다나', '공항', '셔틀버스', '운행', '데스크', '직원', '매우', '차안', '분도', '첫', '인상', '룸', '트윈', '생각', '방', '퀸', '사이즈', '개', '만족', '스타', '여행', '중', '옷', '조식', '가짓수', '것', '느낌', '화장실', '조명', '내부', '인테리어', '그', '외', '호텔', '분위기', '매우', '질적', '이건', '개인', '취향', '것', '어메니티', '구비', '향', '부분', '여행', '시', '산', '과일', '나이프', '포크', '부탁', '서비스', '차', '커피', '준비', '부분', '부분', '특급', '호텔', '표방', '것', '부분', '모텔', '것', '결론', '가성', '비', '훌륭', '접근성', '훌륭', '청결', '엄마', '시간', '슈', '페리', '킹룸', '하루', '숙박', '후기', '여행', '마지막', '날', '숙박', '지은지', '얼마', '안', '느낌', '새', '건물', '건물', '안', '인테리어', '약간', '유럽', '스타일', '그림', '조각', '생각', '복도', '객실', '그림', '전시', '전부', '카펫', '객실', '등급', '다른', '호텔', '침대', '두', '명', '이서', '자기', '정도', '정말', '비', '날', '비', '조금', '객실', '내', '스타', '외투', '완전', '만족', '진짜', '스타', '강추', '무료', '셔틀', '이용', '공항', '분', '정도', '습', '셔틀', '운행', '시간', '미리', '예약', '이용', '수', '다음', '제주도', '또', '이용', '호텔', '시티', '뷰', '오름', '볼', '수', '무엇', '교통', '다만', '바로', '도로', '가인', '관계', '밤', '차량', '소리', '다소', '신경', '방문', '방도', '직원', '모두', '층', '편의점', '칫솔', '재', '방문', '의사', '동계', '훈련', '제주', '훈련', '동안', '라마', '호텔', '가족', '연인', '것', '조식', '전체', '사진', '첨부', '엘리베이터', '곳', '쪽', '빔', '실시간', '비행기', '시간', '공항', '택시', '미만', '택시', '비', '이동', '가능', '침구', '및', '룸', '상태', '최상', '욕실', '슬리퍼', '위생', '상태', '염려', '카펫', '염려', '설날', '조식', '떡국', '당황', '함', '떡국', '공항', '려고', '현장', '결재', '황스', '려운', '중국', '만두', '종류', '별로', '구만', '현장', '결재', '조식', '일', '메뉴', '답변', '첫', '도착', '제일', '첫', '주차', '걱정', '요', '할아버지', '안심', '객실', '컨디션', '최고', '조식', '문어', '처리', '최고', '닺', '회사', '출장', '차', '시설', '직원', '서울', '때', '이용', '다음', '또', '프론트', '방도', '간혹', '이벤트', '업그레이드', '해주시', '수영장', '및', '부대', '시설', '최고', '항상', '제주도', '때', '롯데', '롯데', '시티', '호텔', '제주', '비지니스', '호텔', '가족', '여행객', '손색', '객실', '욕조', '겸비', '사계절', '수풀', '무료', '이용', '층', '야외', '수영장', '중문', '표선등', '원거리', '여행지', '복귀', '후', '밤', '시', '수영장', '이용', '또한', '시내', '유명', '식당', '등', '방문', '아주', '일단', '공항', '분', '정도', '위치', '주차장', '지하', '층', '공간', '주차', '수', '체크', '때', '직원', '응대', '기분', '체크', '수', '다른', '문의사항', '신지', '감동', '습', '객실', '역시', '롯데', '생각', '정도', '풀', '장도', '이용', '수', '더', '옆', '락타', '룸', '샤워', '마련', '코인', '세탁실', '정말', '이용', '오션', '뷰', '멀리', '바다', '야경', '남자친구', '첫', '여행', '덕분', '여행', '습', '다음', '제주', '꼭', '방문', '이번', '제주도', '여행', '때', '롯데', '시티', '제주', '박', '숙박', '체크', '때', '프런트', '직원', '객실', '배정', '공항', '비행기', '이착륙', '객실', '객실']
</div>
<br>
<p><font color="blue"><em>[P.S. 브라우저 메모리 부족으로 부분만  출력]</em></font></p>
<br>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 빈도 탐색</span></span><br><span class="line">counter = Counter(nouns)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">counter.most_common(<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('호텔', 803),
 ('수', 498),
 ('것', 436),
 ('방', 330),
 ('위치', 328),
 ('우리', 327),
 ('곳', 320),
 ('공항', 307),
 ('직원', 267),
 ('매우', 264)]
</code></pre>
<br>
<p><strong>&gt;&gt; 한글자 명사 제거</strong></p>
<p>위 결과에서 보이듯이, 두 글자 키워드가 대부분 의미 있는 단어지만, ‘수’, ‘것’, '곳’과 같은 한 글자 키워드는 분석에 딱히 좋은 영향을 미치지 않은 것으로 보입니다. 그래서 우리는 한글자 명사를 제거해보도록 하겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">available_counter = Counter({x: counter[x] <span class="keyword">for</span> x <span class="keyword">in</span> counter <span class="keyword">if</span> len(x) &gt; <span class="number">1</span>})</span><br><span class="line">available_counter.most_common(<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('호텔', 803),
 ('위치', 328),
 ('우리', 327),
 ('공항', 307),
 ('직원', 267),
 ('매우', 264),
 ('가격', 245),
 ('객실', 244),
 ('시설', 215),
 ('제주', 192)]
</code></pre>
<br>  
<p>이제 한글자 키워드 모두 제거됐습니다. 하지만 “우리”, “매우” 와 같은 실질적인 의미가 없고 꾸민 역할을 하는 불용어들 아직 존재합니다. 한국어 불용어 사전을 정의하여 불용어도 제거해줄게요.</p>
<br>  
<h3 id="3-3-불용어-사전"><a class="markdownIt-Anchor" href="#3-3-불용어-사전"></a> 3-3. 불용어 사전</h3>
<p><a href="https://www.ranks.nl/" target="_blank" rel="noopener">RANKS NL</a>에 제공해주는 <a href="https://www.ranks.nl/stopwords/korean" target="_blank" rel="noopener">한국어 불용어 사전</a>을 활용하겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">stopwords = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/korean_stopwords.txt"</span>).values.tolist()</span><br><span class="line">stopwords[:<span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[['휴'],
 ['아이구'],
 ['아이쿠'],
 ['아이고'],
 ['어'],
 ['나'],
 ['우리'],
 ['저희'],
 ['따라'],
 ['의해']]
</code></pre>
<br>
<p>이 외에도 우리가 분석하고자 하는 데이터셋에 특화된 불용어들이 있습니다. 예를 들면: “제주”, “호텔”, “숙소” 등. 이런 단어들도 불용어 사전에 추가해보도록 할게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">jeju_hotel_stopwords = [<span class="string">'제주'</span>, <span class="string">'제주도'</span>, <span class="string">'호텔'</span>, <span class="string">'리뷰'</span>, <span class="string">'숙소'</span>, <span class="string">'여행'</span>, <span class="string">'트립'</span>]</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> jeju_hotel_stopwords:</span><br><span class="line">    stopwords.append(word)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="3-4-word-count"><a class="markdownIt-Anchor" href="#3-4-word-count"></a> 3-4. Word Count</h3>
<p><strong>&gt;&gt; BoW 벡터 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_cleaning</span><span class="params">(text)</span>:</span></span><br><span class="line">    hangul = re.compile(<span class="string">'[^ ㄱ-ㅣ 가-힣]'</span>)  <span class="comment"># 정규 표현식 처리</span></span><br><span class="line">    result = hangul.sub(<span class="string">''</span>, text)</span><br><span class="line">    okt = Okt()  <span class="comment"># 형태소 추출</span></span><br><span class="line">    nouns = okt.nouns(result)</span><br><span class="line">    nouns = [x <span class="keyword">for</span> x <span class="keyword">in</span> nouns <span class="keyword">if</span> len(x) &gt; <span class="number">1</span>]  <span class="comment"># 한글자 키워드 제거</span></span><br><span class="line">    nouns = [x <span class="keyword">for</span> x <span class="keyword">in</span> nouns <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> stopwords]  <span class="comment"># 불용어 제거</span></span><br><span class="line">    <span class="keyword">return</span> nouns</span><br><span class="line"></span><br><span class="line">vect = CountVectorizer(tokenizer = <span class="keyword">lambda</span> x: text_cleaning(x))</span><br><span class="line">bow_vect = vect.fit_transform(df[<span class="string">'text'</span>].tolist())</span><br><span class="line">word_list = vect.get_feature_names()</span><br><span class="line">count_list = bow_vect.toarray().sum(axis=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 단어 리스트</span></span><br><span class="line">word_list</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    ['가가',
     '가게',
     '가격',
     '가격표',
     '가구',
     '가급',
     '가기',
     '가까이',
     '가끔',
     '가능',
     '가도',
     '가동',
     '가두',
     '가득',
     '가든',
     '가라',
     '가량',
     '가려움',
     '가로',
     '가면',
     '가몬',
     '가무',
     '가물',
     '가미',
     '가방',
     '가버',
     '가성',
     '가세',
     '가스레인지',
     '가스렌지',
     '가슴',
     '가시',
     '가신',
     '가야',
     '가옥',
     '가요',
     '가용',
     '가운데',
     '가을',
     '가인',
     '가장',
     '가정',
     '가정식',
     '가족',
     '가지',
     '가짓수',
     '가차',
     '가치',
     '가품',
     '각각',
     '각오',
     '각자',
     '각종',
     '각층',
     '간격',
     '간곳',
     '간다',
     '간단',
     '간만',
     '간식',
     '간이',
     '간주',
     '간직',
     '간판',
     '간혹',
     '갈껄',
     '갈비',
     '갈비탕',
     '갈수',
     '갈수록',
     '감각',
     '감동',
     '감명',
     '감사',
     '감상',
     '감소',
     '감안',
     '감자',
     '감히',
     '갑인',
     '갑자기',
     '갑작스레',
     '강남',
     '강력',
     '강아지',
     '강압',
     '강제',
     '강조',
     '강추',
     '개념',
     '개략',
     '개미',
     '개발',
     '개방',
     '개별',
     '개보',
     '개뿔',
     '개선',
     '개수대',
     '개월',
     '개인',
     '개인실',
     '개인정보',
     '개조',
     '개층',
     '객수',
     '객실',
     '갤러리',
     '갱스터',
     '거기',
     '거나',
     '거두',
     '거론',
     '거르세',
     '거름',
     '거리',
     '거린데',
     '거림',
     '거문도',
     '거미',
     '거부',
     '거실',
     '거여',
     '거울',
     '거위',
     '거의',
     '거절',
     '거주',
     '거지',
     '거참',
     '거품',
     '걱정',
     '건가',
     '건강',
     '건너',
     '건너편',
     '건물',
     '건의',
     '건조',
     '건조기',
     '건조대',
     '건축',
     '걷기',
     '걸음',
     '걸이',
     '걸즈',
     '검사',
     '검색',
     '검정색',
     '검토',
     '것임',
     '겉보기',
     '게다가',
     '게스트',
     '게스트하우스',
     '게임',
     '게재',
     '겐찮은듯',
     '겔상',
     '겨우',
     '겨울',
     '겨울철',
     '격인',
     '격하',
     '결과',
     '결론',
     '결석',
     '결재',
     '결정',
     '결제',
     '결코',
     '결함',
     '결항',
     '결혼',
     '결혼식',
     '겸비',
     '겸용',
     '겹겹',
     '경고',
     '경관',
     '경내',
     '경로',
     '경매',
     '경영',
     '경영학',
     '경우',
     '경쟁',
     '경쟁력',
     '경찰',
     '경치',
     '경험',
     '계단',
     '계란',
     '계란후라이',
     '계산',
     '계속',
     '계정',
     '계획',
     '고가',
     '고간',
     '고객',
     '고급',
     '고기',
     '고기국수',
     '고깃배',
     '고내포구',
     '고려',
     '고루',
     '고무줄',
     '고문',
     '고민',
     '고봉',
     '고분',
     '고생',
     '고속',
     '고속도로',
     '고아',
     '고양이',
     '고여',
     '고오',
     '고요',
     '고유',
     '고작',
     '고장',
     '고정',
     '고층',
     '고통',
     '고트',
     '고함',
     '고해',
     '곡부',
     '곧바로',
     '곧장',
     '골드스타',
     '골목',
     '골목길',
     '골퍼',
     '골프',
     '골프장',
     '골프텔',
     '곰팡이',
     '곱슬',
     '곳곳',
     '곳곳이',
     '곳도',
     '곳임',
     '공간',
     '공감',
     '공개',
     '공공',
     '공공장소',
     '공급',
     '공기',
     '공덕',
     '공률',
     '공물',
     '공사',
     '공시',
     '공실이',
     '공연',
     '공연장',
     '공영',
     '공용',
     '공원',
     '공유',
     '공짜',
     '공차',
     '공터',
     '공포',
     '공항',
     '과거',
     '과물',
     '과언',
     '과일',
     '과장',
     '관경',
     '관계',
     '관계자',
     '관광',
     '관광객',
     '관광명소',
     '관광지',
     '관덕정',
     '관련',
     '관리',
     '관리인',
     '관리자',
     '관리직',
     '관음사',
     '관해',
     '광경',
     '광고',
     '광천수',
     '괴체',
     '교대',
     '교수',
     '교외',
     '교욱받',
     '교육',
     '교체',
     '교통',
     '교환',
     '교회',
     '구가',
     '구경',
     '구경만',
     '구관',
     '구글',
     '구나',
     '구내',
     '구덩이',
     '구도',
     '구두',
     '구둣주걱',
     '구들장',
     '구류',
     '구만',
     '구매',
     '구멍',
     '구별',
     '구분',
     '구비',
     '구사',
     '구색',
     '구석',
     '구석구석',
     '구성',
     '구식',
     '구암',
     '구역',
     '구역질',
     '구이',
     '구입',
     '구조',
     '구축',
     '국가',
     '국내',
     '국도',
     '국립',
     '국수',
     '국적',
     '국제',
     '국제공항',
     '군더더기',
     '군데',
     '군데군데',
     '굳럭',
     '굳이',
     '굿굿',
     '굿굿굿',
     '굿앤굿',
     '굿임',
     '권내',
     '권장',
     '권한',
     '귀중',
     '규모',
     '규율',
     '규칙',
     '균형',
     '그거',
     '그것',
     '그게',
     '그냥',
     '그네',
     '그녀',
     '그다음',
     '그다지',
     '그닥',
     '그대로',
     '그동안',
     '그때',
     '그랜드',
     '그레이스',
     '그로',
     '그룹',
     '그릇',
     '그린',
     '그림',
     '극복',
     '극악',
     '근래',
     '근무',
     '근본',
     '근육통',
     '근처',
     '근해',
     '글래드',
     '글쎄',
     '금고',
     '금늘',
     '금능',
     '금릉',
     '금방',
     '금속',
     '금액',
     '금연',
     '금요일',
     '금은',
     '금지',
     '금토일',
     '급상승',
     '급속',
     '기간',
     '기계',
     '기구',
     '기기',
     '기념일',
     '기능',
     '기대',
     '기도',
     '기류',
     '기리',
     '기반',
     '기본',
     '기부',
     '기분',
     '기사',
     '기상',
     '기소',
     '기숙사',
     '기술',
     '기술자',
     '기억',
     '기업',
     '기여',
     '기용',
     '기우',
     '기입',
     '기적',
     '기전',
     '기점',
     '기존',
     '기준',
     '기지',
     '기타',
     '기프트샵',
     '기호',
     '기회',
     '기후',
     '긴장',
     '길가',
     '길림',
     '길목',
     '길이',
     '김녕',
     '김녕해변',
     '김밥',
     '김씨',
     '김치',
     '김포공항',
     '까페',
     '깜빡',
     '깜짝',
     '깨끗',
     '깨끗깔끔',
     '께빵',
     '꼭대기',
     '꽃꺽으러',
     '꽃사슴',
     '꾸러미',
     '꾸밈',
     '꿀잠',
     '끝내기',
     '끼리',
     '나기',
     '나누기',
     '나니',
     '나라',
     '나름',
     '나머지',
     '나머진',
     '나무',
     '나물',
     '나보',
     '나오니',
     '나우',
     '나은',
     '나이',
     '나이트',
     '나이프',
     '나중',
     '나탈리',
     '낙후',
     '낚시',
     '난로',
     '난리',
     '난방',
     '난입',
     '난타',
     '날수',
     '날씨',
     '날짜',
     '남녀',
     '남성',
     '남아',
     '남자',
     '남자친구',
     '남짓',
     '남쪽',
     '남편',
     '낭만',
     '내겐',
     '내내',
     '내년',
     '내부',
     '내부시',
     '내시',
     '내야',
     '내외',
     '내용',
     '내의',
     '내인',
     '내일',
     '냄비',
     '냄새',
     '냉동',
     '냉장고',
     '너븐팡',
     '넓이',
     '네스프레소',
     '네이버',
     '년대',
     '년전',
     '녔던',
     '노곤',
     '노래',
     '노래방',
     '노력',
     '노리',
     '노블레스',
     '노선',
     '노을',
     '노크',
     '노트북',
     '노화',
     '노후',
     '녹물',
     '녹음',
     '녹지',
     '논평',
     '놀러와',
     '놀수',
     '놀이',
     '놀이기구',
     '놀이터',
     '농부가',
     '농장',
     '높이',
     '놨더군',
     '누가',
     '누구',
     '누군가',
     '누락',
     '누리',
     '누울',
     '눈앞',
     '뉴타운',
     '느낌',
     '는걸',
     '늘송',
     '능리',
     '다가',
     '다그',
     '다다미',
     '다라',
     '다락방',
     '다른',
     '다른사람',
     '다리미',
     '다만',
     '다미',
     '다발',
     '다섯',
     '다소',
     '다수',
     '다시',
     '다운',
     '다음',
     '다이지',
     '다인',
     '다정',
     '다행',
     '단계',
     '단기',
     '단면',
     '단어',
     '단위',
     '단점',
     '단정',
     '단지',
     '단체',
     '달걀',
     '달걀프라이',
     '달라',
     '달러',
     '달리',
     '달성',
     '닭머르',
     '담당',
     '담배',
     '담소',
     '담요',
     '답변',
     '당구',
     '당근',
     '당나귀',
     '당분간',
     '당시',
     '당신',
     '당일',
     '당황',
     '대가',
     '대가족',
     '대고',
     '대관령',
     '대답',
     '대당',
     '대도',
     '대도시',
     '대뜸',
     '대략',
     '대로',
     '대리',
     '대명',
     '대박',
     '대부분',
     '대비',
     '대상',
     '대신',
     '대안',
     '대여',
     '대요',
     '대욕',
     '대응',
     '대의',
     '대입',
     '대적',
     '대접',
     '대정',
     '대중',
     '대중교통',
     '대처',
     '대체',
     '대충',
     '대포',
     '대표',
     '대하',
     '대한',
     '대한민국',
     '대한항공',
     '대해',
     '대행',
     '대형',
     '대화',
     '대환영',
     '댐핑할',
     '더군다나',
     '더더',
     '더러',
     '더블',
     '더블베드',
     '더욱',
     '더원',
     '덕림사',
     '덕분',
     '덕택',
     '던데',
     '덮어놓고',
     '데리',
     '데스크',
     '데스크톱',
     '데이',
     '데이즈',
     '델문',
     '도구',
     '도달',
     '도대체',
     '도도',
     '도둑',
     '도로',
     '도록',
     '도리어',
     '도미',
     '도보',
     '도서관',
     '도시',
     '도시락',
     '도심',
     '도심지',
     '도어',
     '도어락',
     '도움',
     '도움말',
     '도일',
     '도정',
     '도중',
     '도착',
     '도처',
     '도청',
     '도쿄',
     '도크',
     '독립',
     '독서',
     '독점',
     '독채',
     '돈까스',
     '돌담',
     '돌잔치',
     '동계',
     '동광양',
     '동굴',
     '동남',
     '동남아',
     '동네',
     '동도',
     '동료',
     '동문',
     '동물',
     '동물원',
     '동반',
     '동부',
     '동북',
     '동생',
     '동선',
     '동시',
     '동안',
     '동영상',
     '동의',
     '동이',
     '동인',
     '동작',
     '동전',
     '동정',
     '동쪽',
     '돼지',
     '돼지고기',
     '됏다',
     '될껀',
     '될껄',
     '두루',
     '두번째',
     '두봉',
     '두부',
     '두엄',
     '두운',
     '두툼',
     '둘러보기',
     '둘이서',
     '둘째',
     '둥근지붕',
     '뒤쪽',
     '뒤척',
     '뒷골목',
     '뒷마당',
     '뒷문',
     '뒷쪽',
     '드네',
     '드라이기',
     '드라이버',
     '드라이브',
     '드라이어',
     '드롭',
     '드릴',
     '드타',
     '드하',
     '득시',
     '듭니',
     '듯이',
     '듯해',
     '등급',
     '등대',
     '등등',
     '등반',
     '등산',
     '등정후',
     '디귿',
     '디너',
     '디럭스',
     '디봇',
     '디셈버',
     '디자이너',
     '디자인',
     '디저트',
     '디제이',
     '따라서',
     '때로는',
     '때문',
     '떡국',
     '또오',
     '또한',
     '뚜벅',
     '뜨근뜨근',
     '뜨내기',
     '라그',
     '라마',
     '라며',
     '라면',
     '라서',
     '라스베가스',
     '라우터',
     '라운지',
     '라이센스',
     '라커룸',
     '락스',
     '락심이',
     '락커',
     '락타',
     '란딩',
     '랍니',
     '랜드',
     '랜트',
     '랜트카',
     '랜트하',
     '램프',
     '러닝',
     '러브',
     '럭셔리',
     '런가',
     '렀는데',
     '렀습니',
     '렀으',
     '레노',
     '레드',
     '레벨',
     '레비',
     '레스토랑',
     '레시',
     '레오',
     '레이',
     '레이크',
     '레인지',
     '레저',
     '레프트',
     '렌즈',
     '렌탈업체',
     '렌터',
     '렌터카',
     '렌트',
     '렌트카',
     '려고',
     '려운',
     '로고',
     '로그',
     '로만',
     '로맨틱',
     '로부터',
     '로비',
     '로서',
     '로션',
     '로얄',
     '로움',
     '로컬',
     '로터리',
     '로프트',
     '롯데',
     '롯데리아',
     '롱보드',
     '루온토',
     '루트',
     '루프',
     '룸메이트',
     '룸바닥',
     '룸상태',
     '룸서비스',
     '룸안',
     '룸키',
     '룸타입',
     '를위',
     '리가',
     '리기',
     '리넨',
     '리뉴',
     '리뉴얼',
     '리더',
     '리도',
     '리모콘',
     '리베라',
     '리베로',
     '리빙룸',
     '리셉션',
     '리움',
     '리젠시',
     '리조트',
     '리지',
     '리치',
     '리트',
     '리플렛',
     '린스',
     '링잉',
     '마누카꿀',
     '마늘',
     '마다',
     '마담',
     '마당',
     '마레',
     '마련',
     '마루',
     '마리',
     '마모',
     '마무리',
     '마사지',
     '마술',
     '마스코트',
     '마스크',
     '마스터',
     '마시기',
     '마안',
     '마운트',
     '마을',
     '마음',
     '마이너스',
     '마인드',
     '마일리지',
     '마자',
     '마저',
     '마주',
     '마지막',
     '마지막여행',
     '마차',
     '마찬가지',
     '마치',
     '마침내',
     '마켓',
     '마트',
     '마틸다',
     '막걸리',
     '만끽',
     '만난',
     '만날',
     '만남',
     '만다린',
     '만두',
     '만들기',
     '만료',
     '만약',
     '만요',
     '만원',
     '만점',
     '만족',
     '만족도',
     '만천원',
     '만큼',
     '만하',
     '만해',
     '만화책',
     '말레이시아',
     '말레이시아인',
     '말로',
     '말리',
     '말씀',
     '말투',
     '말함',
     '맘스',
     '맛사지',
     '맛잇엇어',
     '맛집',
     '망각',
     '망신',
     '망치',
     '맞은편',
     '맞이',
     '매년',
     '매니',
     '매니저',
     '매달',
     '매듭',
     '매력',
     '매번',
     '매우',
     '매운탕',
     '매일',
     '매장',
     '매점',
     '매칭',
     '매트',
     '매트리스',
     '매트릭스',
     '매하',
     '맥도날드',
     '맥도널드',
     '맥주',
     '맥주잔',
     '맨발',
     '머리',
     '머리카락',
     '머신',
     '머싱',
     '먹거리',
     '먹기',
     '먹방',
     '먹이',
     '먼저',
     '먼지',
     '멀리',
     '메가박스',
     '메뉴',
     '메리',
     '메리어트',
     '메시지',
     ...]
</pre>
</div>
  <br>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어가 전체 리뷰중에 등장한 총 횟수</span></span><br><span class="line">count_list</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([  4,   8, 245, ...,   1,   7,  14], dtype=int64)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어의 리뷰별 등장 횟수</span></span><br><span class="line">bow_vect.toarray()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 2, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int64)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">bow_vect.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1001, 3599)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "단어" - "총 등장 횟수" Matching</span></span><br><span class="line"></span><br><span class="line">word_count_dict = dict(zip(word_list, count_list))</span><br><span class="line">word_count_dict</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    {'가가': 4,
     '가게': 8,
     '가격': 245,
     '가격표': 1,
     '가구': 8,
     '가급': 1,
     '가기': 20,
     '가까이': 20,
     '가끔': 5,
     '가능': 10,
     '가도': 7,
     '가동': 2,
     '가두': 1,
     '가득': 2,
     '가든': 1,
     '가라': 3,
     '가량': 1,
     '가려움': 1,
     '가로': 2,
     '가면': 14,
     '가몬': 1,
     '가무': 1,
     '가물': 1,
     '가미': 1,
     '가방': 4,
     '가버': 1,
     '가성': 49,
     '가세': 3,
     '가스레인지': 1,
     '가스렌지': 1,
     '가슴': 1,
     '가시': 4,
     '가신': 3,
     '가야': 10,
     '가옥': 1,
     '가요': 5,
     '가용': 1,
     '가운데': 3,
     '가을': 4,
     '가인': 1,
     '가장': 42,
     '가정': 4,
     '가정식': 2,
     '가족': 94,
     '가지': 55,
     '가짓수': 3,
     '가차': 1,
     '가치': 15,
     '가품': 1,
     '각각': 7,
     '각오': 1,
     '각자': 2,
     '각종': 3,
     '각층': 1,
     '간격': 2,
     '간곳': 1,
     '간다': 4,
     '간단': 1,
     '간만': 1,
     '간식': 5,
     '간이': 3,
     '간주': 1,
     '간직': 1,
     '간판': 2,
     '간혹': 1,
     '갈껄': 1,
     '갈비': 1,
     '갈비탕': 1,
     '갈수': 7,
     '갈수록': 1,
     '감각': 1,
     '감동': 12,
     '감명': 1,
     '감사': 6,
     '감상': 3,
     '감소': 1,
     '감안': 5,
     '감자': 1,
     '감히': 1,
     '갑인': 1,
     '갑자기': 4,
     '갑작스레': 1,
     '강남': 1,
     '강력': 9,
     '강아지': 7,
     '강압': 2,
     '강제': 1,
     '강조': 1,
     '강추': 8,
     '개념': 1,
     '개략': 1,
     '개미': 1,
     '개발': 3,
     '개방': 2,
     '개별': 3,
     '개보': 1,
     '개뿔': 1,
     '개선': 4,
     '개수대': 1,
     '개월': 1,
     '개인': 23,
     '개인실': 1,
     '개인정보': 2,
     '개조': 5,
     '개층': 1,
     '객수': 1,
     '객실': 244,
     '갤러리': 2,
     '갱스터': 1,
     '거기': 24,
     '거나': 6,
     '거두': 1,
     '거론': 1,
     '거르세': 1,
     '거름': 2,
     '거리': 156,
     '거린데': 1,
     '거림': 1,
     '거문도': 1,
     '거미': 1,
     '거부': 4,
     '거실': 29,
     '거여': 1,
     '거울': 5,
     '거위': 1,
     '거의': 27,
     '거절': 3,
     '거주': 1,
     '거지': 1,
     '거참': 1,
     '거품': 2,
     '걱정': 27,
     '건가': 1,
     '건강': 2,
     '건너': 8,
     '건너편': 11,
     '건물': 55,
     '건의': 1,
     '건조': 2,
     '건조기': 3,
     '건조대': 2,
     '건축': 2,
     '걷기': 2,
     '걸음': 3,
     '걸이': 2,
     '걸즈': 1,
     '검사': 1,
     '검색': 13,
     '검정색': 1,
     '검토': 3,
     '것임': 3,
     '겉보기': 2,
     '게다가': 5,
     '게스트': 25,
     '게스트하우스': 30,
     '게임': 2,
     '게재': 1,
     '겐찮은듯': 1,
     '겔상': 1,
     '겨우': 3,
     '겨울': 15,
     '겨울철': 2,
     '격인': 1,
     '격하': 1,
     '결과': 2,
     '결론': 3,
     '결석': 1,
     '결재': 2,
     '결정': 12,
     '결제': 1,
     '결코': 2,
     '결함': 1,
     '결항': 2,
     '결혼': 1,
     '결혼식': 2,
     '겸비': 1,
     '겸용': 1,
     '겹겹': 2,
     '경고': 1,
     '경관': 3,
     '경내': 1,
     '경로': 1,
     '경매': 1,
     '경영': 2,
     '경영학': 1,
     '경우': 41,
     '경쟁': 1,
     '경쟁력': 2,
     '경찰': 2,
     '경치': 17,
     '경험': 26,
     '계단': 4,
     '계란': 11,
     '계란후라이': 1,
     '계산': 2,
     '계속': 23,
     '계정': 1,
     '계획': 13,
     '고가': 1,
     '고간': 1,
     '고객': 14,
     '고급': 8,
     '고기': 8,
     '고기국수': 1,
     '고깃배': 1,
     '고내포구': 1,
     '고려': 9,
     '고루': 1,
     '고무줄': 1,
     '고문': 2,
     '고민': 9,
     '고봉': 1,
     '고분': 2,
     '고생': 1,
     '고속': 2,
     '고속도로': 2,
     '고아': 1,
     '고양이': 3,
     '고여': 1,
     '고오': 1,
     '고요': 3,
     '고유': 2,
     '고작': 1,
     '고장': 3,
     '고정': 3,
     '고층': 2,
     '고통': 1,
     '고트': 1,
     '고함': 2,
     '고해': 1,
     '곡부': 1,
     '곧바로': 2,
     '곧장': 2,
     '골드스타': 1,
     '골목': 6,
     '골목길': 2,
     '골퍼': 2,
     '골프': 9,
     '골프장': 5,
     '골프텔': 2,
     '곰팡이': 14,
     '곱슬': 1,
     '곳곳': 4,
     '곳곳이': 1,
     '곳도': 8,
     '곳임': 2,
     '공간': 73,
     '공감': 1,
     '공개': 1,
     '공공': 2,
     '공공장소': 1,
     '공급': 2,
     '공기': 8,
     '공덕': 1,
     '공률': 1,
     '공물': 1,
     '공사': 12,
     '공시': 1,
     '공실이': 1,
     '공연': 8,
     '공연장': 2,
     '공영': 1,
     '공용': 8,
     '공원': 17,
     '공유': 5,
     '공짜': 1,
     '공차': 1,
     '공터': 1,
     '공포': 1,
     '공항': 307,
     '과거': 1,
     '과물': 2,
     '과언': 1,
     '과일': 9,
     '과장': 2,
     '관경': 1,
     '관계': 3,
     '관계자': 2,
     '관광': 38,
     '관광객': 15,
     '관광명소': 4,
     '관광지': 12,
     '관덕정': 4,
     '관련': 6,
     '관리': 39,
     '관리인': 1,
     '관리자': 3,
     '관리직': 2,
     '관음사': 1,
     '관해': 5,
     '광경': 2,
     '광고': 4,
     '광천수': 1,
     '괴체': 1,
     '교대': 1,
     '교수': 1,
     '교외': 1,
     '교욱받': 1,
     '교육': 5,
     '교체': 7,
     '교통': 30,
     '교환': 2,
     '교회': 2,
     '구가': 3,
     '구경': 7,
     '구경만': 1,
     '구관': 4,
     '구글': 2,
     '구나': 2,
     '구내': 1,
     '구덩이': 1,
     '구도': 1,
     '구두': 2,
     '구둣주걱': 1,
     '구들장': 1,
     '구류': 1,
     '구만': 2,
     '구매': 14,
     '구멍': 7,
     '구별': 1,
     '구분': 3,
     '구비': 11,
     '구사': 6,
     '구색': 2,
     '구석': 2,
     '구석구석': 5,
     '구성': 7,
     '구식': 1,
     '구암': 1,
     '구역': 3,
     '구역질': 2,
     '구이': 1,
     '구입': 5,
     '구조': 12,
     '구축': 1,
     '국가': 3,
     '국내': 1,
     '국도': 1,
     '국립': 1,
     '국수': 3,
     '국적': 3,
     '국제': 11,
     '국제공항': 1,
     '군더더기': 1,
     '군데': 8,
     '군데군데': 2,
     '굳럭': 1,
     '굳이': 7,
     '굿굿': 1,
     '굿굿굿': 1,
     '굿앤굿': 1,
     '굿임': 1,
     '권내': 1,
     '권장': 5,
     '권한': 2,
     '귀중': 1,
     '규모': 12,
     '규율': 2,
     '규칙': 1,
     '균형': 1,
     '그거': 3,
     '그것': 70,
     '그게': 1,
     '그냥': 42,
     '그네': 1,
     '그녀': 20,
     '그다음': 1,
     '그다지': 4,
     '그닥': 4,
     '그대로': 11,
     '그동안': 4,
     '그때': 3,
     '그랜드': 6,
     '그레이스': 3,
     '그로': 3,
     '그룹': 9,
     '그릇': 3,
     '그린': 1,
     '그림': 4,
     '극복': 1,
     '극악': 1,
     '근래': 1,
     '근무': 4,
     '근본': 1,
     '근육통': 1,
     '근처': 164,
     '근해': 1,
     '글래드': 3,
     '글쎄': 2,
     '금고': 2,
     '금늘': 1,
     '금능': 2,
     '금릉': 1,
     '금방': 3,
     '금속': 1,
     '금액': 8,
     '금연': 6,
     '금요일': 1,
     '금은': 1,
     '금지': 1,
     '금토일': 1,
     '급상승': 1,
     '급속': 1,
     '기간': 3,
     '기계': 4,
     '기구': 2,
     '기기': 4,
     '기념일': 1,
     '기능': 4,
     '기대': 15,
     '기도': 7,
     '기류': 3,
     '기리': 1,
     '기반': 4,
     '기본': 45,
     '기부': 1,
     '기분': 29,
     '기사': 8,
     '기상': 1,
     '기소': 1,
     '기숙사': 7,
     '기술': 3,
     '기술자': 1,
     '기억': 11,
     '기업': 2,
     '기여': 1,
     '기용': 1,
     '기우': 1,
     '기입': 1,
     '기적': 1,
     '기전': 1,
     '기점': 1,
     '기존': 1,
     '기준': 4,
     '기지': 1,
     '기타': 5,
     '기프트샵': 2,
     '기호': 1,
     '기회': 11,
     '기후': 1,
     '긴장': 1,
     '길가': 4,
     '길림': 1,
     '길목': 2,
     '길이': 2,
     '김녕': 1,
     '김녕해변': 1,
     '김밥': 1,
     '김씨': 1,
     '김치': 4,
     '김포공항': 1,
     '까페': 5,
     '깜빡': 1,
     '깜짝': 3,
     '깨끗': 5,
     '깨끗깔끔': 1,
     '께빵': 1,
     '꼭대기': 2,
     '꽃꺽으러': 1,
     '꽃사슴': 1,
     '꾸러미': 1,
     '꾸밈': 1,
     '꿀잠': 2,
     '끝내기': 1,
     '끼리': 18,
     '나기': 2,
     '나누기': 6,
     '나니': 1,
     '나라': 2,
     '나름': 13,
     '나머지': 6,
     '나머진': 1,
     '나무': 13,
     '나물': 1,
     '나보': 1,
     '나오니': 2,
     '나우': 1,
     '나은': 5,
     '나이': 3,
     '나이트': 2,
     '나이프': 2,
     '나중': 8,
     '나탈리': 2,
     '낙후': 3,
     '낚시': 3,
     '난로': 3,
     '난리': 3,
     '난방': 30,
     '난입': 2,
     '난타': 9,
     '날수': 1,
     '날씨': 12,
     '날짜': 1,
     '남녀': 1,
     '남성': 2,
     '남아': 5,
     '남자': 6,
     '남자친구': 2,
     '남짓': 1,
     '남쪽': 1,
     '남편': 10,
     '낭만': 2,
     '내겐': 1,
     '내내': 8,
     '내년': 1,
     '내부': 40,
     '내부시': 1,
     '내시': 1,
     '내야': 1,
     '내외': 2,
     '내용': 2,
     '내의': 2,
     '내인': 1,
     '내일': 2,
     '냄비': 1,
     '냄새': 58,
     '냉동': 1,
     '냉장고': 35,
     '너븐팡': 2,
     '넓이': 1,
     '네스프레소': 1,
     '네이버': 3,
     '년대': 2,
     '년전': 1,
     '녔던': 1,
     '노곤': 2,
     '노래': 1,
     '노래방': 3,
     '노력': 8,
     '노리': 1,
     '노블레스': 1,
     '노선': 2,
     '노을': 1,
     '노크': 1,
     '노트북': 2,
     '노화': 1,
     '노후': 6,
     '녹물': 1,
     '녹음': 4,
     '녹지': 1,
     '논평': 1,
     '놀러와': 2,
     '놀수': 1,
     '놀이': 3,
     '놀이기구': 2,
     '놀이터': 2,
     '농부가': 1,
     '농장': 3,
     '높이': 2,
     '놨더군': 1,
     '누가': 5,
     '누구': 5,
     '누군가': 4,
     '누락': 1,
     '누리': 1,
     '누울': 2,
     '눈앞': 3,
     '뉴타운': 1,
     '느낌': 49,
     '는걸': 2,
     '늘송': 3,
     '능리': 1,
     '다가': 1,
     '다그': 1,
     '다다미': 1,
     '다라': 1,
     '다락방': 1,
     '다른': 88,
     '다른사람': 1,
     '다리미': 2,
     '다만': 54,
     '다미': 1,
     '다발': 1,
     '다섯': 1,
     '다소': 21,
     '다수': 2,
     '다시': 93,
     '다운': 4,
     '다음': 102,
     '다이지': 1,
     '다인': 1,
     '다정': 2,
     '다행': 3,
     '단계': 4,
     '단기': 1,
     '단면': 1,
     '단어': 2,
     '단위': 2,
     '단점': 40,
     '단정': 1,
     '단지': 16,
     '단체': 19,
     '달걀': 3,
     '달걀프라이': 1,
     '달라': 13,
     '달러': 7,
     '달리': 6,
     '달성': 1,
     '닭머르': 1,
     '담당': 2,
     '담배': 19,
     '담소': 2,
     '담요': 1,
     '답변': 3,
     '당구': 2,
     '당근': 2,
     '당나귀': 2,
     '당분간': 1,
     '당시': 1,
     '당신': 21,
     '당일': 3,
     '당황': 7,
     '대가': 3,
     '대가족': 2,
     '대고': 1,
     '대관령': 1,
     '대답': 3,
     '대당': 1,
     '대도': 3,
     '대도시': 2,
     '대뜸': 1,
     '대략': 6,
     '대로': 8,
     '대리': 3,
     '대명': 1,
     '대박': 3,
     '대부분': 23,
     '대비': 64,
     '대상': 1,
     '대신': 8,
     '대안': 2,
     '대여': 3,
     '대요': 2,
     '대욕': 1,
     '대응': 2,
     '대의': 4,
     '대입': 1,
     '대적': 1,
     '대접': 1,
     '대정': 1,
     '대중': 9,
     '대중교통': 6,
     '대처': 2,
     '대체': 2,
     '대충': 3,
     '대포': 1,
     '대표': 4,
     '대하': 1,
     '대한': 19,
     '대한민국': 2,
     '대한항공': 1,
     '대해': 21,
     '대행': 1,
     '대형': 10,
     '대화': 11,
     '대환영': 1,
     '댐핑할': 1,
     '더군다나': 1,
     '더더': 2,
     '더러': 1,
     '더블': 29,
     '더블베드': 4,
     '더욱': 5,
     '더원': 1,
     '덕림사': 1,
     '덕분': 6,
     '덕택': 3,
     '던데': 1,
     '덮어놓고': 1,
     '데리': 5,
     '데스크': 30,
     '데스크톱': 1,
     '데이': 1,
     '데이즈': 1,
     '델문': 2,
     '도구': 18,
     '도달': 3,
     '도대체': 1,
     '도도': 1,
     '도둑': 1,
     '도로': 41,
     '도록': 1,
     '도리어': 1,
     '도미': 9,
     '도보': 35,
     '도서관': 1,
     '도시': 18,
     '도시락': 4,
     '도심': 14,
     '도심지': 1,
     '도어': 3,
     '도어락': 1,
     '도움': 51,
     '도움말': 1,
     '도일': 1,
     '도정': 1,
     '도중': 2,
     '도착': 69,
     '도처': 1,
     '도청': 2,
     '도쿄': 1,
     '도크': 1,
     '독립': 6,
     '독서': 1,
     '독점': 1,
     '독채': 5,
     '돈까스': 1,
     '돌담': 1,
     '돌잔치': 1,
     '동계': 1,
     '동광양': 1,
     '동굴': 1,
     '동남': 1,
     '동남아': 2,
     '동네': 7,
     '동도': 1,
     '동료': 2,
     '동문': 14,
     '동물': 9,
     '동물원': 2,
     '동반': 3,
     '동부': 2,
     '동북': 1,
     '동생': 3,
     '동선': 3,
     '동시': 7,
     '동안': 48,
     '동영상': 1,
     '동의': 3,
     '동이': 1,
     '동인': 2,
     '동작': 1,
     '동전': 1,
     '동정': 1,
     '동쪽': 5,
     '돼지': 16,
     '돼지고기': 4,
     '됏다': 1,
     '될껀': 1,
     '될껄': 1,
     '두루': 2,
     '두번째': 2,
     '두봉': 2,
     '두부': 1,
     '두엄': 1,
     '두운': 2,
     '두툼': 1,
     '둘러보기': 1,
     '둘이서': 3,
     '둘째': 5,
     '둥근지붕': 1,
     '뒤쪽': 4,
     '뒤척': 1,
     '뒷골목': 1,
     '뒷마당': 1,
     '뒷문': 1,
     '뒷쪽': 2,
     '드네': 1,
     '드라이기': 7,
     '드라이버': 1,
     '드라이브': 11,
     '드라이어': 11,
     '드롭': 1,
     '드릴': 1,
     '드타': 1,
     '드하': 2,
     '득시': 1,
     '듭니': 5,
     '듯이': 1,
     '듯해': 1,
     '등급': 3,
     '등대': 3,
     '등등': 8,
     '등반': 3,
     '등산': 6,
     '등정후': 1,
     '디귿': 1,
     '디너': 4,
     '디럭스': 6,
     '디봇': 1,
     '디셈버': 2,
     '디자이너': 1,
     '디자인': 11,
     '디저트': 1,
     '디제이': 2,
     '따라서': 4,
     '때로는': 1,
     '때문': 112,
     '떡국': 2,
     '또오': 1,
     '또한': 76,
     '뚜벅': 3,
     '뜨근뜨근': 1,
     '뜨내기': 1,
     '라그': 1,
     '라마': 4,
     '라며': 3,
     '라면': 15,
     '라서': 1,
     '라스베가스': 1,
     '라우터': 1,
     '라운지': 9,
     '라이센스': 1,
     '라커룸': 1,
     '락스': 2,
     '락심이': 1,
     '락커': 2,
     '락타': 1,
     '란딩': 1,
     '랍니': 1,
     '랜드': 1,
     '랜트': 1,
     '랜트카': 1,
     '랜트하': 1,
     '램프': 2,
     '러닝': 1,
     '러브': 3,
     '럭셔리': 5,
     '런가': 2,
     '렀는데': 1,
     '렀습니': 2,
     '렀으': 1,
     '레노': 1,
     '레드': 1,
     '레벨': 1,
     '레비': 1,
     '레스토랑': 64,
     '레시': 1,
     '레오': 2,
     '레이': 1,
     '레이크': 1,
     '레인지': 3,
     '레저': 1,
     '레프트': 1,
     '렌즈': 1,
     '렌탈업체': 1,
     '렌터': 1,
     '렌터카': 4,
     '렌트': 17,
     '렌트카': 8,
     '려고': 4,
     '려운': 1,
     '로고': 1,
     '로그': 3,
     '로만': 1,
     '로맨틱': 2,
     '로부터': 2,
     '로비': 49,
     '로서': 2,
     '로션': 1,
     '로얄': 1,
     '로움': 1,
     '로컬': 3,
     '로터리': 1,
     '로프트': 1,
     '롯데': 6,
     '롯데리아': 2,
     '롱보드': 1,
     '루온토': 1,
     '루트': 1,
     '루프': 17,
     '룸메이트': 1,
     '룸바닥': 1,
     '룸상태': 2,
     '룸서비스': 9,
     '룸안': 1,
     '룸키': 2,
     '룸타입': 1,
     '를위': 1,
     '리가': 2,
     '리기': 1,
     '리넨': 1,
     '리뉴': 1,
     '리뉴얼': 1,
     '리더': 1,
     '리도': 1,
     '리모콘': 3,
     '리베라': 2,
     '리베로': 1,
     '리빙룸': 2,
     '리셉션': 29,
     '리움': 2,
     '리젠시': 1,
     '리조트': 53,
     '리지': 1,
     '리치': 1,
     '리트': 1,
     '리플렛': 1,
     '린스': 2,
     '링잉': 1,
     '마누카꿀': 1,
     '마늘': 1,
     '마다': 1,
     '마담': 2,
     '마당': 2,
     '마레': 2,
     '마련': 7,
     '마루': 5,
     '마리': 11,
     '마모': 1,
     '마무리': 3,
     '마사지': 4,
     '마술': 1,
     '마스코트': 2,
     '마스크': 1,
     '마스터': 2,
     '마시기': 2,
     '마안': 1,
     '마운트': 1,
     '마을': 9,
     '마음': 31,
     '마이너스': 1,
     '마인드': 4,
     '마일리지': 2,
     '마자': 2,
     '마저': 1,
     '마주': 4,
     '마지막': 21,
     '마지막여행': 1,
     '마차': 1,
     '마찬가지': 4,
     '마치': 12,
     '마침내': 3,
     '마켓': 9,
     '마트': 14,
     '마틸다': 2,
     '막걸리': 1,
     '만끽': 1,
     '만난': 1,
     '만날': 1,
     '만남': 1,
     '만다린': 2,
     '만두': 1,
     '만들기': 1,
     '만료': 1,
     '만약': 6,
     '만요': 1,
     '만원': 20,
     '만점': 1,
     '만족': 12,
     '만족도': 1,
     '만천원': 1,
     '만큼': 2,
     '만하': 2,
     '만해': 2,
     '만화책': 1,
     '말레이시아': 1,
     '말레이시아인': 1,
     '말로': 2,
     '말리': 1,
     '말씀': 7,
     '말투': 3,
     '말함': 2,
     '맘스': 1,
     '맛사지': 1,
     '맛잇엇어': 1,
     '맛집': 25,
     '망각': 1,
     '망신': 2,
     '망치': 2,
     '맞은편': 7,
     '맞이': 5,
     '매년': 2,
     '매니': 1,
     '매니저': 3,
     '매달': 1,
     '매듭': 1,
     '매력': 5,
     '매번': 1,
     '매우': 265,
     '매운탕': 1,
     '매일': 36,
     '매장': 3,
     '매점': 3,
     '매칭': 1,
     '매트': 5,
     '매트리스': 13,
     '매트릭스': 1,
     '매하': 1,
     '맥도날드': 5,
     '맥도널드': 1,
     '맥주': 22,
     '맥주잔': 1,
     '맨발': 3,
     '머리': 7,
     '머리카락': 4,
     '머신': 3,
     '머싱': 1,
     '먹거리': 7,
     '먹기': 2,
     '먹방': 1,
     '먹이': 3,
     '먼저': 3,
     '먼지': 3,
     '멀리': 14,
     '메가박스': 1,
     '메뉴': 15,
     '메리': 1,
     '메리어트': 1,
     '메시지': 1,
     ...}
</pre>
</div>
<br>
<br>  
<h3 id="3-5-tf-idf-적용"><a class="markdownIt-Anchor" href="#3-5-tf-idf-적용"></a> 3-5. TF-IDF 적용</h3>
<p><strong>&gt;&gt; TF-IDF 변환</strong></p>
<p>Bag of Words 벡터에 대해서 TF-IDF변환 진행합니다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfTransformer</span><br><span class="line"></span><br><span class="line">tfidf_vectorizer = TfidfTransformer()</span><br><span class="line">tf_idf_vect = tfidf_vectorizer.fit_transform(bow_vect)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(tf_idf_vect.shape)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1001, 3599)
</code></pre>
<br>
<p>변환 후 1001*3599 matrix가 출력됩니다. 여기서</p>
<ul>
<li>
<p>한 행(row)은 한 리뷰를 의미하고</p>
</li>
<li>
<p>한 열(column)은 한 단어를 의미합니다.</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 첫 번째 리뷰에서의 단어 중요도(TF-IDF 값) -- 0이 아닌 것만 출력</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>  (0, 3588)	0.35673213299026796
  (0, 2927)	0.2582351368959594
  (0, 2925)	0.320251680858207
  (0, 2866)	0.48843555212083145
  (0, 2696)	0.23004450213863206
  (0, 2311)	0.15421663035331626
  (0, 1584)	0.48843555212083145
  (0, 1527)	0.2928089229786031
  (0, 790)	0.2528176728459411
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 첫 번째 리뷰에서 모든 단어의 중요도 -- 0인 값까지 포함</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray().shape)</span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1, 3599)
[[0. 0. 0. ... 0. 0. 0.]]
</code></pre>
<br>
<p><strong>&gt;&gt; “벡터” - “단어” mapping</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">vect.vocabulary_</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    {'집중': 2866,
     '휴식': 3588,
     '제공': 2696,
     '위치': 2311,
     '선정': 1584,
     '또한': 790,
     '청소': 2927,
     '청결': 2925,
     '상태': 1527,
     '이상': 2392,
     '침대': 3022,
     '이불': 2388,
     '침구': 3021,
     '교체': 299,
     '어메니티': 2013,
     '보강': 1296,
     '베스트': 1277,
     '웨스턴': 2299,
     '회원': 3564,
     '경우': 185,
     '객실': 106,
     '층수': 3009,
     '요청': 2234,
     '적극': 2606,
     '반영': 1188,
     '지인': 2837,
     '소개': 1629,
     '처음': 2910,
     '당황': 611,
     '세면': 1607,
     '도구': 675,
     '잠옷': 2555,
     '필수': 3358,
     '그것': 361,
     '정도': 2673,
     '다음': 578,
     '여기': 2074,
     '박만': 1171,
     '저녁': 2595,
     '맥주': 981,
     '한잔': 3414,
     '렌트': 838,
     '뚜벅': 791,
     '바로': 1159,
     '버스': 1247,
     '정류': 2676,
     '도착': 697,
     '가방': 24,
     '일찍': 2487,
     '정비': 2685,
     '방이': 1225,
     '입실': 2500,
     '업그레이드': 2038,
     '직원': 2849,
     '정말': 2680,
     '바다': 1148,
     '전망': 2623,
     '전일': 2636,
     '함덕': 3425,
     '대명': 624,
     '콘도': 3091,
     '실내': 1861,
     '분위기': 1384,
     '손님': 1659,
     '가장': 40,
     '배치': 1241,
     '대해': 651,
     '대응': 634,
     '써비스': 1889,
     '조식': 2730,
     '부분': 1351,
     '신경': 1838,
     '아주': 1922,
     '특급': 3208,
     '트랜디': 3191,
     '고민': 210,
     '흔적': 3593,
     '여름': 2082,
     '수영장': 1700,
     '사용': 1483,
     '보고': 1297,
     '엄마': 2035,
     '가격': 2,
     '대비': 627,
     '주위': 2769,
     '마트': 924,
     '식당': 1826,
     '시장': 1816,
     '방문': 1217,
     '의사': 2361,
     '동안': 726,
     '정해진': 2695,
     '휘슬': 3580,
     '공항': 269,
     '생각': 1539,
     '시설': 1809,
     '모두': 1028,
     '친절': 3017,
     '모드': 1029,
     '마지막': 917,
     '마무리': 900,
     '테라스': 3156,
     '전경': 2612,
     '인근': 2427,
     '재래시장': 2583,
     '야시장': 1979,
     '이용도': 2402,
     '이용': 2400,
     '일차': 2488,
     '휘슬락': 3581,
     '체크': 2940,
     '주변': 2761,
     '여친': 2094,
     '추억': 2975,
     '가성': 26,
     '추천': 2977,
     '후회': 3575,
     '예전': 2145,
     '그랜드': 372,
     '저희': 2605,
     '아이': 1918,
     '돌잔치': 708,
     '다정': 581,
     '했었더랬': 3470,
     '전통': 2642,
     '메종': 1004,
     '글래드': 387,
     '서비스': 1563,
     '매우': 969,
     '합리': 3428,
     '대의': 635,
     '명절': 1018,
     '숙박': 1721,
     '아티': 1928,
     '백미': 1243,
     '커피': 3061,
     '베이커리': 1280,
     '가족': 43,
     '플러스': 3342,
     '지금': 2816,
     '우선': 2257,
     '접근성': 2664,
     '쇼핑': 1671,
     '만족도': 940,
     '최고': 2957,
     '무엇': 1078,
     '기억': 423,
     '우리': 2251,
     '찾기': 2902,
     '교통': 300,
     '이틀': 2418,
     '정원': 2691,
     '거기': 109,
     '겨울': 160,
     '친구': 3016,
     '놀러와': 541,
     '투숙': 3185,
     '야외': 1981,
     '방향': 1235,
     '야간': 1976,
     '조명': 2726,
     '순간': 1723,
     '대접': 638,
     '실명': 1868,
     '거론': 112,
     '프론트': 3337,
     '이름': 2378,
     '안나': 1938,
     '기분': 416,
     '모습': 1037,
     '첫날': 2921,
     '스타트': 1761,
     '다시': 576,
     '선물': 1578,
     '카운터': 3032,
     '안내': 1939,
     '디너': 777,
     '기회': 438,
     '미니바': 1121,
     '무료': 1067,
     '최근': 2959,
     '관광지': 281,
     '숙고': 1719,
     '강추': 88,
     '야경': 1977,
     '일부러': 2475,
     '일어나서': 2476,
     '동네': 714,
     '바퀴': 1168,
     '먹방': 990,
     '신라': 1843,
     '퀄리티': 3105,
     '모녀': 1024,
     '제주시': 2711,
     '위해': 2313,
     '선택': 1586,
     '오픈': 2180,
     '예약': 2143,
     '대로': 622,
     '거리': 115,
     '더군다나': 657,
     '셔틀버스': 1627,
     '운행': 2271,
     '데스크': 670,
     '차안': 2880,
     '분도': 1374,
     '인상': 2438,
     '트윈': 3201,
     '사이즈': 1489,
     '만족': 939,
     '스타': 1758,
     '가짓수': 45,
     '느낌': 558,
     '화장실': 3538,
     '내부': 505,
     '인테리어': 2455,
     '질적': 2859,
     '이건': 2368,
     '개인': 100,
     '취향': 3005,
     '구비': 321,
     '과일': 273,
     '나이프': 480,
     '포크': 3295,
     '부탁': 1364,
     '준비': 2786,
     '표방': 3305,
     '모텔': 1046,
     '결론': 165,
     '훌륭': 3577,
     '시간': 1799,
     '슈페리어킹룸': 1737,
     '하루': 3376,
     '후기': 3570,
     '지은지': 2836,
     '얼마': 2033,
     '건물': 136,
     '약간': 1985,
     '유럽': 2318,
     '스타일': 1760,
     '그림': 378,
     '조각': 2715,
     '복도': 1323,
     '전시': 2633,
     '전부': 2630,
     '카펫': 3039,
     '등급': 770,
     '다른': 567,
     '이서': 2394,
     '자기': 2512,
     '조금': 2722,
     '외투': 2218,
     '완전': 2206,
     '진짜': 2856,
     '셔틀': 1626,
     '미리': 1127,
     '시티': 1821,
     '오름': 2162,
     '다만': 570,
     '도로': 680,
     '가인': 39,
     '관계': 276,
     '차량': 2876,
     '소리': 1638,
     '다소': 574,
     '방도': 1215,
     '편의점': 3273,
     '칫솔': 3027,
     '동계': 709,
     '훈련': 3576,
     '라마': 795,
     '연인': 2116,
     '전체': 2641,
     '사진': 1493,
     '첨부': 2920,
     '엘리베이터': 2064,
     '실시간': 1873,
     '비행기': 1440,
     '택시': 3151,
     '미만': 1128,
     '이동': 2374,
     '가능': 9,
     '최상': 2961,
     '욕실': 2235,
     '슬리퍼': 1791,
     '위생': 2304,
     '염려': 2123,
     '설날': 1590,
     '떡국': 788,
     '려고': 840,
     '현장': 3495,
     '결재': 167,
     '황스': 3559,
     '려운': 841,
     '중국': 2789,
     '만두': 932,
     '종류': 2744,
     '별로': 1293,
     '구만': 316,
     '메뉴': 996,
     '답변': 603,
     '제일': 2709,
     '주차': 2779,
     '걱정': 131,
     '할아버지': 3423,
     '안심': 1945,
     '컨디션': 3067,
     '문어': 1095,
     '처리': 2909,
     '회사': 3561,
     '출장': 2988,
     '서울': 1567,
     '간혹': 64,
     '이벤트': 2386,
     '해주시': 3460,
     '부대': 1344,
     '항상': 3435,
     '롯데': 855,
     '비지니스': 1434,
     '여행객': 2097,
     '손색': 1664,
     '욕조': 2236,
     '겸비': 175,
     '사계절': 1459,
     '수풀': 1715,
     '중문': 2794,
     '표선등': 3306,
     '원거리': 2281,
     '여행지': 2101,
     '복귀': 1322,
     '시내': 1805,
     '유명': 2323,
     '일단': 2462,
     '주차장': 2781,
     '지하': 2844,
     '공간': 246,
     '응대': 2356,
     '문의사항': 1097,
     '신지': 1850,
     '감동': 71,
     '역시': 2106,
     '장도': 2566,
     '락타': 807,
     '샤워': 1550,
     '마련': 896,
     '코인': 3089,
     '세탁실': 1620,
     '오션': 2167,
     '멀리': 994,
     '남자친구': 497,
     '덕분': 665,
     '이번': 2385,
     '프런트': 3331,
     '배정': 1239,
     '이착륙': 2415,
     '클리닝': 3120,
     '근무': 382,
     '아주머니': 1923,
     '인사': 2436,
     '코로나': 3085,
     '사태': 1496,
     '노화': 535,
     '벽지': 1286,
     '주름': 2756,
     '지고': 2814,
     '타일': 3133,
     '가구': 4,
     '코너': 3082,
     '곳곳이': 243,
     '관광객': 279,
     '인지': 2449,
     '사람': 1463,
     '북적': 1369,
     '전반': 2627,
     '관리': 284,
     '편이': 3274,
     '피드백': 3346,
     '편입': 3276,
     '도시': 686,
     '관광': 278,
     '특화': 3214,
     '지역': 2834,
     '근처': 385,
     '카페': 3034,
     '가기': 6,
     '고유': 221,
     '특색': 3210,
     '스테이': 1768,
     '가도': 10,
     '스타벅스': 1759,
     '번화가': 1263,
     '아침': 1924,
     '커서': 3057,
     '방음': 1224,
     '먹거리': 988,
     '단점': 588,
     '라면': 797,
     '오심': 2170,
     '이중': 2411,
     '혼자': 3523,
     '겐찮은듯': 157,
     '다그': 563,
     '도일': 694,
     '께빵': 456,
     '중국인': 2793,
     '타고': 3127,
     '눈앞': 556,
     '가지': 44,
     '힐링': 3598,
     '피트니스': 3354,
     '패키지': 3254,
     '미닫이': 1122,
     '로비': 847,
     '비롯': 1421,
     '모든': 1030,
     '각종': 52,
     '물건': 1103,
     '아침식사': 1926,
     '밥맛': 1207,
     '피아노': 3349,
     '연주': 2118,
     '룸타입': 867,
     '패밀리': 3250,
     '거실': 121,
     '한실': 3412,
     '서부': 1562,
     '수산시장': 1690,
     '새벽': 1534,
     '경매': 182,
     '구경': 304,
     '추가': 2972,
     '어차피': 2022,
     '현재': 3496,
     '묵고': 1090,
     '인터넷': 2453,
     '지정': 2840,
     '안해': 1952,
     '프런터': 3330,
     '문의': 1096,
     '영화': 2135,
     '시스템': 1810,
     '티브이': 3219,
     '채널': 2903,
     '몇개': 1020,
     '콘센트': 3092,
     '플러그': 3341,
     '와이프': 2201,
     '충전': 2995,
     '결정': 168,
     '달라': 594,
     '경험': 190,
     '장점': 2579,
     '인생': 2439,
     '최악': 2966,
     '중심': 2797,
     '바닷가': 1153,
     '비교': 1413,
     '편임': 3275,
     '한번': 3408,
     '예정': 2146,
     '휴가': 3585,
     '스위트룸': 1750,
     '유리창': 2322,
     '위트': 2312,
     '캠핑': 3050,
     '테이블': 3160,
     '세트': 1621,
     '텐트': 3161,
     '에어컨': 2054,
     '작은방': 2543,
     '매트': 975,
     '자리': 2520,
     '탑동': 3142,
     '공원': 263,
     '프리': 3338,
     '마켓': 923,
     '공연': 259,
     '매일': 971,
     '식사': 1833,
     '관덕정': 282,
     '정문': 2682,
     '도보': 684,
     '소요': 1645,
     '해장국': 3458,
     '동문': 717,
     '서문시장': 1560,
     '목관': 1047,
     '맞은편': 960,
     '슬슬': 1792,
     '별관': 1291,
     '본관': 1330,
     '갈수': 68,
     '최신': 2965,
     '그린': 377,
     '환경': 3545,
     '때문': 787,
     '별도': 1292,
     '대중교통': 641,
     '구매': 317,
     '심플': 1882,
     '비품': 1438,
     '트윈침대': 3205,
     '스탠다드': 1763,
     '높이': 548,
     '한라산': 3404,
     '노곤': 525,
     '터미널': 3152,
     '온돌룸': 2189,
     '세면대': 1608,
     '물이': 1114,
     '치약': 3013,
     '것임': 150,
     '생수': 1545,
     '환승': 3550,
     '곧바로': 231,
     '동광양': 710,
     '정류장': 2677,
     '시청': 1818,
     '스텝': 1771,
     '협소하': 3502,
     '거품': 130,
     '타월': 3131,
     '화장': 3537,
     '대가': 612,
     '거울': 123,
     '쇼파': 1670,
     '조합': 2739,
     '금액': 395,
     '주차공간': 2780,
     '공터': 267,
     '태풍': 3150,
     '개층': 104,
     '오후': 2184,
     '한시': 3409,
     '사우나': 1485,
     '부모님': 1349,
     '할머니': 3422,
     '모시': 1038,
     '계획': 197,
     '일로': 2464,
     '빠듯해': 1445,
     '어디': 2004,
     '길가': 441,
     '골목길': 235,
     '이륙': 2377,
     '착륙': 2887,
     '보이': 1310,
     '그냥': 363,
     '일반': 2469,
     '대욕': 633,
     '헬스장': 3489,
     '가면': 19,
     '고려': 206,
     '렌터카': 837,
     '입구': 2496,
     '반대쪽': 1182,
     '한정': 3416,
     '단체': 591,
     '더블': 660,
     '제외': 2708,
     '여유': 2088,
     '반대편': 1183,
     '도심': 688,
     '불구': 1387,
     '소음': 1648,
     '거의': 125,
     '세명': 1609,
     '트리플': 3199,
     '전날': 2618,
     '남아': 495,
     '자체': 2534,
     '당일': 610,
     '정보': 2683,
     '햇반': 3468,
     '장조림': 2580,
     '전자': 2637,
     '레인지': 831,
     '가야': 33,
     '세미나': 1610,
     '한국인': 3400,
     '그대로': 369,
     '나름': 469,
     '제과점': 2697,
     '정거장': 2670,
     '모기': 1022,
     '만해': 944,
     '마리': 898,
     '가량': 16,
     '방안': 1222,
     '에프킬라': 2058,
     '비치': 1435,
     '계속': 195,
     '뿌리': 1456,
     '잡고': 2557,
     '찬장': 2891,
     '천장': 2915,
     '곳곳': 242,
     '측은': 3008,
     '벌레': 1265,
     '기본': 414,
     '요금': 2223,
     '건너편': 135,
     '번호': 1262,
     '샐러드': 1538,
     '음식': 2349,
     '구성': 326,
     '전복죽': 2629,
     '저번': 2601,
     '핸드폰': 3464,
     '충전기': 2996,
     '불편': 1400,
     '센터': 1622,
     '공사': 256,
     '숙면': 1720,
     '무난': 1061,
     '노력': 528,
     '지불': 2826,
     '비용': 1430,
     '로맨틱': 845,
     '독립': 702,
     '북유럽': 1368,
     '유리': 2321,
     '커튼': 3059,
     '바깥': 1145,
     '설치': 1595,
     '모던': 1025,
     '비데': 1418,
     '효율': 3569,
     '인치': 2451,
     '삼성': 1512,
     '만끽': 927,
     '편안함': 3270,
     '여정': 2091,
     '바닥': 1151,
     '목적': 1052,
     '커플': 3060,
     '끼리': 464,
     '직진': 2852,
     '운전': 2268,
     '공영': 261,
     '애기': 1962,
     '무선인터넷': 1074,
     '갑자기': 80,
     '서전': 1568,
     '항공': 3432,
     '다가': 562,
     '가급': 5,
     '결제': 169,
     '은방': 2342,
     '상황': 1533,
     '아시': 1914,
     '고트': 227,
     '지도': 2822,
     '세심': 1614,
     '공시': 257,
     '시작': 1815,
     '맥주잔': 982,
     '쿠폰': 3102,
     '일도': 2463,
     '크기': 3108,
     '룸서비스': 864,
     '정신': 2690,
     '평가': 3277,
     '편의': 3272,
     '요즘': 2233,
     '여러': 2078,
     '직언': 2848,
     '블룸': 1412,
     '변기': 1288,
     '물질': 1115,
     '얘기': 1997,
     '수건': 1675,
     '환불': 3548,
     '월일': 2293,
     '푸른': 3313,
     '파도': 3223,
     '철썩': 2918,
     '풍경': 3320,
     '생선회': 1544,
     '장소': 2573,
     '놀이': 543,
     '양도': 1989,
     '돼지': 735,
     '전골': 2613,
     '매운탕': 970,
     '형편': 3512,
     '브런치': 1406,
     '뒤쪽': 751,
     '맛집': 956,
     '쭈욱': 2869,
     '갑인': 79,
     '드타': 764,
     '방파제': 1233,
     '횟집': 3567,
     '타운': 3129,
     '해산물': 3448,
     '규모': 356,
     '가까이': 7,
     '어르신': 2008,
     '깨끗': 454,
     '대신': 629,
     '작고': 2538,
     '수영': 1697,
     '아쉬움': 1912,
     '인도': 2430,
     '소독약': 1634,
     '스비': 1745,
     '홀로': 3525,
     '등정후': 775,
     '부터': 1365,
     '혹시': 3520,
     '확인': 3543,
     '전화': 2645,
     '통해': 3180,
     '휘트니': 3582,
     '운동복': 2266,
     '수영모': 1698,
     '고오': 219,
     '바람': 1157,
     '대여': 631,
     '여직원': 2093,
     '무시': 1077,
     '말투': 951,
     '원래': 2284,
     '제로': 2700,
     '운영': 2267,
     '일반인': 2470,
     '입장': 2503,
     '선심': 1583,
     '필요': 3360,
     '기전': 430,
     '대뜸': 620,
     '화가': 3528,
     '고객': 200,
     '플레인': 3343,
     '시경': 1800,
     '아웃': 1917,
     '하야': 3382,
     '메리어트': 998,
     '여럿': 2081,
     '이어도': 2397,
     '수준': 1707,
     '이군': 2370,
     '실망': 1867,
     '종일': 2747,
     '리셉션': 880,
     '컨시어': 3070,
     '태도': 3147,
     '유료': 2319,
     '사고': 1460,
     '학생': 3393,
     '선생님': 1580,
     '어딘': 2005,
     '사항': 1498,
     '무슨': 1075,
     '거지': 128,
     '리빙룸': 879,
     '하나요': 3368,
     '트윈룸': 3202,
     '무려': 1065,
     '게재': 156,
     '실물': 1869,
     '차이': 2881,
     '실화': 1879,
     '파우더': 3231,
     '곰팡이': 240,
     '자국': 2511,
     '작동': 2539,
     '골드스타': 233,
     '냉장고': 517,
     '절대': 2649,
     '레스토랑': 826,
     '자꾸': 2513,
     '정색': 2687,
     '살짝': 1510,
     '서버': 1561,
     '데리': 669,
     '가신': 32,
     '나머지': 470,
     '물기': 1105,
     '직접': 2851,
     '체계': 2931,
     '엉망': 2048,
     '소규모': 1630,
     '시기': 1803,
     '마음': 910,
     '리트': 886,
     '라그': 794,
     '기대': 409,
     '실내수영장': 1862,
     '수온': 1701,
     '스위트': 1749,
     '비수': 1427,
     '상대': 1515,
     '노후': 536,
     '정가': 2669,
     '무리': 1072,
     '할인': 3424,
     '행사': 3473,
     '참고': 2893,
     '포함': 3298,
     '마일리지': 913,
     '대한항공': 650,
     '하룻밤': 3377,
     '확실': 3542,
     '연식': 2115,
     '고급': 201,
     '원가': 2280,
     '서우': 1566,
     '해수욕장': 3453,
     '한눈': 3402,
     '창문': 2900,
     '겨울철': 161,
     '온도': 2187,
     '리기': 870,
     '방기': 1214,
     '동시': 725,
     '방식': 1221,
     '대략': 621,
     '도정': 695,
     '부스': 1352,
     '옆방': 2137,
     '티비': 3220,
     '취침': 3001,
     '초등학생': 2946,
     '양호': 1996,
     '한식당': 3411,
     '차라리': 2875,
     '반드시': 1184,
     '크게': 3107,
     '씨유': 1896,
     '델문': 674,
     '카페나': 3035,
     '해수욕': 3452,
     '최적': 2969,
     '디럭스': 778,
     '발코니': 1203,
     '모로': 1034,
     '트윈룸입니': 3203,
     '선착순': 1585,
     '예술': 2142,
     '물놀이': 1106,
     '모래': 1031,
     '피크': 3352,
     '시즌': 1817,
     '날씨': 491,
     '선선': 1581,
     '근래': 381,
     '편리': 3269,
     '코르': 3086,
     '기지': 434,
     '사양': 1481,
     '주체': 2782,
     '교회': 302,
     '절반': 2653,
     '인수': 2440,
     '보임': 1314,
     '아트': 1927,
     '추정': 2976,
     '프로': 3333,
     '페셔': 3264,
     '인력': 2432,
     '매트리스': 976,
     '나무': 472,
     '허리': 3482,
     '안감': 1934,
     '해변': 3447,
     '워낙': 2275,
     '가시': 31,
     '주말': 2757,
     '한국': 3397,
     '벚꽃': 1270,
     '기간': 403,
     '협재': 3503,
     '옹포': 2197,
     '밥집': 1209,
     '산책': 1505,
     '루프': 860,
     '비바람': 1425,
     '불어': 1396,
     '블로거': 1410,
     '물떄': 1108,
     '그거': 360,
     '위주': 2308,
     '풀이': 3317,
     '온수': 2192,
     '미온수': 1133,
     '미온': 1132,
     '자쿠지': 2536,
     '잠깐': 2551,
     '인피니트': 2458,
     '환상': 3549,
     '하나': 3365,
     '스페': 1782,
     '치킨': 3015,
     '빠에야': 1446,
     '스파': 1779,
     '구조': 333,
     '스파룸': 1780,
     '자쿠': 2535,
     '이용권': 2401,
     '하니': 3371,
     '사이': 1487,
     '시트': 1820,
     '정리': 2678,
     '삼다수': 1511,
     '병과': 1294,
     '네스프레소': 520,
     '캡슐': 3051,
     '여자': 2089,
     '피로': 3347,
     '스페인': 1784,
     '영업': 2132,
     '종료': 2743,
     '버거': 1245,
     '오른쪽': 2161,
     '마담': 893,
     '나탈리': 482,
     '음악': 2351,
     '필터': 3362,
     '실외수영장': 1875,
     '검색': 147,
     '옥상': 2186,
     '결과': 164,
     '대형': 653,
     '만큼': 942,
     '번잡': 1260,
     '개수대': 98,
     '이전': 2407,
     '아무': 1909,
     '리지': 884,
     '제한': 2714,
     '경치': 189,
     '이웃': 2403,
     '일몰': 2467,
     '실제': 1877,
     '리조트': 883,
     '홍보': 3527,
     '상통': 1529,
     '화산': 3532,
     '바위': 1166,
     '정상': 2686,
     '기점': 431,
     '스템': 1770,
     '잠자리': 2556,
     '기타': 435,
     '부족함': 1359,
     '길이': 444,
     '다행': 582,
     '중국어': 2792,
     '영어': 2131,
     '도움': 692,
     '해결': 3438,
     '목적지': 1053,
     '해피': 3461,
     '음료': 2346,
     '사이다': 1488,
     '주스': 2764,
     '달걀': 592,
     '치즈': 3014,
     '히터': 3597,
     '투어': 3187,
     '호스텔': 3515,
     '질문': 2858,
     '상품': 1530,
     '과거': 270,
     '게스트하우스': 154,
     '자고': 2510,
     '오기': 2150,
     '일이': 2479,
     '발전': 1201,
     '예상': 2141,
     '토스터': 3165,
     '이후': 2424,
     '소등': 1635,
     '불키': 1399,
     '조용조': 2733,
     '방키': 1232,
     '고여': 218,
     '남자': 496,
     '안전': 1946,
     '차로': 2878,
     '이내': 2373,
     '뷔페': 1403,
     '여느': 2076,
     '롯데리아': 856,
     '방만': 1216,
     '고정': 224,
     '무궁화': 1060,
     '수기': 1676,
     '사이트': 1490,
     '홈페이지': 3526,
     '마치': 921,
     '무척': 1088,
     '전기차': 2617,
     '건너': 134,
     '급속': 402,
     '소가': 1628,
     '유치원': 2333,
     '주택가': 2784,
     ...}
</pre>
</div>
<br>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">invert_index_vectorizer = {v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vect.vocabulary_.items()}</span><br><span class="line">print(str(invert_index_vectorizer)[:<span class="number">100</span>]+<span class="string">'...'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{2866: '집중', 3588: '휴식', 2696: '제공', 2311: '위치', 1584: '선정', 790: '또한', 2927: '청소', 2925: '청결', 1527...
</code></pre>
<br>
<br>
<h2 id="4-감성-분류-logistic-regression"><a class="markdownIt-Anchor" href="#4-감성-분류-logistic-regression"></a> <strong>4. 감성 분류 – Logistic Regression</strong></h2>
<p>이제 전처리된 리뷰 데이터를 활용하여 <strong>감성 분류 예측 모델</strong>을 만들겠습니다.</p>
<p>감성 분류 예측 모델이란, 이용자 리뷰의 평가 내용을 통해 이 리뷰가 긍정적인지, 부정적인지를 예측하여, 이용자의 감성을 파악하는 겁니다.</p>
<p>따라서, 모델의 <strong>X 값(즉, feature 값)은 이용자 리뷰의 평가 내용</strong>이 되겠고, 모델의 <strong>Y 값(즉, label 값)은 이용자의 긍/부정 감성</strong>이 되겠습니다.</p>
<br>
<h3 id="4-1-데이터셋-생성"><a class="markdownIt-Anchor" href="#4-1-데이터셋-생성"></a> 4-1. 데이터셋 생성</h3>
<p><strong>&gt;&gt; Label</strong></p>
<p>우리는 이용자의 리뷰를 “긍정” / “부정” 두가지 부류로 나누고자 합니다. 하지만 이러한 이용자의 감성을 대표할 수 있는 “평가 점수” 변수는 1 ~ 5의 value를 가지고 있습니다. 따라서 <strong>"평가 점수"변수</strong> (rating: 1 ~ 5)를 <strong>이진 변수</strong> (긍정: 1, 부정:0)으<strong>로 변환</strong>해야 합니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sample(<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>951</th>
      <td>3</td>
      <td>나는 그것이 수영장을 가지고 있기 때문에 여기에서 예약했다. 그러나 수영장에 물이 ...</td>
    </tr>
    <tr>
      <th>47</th>
      <td>4</td>
      <td>시설은 좀 오래 되었지만 동문시장, 서문시장 도보 10분거리이고 공항에서도 가깝습니...</td>
    </tr>
    <tr>
      <th>574</th>
      <td>4</td>
      <td>호스트는 아주 친절하고 도움이 되었습니다. 그는 우리를 픽업해서 근처에 있는 동안 ...</td>
    </tr>
    <tr>
      <th>637</th>
      <td>4</td>
      <td>제주시에 있는 호텔로 깔끔한 편이었고 나름 전망도 괜찮았습니다. 주차장은 주차타워에...</td>
    </tr>
    <tr>
      <th>113</th>
      <td>4</td>
      <td>루프탑 바와 수영장이 있어서 사용가능하고 깨끗하고 친절하셔서 좋은곳이었습니다. 다만...</td>
    </tr>
    <tr>
      <th>416</th>
      <td>3</td>
      <td>다양한 음식과 음료를 걸어갈 수 있는 곳. 저녁 식사는 늦은 밤에 음식을 찾는 문제...</td>
    </tr>
    <tr>
      <th>671</th>
      <td>2</td>
      <td>리뷰보고 기대했는데 호텔이라기 보단 모텔이나 펜션 느낌이네요 생긴지 얼마 안된걸로 ...</td>
    </tr>
    <tr>
      <th>235</th>
      <td>5</td>
      <td>위치가 바로 해변 근처라, 룸에서 보이는 뷰가 너무 좋습니다. 세화해변 자체가 조용...</td>
    </tr>
    <tr>
      <th>875</th>
      <td>3</td>
      <td>Jeju 섬에서 4 일째되는 주제와 같이 Jeju 공항에서 터치 다운 이후로 이동 ...</td>
    </tr>
    <tr>
      <th>254</th>
      <td>4</td>
      <td>출장 때문에 제주도에 오게 됐습니다. 가성비가 좋고 전체적으로 깨끗했습니다. 난방이...</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>리뷰 내용와 평점을 살펴보면, 4 ~ 5점 리뷰는 대부분 긍정적이었지만, 1 ~ 3점 리뷰에서는 부정적인 평가가 좀 많이 보였습니다.<br>
그래서 4점, 5점인 리뷰는 "긍정적인 리뷰"로 분류하여 1를 부여하고, 1 ~ 3점 리뷰는 "부정적인 리뷰"로 분류하여 0을 부여하도록 할게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'rating'</span>].hist()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x154887d0b08&gt;
</code></pre>
<p><img src="/images/E-Python-TextMining-2/output_113_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rating_to_label</span><span class="params">(rating)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> rating &gt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">df[<span class="string">'y'</span>] = df[<span class="string">'rating'</span>].apply(<span class="keyword">lambda</span> x: rating_to_label(x))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>text</th>
      <th>y</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>4</td>
      <td>여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 ...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>2일 이상 연박시 침대, 이불, 베게등 침구류 교체 및 어메니티 보강이 필요해 보입...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4</td>
      <td>지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 ...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>5</td>
      <td>방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요!...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버...</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"y"</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    726
0    275
Name: y, dtype: int64
</code></pre>
<br>
<p><strong>&gt;&gt; Feature</strong></p>
<p>모델의 <strong>Feature 변수는</strong> 리뷰에서 추출된 형태소와 그들의 중요도를 나타나는 <strong>tf_idf_vect</strong>로 대체하겠습니다.</p>
 <br> 
<h3 id="4-2-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#4-2-training-set-test-set-나누기"></a> 4-2. Training set / Test set 나누기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">x = tf_idf_vect</span><br><span class="line">y = df[<span class="string">'y'</span>]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = <span class="number">0.3</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((700, 3599), (700,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((301, 3599), (301,))
</code></pre>
<br>  
<h3 id="4-3-모델-학습"><a class="markdownIt-Anchor" href="#4-3-모델-학습"></a> 4-3. 모델 학습</h3>
<p><strong>&gt;&gt; Logistic Regression 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score, precision_score, recall_score, f1_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># fit in training set</span></span><br><span class="line">lr = LogisticRegression(random_state = <span class="number">0</span>)</span><br><span class="line">lr.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict in test set</span></span><br><span class="line">y_pred = lr.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>&gt;&gt; 분류 결과 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># classification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'accuracy: %.2f'</span> % accuracy_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'precision: %.2f'</span> % precision_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'recall: %.2f'</span> % recall_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'F1: %.2f'</span> % f1_score(y_test, y_pred))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 0.72
precision: 0.72
recall: 1.00
F1: 0.84
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"></span><br><span class="line">confu = confusion_matrix(y_true = y_test, y_pred = y_pred)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-2/output_132_0.png" alt="png"></p>
<p>모델 평가결과를 살펴보면, 모델이 지나치게 긍정(“1”)으로만 예측하는 경향이 있습니다. 따라서 긍정 리뷰를 잘 예측하지만, 부정 리뷰에 대한 예측 정확도가 매우 낮습니다. 이는 샘플데이터의 클래스 불균형으로 인한 문제로 보입니다.<br>
따라서, <strong>클래스 불균형 조정</strong>을 진행하겠습니다.</p>
 <br> 
<h3 id="4-4-샘플링-재조정"><a class="markdownIt-Anchor" href="#4-4-샘플링-재조정"></a> 4-4. 샘플링 재조정</h3>
<p><strong>&gt;&gt; 1:1 Sampling</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'y'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    726
0    275
Name: y, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">positive_random_idx = df[df[<span class="string">'y'</span>]==<span class="number">1</span>].sample(<span class="number">275</span>, random_state=<span class="number">12</span>).index.tolist()</span><br><span class="line">negative_random_idx = df[df[<span class="string">'y'</span>]==<span class="number">0</span>].sample(<span class="number">275</span>, random_state=<span class="number">12</span>).index.tolist()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">random_idx = positive_random_idx + negative_random_idx</span><br><span class="line">x = tf_idf_vect[random_idx]</span><br><span class="line">y = df[<span class="string">'y'</span>][random_idx]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((412, 3599), (412,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((138, 3599), (138,))
</code></pre>
  <br>
<h3 id="4-5-모델-재학습"><a class="markdownIt-Anchor" href="#4-5-모델-재학습"></a> 4-5. 모델 재학습</h3>
<p><strong>&gt;&gt; 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr2 = LogisticRegression(random_state = <span class="number">0</span>)</span><br><span class="line">lr2.fit(x_train, y_train)</span><br><span class="line">y_pred = lr2.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 분류 결과 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># classification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'accuracy: %.2f'</span> % accuracy_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'precision: %.2f'</span> % precision_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'recall: %.2f'</span> % recall_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'F1: %.2f'</span> % f1_score(y_test, y_pred))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 0.72
precision: 0.70
recall: 0.74
F1: 0.72
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"></span><br><span class="line">confu = confusion_matrix(y_true = y_test, y_pred = y_pred)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-2/output_149_0.png" alt="png"></p>
<p>이제 모델이 “긍정적인” 케이스와 “부정적인” 케이스를 모두 적당히 잘 맞춘 것을 확인할 수 있습니다.</p>
<p><br>  <br></p>
<h2 id="5-긍정-부정-키워드-분석"><a class="markdownIt-Anchor" href="#5-긍정-부정-키워드-분석"></a> <strong>5. 긍정 / 부정 키워드 분석</strong></h2>
<p>기계는 이처럼 리뷰 내용에 나타나는 사람의 감성을 구별할 수 있을 뿐만 아니라, 학습된 Logistic Regression 모델을 이용하여 긍/부정 키워드도 추출해낼 수 있습니다.</p>
<p>추출된 키워드를 통해서 이용자가 느끼는 제주호델의 장,단점을 파악할 수 있고, 이를 기반으로 앞으로 유지해야 할 좋은 서비스와 개선이 필요한 아쉬운 서비스에 대해서도 어느정도 판단할 수 있습니다.</p>
  <br>
<p>긍 / 부정 키워드를 추출하기 위해 먼저 Logistic Regression 모델에 각 단어의 coeficient를 시각화해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr2.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 0.28196772,  0.10796991, -0.04978601, ...,  0.        ,
        -0.18315162,  0.28434689]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># print logistic regression's coef</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">plt.bar(range(len(lr2.coef_[<span class="number">0</span>])), lr2.coef_[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;BarContainer object of 3599 artists&gt;
</code></pre>
<p><img src="/images/E-Python-TextMining-2/output_158_1.png" alt="png"></p>
<br>
<p>여기서 계수가 양인 경우는 단어가 긍정적인 영향을 미쳤다고 볼 수 있고, 반면에, 음인 경우는 부정적인 영향을 미쳤다고 볼 수 있습니다.</p>
<p>이 계수들을 크기순으로 정렬하면, 긍정 / 부정 키워드를 출력하는 지표가 되겠습니다.</p>
  <br>
<p>먼저 "긍정 키워드"와 "부정 키워드"의 Top 5를 각각 출력해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">True</span>)[:<span class="number">5</span>])</span><br><span class="line">print(sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">True</span>)[<span class="number">-5</span>:])</span><br><span class="line"><span class="comment"># enumerate: 인덱스 번호와 컬렉션의 원소를 tuple형태로 반환함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>[(1.2644550507381787, 1217), (0.9079356150239053, 2400), (0.895609472071521, 1148), (0.8859075267474583, 2730), (0.8795111499693716, 43)]
[(-0.7201222787741572, 1310), (-0.7519681298547074, 3022), (-0.8672956005075485, 567), (-0.9190158099937462, 515), (-0.9945592515966041, 2143)]
</code></pre>
<p>이처럼 단어의 coeficient와 index가 출력이 됩니다.</p>
 <br>
<p>이제 전체 단어가 포함한 "긍정 키워드 리스트"와 "부정 키워드 리스트"를 정의하고 출력해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">coef_pos_index = sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">True</span>)</span><br><span class="line">coef_neg_index = sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">False</span>)</span><br><span class="line">coef_pos_index</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    [(1.2644550507381787, 1217),
     (0.9079356150239053, 2400),
     (0.895609472071521, 1148),
     (0.8859075267474583, 2730),
     (0.8795111499693716, 43),
     (0.8541915649753757, 26),
     (0.8362541212560809, 578),
     (0.7714811231976703, 2957),
     (0.7375280889735719, 1491),
     (0.7203390936359615, 956),
     (0.6503260268852225, 2977),
     (0.6488836121942877, 115),
     (0.6467914172687944, 910),
     (0.6264469987695738, 1159),
     (0.5943145305412955, 883),
     (0.5505354129422678, 2988),
     (0.5294632094678557, 692),
     (0.5240729254152497, 2455),
     (0.5207834696883535, 1922),
     (0.5153917648445299, 2361),
     (0.49372825531123943, 1215),
     (0.49360869707006777, 246),
     (0.4854919888814009, 680),
     (0.4854086392859413, 269),
     (0.4748702738145659, 686),
     (0.4703566749364605, 1194),
     (0.45896954031613635, 790),
     (0.45586600022584467, 2834),
     (0.45372800281293535, 19),
     (0.4500540795581468, 2779),
     (0.44412671542407905, 416),
     (0.4425720292652355, 1805),
     (0.4364684750426245, 263),
     (0.4308546124247834, 3267),
     (0.4255898116545533, 2797),
     (0.4212941284904679, 2680),
     (0.41423556597532674, 489),
     (0.4121691212201187, 826),
     (0.4118068110883225, 937),
     (0.402234791816506, 353),
     (0.39915216217204813, 136),
     (0.3906502087724938, 131),
     (0.38863745777148795, 2180),
     (0.38330015115324956, 322),
     (0.37909051494174656, 1027),
     (0.3776598665737952, 1926),
     (0.36980255314279886, 2760),
     (0.3609360208520378, 3034),
     (0.3601455791606223, 1342),
     (0.3511486012544648, 344),
     (0.35030155043520095, 3447),
     (0.34810767211689553, 2674),
     (0.3448646839750021, 3021),
     (0.34466834073677766, 2070),
     (0.3341929597049384, 1750),
     (0.3332295460784216, 2849),
     (0.3291725978477463, 3435),
     (0.3276653378330499, 2530),
     (0.3221942756247239, 1483),
     (0.3217689173991826, 3397),
     (0.32047891465181083, 2013),
     (0.3080484198419967, 3029),
     (0.3062772550220064, 939),
     (0.30478483149478314, 627),
     (0.30438930158469363, 2606),
     (0.3027703771200994, 3454),
     (0.2989615171043252, 4),
     (0.2960030540205178, 1991),
     (0.2941392017845358, 3347),
     (0.290078280630203, 3593),
     (0.28793362240859766, 1090),
     (0.2861006595602784, 3404),
     (0.28434689214226744, 3598),
     (0.2819677181770861, 0),
     (0.2818546705602182, 1809),
     (0.2796034993266096, 1440),
     (0.2783451949177126, 3410),
     (0.27700777474574007, 1078),
     (0.2764799249539472, 278),
     (0.2757845449039994, 2074),
     (0.27449374217124756, 1697),
     (0.27211400542938347, 860),
     (0.26958773489776877, 276),
     (0.26894024258506205, 2642),
     (0.2679652653240931, 451),
     (0.26659353628773785, 2605),
     (0.2642541001710917, 1073),
     (0.2602933330998526, 71),
     (0.2601225988013697, 2727),
     (0.25898398896658026, 395),
     (0.25523176043119644, 109),
     (0.25400402242362763, 1120),
     (0.25346771390562256, 2311),
     (0.2525923917872476, 1760),
     (0.252483390540294, 3549),
     (0.25243556295192593, 44),
     (0.2523758090983611, 410),
     (0.25096842816549325, 3286),
     (0.25030837769014164, 3013),
     (0.2478963860060586, 3064),
     (0.24711051623367455, 1700),
     (0.24639626607741794, 532),
     (0.24423718622136711, 2339),
     (0.24419509835066824, 817),
     (0.24268824175871553, 1646),
     (0.24020390663531643, 847),
     (0.23613168717319782, 1277),
     (0.2356739894439279, 3547),
     (0.23333780634901968, 1966),
     (0.2331264370168398, 1350),
     (0.23268102047017378, 769),
     (0.23262817998676638, 3166),
     (0.23066409348184064, 1384),
     (0.23010041799635683, 210),
     (0.22586220283294378, 1885),
     (0.22523607425083558, 260),
     (0.2222412951070305, 281),
     (0.22091253142370337, 68),
     (0.21922527479299828, 1147),
     (0.21868875489181047, 1465),
     (0.21807039000574996, 3299),
     (0.21807039000574996, 172),
     (0.2177926484819077, 3223),
     (0.21751093007081115, 2634),
     (0.2163036212275728, 1171),
     (0.2162361260915301, 1671),
     (0.21591443393848506, 1552),
     (0.21530945315363187, 2038),
     (0.21450361502341533, 385),
     (0.2130004456328932, 2018),
     (0.21283349877228466, 2752),
     (0.21171382727695384, 1523),
     (0.21156875238749653, 2906),
     (0.21149936066156635, 3273),
     (0.2107420524603348, 3062),
     (0.2089604714261007, 2167),
     (0.20857560294926117, 705),
     (0.20849174650373709, 751),
     (0.2084323782944626, 2374),
     (0.2083850088267226, 1421),
     (0.2076716418538995, 1823),
     (0.20734493904041118, 2837),
     (0.20719074367652907, 1455),
     (0.20632098174995006, 2421),
     (0.20497429689912247, 2866),
     (0.20497429689912247, 1584),
     (0.20460844733702388, 1309),
     (0.20460135810671237, 1721),
     (0.2026617971957564, 192),
     (0.2021896255723423, 574),
     (0.20076231770123473, 1122),
     (0.20007368092656116, 981),
     (0.1994615301156886, 2722),
     (0.1987204932053518, 1895),
     (0.1982476502888129, 1622),
     (0.19668791935266033, 1816),
     (0.19602558824910057, 767),
     (0.195808499032481, 581),
     (0.1954442410972148, 2551),
     (0.19543920090503364, 2244),
     (0.19535829875348126, 1249),
     (0.19513316286959848, 2451),
     (0.1932943416840944, 2561),
     (0.19241691136362254, 1278),
     (0.19188249800399276, 221),
     (0.19059569732190523, 341),
     (0.18931948208829832, 2965),
     (0.18863137833398097, 2225),
     (0.188233216963001, 1067),
     (0.18823116402871, 1510),
     (0.18591329718666444, 2556),
     (0.1858513716606046, 1853),
     (0.18475568229990585, 1553),
     (0.1842332027380814, 15),
     (0.18385370069092052, 490),
     (0.183698940971588, 646),
     (0.18352145151744345, 2709),
     (0.18179588928699872, 1821),
     (0.18141472902160485, 356),
     (0.18101860699904043, 3325),
     (0.17968533410962978, 1517),
     (0.17894437469027485, 1441),
     (0.1785803255429378, 203),
     (0.17749094181502081, 1291),
     (0.17745689661710926, 423),
     (0.17691919755039834, 748),
     (0.17681729295382825, 629),
     (0.17650785942100156, 2042),
     (0.17521436890986974, 2822),
     (0.17420775259072946, 3525),
     (0.17407554594971275, 1376),
     (0.17390397512207328, 1508),
     (0.17390397512207328, 584),
     (0.1735238781146927, 509),
     (0.1729437410073151, 2188),
     (0.17166919021535662, 2761),
     (0.1711332476240707, 1505),
     (0.17079932615633314, 300),
     (0.1706243328180457, 795),
     (0.16989041829422863, 1577),
     (0.16965179412684628, 1028),
     (0.16919925883678436, 2705),
     (0.1687459695340302, 667),
     (0.16815742142636886, 1625),
     (0.1676232210748594, 2755),
     (0.16757499046872387, 2274),
     (0.16736563458006257, 1485),
     (0.16735261847037675, 2476),
     (0.16642204341549788, 2035),
     (0.16595006133727253, 760),
     (0.16475334154520693, 1208),
     (0.1646740028459598, 1937),
     (0.16464847364532936, 690),
     (0.1636808432150993, 3274),
     (0.16348761826549618, 1676),
     (0.16301112079103763, 2399),
     (0.1629849886257, 3591),
     (0.1629118596848168, 3186),
     (0.1626689828520234, 3210),
     (0.16142787916860177, 1598),
     (0.1613522761276804, 3417),
     (0.1603451229219545, 3116),
     (0.1599203302911822, 2487),
     (0.15983057428397826, 589),
     (0.1586108439130326, 2331),
     (0.15849368672169892, 1647),
     (0.15826740340037068, 625),
     (0.15743176994516933, 3490),
     (0.1571722075528101, 3567),
     (0.15712518230005013, 3027),
     (0.15687460543471862, 3428),
     (0.15651108129304298, 1307),
     (0.15600166572103646, 1961),
     (0.15583305075516699, 106),
     (0.15577941820129187, 1617),
     (0.155766902206714, 3017),
     (0.15491622812261568, 382),
     (0.15485968714815496, 1528),
     (0.1545939535424059, 259),
     (0.15411614699130288, 684),
     (0.1535726280760412, 3293),
     (0.1535726280760412, 2892),
     (0.15341384775377642, 2726),
     (0.15325471176173253, 1533),
     (0.1529359648993235, 1983),
     (0.1523311300168501, 1432),
     (0.15231484413753682, 1030),
     (0.15231397485990963, 556),
     (0.15139635636201898, 2078),
     (0.1511214654825413, 1312),
     (0.15101670800091527, 2998),
     (0.14887052306393284, 3096),
     (0.14887052306393284, 1457),
     (0.1485864638932176, 2600),
     (0.14818094009147514, 2223),
     (0.14810636314705725, 1859),
     (0.14763883239448744, 1738),
     (0.14724688251552864, 2328),
     (0.1471683691325973, 1841),
     (0.14705200941823965, 2268),
     (0.14704245351541728, 660),
     (0.14646359476664114, 3297),
     (0.14621204479849256, 2226),
     (0.14615889360176976, 3350),
     (0.14576749911151465, 2851),
     (0.14545079981853645, 2275),
     (0.1447568799500706, 2798),
     (0.1444313715254008, 2022),
     (0.1444180222221931, 1654),
     (0.1444180222221931, 1548),
     (0.14434325571263137, 2445),
     (0.14412764469019354, 1396),
     (0.1439309933360322, 3220),
     (0.14364997884743677, 3272),
     (0.14359122893612475, 1814),
     (0.14339034972990414, 2983),
     (0.14305710787294673, 1085),
     (0.14276222540097244, 348),
     (0.14269270587505128, 996),
     (0.14200348649786682, 3275),
     (0.14175159317612532, 3189),
     (0.14173146008479248, 714),
     (0.14095242066301328, 306),
     (0.14092668743912232, 2678),
     (0.14086483039942074, 570),
     (0.14061627821721584, 3414),
     (0.14047941175558679, 387),
     (0.1404004427633594, 3476),
     (0.1404004427633594, 1112),
     (0.13978500519793755, 2847),
     (0.13978500519793755, 780),
     (0.13964073789423023, 665),
     (0.13934374266681135, 3500),
     (0.13829992453370865, 3161),
     (0.13817992752504213, 1768),
     (0.13745049759016625, 3511),
     (0.13665192952568253, 757),
     (0.13642162742786484, 1351),
     (0.1359845468368403, 271),
     (0.13597476793796576, 534),
     (0.135852916769958, 2497),
     (0.13574633450491594, 3009),
     (0.13574633450491594, 2299),
     (0.13574633450491594, 1296),
     (0.13574633450491594, 1188),
     (0.13549762485752148, 3571),
     (0.13549762485752148, 3391),
     (0.13549762485752148, 2640),
     (0.13541454362686076, 1332),
     (0.13519719011184664, 238),
     (0.13515286340239754, 2047),
     (0.13500163846144472, 3152),
     (0.1347989845038155, 2353),
     (0.13477156350779324, 1527),
     (0.13474112790096265, 1889),
     (0.13474112790096265, 1196),
     (0.13474112790096265, 462),
     (0.13469292571022845, 11),
     (0.13458956235978478, 924),
     (0.13442001799674802, 2069),
     (0.1342034640274507, 2869),
     (0.1341559282111133, 2145),
     (0.13415237816410766, 3471),
     (0.13415237816410766, 3406),
     (0.13388090777365988, 94),
     (0.13342324387367194, 2971),
     (0.1332930603370377, 3432),
     (0.1330404844897235, 1506),
     (0.13293873503860765, 3087),
     (0.13272932864456133, 3073),
     (0.13232986210850453, 2246),
     (0.13218242328559932, 2082),
     (0.13197846164836427, 3285),
     (0.13197846164836427, 2297),
     (0.13197846164836427, 1741),
     (0.13197846164836427, 69),
     (0.13179675529668713, 1549),
     (0.1316814762162865, 3441),
     (0.13154581005598, 3192),
     (0.1314192595003537, 1386),
     (0.13129169059042645, 969),
     (0.1311653774611966, 244),
     (0.13071289286611526, 3003),
     (0.13067314069850974, 697),
     (0.12989273592089953, 466),
     (0.1297746134602387, 411),
     (0.12976187780923948, 39),
     (0.12975779444471916, 3176),
     (0.12975779444471916, 3066),
     (0.1296539223346817, 3169),
     (0.1295761221334622, 2132),
     (0.12915915165160174, 3585),
     (0.12912049655247929, 3475),
     (0.12912049655247929, 455),
     (0.12897380261630323, 1053),
     (0.12884028806560763, 2910),
     (0.1283431735744972, 2344),
     (0.1283431735744972, 1542),
     (0.12780627572336126, 2207),
     (0.12780627572336126, 531),
     (0.1277445628861703, 2975),
     (0.12741425172305826, 669),
     (0.1268676275287745, 424),
     (0.12600280097170596, 2053),
     (0.1255687931546876, 1578),
     (0.1251082717170878, 3287),
     (0.12501636694175655, 3082),
     (0.12485375424445369, 988),
     (0.12485077138187695, 1247),
     (0.12477317035474626, 1638),
     (0.12470562190989118, 1234),
     (0.12418537178635555, 3201),
     (0.12412494478481371, 1572),
     (0.12356427400475413, 720),
     (0.12346465010011236, 3190),
     (0.1232984083336477, 3384),
     (0.12290996269246392, 2930),
     (0.12272802616213961, 3448),
     (0.12252951158801757, 73),
     (0.12243269952395211, 3105),
     (0.12240812373820147, 2735),
     (0.12169970934221791, 2781),
     (0.12150853668051385, 1722),
     (0.12148978639712985, 1301),
     (0.12147421457137794, 2320),
     (0.12147421457137794, 2289),
     (0.12135904501371637, 3339),
     (0.12135904501371637, 1602),
     (0.12085540050886351, 3206),
     (0.12085540050886351, 2067),
     (0.12085540050886351, 1282),
     (0.12085540050886351, 1170),
     (0.12085540050886351, 199),
     (0.12073634202256898, 2460),
     (0.12051291677661294, 2250),
     (0.12051291677661294, 730),
     (0.12036501072581905, 3263),
     (0.12036501072581905, 373),
     (0.11982407529162177, 74),
     (0.11941421355306232, 2814),
     (0.11941421355306232, 2193),
     (0.11909411357560733, 2028),
     (0.11903875427006184, 403),
     (0.11887476984730765, 1374),
     (0.11855602046019094, 912),
     (0.11826793727408907, 2664),
     (0.11797129443799506, 147),
     (0.11792307582322151, 1752),
     (0.11792307582322151, 518),
     (0.1177499125052935, 1838),
     (0.11735274081083348, 2526),
     (0.11728847189963591, 1299),
     (0.11682555059780918, 702),
     (0.11662484295496746, 3453),
     (0.11615131711727657, 777),
     (0.11608095184078544, 771),
     (0.11598871515918448, 2677),
     (0.11589077346213462, 1341),
     (0.11572533411469992, 2492),
     (0.11567709862499206, 2587),
     (0.11567709862499206, 2077),
     (0.11542281429727001, 2221),
     (0.11525735836070924, 3389),
     (0.11501634646006889, 2886),
     (0.11501634646006889, 835),
     (0.11449108387629879, 267),
     (0.11419455143266674, 41),
     (0.11410478259093633, 2499),
     (0.11410478259093633, 636),
     (0.11391082531008434, 1939),
     (0.11379525876290054, 1779),
     (0.11369189505531267, 3279),
     (0.11359623354805377, 3362),
     (0.11328311707861126, 1626),
     (0.11309515954317759, 2033),
     (0.11309203979609482, 1163),
     (0.11306723080679525, 446),
     (0.11300787365565511, 88),
     (0.11281954183130295, 2799),
     (0.1125643845359886, 359),
     (0.1125643845359886, 87),
     (0.11236486622722328, 1599),
     (0.11236486622722328, 1462),
     (0.11202792916061027, 1320),
     (0.11168083926782998, 2088),
     (0.1116425153114436, 801),
     (0.11160861926991839, 2298),
     (0.11095938208098642, 304),
     (0.11091238300534989, 773),
     (0.1100077175343078, 2162),
     (0.10976564909688623, 1790),
     (0.10961263739649914, 258),
     (0.10941413976516044, 3488),
     (0.10941413976516044, 2819),
     (0.10941413976516044, 1828),
     (0.10917777932688458, 723),
     (0.10864303256976575, 747),
     (0.10864303256976575, 148),
     (0.10852304491119706, 1106),
     (0.10844777870744055, 1289),
     (0.10844777870744055, 619),
     (0.10832336961288917, 2692),
     (0.10832336961288917, 1454),
     (0.10830603618528553, 84),
     (0.10796991064699014, 1),
     (0.10795721696924253, 2315),
     (0.10795721696924253, 425),
     (0.1077710568146692, 3317),
     (0.1077710568146692, 2663),
     (0.10769380388975194, 2008),
     (0.10720615786237517, 583),
     (0.10673796206207481, 888),
     (0.10671454696616327, 601),
     (0.10656205646300153, 201),
     (0.1064891137904478, 1554),
     (0.10637660107629578, 1759),
     (0.10634735402569995, 3408),
     (0.10626212376589807, 2386),
     (0.10623995311965392, 3319),
     (0.10622168812753784, 333),
     (0.10615533943965197, 772),
     (0.10595924232583608, 337),
     (0.10595924232583608, 272),
     (0.10508229441497294, 3028),
     (0.10485989916431773, 2462),
     (0.10473698952461245, 3086),
     (0.10473698952461245, 434),
     (0.10473698952461245, 381),
     (0.10461042411497755, 3129),
     (0.10461042411497755, 1233),
     (0.10461042411497755, 764),
     (0.10461042411497755, 79),
     (0.10445117600612656, 3513),
     (0.10445117600612656, 3143),
     (0.10445117600612656, 401),
     (0.1041925044133613, 1207),
     (0.10388289797906243, 3088),
     (0.10359537183826453, 2766),
     (0.10359537183826453, 822),
     (0.10357097224199376, 3528),
     (0.10298171781942682, 3460),
     (0.10261708591617978, 527),
     (0.10237985140859761, 1290),
     (0.10223721967543753, 863),
     (0.10222967216366273, 582),
     (0.10189163932285969, 903),
     (0.10174059857006298, 31),
     (0.1015489083625263, 696),
     (0.10152723059467353, 1012),
     (0.10132218984016486, 2342),
     (0.10132218984016486, 1914),
     (0.10132218984016486, 1568),
     (0.10132218984016486, 562),
     (0.10132218984016486, 257),
     (0.10132218984016486, 227),
     (0.10132218984016486, 169),
     (0.10132218984016486, 5),
     (0.10129687975732969, 2385),
     (0.10126776819935551, 3117),
     (0.10063103908292556, 284),
     (0.10055954160111301, 3081),
     (0.10031435374070032, 1260),
     (0.10028094106951953, 1317),
     (0.10027605850365232, 3072),
     (0.1000059209109059, 2336),
     (0.1000059209109059, 479),
     (0.09995417863737927, 1670),
     (0.09946866203075326, 299),
     (0.09937460223662734, 1955),
     (0.09937460223662734, 355),
     (0.0991931372321024, 3367),
     (0.0991931372321024, 3052),
     (0.0991931372321024, 2987),
     (0.0991931372321024, 614),
     (0.09885234039929348, 1496),
     (0.0985825853170792, 2753),
     (0.09833844719113422, 3349),
     (0.09833844719113422, 2118),
     (0.09828284940929058, 900),
     (0.09826909686300346, 2262),
     (0.09826909686300346, 1765),
     (0.09826909686300346, 904),
     (0.09826909686300346, 652),
     (0.09820798725090112, 2536),
     (0.09820798725090112, 1967),
     (0.0979795780346747, 2907),
     (0.09782691886062657, 377),
     (0.09760724210433858, 3516),
     (0.09755885308766699, 3164),
     (0.09755885308766699, 683),
     (0.09730186511202356, 3329),
     (0.09730186511202356, 1733),
     (0.09730186511202356, 1226),
     (0.097102913934461, 2625),
     (0.09610978450473183, 2087),
     (0.09582399417186592, 1439),
     (0.09577717071956568, 47),
     (0.09574004674208489, 2532),
     (0.09567949353604623, 153),
     (0.09563595118779827, 1248),
     (0.09563595118779827, 800),
     (0.0955218528925641, 2265),
     (0.0954330687710674, 1715),
     (0.09490960244197376, 3079),
     (0.09479895154722345, 3167),
     (0.09479895154722345, 2182),
     (0.09464204684604893, 2919),
     (0.09464204684604893, 1007),
     (0.09464204684604893, 421),
     (0.0945793543479756, 3346),
     (0.0945793543479756, 3214),
     (0.09456116933710224, 1829),
     (0.09452473946342346, 736),
     (0.09441875395888008, 3102),
     (0.09441875395888008, 1541),
     (0.09418492749174653, 52),
     (0.0939222882360469, 3558),
     (0.0939222882360469, 3419),
     (0.0939222882360469, 2608),
     (0.0939222882360469, 2598),
     (0.09392068680284914, 3344),
     (0.09392068680284914, 2173),
     (0.09392068680284914, 1138),
     (0.09392068680284914, 461),
     (0.09392068680284914, 34),
     (0.09379123891116847, 2584),
     (0.09353081179807116, 3259),
     (0.09353081179807116, 1302),
     (0.09353081179807116, 293),
     (0.09309370020530645, 2639),
     (0.09309370020530645, 2294),
     (0.09309370020530645, 2083),
     (0.09309370020530645, 1944),
     (0.09309370020530645, 162),
     (0.09298771310954623, 741),
     (0.09298771310954623, 140),
     (0.09292587512205373, 1929),
     (0.09289423937435062, 3561),
     (0.09274784637141024, 3307),
     (0.09274784637141024, 2126),
     (0.09274784637141024, 2025),
     (0.09274784637141024, 1418),
     (0.09254637783999758, 217),
     (0.09226460305753335, 3403),
     (0.09226460305753335, 1687),
     (0.09226460305753335, 1592),
     (0.09192383607443329, 3315),
     (0.09192383607443329, 875),
     (0.09183495854900056, 2985),
     (0.09183495854900056, 1596),
     (0.09173493202889069, 1770),
     (0.09173493202889069, 431),
     (0.09173143027976542, 2876),
     (0.09113344147288725, 3120),
     (0.09060526255265101, 3381),
     (0.09060526255265101, 2287),
     (0.09060526255265101, 1836),
     (0.09060526255265101, 1769),
     (0.09050760723810075, 326),
     (0.08995529378430658, 340),
     (0.08987429575682436, 1969),
     (0.08982977958803778, 1812),
     (0.08974209619577075, 838),
     (0.08963253567327513, 2169),
     (0.08951903081805541, 2618),
     (0.08947267121555101, 989),
     (0.08926541208781298, 1369),
     (0.0890462273393359, 893),
     (0.0890462273393359, 482),
     (0.0888304568052451, 1118),
     (0.08864375178731801, 2759),
     (0.08862582335907176, 3128),
     (0.08856874594603148, 2408),
     (0.08847924280717331, 3541),
     (0.08847924280717331, 2706),
     (0.08845733589313011, 1614),
     (0.08843074951990057, 1330),
     (0.08827578191477906, 2529),
     (0.08827578191477906, 548),
     (0.08811593995641924, 2768),
     (0.08795612661377235, 1848),
     (0.0878632294425667, 3204),
     (0.0878632294425667, 2905),
     (0.0877915209166029, 2732),
     (0.08724002705412705, 3125),
     (0.08681879523440901, 472),
     (0.0867590941431764, 1371),
     (0.08591449282742145, 3413),
     (0.08591449282742145, 1793),
     (0.08591449282742145, 439),
     (0.08569361517932625, 2429),
     (0.08569361517932625, 1886),
     (0.08564019433508445, 2981),
     (0.08564019433508445, 2571),
     (0.08564019433508445, 1852),
     (0.08564019433508445, 145),
     (0.0855146046919488, 3001),
     (0.08482470727509915, 107),
     (0.08474214619355472, 291),
     (0.08474214619355472, 92),
     (0.08464630577025285, 1353),
     (0.08447795462677392, 83),
     (0.08442221636455624, 2373),
     (0.08435306298004447, 3302),
     (0.08435306298004447, 1842),
     (0.08435306298004447, 885),
     (0.08406143202879186, 961),
     (0.08374180878487095, 2901),
     (0.08352466261109656, 1451),
     (0.08248922005074939, 1131),
     (0.08238017336779274, 2415),
     (0.08216565036306289, 922),
     (0.08170778577083812, 503),
     (0.08139930660843568, 749),
     (0.0810873859250381, 2703),
     (0.08099924967644831, 3375),
     (0.08036733484765383, 103),
     (0.08024334048387935, 1346),
     (0.08024334048387935, 1055),
     (0.08024334048387935, 828),
     (0.07995951135307515, 2913),
     (0.07995254170536943, 3142),
     (0.07975739071961907, 1238),
     (0.07961368503404338, 3145),
     (0.07961368503404338, 1102),
     (0.0791011342722481, 2629),
     (0.07909734484039603, 375),
     (0.07903458017917456, 960),
     (0.07865148217479348, 1387),
     (0.0779646282219197, 3122),
     (0.0779646282219197, 350),
     (0.07794818207773628, 2696),
     (0.07791539520575948, 2197),
     (0.07791539520575948, 1425),
     (0.07791539520575948, 1410),
     (0.07791539520575948, 1270),
     (0.07791539520575948, 1209),
     (0.07791539520575948, 1108),
     (0.07777326253628294, 2052),
     (0.07777326253628294, 954),
     (0.07777326253628294, 812),
     (0.07776976305397286, 435),
     (0.0776760937385194, 3588),
     (0.07766249907323657, 1286),
     (0.0768120675986713, 979),
     (0.07633605683651937, 1618),
     (0.07610302341355955, 1345),
     (0.07610302341355955, 1329),
     (0.07610302341355955, 938),
     (0.07610302341355955, 754),
     (0.07610302341355955, 502),
     (0.07493632088882671, 1281),
     (0.07486036923106522, 3114),
     (0.07486036923106522, 759),
     (0.07479212341391864, 3109),
     (0.07479212341391864, 1125),
     (0.07479212341391864, 711),
     (0.07479212341391864, 445),
     (0.07479212341391864, 25),
     (0.0744210537557175, 3470),
     (0.0744210537557175, 1928),
     (0.0744210537557175, 1280),
     (0.0744210537557175, 1243),
     (0.0744210537557175, 1018),
     (0.0744210537557175, 708),
     (0.0740577155592499, 726),
     (0.07358418456629864, 1743),
     (0.07309840122961515, 1219),
     (0.07303416054815363, 252),
     (0.07271877218739466, 3241),
     (0.07184102679685105, 121),
     (0.07182717404842677, 587),
     (0.07177500880745105, 2964),
     (0.07127209654963827, 120),
     (0.07087579658806266, 1316),
     (0.07069880693740326, 339),
     (0.07068023149332683, 2306),
     (0.07068023149332683, 253),
     (0.07065433840741699, 1033),
     (0.07058992698239872, 3555),
     (0.07043170609309371, 360),
     (0.07023970587779339, 1004),
     (0.06996622272883518, 3203),
     (0.06996622272883518, 1585),
     (0.06996622272883518, 1581),
     (0.06943213017724599, 1461),
     (0.06931620630006176, 1538),
     (0.06923101778513037, 1918),
     (0.06921851239026898, 2146),
     (0.06914996226685433, 2312),
     (0.06911832282266693, 206),
     (0.06905411184938241, 2212),
     (0.06879868009883609, 1498),
     (0.06879341064374712, 3369),
     (0.06829991205551972, 485),
     (0.06793743237297642, 3094),
     (0.06793743237297642, 2568),
     (0.06793743237297642, 2509),
     (0.06793743237297642, 1624),
     (0.06793743237297642, 1311),
     (0.06793743237297642, 830),
     (0.06793743237297642, 193),
     (0.06771012152570943, 896),
     (0.06760842116575855, 3518),
     (0.06728576906303034, 3478),
     (0.06728576906303034, 2945),
     (0.06728576906303034, 2592),
     (0.06728576906303034, 2586),
     (0.06728576906303034, 1111),
     (0.06726031274341861, 2835),
     (0.0668936390304386, 3283),
     (0.06683941035275678, 1153),
     (0.06670561404578652, 3300),
     (0.06670561404578652, 2952),
     (0.06670561404578652, 2949),
     (0.06670561404578652, 2890),
     (0.06670561404578652, 2481),
     (0.06670561404578652, 1070),
     (0.06616432949033017, 3503),
     (0.0660445367892345, 3515),
     (0.06603516959037964, 3352),
     (0.06603516959037964, 1701),
     (0.06594330439800165, 3537),
     (0.06529883585157686, 3418),
     (0.06529883585157686, 2650),
     (0.06466761703140791, 2780),
     (0.06451756127861434, 2546),
     (0.06412036684718043, 906),
     (0.06406825327936377, 393),
     (0.06389147199964199, 1562),
     (0.06389147199964199, 547),
     (0.06296277600534345, 1898),
     (0.06295775824880319, 1832),
     (0.06295775824880319, 1144),
     (0.06273519650642477, 2108),
     (0.06257557985594793, 2438),
     (0.06250818347087828, 2543),
     (0.06237266652354673, 1818),
     (0.062097593396214186, 2744),
     (0.06179423738961337, 925),
     (0.06141211575679981, 2260),
     (0.060781144623716234, 3570),
     (0.06066322422717442, 2844),
     (0.060370008276426454, 3338),
     (0.06029861224248649, 2784),
     (0.06029861224248649, 1986),
     (0.06029861224248649, 1543),
     (0.06005526613023247, 897),
     (0.05947175378230543, 1763),
     (0.05909565017478048, 1849),
     (0.05909352311701952, 1352),
     (0.058961537911610754, 3510),
     (0.058961537911610754, 3055),
     (0.058961537911610754, 2737),
     (0.058961537911610754, 2292),
     (0.058961537911610754, 1475),
     (0.058958973694166104, 3589),
     (0.058958973694166104, 2651),
     (0.058958973694166104, 1731),
     (0.058958973694166104, 474),
     (0.05832232735424722, 484),
     (0.05776314858186377, 2356),
     (0.057539284349787875, 2724),
     (0.057539284349787875, 2716),
     (0.057539284349787875, 2272),
     (0.057539284349787875, 1980),
     (0.057539284349787875, 1713),
     (0.057539284349787875, 1604),
     (0.057539284349787875, 1449),
     (0.057539284349787875, 75),
     (0.057539284349787875, 61),
     (0.05679666092137163, 997),
     (0.05679666092137163, 580),
     (0.056729924333008365, 2637),
     (0.056729924333008365, 831),
     (0.05655015464811865, 487),
     (0.05652766823426947, 2030),
     (0.05640871242395038, 735),
     (0.05614386926874535, 758),
     (0.0559063955350394, 3184),
     (0.0559063955350394, 3031),
     (0.0559063955350394, 2944),
     (0.0559063955350394, 2647),
     (0.0559063955350394, 2528),
     (0.0559063955350394, 2261),
     (0.0559063955350394, 1269),
     (0.0559063955350394, 1109),
     (0.0559063955350394, 554),
     (0.055648783133438656, 1407),
     (0.055648783133438656, 586),
     (0.055646362986584645, 1466),
     (0.05516895684450839, 2793),
     (0.054882824548443114, 3173),
     (0.054882824548443114, 2982),
     (0.054882824548443114, 2845),
     (0.054882824548443114, 2542),
     (0.054882824548443114, 1756),
     (0.054882824548443114, 899),
     (0.054882824548443114, 681),
     (0.054882824548443114, 285),
     (0.05486846085587583, 3026),
     (0.05484348857927268, 3469),
     (0.05484348857927268, 3465),
     (0.05484348857927268, 2989),
     (0.05484348857927268, 2879),
     (0.05484348857927268, 2754),
     (0.05484348857927268, 2406),
     (0.05484348857927268, 1730),
     (0.05484348857927268, 1667),
     (0.05484348857927268, 1665),
     (0.05484348857927268, 1615),
     (0.05484348857927268, 1471),
     (0.05484348857927268, 1191),
     (0.05484348857927268, 1100),
     (0.05484348857927268, 1079),
     (0.05484348857927268, 851),
     (0.05484348857927268, 458),
     (0.054487189903820656, 2204),
     (0.05430643890657519, 138),
     (0.054058095179772864, 944),
     (0.054022724280419834, 3212),
     (0.05402202766157935, 1762),
     (0.0533750821753445, 1695),
     (0.05306742820929221, 2192),
     (0.05276529397122469, 2809),
     (0.05276529397122469, 2057),
     (0.05276529397122469, 1691),
     (0.0523101884772147, 1923),
     (0.05215992194245664, 1550),
     (0.052012698561421676, 2377),
     (0.052012698561421676, 1984),
     (0.052012698561421676, 1039),
     (0.052012698561421676, 149),
     (0.05179923233388806, 3394),
     (0.05179923233388806, 846),
     (0.051762106456659567, 2863),
     (0.051472967058906464, 1912),
     (0.051217574472353734, 2778),
     (0.05110058750877395, 2041),
     (0.050966072229566624, 1630),
     (0.05077445418126315, 3336),
     (0.05077445418126315, 2656),
     (0.05077445418126315, 2570),
     (0.05077445418126315, 2522),
     (0.05077445418126315, 2121),
     (0.05077445418126315, 2045),
     (0.05077445418126315, 2010),
     (0.05077445418126315, 1726),
     (0.05077445418126315, 1655),
     (0.05077445418126315, 1509),
     (0.05077445418126315, 1507),
     (0.05077445418126315, 732),
     (0.05077445418126315, 524),
     (0.05077445418126315, 422),
     (0.05077445418126315, 196),
     (0.05077445418126315, 171),
     (0.05077445418126315, 99),
     (0.050539089094784995, 100),
     (0.05053664694441642, 3568),
     (0.050492996404728846, 2961),
     (0.050036275129686114, 396),
     (0.05003297559110967, 2029),
     (0.04984891386860787, 917),
     (0.04961138883973778, 143),
     (0.04958598961322054, 3056),
     (0.049575831047697035, 1283),
     (0.048727246055628254, 2248),
     (0.04872402143683834, 1101),
     (0.047921690809483164, 1603),
     (0.047921690809483164, 1321),
     (0.047921690809483164, 1017),
     (0.04791436558471306, 2622),
     (0.04791436558471306, 1241),
     (0.04770759660795472, 717),
     (0.04694083335282966, 289),
     (0.04677698779883914, 2757),
     (0.04666642228091436, 2141),
     (0.04647288993080121, 2484),
     (0.04637599875831547, 2512),
     (0.045897622985651414, 139),
     (0.045799053702209366, 1344),
     (0.04570679344810075, 2147),
     (0.04516689835379344, 1172),
     (0.04492238369553648, 1149),
     (0.04452311366966795, 3051),
     (0.04452311366966795, 2743),
     (0.04452311366966795, 2535),
     (0.04452311366966795, 1784),
     (0.04452311366966795, 1780),
     (0.04452311366966795, 1511),
     (0.04452311366966795, 1245),
     (0.04452311366966795, 520),
     (0.04431291167953588, 3124),
     (0.04431291167953588, 2471),
     (0.04431291167953588, 2230),
     (0.04431291167953588, 1380),
     (0.04379233051095153, 3250),
     (0.04370894283540041, 2372),
     (0.04342726715205229, 477),
     (0.04339655458297072, 1349),
     (0.04289303347380985, 1420),
     (0.04209795683366029, 2573),
     (0.04202158194623495, 2401),
     (0.04202158194623495, 1294),
     (0.0419602893158302, 3107),
     (0.04182319015766572, 3536),
     (0.04182319015766572, 2839),
     (0.04182319015766572, 2765),
     (0.04182319015766572, 1597),
     (0.04182319015766572, 475),
     (0.04120970047603527, 2595),
     (0.04118433740575306, 2043),
     (0.0410712841055371, 3050),
     (0.04099650527849089, 1442),
     (0.04049252050189614, 1797),
     (0.04024671694278536, 1938),
     (0.040121670241939675, 3222),
     (0.040121670241939675, 2395),
     (0.040121670241939675, 1682),
     (0.040121670241939675, 1195),
     (0.040121670241939675, 844),
     (0.040121670241939675, 294),
     (0.040056704625578095, 1482),
     (0.03984593632828475, 2878),
     (0.03939272315558761, 3076),
     (0.0390809923939327, 405),
     (0.038398821000790784, 3545),
     (0.03814509952790994, 1161),
     (0.03801064136229472, 321),
     (0.03786743367501903, 468),
     (0.037566983103707936, 2969),
     (0.03725182003350967, 1723),
     (0.037238370858689175, 2767),
     (0.03696154627105317, 3205),
     (0.03679414699666566, 864),
     (0.036268027377411485, 2345),
     (0.035970320215902754, 3057),
     (0.034899356647054146, 3270),
     (0.03454974613444602, 2350),
     (0.034383816197631145, 2436),
     ...]
</pre>
</div>
<br>
  <br>
<p>마지막으로 index를 단어로 변환하여 "긍정 키워드 리스트"와 "부정 키워드 리스트"의 Top 20 단어를 출력해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">invert_index_vectorizer = {v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vect.vocabulary_.items()}</span><br><span class="line">invert_index_vectorizer</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    {2866: '집중',
     3588: '휴식',
     2696: '제공',
     2311: '위치',
     1584: '선정',
     790: '또한',
     2927: '청소',
     2925: '청결',
     1527: '상태',
     2392: '이상',
     3022: '침대',
     2388: '이불',
     3021: '침구',
     299: '교체',
     2013: '어메니티',
     1296: '보강',
     1277: '베스트',
     2299: '웨스턴',
     3564: '회원',
     185: '경우',
     106: '객실',
     3009: '층수',
     2234: '요청',
     2606: '적극',
     1188: '반영',
     2837: '지인',
     1629: '소개',
     2910: '처음',
     611: '당황',
     1607: '세면',
     675: '도구',
     2555: '잠옷',
     3358: '필수',
     361: '그것',
     2673: '정도',
     578: '다음',
     2074: '여기',
     1171: '박만',
     2595: '저녁',
     981: '맥주',
     3414: '한잔',
     838: '렌트',
     791: '뚜벅',
     1159: '바로',
     1247: '버스',
     2676: '정류',
     697: '도착',
     24: '가방',
     2487: '일찍',
     2685: '정비',
     1225: '방이',
     2500: '입실',
     2038: '업그레이드',
     2849: '직원',
     2680: '정말',
     1148: '바다',
     2623: '전망',
     2636: '전일',
     3425: '함덕',
     624: '대명',
     3091: '콘도',
     1861: '실내',
     1384: '분위기',
     1659: '손님',
     40: '가장',
     1241: '배치',
     651: '대해',
     634: '대응',
     1889: '써비스',
     2730: '조식',
     1351: '부분',
     1838: '신경',
     1922: '아주',
     3208: '특급',
     3191: '트랜디',
     210: '고민',
     3593: '흔적',
     2082: '여름',
     1700: '수영장',
     1483: '사용',
     1297: '보고',
     2035: '엄마',
     2: '가격',
     627: '대비',
     2769: '주위',
     924: '마트',
     1826: '식당',
     1816: '시장',
     1217: '방문',
     2361: '의사',
     726: '동안',
     2695: '정해진',
     3580: '휘슬',
     269: '공항',
     1539: '생각',
     1809: '시설',
     1028: '모두',
     3017: '친절',
     1029: '모드',
     917: '마지막',
     900: '마무리',
     3156: '테라스',
     2612: '전경',
     2427: '인근',
     2583: '재래시장',
     1979: '야시장',
     2402: '이용도',
     2400: '이용',
     2488: '일차',
     3581: '휘슬락',
     2940: '체크',
     2761: '주변',
     2094: '여친',
     2975: '추억',
     26: '가성',
     2977: '추천',
     3575: '후회',
     2145: '예전',
     372: '그랜드',
     2605: '저희',
     1918: '아이',
     708: '돌잔치',
     581: '다정',
     3470: '했었더랬',
     2642: '전통',
     1004: '메종',
     387: '글래드',
     1563: '서비스',
     969: '매우',
     3428: '합리',
     635: '대의',
     1018: '명절',
     1721: '숙박',
     1928: '아티',
     1243: '백미',
     3061: '커피',
     1280: '베이커리',
     43: '가족',
     3342: '플러스',
     2816: '지금',
     2257: '우선',
     2664: '접근성',
     1671: '쇼핑',
     940: '만족도',
     2957: '최고',
     1078: '무엇',
     423: '기억',
     2251: '우리',
     2902: '찾기',
     300: '교통',
     2418: '이틀',
     2691: '정원',
     109: '거기',
     160: '겨울',
     3016: '친구',
     541: '놀러와',
     3185: '투숙',
     1981: '야외',
     1235: '방향',
     1976: '야간',
     2726: '조명',
     1723: '순간',
     638: '대접',
     1868: '실명',
     112: '거론',
     3337: '프론트',
     2378: '이름',
     1938: '안나',
     416: '기분',
     1037: '모습',
     2921: '첫날',
     1761: '스타트',
     576: '다시',
     1578: '선물',
     3032: '카운터',
     1939: '안내',
     777: '디너',
     438: '기회',
     1121: '미니바',
     1067: '무료',
     2959: '최근',
     281: '관광지',
     1719: '숙고',
     88: '강추',
     1977: '야경',
     2475: '일부러',
     2476: '일어나서',
     714: '동네',
     1168: '바퀴',
     990: '먹방',
     1843: '신라',
     3105: '퀄리티',
     1024: '모녀',
     2711: '제주시',
     2313: '위해',
     1586: '선택',
     2180: '오픈',
     2143: '예약',
     622: '대로',
     115: '거리',
     657: '더군다나',
     1627: '셔틀버스',
     2271: '운행',
     670: '데스크',
     2880: '차안',
     1374: '분도',
     2438: '인상',
     3201: '트윈',
     1489: '사이즈',
     939: '만족',
     1758: '스타',
     45: '가짓수',
     558: '느낌',
     3538: '화장실',
     505: '내부',
     2455: '인테리어',
     2859: '질적',
     2368: '이건',
     100: '개인',
     3005: '취향',
     321: '구비',
     273: '과일',
     480: '나이프',
     3295: '포크',
     1364: '부탁',
     2786: '준비',
     3305: '표방',
     1046: '모텔',
     165: '결론',
     3577: '훌륭',
     1799: '시간',
     1737: '슈페리어킹룸',
     3376: '하루',
     3570: '후기',
     2836: '지은지',
     2033: '얼마',
     136: '건물',
     1985: '약간',
     2318: '유럽',
     1760: '스타일',
     378: '그림',
     2715: '조각',
     1323: '복도',
     2633: '전시',
     2630: '전부',
     3039: '카펫',
     770: '등급',
     567: '다른',
     2394: '이서',
     2512: '자기',
     2722: '조금',
     2218: '외투',
     2206: '완전',
     2856: '진짜',
     1626: '셔틀',
     1127: '미리',
     1821: '시티',
     2162: '오름',
     570: '다만',
     680: '도로',
     39: '가인',
     276: '관계',
     2876: '차량',
     1638: '소리',
     574: '다소',
     1215: '방도',
     3273: '편의점',
     3027: '칫솔',
     709: '동계',
     3576: '훈련',
     795: '라마',
     2116: '연인',
     2641: '전체',
     1493: '사진',
     2920: '첨부',
     2064: '엘리베이터',
     1873: '실시간',
     1440: '비행기',
     3151: '택시',
     1128: '미만',
     2374: '이동',
     9: '가능',
     2961: '최상',
     2235: '욕실',
     1791: '슬리퍼',
     2304: '위생',
     2123: '염려',
     1590: '설날',
     788: '떡국',
     840: '려고',
     3495: '현장',
     167: '결재',
     3559: '황스',
     841: '려운',
     2789: '중국',
     932: '만두',
     2744: '종류',
     1293: '별로',
     316: '구만',
     996: '메뉴',
     603: '답변',
     2709: '제일',
     2779: '주차',
     131: '걱정',
     3423: '할아버지',
     1945: '안심',
     3067: '컨디션',
     1095: '문어',
     2909: '처리',
     3561: '회사',
     2988: '출장',
     1567: '서울',
     64: '간혹',
     2386: '이벤트',
     3460: '해주시',
     1344: '부대',
     3435: '항상',
     855: '롯데',
     1434: '비지니스',
     2097: '여행객',
     1664: '손색',
     2236: '욕조',
     175: '겸비',
     1459: '사계절',
     1715: '수풀',
     2794: '중문',
     3306: '표선등',
     2281: '원거리',
     2101: '여행지',
     1322: '복귀',
     1805: '시내',
     2323: '유명',
     2462: '일단',
     2781: '주차장',
     2844: '지하',
     246: '공간',
     2356: '응대',
     1097: '문의사항',
     1850: '신지',
     71: '감동',
     2106: '역시',
     2566: '장도',
     807: '락타',
     1550: '샤워',
     896: '마련',
     3089: '코인',
     1620: '세탁실',
     2167: '오션',
     994: '멀리',
     497: '남자친구',
     665: '덕분',
     2385: '이번',
     3331: '프런트',
     1239: '배정',
     2415: '이착륙',
     3120: '클리닝',
     382: '근무',
     1923: '아주머니',
     2436: '인사',
     3085: '코로나',
     1496: '사태',
     535: '노화',
     1286: '벽지',
     2756: '주름',
     2814: '지고',
     3133: '타일',
     4: '가구',
     3082: '코너',
     243: '곳곳이',
     279: '관광객',
     2449: '인지',
     1463: '사람',
     1369: '북적',
     2627: '전반',
     284: '관리',
     3274: '편이',
     3346: '피드백',
     3276: '편입',
     686: '도시',
     278: '관광',
     3214: '특화',
     2834: '지역',
     385: '근처',
     3034: '카페',
     6: '가기',
     221: '고유',
     3210: '특색',
     1768: '스테이',
     10: '가도',
     1759: '스타벅스',
     1263: '번화가',
     1924: '아침',
     3057: '커서',
     1224: '방음',
     988: '먹거리',
     588: '단점',
     797: '라면',
     2170: '오심',
     2411: '이중',
     3523: '혼자',
     157: '겐찮은듯',
     563: '다그',
     694: '도일',
     456: '께빵',
     2793: '중국인',
     3127: '타고',
     556: '눈앞',
     44: '가지',
     3598: '힐링',
     3354: '피트니스',
     3254: '패키지',
     1122: '미닫이',
     847: '로비',
     1421: '비롯',
     1030: '모든',
     52: '각종',
     1103: '물건',
     1926: '아침식사',
     1207: '밥맛',
     3349: '피아노',
     2118: '연주',
     867: '룸타입',
     3250: '패밀리',
     121: '거실',
     3412: '한실',
     1562: '서부',
     1690: '수산시장',
     1534: '새벽',
     182: '경매',
     304: '구경',
     2972: '추가',
     2022: '어차피',
     3496: '현재',
     1090: '묵고',
     2453: '인터넷',
     2840: '지정',
     1952: '안해',
     3330: '프런터',
     1096: '문의',
     2135: '영화',
     1810: '시스템',
     3219: '티브이',
     2903: '채널',
     1020: '몇개',
     3092: '콘센트',
     3341: '플러그',
     2201: '와이프',
     2995: '충전',
     168: '결정',
     594: '달라',
     190: '경험',
     2579: '장점',
     2439: '인생',
     2966: '최악',
     2797: '중심',
     1153: '바닷가',
     1413: '비교',
     3275: '편임',
     3408: '한번',
     2146: '예정',
     3585: '휴가',
     1750: '스위트룸',
     2322: '유리창',
     2312: '위트',
     3050: '캠핑',
     3160: '테이블',
     1621: '세트',
     3161: '텐트',
     2054: '에어컨',
     2543: '작은방',
     975: '매트',
     2520: '자리',
     3142: '탑동',
     263: '공원',
     3338: '프리',
     923: '마켓',
     259: '공연',
     971: '매일',
     1833: '식사',
     282: '관덕정',
     2682: '정문',
     684: '도보',
     1645: '소요',
     3458: '해장국',
     717: '동문',
     1560: '서문시장',
     1047: '목관',
     960: '맞은편',
     1792: '슬슬',
     1291: '별관',
     1330: '본관',
     68: '갈수',
     2965: '최신',
     377: '그린',
     3545: '환경',
     787: '때문',
     1292: '별도',
     641: '대중교통',
     317: '구매',
     1882: '심플',
     1438: '비품',
     3205: '트윈침대',
     1763: '스탠다드',
     548: '높이',
     3404: '한라산',
     525: '노곤',
     3152: '터미널',
     2189: '온돌룸',
     1608: '세면대',
     1114: '물이',
     3013: '치약',
     150: '것임',
     1545: '생수',
     3550: '환승',
     231: '곧바로',
     710: '동광양',
     2677: '정류장',
     1818: '시청',
     1771: '스텝',
     3502: '협소하',
     130: '거품',
     3131: '타월',
     3537: '화장',
     612: '대가',
     123: '거울',
     1670: '쇼파',
     2739: '조합',
     395: '금액',
     2780: '주차공간',
     267: '공터',
     3150: '태풍',
     104: '개층',
     2184: '오후',
     3409: '한시',
     1485: '사우나',
     1349: '부모님',
     3422: '할머니',
     1038: '모시',
     197: '계획',
     2464: '일로',
     1445: '빠듯해',
     2004: '어디',
     441: '길가',
     235: '골목길',
     2377: '이륙',
     2887: '착륙',
     1310: '보이',
     363: '그냥',
     2469: '일반',
     633: '대욕',
     3489: '헬스장',
     19: '가면',
     206: '고려',
     837: '렌터카',
     2496: '입구',
     1182: '반대쪽',
     3416: '한정',
     591: '단체',
     660: '더블',
     2708: '제외',
     2088: '여유',
     1183: '반대편',
     688: '도심',
     1387: '불구',
     1648: '소음',
     125: '거의',
     1609: '세명',
     3199: '트리플',
     2618: '전날',
     495: '남아',
     2534: '자체',
     610: '당일',
     2683: '정보',
     3468: '햇반',
     2580: '장조림',
     2637: '전자',
     831: '레인지',
     33: '가야',
     1610: '세미나',
     3400: '한국인',
     369: '그대로',
     469: '나름',
     2697: '제과점',
     2670: '정거장',
     1022: '모기',
     944: '만해',
     898: '마리',
     16: '가량',
     1222: '방안',
     2058: '에프킬라',
     1435: '비치',
     195: '계속',
     1456: '뿌리',
     2557: '잡고',
     2891: '찬장',
     2915: '천장',
     242: '곳곳',
     3008: '측은',
     1265: '벌레',
     414: '기본',
     2223: '요금',
     135: '건너편',
     1262: '번호',
     1538: '샐러드',
     2349: '음식',
     326: '구성',
     2629: '전복죽',
     2601: '저번',
     3464: '핸드폰',
     2996: '충전기',
     1400: '불편',
     1622: '센터',
     256: '공사',
     1720: '숙면',
     1061: '무난',
     528: '노력',
     2826: '지불',
     1430: '비용',
     845: '로맨틱',
     702: '독립',
     1368: '북유럽',
     2321: '유리',
     3059: '커튼',
     1145: '바깥',
     1595: '설치',
     1025: '모던',
     1418: '비데',
     3569: '효율',
     2451: '인치',
     1512: '삼성',
     927: '만끽',
     3270: '편안함',
     2091: '여정',
     1151: '바닥',
     1052: '목적',
     3060: '커플',
     464: '끼리',
     2852: '직진',
     2268: '운전',
     261: '공영',
     1962: '애기',
     1074: '무선인터넷',
     80: '갑자기',
     1568: '서전',
     3432: '항공',
     562: '다가',
     5: '가급',
     169: '결제',
     2342: '은방',
     1533: '상황',
     1914: '아시',
     227: '고트',
     2822: '지도',
     1614: '세심',
     257: '공시',
     1815: '시작',
     982: '맥주잔',
     3102: '쿠폰',
     2463: '일도',
     3108: '크기',
     864: '룸서비스',
     2690: '정신',
     3277: '평가',
     3272: '편의',
     2233: '요즘',
     2078: '여러',
     2848: '직언',
     1412: '블룸',
     1288: '변기',
     1115: '물질',
     1997: '얘기',
     1675: '수건',
     3548: '환불',
     2293: '월일',
     3313: '푸른',
     3223: '파도',
     2918: '철썩',
     3320: '풍경',
     1544: '생선회',
     2573: '장소',
     543: '놀이',
     1989: '양도',
     735: '돼지',
     2613: '전골',
     970: '매운탕',
     3512: '형편',
     1406: '브런치',
     751: '뒤쪽',
     956: '맛집',
     2869: '쭈욱',
     79: '갑인',
     764: '드타',
     1233: '방파제',
     3567: '횟집',
     3129: '타운',
     3448: '해산물',
     356: '규모',
     7: '가까이',
     2008: '어르신',
     454: '깨끗',
     629: '대신',
     2538: '작고',
     1697: '수영',
     1912: '아쉬움',
     2430: '인도',
     1634: '소독약',
     1745: '스비',
     3525: '홀로',
     775: '등정후',
     1365: '부터',
     3520: '혹시',
     3543: '확인',
     2645: '전화',
     3180: '통해',
     3582: '휘트니',
     2266: '운동복',
     1698: '수영모',
     219: '고오',
     1157: '바람',
     631: '대여',
     2093: '여직원',
     1077: '무시',
     951: '말투',
     2284: '원래',
     2700: '제로',
     2267: '운영',
     2470: '일반인',
     2503: '입장',
     1583: '선심',
     3360: '필요',
     430: '기전',
     620: '대뜸',
     3528: '화가',
     200: '고객',
     3343: '플레인',
     1800: '시경',
     1917: '아웃',
     3382: '하야',
     998: '메리어트',
     2081: '여럿',
     2397: '이어도',
     1707: '수준',
     2370: '이군',
     1867: '실망',
     2747: '종일',
     880: '리셉션',
     3070: '컨시어',
     3147: '태도',
     2319: '유료',
     1460: '사고',
     3393: '학생',
     1580: '선생님',
     2005: '어딘',
     1498: '사항',
     1075: '무슨',
     128: '거지',
     879: '리빙룸',
     3368: '하나요',
     3202: '트윈룸',
     1065: '무려',
     156: '게재',
     1869: '실물',
     2881: '차이',
     1879: '실화',
     3231: '파우더',
     240: '곰팡이',
     2511: '자국',
     2539: '작동',
     233: '골드스타',
     517: '냉장고',
     2649: '절대',
     826: '레스토랑',
     2513: '자꾸',
     2687: '정색',
     1510: '살짝',
     1561: '서버',
     669: '데리',
     32: '가신',
     470: '나머지',
     1105: '물기',
     2851: '직접',
     2931: '체계',
     2048: '엉망',
     1630: '소규모',
     1803: '시기',
     910: '마음',
     886: '리트',
     794: '라그',
     409: '기대',
     1862: '실내수영장',
     1701: '수온',
     1749: '스위트',
     1427: '비수',
     1515: '상대',
     536: '노후',
     2669: '정가',
     1072: '무리',
     3424: '할인',
     3473: '행사',
     2893: '참고',
     3298: '포함',
     913: '마일리지',
     650: '대한항공',
     3377: '하룻밤',
     3542: '확실',
     2115: '연식',
     201: '고급',
     2280: '원가',
     1566: '서우',
     3453: '해수욕장',
     3402: '한눈',
     2900: '창문',
     161: '겨울철',
     2187: '온도',
     870: '리기',
     1214: '방기',
     725: '동시',
     1221: '방식',
     621: '대략',
     695: '도정',
     1352: '부스',
     2137: '옆방',
     3220: '티비',
     3001: '취침',
     2946: '초등학생',
     1996: '양호',
     3411: '한식당',
     2875: '차라리',
     1184: '반드시',
     3107: '크게',
     1896: '씨유',
     674: '델문',
     3035: '카페나',
     3452: '해수욕',
     2969: '최적',
     778: '디럭스',
     1203: '발코니',
     1034: '모로',
     3203: '트윈룸입니',
     1585: '선착순',
     2142: '예술',
     1106: '물놀이',
     1031: '모래',
     3352: '피크',
     1817: '시즌',
     491: '날씨',
     1581: '선선',
     381: '근래',
     3269: '편리',
     3086: '코르',
     434: '기지',
     1481: '사양',
     2782: '주체',
     302: '교회',
     2653: '절반',
     2440: '인수',
     1314: '보임',
     1927: '아트',
     2976: '추정',
     3333: '프로',
     3264: '페셔',
     2432: '인력',
     976: '매트리스',
     472: '나무',
     3482: '허리',
     1934: '안감',
     3447: '해변',
     2275: '워낙',
     31: '가시',
     2757: '주말',
     3397: '한국',
     1270: '벚꽃',
     403: '기간',
     3503: '협재',
     2197: '옹포',
     1209: '밥집',
     1505: '산책',
     860: '루프',
     1425: '비바람',
     1396: '불어',
     1410: '블로거',
     1108: '물떄',
     360: '그거',
     2308: '위주',
     3317: '풀이',
     2192: '온수',
     1133: '미온수',
     1132: '미온',
     2536: '자쿠지',
     2551: '잠깐',
     2458: '인피니트',
     3549: '환상',
     3365: '하나',
     1782: '스페',
     3015: '치킨',
     1446: '빠에야',
     1779: '스파',
     333: '구조',
     1780: '스파룸',
     2535: '자쿠',
     2401: '이용권',
     3371: '하니',
     1487: '사이',
     1820: '시트',
     2678: '정리',
     1511: '삼다수',
     1294: '병과',
     520: '네스프레소',
     3051: '캡슐',
     2089: '여자',
     3347: '피로',
     1784: '스페인',
     2132: '영업',
     2743: '종료',
     1245: '버거',
     2161: '오른쪽',
     893: '마담',
     482: '나탈리',
     2351: '음악',
     3362: '필터',
     1875: '실외수영장',
     147: '검색',
     2186: '옥상',
     164: '결과',
     653: '대형',
     942: '만큼',
     1260: '번잡',
     98: '개수대',
     2407: '이전',
     1909: '아무',
     884: '리지',
     2714: '제한',
     189: '경치',
     2403: '이웃',
     2467: '일몰',
     1877: '실제',
     883: '리조트',
     3527: '홍보',
     1529: '상통',
     3532: '화산',
     1166: '바위',
     2686: '정상',
     431: '기점',
     1770: '스템',
     2556: '잠자리',
     435: '기타',
     1359: '부족함',
     444: '길이',
     582: '다행',
     2792: '중국어',
     2131: '영어',
     692: '도움',
     3438: '해결',
     1053: '목적지',
     3461: '해피',
     2346: '음료',
     1488: '사이다',
     2764: '주스',
     592: '달걀',
     3014: '치즈',
     3597: '히터',
     3187: '투어',
     3515: '호스텔',
     2858: '질문',
     1530: '상품',
     270: '과거',
     154: '게스트하우스',
     2510: '자고',
     2150: '오기',
     2479: '일이',
     1201: '발전',
     2141: '예상',
     3165: '토스터',
     2424: '이후',
     1635: '소등',
     1399: '불키',
     2733: '조용조',
     1232: '방키',
     218: '고여',
     496: '남자',
     1946: '안전',
     2878: '차로',
     2373: '이내',
     1403: '뷔페',
     2076: '여느',
     856: '롯데리아',
     1216: '방만',
     224: '고정',
     1060: '무궁화',
     1676: '수기',
     1490: '사이트',
     3526: '홈페이지',
     921: '마치',
     1088: '무척',
     2617: '전기차',
     134: '건너',
     402: '급속',
     1628: '소가',
     2333: '유치원',
     2784: '주택가',
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> coef <span class="keyword">in</span> coef_pos_index[:<span class="number">20</span>]:</span><br><span class="line">    print(invert_index_vectorizer[coef[<span class="number">1</span>]], coef[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>방문 1.2644550507381787
이용 0.9079356150239053
바다 0.895609472071521
조식 0.8859075267474583
가족 0.8795111499693716
가성 0.8541915649753757
다음 0.8362541212560809
최고 0.7714811231976703
사장 0.7375280889735719
맛집 0.7203390936359615
추천 0.6503260268852225
거리 0.6488836121942877
마음 0.6467914172687944
바로 0.6264469987695738
리조트 0.5943145305412955
출장 0.5505354129422678
도움 0.5294632094678557
인테리어 0.5240729254152497
아주 0.5207834696883535
의사 0.5153917648445299
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> coef <span class="keyword">in</span> coef_neg_index[:<span class="number">20</span>]:</span><br><span class="line">    print(invert_index_vectorizer[coef[<span class="number">1</span>]], coef[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>예약 -0.9945592515966041
냄새 -0.9190158099937462
다른 -0.8672956005075485
침대 -0.7519681298547074
보이 -0.7201222787741572
최악 -0.7142499739127354
에어컨 -0.6786616478611768
별로 -0.6742178511586063
찾기 -0.6584721911054098
취소 -0.6464141509409321
사람 -0.6451323735594592
정도 -0.6240099604615805
사진 -0.6089303470147718
대부분 -0.5889712626646347
다시 -0.5601302753897155
대해 -0.5518124209379022
노후 -0.5484791097700695
느낌 -0.5423970967095598
필요 -0.5413974621071783
문제 -0.5287746123667489
</code></pre>
<br>
<p>키워드를 살펴보면:</p>
<ul>
<li>이용객들이 보통 제주 호텔의 바다뷰 혹은 바다 접근성, 주변 맛집 그리고 인테리어 등에 만족하는 것으로 보입니다.</li>
<li>하지만 숙소의 냄새 그리고 침대, 에어컨 등 시설의 상태가 많이 아쉬워 보이고 개선이 필요해보입니다.</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Text Mining</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Text Mining -- Word Cloud &amp; TF-IDF 중요도 분석 (영화 시나리오)</title>
    <url>/2020/08/23/E-Python-TextMining-1/</url>
    <content><![CDATA[<h1 id="text-mining-실습-영화-시나리오-word-cloud-단어-중요도tf-idf-분석"><a class="markdownIt-Anchor" href="#text-mining-실습-영화-시나리오-word-cloud-단어-중요도tf-idf-분석"></a> 【Text Mining 실습】-- 영화 시나리오: Word Cloud &amp; 단어 중요도(TF-IDF) 분석</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0"><strong>2. 데이터셋 살펴보기</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4-%ED%83%90%EC%83%89">2-1. 기본 정보 탐색</a></li>
</ul>
</li>
<li><a href="#3-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC"><strong>3. 텍스트 데이터 전처리</strong></a>
<ul>
<li><a href="#3-1-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%A0%81%EC%9A%A9">3-1. 정규 표현식 적용</a></li>
<li><a href="#3-2-word-count">3-2. Word Count</a>
<ul>
<li><a href="#1-%EB%A7%90%EB%AD%89%EC%B9%98%EC%BD%94%ED%8D%BC%EC%8A%A4-%EC%83%9D%EC%84%B1">(1) 말뭉치(코퍼스) 생성</a></li>
<li><a href="#2-bow-bag-of-words-%EB%B2%A1%ED%84%B0-%EC%83%9D%EC%84%B1">(2) BoW (Bag of Words) 벡터 생성</a></li>
<li><a href="#3-%EB%8B%A8%EC%96%B4-%EB%B6%84%ED%8F%AC-%ED%83%90%EC%83%89">(3) 단어 분포 탐색</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-%ED%83%9D%EC%8A%A4%ED%8A%B8-%EB%A7%88%EC%9D%B4%EB%8B%9D"><strong>4. 택스트 마이닝</strong></a>
<ul>
<li><a href="#4-1-%EB%8B%A8%EC%96%B4%EB%B3%84-%EB%B9%88%EB%8F%84-%EB%B6%84%EC%84%9D-word-cloud">4-1. 단어별 빈도 분석 (+ Word Cloud)</a>
<ul>
<li><a href="#1-%EC%83%81%EC%9C%84-%EB%B9%88%EB%8F%84%EC%88%98-%EB%8B%A8%EC%96%B4-%EC%B6%9C%EB%A0%A5">(1) 상위 빈도수 단어 출력</a></li>
<li><a href="#2-word-cloud-%EC%8B%9C%EA%B0%81%ED%99%94">(2) Word Cloud 시각화</a></li>
</ul>
</li>
<li><a href="#4-2-%EC%9E%A5%EB%A9%B4%EB%B3%84-%EC%A4%91%EC%9A%94-%EB%8B%A8%EC%96%B4-%EC%8B%9C%EA%B0%81%ED%99%94-tf-idf">4-2. 장면별 중요 단어 시각화 (TF-IDF)</a>
<ul>
<li><a href="#1-tf-idf-%EB%B3%80%ED%99%98">(1) TF-IDF 변환</a></li>
<li><a href="#2-%EB%B2%A1%ED%84%B0-%EB%8B%A8%EC%96%B4-mapping">(2) “벡터” - “단어” mapping</a></li>
<li><a href="#3-%EC%A4%91%EC%9A%94-%EB%8B%A8%EC%96%B4-%EC%B6%94%EC%B6%9C-top-3-tf-idf">(3) 중요 단어 추출 - Top 3 TF-IDF</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>영화 시나리오 데이터를 활용해 2가지의 Text Mining 분석을 진행합니다.</p>
<ol>
<li>
<p>단어별 빈도 분석 (Word Cloud 산출)</p>
</li>
<li>
<p>장면별 중요 단어 시각화 (TF-IDF 분석)</p>
<br>
</li>
</ol>
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">"ignore"</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 사용할 데이터셋</strong></p>
<p>영화 "The Bourne Supermacy"의 시나리오를 활용하겠습니다. <a href="https://www.dailyscript.com/scripts/bournesupremacy.pdf" target="_blank" rel="noopener">Link (pdf파일)</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/bourne_scenario.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>
<p>page_no: 데이터가 위치한 pdf파일의 페이지 수</p>
</li>
<li>
<p>scene_title: 씬 제목</p>
</li>
<li>
<p>text: 씬에 해당하는 지문/대본 텍스트 정보</p>
<br>
<br>
</li>
</ul>
<h2 id="2-데이터셋-살펴보기"><a class="markdownIt-Anchor" href="#2-데이터셋-살펴보기"></a> <strong>2. 데이터셋 살펴보기</strong></h2>
<h3 id="2-1-기본-정보-탐색"><a class="markdownIt-Anchor" href="#2-1-기본-정보-탐색"></a> 2-1. 기본 정보 탐색</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># dimension</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 3)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>page_no        0
scene_title    0
text           0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 320 entries, 0 to 319
Data columns (total 3 columns):
 #   Column       Non-Null Count  Dtype 
---  ------       --------------  ----- 
 0   page_no      320 non-null    int64 
 1   scene_title  320 non-null    object
 2   text         320 non-null    object
dtypes: int64(1), object(2)
memory usage: 7.6+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># text 변수 확인</span></span><br><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>" 1                It's raining...                Light strobes across the wet glass at a rhythmic pace...                 Suddenly -- through the window a face -- JASON BOURNE --               riding in the backseat -- his gaze fixed.      "
</code></pre>
  <br>
<p>"text"내용을 확인해보면, 여기에 우리가 필요없는 내용들이 포함되어있습니다: 맨 앞에 있는 씬 번호, 공백, 특수 문자 등. 이들을 제거하는 전처리 과정이 필요해보입니다.<br>
또한, Text mining을 진행할 때, 대소분자의 구분이 의미가 없습니다. 따라서, 대문자를 소문자로 변환하는 작업도 함계 진행하겠습니다.</p>
<p><br> <br></p>
<h2 id="3-텍스트-데이터-전처리"><a class="markdownIt-Anchor" href="#3-텍스트-데이터-전처리"></a> <strong>3. 텍스트 데이터 전처리</strong></h2>
<h3 id="3-1-정규-표현식-적용"><a class="markdownIt-Anchor" href="#3-1-정규-표현식-적용"></a> 3-1. 정규 표현식 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>" 1                It's raining...                Light strobes across the wet glass at a rhythmic pace...                 Suddenly -- through the window a face -- JASON BOURNE --               riding in the backseat -- his gaze fixed.      "
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 함수 정의</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_regular_expression</span><span class="params">(text)</span>:</span></span><br><span class="line">    text = text.lower()  <span class="comment"># 대문자 -&gt; 소문자 변환</span></span><br><span class="line">    english = re.compile(<span class="string">'[^ a-z]'</span>)  <span class="comment"># 영어 추출 규칙: 띄어 쓰기를 포함한 알파벳</span></span><br><span class="line">    result = english.sub(<span class="string">''</span>, text)  <span class="comment"># 위에 설정한 "english"규칙을 "text"에 적용(.sub)시킴</span></span><br><span class="line">    result = re.sub(<span class="string">' +'</span>, <span class="string">' '</span>, result) <span class="comment"># 2개 이상의 공백을(' +') 하나의 공백(' ')으로 바꿈</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>만들어 놓은 정규 표현식을 "text"의 첫번째 데이터에 적용해보면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>' its raining light strobes across the wet glass at a rhythmic pace suddenly through the window a face jason bourne riding in the backseat his gaze fixed '
</code></pre>
<br>
<p>우리의 예상대로 소문자만 존재하고, 공백과 특수문자가 모두 제거됐습니다.</p>
<p>그럼 이제 이 규칙을 전체 데이터셋에 적용해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 적용</span></span><br><span class="line">df[<span class="string">'processed_text'</span>] = df[<span class="string">'text'</span>].apply(<span class="keyword">lambda</span> x: apply_regular_expression(x))</span><br><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
      <th>processed_text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
      <td>its raining light strobes across the wet glas...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
      <td>a on his knee a syringe and a gun the eyes of...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
      <td>bournes eyes open panicked gasping trying to ...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
      <td>a bourne moving for the medicine cabinet digs...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
      <td>one minute later bourne moves out onto the ve...</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="3-2-word-count"><a class="markdownIt-Anchor" href="#3-2-word-count"></a> 3-2. Word Count</h3>
<h4 id="1-말뭉치코퍼스-생성"><a class="markdownIt-Anchor" href="#1-말뭉치코퍼스-생성"></a> (1) 말뭉치(코퍼스) 생성</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># make corpus</span></span><br><span class="line">corpus = df[<span class="string">'processed_text'</span>].tolist()</span><br><span class="line">corpus</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow-x: scroll; overflow-y: scroll;">
<pre>    [' its raining light strobes across the wet glass at a rhythmic pace suddenly through the window a face jason bourne riding in the backseat his gaze fixed ',
     ' a on his knee a syringe and a gun the eyes of the driver jarda watching bournes pov the passenger back of his head cell phone rings the head turns its conklin bourne returns his stare ',
     ' bournes eyes open panicked gasping trying to stay quiet marie sleeps ',
     ' a bourne moving for the medicine cabinet digs through the medicine cabinet downs something specific ',
     ' one minute later bourne moves out onto the veranda marie pads in watching him for a moment concerned clearly its not the first time this has happened they both look different than last we saw them his hair is longer shes a blonde hippie travelers their cottage is humble but sweet the bedroom opens to a beach and a town just down the hill club music from some all night rave wafting in from the far distance marie where were you jason bourne in the car conklin up front marie ill get the book bourne no theres nothing new marie youre sure he nods we should still we should write it down bourne two years were scribbling in a notebook marie it hasnt been two years bourne its always bad and its never anything but bits and pieces anyway shes gone quiet you ever think that maybe its just making it worse you dont wonder that she lays her hands on his shoulders steadies him marie we write them down because sooner or later youre going to remember something good bourne softens i do remember something good all the time i remember you she smiles kisses him leads him back in ',
     ' marie getting bourne into the bed turning down the light getting him settled waiting for that pill to kick in what would he do without her bourne im trying marie okay marie i worry when you get like this bourne its just a nightmare marie i dont mean that i worry when you try to ignore it he hesitates but that gets him he knows shes right and with that opening hes letting go resistance folding almost childlike shes gathering him in hes letting her do it marie contd sleep sleep now bourne i should be better by now marie you are better and i think its not memories at all its just a dream you keep having over and over bourne but it ends up the same marie one day it will be different it just takes time beat well make new memories you and me silence she strokes his face he gives in to her tenderness hes fading two waifs in the dark ',
     ' bourne running in the sun a punishing pace along the sand moving strong effortless deep into it focused the stunning conjunction of sun and scenery are lost on him ',
     ' a busy market town fishing town hippie town lots of young western faces rundown and happening at the same time marie shopping filling a bag with local produce ',
     ' bourne still running leaving the beach behind ',
     ' marie back from the market putting the groceries away almost done when she stops for a moment a photograph there on the windowsill a snapshot jason and marie on a beach her arms around him as if she were the protector big smiles young alive in love marie smiles ',
     ' funky busy colonial facades in vivid subcontinental technicolor loud morning traffic camera finds bourne coming out of a store with a big bottle of water hes just finished his run standing there chugging away checking the scene when something catches his eye his pov the street a silver car something newish pulling down the block cant quite see whos driving but back to bourne watching this silver car so serious hes casual nobody passing would notice but we do hes on alert moving with him as bourne follows the silver car on foot natural cruising the busy sidewalk blending into the mix chugging on that water bottle and up ahead the silver car making the corner and turning now back to bourne slowing as he reaches the corner his pov the silver car has parked theres a guy welldressed casual physical sunglasses call him kirill hes out of the car and heading across the street toward a building there a telegraph office back to bourne checking his watch the car the guy perimeter ',
     ' mr mohan at his desk hes a crisp proper man of fifty hes just been handed something a photograph of marie an old passport picture mr mohan and your question sir kirill across the desk kirill shes my sister theres been a death in the family this is the last place we know she called from ',
     ' a note on the table im at the beach bourne has just come in just read the note balling it quickly in fact everything is quickly now because bourne is bailing fast calm methodical some exfil procedure that hes honed and choreographed packing like a machine rapid time cuts backpacks thrown open on the bed house cash pulled from a lamp base credit cards taped under the counter ',
     ' kirill coming out of the bank mission accomplished heading back to the silver car getting in and ',
     ' kirill starting it up glancing around nice and easy hes cool putting the car into gear he makes a slow pass through the marketplace eyes everywhere ',
     ' bourne done the place is stripped pulling on the backpacks glancing around one last thing shit he almost missed it the photograph the one of he and marie on the beach the one we saw her looking at earlier there it is on the windowsill jamming it into his pocket and ',
     ' a kirill now parked and out of the car on the move on foot he begins a sweep of the beach ',
     ' bourne out the back jogging keeping low into the neighborhood through the alleys nothing random about it this has all been worked out and ',
     ' crowded with tourists sunbathers marie at her favorite spot talking with two women laughing with them happy ',
     ' a a burly jeep comes roaring up bourne spots the silver car parks at the other end takes off towards the beach ',
     ' kirill methodically making his way up the beach checking every blue tent every towel ',
     ' bourne coming up the beach the opposite way one eye on kirill one eye on marie he arrives just as kirill looks up and sees them a hundred yards away a hard stare between them bourne bends down bourne we gotta go marie we gotta go now from the tone of his voice she knows its serious marie grabs her bag a quick goodbye to the friends they hurry off bourne uses the sunbathers as cover kirill retreats ',
     ' they reach the jeep she knows the drill bag tossed in the back even as the jeep pulls away and ',
     ' bourne driving marie beside him bourne were blown she hesitates one minute ago everything was fine marie no how bourne the telegraph office marie but we were so careful bourne we pushed it we got lazy ',
     ' kirill already back at the silver car following them out onto the main street blocked by the local traffic pulling a huge automatic pistol out from his travel bag ',
     ' the jeep pulling down this narrow little passageway and bournes windshield pov main street packed with traffic and back to bourne not liking this eyes all over trying to decide marie but youre sure bourne he was at the campground yesterday marie so bourne its wrong guy with a rental car and hundred dollar sneakers sleeps in a tent trying to decide whether to pull out or back up marie thats crazy bourne no not this this is real suddenly and hes right there throwing the car into reverse marie where bourne back there at the corner hyundai silver ',
     ' kirill trapped in some main street gridlock glancing back for a way out freezing suddenly because there his pov the jeep the alley right there twenty yards back a good look at bourne and marie as they disappear and ',
     ' the jeep backing up the way it came blowing its horn because an old van pulls in and blocks him from behind ',
     ' bourne leaning on the horn shit now theyve got to wait marie but youre not youre not sure bourne we cant wait to be sure marie i dont want to move againi like it here bourne look we clear out we get to the shack we get safe we hang there awhile ill come back ill check it out but right now we cant marie wheres left to go bourne theres places we cant afford to be wrong ',
     ' kirill calm possessed of a familiar tactical patience he cant get the hyundai to the alley from where he is and it doesnt make sense to go on foot he checks his rearview fuck it theres an opening ahead and hes taking it even though its away from them hell find another way ',
     ' bourne sees the hyundai move forward into traffic the old van is still blocking them from behind bourne you drive marie what bourne already squeezing over switch you drive marie where bourne make the left toward the bridge marie scrambling over the seat bourne eyes everywhere checks his watch the jeep squirts back on the main street and ',
     ' marie at the wheel adrenaline pumping clear running for thirty yards ahead and marie skidding them into the right turn clipping another vehicle mirror shattering speeding up bourne scanning behind them marie moving out to pass veering back an oncoming bus just in time and marie jesus glancing over is he back there bourne not yet marie its just him bourne yeah one guy i dont think he was ready marie hang on marie bearing down pulling out gives him a quick smile bourne knowing hes got a good one here ',
     ' kirill stopping short on a rise bit of a view from here gets half out the car to look below the jeep headed for a bridge hes gonna lose them kirills mind racing grabs duffle from the back abandons car ',
     ' marie driving bourne preps his pistol eye out for kirill bourne you keep going to the shack ill meet you there in an hour marie concerned where are you going bourne im going to bail on the other side and wait this bridge is the only way he can follow marie what if its not who you think it is bourne if he crosses the bridge it is marie there must be another way bourne i warned them marie i told them to leave us alone marie jason please dont do thisit wont ever be over like this bourne theres no choice her pov the old concrete bridge ahead almost there ',
     ' kirill slams into it quick precise grabs into the bag only a moment and hes got a sniper rifle ',
     ' a bourne pistol in hand spare clip in the other checks his watch bourne at the end make the left when i roll out do not slow down marie nods got it after a beat marie i love you too bourne tell me later marie looks ahead ',
     ' b kirill eye to the scope sniper scope pov there the jeep rumbling across the bridge no clear target just the back of the full drivers side headrest kirills finger squeezing firing ',
     ' the jeep jerking front fender tearing into and along the guard rail cement shards fill the air bourne reaching for the wheel too late as the jeep finally crashes through the flimsy guardrail plummets splashes hard begins to sink out of sight ',
     ' kirill lowers the scope takes a quick look around hes basically gone unnoticed in this little nook with his silenced rifle but people are already rushing toward the bridge then there an old woman looking directly at kirill from a doorway not quite sure what but an old indian woman in goa so what kirill drills her with a look as she sinks back inside ',
     ' swallowed up bourne and marie gone ',
     ' kirill scans the surface of the river under the bridge waiting ',
     ' mud plumes as the jeep settles bourne reaches over to marie tries to urge her out ',
     ' kirill with a killers patience waiting almost done scope pov the surface of the water unbroken kirill scans his perimeter theres the old woman again but more people with her people coming out of the woodwork kirill checks the surface one last time nothing he breaks down the rifle in moments goes ',
     ' bourne up into an air pocket held by the jeeps canvas top a big gulp of air and hes back to marie frantic trying to unclip her seatbelt pull her out but its all jammed up ',
     ' bag chucked in the back all he has left is the scope one last look to the unbroken surface then its time to go kirill drifting away disappears ',
     ' the red halo growing bigger blood bourne pauses maries face is blank shes dead bourne finally pulling back realizing this is goodbye ',
     ' we pick up a man with a briefcase on a telephoto lens teddyradio vo the seller has arrived berlin as the man comes to a chinese restaurant he stops squarely so he can be seen clearly then he enters a stark glass office building teddyradio vo contd contd hes inside ',
     ' two men cross the square to the chinese restaurant vic is forty steelass intel operator he carries a large samples case beside him mike younger exnavyseal ',
     ' the hub secure anonymous office space somewhere in the city shades drawn lots of gear cabled around the stale improvised feel of a temporary outpost four serious people alone in this room pamela landy is a senior cia counterintelligence officer hovering over the communications console cronin pamelas early forties stonecold facade quarterbacking the operation over the radio kurt and kim are the techs here his and her headphones ruggedized laptops and comm gear spread around them cronin what have you got survey one ',
     ' dark teddy at the window another military face radio rig night scope watching vic and mike pass below him teddyradio over hub this is survey one mobile one is in motion seller is inside and waiting ',
     ' vic and mike slow as they come to the same stark glass office building teddyradio over we are ready to go ',
     ' mike and vic shake hands two tired coworkers parting ways mike will keep walking vic entering the building through the big glass doors smiling as hes approached by a night shift security guard and we hear mike still walking alone now heading away from the glass office building toward a van parked up the block mikeradio sleeve mike earpiece this is escort one im clear ',
     ' the command post cronin works the communications board cronin all teams listen up we are standing by for final green turning now to pamela who has been listening just as shes about to give the final word kim raises a finger kim langley she hands pamela a phone thats patched into her board pamela a bit surprised martin ',
     ' three men cia mandarins sit around a round table martin marshall deputy vicedirector hes in charge all is tense marshall im here so is donnie and jack weller we understand youre using the full allocation for this buy pamela thats where we came out marshall its a lot of money pam pamela were talking raw unprocessed kgb files its not something we can go out and comparison shop marshall still pamela for a thief a mole i vetted the source marty hes real if it does nothing more than narrow the list of suspects its a bargain at ten times the price mandarin pamela jack weller here its the quality thats at issue pamela yes sir im in total agreement if theyre fakes theyre expensive furious impatient gentlemen ive got the seller on site and in play quite honestly theres not much more to talk about marshall looks to his mandarians not convinced but doesnt want to lose the opportunity time to wash his hands marshall all right pam your game your call ',
     ' all eyes on pamela as she puts down the phone to langley nodding to cronin yes croninradio final green you are go repeat you are go for final green ',
     ' vic has just passed muster with the security guard hes standing alone at an elevator bank vicradio sleeve mike earpiece on my way up vic pulling his earpiece going dark waits for an elevator ',
     ' a dark a small room full of wiring and infrastructure lit by the glare of someones maglight gloved hands quickly pass over racks of gear and wiring and then stopping at the main electrical risers they carefully place an explosive device no bigger than a pack of cigarettes onto the main riser done with that here comes a second small explosive device but this ones special its being taken from a plastic bag and mounted down by the floor on a subpanel done the hands hold up what looks like a piece of tape ',
     ' transferring it onto the charge ',
     ' vic alone with the samples case pressing the button for the top floor the doors close the car rises and then it stops vic bracing himself as the door opens and ivan russian the guy we saw outside with the briefcase standing in an empty darkened hallway ivan show me vic here ivan holding open the door now show now vic flips open the case cash three million dollars ',
     ' a glass door a suite of offices beyond clean anonymous one light on deep inside caspiexpetroleum cherbourg moscow rome tehran',
     ' curtains drawn lights low ivan sitting with the samples case counting the cash vic poring over russian document files dozens of kgb files old and new spread sheets financial data incomprehensibly cyrillic marked up but judging by the seals and clearance sign offs all topsecret vic this is everything ivan is there is all there suddenly music a radio some tinny pop tune just started playing from somewhere down the hall vic what the hell is that alone you said alone both of them sure theyre being doublecrossed vic contd contd reaching for his ankle who who else is here ivan no not me no other people vic coming up with a pistol shut up just shut the freaked by the gun ivan to his feet vic pushing him back as he rushes past the sample case spilling cash and wrong snapph snapph snapph snapph snapph five fast suppressed small caliber shots vic falls first ivan crashing back across a desk as the bullets tear into him both of them dead before they hit the floor and reverse to find the gloved hands unscrewing a silencer tucking away the weapon already in motion before we know whats happened pulling a climbing duffel out from his back pack stuffing in the samples case and ivans briefcase all the files all the money except wait hes left out one old kgb file cover and now he pulls a plastic bag from his backpack gloved hands carefully remove a single sheet of paper from inside the bag and this paper looks exactly like all the stuff hes just tucked away another page full of cyrillic blur hes putting this sheet of paper inside the file cover now hes slipping them both underneath the desk tossing them there as if they fell in the struggle and ',
     ' the electrical risers as one of the two detonation decives blows a single tidy selfcontained explosion and ',
     ' as the lights flicker and fail and the night shift security guard is suddenly cast into darkness and ',
     ' as they were waiting but only a moment before teddyradio sudden urgent hub we just we lost power the building the whole place just went dark cronin looking at pamela the first whiff of dread as cronin repeat who is dark the target building or your location radio voices piling up panicked confusion cascading as ab ',
     ' anonymous drone barn kirill stepping out of a car hes carrying the duffle ',
     ' kirill heading down the hall ',
     ' kirill enters its a small room gretkov is waiting hes forty professional trim and polished dominant gretkov russian youre early kirill youre complaining gretkov its clean kirill would i bring it gretkov taking over now tosses some money on the bed checks out the photocopy of the files gretkov what are you doing kirill stripping quickly kirill im taking a shower its been a long day gretkov make it fast my plane is waiting gretkov dumping three million dollars over the bed as kirill sheds his clothes and we ',
     ' a workmen cluster as a cable winches the jeep is raised from the river bottom as water pours off of it bourne watching from a distance empty ',
     ' b crime scene police blocking office workers from getting in the building media vans clogging the street pamela and cronin across the street watching the mood is black ashes pamela we need to get in there cronin im working on it pamela stands there silent staring at the disaster across the street a ',
     ' a bourne is bailing exfil procedure but this is a heartbroken exfil a footlocker open bournes main stash bourne going through the footlocker setting aside his work clothes other things he needs but he also has to separate a growing pile of marie memories bank cards phony student ids loose passport photos with a mix of looks and hairdos clothes vacuumpacked bags spare shoes ',
     ' b a gasolinestoked fire burning in a rocklined pit bourne feeding his papers and all of maries belongings into the fire a passport cover crinkles back to reveal her photo her face begins to burn gassoaked clothes tossed in nothing left except the photograph the picture of he and marie at the beach the one from his desk bourne hesitates holds the photo out to the flames the rules of exfil say drop it but he cant wont he reaches to his bag sticks the photo on top of his gear then hefting the bag bourne strides away ',
     ' a folding table covered with xeroxed berlin police paperwork pamela getting a showandtell from cronin and teddy cronin so there were two of these explosive charges placed on the power lines one of them failed the fingerprint pamelas got it thats from the one that didnt go off pamela and the germans cant match it teddy nobodys got it we checked every database we could access nothing cronin show her the other thing teddy this is a kgb file that mustve fallen somehow and then slipped under i guess a desk there or handing it to her pamela do we know what this says teddy yup a scrap of paper the main word there the file heading translates as treadstone pamela what the hell is a treadstone cronin shaking his head nobody knows ',
     ' c bourne bouncing around on an old punjab bus alone in a crush of humanity going only god knows where ',
     ' a pamelas pov as she drives toward the entrance cia headquarters virginia ',
     ' a long bright sterile hallway pamela and cronin walking briskly alongside a uniformed sps officer ',
     ' pamela and cronin watching the sps officer unlock the operation panel coding in they begin to descend and ',
     ' drab and desolate pamela and cronin come around a corner walking with a new escort officer passing a sign that reads operations library center ',
     ' sealed triplelocked numbered door it swings open lights flicker on tons of shit packed away in here shelves bulging boxes tapes binders hard drives pamela steps in a huge filing cabinet labeled treadstone pamelaphone over ward abbott os yes pamelaphone pamela landy a ',
     ' ward abbott at his desk the cluttered clubhouse hq of a man whos spent the last thirtyfive years in the spy game a picture window offers a commanders view of the bullpen abbottphone what can i do for you pam pamelaphone i was hoping you had some time for me abbottphone time for what pamelaphone im free right now actually abbottphone that sounds ominous let me check my schedule abbott holds the phone eyes drifting out the window and abbotts pov the bullpen cronin is standing with daniel zorn one of abbotts trusted s clearly zorn is getting the less polite version of pamelas invitation zorn managing to shoot a quick questioning glance to abbott as ',
     ' a cold room desk two chairs abbott and pamela alone pamela treadstone abbott never heard of it pamela thats not gonna fly abbott with all due respect pam i think you mightve wandered a little past your pay grade she has a piece of paper she slides it forward pamela thats a warrant from director marshall granting me unrestricted access to all personnel and materials associated with treadstone abbott rocked and trying to hide it abbott and what are we looking for pamela i want to know about treadstone abbott to know about it almost amused it was a kill squad black on black closed down two years ago more abbott contd nobody wants to know about treadstone not around here the warrant you better take this back to marty and make sure he knows what youre doing pamela trump card he does ive been down to the archives i have the files ward ',
     ' a a hard working port a big mediterranean ferry coming in naples ferry bourne at the rail unchanged from india staring ahead as europe looms ',
     ' b bourne disembarking to an immigration queue looking unremarkable just one of many passing through ',
     ' as they were abbott watching pamela pull a photo from her file sliding it over conklins face peering back pamela lets talk about conklin abbott what are you after pam you want to fry me you want my desk is that it pamela i want to know what happened abbott what happened jason bourne happened fury focusing youve got the files then lets cut the crap it went wrong conklin had these guys wound so tight they were bound to snap more abbott contd bourne was his number one guy went out to work screwed the op and never came back conklin couldnt fix it couldnt find bourne couldnt adjust it all went sideways finally there were no options left pamela so you had conklin killed silence i mean if were cutting the crap abbott ive given thirty years and two marriages to this agency ive shoveled shit on four continents im due to retire next year and believe me i need my pension but if you think im gonna sit here and let you dangle me with this you can go to hell marshall too flat it had to be done pamela and bourne wheres he now abbott shrugs dead in a ditch drunk in a bar in mogadishu who knows pamela i think i do we had a deal going down in berlin last week during the buy both our field agent and the seller were killed we pulled a fingerprint from a timing charge that didnt go off beat they were killed by jason bourne abbott hesitates blindsided what a courtesy knock at the door cronin appearing in the doorway theyre ready for us upstairs ',
     ' a now at the immigration officer booth bourne hands over an old blue passport it reads jason bourne whats he up to is he giving up immigration officer where you coming from mr bourne bourne tangiers the officer runs the code on the passport through the scanner ',
     ' a tech turns as a computer alarm begins an incessant beeping the screen as jason bournes passport data begins scrolling through a sleeper waking up on the grid then his photo work station as an interpol supervisor leans in over the techs shoulder to see whats up after a beat as the tech begins typing and hits send ',
     ' crewcut turns from his monitor to his own superior as at the same time ',
     ' looking up from his computer the immigration officer gestures bourne to one side immigration officer sir would you be so kind as to step over here please bourne uh sure the immigration officer comes out of his booth as a carabinieri joins him and they escort bourne to a small room at the side of the customs hall immigration officer please wait in here bourne scans the hall as he walks enters room pamelas vo seven years ago twelve million dollars was stolen from a cia account bourne takes a seat carabinieri guards the room ',
     ' same table more faces marshall back in the throne abbott three cia mandarins plus their s and pamela in warsaw this is click a photo of the man killed in berlin fills the projection screen behind her click crime scene photo of dead body click pecos oil logo pamela contd ivan mevedev senior financial manager worked for one of the new russian petroleum companies pecos oil he claimed to know where the money landed we believe this could have only happened with help from someone inside the agency this click conklins photo pamela contd placing it on the table this is conklins computer click a photocopy of a banking contract pamela contd at the time of his death conklin was sitting on a personal account in the amount of sevenhundred and sixty thousand dollars abbott do you know what his budget was pamela excuse me abbott we were throwing money at him throwing it at him and asking him to keep it dark pamela may i finish abbott conklin mightve been a nut but he wasnt a mole you have me his calendar for a couple of days ill prove he killed lincoln appealing to marshall this is supposed to be definitive pamela whats definitive is that i just lost two people in berlin abbott so whats your theory mocking her conklins reaching out from the grave to protect his good name incredulous the man is dead marshall hes heard enough no ones disputing that ward abbott for crissake marty you knew conklin does this scan i mean at all marshall signals for quiet marshall okay cut to the chase pam what are you selling pamela i think that bourne and conklin were in business that bourne is still involved more pamela contd and that whatever information i was going to buy in berlin it was big enough to make bourne come out from wherever hes been hiding to kill again to abbott hows that scan as the mandarins all start talking at once zorn enters stands at the head of the table tries to get their attention zorn hey they look up look youre not gonna believe this but jason bournes passport just came on the grid in naples abbott blinks what ',
     ' nevins american a junior cia field officer walking from the parking lot talking on his cellphone nevins what can i do i cant ill call you when i know what im into a hassled pause i dont know some guys name came up on the computer starting toward the building so start without me if i can get there i will later nevins hangs up and pockets the phone he hustles towards the building ',
     ' the room is jumping agents tracking working the phones and computers pamela giving orders abbott watches cronin looks up from computer screen looks like hes been detained pamela whos going us cronin theres only a consulate they sent a field officer out half an hour ago pamela cuts him off then get a number they need to know who theyre dealing with cronin already on it ',
     ' as nevins flashes his credentials to carabinieri at door who gives an unimpressed shrug and lets him in nevins takes his overcoat off tosses it on the empty chair we see a big ass for just a second under his suit jacket nevins alright mr bourne is that your name bourne nods names nevins im with the us consulate could i see your passport bourne silent hands over his passport nevins contd so mr bourne nevins studies bournes passport nevins contd what are you doing in tangiers silence nevins contd faux friendly are you travelling alone bourne stares straight ahead nevins comes around the table and sits in front of bourne nevins contd in his face look i dont know what youve done but youre gonna need to play ball here nevins cell starts to ring he shrugs an apology turns away and answers nevins contd contd nevins pamelaphone this is pamela landy a ci supervisor calling from langley virginia are you with a jason bourne now nevins listens looks at bourne yes ',
     ' a pamela on the phone pamela then use extreme caution he can be very unpredictable and violent use whatever means necessary to ',
     ' whatever nevins is being told its concerning bourne watching him knows exactly what this is close on nevins as he steps away listening intently his hand just starting to move toward his shoulder holster nevins contd okay ill call you right back nevins flips shut his phone he reaches for his gun even as he turns and bourne is right there in his face whump momentum and gravity reaching mutual agreement as nevins hits the deck carabinieri barely clears his holster before chop chop bourne has him down in a heap bourne is back silent and effective finding nevins cellphone bourne reaches into his bag he holds the phone next to a larger diagnostic mobile unit the confirm light blinks nevins phone has been cloned bourne puts the phone back in nevins coat takes his gun and carabinieris gun and radio and puts them in his duffle were starting to realize theres a plan at work here finally bourne exits the door wedging a desk under the handle so it cannot be opened from the inside and calmly walks away like nothing ever happened ',
     ' and now we see the old bourne in his long black coat purposely striding out of the building he pauses long enough for the security camera to get a good look at him the ronin returns ',
     ' bourne crosses the street and approaches a man putting his suitcase in the trunk of a green peugeot bourne reaches into his bag pulls out some cash ',
     ' nevins stirring the carabinieri still out a phone starts to ring nevins phone finally sitting up he answers nevins hello ',
     ' pamela at the other end of the line pamelaphone mr nevins nevinsphone whos this pamelaphone pamela landy again where do we stand ',
     ' a nevins barely knows where he is ',
     ' bourne sits in the dark car headphones a nest of cool gadgetry on the passenger seat listening in recording he writes pamela landy circles it nevinsphone i think i think he got away pamela looks at the faces waiting around the table shakes her head no pamela have you locked down the area nevinsphone ah were in italy they dont exactly lock down real quick intercut bourne nevins pamela pamelaphone how long have you worked for the agency nevinsphone me four years pamelaphone if you ever want to make it to five youre gonna listen to me real close jason bourne is armed and extremely dangerous a week ago he assassinated two men in berlin one of whom was a highlyexperienced field officer continuing as were totally on bourne at this point sitting there in the dark car struggling to make sense of this what the fuck is she talking about berlin he writes it circles it pamelaphone contd i want that area secured i want any evidence secured and i want it done now is that clear nevinsphone yes sir maam pamelaphone im getting on a plane to berlin in minutes which means you are going to call me back in and when i ask you where we stand i had better be impressed my mobile number is bourne already turning the key in the ignition the peugeot roaring to life as he writes the number dropping the car into gear bourne pulls briskly away from the curb ',
     ' a pamela finishes hangs up abbott berlin pamela ive already got a team there i doubt bournes in naples to settle down and raise a family abbott you dont know what youre getting into here pamela and you do from the moment he left treadstone he has killed and eluded every person that you sent to find him before it can come to blows marshall riot act enough i want both of you on that plane more marshall contd and we are all of us going to do what we were either too lazy or inept to do the last time around youre going to find this sonofabitch and take him down before he destroys any more of this agency beat is that definitive enough for you abbott nods sharing a look with pamela as we ',
     ' aa pamela and cronin come screaming around a corner and down a long corridor abbott and zorn trying to keep up cronin kurts reopening all the wyfi and sat links pamela uplink all relevant files to kim a look back at zorn and i want them to contact anyone who had anything to do with treadstone zorn looks to abbott as they disappear around a corner ',
     ' b the peugeot speeding north north towards germany and ',
     ' bourne driving listening to playback of pamelas conversation with nevins pamelatape jason bourne is armed and extremely dangerous bournes face eyes tight looking weird pamelatape contd contd a week ago he assassinated two men in berlin one a highly a suddenly a flashback a shard pieces lightning flash of images getting in the back seat of the car rolling brandenburg berlin a mirror the television tower the driver looks back we see him well know him later as jarda then a steel case on the backseat inside a syringe a dark vial pistol as we lay hands on them b back to b bourne out of it jolted almost losing control of the car for a second jerking back into his lane recognition toughing it out steady as she goes catching his rhythm again accelerating and ',
     ' a bakery on the corner nicky emerging nicky from the old days suddenly she stops abbott stands there beside a parked car the passenger door open message clear get the fuck in ',
     ' inside a hanger inside an office abbott watching as cronin questions nicky pamela sits on a window sill cronin so your cover at the time was what nicky that i was an american student in paris cronin what exactly did your job with treadstone in paris consist of nicky looks to abbott he nods that its okay to answer pamela bristles at the checkoff nicky i had two responsibilities one was to coordinate logistical operations the other was to monitor the health of the agents to make sure they were up to date with their medications cronin health meaning what nicky their mental health because of what theyd been through they were prone to a variety of problems pamela losing patience what kind of problems nicky depression anger compulsive behaviors they had physical symptoms headaches sensitivity to light pamela amnesia nicky before this before bourne no nicky gets agitated abbott steps in fatherly good cop abbott were you familiar with the training program nicky the details no i mean i was told it was voluntary i dont know if thats true or not but thats what i was told a bit defensive look they took vulnerable subjects okay you mix that with the right pharmacology and some serious behavior modification and i dont know i mean i guess anythings possible zorn arrives from outside zorn the jets ready points to nicky theres a car for you everybody moving nicky relieved shes off the hook she thinks she becomes aware of pamela considering her nicky good luck pamela you were his local contact you were with him the night conklin died youre coming with us ',
     ' streaks across the sky ',
     ' quiet in the cabin abbott gets up to use the bathroom pamela sits across from nicky who stares out the window as the bathroom door clicks shut pamela seizes the privacy pamela im curious about bourne your interpretation of his condition you have specific training in the identification and diagnosis of psychological conditions nicky am i a doctor no but pamela are you an expert in amnesia nicky look what do you want me to say i was there i believed him pamela believed what nicky i believed jason bourne had suffered a severe traumatic breakdown pamela so he fooled you nicky frustration building if you say so pamela leans in still low not good enough youre the person who floated this amnesia story shifts gears ever feel sorry for him for what hed been through nicky youre making it out like were friends here or something i met him alone twice pamela you felt nothing no spark two young people in paris dangerous missions life and death nicky incredulous you mean did i want a date pamela did you nicky these were killers conklin had them all jacked up they were dobermans pamela some women like dobermans nicky what do you want from me i was reassigned im out pamela see thats a problem for me nicky whatever hes doing we need to end it this isnt the kind of mess you walk away from pamela leans away nicky looks back out the window ',
     ' three in the morning as the gulf stream lurches to a stop two black sedans here for the pickup teddy the greeting party as pamela cronin abbott zorn and nicky disembark ',
     ' a the sedans making their way stopping at a nondescript office building ',
     ' b elevator opens into their th floor world emergency activity kim ready to debrief kurt work the computers energy up pamela abbott and cronin bring nicky into the room kim so far bournes had no contact with anyone on the list langley pulled an image out of naples its uploading right now kurt coming in now everything stops as the photo blurry oblique begins materializing on halfadozen monitors around the room suddenly theyre surrounded by bourne pamela to nicky is it him looking closer she nods cronin hes not hiding thats for sure zorn why naples why now pamela has gone quiet just staring at the picture as kurt could be random cronin maybe hes running abbott looks skeptical abbott on his own passport kim the image whats he actually doing cronin whats he doing hes making his first mistake and then from behind them nicky its not a mistake everyone looks over they dont make mistakes and they dont do random theres always an objective always a target beat if hes in naples on his own passport theres a reason pamela turns to abbott a silent moment between them theyre in it now and they know it ',
     ' c the peugeot streaking through the alps passing a sign for the german border moonlit glacial peaks whipping past as club music starts pulsing louder and louder and ',
     ' d bourne driving hard pushing the car through the night mission bourne as the music keeps just building and building taking us into ',
     ' packed and loud skin and smoke a doorman on the move taking us with him through the crowd faces voices all the moscow party people and at the back a vip booth kirill simply shitfaced but in a really creepy numb kind of way three women absolutely gorgeous are sitting around him chatting away as if he werent even there the girls looking up to see the doorman standing there can he walk kirill stirs his stupor a futile attempt to escape eyes still those of an exceptionally hard man a minute later kirill can walk the most graceful drunk youve ever seen making his way through the club tuning out everything but the need to get to the door and ',
     ' yes day its nine am kirill suddenly in the sunlight people going to work kids off to school and gretkov sitting in his mercedes not happy follow car and security and assistant equally unhappy gretkov you told me jason bourne was dead kirill blinking against the sunlight trying to process ',
     ' discreet and chilly a car pulls up a man gets out munich we dont see his face as he heads in ',
     ' the man enters his alarm system beep beep starts once he comes through the door theres a keypad on the wall he enters his code and the beeping stops just like everyday its a sad house he hangs his coat on the rack moving now into the kitchen he drops his briefcase on the table opens the fridge for a drink except what he comes out with is a gun wheeling around the salaryman is jarda jarda from bournes dream but as he turns bourne behind him bigger gun waiting so ready bourne i emptied it jarda a total pro felt a little light bourne drop it jarda lets the gun fall looks his old comrade over a beat but bournes not interested in a reunion bourne contd contd here bourne tosses him flexcuffs jarda puts his hands behind his back turns to let bourne cinch them bourne contd contd front use your teeth jarda caught scamming sorry old habits bourne kicks over a chair sit jarda contd word in the ether was youd lost your memory bourne checking jardas briefcase tearing through it bourne you still shouldve moved jarda i like it here a beat more jarda contd last time i saw you was greece you had a good spot bourne reacts doesnt look over but realizes jarda contd i had the girl i had her lined up that whole afternoon waiting for you that was the problem defensive you ever do two targets its tough bourne turns cold jarda contd his real question so why didnt you kill me then bourne she wouldnt let me beat shes the only reason youre alive silence jarda down a peg or two jarda what do you want bourne conklin jarda hes dead bourne the gun right to jardas face bourne try again jarda shot dead in paris dead the night you walked out bournephone then who runs treadstone jarda nobody they shut it down were the last two its over not finishing because hes falling landing hard bourne just kicked the chair out from under him bourne youre lying if its over why are they after me jarda i dont know bourne who sent you to greece jarda a voice a voice from the states someone new bourne pamela landy jarda i dont know who that is bourne whats going on in berlin jarda i dont know why would i lie silence bourne pulls back unsure jarda makes it to his feet jarda contd what the hell did you do you must have really screwed up bourne doesnt know he backs off jarda contd she really did that told you not to kill me beat i had a woman once but after a while what do you talk about i mean for us the work you cant tell them who you are bourne i did jarda hesitates its really like bourne just told him how much he loved her jarda i thought you were here to kill me something in the way he said it plus jarda just glanced at his watch bourne what did you do jarda shrugs almost embarrassed bourne looks across to the alarm pad jarda hit on the way in voltage like a switch bourne contd contd you called it in jarda im sorry bourne how long how long do i have stopping because the phone just started ringing loud insistent bourne contd contd how long ',
     ' jamming right the fuck into it three guys jarheads dod special force dudes speeding through munich jar is the driver jar is prepping weapons like a maniac in the backseat and jar on the phone its a red flag file so fix it call them back asap jar the call what whatd they do jar bad news she called munich local jar slamming home another clip its probably just a drill anyway ',
     ' phone ringing jarda in cuffs bourne scanning out the windows everything fast bourne car keys jarda my coat but we should bourne what jarda take the back get another car bourne hesitates just a moment wrong slam out of nowhere jarda swings twohands still cuffed like a mace catching bourne hard and bourne stunned jarda smashing the coffee table slices the flexcuffs through on a shard of glass free jarda follows up knee up in the ribs the gun knocked free from bournes hand skittering across the floor bourne as jarda starts to move backhanding him and ',
     ' two munich patrol cars rolling and ',
     ' seen from inside glimpsed through the glass outside its war a flatout closequarter death match jarda older and cuffed but strong and determined bourne still hammered from that opening suckerpunch the two of them braced there grappling falling jarda the cuffs hes got bourne in a chokehold but bourne driving his head back into jardas face and ',
     ' jamming along through munich ',
     ' jarda bourne the gun on the floor struggling for it jarda there first bourne on him pinned there four hands one gun and blamm wild shot into the refrigerator still wrestling breaking jardas nose until the gun knocked away again finally their hands locked into each others throats this is as real and up close as it gets until bourne finally holds dead weight eyes fixed staring bourne jumping back blood all over his shirt bournes first kill in a long time a messy one revulsion ',
     ' jarheads getting close but up ahead another munich patrol car in motion the jarheads react dont need or want the company ',
     ' bourne all business now pulling the stove away from the wall there the gas line hose bourne ripping it free gas running wide open into the room next a fork grabbing it jamming it down into the mechanism on a toaster wedging it there and now hes grabbing papers jardas stuff on the table jamming a roll of sales projections into the toaster beside the fork bourne coughing from the gas turning the toaster on checking his watch taking one last look at jarda dead on the floor and ',
     ' theyre just turning into the street ',
     ' the dod car three dods approaching the house when booooomm jardas kitchen blown out gone ',
     ' bourne same moment flying out the rear as planned urban backyard exfil hes flying and gone ',
     ' fire smoke its all burning now munich cops blown back theyll have a story to tell tonight ',
     ' drives away past arriving police ',
     ' the bullpen is cranking phones to munich lines to langley abbott watching from the sidelines kurt and kim at their work stations pamela on mobile turns to abbott pamela so he beats a man within an inch of his life strangles him then blows the place up at nicky for someone with amnesia he certainly hasnt forgotten how to kill has he across the room cronin and teddy suddenly excited about what theyre seeing on their screen cronin hey theyve got him boxed in new data coming up on the monitor everyone rushing to look excited except zorn forget it they lost him teddy whatre you talking about theyve got a three block perimeter zorn you cant see him hes not in front of you forget it hes gone cronin fuck you buzzkill its not gonna be like last time zorn you better start listening to someone cause weve been there abbott okay enough stepping in take a walk danny get some air zorn nods happy to nicky piping in i dont think we need to keep looking for him anyway pamela and why is that nicky because hes doing just what he said hed do hes coming for us and for the first time theyre all thinking the same thing ',
     ' it is pouring rain seen from that hellish car a huge distinctive needlelike tower dominates the skyline lights flashing through the dark and wet ',
     ' bournes eyes opening heart pounding springing up alone damn his side hurts recoiling from that where is he hes in the car looking around and his windshield pov an autobahn reststop gas station sleeping trucks back to bourne catching his breath shifting away from the pain in his rib checking his watch but what the hell is that on his sleeve fuck its blood jardas blood ',
     ' bourne out of the car fast careless wrong not even checking whos watching pulling off the shirt tearing it off throwing it down and standing there in the weird light a big bruise ripening on his side looking around its okay nobodys watching but shit man get it together ',
     ' a streaking along bourne back to his mission ',
     ' b roaring by a sign berlin km ',
     ' kirill striding through the terminal moving quickly toward a departure gate and gretkov above watching him go ',
     ' bourne drives up ',
     ' quiet and forlorn this early just like bourne whos taking a locker stashing a backpack prepping the evac always ready he heads outside we hear hotel operator vo front desk german berlin hilton how can i help you bournephone vo im trying to reach a guest pamela landy please hotel operator vo im sorry but im not showing that we have a guest by that name continuing as ',
     ' a bourne tucked in with a berlin guide book a felt tip pen and a fiftyeuro phonecard working it bournephone pamela landy please hotel operator sorry i dont see it here crossing out another hotel off the list four down forty to go as we start time cutting and hotel voices vo overlapping no one here by that name no sir theres no landy here how are you spelling that sir sorry but no i have no landy registered sir continuing until ',
     ' b clean and plain a bed nobodys slept in the phone begins ringing pamela fresh from the shower rushing out from the bathroom to answer it pamelaphone hello dial tone pamela hangs up that was strange ',
     ' c a taxi driving through the empty early streets and ',
     ' d bourne in the backseat staring out the window and his pov the fernsehturm looming as they pass the berlin tv tower that needle in the sky from the flashback and then e suddenly e flashback its raining were still moving still in a car still near alexanderplatz but suddenly its pouring outside turning back we realize were not in the cab anymore theres a driver up front and beside him conklin yes conklin hes in the passenger seat turning back to us handing us something a photograph a face some guy conklin neski vladimir neski the photo hes at the hotel brecker get the papers beat say it bourne treadstone bourne alone in the back staring at the photo bourne neski hotel brecker papers conklin this is not a drill soldier were clear on that this is a live project and you are go training is over bourne yes sir conklin good then gimme the damn picture back taking it see you on the other side to the driver pull over hes getting out f back to f bourne sitting in the back seat of the cab frozen there rocked whats happening to him no chance to work it out because the taxis stopped and taxi driver waiting irritated the hotel brecker or the grand make up your mind bourne what taxi driver this is the westin grand you just said brecker bourne fishing for money yeah sorry this is good ',
     ' g concentric rings looking down on each other bourne slipping in unnoticed taking a quick look up before moving along ',
     ' h bourne stepping up to the guy behind the desk the gym mostly empty bourne hi i think i left my backpack here yesterday black nike the guy disappears in back to check bourne leans across the counter scrolling the computer the guest list his finger stabbing down on screen landy pamela bourne clears the screen walks away ',
     ' j because of the setup bourne pretending to talk on a house phone has a view of room across the way the door opens pamela exits carrying an overnight bag bourne watches ',
     ' k elevator doors opening pamela coming out into the lobby heading toward the exit and ',
     ' l a black suburban at the curb cronin standing there waiting as she emerges pamela anything teddy no munichs a bust hes loose pamela are we locked up cronin i told everyone they had an hour eat sleep shave whatever they want but once were back were back for good as they pile in and bourne walking right past them hes got the whole thing scoped heading quickly across the street and ',
     ' m bourne jumps into the first cab in the rank and ',
     ' n the driver starting up the car as bourne that black suv fifty euros if you keep me close the driver smiles and ',
     ' i pt kirill walks down the same hallway gretkov came to meet him last time a guy carrying a briefcase toward him stopping for a moment to light a smoke letting kirill take charge of the briefcase smooth like it never happened ',
     ' the suv rolling up the cab continuing past and stopping at the corner ',
     ' a bourne looking back out the rear window his pov as they pile out of the van start inside acknowledged by a security detail pretending to loiter outside as we hear pamela vo munich to berlin check everything flights trains police reports thatll be box teddy thats yours continuing as ',
     ' i pt kirill opening the briefcase two automatic pistols silencers ammo care package ',
     ' a bulkhead opening bourne stepping out among the satellite dishes unpacks a bag telescope water food and we hear pamela vo box call it prior german connections nicky i want to rerun all bournes treadstone material every footstep kim box lets call it munich outbound continuing as ',
     ' weve been hearing it now were seeing it pamela at the chalkboard abbott backing her up everyone else spread around theyre regrouping urgently behind them cots are being set up food water stacked up pamela lets stay on the local cops we need a vehicle parking ticket something langleys offered to upload any satellite imaging we need so lets find a target to look for to zorn danny box i need fresh eyes review the buy where we lost the three million timeline it with what we know about bournes movements turn it upside down and see how it looks continuing as ',
     ' a decent view into the berlin hq two windows one offers a look at an empty kitchenette the other a nice shot of the bullpen area it looks like they are in for the long haul theres teddy pacing pasta glimpse of zorn conferring with abbottnow kim talking on the phone ',
     ' bourne eyes locked on the target scanning waiting and then something changes suddenly theres something down there thats clearly a great deal more electric than what hes seen so far a telescopic pov a nicky shes just come into the kitchenette pouring herself a cup of coffee nicky who he knows and bourne lowering the telescope yes now hes getting somewhere thinking it through as ',
     ' nicky is joined by pamela who goes for the coffee pamela is it fresh nicky its got caffeine in it thats all i know before pamela can pour her cell phone rings she answers pamela pamela landy bournephone i was at the westin this morning i could have killed you pamela who is this intercut with rooftop bourne its me pamela holy christ bourne nicky reacts to the name runs to the other room to try and start a trace pamela contd contd what do you want bourne i want to come in he wants to come in its like a bomb going off nicky back in with conklin pamela waving for a pencil pamela okay how do you want to do it bourne i want someone i know to take me in pamela who bourne there was a girl in paris part of the program she used to handle the medication and now we stay with pamela her eyes flicker over to nicky pamela what if we cant find her bournephone its easy shes standing right in front of you busted pamela okay jason your move bourne alexanderplatz minutes under the world clock alone give her your phone click the line goes dead pamela steps away from the window realizing hes on one of the roofs out there ',
     ' a as the bulkhead door swings in the wind bourne is gone ',
     ' b everyone gathered a big detailed map of alexanderplatz spread on the table zorn heres the clock shit hes put her in the middle of everything cronin its a nightmare well never get her covered abbott call a mayday into berlin station we need snipers dod whatever they got pamela snipers hold on he said he wants to come in abbott my ass he does youre playing with fire pamela marshall said nail him to the wall i dont know how you interpreted that but i dont think he meant repatriate him pamela dont you want answers abbott there are no answers theres either jason bourne alive or jason bourne dead and i for one would prefer the latter and what about her points to nicky you just send her out to this lunatic with no protection pamela looks to nicky pamela what do you think is he coming in nicky i dont know he was sick he wanted out i believed him pamela alright pamela gestures to abbott cronin teddy pamela contd make the call get a wire on her if it starts to go wrong take him out ',
     ' a the rear of the official berlin cia hq and here they come ten delta dudes in civvies sprinting to a couple vehicles with drivers ready and engines running and bc ',
     ' d nicky her hands overhead as zorn tapes a transmitter and battery between her shoulder blades teddy and cronin plot the area with two men plainclothed delta team kim and kurt on their own lines kim this just in they got the number bournes calls came from nevins phone the field agent in genoa teddy nevins is bourne abbott losing it are you an idiot bourne mustve cloned his phone an embarrassed silence abbott mad at himself for losing his temper looking up to find pamelas eyes on his abbott contd contd i hope you know what youre doing ef ',
     ' g in all its vastness alone theres the world clock nicky waiting on the periphery two plainclothed deltas nearby in quick succession nicky binocular pov sniper scope pov on a video monitor ',
     ' h everyone waiting holding their breath watching nicky standing as ',
     ' j nickys pamelas phone rings she answers as a yellow tram approaches bourne see that tram coming around the corner nicky yes bourne get on it she turns and walks as the tram arrives the delta dudes start moving ',
     ' k the yellow tram arrives nicky enters one of the delta dudes just barely joining her the tram begins moving nicky looks around nervously nothing happens the tram moves about yards across the platz stops at the next stop people get on and off nicky and delta dude relax a bit doors begin to close and just like that bourne swoops in beside nicky flashes a gun bourne walk bourne takes her arm and they just get off as the doors close leaving the delta dude behind they disappear down into the pedestrian subway lm ',
     ' n a madhouse a video feed on a monitor pamela wheres nicky as they realize shes gone abbott goddamn it i told you cronin listen listen he cranks the speaker bournes voice what did i say what did i tell you in paris o ',
     ' p bourne what were my words but she cant speak leave me alone leave me out of it but you couldnt do that could you nicky i didjason i swear i didi told them i told them i believed you bourne who is pamela landy nicky you hear me i believed you bourne is she running treadstone ',
     ' q pamela all ears nickys voice shes ci counterintelligence shes a deputy director bournes voice what the hell is she doing ',
     ' r nicky whats she doing nicky looks at him like hes crazy bourne why is she trying to kill me nicky they know defiant reckless they know you were here they know you killed these two guys they know you and conklin had something on the side they dont know what it is but they know as bourne tries to process ',
     ' s radio chatter going wild panic delta vo into radio where are they anyone ',
     ' t still walking bourne knowing he must be driving them nuts bourne how do they know that how can they know any of that nicky what is this a game bourne i want to hear it from you she looks at him is he crazy what bourne contd contd say it nicky last week an agency field officer went to make a buy from a russian national bourne a russian nicky it was pamela landys op the guy was going to sellout a mole or something i havent been debriefed on exactly what it was bourne last week when is she supposed to answer nicky shrugs on quicksand nicky and you got to him before we could bourne i killed him nicky you left a print there was kel that didnt go off there was a partial print they tracked it back to treadstone they know its you bourne i left a fingerprint you fucking people suddenly bournes jerking her down to a lower level ',
     ' u big static on the speakers delta co cooly checks the map delta co she must be in one of the pedestrian tunnels ',
     ' v as delta dudes fan out head for the subway entrances ',
     ' w an intersection of three tunnels bourne leads nicky far left she looks really scared ',
     ' gretkov has landed just coming off the flight a ',
     ' bourne what was landy buying what kind of files when she doesnt answer instantly what was she buying nicky conklin stuff on conklin trying not to lose it suddenly he rips the microphone out from under her shirt he knew of course dropping it as he yanks her along ',
     ' as the transmission goes dead christ aboott drills a look at pamela your fault pamela ignoring abbott that phone has a locator on it kurt and kim work their stuff ',
     ' gloomy deserted a mausoleum here come nicky and bourne she knows shes on her own now bourne dead serious looks at his watch bourne why are you here then nicky please im only here because of paris because they cant figure out what youre doing im here because of abbott bourne abbott nicky he closed down treadstone he took care of me after paris bourne so when was i here nicky what do you mean bourne for treadstone in berlin you know my file i did a job here when nicky no you never worked berlin bourne my first job nicky your first assignment was geneva bourne thats a lie nicky emphatic you never worked berlin bourne raising the gun eyes gone dead oh shit nicky contd nojasonplease bourne i was here nicky its not in the filei sweari know your fileyour first job was genevai swear to god you never worked here hes so ready to kill her nicky starting to cry hands over her face covering up bracing for the bullet she knows is coming bourne about to pull the trigger suddenly a flashback a moment a shard a womans face a backing away begging begging us begging the camera pleading for her life in russian this awful blur of desperation and panic fear too fast too panicked b jam back to b bourne swamped thrown hesitating close on nicky sobbing now when finally looking out and bourne is gone ',
     ' c an hour later whole new vibe siege mode curtains drawn three delta dudes parked around the room kurt and kim working the phones and screens the mood is dark pamela abbott cronin all in here the safe zone away from the windows cronin on a cell phone got it yeah hang on to the room okay theyve got three guys out front and another two taking the back stairs no word on nicky kurt looks up from screen even if shes still got your phone it might take awhile signals hard to trace down there pamela turns looking at the photo of bourne in naples introspective pamela so whats he doing you believe him abbott its hard to swallow beat the confusion the amnesia but he keeps on killing its more calculated than sick real soft sell what about nicky shes the last one to see bourne in paris shes the one he asks for they disappear pamela well whatever hes doing ive had enough this is now a search and destroy mission turns to the room i want the berlin police fully briefed and handing the photo to cronin get this out to all the agencies abbott agrees ',
     ' a bmw parked in the shadows ',
     ' kirill wearing headphones listening to a berlin police frequency theres an interpol wanted picture of jason bourne there on the seat hes in play ',
     ' d quiet intense activity military radios chirping here and there zorn moving through the bullpen carrying a cup of coffee heading back toward pamelas office where abbott is leaning in the doorway past him inside we can see pamela in the midst of a tough phone conversation cronin and the delta boss sitting there with her zorn the coffee sir abbott thanks abbott nods takes a sip looking beat zorn contd i have that number you wanted abbott hesitates but only a moment he never asked for a number but hes playing along looking satisfied as zorn hands him a slip of paper abbott glancing at it she say what time i should call zorn the sooner the better abbott nods pockets the paper turning back as if it were nothing and ',
     ' e massive modern busy bourne in the back in a corner doing a search hotel brecker scrolling and then stopping freezing because on the monitor a berlin newspaper archive there it is written large in loud tabloid german oil reformer murdered theres a photograph of the berlin police carrying two body bags out of the hotel brecker theres a caption identifying the dead as vladimir and sonya neski theres even a long article accompanying all this but its in german and we dont need to read it anyway because bourne is reading it and were reading in his face that he is rocked that he has found another bottom to the abyss ',
     ' f remember the building where vic was killed were back zorn and abbott making their way in zorn steering them away toward a stairwell at the back ',
     ' zorn and abbott have snuck in here work light signs of repair on the wall zorn nervous i did my box work but i wanted to show you before i showed landy i came out here last night because none of this was making any sense i mean im with you on this conklin was a nut but a traitor i just cant get there abbott what do you have danny zorn the electrical riser you put a fourgam kel on here and its gonna take out power to the building you know that what you cant know is if its gonna blow the room with it abbott and zorn there were two charges they were supposed to go off simultaneously the second one the one that didnt go off was down here pointing it out first of all this is nothing its a sub line for the breaker above second why put the charge all the way down here if youre good enough to get in here and handle the gear youre good enough to know you dont need this beat bourne would know abbott it was staged zorn is it a slam dunk no but abbott jesus zorn spitballing okay what if someone decided to cover their tracks by blaming conklin and bourne what if bourne didnt have anything to do with this abbott keep going zorn somethings been going on here in europe and its still going on post conklin whos been in berlin abbott lots of people zorn including landy jumping off the cliff she had access to the archives zorn hesitates but its out its in the room abbott who else knows about this zorn nobody you hes scared i had to tell you right abbott show me again zorn okay turning away when abbott out of nowhere his hand jamming up into zorns ribcage more than his hand because zorns eyes barely have a moment to register shock before they bulge clenching the younger mans body pulling him close as he turns the knife and zorn is dead abbott without hesitation shifting away from the blood letting the body fall abbott standing there listening checking himself for blood hes clean looking for a place to stash the body as ',
     ' a bourne across the street staring at the hotel haunted as a police siren edges closer through the empty streets aa flashback aa we are a pov a stakeout watching the hotel across the way the pov checks its watch checks the perimeter the street deserted foreboding the hotel our destiny waiting up there somehow and suddenly a light comes on a terrible signal and as the car suddenly lurches forward and around the corner ab back to ab bourne muscling up his backpack heading toward the hotel ',
     ' b and hotel fusty but comfortable and busy guests and staff doing their thing a clerk behind the reception desk clerk guten abend bourne playing it american guten abend clerk switching to english can i help you suddenly ba flashback the lobby but seven years ago ba across the room a man buttoning a raincoat as he passes neski bb jamming back to bb bourne stalled coming back as clerk contd contd sir smiling do you have a reservation bourne no sorry i just got in rallying back i is room available off the clerks look i stayed there before my wife and i the clerk nods checking the register the concierge just down the desk glancing over at bourne nodding hello and clerk im sorry that room is occupied would room be okay its just across the hall bourne sure thats fine danka cd shot ',
     ' a bourne riding up alone dread mounting and ',
     ' the concierge coming out of the office with a sheet of fax paper placing it quietly down beside the clerk and the fax bournes face the same wanted picture and ',
     ' bourne off the elevator he makes his way down his pov the sixth floor hallway suddenly scary ',
     ' a kirill sitting up as the police radio starts broadcoasting an allpoints bulletin the words hotel brecker in there kirill dropping the car into gear and ',
     ' b bourne walking theres his room but across the hall and down one room bourne steps up listening a moment then he knocks nothing he pulls a knife from his pocket checks the hallway hes clear wedges the blade in there and onetwo pop ',
     ' bourne enters a suite closing the door behind him and treadstone bourne seven years ago does the same bourne shakes off the flash looks around the lights are on an open suitcase on the bed ',
     ' the clerk the concierge and the manager are huddled in conversation with three berlin cops whove just arrived and trying to be discreet but this is clearly serious ',
     ' bourne just standing there breathing it in treadstone bourne doing the same ',
     ' bourne with his hand on the wall as if he can feel it like its all still here heart pounding and ',
     ' chaos bournes been found everybody rushing out cronin to teddy go take the van pamela the hotel how far teddy five six minutes cronin kurt youre here keep the comm line open ',
     ' bourne standing there looking out the window the images the television tower over the city everything but the rain ',
     ' the berlin police swat team truck arrives discreetly by the back loading area ',
     ' bourne flat against the wall just as he was leaning forward to see in the mirror just so and there ',
     ' a a man in the mirror pacing into view neski on the phone a talking in russian its raining bourne standing there treadstone bourne still wet from the rain one eye on that mirror and the other on a syringe that he prepped a predator the mirror the doorbell rings neski gets off the phone bourne tensing new element factoring and the mirror as neski opens the door a new flood of russian happy its mrs neski a surprise but hes very happy to see her bourne pocketing the syringe new weapon pistol quiet methodical watching the lovers bill and coo and the mirror mr neski kisses her takes her bag shes hanging up her coat and moving now toward the bathroom and bourne checking the window the weapon his balance and the mirror mrs neskis face right there seeing him so freaked she cant even register it yet bourne with the pistol in her face finger to his lips shhh but she knows backing away begging for her life in russian this awful blur of desperation and fear mr neski turning back to see his wife backing out of the bathroom and bourne with the pistol with no hesitation snap one shot into neskis heart hes down mrs neski whats just happened bourne has her wrist in his hand raising it to her head to where he holds the pistol her fingers his trigger snap letting the gun fall with her as she drops and bourne starts to move starts to prep his evac but theres something on the dresser a photograph the neski family father mother and a twelveyearold girl arms around each other happy and bourne staring at the picture undone for a moment hard out flashback to ',
     ' bourne our bourne standing where they fell frozen there paralyzed by the shame of original sin pt ',
     ' a swat captain conferring discreetly with the manager manager hes in swat captain call all the guests on the th floor tell them to remain in their rooms tell them its a police order then start on the th and th floors ',
     ' a bourne trying to stabilize to breathe ',
     ' the swat team on their way up ',
     ' a ring ring bourne snaps back as the phone in his room starts to ring four times and it stops bourne freezes footsteps shadows under the door he leans into the peephole bournes pov room german swat team taking position ',
     ' b bourne backs away surveys the room his watch his balance and ',
     ' c quickly turning into a major event halfadozen police vehicles already parked here more arriving every minute passersby mixing with the cops and people from the hotel whove just come out and kirill jogging over from the bmw hes just parked and ',
     ' wham the door kicked off its hinges swat team flooding into bournes empty hotel room and ',
     ' a bourne in motion out the bathroom window and ',
     ' berlin swat leader gives order to search other rooms and ',
     ' bourne up the water pipe to the roof as he arrives a swat team member turns bourne pulls him over the edge fires point blank into the nd swat members vest stunning him hes moving fast scrambling along the roof and into the night ',
     ' wham the door caves in and the swat team moves enters rushing to the window nobody no sign of him and ',
     ' kirill heading for the hotel entrance blocked by the exiting guests ',
     ' too many cops and radios swat team boss trying to take charge listen up were clearing the building room by room ',
     ' pamela jumping out of a van the moment it stops seeing it all the crowd the army of cops the searchlights playing across the hotel facade its another disaster ',
     ' kirill wants to get upstairs he cant too many guests coming down the stairwell berlin cops trying keep it moving and ',
     ' kirill hears bourne is on the roof ',
     ' pamela and cronin listening to teddy who just got the police update teddy black coat possibly leather dark slacks dark tshirt pointing now he says theyre gonna try and corral the guests on the street over there and then check them out but pamela disgusted yeah thatll workwhat the hell was he doing here cronin maybe he just needed a place to spend the night pamela i want to look at the room to teddy as she goes check it out pamelas in charge now they enter the elevator ',
     ' bourne coming around the other side of the hotel stepping to the left before he spots the swat van bourne aboutfaces heads the other way a sidewalk cop looks over checks the bourne photo print out in his hand ',
     ' teddy huddled with the hotel manager and a group of high ranking berlin cops turning back as abbott arriving breathless they missed him teddy so far but they found nicky shes back at the westin bourne let her go abbott he let her go great wheres danny he should head over there and debrief her the hotel whats here what was he doing teddy we dont know theyre in a room upstairs i was told to wait down here abbott accepting that because he has to only we see the fear turns to leave abbott ok if you see danny tell him i went back to the hotel abbott steps out into the street as ',
     ' bourne striding away and following sidewalk cop blowing a whistle fumbling for his holster bourne running now slowly at first and ',
     ' a now faster as if he can gauge his speed and distance ',
     ' motion bourne tearing away and ',
     ' a bourne slows to a walk two patrol cars heading his way no choice there a narrow passageway between two moving trolley trains and sprinting through the patrol cars skidding into s ',
     ' b the river spree lit by the trolley thats rumbling past and the running lights of a double coal barge up the river bourne runs across the bridge going as fast as he can hearing the police sirens swirling behind him when a third and fourth police car ahead bourne turns hard for a stairwell jumps the walkway curb leaps up the stairs two at a time as all four cop cars skid to a stop as doors open ',
     ' a tram waiting as the last few passengers get on the doors seem to stay open in slow motion as bourne appears makes a mad last dash and hes on and the doors dont close its not scheduled to go yet and here come the cops bourne off the tram guns appear bourne runs to his left stops short the other cops are coming this way screaming at him not a lot of options bourne looks over the rail down below a coal barge passing the prow just emerging bourne on the rail and jumping even as the first shot is fired ',
     ' bourne lands hard stands voltage going up one leg and theyre shooting at him he can worry about the leg later he runs back toward them the barge moving slow bourne disappears under the bridge ',
     ' guns aimed police waiting for a clear shot two of them dash to watch over the other side ',
     ' countering the barge going one way bourne the other dodging all the superstructure on deck all the while keeping his cover overhead and leaping to the second barge and more of the same until bourne running out of barge leaping back onto the bridge footing and ',
     ' the police watching the barge fully emerge continuing down river shouting in german that hes either in the water or hiding on the barge off they go down the stairs leaving the passengers on the tram blinking out in shock and bourne climbing back over the rail limping back on the tram just before the doors close and off it goes ',
     ' police converge from both ends barge goes under as kirill arrives at the center of the bridge missed again behind kirill a train snakes off into the night ',
     ' pt pamela and cronin move into the living room a couple of cops in the hallway outside cronin the room he checked into was across the hall why why would he come here pamela glances around something bothering her about this space pamela he mustve had a reason thats how they were trained cronin moves around the bedroom then into the bathroom and cronin he went out the window in here ',
     ' pt there on the mirror scrawled in soap on the glass i killed neski cronin pam you need to see this pamela moves in behind him cronin contd whos neski both of them staring pamela thinking alrighttake it down cronin what pamela this stays between you and i sensing confusion we finally have an edge i dont want to lose it ',
     ' very late abbott waits on an isolated bridge a lone figure in the shadow of east berlin gretkov arrives by car walks through the darkness abbott barely glancing over abbott you told me bourne was dead gretkov there was a mistake abbott ill say you killed his goddam girlfriend instead now theyre onto neski theyre at the brecker hotel even as we speak gretkov will it track back to us abbott no the files are spotless whatever they find its just going to make conklin look worse gretkov and the landy woman abbott shes done everything i wanted she bit on conklin so fast it was laughable she even found his bogus swiss account gretkov anything else abbott shoves a piece of paper and address into gretkovs hand abbott the paper theres a body in the basement danny zorn hes got to disappear for good clean and fast ill put him in bed with conklin and bourne even the girl nicky give me twentyfour hours ill think it up but get the goddamn body out of there its getting late a taxi now and then abbott contd neski was a roadblock without me theres no company no fortune you owe me uri one last push gretkov one last push one gretkov leaves abbott watches him go ',
     ' seconds later gretkov getting in slowly ',
     ' kirill slouched in back waiting gretkov to the driver gretkov airport to kirill were done here kirill nods as they pull away abbott turns and walks into the foggy night ',
     ' a late abbott walks a lonely figure past someone in the shadows bourne mr abbott he turns to answer when bourne firmly guides him into a side street bourneabbott scene ',
     ' as pamela and cronin exit the elevator they are met by teddy teddy heres what ive got reads remember vladimir neski russian politician seven years ago he was due to speak to a group of european oil ministers here at the hotel he never did he was murdered pamela by who teddy his wife in room then she shot herself pamela and cronin share a look pamela to teddy alrighti want you kurt and kim to stay on bourne track everything thats out there teddy goes to get in the van pamela follows with cronin pamela contd confidentially to cronin and i want you to go through and cross reference our buy that went bad the neskis and treadstone as they get in pamela contd they have to be related ',
     ' bournes arrived limping as he continues for the station ',
     ' bourne retrieving the exfil bag he stashed in the locker changed his clothes ',
     ' bag slung limping out bourne has changed clothes a big overcoat knit cap ',
     ' a busy midnight departure big train bourne climbing on the train under the sign moscow express moved ',
     ' a a blueprint spread across a table nicky kurt kim all gathered around cronin works the treadstone files on another table teddy at center briefing pamela teddy were looking at all berlin outbound good news is every train station in berlin has thirty to forty fixed digital security cameras common feed pamela are we hacking or asking teddy yes in that order pamela and what about you anything cronin its starting to link up the hijacked money the leak pecos oil one last bit is treadstone ',
     ' crossing the border into poland cold desolate snow ',
     ' conductors moving quietly through the dark cars checking tickets and visas and bourne hands over his ticket and russian passport off the grid ',
     ' a am kurt kim and teddy spread around the room theyve been running laptop train station videos for hours just about ready to raise the white flag all they have so far is an isolated loop of bourne limping into the mens room cronin watches it stutter along cronin does it look like hes faking teddy on the way in forget it kurt the legs definitely hurt cronin the blueprint well theres no window in the mens room folks so lets find somebody coming out with a bad left leg kurt worn out maybe hes still in there teddy ive got a limping guy but its the right leg kim walking away or walking toward you cronin jumping on that right there over teddys shoulder cronin thats him its the coat what train is that ',
     ' bourne asleep in his chair rocked by the rhythm but something wakes him up looks out the window something weird about the light out there then up to see marie looking at him over the back of his chair in front of him no big deal bourne hey she smiles a beat she comes around sits beside him he looks away out the window bourne contd i wanted to kill him marie but you found another choice bourne i did marie it wouldnt have changed the way you feel bourne it might have bourne looks back at her she smiles he accepts it leans back closes his eyes bourne contd i know its a dream marie you do bourne i only dream about people who are dead marie leans over kisses his forehead whispers bourne contd god i miss you i dont know what to do without you marie softly serenely jason you know exactly what to do that is your mission now bourne opens his eyes and its morning outside and marie is gone a little girl smiles at him from over the back of the chair in front bourne cant meet her gaze for long as he looks back out the window ',
     ' bourne watching the birch trees rush past not quite hiding the smokestacks beyond eyes locked forging something within one final mission as we ',
     ' abbott coming through its empty this early but heres pamela nicky cronin and the team waiting to report pamela sorry to wake you abbott waves off apology i wasnt sleeping to nicky as he passes you ok nicky yeah thanks abbott whats up pamela bunch of stuff pamela looks to cronin him first cronin we tied the room bourne visited tonight to a murdersuicide seven years ago a russian couple the neskis abbott playing along neski the reformer i remember that cronin he championed the equal distribution of oil leases in the caspian sea when he died they were all released to one petroleum company pecos oil guess what the ceo uri gretkov is ex kgb nicky someone was using treadstone as a private cleaning service abbott conklin a beat its im sorry pamela i guess you were right all along pamela waves him off its okay but pamela theres something else abbott can see by their faces this hits closer to home abbott what pamela they found danny zorns body dead in the basement at the building where my people got hit the first time abbott oh god it must have been bourne pamela did he say anything to you abbott no it must have been bourne pamela straight pamela well know for sure when we get the security tapes cronin but we can relax we tracked him hes on a train to moscow abbott reeling hiding it abbott moscow what the hells he going to moscow for pamela shrugs dont know abbott jesus i zorn i have to call his family tell them pamela im sorry ward they watch as he goes ',
     ' abbott in the rising elevator imploding ',
     ' palatial but you cant buy taste gretkov working his computer answers his phone gretkov da abbottphone you didnt stay uri gretkov matter of fact this is not a clean phone ',
     ' everyone still here cronin answering his cell phone motioning to them hes got news cronin phone to his ear youre sure pamela what the tapes cronin nodding but hold on holding the phone yep and abbott just direct dialed moscow from his room now we realize shes set a trap and abbotts walked in all the same pamela shakes her head wishes it wasnt true and theyre moving ',
     ' abbott at his desk still on the phone pouring a vodka gretkov leaving was a business decision were both rich come enjoy it abbott what do you mean gretkov go to the airport get a plane ill have a brass band waiting for you abbott save it for bourne gretkov what theres a knocking at his door abbott simply ignores it abbott he left yesterday on the night train hes probably just getting in now he drinks youll have to hurry gretkov bourne comes here why more knocking abbott good luck ',
     ' a speeding east through the russian countryside the forest is gone replaced by factories and refineries a wasteland of rust and gray that seems to go on forever ',
     ' pamela knocking again nicky teddy and cronin behind her pamela open it cronin with a pass key teddy prepped and ',
     ' a pamela leading they enter stop short abbott at his desk calmly pointing a pistol at pamela abbott they go you stay she looks back cronin shakes his head no pamela yes now they reluctantly obey the door clicking shut behind them abbott sit down pamela id rather stand if its all the same to you abbott i dont exactly know what to say im sorry pamela why would be enough for me abbott im not a traitor ive served my country pamela and pocketed a fair amount of change while doing it abbott why not it was just money pamela and danny zorn what was that abbott had to be done pamela no good options left abbott shrugs in the end honestly its hubris simple hubris you reach a point in this game when the only satisfaction left is to see how clever you are pamela no you lost your way abbott well youre probably right i guess thats all that hubris is he raises the gun pamela presses her lips together closes her eyes boom she opens them and as cronin flies back through the door theres abbott dead at the desk hes shot himself also in a way with some help from bourne ',
     ' the train easing to a stop the platform busy with people waiting and passengers disembarking bourne among them unremarkable in the crowd and ',
     ' bourne on the move welcome to the whole mad moscow scene a jumble of faces and voices travellers arrivals and departures families beggars drunk war vets hawkers ',
     ' there in the plaza bourne hobbling across the street when suddenly a car horn he turns and look out a big black bmw speeding past followed by two more all three cars with blue lights strobing on the dashboards a convoy whipping by like they own the place and taxi driver os gangster bastards dont care what they do bourne turns a grizzled taxi driver right beside him bourne pulls a slip of paper from his pocket bourne his russian is basic you know this address the taxi driver squints finally grunts affirmative he motions to his cab as they get in and pull away ',
     ' lots of cars no people but someone running its kirill pulling his keys as he sprints past and ',
     ' bourne and the taxi driver looking over as three moscow police cars speed by sirens wailing taxi driver its always something right bourne just nods as we ',
     ' kirill at the wheel a guy in a hurry who knows what hes doing one more thing on the passenger seat two big automatic pistols ',
     ' moscow cops fanning through the crowd showing bournes interpol picture have you seen him ',
     ' moscow cops with the picture flashing it around until young cabby the moment he sees it he was just here they just left ',
     ' theyve stopped bourne flashes a fifty dollar bill bourne you wait you understand stay taxi driver happy to pocket the cash sure no problem i sit ',
     ' old moscow but not for long theres new construction metastasizing all around it bourne crosses the street and his pov an abandoned wooden house windows shattered and boarded up paint all but gone roof and gables all failing back to bourne crestfallen checking the address this is it ',
     ' more cops everything focused on another taxi driver whos making a call on a cell phone everybody waiting on it ',
     ' bourne off the sidewalk now peering around the side trying to see if theres anything around back and over there an old woman on the steps next door watching him bourne starts over finding the sweetest smile hes got ',
     ' the taxi driver still parked there his pov bourne and the old lady shes pointing like shes giving directions when suddenly the drivers cell phone rings taxi driverphone hello ',
     ' bourne and the old lady his russian is limited but shes charmed nonetheless bourne a pento writeone minute searching his pockets ',
     ' the taxi driver on the phone not so happy anymore taxi driver im looking at him american hes right here ',
     ' the old lady scribbling on a piece of paper bourne reacting as the taxi drops into gear pulls away bourne wait hey but the taxi only speeds up and ',
     ' moscow police cars tearing away and ',
     ' kirill driving reaching for his ringing phone and ',
     ' the black bmw a moment later slamming on the brakes fishtailing a uturn and ',
     ' bourne hustling past all the new construction glancing back as police sirens start rising behind him and ',
     ' kirill skidding around another corner and ',
     ' two police cars just stopped there cops the old lady pointing everyone turning as the red lexus speeds past them and ',
     ' bourne coming down as fast as he can just ahead theres a footpath beneath a four lane overpass a neighborhood on the other side he could disappear there ',
     ' kirill driving and scanning there as he passes it the overpass slamming on the brakes and ',
     ' bourne hobbling out in the open twenty yards to go ',
     ' kirill jumping out of the lexus with a pistol in hand and ',
     ' bourne no clue bang his shoulder hes hit he throws himself forward and ',
     ' kirill shifting for a better second shot and ',
     ' bourne hes diving rolling pure instinct back under the embankment and ',
     ' kirill with no shot suddenly leaning over the rail just as the two moscow police cars come screaming up moscow cops jumping out with guns drawn and ',
     ' bourne hes up hes bleeding hes moving and ',
     ' chaos kirill with his hands in the air moscow cops coming toward him everyone screaming moscow cops mockbourne up hands up keep im kgb assholes them up drop the gun were chasing the same guy drop it hes getting away they let kirill go he looks back at the footpath bourne is gone as ',
     ' a gretkov strolls along suddenly two black sedans pull up and he is arrested ',
     ' a bourne hurriedly makes his way to the other end a few beats later kirill on the hunt ',
     ' a labyrinth of stalls food hardware clothes and crowded even this hardtoimpress crowd noticing bourne hobbling through nothing like a limping madman with a fresh gunshot wound to get attention people back off pull their kids out of the way some woman starts screaming and ',
     ' a security guard hears the commotion jogs out and ',
     ' kirill running toward the market five moscow cops behind him cant keep up and ',
     ' the security guard coming up fast behind bourne security guard hey hey you stop bourne turns the security guard right behind him and bourne no warning his good arm smash right into the security guards face and bourne takes his pistol and the crowd they jump holy shit ',
     ' crazy kirill sprinting through where did bourne go ',
     ' bourne back on the march except now hes shopping grabbing a bundle of tube socks and ',
     ' kirill sprinting out toward the stalls and ',
     ' bourne there a roll of duct tape and a bottle of vodka and ',
     ' kirill fighting his way through the fleeing crowd ',
     ' pt bourne leaving the market taking a swig of vodka and continues knows there are two new cops on his ass ',
     ' pt another cab stand cabbie by a yellow cab looks up to see bourne coming toward him and also the two cops as bourne nears the cabbie shakes his head bourne pivots casually like he doesnt know theyre coming until he spits vodka into one of the cops face blinded as bourne takes him and his partner out the cabbie raises his hands in surrender steps aside as bourne takes his car ',
     ' pt bourne in the yellow cab starting the engine peeling away careening into the street and kirill sprinting into the parking lot just in time to see ',
     ' pt bourne concentrating away the pain trying to drive ',
     ' two ladies ducked behind a big black gwagon freaked out as kirill grabs their keys and ',
     ' the cab speeding across a boulevard into an older neighborhood of rising narrow streets and two moscow police cars pulling uturns on the boulevard whipping around to give chase and the gwagon in full pursuit now and bourne driving up this curving little hill and the two moscow police cars starting to climb and kirill driving and hes on the hill now bourne bad hand on the wheel holding on trying to find something in passenger seat tube socks the two moscow police cars splitting up one on bournes ass the other cutting hard into a side street flanking him and bourne topping the hill two choices right or left right no wrong because down the hill theres a police car just about to angle in from the sidestreet and bourne no choice flooring it the cab its a whale slam knifing the front end of the police car and the police car spun back crashing against a building on the corner and kirill right behind that guy swerving onto the sidewalk sparks from the wall as he scrapes hanging in skidding into a turn down the hill and just missing the first police car bombing right past him bourne in pain as he packs his shoulder wound with the socks ahead the street banks downhill to left and there a boulevard wide ride lots of traffic and the cab rocketing into the flow and behind him police car with the gwagon right on his ass and bourne wrists flicking the wheel the cab screaming through the slower traffic and kirill totally on it pedal down passenger window open wind blowing hes got the pistol in his hand closing the gap and the black gwagon blowing past police car and bourne steering barely as he tears a few strips of duct tape to finish his triage blam blam the gwagon right beside him bourne reacting what the fuck thats not a cop but no time to clock kirill because kirill shit cant keep shooting into the oncoming lanes swinging wide a truck swerving again and the cab wavering again rallying and up ahead the boulevard opens into the river beltway big wide fast kremlin in the bg and four new police cars screaming down from red square and bourne skidding onto the beltway looking for room finding it open road kirill back in the hunt and the river beltway cab screaming past then one two three four police cars now the black gwagon and bourne both hands on the wheel hes already forgotten about his shoulder the beltway up ahead another choice right takes you up to the city left is a transit tunnel and bourne checking his rearview starting right and the two lead police cars right on his ass and bourne fake out veering left last second into the tunnel and the two lead police cars wrong and worse trying to change crash spinning and its not just them a third police car caught in the clutter not to mention the commuters crash the police are out of the race kirill not fooled threading the needle through the carnage and into ',
     ' four lanes two way and long theres the cab squibbing past slower cars and kirill on him move for move follow the leader and bourne checks the rearview hes lost them all but the gwagon who the hell is that the heavyweights world championship belt up for grabs kirill gaining nearly pulling level bourne nowhere to go thats never stopped him before he carves a path turns two lanes into three as sparks his way through a lane split the gwagon roaring after him bourne checks the mirror closer who the hell is that guy kirill gaining firing through his passenger window bourne brakes tunnel as the two vehicles scrape along each other kirill firing back odd angle bourne ducking for meager cover as bullets stitch through the roof tunnel the gwagon crushes the cab against the wall sparks showering the windshield finally the cab shoots ahead kirill in a controlled fury the suv jerking hard and right into the rear of the cab bourne trying to keep control spots a maintenance truck up ahead kirill banging away as his quarry straightens maintenance truck looming bourne a hard left tunnel the cab wrapping around the front of the suv wham pushing it to the right the cab continues spinning around the gwagon details front bumpers locking on rear fenders as tunnel the gwagon hurtling forward the cab ass end first locked together kirill firing into the cab really unloading now bourne down on the floor a tornado overhead kirill slaps in a new clip intense bourne gun against his door just below the window knob whumpwhumpwhump suv tire shredding kirill fights the wheel another truck looming large bourne looking between the seats out the rear window a lane dividing pillar ahead cab as bourne sits up jerks the wheel to the right tunnel the cars unlock spin away from each other kirill focused taking deadly aim bourne staring back at him calm i know something you dont know kirill frowns the truck swerves to reveal the pillar to kirills pov kirill eyes go wide whallop steel vs concrete concrete victorious a bone compressing truly horrendous impact bourne whipping the wheel cab spinning to a stop out of harms way door opening ',
     ' gun ready bourne heads over ahead spam in a can bourne crouches down looks in kirill bloody beattocrap barely alive but trapped entombed alive by the metal crushed around him bourne watches not here to help kirill looks over calms a moment as the two men consider each other bourne looks at him long and hard kirill dies and bourne stands and just walks away ',
     ' a snow swirls pamela disembarks from the g or us military plane she is met by russian officials ',
     ' huge awful sovietera housing towers fill the horizon a city bus grinds to a stop people trundle off working people at the end of their day tired cold a girl trudging a manmade wasteland twenty a proud little waif sad eyes home from some job irena ',
     ' grimmer up close rusted steel mesh over the windows drunk teenagers a haze of cigarette smoke irena pushing through doesnt want to talk to anyone ',
     ' irena climbing a junkie here flickering light there ',
     ' irena her key at the door domestic disturbance playing across the hall she opens up and ',
     ' its dark and shes barely through the door when irena jumps chokes back a cry bourne is standing there propped there actually behind her gun in hand motioning for her to be quiet bourne his shabby russian quiet silence okay irena nods scared gun in hand bourne pushes the door the last few inches so its fully closed irena i have no money no drugs is that what you want and now she can really see him hes a disaster shivering bloody eyes more hollow than hers are bourne sit can you trying to conjure the russian the chair have the chair irena accented i speak english bourne staring at her nods gestures for her to sit bourne please so she does and here they are bourne contd contd of all the people in the world youre the only one i have anything to offer hesitating thats why i came here irena shes terrified okay hes got something beside him something hes taken off the wall its the photograph the neski family same as the one that was in the hotel brecker mom dad and irena arms around each other in front of the house before it was abandoned happy smiling perfect bourne its nice a beat does this picture mean anything to you no answer hmm irena its nothing its just a picture bourne no its because you dont know how they died irena he couldnt understand no i do a change in bourne as he studies her measures her some moment of truth is here irena braces unsure bourne i would want to know beat i would want to know that my mother didnt kill my father i would want to know that she didnt kill herself irena what she really looks at him now fear overwhelmed by curiosity bourne i would grow up thinking that they didnt love me if they just left me like that irena making sure her eyes dont leave his they dont bourne contd contd it changes things that knowledge doesnt it irena wary yes bourne thats not what happened to your parents irena then what bourne i killed them body blows but he has her attention she wipes a tear bourne contd it was my job my first time your father was supposed to be alone but then your mother she came out of nowhere a little shrug i had to change my plan beat you understand me does she you dont have to live like that anymore thinking that irena you killed them bourne nods thats right bourne they loved you beat and i killed them irena howhow canhow can you be here and say this bourne i dont want you to forgive me she stands suddenly stands because if she doesnt shell burst into tears because she knows if she starts crying she wont be able to make sense of this irena for who he doesnt answer killed for who bourne pushes himself to his feet a real effort bourne it doesnt matter your life is hard enough irena youre a liar bourne you know im not irena youre a liar bourne look at me there they are two people standing in a room squared off and now she starts crying really crying and hes taking it irena i should kill youif its true you should diei should kill you now bourne i cant let you do that either irena because youre afraid bourne no starting for the door because you dont want to know how it feels she hesitates stunned hes leaving hes opening the door bourne contd i have to go now irena is this really happening bourne empty im sorry and she sags back into the chair as the photograph on the table the sound of the door closing and irena crying as ',
     ' bourne trudging along across the snow hes done it and he really cant take another step theres a bench he sits down out of gas he just might die here we slowly tilt up to the multi colored moscow tenements fade out ',
     ' bourne waking up sitting up where is he trying to get his bearings but its so bright white walls sheets sunshine through clean windows and pamela os hello david there she is standing at the foot of his bed bourne where am i pamela ramstein air base germany smiles before the wall fell you would have woken up in a russian prison hospital he looks around tries to move hammered by pain bourne oh shit pamela careful long moment hes taking it in trying to bourne why am i alive pamela are you disappointed they study each other a beat bourne i know who you are pamela nods very calm here no sudden movements pamela thank you for your gift im sorry about marie bourne whats that pamela do you think you can read are you well enough she has a folder a photograph bournes face stapled to the cover pamela contd its all in here treadstone a summary of your life all of it he waves it off bourne dont need it i remember everything pamela smiles again sounds like a threat bourne you didnt answer my question pamela why youre alive beat youre alive because youre special because she kept you alive she smiles because we want you back on our side bourne silent but hearing it pamela leaves the file pamela contd contd take a look at it well talk later bourne watching her back away as she exits into ',
     ' long sterile hallway cronin and nicky standing there with an air force sentry assigned to guard the room cronin and nicky trying to play it cool but now as they get some distance down the hallway pamela to the sentry lets give him half an hour nicky quietly so pamela felt promising its a start a chill in the air both of them going quiet because theres a nurse carrying a tray of food shes coming toward us theyre walking away staying with the nurse now coming up the hall the sentry smiles opens the door and she enters ',
     ' empty bed open window bourne is gone as the music starts pumping and we ',
     ' off he goes disappearing into thin air fade out the end ']
</pre>
</div>
<br>
<h4 id="2-bow-bag-of-words-벡터-생성"><a class="markdownIt-Anchor" href="#2-bow-bag-of-words-벡터-생성"></a> (2) BoW (Bag of Words) 벡터 생성</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter stop words</span></span><br><span class="line">vect = CountVectorizer(tokenizer=<span class="literal">None</span>, stop_words=<span class="string">'english'</span>, analyzer=<span class="string">'word'</span>).fit(corpus)</span><br><span class="line"><span class="comment"># tokenize: 문장을 단어로 나누는 기준; stop_words: 불용어 설정</span></span><br><span class="line"></span><br><span class="line">bow_vect = vect.fit_transform(corpus) <span class="comment"># BoW 벡터 생성</span></span><br><span class="line">word_list = vect.get_feature_names()</span><br><span class="line">count_list = bow_vect.toarray().sum(axis=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 등장한 단어 list</span></span><br><span class="line"></span><br><span class="line">word_list</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    ['aa',
     'ab',
     'abandoned',
     'abandons',
     'abbott',
     'abbottnow',
     'abbottphone',
     'abbotts',
     'abend',
     'able',
     'aboott',
     'aboutfaces',
     'absolutely',
     'abyss',
     'accelerating',
     'accented',
     'accepting',
     'accepts',
     'access',
     'accompanying',
     'accomplished',
     'account',
     'acknowledged',
     'act',
     'activity',
     'actually',
     'address',
     'adjust',
     'adrenaline',
     'affirmative',
     'afford',
     'afraid',
     'afternoon',
     'againi',
     'agencies',
     'agency',
     'agent',
     'agents',
     'agitated',
     'ago',
     'agreement',
     'agrees',
     'ah',
     'ahead',
     'aim',
     'aimed',
     'air',
     'airport',
     'alarm',
     'alert',
     'alexanderplatz',
     'alive',
     'alley',
     'alleys',
     'allocation',
     'allpoints',
     'alongside',
     'alps',
     'alright',
     'alrighti',
     'alrighttake',
     'american',
     'ammo',
     'amnesia',
     'amused',
     'anger',
     'angle',
     'ankle',
     'anonymous',
     'answer',
     'answering',
     'answers',
     'anymore',
     'anythings',
     'apology',
     'appealing',
     'appear',
     'appearing',
     'appears',
     'approached',
     'approaches',
     'approaching',
     'archive',
     'archives',
     'area',
     'arm',
     'armed',
     'arms',
     'army',
     'arrested',
     'arrivals',
     'arrived',
     'arrives',
     'arriving',
     'article',
     'asap',
     'ashes',
     'aside',
     'ask',
     'asked',
     'asking',
     'asks',
     'asleep',
     'ass',
     'assassinated',
     'assholes',
     'assigned',
     'assignment',
     'assistant',
     'associated',
     'attempt',
     'attention',
     'autobahn',
     'automatic',
     'available',
     'aware',
     'away',
     'awful',
     'awhile',
     'ba',
     'backhanding',
     'backing',
     'backpack',
     'backpacks',
     'backs',
     'backseat',
     'backyard',
     'bad',
     'bag',
     'bags',
     'bail',
     'bailing',
     'bakery',
     'balance',
     'ball',
     'balling',
     'band',
     'bang',
     'banging',
     'bank',
     'banking',
     'banks',
     'bar',
     'barely',
     'bargain',
     'barge',
     'barn',
     'base',
     'basement',
     'basic',
     'basically',
     'bastards',
     'bathroom',
     'battery',
     'bb',
     'bc',
     'beach',
     'bearing',
     'bearings',
     'beat',
     'beats',
     'beattocrap',
     'bed',
     'bedroom',
     'beep',
     'beeping',
     'beggars',
     'begging',
     'begin',
     'begins',
     'behavior',
     'behaviors',
     'believe',
     'believed',
     'belongings',
     'belt',
     'beltway',
     'bench',
     'bends',
     'beneath',
     'berlin',
     'better',
     'bg',
     'big',
     'bigger',
     'binders',
     'binocular',
     'birch',
     'bit',
     'bits',
     'black',
     'blade',
     'blades',
     'blam',
     'blaming',
     'blamm',
     'blank',
     'bleeding',
     'blending',
     'blinded',
     'blindsided',
     'blinking',
     'blinks',
     'block',
     'blocked',
     'blocking',
     'blocks',
     'blonde',
     'blood',
     'bloody',
     'blow',
     'blowing',
     'blown',
     'blows',
     'blue',
     'blueprint',
     'blur',
     'blurry',
     'bmw',
     'board',
     'boarded',
     'body',
     'bogus',
     'bomb',
     'bombing',
     'bone',
     'book',
     'boom',
     'booooomm',
     'booth',
     'border',
     'boss',
     'bothering',
     'bottle',
     'boulevard',
     'bouncing',
     'bound',
     'bourne',
     'bourneabbott',
     'bournephone',
     'bournes',
     'box',
     'boxed',
     'boxes',
     'braced',
     'braces',
     'bracing',
     'brakes',
     'brandenburg',
     'brass',
     'breakdown',
     'breaker',
     'breaking',
     'breaks',
     'breath',
     'breathe',
     'breathing',
     'breathless',
     'brecker',
     'bridge',
     'briefcase',
     'briefed',
     'briefing',
     'bright',
     'bring',
     'briskly',
     'bristles',
     'broadcoasting',
     'bruise',
     'budget',
     'building',
     'bulge',
     'bulging',
     'bulkhead',
     'bullet',
     'bulletin',
     'bullets',
     'bullpen',
     'bumpers',
     'bunch',
     'bundle',
     'burly',
     'burn',
     'burning',
     'burst',
     'bus',
     'business',
     'bust',
     'busted',
     'busy',
     'button',
     'buttoning',
     'buy',
     'buying',
     'buzzkill',
     'cab',
     'cabbie',
     'cabby',
     'cabin',
     'cabinet',
     'cable',
     'cabled',
     'caffeine',
     'calculated',
     'calendar',
     'caliber',
     'called',
     'calling',
     'calls',
     'calm',
     'calmly',
     'calms',
     'came',
     'camera',
     'cameras',
     'campground',
     'canhow',
     'canvas',
     'cap',
     'captain',
     'caption',
     'car',
     'carabinieri',
     'carabinieris',
     'card',
     'cards',
     'care',
     'careening',
     'careful',
     'carefully',
     'careless',
     'carnage',
     'carries',
     'carrying',
     'cars',
     'carves',
     'cascading',
     'case',
     'cash',
     'caspian',
     'caspiexpetroleum',
     'cast',
     'casual',
     'casually',
     'catches',
     'catching',
     'caught',
     'cause',
     'caution',
     'caves',
     'cd',
     'cell',
     'cellphone',
     'cement',
     'center',
     'ceo',
     'certainly',
     'chair',
     'chairs',
     'chalkboard',
     'championed',
     'championship',
     'chance',
     'change',
     'changed',
     'changes',
     'chaos',
     'charge',
     'charges',
     'charmed',
     'chase',
     'chasing',
     'chatter',
     'chatting',
     'check',
     'checked',
     'checking',
     'checkoff',
     'checks',
     'cherbourg',
     'childlike',
     'chill',
     'chilly',
     'chinese',
     'chirping',
     'choice',
     'choices',
     'chokehold',
     'chokes',
     'chop',
     'choreographed',
     'christ',
     'chucked',
     'chugging',
     'ci',
     'cia',
     'cigarette',
     'cigarettes',
     'cinch',
     'circles',
     'city',
     'civvies',
     'claimed',
     'clean',
     'cleaning',
     'clear',
     'clearance',
     'clearing',
     'clearly',
     'clears',
     'clenching',
     'clerk',
     'clerks',
     'clever',
     'click',
     'clicking',
     'clicks',
     'cliff',
     'climb',
     'climbing',
     'clip',
     'clipping',
     'clock',
     'clogging',
     'cloned',
     'close',
     'closed',
     'closequarter',
     'closer',
     'closes',
     'closing',
     'clothes',
     'club',
     'clubhouse',
     'clue',
     'cluster',
     'clutter',
     'cluttered',
     'coal',
     'coat',
     'code',
     'coding',
     'coffee',
     'cold',
     'colonial',
     'colored',
     'come',
     'comes',
     'comfortable',
     'coming',
     'comm',
     'command',
     'commanders',
     'common',
     'commotion',
     'communications',
     'commuters',
     'companies',
     'company',
     'comparison',
     'complaining',
     'compressing',
     'compulsive',
     'computer',
     'computers',
     'comrade',
     'concentrating',
     'concentric',
     'concerned',
     'concerning',
     'concierge',
     'concrete',
     'condition',
     'conditions',
     'conductors',
     'conferring',
     'confidentially',
     'confirm',
     'confusion',
     'conjunction',
     'conjure',
     'conklin',
     'conklins',
     'connections',
     'consider',
     'considering',
     'consist',
     'console',
     'construction',
     'consulate',
     'contact',
     'contd',
     'continents',
     'continues',
     'continuing',
     'contract',
     'control',
     'controlled',
     'converge',
     'conversation',
     'convinced',
     'convoy',
     'coo',
     'cool',
     'cooly',
     'coordinate',
     'cop',
     'cops',
     'corner',
     'corral',
     'corridor',
     'cots',
     'cottage',
     'coughing',
     'counter',
     'countering',
     'counterintelligence',
     'counting',
     'country',
     'countryside',
     'couple',
     'course',
     'courtesy',
     'cover',
     'covered',
     'covering',
     'coworkers',
     'cranking',
     'cranks',
     'crap',
     'crash',
     'crashes',
     'crashing',
     'crazy',
     'credentials',
     'credit',
     'creepy',
     'crestfallen',
     'crewcut',
     'crime',
     'crinkles',
     'crisp',
     'crissake',
     'cronin',
     'croninradio',
     'cross',
     'crosses',
     'crossing',
     'crouches',
     'crowd',
     'crowded',
     'cruising',
     'crush',
     'crushed',
     'crushes',
     'crying',
     'cuffed',
     'cuffs',
     'cup',
     'curb',
     'curiosity',
     'curious',
     'curtains',
     'curving',
     'customs',
     'cut',
     'cuts',
     'cutting',
     'cyrillic',
     'da',
     'dad',
     'damn',
     'dangerous',
     'dangle',
     'daniel',
     'danka',
     'danny',
     'dark',
     'darkened',
     'darkness',
     'dash',
     'dashboards',
     'data',
     'database',
     'date',
     'david',
     'day',
     'days',
     'dead',
     'deadly',
     'deal',
     'dealing',
     'death',
     'debrief',
     'debriefed',
     'decent',
     'decide',
     'decided',
     'decision',
     'decives',
     'deck',
     'deep',
     'defensive',
     'defiant',
     'definitely',
     'definitive',
     'delta',
     'deltas',
     'departure',
     'departures',
     'depression',
     'deputy',
     'descend',
     'deserted',
     'desk',
     'desolate',
     'desperation',
     'destiny',
     'destroy',
     'destroys',
     'detailed',
     'details',
     'detained',
     'determined',
     'detonation',
     'device',
     'diagnosis',
     'diagnostic',
     'dial',
     'dialed',
     'did',
     'didi',
     'didjason',
     'didnt',
     'die',
     'died',
     'diei',
     'dies',
     'different',
     'digital',
     'digs',
     'direct',
     'directions',
     'directly',
     'director',
     'disappear',
     'disappearing',
     'disappears',
     'disappointed',
     'disaster',
     'discreet',
     'discreetly',
     'disembark',
     'disembarking',
     'disembarks',
     'disgusted',
     'dishes',
     'disputing',
     'distance',
     'distinctive',
     'distribution',
     'disturbance',
     'ditch',
     'dividing',
     'diving',
     'dobermans',
     'doctor',
     'document',
     'dod',
     'dodging',
     'dods',
     'does',
     'doesnt',
     'doing',
     'dollar',
     'dollars',
     'domestic',
     'dominant',
     'dominates',
     'donnie',
     'dont',
     'door',
     'doorbell',
     'doorman',
     'doors',
     'doorway',
     'double',
     'doublecrossed',
     'doubt',
     'downhill',
     'downs',
     'dozens',
     'drab',
     'drawn',
     'dread',
     'dream',
     'dresser',
     'drifting',
     'drill',
     'drills',
     'drink',
     'drinks',
     'drive',
     'driver',
     'driverphone',
     'drivers',
     'drives',
     'driving',
     'drone',
     'drop',
     'dropping',
     'drops',
     'drugs',
     'drunk',
     'ducked',
     'ducking',
     'duct',
     'dude',
     'dudes',
     'duffel',
     'duffle',
     'dumping',
     'dunk',
     'ear',
     'earlier',
     'early',
     'earpiece',
     'ears',
     'easing',
     'east',
     'easy',
     'eat',
     'edge',
     'edges',
     'ef',
     'effective',
     'effort',
     'effortless',
     'electric',
     'electrical',
     'element',
     'elevator',
     'eluded',
     'embankment',
     'embarrassed',
     'emerge',
     'emergency',
     'emerges',
     'emerging',
     'emphatic',
     'emptied',
     'end',
     'ends',
     'energy',
     'engine',
     'engines',
     'english',
     'enjoy',
     'enter',
     'entering',
     'enters',
     'entombed',
     'entrance',
     'entrances',
     'equal',
     'equally',
     'escape',
     'escort',
     'ether',
     'europe',
     'european',
     'euros',
     'evac',
     'event',
     'everybody',
     'everyday',
     'evidence',
     'ex',
     'exactly',
     'exceptionally',
     'excited',
     'excuse',
     'exfil',
     'exit',
     'exiting',
     'exits',
     'exnavyseal',
     'expensive',
     'expert',
     'explosion',
     'explosive',
     'express',
     'extreme',
     'extremely',
     'eye',
     'eyes',
     'facade',
     'facades',
     'face',
     'faces',
     'fact',
     'factories',
     'factoring',
     'fade',
     'fading',
     'fail',
     'failed',
     'failing',
     'fair',
     'fake',
     'fakes',
     'faking',
     'fall',
     'fallen',
     'falling',
     'falls',
     'familiar',
     'families',
     'family',
     'fan',
     'fanning',
     'far',
     'fast',
     'faster',
     'father',
     'fatherly',
     'fault',
     'faux',
     'favorite',
     'fax',
     'fear',
     'feed',
     'feeding',
     'feel',
     'feels',
     'feet',
     'fell',
     'felt',
     'fender',
     'fenders',
     'fernsehturm',
     'ferry',
     'field',
     'fiftyeuro',
     'fighting',
     'fights',
     'figure',
     'file',
     'filei',
     'files',
     'fileyour',
     'filing',
     'filling',
     'fills',
     'final',
     'finally',
     'financial',
     'finding',
     'finds',
     'fine',
     'finger',
     'fingerprint',
     'fingers',
     'finish',
     'finished',
     'finishes',
     'finishing',
     'fired',
     'fires',
     'firing',
     'firmly',
     'fishing',
     'fishtailing',
     'fix',
     'fixed',
     'flag',
     'flames',
     'flanking',
     'flash',
     'flashback',
     'flashes',
     'flashing',
     'flat',
     'flatout',
     'fleeing',
     'flexcuffs',
     'flicker',
     'flickering',
     'flicking',
     'flies',
     'flight',
     'flights',
     'flimsy',
     'flips',
     'floated',
     'flood',
     'flooding',
     'floor',
     'flooring',
     'floors',
     'flow',
     'fly',
     'flying',
     'focused',
     'focusing',
     'foggy',
     'folder',
     'folding',
     'folks',
     'follow',
     'followed',
     'following',
     'follows',
     'food',
     'fooled',
     'foot',
     'footing',
     'footlocker',
     'footpath',
     'footstep',
     'footsteps',
     'force',
     'foreboding',
     'forehead',
     'forest',
     'forever',
     'forget',
     'forging',
     'forgive',
     'forgotten',
     'fork',
     'forlorn',
     'forties',
     'fortune',
     'forward',
     'fourgam',
     'fourth',
     'frantic',
     'freaked',
     'free',
     'freezes',
     'freezing',
     'frequency',
     'fresh',
     'fridge',
     'friendly',
     'friends',
     'frowns',
     'frozen',
     'frustration',
     'fry',
     'fuck',
     'fucking',
     'fully',
     'fumbling',
     'funky',
     'furious',
     'fury',
     'fusty',
     'futile',
     'gables',
     'gadgetry',
     'gaining',
     'game',
     'gangster',
     'gap',
     'gas',
     'gasolinestoked',
     'gasping',
     'gassoaked',
     'gate',
     'gathered',
     'gathering',
     'gauge',
     'gaze',
     'gear',
     'gears',
     'geneva',
     'genevai',
     'genoa',
     'gentlemen',
     'german',
     'germans',
     'germany',
     'gestures',
     'gets',
     'getting',
     'gift',
     'gimme',
     'girl',
     'girlfriend',
     'girls',
     'given',
     'gives',
     'giving',
     'glacial',
     'glance',
     'glanced',
     'glances',
     'glancing',
     ...]
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어의 씬별 등장 횟수</span></span><br><span class="line"></span><br><span class="line">bow_vect.toarray()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">bow_vect.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 2850)
</code></pre>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어의 총 등장 횟수 (모든 씬에서의 등장 횟수의 합)</span></span><br><span class="line"></span><br><span class="line">count_list  <span class="comment"># BoW array의 각 column에 대해서 모든 row의 합을 구하기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  3,  2, ...,  1, 42,  3], dtype=int64)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "단어" - "총 등장 횟수" Matching</span></span><br><span class="line"></span><br><span class="line">word_count_dict = dict(zip(word_list, count_list))</span><br><span class="line">word_count_dict</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    {'aa': 3,
     'ab': 3,
     'abandoned': 2,
     'abandons': 1,
     'abbott': 128,
     'abbottnow': 1,
     'abbottphone': 4,
     'abbotts': 3,
     'abend': 2,
     'able': 1,
     'aboott': 1,
     'aboutfaces': 1,
     'absolutely': 1,
     'abyss': 1,
     'accelerating': 1,
     'accented': 1,
     'accepting': 1,
     'accepts': 1,
     'access': 3,
     'accompanying': 1,
     'accomplished': 1,
     'account': 3,
     'acknowledged': 1,
     'act': 1,
     'activity': 2,
     'actually': 3,
     'address': 3,
     'adjust': 1,
     'adrenaline': 1,
     'affirmative': 1,
     'afford': 1,
     'afraid': 1,
     'afternoon': 1,
     'againi': 1,
     'agencies': 1,
     'agency': 5,
     'agent': 2,
     'agents': 2,
     'agitated': 1,
     'ago': 10,
     'agreement': 2,
     'agrees': 1,
     'ah': 1,
     'ahead': 17,
     'aim': 1,
     'aimed': 1,
     'air': 9,
     'airport': 2,
     'alarm': 3,
     'alert': 1,
     'alexanderplatz': 3,
     'alive': 9,
     'alley': 2,
     'alleys': 1,
     'allocation': 1,
     'allpoints': 1,
     'alongside': 1,
     'alps': 1,
     'alright': 2,
     'alrighti': 1,
     'alrighttake': 1,
     'american': 4,
     'ammo': 1,
     'amnesia': 5,
     'amused': 1,
     'anger': 1,
     'angle': 2,
     'ankle': 1,
     'anonymous': 3,
     'answer': 8,
     'answering': 1,
     'answers': 7,
     'anymore': 3,
     'anythings': 1,
     'apology': 2,
     'appealing': 1,
     'appear': 1,
     'appearing': 1,
     'appears': 1,
     'approached': 1,
     'approaches': 2,
     'approaching': 1,
     'archive': 1,
     'archives': 2,
     'area': 5,
     'arm': 2,
     'armed': 2,
     'arms': 3,
     'army': 1,
     'arrested': 1,
     'arrivals': 1,
     'arrived': 3,
     'arrives': 8,
     'arriving': 3,
     'article': 1,
     'asap': 1,
     'ashes': 1,
     'aside': 2,
     'ask': 1,
     'asked': 1,
     'asking': 2,
     'asks': 1,
     'asleep': 1,
     'ass': 7,
     'assassinated': 2,
     'assholes': 1,
     'assigned': 1,
     'assignment': 1,
     'assistant': 1,
     'associated': 1,
     'attempt': 1,
     'attention': 3,
     'autobahn': 1,
     'automatic': 3,
     'available': 1,
     'aware': 1,
     'away': 48,
     'awful': 3,
     'awhile': 2,
     'ba': 2,
     'backhanding': 1,
     'backing': 5,
     'backpack': 4,
     'backpacks': 2,
     'backs': 2,
     'backseat': 4,
     'backyard': 1,
     'bad': 5,
     'bag': 18,
     'bags': 2,
     'bail': 1,
     'bailing': 2,
     'bakery': 1,
     'balance': 2,
     'ball': 1,
     'balling': 1,
     'band': 1,
     'bang': 1,
     'banging': 1,
     'bank': 3,
     'banking': 1,
     'banks': 1,
     'bar': 1,
     'barely': 8,
     'bargain': 1,
     'barge': 9,
     'barn': 1,
     'base': 2,
     'basement': 2,
     'basic': 1,
     'basically': 1,
     'bastards': 1,
     'bathroom': 7,
     'battery': 1,
     'bb': 2,
     'bc': 1,
     'beach': 10,
     'bearing': 1,
     'bearings': 1,
     'beat': 22,
     'beats': 2,
     'beattocrap': 1,
     'bed': 9,
     'bedroom': 2,
     'beep': 2,
     'beeping': 2,
     'beggars': 1,
     'begging': 4,
     'begin': 2,
     'begins': 9,
     'behavior': 1,
     'behaviors': 1,
     'believe': 4,
     'believed': 6,
     'belongings': 1,
     'belt': 1,
     'beltway': 4,
     'bench': 1,
     'bends': 1,
     'beneath': 1,
     'berlin': 37,
     'better': 7,
     'bg': 1,
     'big': 17,
     'bigger': 3,
     'binders': 1,
     'binocular': 1,
     'birch': 1,
     'bit': 6,
     'bits': 1,
     'black': 15,
     'blade': 1,
     'blades': 1,
     'blam': 2,
     'blaming': 1,
     'blamm': 1,
     'blank': 2,
     'bleeding': 1,
     'blending': 1,
     'blinded': 1,
     'blindsided': 1,
     'blinking': 2,
     'blinks': 2,
     'block': 3,
     'blocked': 2,
     'blocking': 2,
     'blocks': 1,
     'blonde': 1,
     'blood': 6,
     'bloody': 2,
     'blow': 1,
     'blowing': 4,
     'blown': 3,
     'blows': 4,
     'blue': 3,
     'blueprint': 2,
     'blur': 3,
     'blurry': 1,
     'bmw': 4,
     'board': 2,
     'boarded': 1,
     'body': 9,
     'bogus': 1,
     'bomb': 1,
     'bombing': 1,
     'bone': 1,
     'book': 2,
     'boom': 1,
     'booooomm': 1,
     'booth': 3,
     'border': 2,
     'boss': 2,
     'bothering': 1,
     'bottle': 3,
     'boulevard': 4,
     'bouncing': 1,
     'bound': 1,
     'bourne': 455,
     'bourneabbott': 1,
     'bournephone': 5,
     'bournes': 29,
     'box': 5,
     'boxed': 1,
     'boxes': 1,
     'braced': 1,
     'braces': 1,
     'bracing': 2,
     'brakes': 3,
     'brandenburg': 1,
     'brass': 1,
     'breakdown': 1,
     'breaker': 1,
     'breaking': 1,
     'breaks': 1,
     'breath': 2,
     'breathe': 1,
     'breathing': 1,
     'breathless': 1,
     'brecker': 9,
     'bridge': 13,
     'briefcase': 8,
     'briefed': 1,
     'briefing': 1,
     'bright': 2,
     'bring': 2,
     'briskly': 2,
     'bristles': 1,
     'broadcoasting': 1,
     'bruise': 1,
     'budget': 1,
     'building': 20,
     'bulge': 1,
     'bulging': 1,
     'bulkhead': 2,
     'bullet': 1,
     'bulletin': 1,
     'bullets': 2,
     'bullpen': 5,
     'bumpers': 1,
     'bunch': 1,
     'bundle': 1,
     'burly': 1,
     'burn': 1,
     'burning': 2,
     'burst': 1,
     'bus': 3,
     'business': 3,
     'bust': 1,
     'busted': 1,
     'busy': 7,
     'button': 1,
     'buttoning': 1,
     'buy': 7,
     'buying': 2,
     'buzzkill': 1,
     'cab': 24,
     'cabbie': 3,
     'cabby': 1,
     'cabin': 1,
     'cabinet': 3,
     'cable': 1,
     'cabled': 1,
     'caffeine': 1,
     'calculated': 1,
     'calendar': 1,
     'caliber': 1,
     'called': 3,
     'calling': 1,
     'calls': 1,
     'calm': 4,
     'calmly': 2,
     'calms': 1,
     'came': 10,
     'camera': 3,
     'cameras': 1,
     'campground': 1,
     'canhow': 1,
     'canvas': 1,
     'cap': 1,
     'captain': 2,
     'caption': 1,
     'car': 51,
     'carabinieri': 5,
     'carabinieris': 1,
     'card': 1,
     'cards': 2,
     'care': 3,
     'careening': 1,
     'careful': 2,
     'carefully': 2,
     'careless': 1,
     'carnage': 1,
     'carries': 1,
     'carrying': 6,
     'cars': 20,
     'carves': 1,
     'cascading': 1,
     'case': 7,
     'cash': 6,
     'caspian': 1,
     'caspiexpetroleum': 1,
     'cast': 1,
     'casual': 2,
     'casually': 1,
     'catches': 1,
     'catching': 3,
     'caught': 2,
     'cause': 1,
     'caution': 1,
     'caves': 1,
     'cd': 1,
     'cell': 7,
     'cellphone': 2,
     'cement': 1,
     'center': 3,
     'ceo': 1,
     'certainly': 1,
     'chair': 9,
     'chairs': 1,
     'chalkboard': 1,
     'championed': 1,
     'championship': 1,
     'chance': 1,
     'change': 4,
     'changed': 3,
     'changes': 2,
     'chaos': 2,
     'charge': 7,
     'charges': 2,
     'charmed': 1,
     'chase': 2,
     'chasing': 1,
     'chatter': 1,
     'chatting': 1,
     'check': 6,
     'checked': 2,
     'checking': 13,
     'checkoff': 1,
     'checks': 12,
     'cherbourg': 1,
     'childlike': 1,
     'chill': 1,
     'chilly': 1,
     'chinese': 2,
     'chirping': 1,
     'choice': 5,
     'choices': 1,
     'chokehold': 1,
     'chokes': 1,
     'chop': 2,
     'choreographed': 1,
     'christ': 2,
     'chucked': 1,
     'chugging': 2,
     'ci': 2,
     'cia': 7,
     'cigarette': 1,
     'cigarettes': 1,
     'cinch': 1,
     'circles': 2,
     'city': 4,
     'civvies': 1,
     'claimed': 1,
     'clean': 7,
     'cleaning': 1,
     'clear': 9,
     'clearance': 1,
     'clearing': 1,
     'clearly': 5,
     'clears': 2,
     'clenching': 1,
     'clerk': 8,
     'clerks': 1,
     'clever': 1,
     'click': 6,
     'clicking': 1,
     'clicks': 1,
     'cliff': 1,
     'climb': 1,
     'climbing': 4,
     'clip': 3,
     'clipping': 1,
     'clock': 4,
     'clogging': 1,
     'cloned': 2,
     'close': 13,
     'closed': 3,
     'closequarter': 1,
     'closer': 4,
     'closes': 2,
     'closing': 3,
     'clothes': 7,
     'club': 3,
     'clubhouse': 1,
     'clue': 1,
     'cluster': 1,
     'clutter': 1,
     'cluttered': 1,
     'coal': 2,
     'coat': 7,
     'code': 2,
     'coding': 1,
     'coffee': 5,
     'cold': 4,
     'colonial': 1,
     'colored': 1,
     'come': 18,
     'comes': 10,
     'comfortable': 1,
     'coming': 30,
     'comm': 2,
     'command': 1,
     'commanders': 1,
     'common': 1,
     'commotion': 1,
     'communications': 2,
     'commuters': 1,
     'companies': 1,
     'company': 3,
     'comparison': 1,
     'complaining': 1,
     'compressing': 1,
     'compulsive': 1,
     'computer': 7,
     'computers': 2,
     'comrade': 1,
     'concentrating': 1,
     'concentric': 1,
     'concerned': 2,
     'concerning': 1,
     'concierge': 3,
     'concrete': 3,
     'condition': 1,
     'conditions': 1,
     'conductors': 1,
     'conferring': 2,
     'confidentially': 1,
     'confirm': 1,
     'confusion': 3,
     'conjunction': 1,
     'conjure': 1,
     'conklin': 29,
     'conklins': 4,
     'connections': 1,
     'consider': 1,
     'considering': 1,
     'consist': 1,
     'console': 1,
     'construction': 2,
     'consulate': 2,
     'contact': 3,
     'contd': 63,
     'continents': 1,
     'continues': 3,
     'continuing': 8,
     'contract': 1,
     'control': 2,
     'controlled': 1,
     'converge': 1,
     'conversation': 3,
     'convinced': 1,
     'convoy': 1,
     'coo': 1,
     'cool': 3,
     'cooly': 1,
     'coordinate': 1,
     'cop': 5,
     'cops': 22,
     'corner': 13,
     'corral': 1,
     'corridor': 1,
     'cots': 1,
     'cottage': 1,
     'coughing': 1,
     'counter': 2,
     'countering': 1,
     'counterintelligence': 2,
     'counting': 1,
     'country': 1,
     'countryside': 1,
     'couple': 4,
     'course': 1,
     'courtesy': 1,
     'cover': 9,
     'covered': 2,
     'covering': 1,
     'coworkers': 1,
     'cranking': 1,
     'cranks': 1,
     'crap': 2,
     'crash': 2,
     'crashes': 1,
     'crashing': 2,
     'crazy': 4,
     'credentials': 1,
     'credit': 1,
     'creepy': 1,
     'crestfallen': 1,
     'crewcut': 1,
     'crime': 2,
     'crinkles': 1,
     'crisp': 1,
     'crissake': 1,
     'cronin': 81,
     'croninradio': 1,
     'cross': 2,
     'crosses': 3,
     'crossing': 2,
     'crouches': 1,
     'crowd': 7,
     'crowded': 2,
     'cruising': 1,
     'crush': 1,
     'crushed': 1,
     'crushes': 1,
     'crying': 4,
     'cuffed': 2,
     'cuffs': 2,
     'cup': 2,
     'curb': 3,
     'curiosity': 1,
     'curious': 1,
     'curtains': 2,
     'curving': 1,
     'customs': 1,
     'cut': 2,
     'cuts': 2,
     'cutting': 3,
     'cyrillic': 2,
     'da': 1,
     'dad': 1,
     'damn': 2,
     'dangerous': 3,
     'dangle': 1,
     'daniel': 1,
     'danka': 1,
     'danny': 8,
     'dark': 16,
     'darkened': 1,
     'darkness': 2,
     'dash': 2,
     'dashboards': 1,
     'data': 3,
     'database': 1,
     'date': 2,
     'david': 1,
     'day': 4,
     'days': 2,
     'dead': 22,
     'deadly': 1,
     'deal': 3,
     'dealing': 1,
     'death': 4,
     'debrief': 2,
     'debriefed': 1,
     'decent': 1,
     'decide': 2,
     'decided': 1,
     'decision': 1,
     'decives': 1,
     'deck': 2,
     'deep': 2,
     'defensive': 2,
     'defiant': 1,
     'definitely': 1,
     'definitive': 3,
     'delta': 12,
     'deltas': 1,
     'departure': 2,
     'departures': 1,
     'depression': 1,
     'deputy': 2,
     'descend': 1,
     'deserted': 2,
     'desk': 17,
     'desolate': 2,
     'desperation': 2,
     'destiny': 1,
     'destroy': 1,
     'destroys': 1,
     'detailed': 1,
     'details': 2,
     'detained': 1,
     'determined': 1,
     'detonation': 1,
     'device': 2,
     'diagnosis': 1,
     'diagnostic': 1,
     'dial': 1,
     'dialed': 1,
     'did': 15,
     'didi': 1,
     'didjason': 1,
     'didnt': 11,
     'die': 1,
     'died': 3,
     'diei': 1,
     'dies': 1,
     'different': 2,
     'digital': 1,
     'digs': 1,
     'direct': 1,
     'directions': 1,
     'directly': 1,
     'director': 2,
     'disappear': 6,
     'disappearing': 1,
     'disappears': 3,
     'disappointed': 1,
     'disaster': 3,
     'discreet': 2,
     'discreetly': 2,
     'disembark': 1,
     'disembarking': 2,
     'disembarks': 1,
     'disgusted': 1,
     'dishes': 1,
     'disputing': 1,
     'distance': 4,
     'distinctive': 1,
     'distribution': 1,
     'disturbance': 1,
     'ditch': 1,
     'dividing': 1,
     'diving': 1,
     'dobermans': 2,
     'doctor': 1,
     'document': 1,
     'dod': 3,
     'dodging': 1,
     'dods': 1,
     'does': 9,
     'doesnt': 11,
     'doing': 20,
     'dollar': 2,
     'dollars': 4,
     'domestic': 1,
     'dominant': 1,
     'dominates': 1,
     'donnie': 1,
     'dont': 42,
     'door': 31,
     'doorbell': 1,
     'doorman': 2,
     'doors': 9,
     'doorway': 3,
     'double': 1,
     'doublecrossed': 1,
     'doubt': 1,
     'downhill': 1,
     'downs': 1,
     'dozens': 1,
     'drab': 1,
     'drawn': 4,
     'dread': 2,
     'dream': 4,
     'dresser': 1,
     'drifting': 2,
     'drill': 3,
     'drills': 2,
     'drink': 1,
     'drinks': 1,
     'drive': 3,
     'driver': 20,
     'driverphone': 1,
     'drivers': 3,
     'drives': 4,
     'driving': 12,
     'drone': 1,
     'drop': 4,
     'dropping': 3,
     'drops': 3,
     'drugs': 1,
     'drunk': 4,
     'ducked': 1,
     'ducking': 1,
     'duct': 2,
     'dude': 2,
     'dudes': 6,
     'duffel': 1,
     'duffle': 3,
     'dumping': 1,
     'dunk': 1,
     'ear': 1,
     'earlier': 1,
     'early': 5,
     'earpiece': 3,
     'ears': 1,
     'easing': 1,
     'east': 2,
     'easy': 2,
     'eat': 1,
     'edge': 2,
     'edges': 1,
     'ef': 1,
     'effective': 1,
     'effort': 1,
     'effortless': 1,
     'electric': 1,
     'electrical': 3,
     'element': 1,
     'elevator': 8,
     'eluded': 1,
     'embankment': 1,
     'embarrassed': 2,
     'emerge': 1,
     'emergency': 1,
     'emerges': 1,
     'emerging': 2,
     'emphatic': 1,
     'emptied': 1,
     'end': 10,
     'ends': 2,
     'energy': 1,
     'engine': 1,
     'engines': 1,
     'english': 2,
     'enjoy': 1,
     'enter': 2,
     'entering': 1,
     'enters': 10,
     'entombed': 1,
     'entrance': 2,
     'entrances': 1,
     'equal': 1,
     'equally': 1,
     'escape': 1,
     'escort': 3,
     'ether': 1,
     'europe': 2,
     'european': 1,
     'euros': 1,
     'evac': 2,
     'event': 1,
     'everybody': 3,
     'everyday': 1,
     'evidence': 1,
     'ex': 1,
     'exactly': 7,
     'exceptionally': 1,
     'excited': 2,
     'excuse': 1,
     'exfil': 6,
     'exit': 2,
     'exiting': 1,
     'exits': 3,
     'exnavyseal': 1,
     'expensive': 1,
     'expert': 1,
     'explosion': 1,
     'explosive': 3,
     'express': 1,
     'extreme': 1,
     'extremely': 2,
     'eye': 6,
     'eyes': 25,
     'facade': 2,
     'facades': 1,
     'face': 22,
     'faces': 6,
     'fact': 2,
     'factories': 1,
     'factoring': 1,
     'fade': 2,
     'fading': 1,
     'fail': 1,
     'failed': 1,
     'failing': 1,
     'fair': 1,
     'fake': 1,
     'fakes': 1,
     'faking': 1,
     'fall': 3,
     'fallen': 1,
     'falling': 2,
     'falls': 1,
     'familiar': 2,
     'families': 1,
     'family': 5,
     'fan': 1,
     'fanning': 1,
     'far': 7,
     'fast': 13,
     'faster': 1,
     'father': 3,
     'fatherly': 1,
     'fault': 1,
     'faux': 1,
     'favorite': 1,
     'fax': 2,
     'fear': 4,
     'feed': 2,
     'feeding': 1,
     'feel': 4,
     'feels': 1,
     'feet': 3,
     'fell': 3,
     'felt': 4,
     'fender': 1,
     'fenders': 1,
     'fernsehturm': 1,
     'ferry': 2,
     'field': 6,
     'fiftyeuro': 1,
     'fighting': 1,
     'fights': 1,
     'figure': 3,
     'file': 8,
     'filei': 1,
     'files': 11,
     'fileyour': 1,
     'filing': 1,
     'filling': 1,
     'fills': 1,
     'final': 5,
     'finally': 11,
     'financial': 2,
     'finding': 3,
     'finds': 1,
     'fine': 2,
     'finger': 4,
     'fingerprint': 3,
     'fingers': 1,
     'finish': 2,
     'finished': 1,
     'finishes': 1,
     'finishing': 1,
     'fired': 1,
     'fires': 1,
     'firing': 4,
     'firmly': 1,
     'fishing': 2,
     'fishtailing': 1,
     'fix': 2,
     'fixed': 3,
     'flag': 2,
     'flames': 1,
     'flanking': 1,
     'flash': 2,
     'flashback': 7,
     'flashes': 3,
     'flashing': 2,
     'flat': 2,
     'flatout': 1,
     'fleeing': 1,
     'flexcuffs': 2,
     'flicker': 3,
     'flickering': 1,
     'flicking': 1,
     'flies': 1,
     'flight': 1,
     'flights': 1,
     'flimsy': 1,
     'flips': 2,
     'floated': 1,
     'flood': 1,
     'flooding': 1,
     'floor': 10,
     'flooring': 1,
     'floors': 1,
     'flow': 1,
     'fly': 1,
     'flying': 2,
     'focused': 3,
     'focusing': 1,
     'foggy': 1,
     'folder': 1,
     'folding': 2,
     'folks': 1,
     'follow': 3,
     'followed': 1,
     'following': 2,
     'follows': 3,
     'food': 4,
     'fooled': 2,
     'foot': 4,
     'footing': 1,
     'footlocker': 2,
     'footpath': 2,
     'footstep': 1,
     'footsteps': 1,
     'force': 2,
     'foreboding': 1,
     'forehead': 1,
     'forest': 1,
     'forever': 1,
     'forget': 3,
     'forging': 1,
     'forgive': 1,
     'forgotten': 2,
     'fork': 2,
     'forlorn': 1,
     'forties': 1,
     'fortune': 1,
     'forward': 6,
     'fourgam': 1,
     'fourth': 1,
     'frantic': 1,
     'freaked': 3,
     'free': 4,
     'freezes': 1,
     'freezing': 2,
     'frequency': 1,
     'fresh': 4,
     'fridge': 1,
     'friendly': 1,
     'friends': 2,
     'frowns': 1,
     'frozen': 2,
     'frustration': 1,
     'fry': 1,
     'fuck': 7,
     'fucking': 1,
     'fully': 3,
     'fumbling': 1,
     'funky': 1,
     'furious': 1,
     'fury': 2,
     'fusty': 1,
     'futile': 1,
     'gables': 1,
     'gadgetry': 1,
     'gaining': 2,
     'game': 4,
     'gangster': 1,
     'gap': 1,
     'gas': 5,
     'gasolinestoked': 1,
     'gasping': 1,
     'gassoaked': 1,
     'gate': 1,
     'gathered': 2,
     'gathering': 1,
     'gauge': 1,
     'gaze': 2,
     'gear': 9,
     'gears': 1,
     'geneva': 1,
     'genevai': 1,
     'genoa': 1,
     'gentlemen': 1,
     'german': 7,
     'germans': 1,
     'germany': 2,
     'gestures': 3,
     'gets': 7,
     'getting': 16,
     'gift': 1,
     'gimme': 1,
     'girl': 6,
     'girlfriend': 1,
     'girls': 1,
     'given': 1,
     'gives': 4,
     'giving': 3,
     'glacial': 1,
     'glance': 1,
     'glanced': 1,
     'glances': 1,
     'glancing': 8,
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 등장 횟수 (count) 순으로 정렬</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line">sorted(word_count_dict.items(), key = operator.itemgetter(<span class="number">1</span>), reverse = <span class="literal">True</span>)[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('bourne', 455),
 ('pamela', 199),
 ('abbott', 128),
 ('hes', 100),
 ('kirill', 93)]
</code></pre>
 <br> 
<h4 id="3-단어-분포-탐색"><a class="markdownIt-Anchor" href="#3-단어-분포-탐색"></a> (3) 단어 분포 탐색</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.hist(list(word_count_dict.values()), bins=<span class="number">150</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-1/output_60_0.png" alt="output_60_0"></p>
<p>대부분의 단어가 0번~50번 사이에 등장했고, 일부 소수의 단어들이 100번 이상 등장한 것을 확인할 수 있습니다.</p>
  <br>
  <br>
<h2 id="4-택스트-마이닝"><a class="markdownIt-Anchor" href="#4-택스트-마이닝"></a> <strong>4. 택스트 마이닝</strong></h2>
<h3 id="4-1-단어별-빈도-분석-word-cloud"><a class="markdownIt-Anchor" href="#4-1-단어별-빈도-분석-word-cloud"></a> 4-1. 단어별 빈도 분석 (+ Word Cloud)</h3>
<h4 id="1-상위-빈도수-단어-출력"><a class="markdownIt-Anchor" href="#1-상위-빈도수-단어-출력"></a> (1) 상위 빈도수 단어 출력</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># word_count_dict중 상위 25 tags 확인해보기</span></span><br><span class="line"></span><br><span class="line">ranked_tags = Counter(word_count_dict).most_common(<span class="number">25</span>)</span><br><span class="line">ranked_tags</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('bourne', 455),
 ('pamela', 199),
 ('abbott', 128),
 ('hes', 100),
 ('kirill', 93),
 ('nicky', 90),
 ('cronin', 81),
 ('just', 80),
 ('marie', 67),
 ('contd', 63),
 ('know', 61),
 ('car', 51),
 ('away', 48),
 ('room', 44),
 ('jarda', 43),
 ('looks', 43),
 ('dont', 42),
 ('zorn', 42),
 ('phone', 40),
 ('right', 39),
 ('theres', 39),
 ('police', 38),
 ('want', 38),
 ('berlin', 37),
 ('teddy', 35)]
</code></pre>
  <br>
<h4 id="2-word-cloud-시각화"><a class="markdownIt-Anchor" href="#2-word-cloud-시각화"></a> (2) Word Cloud 시각화</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">!pip install pytagcloud pygame simplejson</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Collecting pytagcloud
  Downloading pytagcloud-0.3.5.tar.gz (754 kB)
Collecting pygame
  Downloading pygame-1.9.6-cp37-cp37m-win_amd64.whl (4.3 MB)
Collecting simplejson
  Downloading simplejson-3.17.2-cp37-cp37m-win_amd64.whl (73 kB)
Building wheels for collected packages: pytagcloud
  Building wheel for pytagcloud (setup.py): started
  Building wheel for pytagcloud (setup.py): finished with status 'done'
  Created wheel for pytagcloud: filename=pytagcloud-0.3.5-py3-none-any.whl size=759873 sha256=0c740b8c183f3dd04c6b6353e75f2307bdcc7855bb0ce66f4caa3ed352b6e8cc
  Stored in directory: c:\users\kimsu\appdata\local\pip\cache\wheels\fc\fd\aa\86956a295a7c9205bafd518ef4b6d489e51d2d476990c18238
Successfully built pytagcloud
Installing collected packages: pytagcloud, pygame, simplejson
Successfully installed pygame-1.9.6 pytagcloud-0.3.5 simplejson-3.17.2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> pytagcloud</span><br><span class="line"><span class="keyword">import</span> webbrowser</span><br></pre></td></tr></tbody></table></figure>
<pre><code>pygame 1.9.6
Hello from the pygame community. https://www.pygame.org/contribute.html
</code></pre>
<br>
<p>내림순으로 상위 N개를 추출하는 두가지 방법:</p>
<ol>
<li>
<p>sorted(<em>dict</em> .items(), key = operator.itemgetter(<em>col_index</em>), reverse=True) [:N]</p>
</li>
<li>
<p>Counter(<em>dict</em> .most_common(N))</p>
<br>
</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Top 40 단어로 word cloud 생성하기</span></span><br><span class="line">taglist = pytagcloud.make_tags(sorted(word_count_dict.items(), key = operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)[:<span class="number">40</span>], maxsize=<span class="number">60</span>)  <span class="comment"># 빈도수(itemgetter(1)) 내림차순(reverse=True)으로 정렬, maxsize: 글자 크기</span></span><br><span class="line"><span class="comment"># taglist = pytagcloud.make_tages(Counter(word_count_dict).most_common(40), maxsize=60)</span></span><br><span class="line"></span><br><span class="line">pytagcloud.create_tag_image(taglist, <span class="string">'movie_wordcloud.jpg'</span>, rectangular=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line">Image(filename=<span class="string">'movie_wordcloud.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-1/output_74_0.jpg" alt="output_74_0"></p>
<p>​    <br></p>
<h3 id="4-2-장면별-중요-단어-시각화-tf-idf"><a class="markdownIt-Anchor" href="#4-2-장면별-중요-단어-시각화-tf-idf"></a> 4-2. 장면별 중요 단어 시각화 (TF-IDF)</h3>
<h4 id="1-tf-idf-변환"><a class="markdownIt-Anchor" href="#1-tf-idf-변환"></a> (1) TF-IDF 변환</h4>
<p>Bag of Words 벡터에 대해서 TF-IDF변환 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfTransformer</span><br><span class="line"></span><br><span class="line">tfidf_vectorizer = TfidfTransformer()</span><br><span class="line">tf_idf_vect = tfidf_vectorizer.fit_transform(bow_vect)</span><br><span class="line"></span><br><span class="line">print(tf_idf_vect.shape)  <span class="comment"># 320*2850 vector: 320 scenes, 2850 sentences</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 2850)
</code></pre>
<br>
<p>변환 후 320*2850 matrix가 출력됩니다. 여기서</p>
<ul>
<li>
<p>한 행(row)은 한 씬을 의미하고</p>
</li>
<li>
<p>한 열(column)은 한 단어를 의미합니다.</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 첫번째 행 출력 (0이 아닌것 만) -- 즉 첫 씬에서 모든 단어의 TF-IDF 값</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 2850)
  (0, 2788)	0.19578974958217082
  (0, 2763)	0.27550455848587985
  (0, 2412)	0.1838379942679887
  (0, 2387)	0.3109660261831164
  (0, 1984)	0.2902223973596984
  (0, 1978)	0.3109660261831164
  (0, 1898)	0.27550455848587985
  (0, 1673)	0.2902223973596984
  (0, 1366)	0.21520447034992146
  (0, 1251)	0.19855583314180728
  (0, 1001)	0.2340173008390438
  (0, 974)	0.2902223973596984
  (0, 874)	0.27550455848587985
  (0, 798)	0.1906694714764746
  (0, 237)	0.08646242181596513
  (0, 125)	0.26408851574819875
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># (0을 포함한) 실제 vector의 모습 출력해보기</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray().shape)</span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1, 2850)
[[0. 0. 0. ... 0. 0. 0.]]
</code></pre>
<br>
<h4 id="2-벡터-단어-mapping"><a class="markdownIt-Anchor" href="#2-벡터-단어-mapping"></a> (2) “벡터” - “단어” mapping</h4>
<p>길이가 2850인 단어 벡터의 각 위치가 어떤 단어를 상징하는지를 알아내기 위해 단어 벡터에 대해서 “단어” - “index No.” Mapping 을 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">vect.vocabulary_</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    {'raining': 1898,
     'light': 1366,
     'strobes': 2387,
     'wet': 2763,
     'glass': 1001,
     'rhythmic': 1978,
     'pace': 1673,
     'suddenly': 2412,
     'window': 2788,
     'face': 798,
     'jason': 1251,
     'bourne': 237,
     'riding': 1984,
     'backseat': 125,
     'gaze': 974,
     'fixed': 874,
     'knee': 1297,
     'syringe': 2459,
     'gun': 1055,
     'eyes': 795,
     'driver': 703,
     'jarda': 1248,
     'watching': 2741,
     'bournes': 240,
     'pov': 1817,
     'passenger': 1710,
     'head': 1097,
     'cell': 351,
     'phone': 1747,
     'rings': 1990,
     'turns': 2626,
     'conklin': 481,
     'returns': 1971,
     'stare': 2332,
     'open': 1649,
     'panicked': 1693,
     'gasping': 968,
     'trying': 2615,
     'stay': 2347,
     'quiet': 1886,
     'marie': 1454,
     'sleeps': 2221,
     'moving': 1556,
     'medicine': 1482,
     'cabinet': 299,
     'digs': 640,
     'downs': 690,
     'specific': 2283,
     'minute': 1515,
     'later': 1333,
     'moves': 1555,
     'veranda': 2679,
     'pads': 1681,
     'moment': 1537,
     'concerned': 468,
     'clearly': 408,
     'time': 2542,
     'happened': 1082,
     'look': 1405,
     'different': 638,
     'saw': 2044,
     'hair': 1065,
     'longer': 1404,
     'shes': 2137,
     'blonde': 207,
     'hippie': 1138,
     'travelers': 2592,
     'cottage': 512,
     'humble': 1174,
     'sweet': 2445,
     'bedroom': 163,
     'opens': 1652,
     'beach': 156,
     'town': 2570,
     'just': 1272,
     'hill': 1135,
     'club': 432,
     'music': 1566,
     'night': 1602,
     'rave': 1909,
     'wafting': 2708,
     'far': 821,
     'distance': 658,
     'car': 321,
     'ill': 1193,
     'book': 226,
     'theres': 2513,
     'new': 1595,
     'youre': 2844,
     'sure': 2428,
     'nods': 1607,
     'write': 2823,
     'years': 2834,
     'scribbling': 2070,
     'notebook': 1615,
     'bad': 127,
     'bits': 189,
     'pieces': 1760,
     'gone': 1012,
     'think': 2521,
     'maybe': 1470,
     'making': 1442,
     'worse': 2816,
     'dont': 680,
     'wonder': 2800,
     'lays': 1337,
     'hands': 1077,
     'shoulders': 2157,
     'steadies': 2351,
     'sooner': 2268,
     'going': 1011,
     'remember': 1951,
     'good': 1014,
     'softens': 2260,
     'smiles': 2241,
     'kisses': 1293,
     'leads': 1342,
     'getting': 986,
     'bed': 162,
     'turning': 2625,
     'settled': 2110,
     'waiting': 2713,
     'pill': 1763,
     'kick': 1281,
     'im': 1194,
     'okay': 1641,
     'worry': 2815,
     'like': 1369,
     'nightmare': 1603,
     'mean': 1473,
     'try': 2614,
     'ignore': 1190,
     'hesitates': 1124,
     'gets': 985,
     'knows': 1310,
     'right': 1987,
     'opening': 1651,
     'hes': 1123,
     'letting': 1359,
     'resistance': 1963,
     'folding': 907,
     'childlike': 380,
     'gathering': 972,
     'contd': 491,
     'sleep': 2218,
     'better': 181,
     'memories': 1487,
     'dream': 695,
     'having': 1094,
     'ends': 752,
     'day': 586,
     'takes': 2464,
     'beat': 159,
     'make': 1440,
     'silence': 2182,
     'strokes': 2389,
     'gives': 993,
     'tenderness': 2499,
     'fading': 804,
     'waifs': 2710,
     'dark': 577,
     'running': 2022,
     'sun': 2418,
     'punishing': 1865,
     'sand': 2038,
     'strong': 2391,
     'effortless': 737,
     'deep': 601,
     'focused': 903,
     'stunning': 2400,
     'conjunction': 479,
     'scenery': 2055,
     'lost': 1414,
     'busy': 289,
     'market': 1457,
     'fishing': 871,
     'lots': 1416,
     'young': 2842,
     'western': 2761,
     'faces': 799,
     'rundown': 2021,
     'happening': 1083,
     'shopping': 2152,
     'filling': 852,
     'bag': 128,
     'local': 1391,
     'produce': 1841,
     'leaving': 1352,
     'putting': 1875,
     'groceries': 1040,
     'away': 116,
     'stops': 2369,
     'photograph': 1753,
     'windowsill': 2790,
     'snapshot': 2250,
     'arms': 87,
     'protector': 1853,
     'big': 183,
     'alive': 51,
     'love': 1419,
     'funky': 955,
     'colonial': 444,
     'facades': 797,
     'vivid': 2698,
     'subcontinental': 2404,
     'technicolor': 2483,
     'loud': 1417,
     'morning': 1545,
     'traffic': 2576,
     'camera': 313,
     'finds': 858,
     'coming': 449,
     'store': 2370,
     'bottle': 233,
     'water': 2742,
     'finished': 864,
     'run': 2020,
     'standing': 2329,
     'chugging': 393,
     'checking': 376,
     'scene': 2054,
     'catches': 344,
     'eye': 794,
     'street': 2380,
     'silver': 2188,
     'newish': 1596,
     'pulling': 1861,
     'block': 203,
     'quite': 1888,
     'whos': 2779,
     'driving': 707,
     'casual': 342,
     'passing': 1714,
     'notice': 1616,
     'alert': 49,
     'follows': 912,
     'foot': 915,
     'natural': 1575,
     'cruising': 551,
     'sidewalk': 2174,
     'blending': 198,
     'mix': 1525,
     'ahead': 43,
     'corner': 508,
     'slowing': 2233,
     'reaches': 1912,
     'parked': 1700,
     'guy': 1059,
     'welldressed': 2757,
     'physical': 1755,
     'sunglasses': 2420,
     'kirill': 1291,
     'heading': 1100,
     'building': 270,
     'telegraph': 2491,
     'office': 1632,
     'watch': 2739,
     'perimeter': 1739,
     'mr': 1557,
     'mohan': 1534,
     'desk': 614,
     'crisp': 541,
     'proper': 1849,
     'man': 1443,
     'handed': 1074,
     'old': 1642,
     'passport': 1715,
     'picture': 1758,
     'question': 1879,
     'sir': 2197,
     'sister': 2200,
     'death': 592,
     'family': 818,
     'place': 1772,
     'know': 1307,
     'called': 306,
     'note': 1614,
     'table': 2460,
     'come': 446,
     'read': 1917,
     'balling': 135,
     'quickly': 1884,
     'fact': 800,
     'bailing': 131,
     'fast': 822,
     'calm': 309,
     'methodical': 1501,
     'exfil': 782,
     'procedure': 1839,
     'honed': 1150,
     'choreographed': 390,
     'packing': 1678,
     'machine': 1432,
     'rapid': 1908,
     'cuts': 566,
     'backpacks': 123,
     'thrown': 2534,
     'house': 1163,
     'cash': 338,
     'pulled': 1860,
     'lamp': 1318,
     'base': 147,
     'credit': 535,
     'cards': 325,
     'taped': 2470,
     'counter': 514,
     'bank': 139,
     'mission': 1521,
     'accomplished': 20,
     'starting': 2338,
     'glancing': 999,
     'nice': 1599,
     'easy': 730,
     'cool': 503,
     'gear': 975,
     'makes': 1441,
     'slow': 2231,
     'pass': 1707,
     'marketplace': 1458,
     'stripped': 2384,
     'thing': 2519,
     'shit': 2143,
     'missed': 1519,
     'looking': 1406,
     'earlier': 724,
     'jamming': 1246,
     'pocket': 1793,
     'begins': 169,
     'sweep': 2444,
     'jogging': 1259,
     'keeping': 1273,
     'low': 1422,
     'neighborhood': 1587,
     'alleys': 53,
     'random': 1905,
     'worked': 2807,
     'crowded': 550,
     'tourists': 2566,
     'sunbathers': 2419,
     'favorite': 828,
     'spot': 2298,
     'talking': 2467,
     'women': 2799,
     'laughing': 1335,
     'happy': 1085,
     'burly': 281,
     'jeep': 1252,
     'comes': 447,
     'roaring': 2003,
     'spots': 2300,
     'parks': 1702,
     'end': 751,
     'methodically': 1502,
     'way': 2746,
     'blue': 214,
     'tent': 2503,
     'towel': 2567,
     'opposite': 1657,
     'arrives': 92,
     'looks': 1407,
     'sees': 2089,
     'yards': 2831,
     'hard': 1086,
     'bends': 178,
     'gotta': 1018,
     'tone': 2552,
     'voice': 2702,
     'grabs': 1020,
     'quick': 1883,
     'goodbye': 1015,
     'friends': 946,
     'hurry': 1177,
     'uses': 2667,
     'cover': 523,
     'retreats': 1969,
     'reach': 1911,
     'drill': 698,
     'tossed': 2559,
     'pulls': 1862,
     'blown': 212,
     'ago': 39,
     'fine': 859,
     'careful': 328,
     'pushed': 1871,
     'got': 1017,
     'lazy': 1338,
     'following': 911,
     'main': 1437,
     'blocked': 204,
     'huge': 1172,
     'automatic': 113,
     'pistol': 1768,
     'travel': 2591,
     'narrow': 1573,
     'little': 1385,
     'passageway': 1708,
     'windshield': 2791,
     'packed': 1677,
     'liking': 1370,
     'decide': 596,
     'campground': 315,
     'yesterday': 2838,
     'wrong': 2827,
     'rental': 1953,
     'dollar': 674,
     'sneakers': 2251,
     'pull': 1859,
     'thats': 2511,
     'crazy': 533,
     'real': 1921,
     'throwing': 2533,
     'reverse': 1974,
     'hyundai': 1183,
     'trapped': 2589,
     'gridlock': 1036,
     'freezing': 941,
     'alley': 52,
     'disappear': 645,
     'backing': 121,
     'came': 312,
     'blowing': 211,
     'horn': 1156,
     'van': 2672,
     'blocks': 206,
     'leaning': 1344,
     'theyve': 2517,
     'wait': 2712,
     'want': 2726,
     'againi': 33,
     'clear': 405,
     'shack': 2117,
     'safe': 2031,
     'hang': 1078,
     'awhile': 118,
     'check': 374,
     'wheres': 2773,
     'left': 1353,
     'places': 1774,
     'afford': 30,
     'possessed': 1809,
     'familiar': 816,
     'tactical': 2462,
     'patience': 1720,
     'doesnt': 672,
     'sense': 2098,
     'checks': 378,
     'rearview': 1927,
     'fuck': 951,
     'taking': 2465,
     'hell': 1117,
     'forward': 934,
     'blocking': 205,
     'drive': 702,
     'squeezing': 2313,
     'switch': 2455,
     'bridge': 259,
     'scrambling': 2061,
     'seat': 2078,
     'squirts': 2316,
     'wheel': 2771,
     'adrenaline': 28,
     'pumping': 1864,
     'thirty': 2524,
     'skidding': 2208,
     'turn': 2624,
     'clipping': 421,
     'vehicle': 2677,
     'mirror': 1517,
     'shattering': 2130,
     'speeding': 2285,
     'scanning': 2050,
     'veering': 2676,
     'oncoming': 1645,
     'bus': 285,
     'jesus': 1256,
     'yeah': 2832,
     'ready': 1920,
     'bearing': 157,
     'smile': 2240,
     'knowing': 1308,
     'stopping': 2368,
     'short': 2153,
     'rise': 1995,
     'bit': 188,
     'view': 2692,
     'half': 1067,
     'headed': 1099,
     'gonna': 1013,
     'lose': 1412,
     'kirills': 1292,
     'mind': 1513,
     'racing': 1890,
     'duffle': 720,
     'abandons': 3,
     'preps': 1825,
     'meet': 1484,
     'hour': 1161,
     'bail': 130,
     'follow': 909,
     'crosses': 546,
     'warned': 2731,
     'told': 2551,
     'leave': 1350,
     'thisit': 2526,
     'wont': 2801,
     'choice': 385,
     'concrete': 471,
     'slams': 2216,
     'precise': 1819,
     'sniper': 2252,
     'rifle': 1985,
     'hand': 1073,
     'spare': 2276,
     'clip': 420,
     'roll': 2007,
     'tell': 2496,
     'scope': 2059,
     'rumbling': 2019,
     'target': 2472,
     'drivers': 705,
     'headrest': 1103,
     'finger': 860,
     'firing': 869,
     'jerking': 1254,
     'fender': 838,
     'tearing': 2480,
     'guard': 1045,
     'rail': 1895,
     'cement': 353,
     'shards': 2126,
     'air': 46,
     'reaching': 1913,
     'late': 1332,
     'finally': 855,
     'crashes': 531,
     'flimsy': 892,
     'guardrail': 1046,
     'plummets': 1791,
     'splashes': 2295,
     'sink': 2194,
     'sight': 2177,
     'lowers': 1425,
     'basically': 150,
     'unnoticed': 2646,
     'nook': 1611,
     'silenced': 2183,
     'people': 1737,
     'rushing': 2026,
     'woman': 2797,
     'directly': 643,
     'doorway': 685,
     'indian': 1211,
     'goa': 1006,
     'drills': 699,
     'sinks': 2195,
     'inside': 1215,
     'swallowed': 2439,
     'scans': 2051,
     'surface': 2429,
     'river': 2000,
     'mud': 1559,
     'plumes': 1790,
     'settles': 2111,
     'tries': 2599,
     'urge': 2661,
     'killers': 1287,
     'unbroken': 2634,
     'woodwork': 2803,
     'breaks': 253,
     'moments': 1538,
     'goes': 1010,
     'held': 1116,
     'jeeps': 1253,
     'canvas': 317,
     'gulp': 1054,
     'frantic': 937,
     'unclip': 2636,
     'seatbelt': 2079,
     'jammed': 1245,
     'chucked': 392,
     'drifting': 697,
     'disappears': 647,
     'red': 1935,
     'halo': 1071,
     'growing': 1043,
     'bigger': 184,
     'blood': 208,
     'pauses': 1723,
     'maries': 1455,
     'blank': 196,
     'dead': 588,
     'realizing': 1924,
     'pick': 1756,
     'briefcase': 260,
     'telephoto': 2492,
     'lens': 1356,
     'teddyradio': 2486,
     'vo': 2700,
     'seller': 2093,
     'arrived': 91,
     'berlin': 180,
     'chinese': 383,
     'restaurant': 1966,
     'squarely': 2312,
     'seen': 2088,
     'enters': 760,
     'stark': 2335,
     'men': 1489,
     'cross': 545,
     'square': 2310,
     'vic': 2686,
     'steelass': 2354,
     'intel': 1220,
     'operator': 1655,
     'carries': 332,
     'large': 1330,
     'samples': 2037,
     'case': 337,
     'mike': 1509,
     'younger': 2843,
     'exnavyseal': 786,
     'hub': 1169,
     'secure': 2083,
     'anonymous': 68,
     'space': 2274,
     'city': 400,
     'shades': 2118,
     'drawn': 693,
     'cabled': 301,
     'stale': 2325,
     'improvised': 1203,
     'feel': 833,
     'temporary': 2498,
     'outpost': 1664,
     'room': 2014,
     'pamela': 1687,
     'landy': 1322,
     'senior': 2097,
     'cia': 395,
     'counterintelligence': 516,
     'officer': 1633,
     'hovering': 1165,
     'communications': 455,
     'console': 487,
     'cronin': 543,
     'pamelas': 1689,
     'early': 725,
     'forties': 932,
     'stonecold': 2365,
     'facade': 796,
     'quarterbacking': 1878,
     'operation': 1653,
     'radio': 1893,
     'kurt': 1312,
     'kim': 1289,
     'techs': 2484,
     'headphones': 1101,
     'ruggedized': 2017,
     'laptops': 1329,
     'comm': 450,
     'spread': 2301,
     'survey': 2434,
     'teddy': 2485,
     'military': 1511,
     'rig': 1986,
     'mobile': 1527,
     'motion': 1548,
     'shake': 2121,
     'tired': 2549,
     'coworkers': 526,
     'parting': 1704,
     'ways': 2747,
     'walking': 2720,
     'entering': 759,
     'doors': 684,
     'smiling': 2242,
     'approached': 79,
     'shift': 2139,
     'security': 2085,
     'hear': 1107,
     'mikeradio': 1510,
     'sleeve': 2222,
     'earpiece': 726,
     'escort': 767,
     'command': 451,
     'post': 1812,
     'works': 2811,
     'board': 219,
     'teams': 2478,
     'listen': 1381,
     'final': 854,
     'green': 1031,
     'listening': 1382,
     'word': 2804,
     'raises': 1901,
     'langley': 1326,
     'patched': 1718,
     'surprised': 2431,
     'martin': 1461,
     'mandarins': 1448,
     'sit': 2201,
     'round': 2016,
     'marshall': 1460,
     'deputy': 611,
     'vicedirector': 2687,
     'charge': 367,
     'tense': 2501,
     'donnie': 679,
     'jack': 1241,
     'weller': 2758,
     'understand': 2638,
     'using': 2668,
     'allocation': 54,
     'buy': 292,
     'lot': 1415,
     'money': 1540,
     'pam': 1686,
     'raw': 1910,
     'unprocessed': 2649,
     'kgb': 1280,
     'files': 849,
     'comparison': 459,
     'shop': 2151,
     'thief': 2518,
     'mole': 1535,
     'vetted': 2683,
     'source': 2272,
     'marty': 1462,
     'does': 671,
     'list': 1380,
     'suspects': 2436,
     'bargain': 144,
     'times': 2544,
     'price': 1829,
     'mandarin': 1447,
     'quality': 1876,
     'issue': 1236,
     'yes': 2837,
     'total': 2562,
     'agreement': 40,
     'theyre': 2516,
     'fakes': 810,
     'expensive': 787,
     'furious': 956,
     'impatient': 1200,
     'gentlemen': 980,
     'ive': 1240,
     'site': 2202,
     'play': 1784,
     'honestly': 1151,
     'talk': 2466,
     'mandarians': 1446,
     'convinced': 500,
     'opportunity': 1656,
     'wash': 2736,
     'game': 963,
     'puts': 1874,
     'nodding': 1606,
     'croninradio': 544,
     'repeat': 1957,
     'passed': 1709,
     'muster': 1567,
     'elevator': 741,
     'vicradio': 2688,
     'waits': 2714,
     'small': 2237,
     'wiring': 2794,
     'infrastructure': 1214,
     'lit': 1384,
     'glare': 1000,
     'someones': 2264,
     'maglight': 1436,
     'gloved': 1005,
     'racks': 1892,
     'electrical': 739,
     'risers': 1997,
     'carefully': 329,
     'explosive': 790,
     'device': 625,
     'pack': 1675,
     'cigarettes': 397,
     'riser': 1996,
     'second': 2081,
     'ones': 1646,
     'special': 2282,
     'taken': 2463,
     'plastic': 1781,
     'mounted': 1551,
     'floor': 897,
     'subpanel': 2406,
     'hold': 1143,
     'piece': 1759,
     'tape': 2469,
     'transferring': 2583,
     'pressing': 1827,
     'button': 290,
     'close': 425,
     'rises': 1998,
     'bracing': 246,
     'door': 681,
     'ivan': 1238,
     'russian': 2027,
     'outside': 1665,
     'darkened': 578,
     'hallway': 1070,
     'holding': 1144,
     'flips': 893,
     'million': 1512,
     'dollars': 675,
     'suite': 2416,
     'offices': 1634,
     'clean': 403,
     'caspiexpetroleum': 340,
     'cherbourg': 379,
     'moscow': 1546,
     'rome': 2009,
     'tehran': 2490,
     'curtains': 562,
     'lights': 1368,
     'sitting': 2204,
     'counting': 517,
     'poring': 1806,
     'document': 667,
     'dozens': 691,
     'sheets': 2134,
     'financial': 856,
     'data': 582,
     'incomprehensibly': 1208,
     'cyrillic': 568,
     'marked': 1456,
     'judging': 1265,
     'seals': 2074,
     'clearance': 406,
     'sign': 2178,
     'offs': 1637,
     'topsecret': 2557,
     'tinny': 2546,
     'pop': 1805,
     'tune': 2620,
     'started': 2337,
     'playing': 1786,
     'hall': 1069,
     'said': 2033,
     'doublecrossed': 687,
     'ankle': 67,
     'shut': 2170,
     'freaked': 938,
     'feet': 835,
     'pushing': 1873,
     'rushes': 2025,
     'past': 1716,
     'sample': 2036,
     'spilling': 2290,
     'snapph': 2248,
     'suppressed': 2427,
     'caliber': 305,
     'shots': 2155,
     'falls': 815,
     'crashing': 532,
     'bullets': 276,
     'tear': 2479,
     'hit': 1139,
     'unscrewing': 2652,
     'silencer': 2184,
     'tucking': 2619,
     'weapon': 2748,
     'whats': 2770,
     'climbing': 419,
     'duffel': 719,
     'stuffing': 2398,
     'ivans': 1239,
     'file': 847,
     'backpack': 122,
     'remove': 1952,
     'single': 2193,
     'sheet': 2133,
     'paper': 1694,
     'exactly': 778,
     'stuff': 2397,
     'tucked': 2618,
     'page': 1682,
     'blur': 216,
     'slipping': 2229,
     'underneath': 2637,
     'tossing': 2561,
     'fell': 836,
     'struggle': 2392,
     'detonation': 624,
     'decives': 599,
     'blows': 213,
     'tidy': 2538,
     'selfcontained': 2091,
     'explosion': 789,
     'flicker': 886,
     'fail': 805,
     'cast': 341,
     'darkness': 579,
     'sudden': 2411,
     'urgent': 2662,
     'power': 1818,
     'went': 2759,
     'whiff': 2774,
     'dread': 694,
     'location': 1392,
     'voices': 2703,
     'piling': 1762,
     'confusion': 478,
     'cascading': 336,
     'ab': 1,
     'drone': 708,
     'barn': 146,
     'stepping': 2357,
     'carrying': 333,
     'gretkov': 1033,
     'professional': 1842,
     'trim': 2601,
     'polished': 1802,
     'dominant': 677,
     'complaining': 460,
     'bring': 264,
     'tosses': 2560,
     'photocopy': 1752,
     'doing': 673,
     'stripping': 2385,
     'shower': 2164,
     'long': 1403,
     'plane': 1779,
     'dumping': 721,
     'sheds': 2132,
     'clothes': 431,
     'workmen': 2810,
     'cluster': 435,
     'cable': 300,
     'winches': 2786,
     'raised': 1900,
     'pours': 1816,
     'crime': 539,
     'police': 1801,
     'workers': 2808,
     'media': 1479,
     'vans': 2673,
     'clogging': 423,
     'mood': 1543,
     'black': 190,
     'ashes': 96,
     'need': 1582,
     'working': 2809,
     'stands': 2330,
     'silent': 2186,
     'staring': 2334,
     'disaster': 649,
     'heartbroken': 1112,
     'footlocker': 917,
     'stash': 2340,
     'setting': 2108,
     'aside': 97,
     'work': 2806,
     'things': 2520,
     'needs': 1586,
     'separate': 2103,
     'pile': 1761,
     'phony': 1750,
     'student': 2394,
     'ids': 1188,
     'loose': 1411,
     'photos': 1754,
     'hairdos': 1066,
     'vacuumpacked': 2671,
     'bags': 129,
     'shoes': 2147,
     'gasolinestoked': 967,
     'burning': 283,
     'rocklined': 2006,
     'pit': 1770,
     'feeding': 832,
     'papers': 1695,
     'belongings': 174,
     'crinkles': 540,
     'reveal': 1973,
     'photo': 1751,
     'burn': 282,
     'gassoaked': 969,
     'holds': 1145,
     'flames': 876,
     'rules': 2018,
     'say': 2045,
     'drop': 709,
     'sticks': 2360,
     'hefting': 1115,
     'strides': 2382,
     'covered': 524,
     'xeroxed': 2829,
     'paperwork': 1696,
     'showandtell': 2162,
     'charges': 368,
     'placed': 1773,
     'lines': 1376,
     'failed': 806,
     'fingerprint': 861,
     'didnt': 633,
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Mapping: 단어 &lt;-&gt; 벡터안의 index no. </span></span><br><span class="line">invert_index_vectorizer = {v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vect.vocabulary_.items()}  <span class="comment"># value : key</span></span><br><span class="line">print(str(invert_index_vectorizer)[:<span class="number">100</span>]+<span class="string">'...'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1898: 'raining', 1366: 'light', 2387: 'strobes', 2763: 'wet', 1001: 'glass', 1978: 'rhythmic', 1673...
</code></pre>
<br>
<h4 id="3-중요-단어-추출-top-3-tf-idf"><a class="markdownIt-Anchor" href="#3-중요-단어-추출-top-3-tf-idf"></a> (3) 중요 단어 추출 - Top 3 TF-IDF</h4>
<p>먼저 TF-IDF Matrix 첫번째 행 (첫 씬)의 Top 3 단어의 index을 출력해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(tf_idf_vect[<span class="number">0</span>].toarray())[<span class="number">0</span>][<span class="number">-3</span>:]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1984, 2387, 1978], dtype=int64)
</code></pre>
<p>즉 단어 벡터중의 1984번(0.2902), 2387번(0.3109), 1978번째(0.3109) 단어가 첫 씬에서 제일 중요한 단어로 뽑혔습니다.</p>
  <br>
<p>이제 전체 TF-IDF matrix 에 적용해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(tf_idf_vect.toarray())[:, <span class="number">-3</span>:]</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    array([[1984, 2387, 1978],
           [1297, 1971, 1097],
           [1693, 2221,  968],
           [ 690,  299, 1482],
           [2823, 1951, 1454],
           [2218, 2815, 1454],
           [2038,  737, 2418],
           [ 852, 2761, 2570],
           [2022,  156, 1352],
           [2250, 2241, 1454],
           [ 342,  321, 2188],
           [ 614, 1557, 1534],
           [ 535, 1884, 1614],
           [2188,  139,   20],
           [ 503,  730, 1458],
           [2790, 2384,  724],
           [ 169,  915, 2444],
           [1905, 1259,   53],
           [2566, 1335,  828],
           [2300,  281, 1702],
           [2503, 1502, 2567],
           [ 794, 1454, 1018],
           [ 698, 2559, 1252],
           [1871,  237, 1454],
           [ 204,  911, 2591],
           [ 237,  596, 1454],
           [  52,  941, 1036],
           [ 211, 1156,  206],
           [1193, 2712, 1454],
           [  52, 1809, 2462],
           [ 237, 1454,  702],
           [2130,  237, 1454],
           [1995, 1890,  321],
           [1011,  259, 1454],
           [1985, 2216, 1819],
           [ 420, 2276, 1454],
           [2019, 1103, 2059],
           [2177,  353, 1252],
           [1642, 1291, 2797],
           [1454, 1012, 2439],
           [2000, 2429, 2051],
           [2111, 1559, 2661],
           [1737, 1291, 2429],
           [1116, 2079,   46],
           [2634,  697,  392],
           [1723, 1015, 1071],
           [1443, 2700, 2486],
           [ 332, 2354,  786],
           [1165,  543,  975],
           [1169, 2434, 1986],
           [1509, 2486, 2335],
           [1001, 2686, 1509],
           [1289,  854,  219],
           [2758, 1687, 1460],
           [ 544, 1031,  854],
           [2686,  741,  726],
           [ 790,  625, 2794],
           [ 955,  367, 2583],
           [ 337, 1238, 2686],
           [ 340, 1634, 2490],
           [1238, 2248, 2686],
           [ 624,  789, 2538],
           [ 579,  341,  805],
           [ 543,  270,  577],
           [  68,  146,  708],
           [1291, 1100, 1069],
           [ 162, 1291, 1033],
           [ 300, 2786, 1900],
           [ 543, 1687, 2380],
           [ 431,  782,  917],
           [2006,  128, 1751],
           [1687,  543, 2485],
           [ 552, 1866,  235],
           [2695,  762, 1102],
           [ 265, 2641,   56],
           [ 612, 1691,  441],
           [1654,  692, 1363],
           [2136,  243, 1688],
           [   7, 2848,    6],
           [2596, 1687,    4],
           [2635, 1483,  841],
           [ 653, 2650, 1882],
           [1687,  481,    4],
           [1715, 1198, 1633],
           [2219, 2482,  169],
           [1541, 2423,  538],
           [ 322, 1633, 1198],
           [1460,    4,  414],
           [1307,  270, 1593],
           [1407, 1687,  543],
           [ 237,  491, 1593],
           [ 792,  348, 2665],
           [1055, 1747, 1593],
           [2010, 1868, 1403],
           [  80, 2415, 2611],
           [2361, 1747, 1593],
           [1687, 1594, 1688],
           [1310, 1593,  143],
           [2825, 1688, 1594],
           [1460,    4, 1687],
           [   4,  508, 2848],
           [1745,  983, 1612],
           [ 180,  491, 1690],
           [1496,  132, 1600],
           [1687, 1105, 1600],
           [2849, 2211, 2378],
           [ 173, 1687, 1600],
           [1757, 2379,  652],
           [2368, 2086, 1609],
           [   4, 1312, 1572],
           [1725, 1863, 1418],
           [1873, 1274,  270],
           [1291, 2718,  683],
           [ 108, 1033, 2421],
           [1104,  650,  382],
           [ 491,  237, 1248],
           [2768, 1561, 1247],
           [ 939,  237, 1248],
           [1561, 2008, 1721],
           [ 883,  623, 1248],
           [ 944, 1561, 1246],
           [ 855, 1248, 1055],
           [ 458, 1914, 1250],
           [ 930,  966, 2550],
           [2380, 2516, 2625],
           [ 670,  228,   81],
           [2660, 1780,  902],
           [2371, 2553, 2515],
           [1716,  706,   93],
           [ 926,  780, 2848],
           [1585,  659, 1118],
           [1967, 1180,  208],
           [1992,  268, 2741],
           [ 237, 1521, 2377],
           [2178, 2003, 1296],
           [ 608, 2504,  970],
           [2849,  237,  706],
           [1655, 1049, 2700],
           [1160, 1322, 2197],
           [2375, 2223, 1776],
           [2475,  725, 2381],
           [ 703,  258,  481],
           [2646, 2229,  467],
           [ 237, 1059, 2067],
           [1828, 1669, 2112],
           [ 741, 1390,  783],
           [1562, 2407,  543],
           [ 295, 1269, 1906],
           [2437,  771,  703],
           [1291, 2245,  260],
           [2368, 2008, 2437],
           [ 891, 1400, 1960],
           [  62, 2185, 1676],
           [1465,  919,  241],
           [2658, 1358, 1582],
           [1091,  595, 1002],
           [ 738, 1424, 1600],
           [2726, 1600, 1687],
           [2451, 2787,  273],
           [   4,  680, 1687],
           [ 755,  401,  155],
           [1593,    4, 1413],
           [ 607, 1600, 1817],
           [2329, 1144,  254],
           [  80, 1601, 2582],
           [ 606, 1600, 2582],
           [1434,  630, 1381],
           [2551, 1350,  173],
           [ 727, 2137, 2702],
           [1931, 1600, 1307],
           [1692,  372, 1893],
           [1830,  237, 1600],
           [ 504, 2344,  606],
           [2408,  819,  763],
           [2623, 1342, 1228],
           [1033, 1319,  890],
           [ 521,  481,  293],
           [  10,  826, 2586],
           [ 167,  237, 1600],
           [2014, 1687, 2137],
           [1700,  218, 2120],
           [1225, 2750,  942],
           [ 442, 2848,    4],
           [ 981,  258, 1918],
           [2323, 2355, 2848],
           [ 221,    4, 2848],
           [   1,    0, 1160],
           [   8, 2014,  411],
           [1984,  694, 1552],
           [1775, 2133,  829],
           [1441, 2053, 2205],
           [  55,  275,  267],
           [1647, 1306, 2014],
           [2415, 2416,  878],
           [2780,  650, 1171],
           [2329,  673,  256],
           [ 833, 1111, 1813],
           [ 366,  543, 2485],
           [1896, 2495, 1196],
           [2604,  651, 1389],
           [1344, 1272,  882],
           [1558, 1517, 1590],
           [1697, 1661, 2192],
           [1444,  319, 2507],
           [2615, 2318,  255],
           [2746, 2477, 2441],
           [1730, 2014, 1988],
           [ 124,  133, 2435],
           [1439, 1712, 1700],
           [1282, 1137,  896],
           [2788, 1548,  152],
           [1659, 1340, 2015],
           [1486, 2441, 2011],
           [1555, 2767,  349],
           [ 204,  762,  784],
           [1894,  407, 2014],
           [ 796,   88, 2077],
           [2728, 2323, 2659],
           [1291, 2011, 1110],
           [ 577,  374, 2485],
           [2300, 1830,   11],
           [1160, 2485,    4],
           [1147, 2777,  954],
           [2284,  973,  823],
           [ 116, 1548, 2480],
           [2235,  334, 1721],
           [2207, 1801, 2000],
           [ 684, 1895, 2582],
           [2149, 1321, 1354],
           [1056,  580,   45],
           [2424, 1346,  145],
           [2159,  145, 2582],
           [ 752,  498, 2246],
           [2014, 1687,  543],
           [1687, 1590,  543],
           [1193, 1033,    4],
           [1333, 2234, 2082],
           [2230, 1291, 1033],
           [ 238,  870,    4],
           [ 543, 1687, 2485],
           [1372,  493,   91],
           [1396, 1970, 2341],
           [1301,  318, 2236],
           [1506,  791, 2577],
           [1687, 2460, 2485],
           [ 615,  230, 1800],
           [2537,  474, 2696],
           [1490, 1312,  543],
           [ 357,  237, 1454],
           [ 187, 2244, 2597],
           [ 543, 1687,    4],
           [ 741, 1999, 1201],
           [1685, 1747, 1033],
           [2588,  543, 1747],
           [1305, 1033,    4],
           [1938,  925,  924],
           [1305,  543, 2485],
           [1170, 1687,    4],
           [ 653,  728, 1782],
           [1266,   90,  817],
           [2626,  703, 2475],
           [1416, 1279, 2305],
           [2711,  703, 2475],
           [ 113, 1177, 1769],
           [1225, 2166,  820],
           [1272,  881,  297],
           [2638,  880,  674],
           [2129,  960, 1500],
           [ 351,  903,  774],
           [1731, 2240, 2446],
           [ 642, 2137, 2475],
           [2076, 1371,  369],
           [  72,  703, 2475],
           [1915, 2070, 2475],
           [1546,  334, 2480],
           [ 707, 1913, 1989],
           [2215,  872, 2669],
           [1999,  488, 1182],
           [1291,  508, 2208],
           [2367, 1361, 2286],
           [ 918, 1670,  179],
           [2215, 1713, 1670],
           [1649, 2831, 1142],
           [1768, 1268, 1361],
           [ 434,  137, 2535],
           [2081,  181, 2140],
           [1867,  664, 1219],
           [1344, 1056, 1546],
           [1556,  197, 1123],
           [1077, 1546,  709],
           [2086, 2390,   89],
           [1175,  160, 1176],
           [1057, 1315, 1088],
           [1110, 1260,  454],
           [1546, 2022, 1457],
           [1127, 1045, 2085],
           [ 630, 2304,  533],
           [1019,  280, 1453],
           [1291, 2304, 2327],
           [2469,  716,  233],
           [ 549,  884,  844],
           [2701,  493, 2449],
           [ 237,  295,  296],
           [ 754,  327, 1729],
           [1683,  702,  466],
           [1061, 1316,  714],
           [ 334, 1987, 1801],
           [2622, 1291,  295],
           [ 237, 1407,   51],
           [ 654, 1636, 2453],
           [1155, 2569, 1737],
           [1037, 1494, 2488],
           [ 419,  887, 1271],
           [1277,  676,  661],
           [ 555,  237, 1232],
           [ 445,  177, 1560],
           [ 237,   51, 1687],
           [1600, 1621, 2102],
           [ 162, 1566, 1864],
           [  46,  803,  646]], dtype=int64)
</pre>
</div>
<br>
<p>이를 변수로 저장해서 원본 데이터셋에 추가하면 다음와 같습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">top_3_words = np.argsort(tf_idf_vect.toarray())[:, <span class="number">-3</span>:]</span><br><span class="line">df[<span class="string">'important_word_index'</span>] = pd.Series(top_3_words.tolist())</span><br><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
      <th>processed_text</th>
      <th>important_word_index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
      <td>its raining light strobes across the wet glas...</td>
      <td>[1984, 2387, 1978]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
      <td>a on his knee a syringe and a gun the eyes of...</td>
      <td>[1297, 1971, 1097]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
      <td>bournes eyes open panicked gasping trying to ...</td>
      <td>[1693, 2221, 968]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
      <td>a bourne moving for the medicine cabinet digs...</td>
      <td>[690, 299, 1482]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
      <td>one minute later bourne moves out onto the ve...</td>
      <td>[2823, 1951, 1454]</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p>하지만 지금 중요한 단어의 index만 표시 되고, 과연 어떤 단어인지를 모릅니다. 그래서 우리는 방금 추출한 “벡터”-“단어” Mapping 결과를 이용해 index에 해당하는 단어들을 추출하여 데이터셋에 저장하겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># index -&gt; word 변환함수 만들기</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_to_word</span><span class="params">(x)</span>:</span></span><br><span class="line">    word_list = []</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> x:</span><br><span class="line">        word_list.append(invert_index_vectorizer[index])</span><br><span class="line">    <span class="keyword">return</span> word_list</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'important_words'</span>] = df[<span class="string">'important_word_index'</span>].apply(<span class="keyword">lambda</span> x: convert_to_word(x))</span><br><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
      <th>processed_text</th>
      <th>important_word_index</th>
      <th>important_words</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
      <td>its raining light strobes across the wet glas...</td>
      <td>[1984, 2387, 1978]</td>
      <td>[riding, strobes, rhythmic]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
      <td>a on his knee a syringe and a gun the eyes of...</td>
      <td>[1297, 1971, 1097]</td>
      <td>[knee, returns, head]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
      <td>bournes eyes open panicked gasping trying to ...</td>
      <td>[1693, 2221, 968]</td>
      <td>[panicked, sleeps, gasping]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
      <td>a bourne moving for the medicine cabinet digs...</td>
      <td>[690, 299, 1482]</td>
      <td>[downs, cabinet, medicine]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
      <td>one minute later bourne moves out onto the ve...</td>
      <td>[2823, 1951, 1454]</td>
      <td>[write, remember, marie]</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p>이제 장면별 중요한 단어 Top 3가 모두 출력됐습니다.</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【EXERCISE】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Text Mining</tag>
      </tags>
  </entry>
</search>
