<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown 常用语法（持续更新）</title>
    <url>/2020/05/04/Markdown-Syntax/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<h2 id="markdown-常用语法"><a class="markdownIt-Anchor" href="#markdown-常用语法"></a> <strong>Markdown 常用语法</strong></h2>
<br>
<h3 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> <strong>标题</strong></h3>
<p>一级标题： “#” + 空格 + “一级标题”<br>
二级标题： “##” + 空格 + “二级标题”<br>
三级标题： “###” + 空格 + “三级标题”<br>
……<br>
以此类推 【最多到6级】<br>
<br></p>
<h3 id="换行"><a class="markdownIt-Anchor" href="#换行"></a> <strong>换行</strong></h3>
<p>“内容” 末尾 + 2个空格 + Enter</p>
<br>
<h3 id="斜体"><a class="markdownIt-Anchor" href="#斜体"></a> <strong>斜体</strong></h3>
<ul>
<li>
<p>方法一：“内容”前后加1个 * 号（无空格）</p>
</li>
<li>
<p>方法二：“内容”前后加1个下划线（无空格）</p>
</li>
</ul>
<blockquote>
<p>*“内容” *    ——&gt;  <em>“内容”</em></p>
<p>_ “内容” _   ——&gt;  <em>内容</em></p>
</blockquote>
<br>
<h3 id="加粗"><a class="markdownIt-Anchor" href="#加粗"></a> <strong>加粗</strong></h3>
<ul>
<li>
<p>方法一：“内容”前后加2个 * 号（无空格）</p>
</li>
<li>
<p>方法二：“内容”前后加2个下划线（无空格）</p>
</li>
</ul>
<blockquote>
<p>** “内容” **   ——&gt;  <strong>"内容"</strong></p>
<p>__ “内容” __   ——&gt;  <strong>“内容”</strong></p>
</blockquote>
<br>
<h3 id="斜体加粗"><a class="markdownIt-Anchor" href="#斜体加粗"></a> <strong>斜体加粗</strong></h3>
<p>“内容”前后加 3 个 * 号 （无空格）</p>
<blockquote>
<p><em><strong>“内容”</strong></em></p>
</blockquote>
<br>
<h3 id="删除线"><a class="markdownIt-Anchor" href="#删除线"></a> <strong>删除线</strong></h3>
<p>”内容”前后加 2 个波浪线（~）</p>
<blockquote>
<p>~~ “内容” ~~   ——&gt;  <s>“内容”</s></p>
</blockquote>
<br>
<h3 id="高亮"><a class="markdownIt-Anchor" href="#高亮"></a> <strong>高亮</strong></h3>
<p>“内容”前后加 2 个 = 号</p>
<blockquote>
<p>== “内容” ==   ——&gt;  <mark>“内容”</mark></p>
</blockquote>
<br>
<h3 id="字体颜色字号"><a class="markdownIt-Anchor" href="#字体颜色字号"></a> <strong>字体，颜色，字号</strong></h3>
<p>使用 font 标签</p>
 <figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span>  <span class="attr">face</span>=<span class="string">'Microsift Yahei'</span>  <span class="attr">color</span>=<span class="string">'red'</span>  <span class="attr">size</span>=<span class="string">'6'</span>&gt;</span> 字体，颜色和字号 <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<p><font color="red" size="6"> 字体，颜色和字号 </font></p>
<br>
<h3 id="上标-下标"><a class="markdownIt-Anchor" href="#上标-下标"></a> <strong>上标 &amp; 下标</strong></h3>
<ul>
<li>
<p>上标：“内容”前后加 1 个 ^ 号</p>
</li>
<li>
<p>下标：“内容”前后加 1 个 ~ 号</p>
</li>
</ul>
<blockquote>
<p>我是 ^ 上标 ^  ——&gt;  我是<sup>上标</sup></p>
<p>我是 ~ 下标 ~  ——&gt; 我是<sub>下标</sub></p>
</blockquote>
<br>
<h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> <strong>引用</strong></h3>
<p>“内容”前加 &gt; 号</p>
<blockquote>
<p>“内容”</p>
</blockquote>
<p>引用号可叠用，&gt;号越多，级数越低<br>
例如：可以使用&gt;, &gt;&gt;, &gt;&gt;&gt; 的形式</p>
<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
</blockquote>
</blockquote>
</blockquote>
<br>
<h3 id="文字内容对齐设置"><a class="markdownIt-Anchor" href="#文字内容对齐设置"></a> <strong>文字内容对齐设置</strong></h3>
<p><strong>1. 使用div标签：</strong></p>
<pre><code><figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: right"</span>&gt;</span>your-text-here<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</code></pre>
<blockquote>
<div style="text-align: left">居左</div>
<div style="text-align: center">居中</div>
<div style="text-align: right">居右</div>
</blockquote>
<br>
<p><strong>2. 使用p标签：(在Jupyter Notebook中不适用)</strong></p>
<p>居中：<code>&lt;center&gt; 内容 &lt;/center&gt;</code></p>
<p>居左/居右：<code>&lt;p align='left'&gt; 内容 &lt;/p&gt;</code></p>
<blockquote>
<p align="left"> 居左 </p>
<center> 居中 </center>
<p align="right"> 居右 </p>
</blockquote>
<br>
<h3 id="插入链接"><a class="markdownIt-Anchor" href="#插入链接"></a> <strong>插入链接</strong></h3>
<p>​     中括号内输入“显示的文字”，紧接着小括号内输入“网址链接”<br>
​    【注意：网站地址需要 http 开头，最好直接复制】</p>
<blockquote>
<p><a href="http://www.baidu.com/" target="_blank" rel="noopener">点我进入百度</a></p>
</blockquote>
<br>
<h3 id="插入图片"><a class="markdownIt-Anchor" href="#插入图片"></a> <strong>插入图片</strong></h3>
<p>​     感叹号 + 中括号内输入“显示的文字”，紧接着小括号内输入“图片链接”<br>
​    【注意：图片链接非网页的网址栏链接，而是右键“复制图片地址”得到的链接 (Chrome)】</p>
<blockquote>
<p><img src="http://t9.baidu.com/it/u=1307125826,3433407105&amp;fm=79&amp;app=86&amp;f=JPEG?w=5760&amp;h=3240" alt="图片"></p>
</blockquote>
<br>
<ul>
<li>
<p><strong>调整图片大小：</strong></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"链接"</span> <span class="attr">width</span>=<span class="string">"宽度(数字or百分比)"</span> <span class="attr">height</span>=<span class="string">"高度"</span> <span class="attr">alt</span>=<span class="string">"图片名称"</span> <span class="attr">align</span>=<span class="string">center/left/right</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<br>
<h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> <strong>列表</strong></h3>
<h4 id="1-有序列表"><a class="markdownIt-Anchor" href="#1-有序列表"></a> <strong>（1） 有序列表</strong></h4>
<p>​      （序号1+点+空格）+内容+回车<br>
​      （序号2+点+空格）+内容+回车<br>
​      （序号3+点+空格）+内容+回车</p>
<blockquote>
<ol>
<li>第一行</li>
<li>第二行</li>
<li>第三行</li>
</ol>
</blockquote>
<p>​      【注意】：系统会默认调整有序列表的序列数。即，即使你误输入成了1.，2.，4.，系统也会自动更正为 1.，2.，3.</p>
<blockquote>
<ol>
<li>第一点</li>
<li>第二点</li>
<li>第四点</li>
</ol>
</blockquote>
<br>
<h4 id="2无序列表"><a class="markdownIt-Anchor" href="#2无序列表"></a> <strong>（2）无序列表</strong></h4>
<p>​        使用“ + ”+空格+内容<br>
​       ​ 或者“ - ”+空格+内容<br>
​       ​ 或者“ * ”+空格+内容<br>
​       下一级：前面加 tab</p>
<blockquote>
<ul>
<li>
<p>第一章</p>
</li>
<li>
<p>第二章</p>
</li>
<li>
<p>第三章</p>
<ul>
<li>第一节</li>
</ul>
</li>
</ul>
</blockquote>
<br>
<h4 id="3任务列表"><a class="markdownIt-Anchor" href="#3任务列表"></a> <strong>（3）任务列表</strong></h4>
<p>​       短横线 + 1 个空格 + 中括号（括号中间带 1 个空格） + 1 个空格 + “内容”</p>
<blockquote>
<ul>
<li>[x] 学习python</li>
<li>[ ] 学习SQL</li>
</ul>
</blockquote>
<br>
<h3 id="添加表格"><a class="markdownIt-Anchor" href="#添加表格"></a> <strong>添加表格</strong></h3>
<p>竖线作为列分界线，换行竖线中间输入短横线作为行分界线</p>
<table>
<thead>
<tr>
<th>1</th>
<th>2</th>
<th>3</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table>
<br>
<h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> <strong>代码</strong></h3>
<p>三个 ` 号，再输入所使用的编程语言</p>
 <figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"Python"</span>)  <span class="comment"># python</span></span><br></pre></td></tr></tbody></table></figure>
 <figure class="highlight r"><table><tbody><tr><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)  <span class="comment"># R语言</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h3 id="插入目录-only-for-typora"><a class="markdownIt-Anchor" href="#插入目录-only-for-typora"></a> <strong>插入目录 [Only for Typora]</strong></h3>
<ul>
<li>中括号内输入toc</li>
<li>In Hexo: @[toc] (在使用hexo-renderer-markdown-it-plus插件时)</li>
</ul>
<br>
<br>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Usage</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>在Hexo博文中添加本地图片的方法（基于Typora编辑器）</title>
    <url>/2020/05/06/Hexo-Insert-local-images/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<p>当我们想在markdown文档中添加网络图片时，可以使用命令<code>!['图片名称'](图片网络地址)</code>进行实现，然而这条命令却不适用于添加本地图片。本文将介绍在使用Typora编辑器编辑Hexo博文时，向markdown文档中添加本地图片的方法。快来看看吧</p>
<a id="more"></a>
<br>
<p></p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%89%8D-%E8%BF%9B%E8%A1%8C%E9%85%8D%E7%BD%AE"><strong>【编写博客前】— 进行配置</strong></a></li>
<li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6-%E5%9B%BE%E7%89%87%E5%AF%BC%E5%85%A5%E6%96%B9%E6%B3%95"><strong>【编写博客时】— 图片导入方法</strong></a></li>
<li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%90%8E-%E5%9B%BE%E7%89%87%E5%AD%98%E6%A1%A3%E7%BB%93%E6%9E%9C"><strong>【编写博客后】— 图片存档结果</strong></a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h3 id="编写博客前-进行配置"><a class="markdownIt-Anchor" href="#编写博客前-进行配置"></a> <strong>【编写博客前】— 进行配置</strong></h3>
<br>
<ol>
<li>
<p><strong>建立 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹(Asset Floder)</a>，用来保存添加到博文中的本地图片</strong></p>
<ul>
<li>在本地Hexo根目录下的<code>source</code>文件夹中创建一个名为 <code>images</code> 的文件夹</li>
</ul>
</li>
<li>
<p><strong>在Typora中设置图片的相对路径</strong></p>
<ul>
<li>打开Typora的<code>文件 &gt; 偏好设置 &gt; 图像</code>，进行如下设置：</li>
</ul>
<center><img src="/images/Hexo-Local-Pictures/image-20200506223313787.png" alt="image-20200506223313787" style="zoom:50%;"></center>
<ul>
<li>此设置会使<code>source/images</code>文件夹下新增一个与所编辑的markdown文档同名的文件夹，文档中所添加的 <em>本地图片</em> 都将存档于此（即拥有了如下路径：<code>'hexo根目录'/source/images/'md文档名'/'图片名称'）</code>)。<br>
<br></li>
</ul>
</li>
<li>
<p><strong>撰写markdown文档时配置 <em>图片根目录</em> ，使其能够同步到hexo博客中去</strong></p>
<ul>
<li>撰写博文时，先点击Typora菜单栏中的<code>格式 &gt; 图像 &gt; 设置图片根目录</code> , 将根目录配置为<code>'hexo根目录'/source</code>。然后再撰写博文。【注：每篇需要添加本地图片的博文都要先进行此步骤】</li>
</ul>
<center><img src="/images/Hexo-Local-Pictures/1.png" alt="1" style="zoom:50%;"></center>
</li>
</ol>
<br>
<h3 id="编写博客时-图片导入方法"><a class="markdownIt-Anchor" href="#编写博客时-图片导入方法"></a> <strong>【编写博客时】— 图片导入方法</strong></h3>
 <br>
<ol>
<li><strong>直接拖拽</strong>
<ul>
<li>将原本存放于其他本地文件夹中的图片直接拖拽到文档中的相应位置中去</li>
<li>此时图片会被自动存档至生成的同名文件夹<code>'hexo根目录'/source/images/'md文档名'</code>中</li>
<li>文档中图片地址的代码会显示成 <em>自动生成的相对路径</em>，即<code>/images/'md文档名'/'图片名称'</code><br>
<br></li>
</ul>
</li>
<li><strong>利用相对路径调取</strong>
<ul>
<li>当利用 <em>方法1</em> 插入了至少一张图片时（即已生成同名文件夹时），便可以把接下来要插入的图片复制到此同名文件夹中，在文档中<em>利用相对路径</em> 调取图片：</li>
<li>所使用的命令是：<code>![图片显示名称](/images/'md文档名'/'图片名称')</code></li>
<li>这里的<code>图片显示名称</code>不必与文件夹中保存的<code>图片名称</code>保持一致，<code>'图片名称'</code>中要记得包含图片格式（例如：tupian.jpg 或 picture.png 等）<br>
<br></li>
</ul>
</li>
</ol>
<p>【注意】当还没有利用 <em>方法1</em> 插入过图片时（即同名文件夹尚未生成时），<strong>不可以自己创建同名文件夹</strong>保存图片。亲测不好使！！（.md文档中可以显示，但是hexo博文中无法显示）</p>
<br>
<h3 id="编写博客后-图片存档结果"><a class="markdownIt-Anchor" href="#编写博客后-图片存档结果"></a> <strong>【编写博客后】— 图片存档结果</strong></h3>
<p>在利用上述方法完成了含有本地图片的markdown博文后，我们的资源文件夹<code>'hexo根目录'/source/images/</code>内最终会显示成什么样子呢？</p>
<ul>
<li>
<p>每一篇配置了图片根目录的博文（即【编写博客前】的第3步），都会在<code>'hexo根目录'/source/images/</code>文件夹中有一个与文档名称同名的文件夹<code>'hexo根目录'/source/images/'md文档名'</code></p>
</li>
<li>
<p>该文件夹中会保存博文编写中曾经添加的<strong>所有本地图片</strong></p>
<ul>
<li><strong>所有</strong>的含义是：即使编辑过程中某些本地图片在添加后又被删除了，它们也仍然会保留在文件夹中，即该文件夹会备份你在博文中添加的 <em>所有本地图片历史</em></li>
<li><strong>本地图片</strong>的含义是：这里只会保存插入的本地图片，而不会保存插入的网络图片。尽管在【编写博客前】的第2步配置中，我们也同样勾选了<code>对网络位置的图片应用上述规则</code>。（请原谅我并不知道其中的缘由。。）</li>
</ul>
</li>
</ul>
<p>就此，在Typora编辑器中编写Hexo博文时，向markdown文档中添加本地图片的方法就介绍完毕啦！快去应用到你的博文中去吧~</p>
 <br>  
 <br>  
 <br> 
 <hr>
<p>本文参考了<a href="https://yinyoupoet.github.io/" target="_blank" rel="noopener">yinyoupoet</a>的<a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a><br>
更多关于Typora中插入图片的内容可以参考<a href="https://support.typora.io/Images/#when-insert-images" target="_blank" rel="noopener">Typora的官方说明</a></p>
 <hr>  
 <br>  
 <br>  
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Usage</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Git Pages+Hexo搭建博客过程中的参考资料</title>
    <url>/2020/05/08/Reference/</url>
    <content><![CDATA[<font face="Microsoft YaHei">
<h3 id="博客搭建"><a class="markdownIt-Anchor" href="#博客搭建"></a> 博客搭建</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1zp411o7y6" target="_blank" rel="noopener">bilibili — 超简单易懂的Git入门教程</a></li>
<li><a href="https://www.bilibili.com/video/BV1Ep411R7cJ" target="_blank" rel="noopener">bilibili — github+hexo搭建个人博客</a></li>
<li><a href="https://www.bilibili.com/video/BV1zp411R7gz" target="_blank" rel="noopener">bilibili — github博客搭建（二）：Markdown语法及hexo主题修改</a></li>
<li><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">Git Pages + Jekyll/Hexo搭建自己的博客(最全总结你想知道的都在这里了)</a></li>
</ul>
<br>
<h3 id="网页配置-主题配置"><a class="markdownIt-Anchor" href="#网页配置-主题配置"></a> 网页配置 &amp; 主题配置</h3>
<ul>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo Usage Documents</a></li>
<li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Themes</a>
<ul>
<li><a href="https://github.com/niemingzhao/niemingzhao.github.io/tree/theme" target="_blank" rel="noopener">default</a> — <a href="http://www.niemingzhao.top/" target="_blank" rel="noopener">[Demo]</a></li>
<li><a href="https://github.com/tomotoes/hexo-theme-tomotoes" target="_blank" rel="noopener">tomotoes</a> — <a href="https://tomotoes.com/" target="_blank" rel="noopener">[Demo]</a> / <a href="https://github.com/tomotoes/hexo-theme-tomotoes/wiki" target="_blank" rel="noopener">[Documents]</a></li>
<li><a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">Butterfly</a> — <a href="https://jerryc.me/" target="_blank" rel="noopener">[Demo]</a> / <a href="https://docs.jerryc.me/#/" target="_blank" rel="noopener">[Documents]</a>  (应用中)</li>
</ul>
</li>
<li><a href="https://blog.csdn.net/muzilanlan/article/details/81542917" target="_blank" rel="noopener">Git Pages + Jekyll/Hexo搭建自己的博客(最全总结你想知道的都在这里了)</a></li>
<li><a href="https://blog.csdn.net/qq_41462923/article/details/100149605" target="_blank" rel="noopener">Hexo主题升级方法（实用！）</a></li>
</ul>
<br>
<h3 id="markdown渲染"><a class="markdownIt-Anchor" href="#markdown渲染"></a> Markdown渲染</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1zp411R7gz" target="_blank" rel="noopener">bilibili — github博客搭建（二）：Markdown语法及hexo主题修改</a> [字体修改方法(17:30)]</li>
<li><a href="https://www.dazhuanlan.com/2019/10/06/5d99b91c5f0d5/#%E9%80%89%E9%A1%B9%E5%8D%A1-2" target="_blank" rel="noopener">Markdown在Hexo中的使用实例</a> [分割线，空行插入方法]</li>
<li>Markdown渲染插件
<ul>
<li><a href="https://www.jianshu.com/p/f43dab5dbb48" target="_blank" rel="noopener">hexo-renderer-markdown-it 插件 快速配置</a></li>
<li><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a> [<a href="https://github.com/hexojs/hexo-renderer-markdown-it/wiki/Getting-Started" target="_blank" rel="noopener">Documents</a>]</li>
<li><a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" target="_blank" rel="noopener">hexo-renderer-markdown-it-plus</a> （应用中）</li>
<li><a href="https://github.com/niemingzhao/hexo-renderer-markdown" target="_blank" rel="noopener">hexo-renderer-markdown</a></li>
</ul>
</li>
<li>插入本地图片
<ul>
<li><a href="https://blog.csdn.net/dailingnan0827/article/details/86412414" target="_blank" rel="noopener">markdown插入本地图片小技巧</a></li>
<li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a>（应用中）</li>
</ul>
</li>
</ul>
<br>
<h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3>
<ul>
<li>记录网站访问量:
<ul>
<li><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a></li>
<li><a href="http://blog.sciencenet.cn/blog-3247241-1139774.html" target="_blank" rel="noopener">hexo博客解决不蒜子统计无法显示问题</a></li>
</ul>
</li>
<li>设置博客评论：
<ul>
<li><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Gitalk申请页面</a></li>
<li><a href="https://www.jianshu.com/p/656e6101bf0f" target="_blank" rel="noopener">在个人博客里添加评论系统–Gitalk</a></li>
<li><a href="https://www.jianshu.com/p/b4ca8e7c7980" target="_blank" rel="noopener">hexo 使用 gitalk 评论组件的几个注意点</a></li>
</ul>
</li>
<li>多语言版本:
<ul>
<li>
<p><a href="https://blog.kuretru.com/posts/812a334f/" target="_blank" rel="noopener">Hexo 巧用 abbrlink 插件实现文章多语言版本</a></p>
</li>
<li>
<p><a href="https://www.v2ex.com/amp/t/280102" target="_blank" rel="noopener">(既然没人帮我，那就)自己弄了个 Hexo 多语言 index 生成插件</a></p>
</li>
</ul>
</li>
<li>更改tag大小写后出现404页面
<ul>
<li><a href="http://1mhz.me/2015/hexo-deploy-case-sensitive/" target="_blank" rel="noopener">Hexo 部署到 Github Pages 文件夹大小写问题</a></li>
</ul>
</li>
<li>更改博客 Front Page 的默认配置
<ul>
<li><a href="https://zhangjiejun.com/posts/config_Front-matter_in_hexo/" target="_blank" rel="noopener">hexo博客Front-matter模板配置</a></li>
</ul>
</li>
</ul>
<br>
<h3 id="git-github"><a class="markdownIt-Anchor" href="#git-github"></a> Git &amp; Github</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Xx411m7kn" target="_blank" rel="noopener">bilibili — 【教程】学会Git玩转Github【全】</a></li>
<li><a href="https://www.bilibili.com/video/BV1zp411o7y6" target="_blank" rel="noopener">bilibili — 超简单易懂的Git入门教程</a></li>
<li><a href="https://www.cnblogs.com/flora5/p/7152556.html" target="_blank" rel="noopener">Git与Github的连接与使用</a></li>
<li><a href="https://www.jianshu.com/p/296d22275cdd" target="_blank" rel="noopener">Git和GitHub使用教程</a></li>
</ul>
<br>
<h3 id="jupyter-notebook"><a class="markdownIt-Anchor" href="#jupyter-notebook"></a> Jupyter Notebook</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Q4411H7fJ" target="_blank" rel="noopener">bilibili — python数据分析神器Jupyter notebook快速入门</a></li>
<li><a href="https://www.bilibili.com/video/BV1bx411e77u" target="_blank" rel="noopener">bilibili —【冷门教学】记笔记神器-jupyter notebook 第二弹</a></li>
<li><a href="https://blog.csdn.net/qq_27825451/article/details/84427269" target="_blank" rel="noopener">史上最详细、最完全的jupyter notebook使用教程，Python使用者必备！——ipython系列之三</a></li>
<li><a href="https://blog.csdn.net/guleileo/article/details/80490921?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-6" target="_blank" rel="noopener">机器学习新手必看：Jupyter Notebook入门指南</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1471240" target="_blank" rel="noopener">Jupyter notebook简介及嵌入Hexo博客中</a></li>
<li><a href="https://www.jianshu.com/p/6c1196f12302" target="_blank" rel="noopener">用 Hexo 搭建个人博客-02：进阶试验（包括添加Jupyter Notebook支持的方法）</a></li>
<li><a href="https://www.pianshen.com/article/81761066910/" target="_blank" rel="noopener">如何在你的Jupyter Notebook中使用R语言？</a></li>
</ul>
<br>
<h3 id="markdown-typora"><a class="markdownIt-Anchor" href="#markdown-typora"></a> Markdown &amp; Typora</h3>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Yb411c7Hi" target="_blank" rel="noopener">bilibili — 二十分钟精通排版神器Markdown</a></li>
<li><a href="https://typora.io/" target="_blank" rel="noopener">Typora官网</a> [<a href="http://theme.typora.io/doc/" target="_blank" rel="noopener">Documents</a>]</li>
<li><a href="https://www.cnblogs.com/zhiyin1209/p/12264711.html" target="_blank" rel="noopener">Typora中下载并安装主题</a></li>
<li><a href="https://www.bilibili.com/video/BV1yW411s7og" target="_blank" rel="noopener">bilibili — Typora 编辑器 —— 书写即为美学</a></li>
<li><a href="https://www.bilibili.com/video/BV1R4411575c" target="_blank" rel="noopener">bilibili — 【软件教程】如何用Typora记笔记？ | 附带Markdown基础教程</a></li>
<li><a href="http://www.95408.com/blog/3283.html" target="_blank" rel="noopener">Typora设置（中文字体、颜色、行距、内边距等）</a></li>
<li>Markdown中插入本地图片
<ul>
<li><a href="https://blog.csdn.net/dailingnan0827/article/details/86412414" target="_blank" rel="noopener">markdown插入本地图片小技巧</a></li>
<li><a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a></li>
</ul>
</li>
</ul>
<br>
<h3 id="html"><a class="markdownIt-Anchor" href="#html"></a> HTML</h3>
<ul>
<li>表格样式
<ul>
<li><a href="https://blog.csdn.net/chelen_jak/article/details/82112640" target="_blank" rel="noopener">好看的table css样式</a></li>
<li><a href="https://www.runoob.com/css/css-table.html" target="_blank" rel="noopener">CSS 列表样式</a></li>
<li><a href="https://www.cnblogs.com/czlovezmt/p/9771030.html" target="_blank" rel="noopener">HTML基础知识 table中 th, td, tr</a></li>
<li><a href="http://www.divcss5.com/wenji/w503.shtml" target="_blank" rel="noopener">CSS如何设置html table表格边框样式</a></li>
<li><a href="http://ask.zol.com.cn/x/4597048.html" target="_blank" rel="noopener">CSS如何设置表格中的字体大小</a></li>
<li><a href="https://www.w3school.com.cn/cssref/pr_padding.asp" target="_blank" rel="noopener">CSS padding 属性</a></li>
<li><a href="https://aboooks.tistory.com/78" target="_blank" rel="noopener">[html/css] margin 속성 자세히 알아보기</a></li>
<li><a href="http://www.hipenpal.com/tool/css-beautiful-table-templates-in-traditional-chinese.php?nowpage=4&amp;movepage=1&amp;type=14&amp;od=e" target="_blank" rel="noopener">漂亮的CSS表格样式</a></li>
</ul>
</li>
</ul>
<br>
<br>
<hr>
<p>在此感谢所有提供了宝贵学习资料的原po主们~</p>
<hr>
</font><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Usage</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
        <tag>Typora</tag>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>Jupyter notebook</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Matplotlib 개요</title>
    <url>/2020/06/28/S-Python-Matplotlib0/</url>
    <content><![CDATA[<h1 id="시각화-library-matplotlib-개요"><a class="markdownIt-Anchor" href="#시각화-library-matplotlib-개요"></a> 시각화 library  – [matplotlib] 개요</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#matplotlib-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B8%B0%EB%B0%98-%EC%8B%9C%EA%B0%81%ED%99%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC"><strong><strong>matplotlib:</strong> 파이썬 기반 시각화 라이브러리</strong></a>
<ul>
<li><a href="#1-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0">1. 불러오기</a></li>
<li><a href="#2-matplotlib-%EC%A3%BC%EC%9A%94-%EC%9E%A5%EC%A0%90">2. matplotlib 주요 장점</a></li>
<li><a href="#3-matplotlib-%EC%A3%BC%EC%9A%94-%EB%8B%A8%EC%A0%90">3. matplotlib 주요 단점</a></li>
<li><a href="#4-matplotlib-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8">4. matplotlib 웹사이트</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="matplotlib-파이썬-기반-시각화-라이브러리"><a class="markdownIt-Anchor" href="#matplotlib-파이썬-기반-시각화-라이브러리"></a> <strong><strong>matplotlib:</strong> 파이썬 기반 시각화 라이브러리</strong></h2>
  <br>
<h3 id="1-불러오기"><a class="markdownIt-Anchor" href="#1-불러오기"></a> 1. 불러오기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt  <span class="comment"># alias 설정</span></span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>
<p>pandas도 matplotlib을 내장</p>
<br>
</li>
</ul>
<h3 id="2-matplotlib-주요-장점"><a class="markdownIt-Anchor" href="#2-matplotlib-주요-장점"></a> 2. matplotlib 주요 장점</h3>
<ul>
<li>
<p>파이썬 표준 시각화 도구라고 불릴 만큼 다양한 기능 지원</p>
</li>
<li>
<p>세부 옵션을 통하여 아름다운 스타일링 가능</p>
</li>
<li>
<p>보다 다양한 그래프를 그릴 수 있음</p>
</li>
<li>
<p>pandas와 연동이 용이함</p>
<br>
</li>
</ul>
<h3 id="3-matplotlib-주요-단점"><a class="markdownIt-Anchor" href="#3-matplotlib-주요-단점"></a> 3. matplotlib 주요 단점</h3>
<ul>
<li>
<p>한글에 대한 완벽한 지원 X</p>
<ul>
<li>한글 사용시 추가설정 필요<br>
(설정방법은 <a href="https://hyemin-kim.github.io/2020/06/25/S-Python-Pandas-visual/"> [Python &gt;&gt; Pandas 시각화] </a> 안의 [0.준비 - 한글폰트 깨짐현상 해결]을 참조)</li>
</ul>
</li>
<li>
<p>세부 기능이 많으나, 사용성이 복잡하다고 느낄 수 있음</p>
<br>
</li>
</ul>
<h3 id="4-matplotlib-웹사이트"><a class="markdownIt-Anchor" href="#4-matplotlib-웹사이트"></a> 4. matplotlib 웹사이트</h3>
<p><a href="http://matplotlib.org/" target="_blank" rel="noopener">http://matplotlib.org/</a></p>
<p>여거시 matplotlib의 Documents, Samples 들을 볼 수 있음</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>사각화</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Matplotlib - (1) 기본 canvas 그리기 및 스타일링</title>
    <url>/2020/06/28/S-Python-Matplotlib1/</url>
    <content><![CDATA[<h1 id="기본적인-canvas-그리기-및-스타일링"><a class="markdownIt-Anchor" href="#기본적인-canvas-그리기-및-스타일링"></a> 기본적인 canvas 그리기 및 스타일링</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%B0%91-%EA%B7%B8%EB%A6%BC-%EA%B7%B8%EB%A6%AC%EA%B8%B0"><strong>1. 밑 그림 그리기</strong></a>
<ul>
<li><a href="#1-1-%EB%8B%A8%EC%9D%BC-%EA%B7%B8%EB%9E%98%ED%94%84-single-graph">1-1. 단일 그래프 (single graph)</a></li>
<li><a href="#1-2-%EB%8B%A4%EC%A4%91-%EA%B7%B8%EB%9E%98%ED%94%84-multiple-graphs">1-2. 다중 그래프 (multiple graphs)</a></li>
<li><a href="#1-3-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B0%B0%EC%97%B4-subplot-subplots">1-3. 그래프 배열 (subplot / subplots)</a></li>
</ul>
</li>
<li><a href="#2-%EC%A3%BC%EC%9A%94-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%98%B5%EC%85%98"><strong>2. 주요 스타일 옵션</strong></a>
<ul>
<li><a href="#2-1-%ED%83%80%EC%9D%B4%ED%8B%80">2-1. 타이틀</a></li>
<li><a href="#2-2-x-y%EC%B6%95-label-%EC%84%A4%EC%A0%95">2-2. X, Y축 Label 설정</a></li>
<li><a href="#2-3-x-y%EC%B6%95-tick-%EC%A1%B0%EC%A0%95-rotation">2-3. X, Y축 Tick 조정 (rotation)</a></li>
<li><a href="#2-4-%EB%B2%94%EB%A1%80-legend-%EC%84%A4%EC%A0%95">2-4. 범례 (Legend) 설정</a></li>
<li><a href="#2-5-x%EC%99%80-y%EC%9D%98-%ED%95%9C%EA%B3%84%EC%A0%90limit-%EC%84%A4%EC%A0%95">2-5. X와 Y의 한계점(Limit) 설정</a></li>
<li><a href="#2-6-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%A7%88%EC%BB%A4-%EB%9D%BC%EC%9D%B8-%EC%BB%AC%EB%9F%AC">2-6. 스타일 세부 설정 - 마커, 라인, 컬러</a></li>
<li><a href="#2-7-%EA%B7%B8%EB%A6%AC%EB%93%9C-grid-%EC%84%A4%EC%A0%95">2-7. 그리드 (grid) 설정</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">pyplot 공식 Document 살펴보기</a></p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># plt.rcParams["figure.figsize"] = (12, 9)  # figure size 설정</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-밑-그림-그리기"><a class="markdownIt-Anchor" href="#1-밑-그림-그리기"></a> <strong>1. 밑 그림 그리기</strong></h2>
<h3 id="1-1-단일-그래프-single-graph"><a class="markdownIt-Anchor" href="#1-1-단일-그래프-single-graph"></a> 1-1. 단일 그래프 (single graph)</h3>
<blockquote>
<p><strong>plt.plot</strong>(<em>df_name</em>)<br>
<strong>plt.show()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">## data 생성</span></span><br><span class="line">data = np.arange(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot</span></span><br><span class="line">plt.plot(data)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 그래프만 보여주는 코드 (타 실행 결과 생략하고 그래프만 보여줌)</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_10_0.png" alt="png"></p>
<br>
<h3 id="1-2-다중-그래프-multiple-graphs"><a class="markdownIt-Anchor" href="#1-2-다중-그래프-multiple-graphs"></a> 1-2. 다중 그래프 (multiple graphs)</h3>
<blockquote>
<ul>
<li><strong>여러 그래프를 같은 canvas 안에 그리기:</strong><br>
명령어 <code>plt.plot(df_name)</code> 를 연속 사용</li>
<li><strong>새 그래프를 새로운 canvas 안에 그리기:</strong><br>
세 그래프를 그리기 전에 <code>plt.figure()</code>명령어를 추가</li>
</ul>
</blockquote>
<br>
<p><strong>(1) 1개의 canvas 안에 다중 그래프 그리기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">1</span>, <span class="number">51</span>)</span><br><span class="line">data2 = np.arange(<span class="number">51</span>, <span class="number">101</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.plot(data1)</span><br><span class="line">plt.plot(data2)</span><br><span class="line">plt.plot(data2 + <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_15_0.png" alt="png"></p>
<br>
<p><strong>(2) 새로운 canvas에서 새 그래프를 그리기</strong></p>
<ul>
<li>figure()는 새로운 그래프 canvas를 생성한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(data)</span><br><span class="line"></span><br><span class="line">plt.figure()   <span class="comment"># figure() 명령어를 추가</span></span><br><span class="line">plt.plot(data2)</span><br><span class="line">plt.plot(data2 + <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_19_0.png" alt="png"></p>
<p><img src="/images/S-Python-Matplotlib1/output_19_1.png" alt="png"></p>
<br>
<h3 id="1-3-그래프-배열-subplot-subplots"><a class="markdownIt-Anchor" href="#1-3-그래프-배열-subplot-subplots"></a> 1-3. 그래프 배열 (subplot / subplots)</h3>
<blockquote>
<p>여러 개 plot을 지정된 행,열수에 따라 배열해주기:</p>
<ul>
<li>plt.subplot(row, column, index)   <font color="blue"># 각 plot의 좌표 설정</font></li>
<li>plt.subplots(행의 갯수, 열의 갯수)  <font color="blue"># 행,열수 설정</font></li>
</ul>
</blockquote>
  <br>
<p><strong>(1) subplot (plot의 좌표를 설정하기)</strong></p>
<p>이 방법은 <strong>그래프마다 설정</strong>해줘야 함</p>
<blockquote>
<p><strong>plt.subplot</strong>(row, column, index)  <font color="blue"># 콤마를 제거해도 됨</font></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_27_0.png" alt="png"></p>
<br>
<p>위의 코드와 동일하나, "콤마"를 제거한 상태</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">211</span>)   <span class="comment"># 콤마를 생략함: 211 -&gt; row : 2, col: 1, index : 1</span></span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">212</span>)   <span class="comment"># 콤마를 생략함</span></span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_30_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">data3 = np.arange(<span class="number">300</span>, <span class="number">401</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">plt.plot(data3)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_32_0.png" alt="png"></p>
<br>
<p><strong>(2) subplots (배열 기준인 행,열수를 지정하기)</strong></p>
<p>subplot와 다르게 <strong>subplots()명령어는 한번만 설정</strong>해주면 됨</p>
<blockquote>
<p><strong>plt.subplots</strong>(행의 갯수, 열의 갯수)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = np.arange(<span class="number">1</span>, <span class="number">51</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 밑 그림</span></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">axes[<span class="number">0</span>, <span class="number">0</span>].plot(data)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">1</span>].plot(data * data)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">2</span>].plot(data ** <span class="number">3</span>)  <span class="comment"># data^3</span></span><br><span class="line">axes[<span class="number">1</span>, <span class="number">0</span>].plot(data % <span class="number">10</span>)</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">1</span>].plot(-data)</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">2</span>].plot(data // <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_37_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-주요-스타일-옵션"><a class="markdownIt-Anchor" href="#2-주요-스타일-옵션"></a> <strong>2. 주요 스타일 옵션</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 출처: matplotlib.org</span></span><br><span class="line">Image(<span class="string">'https://matplotlib.org/_images/anatomy.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-Matplotlib1/output_41_0.png" alt="png" style="zoom:67%;">
<br>  
<h3 id="2-1-타이틀"><a class="markdownIt-Anchor" href="#2-1-타이틀"></a> 2-1. 타이틀</h3>
<blockquote>
<ul>
<li><strong>타이틀 추가:</strong> plt.title("…")</li>
<li><strong>타이틀 fontsize 설정:</strong>  plt.title("…",  fontsize = … )</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"이것은 타이틀 입니다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0.5, 1.0, '이것은 타이틀 입니다')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_46_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"타이틀 fontsize를 키웁니다"</span>, fontsize = <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0.5, 1.0, '타이틀 fontsize를 키웁니다')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_48_1.png" alt="png"></p>
<br>
<h3 id="2-2-x-y축-label-설정"><a class="markdownIt-Anchor" href="#2-2-x-y축-label-설정"></a> 2-2. X, Y축 Label 설정</h3>
<blockquote>
<ul>
<li><strong>plt.xlabel</strong> ( “<em>x_name</em>”, fontsize = …)</li>
<li><strong>plt.ylabel</strong> ( “<em>y_name</em>”, fontsize = …)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 설정</span></span><br><span class="line">plt.title(<span class="string">"Label 설정 예제"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_52_1.png" alt="png"></p>
<br>
<h3 id="2-3-x-y축-tick-조정-rotation"><a class="markdownIt-Anchor" href="#2-3-x-y축-tick-조정-rotation"></a> 2-3. X, Y축 Tick 조정 (rotation)</h3>
<p>Tick은 X, Y축에 위치한 눈금을 말한다<br>
rotation 명령어를 통해 Tick의 각도를 조절할 수 있다</p>
<blockquote>
<ul>
<li><strong>plt.xticks</strong> ( <em>rotation = …</em> )</li>
<li><strong>plt.yticks</strong> ( <em>rotation = …</em> )<br>
Rotation 각도는 <font color="blue">역시개방향 회전각도</font>를 말한다</li>
</ul>
</blockquote>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"X, Y축 Tick 조정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log
  This is separate from the ipykernel package so we can avoid doing imports until

(array([-10.,   0.,  10.,  20.,  30.,  40.,  50.,  60.,  70.,  80.,  90.]),
 &lt;a list of 11 Text yticklabel objects&gt;)
</code></pre>
<br>
<p><img src="/images/S-Python-Matplotlib1/output_58_2.png" alt="png"></p>
<br>
<h3 id="2-4-범례-legend-설정"><a class="markdownIt-Anchor" href="#2-4-범례-legend-설정"></a> 2-4. 범례 (Legend) 설정</h3>
<blockquote>
<p><strong>plt.legend</strong> ( [ “<em>name1</em>” , “<em>name2</em>” , … ], fontsize = …)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"범례(Legend) 설정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend 설정</span></span><br><span class="line">plt.legend([<span class="string">"2x"</span>, <span class="string">"x^2"</span>, <span class="string">"logx"</span>], fontsize = <span class="number">14</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log
  This is separate from the ipykernel package so we can avoid doing imports until

&lt;matplotlib.legend.Legend at 0x173a5712888&gt;
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_63_2.png" alt="png"></p>
<br>
<h3 id="2-5-x와-y의-한계점limit-설정"><a class="markdownIt-Anchor" href="#2-5-x와-y의-한계점limit-설정"></a> 2-5. X와 Y의 한계점(Limit) 설정</h3>
<blockquote>
<ul>
<li><strong>plt.xlim</strong> ( <em>a, b</em> )</li>
<li><strong>plt.ylim</strong> ( <em>c, d</em> )</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"X축, Y축 Limit 설정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend 설정</span></span><br><span class="line">plt.legend([<span class="string">"2x"</span>, <span class="string">"x^2"</span>, <span class="string">"logx"</span>], fontsize = <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y limit 설정</span></span><br><span class="line">plt.xlim(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>, <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log
  This is separate from the ipykernel package so we can avoid doing imports until

(0, 20)
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_68_2.png" alt="png"></p>
<br>
<h3 id="2-6-스타일-세부-설정-마커-라인-컬러"><a class="markdownIt-Anchor" href="#2-6-스타일-세부-설정-마커-라인-컬러"></a> 2-6. 스타일 세부 설정 - 마커, 라인, 컬러</h3>
<blockquote>
<p><em><strong>reference:</strong></em>  <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">세부 Document 확인하기</a></p>
</blockquote>
<p>스타일 세부 설정은 마커, 선의 동류 설정, 드리고 컬러가 있으며, 문다열로 세부설정을 하게 된다</p>
  <br>
<p><strong>(1) marker의 종류</strong></p>
<ul>
<li>‘.’	point marker</li>
<li>‘,’	pixel marker</li>
<li>‘o’	circle marker</li>
<li>‘v’	triangle_down marker</li>
<li>‘^’	triangle_up marker</li>
<li>‘&lt;’	triangle_left marker</li>
<li>‘&gt;’	triangle_right marker</li>
<li>‘1’	tri_down marker</li>
<li>‘2’	tri_up marker</li>
<li>‘3’	tri_left marker</li>
<li>‘4’	tri_right marker</li>
<li>'s ’	square marker</li>
<li>‘p’	pentagon marker</li>
<li>‘*’	star marker</li>
<li>‘h’	hexagon1 marker</li>
<li>‘H’	hexagon2 marker</li>
<li>‘+’	plus marker</li>
<li>‘x’	x marker</li>
<li>‘D’	diamond marker</li>
<li>‘d’	thin_diamond marker</li>
<li>‘|’	vline marker</li>
<li>‘_’	hline marker</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># marker 스타일 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, markersize=<span class="number">5</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, markersize=<span class="number">10</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, markersize=<span class="number">15</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, markersize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'마커 스타일 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_75_1.png" alt="png"></p>
<br>
<p><strong>(2) line의 종류</strong></p>
<ul>
<li>‘-’ solid line style</li>
<li>‘–’ dashed line style</li>
<li>‘-.’ dash-dot line style</li>
<li>‘:’ dotted line style</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># line 스타일 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">''</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">40</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'다양한 선의 종류 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_78_1.png" alt="png"></p>
<br>
<p><strong>(3) color의 종류</strong></p>
<ul>
<li>‘b’	blue</li>
<li>‘g’	green</li>
<li>‘r’	red</li>
<li>‘c’	cyan</li>
<li>‘m’	magenta</li>
<li>‘y’	yellow</li>
<li>‘k’	black</li>
<li>‘w’	white</li>
<li>more choices: <a href="https://matplotlib.org/api/colors_api.html#module-matplotlib.colors" target="_blank" rel="noopener">matplotlib.colors</a>   <em>(e.g. “purple”, “#008000”)</em></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># color 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>, color=<span class="string">'b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>, color=<span class="string">'c'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>, color=<span class="string">'y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>, color=<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'색상 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_81_1.png" alt="png"></p>
<br>
<p><strong>(4) Format: '[marker][line][color]'</strong></p>
<p>example:</p>
<ul>
<li>‘b’    # blue markers with default shape</li>
<li>‘or’   # red circles</li>
<li>‘-g’   # green solid line</li>
<li>‘–’   # dashed line with default color</li>
<li>‘^k:’  # black triangle_up markers connected by a dotted line</li>
</ul>
<p>Each of them is optional. If not provided, the value from the style cycle is used. Exception: If line is given, but no marker, the data will be a line without markers.</p>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "marker + line + color" format 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, <span class="string">"o-r"</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, <span class="string">'v--b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, <span class="string">'+y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, <span class="string">':k'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'marker/line + color 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_87_1.png" alt="png"></p>
<br>
<p><strong>(5) 색상 투명도 설정</strong></p>
<ul>
<li>alpha = … (0.0 ~ 1.0)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># color 투명도 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, color=<span class="string">'b'</span>, alpha=<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'투명도 (alpha) 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Text(0, 0.5, 'Y축')
</code></pre>
<p><img src="/images/S-Python-Matplotlib1/output_90_1.png" alt="png"></p>
<br>
<h3 id="2-7-그리드-grid-설정"><a class="markdownIt-Anchor" href="#2-7-그리드-grid-설정"></a> 2-7. 그리드 (grid) 설정</h3>
<blockquote>
<p><strong>그리드 (grid) 추가:</strong> plt.grid()</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>, color=<span class="string">'b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>, color=<span class="string">'c'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>, color=<span class="string">'y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>, color=<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'그리드 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># grid 옵션 추가</span></span><br><span class="line">plt.grid()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib1/output_94_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>시각화</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Matplotlib - (2) 다양한 그래프 그리기</title>
    <url>/2020/06/28/S-Python-Matplotlib2/</url>
    <content><![CDATA[<h1 id="matplotlib을-활용한-다양한-그래프-그리기"><a class="markdownIt-Anchor" href="#matplotlib을-활용한-다양한-그래프-그리기"></a> matplotlib을 활용한 다양한 그래프 그리기</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-scatterplot"><strong>1. Scatterplot</strong></a>
<ul>
<li><a href="#1-1-x-y-colors-area-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">1-1. x, y, colors, area 설정하기</a></li>
<li><a href="#1-2-cmap%EA%B3%BC-alpha">1-2. cmap과 alpha</a></li>
</ul>
</li>
<li><a href="#2-barplot-barhplot"><strong>2. Barplot, Barhplot</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-barplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-1. 기본 barplot 그리기</a></li>
<li><a href="#2-2-%EA%B8%B0%EB%B3%B8-barhplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-2. 기본 Barhplot 그리기</a></li>
<li><a href="#2-3-barplot%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-3. Barplot에서 비교 그래프 그리기</a></li>
</ul>
</li>
<li><a href="#3-line-plot"><strong>3. Line Plot</strong></a>
<ul>
<li><a href="#3-1-%EA%B8%B0%EB%B3%B8-lineplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-1. 기본 lineplot 그리기</a></li>
<li><a href="#3-2-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. 2개 이상의 그래프 그리기</a></li>
<li><a href="#3-3-%EB%A7%88%EC%BB%A4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-3. 마커 스타일링</a></li>
<li><a href="#3-4-%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-4. 라인 스타일링</a></li>
</ul>
</li>
<li><a href="#4-areaplot-filled-area"><strong>4. Areaplot (Filled Area)</strong></a>
<ul>
<li><a href="#4-1-%EA%B8%B0%EB%B3%B8-areaplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">4-1. 기본 areaplot 그리기</a></li>
<li><a href="#4-2-%EA%B2%BD%EA%B3%84%EC%84%A0%EC%9D%84-%EA%B5%B5%EA%B2%8C-%EA%B7%B8%EB%A6%AC%EA%B3%A0-area%EB%8A%94-%EC%98%85%EA%B2%8C-%EA%B7%B8%EB%A6%AC%EB%8A%94-%ED%9A%A8%EA%B3%BC-%EC%A0%81%EC%9A%A9">4-2. 경계선을 굵게 그리고 area는 옅게 그리는 효과 적용</a></li>
<li><a href="#4-3-%EC%97%AC%EB%9F%AC-%EA%B7%B8%EB%9E%98%ED%94%84%EB%A5%BC-%EA%B2%B9%EC%B3%90%EC%84%9C-%ED%91%9C%ED%98%84">4-3. 여러 그래프를 겹쳐서 표현</a></li>
</ul>
</li>
<li><a href="#5-histogram"><strong>5. Histogram</strong></a>
<ul>
<li><a href="#5-1-%EA%B8%B0%EB%B3%B8-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 Histogram 그리기</a></li>
<li><a href="#5-2-%EB%8B%A4%EC%A4%91-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-2. 다중 Histogram 그리기</a></li>
<li><a href="#5-3-y%EC%B6%95%EC%97%90-density-%ED%91%9C%EA%B8%B0">5-3. Y축에 Density 표기</a></li>
</ul>
</li>
<li><a href="#6-pie-chart"><strong>6. Pie Chart</strong></a></li>
<li><a href="#7-box-plot"><strong>7. Box Plot</strong></a>
<ul>
<li><a href="#7-1-%EA%B8%B0%EB%B3%B8-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-1. 기본 박스플롯 생성</a></li>
<li><a href="#7-2-%EB%8B%A4%EC%A4%91-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-2. 다중 박스플롯 생성</a></li>
<li><a href="#7-3-box-plot-%EC%B6%95-%EB%B0%94%EA%BE%B8%EA%B8%B0">7-3. Box Plot 축 바꾸기</a></li>
<li><a href="#7-4-outlier-%EB%A7%88%EC%BB%A4-%EC%8B%AC%EB%B3%BC%EA%B3%BC-%EC%BB%AC%EB%9F%AC-%EB%B3%80%EA%B2%BD">7-4. Outlier 마커 심볼과 컬러 변경</a></li>
</ul>
</li>
<li><a href="#8-3d-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0"><strong>8. 3D 그래프 그리기</strong></a>
<ul>
<li><a href="#8-1-%EB%B0%91%EA%B7%B8%EB%A6%BC-%EA%B7%B8%EB%A6%AC%EA%B8%B0-canvas">8-1. 밑그림 그리기 (canvas)</a></li>
<li><a href="#8-2-3d-plot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-2. 3D plot 그리기</a></li>
<li><a href="#8-3-3d-scatter-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-3. 3d-scatter 그리기</a></li>
<li><a href="#8-4-contour3d-%EA%B7%B8%EB%A6%AC%EA%B8%B0-%EB%93%B1%EA%B3%A0%EC%84%A0">8-4. contour3D 그리기 (등고선)</a></li>
</ul>
</li>
<li><a href="#9-imshow"><strong>9. imshow</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
 <br>
<h2 id="1-scatterplot"><a class="markdownIt-Anchor" href="#1-scatterplot"></a> <strong>1. Scatterplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.scatter.html" target="_blank" rel="noopener">&lt;plt.scatter&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.scatter</strong>( <em>x, y, s=None, c=None, cmap=None, alpha=None</em> )</p>
<ul>
<li><strong>s:</strong> marker size</li>
<li><strong>c:</strong> color</li>
<li><strong>cmap:</strong> colormap</li>
<li><strong>alpha:</strong> between 0 and 1</li>
</ul>
</blockquote>
  <br>
<p><strong>Data 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 0~1 사이의 random value 50 개 생성</span></span><br><span class="line">np.random.rand(<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0.65532609, 0.19008877, 0.72343673, 0.63981883, 0.07531076,
       0.67080518, 0.93282479, 0.04750706, 0.81240348, 0.40032198,
       0.59662026, 0.25797641, 0.37315105, 0.6266855 , 0.50732916,
       0.55803591, 0.63610033, 0.88673444, 0.99751021, 0.03723629,
       0.07695327, 0.44247   , 0.5245731 , 0.41263818, 0.8009583 ,
       0.57238283, 0.58647938, 0.9882001 , 0.88993497, 0.5396632 ,
       0.24683042, 0.0838774 , 0.0826096 , 0.89701004, 0.78305308,
       0.21027637, 0.93441558, 0.05756907, 0.6299839 , 0.05833447,
       0.24247082, 0.9057054 , 0.1585265 , 0.45569918, 0.85597115,
       0.43875418, 0.96962923, 0.17476189, 0.68713067, 0.832518  ])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 0 부터 50 개의 value 생성</span></span><br><span class="line">np.arange(<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])
</code></pre>
 <br> 
<h3 id="1-1-x-y-colors-area-설정하기"><a class="markdownIt-Anchor" href="#1-1-x-y-colors-area-설정하기"></a> 1-1. x, y, colors, area 설정하기</h3>
<blockquote>
<p><strong>plt.scatter</strong> ( <em>x, y, s = , c =</em> )</p>
<ul>
<li><strong>s</strong>: 점의 넓이. area 값이 커지면 넓이도 커진다</li>
<li><strong>c</strong>: 임의 값을 color 값으로 변환</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.random.rand(<span class="number">50</span>)</span><br><span class="line">y = np.random.rand(<span class="number">50</span>)</span><br><span class="line">colors = np.arange(<span class="number">50</span>)</span><br><span class="line">area = x * y * <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, s = area, c = colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_16_0.png" alt="png"></p>
<br>
<h3 id="1-2-cmap과-alpha"><a class="markdownIt-Anchor" href="#1-2-cmap과-alpha"></a> 1-2. cmap과 alpha</h3>
<blockquote>
<ul>
<li>cmap에 컬러를 지정하면, 컬러 값을 모두 같게 가져갈 수도 있다</li>
<li>alpha값은 투명도를 나타내며 0~1 사이의 값을 지정해 둘 수 있으며, 0에 가까울 수록 투명한 값을 가진다</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span> ,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 0.1'</span>)</span><br><span class="line">  </span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 0.5'</span>)</span><br><span class="line">    </span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">1.0</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 1.0'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_20_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-barplot-barhplot"><a class="markdownIt-Anchor" href="#2-barplot-barhplot"></a> <strong>2. Barplot, Barhplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.bar.html" target="_blank" rel="noopener">&lt;plt.bar&gt;  Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.bar</strong>(<em>x, height, width = 0.8, align = ‘center’, alpha = …, color = …</em> )</p>
<ul>
<li><strong>x:</strong> The x coordinates of the bars</li>
<li><strong>height:</strong> The height(s) of the bars</li>
<li><strong>width:</strong> The width(s) of the bars (default: 0.8)</li>
<li><strong>align:</strong> Alignment of the bars to the x coordinates:<br>
{‘center’, ‘edge’}</li>
</ul>
</blockquote>
<br>
<h3 id="2-1-기본-barplot-그리기"><a class="markdownIt-Anchor" href="#2-1-기본-barplot-그리기"></a> 2-1. 기본 barplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y label</span></span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_28_0.png" alt="png"></p>
<br>
<p>문자열이 겹히는 현상 발생했다. 이를 해결하는 방법은 2가지다:</p>
<ol>
<li>
<p>문자열 화전:  plt.xtick(rotation = …)</p>
</li>
<li>
<p>barh(수평바 그래프) 사용</p>
</li>
</ol>
  <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x ticks</span></span><br><span class="line">plt.xticks(rotation = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y label</span></span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_32_0.png" alt="png"></p>
<br>
<h3 id="2-2-기본-barhplot-그리기"><a class="markdownIt-Anchor" href="#2-2-기본-barhplot-그리기"></a> 2-2. 기본 Barhplot 그리기</h3>
<p>barh 함수에서는 <strong>xticks / ylabel 로 설정</strong>했던 부분을 <strong>yticks / xlabel 로 변경함</strong></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.barh(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'green'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y ticks</span></span><br><span class="line"><span class="comment"># plt.yticks(x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x label</span></span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_36_0.png" alt="png"></p>
<br>
<h3 id="2-3-barplot에서-비교-그래프-그리기"><a class="markdownIt-Anchor" href="#2-3-barplot에서-비교-그래프-그리기"></a> 2-3. Barplot에서 비교 그래프 그리기</h3>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/gallery/lines_bars_and_markers/barchart.html#sphx-glr-gallery-lines-bars-and-markers-barchart-py" target="_blank" rel="noopener">Grouped bar chart with labels</a></p>
</blockquote>
<p><strong>(1) barplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.bar(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>)</span><br><span class="line">axes.bar(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.xticks(x)</span><br><span class="line">axes.set_xticklabels(x_label)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_41_0.png" alt="png"></p>
<br>
<p><strong>(2) barhplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.barh(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>, color = <span class="string">"green"</span>)</span><br><span class="line">axes.barh(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.5</span>, color = <span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.yticks(x)</span><br><span class="line">axes.set_yticklabels(x_label)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_44_0.png" alt="png"></p>
<br>
<br>
<h2 id="3-line-plot"><a class="markdownIt-Anchor" href="#3-line-plot"></a> <strong>3. Line Plot</strong></h2>
<blockquote>
<p><strong>plt.plot</strong> ( <em>x, y, label=…, color=…, alpha=…, marker=…, linestyle=…</em>)</p>
</blockquote>
<h3 id="3-1-기본-lineplot-그리기"><a class="markdownIt-Anchor" href="#3-1-기본-lineplot-그리기"></a> 3-1. 기본 lineplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y = <span class="number">1</span> + np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_50_0.png" alt="png"></p>
<br>
<h3 id="3-2-2개-이상의-그래프-그리기"><a class="markdownIt-Anchor" href="#3-2-2개-이상의-그래프-그리기"></a> 3-2. 2개 이상의 그래프 그리기</h3>
<ul>
<li>label: line 이름 (legend에 나타남)</li>
<li>color: 컬러 옵션</li>
<li>alpha: 투명도 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span> + np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1,label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha = <span class="number">0.3</span>)  <span class="comment"># label 설정값을 legend에 나타날 수 있음</span></span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">"x value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y value"</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"sin and cos graph"</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_54_0.png" alt="png"></p>
<br>
<h3 id="3-3-마커-스타일링"><a class="markdownIt-Anchor" href="#3-3-마커-스타일링"></a> 3-3. 마커 스타일링</h3>
<ul>
<li>marker: 마커 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.3</span>, marker=<span class="string">'o'</span>)</span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.7</span>, marker=<span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_58_0.png" alt="png"></p>
<br>
<h3 id="3-4-라인-스타일링"><a class="markdownIt-Anchor" href="#3-4-라인-스타일링"></a> 3-4. 라인 스타일링</h3>
<ul>
<li>linestyle: 라인 스타일 변경 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_62_0.png" alt="png"></p>
<br>
<br>
<h2 id="4-areaplot-filled-area"><a class="markdownIt-Anchor" href="#4-areaplot-filled-area"></a> <strong>4. Areaplot (Filled Area)</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.fill_between.html" target="_blank" rel="noopener">&lt;plt.fill_between&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.fill_between</strong> (<em>x, y, color=…, alpha=…</em>)</p>
</blockquote>
<h3 id="4-1-기본-areaplot-그리기"><a class="markdownIt-Anchor" href="#4-1-기본-areaplot-그리기"></a> 4-1. 기본 areaplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">y = np.random.randint(low=<span class="number">5</span>, high=<span class="number">10</span>, size=<span class="number">20</span>)</span><br><span class="line">y</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([8, 8, 7, 6, 5, 8, 6, 9, 8, 8, 5, 5, 6, 6, 5, 5, 6, 8, 9, 5])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">21</span>)</span><br><span class="line">y = np.random.randint(low=<span class="number">5</span>, high=<span class="number">10</span>, size=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fill_between으로 색칠하기</span></span><br><span class="line">plt.fill_between(x, y, color = <span class="string">"green"</span>, alpha = <span class="number">0.6</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_72_0.png" alt="png"></p>
<br>
<h3 id="4-2-경계선을-굵게-그리고-area는-옅게-그리는-효과-적용"><a class="markdownIt-Anchor" href="#4-2-경계선을-굵게-그리고-area는-옅게-그리는-효과-적용"></a> 4-2. 경계선을 굵게 그리고 area는 옅게 그리는 효과 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.fill_between(x, y, color=<span class="string">'green'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(x, y, color=<span class="string">'green'</span>, alpha=<span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_75_0.png" alt="png"></p>
<br>
<h3 id="4-3-여러-그래프를-겹쳐서-표현"><a class="markdownIt-Anchor" href="#4-3-여러-그래프를-겹쳐서-표현"></a> 4-3. 여러 그래프를 겹쳐서 표현</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.05</span>)</span><br><span class="line">y_1 = np.cos(x) + <span class="number">1</span></span><br><span class="line">y_2 = np.sin(x) + <span class="number">1</span></span><br><span class="line">y_3 = y_1 * y_2 / np.pi</span><br><span class="line"></span><br><span class="line">plt.fill_between(x, y_1, label=<span class="string">'1+cos'</span>, color=<span class="string">'green'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.fill_between(x, y_2, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.fill_between(x, y_3, label=<span class="string">'sin*cos/pi'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_78_0.png" alt="png"></p>
<p>많이 겹치는 부분이 어디인지 확인하고 싶을 때 많이 활용됨</p>
<p><br> <br></p>
<h2 id="5-histogram"><a class="markdownIt-Anchor" href="#5-histogram"></a> <strong>5. Histogram</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.hist.html" target="_blank" rel="noopener">&lt;plt.hist&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.hist</strong> (x, bins = …)</p>
</blockquote>
<h3 id="5-1-기본-histogram-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-histogram-그리기"></a> 5-1. 기본 Histogram 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">plt.hist(x, bins = bins)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_87_0.png" alt="png"></p>
<br>
<h3 id="5-2-다중-histogram-그리기"><a class="markdownIt-Anchor" href="#5-2-다중-histogram-그리기"></a> 5-2. 다중 Histogram 그리기</h3>
<blockquote>
<p><strong>fig, axs = plt.subplots</strong> (<em>row, column, sharey = True, tight_layout = True</em>)<br>
<strong>axes[i].hist</strong> ( <em>x, bins = …</em>)</p>
<ul>
<li><strong>sharey:</strong> 다중 그래프가 같은 y축을 share</li>
<li><strong>tight_layout:</strong> graph의 패딩을 자동으로 조절해주어 fit한 graph를 생성</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, </span><br><span class="line">                        sharey = <span class="literal">True</span>,</span><br><span class="line">                        tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins)</span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins*<span class="number">2</span>)</span><br><span class="line">axes[<span class="number">2</span>].hist(x, bins = bins*<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_91_0.png" alt="png"></p>
<br>
<h3 id="5-3-y축에-density-표기"><a class="markdownIt-Anchor" href="#5-3-y축에-density-표기"></a> 5-3. Y축에 Density 표기</h3>
<ul>
<li><strong>pdf(확률 밀도 함수):</strong> density = True</li>
<li><strong>cdf(누적 확률 함수):</strong> density = True, cumulatice = True</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># density=True 값을 통하여 Y축에 density를 표기할 수 있다</span></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins, density = <span class="literal">True</span>, cumulative = <span class="literal">True</span>)  <span class="comment">#cdf: 누적확률함수</span></span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins, density = <span class="literal">True</span>)  <span class="comment"># pdf: 확률밀도함수</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_95_0.png" alt="png"></p>
<br>
<br>
<h2 id="6-pie-chart"><a class="markdownIt-Anchor" href="#6-pie-chart"></a> <strong>6. Pie Chart</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.pie.html" target="_blank" rel="noopener">&lt;plt.pie&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.pie</strong>( <em>x, explode=None, labels=None, colors=None, autopct=None, shadow=False, startangle=None,…</em>)</p>
</blockquote>
<p><strong>pie chart 옵션</strong></p>
<ul>
<li>explode: 파이에서 툭 튀어져 나온 비율</li>
<li>autopct: 퍼센트 자동으로 표기</li>
<li>shadow: 그림자 표시</li>
<li>startangle: 파이를 그리기 시작할 각도</li>
</ul>
<p><strong>리턴을 받는 인자</strong></p>
<ul>
<li>
<p>texts: label에 대한 텍스트 효과</p>
</li>
<li>
<p>autotexts: 파이 위에 그려지는 텍스트 효과</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">labels = [<span class="string">'Samsung'</span>, <span class="string">'Huawei'</span>, <span class="string">'Apple'</span>, <span class="string">'Xiaomi'</span>, <span class="string">'Oppo'</span>, <span class="string">'Etc'</span>]</span><br><span class="line">sizes = [<span class="number">20.4</span>, <span class="number">15.8</span>, <span class="number">10.5</span>, <span class="number">9</span>, <span class="number">7.6</span>, <span class="number">36.7</span>]</span><br><span class="line">explode = (<span class="number">0.3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># text, autotext 인자를 활용하여 텍스트 스타일링을 적용한다</span></span><br><span class="line">patches, texts, autotexts = plt.pie(sizes,</span><br><span class="line">                                    explode = explode,</span><br><span class="line">                                    labels = labels,</span><br><span class="line">                                    autopct = <span class="string">"%1.1f%%"</span>,</span><br><span class="line">                                    shadow = <span class="literal">True</span>,</span><br><span class="line">                                    startangle=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Smartphone Pie'</span>, fontsize=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># label 텍스트에 대한 스타일 적용</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> texts:</span><br><span class="line">    t.set_fontsize(<span class="number">12</span>)</span><br><span class="line">    t.set_color(<span class="string">'gray'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># pie 위의 텍스트에 대한 스타일 적용</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> autotexts:</span><br><span class="line">    t.set_fontsize(<span class="number">18</span>)</span><br><span class="line">    t.set_color(<span class="string">'white'</span>)</span><br><span class="line">    </span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_103_0.png" alt="png"></p>
<br>
<br>
<h2 id="7-box-plot"><a class="markdownIt-Anchor" href="#7-box-plot"></a> <strong>7. Box Plot</strong></h2>
<img src="/images/S-Python-Matplotlib2/R800x0" alt="box plot 해석" style="zoom:80%;">
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.2.1/api/_as_gen/matplotlib.pyplot.boxplot.html" target="_blank" rel="noopener">&lt;plt.boxplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>plt.boxplot</strong> (<em>data, vert=True, flierprops = …</em>)</p>
<ul>
<li><strong>vert:</strong> boxplot 축 바꾸기 (If True: 수직 boxplot; If not: 수평 boxplot)</li>
<li><strong>flierprops:</strong> oulier marker 설정 (Symbol &amp; Color)</li>
</ul>
</blockquote>
  <br>
<p><strong>샘플 데이터 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Data Generation Process (DGP)</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="7-1-기본-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-1-기본-박스플롯-생성"></a> 7-1. 기본 박스플롯 생성</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.tight_layout</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_115_0.png" alt="png"></p>
<br>
<h3 id="7-2-다중-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-2-다중-박스플롯-생성"></a> 7-2. 다중 박스플롯 생성</h3>
<blockquote>
<ul>
<li>다중 그래프 생성을 위해서는 data 자체가 <strong>2차원으로 구성</strong>되어 있어야 한다</li>
<li>row와 column으로 구성된 DataFrame에서 Column은 x축에 Row는 Y축에 구성되어 있음</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread1 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center1 = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high1 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low1 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data1 = np.concatenate((spread1, center1, flier_high1, flier_low1))</span><br><span class="line"></span><br><span class="line">spread2 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center2 = np.ones(<span class="number">25</span>) * <span class="number">40</span></span><br><span class="line">flier_high2 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low2 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data2 = np.concatenate((spread2, center2, flier_high2, flier_low2))</span><br><span class="line"></span><br><span class="line">data1.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">data2.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = [data1, data2, data2[::<span class="number">2</span>, <span class="number">0</span>]]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_120_0.png" alt="png"></p>
<br>
<h3 id="7-3-box-plot-축-바꾸기"><a class="markdownIt-Anchor" href="#7-3-box-plot-축-바꾸기"></a> 7-3. Box Plot 축 바꾸기</h3>
<ul>
<li><strong>vert = False</strong> 옵션을 사용</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data, vert = <span class="literal">False</span>)</span><br><span class="line">plt.title(<span class="string">'Horizontal Box Plot'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_124_0.png" alt="png"></p>
<br>
<h3 id="7-4-outlier-마커-심볼과-컬러-변경"><a class="markdownIt-Anchor" href="#7-4-outlier-마커-심볼과-컬러-변경"></a> 7-4. Outlier 마커 심볼과 컬러 변경</h3>
<ul>
<li><strong>flierprops = …</strong> 옵션 사용</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">outlier_marker = dict(markerfacecolor = <span class="string">'r'</span>, marker = <span class="string">'D'</span>)  <span class="comment"># red diamond</span></span><br><span class="line"></span><br><span class="line">plt.boxplot(data, flierprops = outlier_marker)</span><br><span class="line">plt.title(<span class="string">'Change Outlier Symbols'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_128_0.png" alt="png"></p>
<br>
<br>
<h2 id="8-3d-그래프-그리기"><a class="markdownIt-Anchor" href="#8-3d-그래프-그리기"></a> <strong>8. 3D 그래프 그리기</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#contour-plots" target="_blank" rel="noopener">mplot3d tutorial</a></p>
</blockquote>
<p>3D 로 그래프를 그리기 위해서는 <code>mplot3d</code>를 추가로 import 해야 함</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits <span class="keyword">import</span> mplot3d</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="8-1-밑그림-그리기-canvas"><a class="markdownIt-Anchor" href="#8-1-밑그림-그리기-canvas"></a> 8-1. 밑그림 그리기 (canvas)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_137_0.png" alt="png"></p>
<br>
<h3 id="8-2-3d-plot-그리기"><a class="markdownIt-Anchor" href="#8-2-3d-plot-그리기"></a> 8-2. 3D plot 그리기</h3>
<blockquote>
<p><em>Axes</em> = plt.axes(projection = ‘3d’)</p>
<ul>
<li><em>Axes</em> <strong>.plot</strong> (<em>x, y, z, color=…, alpha=…, marker=…</em>)</li>
<li><em>Axes</em> <strong>.plot3D</strong> (<em>x, y, z, color=…, alpha=…, marker=…</em>)</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># projection = 3d로 설정</span></span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y, z 데이터 생성</span></span><br><span class="line">z = np.linspace(<span class="number">0</span>, <span class="number">15</span>, <span class="number">1000</span>)</span><br><span class="line">x = np.sin(z)</span><br><span class="line">y = np.cos(z)</span><br><span class="line"></span><br><span class="line">ax.plot(x, y, z, <span class="string">'gray'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_142_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># projection = 3d로 설정</span></span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y, z 데이터 생성</span></span><br><span class="line">sample_size = <span class="number">100</span></span><br><span class="line">x = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size)) <span class="comment"># cumsum: 누적 합</span></span><br><span class="line">y = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size))</span><br><span class="line">z = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size))</span><br><span class="line"></span><br><span class="line">ax.plot3D(x, y, z, alpha=<span class="number">0.6</span>, marker=<span class="string">'o'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'ax.plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_144_0.png" alt="png"></p>
<br>
<h3 id="8-3-3d-scatter-그리기"><a class="markdownIt-Anchor" href="#8-3-3d-scatter-그리기"></a> 8-3. 3d-scatter 그리기</h3>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.scatter.html" target="_blank" rel="noopener">&lt;Axes.scatter&gt; Document</a></p>
</blockquote>
<blockquote>
<p><em>Axes</em> = fig.add_subplot(111, projection=‘3d’) <font color="blue"># Axe3D object</font></p>
<p><em>Axes</em> <strong>.scatter</strong>( <em>x, y, z, s=None, c=None, marker=None, cmap=None, alpha=None, …</em>)</p>
<ul>
<li><strong>s:</strong> marker size</li>
<li><strong>c:</strong> marker color</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">'3d'</span>) <span class="comment"># Axe3D object</span></span><br><span class="line"></span><br><span class="line">sample_size = <span class="number">500</span></span><br><span class="line"></span><br><span class="line">x = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line">y = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line">z = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line"></span><br><span class="line">ax.scatter(x, y, z, c=z, s=<span class="number">20</span>, alpha=<span class="number">0.5</span>, cmap=<span class="string">'Greens'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'ax.scatter'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_148_0.png" alt="png"></p>
<p>컬러가 찐한 부분에 데이터가 더 많이 몰려있음</p>
  <br>
<h3 id="8-4-contour3d-그리기-등고선"><a class="markdownIt-Anchor" href="#8-4-contour3d-그리기-등고선"></a> 8-4. contour3D 그리기 (등고선)</h3>
<blockquote>
<p><em>Axes</em> = plt.axes(projection=‘3d’)<br>
<em>Axes</em> <strong>.contour3D</strong> (<em>x, y, z</em> )</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-6</span>, <span class="number">6</span>, <span class="number">30</span>)</span><br><span class="line">y = np.linspace(<span class="number">-6</span>, <span class="number">6</span>, <span class="number">30</span>)</span><br><span class="line">x, y = np.meshgrid(x, y)</span><br><span class="line"></span><br><span class="line">z = np.sin(np.sqrt(x**<span class="number">2</span> + y**<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line">ax = plt.axes(projection=<span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line">ax.contour3D(x, y, z, <span class="number">20</span>, cmap=<span class="string">'Reds'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"ax.contour3D"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_153_0.png" alt="png"></p>
<br>
<br>
<h2 id="9-imshow"><a class="markdownIt-Anchor" href="#9-imshow"></a> <strong>9. imshow</strong></h2>
<p>이미지 데이터가 numpy array에서는 숫자형식으로 표현됨<br>
명령어<code>imshow</code>는 이 컬러숫자들을 이미지로 변환하여 보여줌</p>
  <br>
<p>예제: <code>sklearn.datasets</code>안의 <code>load_digits</code>데이터</p>
<ul>
<li>
<p><code>load_digits</code> 는 0~16 값을 가지는 array로 이루어져 있다</p>
</li>
<li>
<p>1개의 array는 8 X 8 배열 안에 표현되어 있다</p>
</li>
<li>
<p>숫자는 0~9까지 이루어져있다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_digits</span><br><span class="line"></span><br><span class="line">digits = load_digits()</span><br><span class="line">X = digits.images[:<span class="number">10</span>]  <span class="comment"># 앞에 10개 image를 뽑아서 저장함</span></span><br><span class="line">X[<span class="number">0</span>]  <span class="comment"># 첫번째 image의 컬러숫자를 살펴보자</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 0.,  0.,  5., 13.,  9.,  1.,  0.,  0.],
       [ 0.,  0., 13., 15., 10., 15.,  5.,  0.],
       [ 0.,  3., 15.,  2.,  0., 11.,  8.,  0.],
       [ 0.,  4., 12.,  0.,  0.,  8.,  8.,  0.],
       [ 0.,  5.,  8.,  0.,  0.,  9.,  8.,  0.],
       [ 0.,  4., 11.,  0.,  1., 12.,  7.,  0.],
       [ 0.,  2., 14.,  5., 10., 12.,  0.,  0.],
       [ 0.,  0.,  6., 13., 10.,  0.,  0.,  0.]])
</code></pre>
<br>
<p>지금 한 위치에 숫자 하나밖에 없어서 컬러는 흑백으로 나옴.<br>
숫자가 클수록 black에 가깝고, 작을수록 white에 가까움</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig, axes = plt.subplots(nrows=<span class="number">2</span>, ncols=<span class="number">5</span>, sharex=<span class="literal">True</span>, figsize=(<span class="number">12</span>, <span class="number">6</span>), sharey=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    axes[i//<span class="number">5</span>][i%<span class="number">5</span>].imshow(X[i], cmap=<span class="string">'Blues'</span>)</span><br><span class="line">    axes[i//<span class="number">5</span>][i%<span class="number">5</span>].set_title(str(i), fontsize=<span class="number">20</span>)</span><br><span class="line">    </span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Matplotlib2/output_164_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>시각화</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (1) Numpy. array</title>
    <url>/2020/05/19/S-Python-Numpy1/</url>
    <content><![CDATA[<p>Numpy개요. Numpy import하기. nd array 생성. array에서의 데이터 타입</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-numpy-%EA%B0%9C%EC%9A%94"><strong>1. Numpy 개요</strong></a>
<ul>
<li><a href="#1-1-numpy%EC%9D%B4%EB%9E%80">1-1. Numpy이란?</a></li>
<li><a href="#1-2-%EB%B3%84%EC%B9%AD-np">1-2. 별칭 - np</a></li>
<li><a href="#1-3-array-%EB%B0%B0%EC%97%B4">1-3. array (배열)</a></li>
<li><a href="#1-4-shape%EC%B0%A8%EC%9B%90-axis%EC%B6%95">1-4. shape(차원) &amp; axis(축)</a></li>
</ul>
</li>
<li><a href="#2-numpy-import%ED%95%98%EA%B8%B0"><strong>2. Numpy import하기</strong></a>
<ul>
<li><a href="#2-1-%EB%B3%84%EC%B9%AD-alias-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0-%ED%95%AD%EC%83%81-%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94">2-1. 별칭 (alias) 지정하기 (항상 해주세요!)</a></li>
</ul>
</li>
<li><a href="#3-ndarray-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0-nparray"><strong>3. ndarray 생성하기 – "np.array([…])"</strong></a>
<ul>
<li><a href="#3-1-list%EB%A1%9C-%EB%B6%80%ED%84%B0-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0-nparraylist_name">3-1. list로 부터 생성하기 – “np.array(<em>list_name</em>)”</a></li>
<li><a href="#3-2-shape%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0-array_name-shape">3-2. shape확인하기 – “<em>array_name</em> .shape”</a></li>
</ul>
</li>
<li><a href="#4-array%EC%97%90%EC%84%9C%EC%9D%98-data-type"><strong>4. array에서의 data type</strong></a>
<ul>
<li><a href="#4-1-list%EC%97%90%EC%84%9C%EC%9D%98-data-type">4-1. list에서의 data type</a></li>
<li><a href="#4-2-array%EC%97%90%EC%84%9C%EC%9D%98-data-type">4-2. array에서의 data type</a>
<ul>
<li><a href="#case-1-int%EC%99%80-float%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%9C-%EA%B2%BD%EC%9A%B0">case 1. int와 float타입이 혼재된 경우</a></li>
<li><a href="#case-2-int%EC%99%80-float-%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%98%EC%97%88%EC%9C%BC%EB%82%98-dtype%EC%9D%84-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B2%BD%EC%9A%B0">case 2. int와 float 타입이 혼재되었으나, dtype을 지정한 경우</a></li>
<li><a href="#case-3-int-float-%EC%99%80-str-%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%9C-%EA%B2%BD%EC%9A%B0">case 3. int / float 와 str 타입이 혼재된 경우</a></li>
<li><a href="#case-4-int%EC%99%80-str-%ED%83%80%EC%9E%85%EC%9D%B4-%ED%98%BC%EC%9E%AC%EB%90%98%EC%96%B4-%EC%9E%88%EA%B3%A0-dtype%EC%9D%B4-int%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%EA%B2%BD%EC%9A%B0">case 4. int와 str 타입이 혼재되어 있고 dtype이 int로 지정한 경우</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-numpy-개요"><a class="markdownIt-Anchor" href="#1-numpy-개요"></a> <strong>1. Numpy 개요</strong></h2>
<h3 id="1-1-numpy이란"><a class="markdownIt-Anchor" href="#1-1-numpy이란"></a> 1-1. Numpy이란?</h3>
<p>Numpy: 수학, 과학 계산용 패키지</p>
<p>​    <br></p>
<h3 id="1-2-별칭-np"><a class="markdownIt-Anchor" href="#1-2-별칭-np"></a> 1-2. 별칭 - np</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-3-array-배열"><a class="markdownIt-Anchor" href="#1-3-array-배열"></a> 1-3. array (배열)</h3>
<p><strong>배열</strong>: 여러 값들의 그룹</p>
<br>  
<p><strong>&lt; 1차원 배열 &gt;</strong></p>
<br>
<center><img src="/images/S-Python-Numpy1/1_array.png" alt="1_array" style="zoom:80%;"></center>
<div style="text-align: center"> numpy.array([1, 2, 3, 4]) </div>
 <br> 
<p><strong>&lt; 2차원 배열 &gt;</strong></p>
 <br>
<center><img src="/images/S-Python-Numpy1/2_array.png" alt="2_array" style="zoom:80%;"></center>
<div style="text-align: center"> 
numpy.array([[1, 2, 3, 4],  
             [5, 6, 7, 8],  
             [9, 10, 11, 12],  
             [13, 14, 15, 16]]) 
</div>
<br>
<p><strong>&lt; n차원 배열 &gt;   (nd array: <em>n dimention</em> array)</strong></p>
<center><img src="/images/S-Python-Numpy1/n_array.png" alt="n_array" style="zoom:80%;" align="center/"></center>
  <br>
  <br>
<h3 id="1-4-shape차원-axis축"><a class="markdownIt-Anchor" href="#1-4-shape차원-axis축"></a> 1-4. shape(차원) &amp; axis(축)</h3>
<ul>
<li>
<p><strong>shape은 <font color="red"> 차원의 수 </font> 를 확인</strong></p>
<p>(3, ) =&gt; 3 X 1의 배열<br>
(4,3) =&gt; 4 X 3의 배열<br>
(2,5,3) =&gt; 2 X 5 X 3의 배열</p>
</li>
<li>
<p><strong>axis는 기준이 되는 <font color="red"> 축 </font></strong></p>
<p>axis는 앞에서 부터 0, 1, 2…<br>
nd array의 축: axis 0, axis 1, axis 2, … axis n</p>
<br>
<br>
</li>
</ul>
<h2 id="2-numpy-import하기"><a class="markdownIt-Anchor" href="#2-numpy-import하기"></a> <strong>2. Numpy import하기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">numpy</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'numpy' from 'D:\\Anaconda\\lib\\site-packages\\numpy\\__init__.py'&gt;
</code></pre>
<br>
<h3 id="2-1-별칭-alias-지정하기-항상-해주세요"><a class="markdownIt-Anchor" href="#2-1-별칭-alias-지정하기-항상-해주세요"></a> 2-1. 별칭 (alias) 지정하기 (항상 해주세요!)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'numpy' from 'D:\\Anaconda\\lib\\site-packages\\numpy\\__init__.py'&gt;
</code></pre>
<br>
  <br>
<h2 id="3-ndarray-생성하기-nparray"><a class="markdownIt-Anchor" href="#3-ndarray-생성하기-nparray"></a> <strong>3. ndarray 생성하기 – "np.array([…])"</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], dtype=int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr <span class="comment"># 주의: list와 다름</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  <span class="comment"># list</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>numpy.ndarray
</code></pre>
<br>
<br>  
<h3 id="3-1-list로-부터-생성하기-nparraylist_name"><a class="markdownIt-Anchor" href="#3-1-list로-부터-생성하기-nparraylist_name"></a> 3-1. list로 부터 생성하기 – “np.array(<em>list_name</em>)”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist2 = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">           [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]]</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1 = np.array(mylist1)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2 = np.array(mylist2)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
 <br> 
<h3 id="3-2-shape확인하기-array_name-shape"><a class="markdownIt-Anchor" href="#3-2-shape확인하기-array_name-shape"></a> 3-2. shape확인하기 – “<em>array_name</em> .shape”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr1.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4,)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(2, 4)
</code></pre>
<br>
 <br>   
<h2 id="4-array에서의-data-type"><a class="markdownIt-Anchor" href="#4-array에서의-data-type"></a> <strong>4. array에서의 data type</strong></h2>
<p><strong>array에서는 list와 다르게 1개의 <font color="red">단일 데이터 타입 </font> 만 허용 된다</strong></p>
  <br>
<h3 id="4-1-list에서의-data-type"><a class="markdownIt-Anchor" href="#4-1-list에서의-data-type"></a> 4-1. list에서의 data type</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 3.14, '사과', '1234']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'사과'
</code></pre>
<br>
 <br> 
<h3 id="4-2-array에서의-data-type"><a class="markdownIt-Anchor" href="#4-2-array에서의-data-type"></a> 4-2. array에서의 data type</h3>
<h4 id="case-1-int와-float타입이-혼재된-경우"><a class="markdownIt-Anchor" href="#case-1-int와-float타입이-혼재된-경우"></a> case 1. int와 float타입이 혼재된 경우</h4>
<p>int와 float타입이 혼재된 경우 int(정수)가 float(실수)로 바꿔진다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.14</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr  <span class="comment"># 정수가 실수로 바꿔진다</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1.  , 2.  , 3.  , 3.14])
</code></pre>
<br>
<p>​</p>
<h4 id="case-2-int와-float-타입이-혼재되었으나-dtype을-지정한-경우"><a class="markdownIt-Anchor" href="#case-2-int와-float-타입이-혼재되었으나-dtype을-지정한-경우"></a> case 2. int와 float 타입이 혼재되었으나, dtype을 지정한 경우</h4>
<p>int와 float 타입이 혼재되었으나, dtype가 int로 지정된 경우, float의 앞에 정수 부분만 보류된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.14</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 3])
</code></pre>
<br>
<h4 id="case-3-int-float-와-str-타입이-혼재된-경우"><a class="markdownIt-Anchor" href="#case-3-int-float-와-str-타입이-혼재된-경우"></a> case 3. int / float 와 str 타입이 혼재된 경우</h4>
<p>int / float 와 float타입이 혼재된 경우 int(정수)가 str(문자열)로 바꿔진다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['1', '3.14', '사과', '1234'], dtype='&lt;U32')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">0</span>] + arr[<span class="number">1</span>]  <span class="comment">#str로 되어버려서 숫자의 사칙 연산이 안됨</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>'13.14'
</code></pre>
<br>
<h4 id="case-4-int와-str-타입이-혼재되어-있고-dtype이-int로-지정한-경우"><a class="markdownIt-Anchor" href="#case-4-int와-str-타입이-혼재되어-있고-dtype이-int로-지정한-경우"></a> case 4. int와 str 타입이 혼재되어 있고 dtype이 int로 지정한 경우</h4>
<p><strong>(1) 문자내용인 str이 존재한 경우 error 발생</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'사과'</span>, <span class="string">'1234'</span>, <span class="string">'5.8'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-50-88e75a912236&gt; in &lt;module&gt;
----&gt; 1 arr = np.array([1, 3.14, '사과', '1234', '5.8'], dtype = int)


ValueError: invalid literal for int() with base 10: '사과'
</code></pre>
<br>
<p><strong>(2) 실수(float)내용인 str이 존재한 경우도 error발생</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'1234'</span>, <span class="string">'5.8'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-52-98017763e514&gt; in &lt;module&gt;
----&gt; 1 arr = np.array([1, 3.14, '1234', '5.8'], dtype = int)


ValueError: invalid literal for int() with base 10: '5.8'
</code></pre>
<br>
<p><strong>(3) 정수(int)내용인 str만 존재한 경우 해당 str이 자동으로 int로 바꿔짐</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">3.14</span>, <span class="string">'1234'</span>], dtype = int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([   1,    3, 1234])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (2) Slicing. 인덱싱</title>
    <url>/2020/05/19/S-Python-Numpy2/</url>
    <content><![CDATA[<p>슬라이싱 (Slicing).  Fancy 인덱싱.  Boolean 인덱싱.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%8A%AC%EB%9D%BC%EC%9D%B4%EC%8B%B1-slicing"><strong>1. 슬라이싱 (Slicing)</strong></a>
<ul>
<li><a href="#1-1-index-%EC%A7%80%EC%A0%95%ED%95%98%EC%97%AC-%EC%83%89%EC%9D%B8">1-1. index 지정하여 색인</a>
<ul>
<li><a href="#1%EC%B0%A8%EC%9B%90-array">1차원 array</a></li>
<li><a href="#2%EC%B0%A8%EC%9B%90-array">2차원 array</a></li>
</ul>
</li>
<li><a href="#1-2-%EB%B2%94%EC%9C%84-%EC%83%89%EC%9D%B8">1-2. 범위 색인</a>
<ul>
<li><a href="#1%EC%B0%A8%EC%9B%90-array-2">1차원 array</a></li>
<li><a href="#2%EC%B0%A8%EC%9B%90-array-2">2차원 array</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#2-fancy-%EC%9D%B8%EB%8D%B1%EC%8B%B1"><strong>2. Fancy 인덱싱</strong></a>
<ul>
<li><a href="#2-1-1%EC%B0%A8%EC%9B%90-array">2-1. 1차원 array</a></li>
<li><a href="#2-2-2%EC%B0%A8%EC%9B%90-array">2-2. 2차원 array</a></li>
</ul>
</li>
<li><a href="#3-boolean-%EC%9D%B8%EB%8D%B1%EC%8B%B1"><strong>3. Boolean 인덱싱</strong></a>
<ul>
<li><a href="#3-1-true%EC%99%80-false%EA%B0%92%EC%9C%BC%EB%A1%9C-%EC%83%89%EC%9D%B8%ED%95%98%EA%B8%B0">3-1. True와 False값으로 색인하기</a></li>
<li><a href="#3-2-%EC%A1%B0%EA%B1%B4%ED%95%84%ED%84%B0">3-2. 조건필터</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-슬라이싱-slicing"><a class="markdownIt-Anchor" href="#1-슬라이싱-slicing"></a> <strong>1. 슬라이싱 (Slicing)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>베열의 부분 선택 (과일을 슬라이스해서 부분만 먹듯…)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(10,)
</code></pre>
<br>
<h3 id="1-1-index-지정하여-색인"><a class="markdownIt-Anchor" href="#1-1-index-지정하여-색인"></a> 1-1. index 지정하여 색인</h3>
<h4 id="1차원-array"><a class="markdownIt-Anchor" href="#1차원-array"></a> 1차원 array</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">0</span>]  <span class="comment"># index: 앞에서 부터 0, 1, 2, ...</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">10</span>]  <span class="comment"># index가 넘으면 error남</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-7-ff656e92d79c&gt; in &lt;module&gt;
----&gt; 1 arr[10]


IndexError: index 10 is out of bounds for axis 0 with size 10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-1</span>]   <span class="comment"># 뒤에서 부터 1번째.  index: 뒤에서 부터 -1, -2, -3,...</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-10</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">-11</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-10-91f133f07612&gt; in &lt;module&gt;
----&gt; 1 arr[-11]


IndexError: index -11 is out of bounds for axis 0 with size 10
</code></pre>
<br>
<h4 id="2차원-array"><a class="markdownIt-Anchor" href="#2차원-array"></a> 2차원 array</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(3, 4)
</code></pre>
<br>
<p><strong>arr2d[행, 열]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">0</span>, <span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>10
</code></pre>
<br>
 <br> 
<h3 id="1-2-범위-색인"><a class="markdownIt-Anchor" href="#1-2-범위-색인"></a> 1-2. 범위 색인</h3>
<h4 id="1차원-array-2"><a class="markdownIt-Anchor" href="#1차원-array-2"></a> 1차원 array</h4>
<ul>
<li><strong>arr[a, b]</strong> –  arr의 “index <strong><font color="red">a</font></strong>” 부터 "index <strong><font color="red">b-1</font></strong>"까지  <font color="red">(a 포함, b 미포함)</font></li>
</ul>
<p><strong>index:</strong> 1 이상</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">1</span>:]   <span class="comment"># index 1 포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4, 5, 6, 7, 8, 9])
</code></pre>
<br>
<p><strong>index:</strong> 5 미만</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[:<span class="number">5</span>]  <span class="comment"># index 5 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4])
</code></pre>
<br>
<p><strong>index:</strong> 1이상 5미만</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[<span class="number">1</span>:<span class="number">5</span>]  <span class="comment"># index 1 포함 &amp; index 5 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<br>
<p><strong>index:</strong> -1까지</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[:<span class="number">-1</span>]  <span class="comment"># index -1 (index 9) 미포함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8])
</code></pre>
<br>
  <br>
<h4 id="2차원-array-2"><a class="markdownIt-Anchor" href="#2차원-array-2"></a> 2차원 array</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>row(행)을 모두 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[<span class="number">0</span>,:]  <span class="comment"># 0번 행의 모든 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
 <br>
<p><strong>colomn(열)을 모두 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:,<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  7, 11])
</code></pre>
 <br> 
<p><strong>부분적으로 가져오려는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:<span class="number">2</span>, :]  <span class="comment"># 0,1번 행의 모든 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:<span class="number">2</span>, <span class="number">2</span>:]  <span class="comment"># 0,1번 행의 2,3번 열 가져오기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[3, 4],
       [7, 8]])
</code></pre>
<br>
 <br>   
<h2 id="2-fancy-인덱싱"><a class="markdownIt-Anchor" href="#2-fancy-인덱싱"></a> <strong>2. Fancy 인덱싱</strong></h2>
<p>fancy인덱싱은 범위가 아닌 <strong>특정 index의 집합의 값을 선택하여 추출</strong>하고 싶을 때 활용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">10</span>, <span class="number">23</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">90</span>, <span class="number">65</span>, <span class="number">32</span>, <span class="number">66</span>, <span class="number">70</span>])</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h3 id="2-1-1차원-array"><a class="markdownIt-Anchor" href="#2-1-1차원-array"></a> 2-1. 1차원 array</h3>
<p><strong>방법 1:</strong> 추출하고 싶은 index의 집합을 **[꺾쇠 괄호로]**묶어서 추출</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([23,  7, 65])
</code></pre>
<br>
<p><strong>방법 2:</strong>  추출하고 싶은 index의 집합을 <strong>변수에 지정한 후</strong> 추출</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[index]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([23,  7, 65])
</code></pre>
  <br>
<br>
<h3 id="2-2-2차원-array"><a class="markdownIt-Anchor" href="#2-2-2차원-array"></a> 2-2. 2차원 array</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], </span><br><span class="line">                  [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], </span><br><span class="line">                  [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[[<span class="number">0</span>,<span class="number">1</span>], :]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[:, [<span class="number">1</span>,<span class="number">3</span>]]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 2,  4],
       [ 6,  8],
       [10, 12]])
</code></pre>
<br>
 <br> 
<h2 id="3-boolean-인덱싱"><a class="markdownIt-Anchor" href="#3-boolean-인덱싱"></a> <strong>3. Boolean 인덱싱</strong></h2>
<p>조건 필터링을 통하여 Boolean값을 이용한 색인</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">                 [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">                 [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="3-1-true와-false값으로-색인하기"><a class="markdownIt-Anchor" href="#3-1-true와-false값으로-색인하기"></a> 3-1. True와 False값으로 색인하기</h3>
<p>boolean index의 수가 꼭 array의 index와 같아야 됨!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myTrueFalse = [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[myTrueFalse]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-43-9c52b39d81ae&gt; in &lt;module&gt;
----&gt; 1 arr[myTrueFalse]


IndexError: boolean index did not match indexed array along dimension 0; dimension is 7 but corresponding boolean dimension is 3
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myTrueFalse = [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr[myTrueFalse]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7])
</code></pre>
<br>
  <br>
<h3 id="3-2-조건필터"><a class="markdownIt-Anchor" href="#3-2-조건필터"></a> 3-2. 조건필터</h3>
<p>조건 연산자를 활용하여 필터를 생성할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d &gt; <span class="number">2</span>  <span class="comment"># "2보다 크다"라는 조건의 만족여부에 따라 Boolean index 생성</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[False, False,  True,  True],
       [ True,  True,  True,  True],
       [ True,  True,  True,  True]])
</code></pre>
<br>
<p>위 Boolean index를 다시 array에 적용하여 해당 부분을 추출: <strong>arr2d[조건필터]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[arr2d &gt; <span class="number">2</span>]  <span class="comment"># 1차원 array로 반환</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d[arr2d &lt; <span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 2, 3, 4])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (4) 행렬. Broadcasting</title>
    <url>/2020/05/20/S-Python-Numpy4/</url>
    <content><![CDATA[<p>행렬 (덧셈, 뺄셈, 곱셈).  Broadcasting.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%96%89%EB%A0%AC-%EB%8D%A7%EC%85%88"><strong>1. 행렬 - 덧셈</strong></a>
<ul>
<li><a href="#1-1-%EB%8D%A7%EC%85%88">1-1. 덧셈</a></li>
<li><a href="#1-2-sum-matrix%EC%95%88%EC%9D%98-%EA%B3%84%EC%82%B0">1-2. Sum – Matrix안의 계산</a></li>
</ul>
</li>
<li><a href="#2-%ED%96%89%EB%A0%AC-%EB%BA%84%EC%85%88"><strong>2. 행렬 - 뺄셈</strong></a></li>
<li><a href="#3-%ED%96%89%EB%A0%AC-%EA%B3%B1%EC%85%88"><strong>3. 행렬 - 곱셈</strong></a>
<ul>
<li><a href="#3-1-%EC%9D%BC%EB%B0%98-%EA%B3%B1%EC%85%88">3-1. 일반 곱셈</a></li>
<li><a href="#3-2-dot-product-%EB%82%B4%EC%A0%81%EA%B3%B1">3-2. dot product / 내적곱</a></li>
</ul>
</li>
<li><a href="#4-broadcasting"><strong>4. Broadcasting</strong></a>
<ul>
<li><a href="#4-1-%EC%88%AB%EC%9E%90%EC%9D%98-%EC%97%B0%EC%82%B0">4-1. 숫자의 연산</a></li>
<li><a href="#4-2-array-%EB%B0%B0%EC%97%B4%EC%9D%98-broadcasting">4-2. array (배열)의 broadcasting</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-행렬-덧셈"><a class="markdownIt-Anchor" href="#1-행렬-덧셈"></a> <strong>1. 행렬 - 덧셈</strong></h2>
<p><strong>행렬의 shape이 같아야 덧셈 가능</strong></p>
<h3 id="1-1-덧셈"><a class="markdownIt-Anchor" href="#1-1-덧셈"></a> 1-1. 덧셈</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 6, 8],
       [3, 5, 7]])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b    <span class="comment"># shape이 다르면 error발생</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-7-37f7d36ad418&gt; in &lt;module&gt;
----&gt; 1 a + b    # shape이 다르면 error발생


ValueError: operands could not be broadcast together with shapes (2,3) (3,2) 
</code></pre>
<br>
<h3 id="1-2-sum-matrix안의-계산"><a class="markdownIt-Anchor" href="#1-2-sum-matrix안의-계산"></a> 1-2. Sum – Matrix안의 계산</h3>
<p><strong>명령어:</strong> np.sum(‘array_name’, axis = ‘0/1/…’)</p>
<p><strong>주의:</strong> 계산할 때 <strong>axis의 방향대로 Sum을 구한다.</strong></p>
<p>예를 들면, 2darray에서,</p>
<ul>
<li>
<p>axis = 0 이면: 수직방향으로 Sum을 구한다</p>
</li>
<li>
<p>axis = 1 이면: 수평방향으로 Sum을 구한다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sum(a, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([3, 5, 7])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sum(a, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([6, 9])
</code></pre>
<br>
  <br>
<h2 id="2-행렬-뺄셈"><a class="markdownIt-Anchor" href="#2-행렬-뺄셈"></a> <strong>2. 행렬 - 뺄셈</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2, -2, -2],
       [ 1,  1,  1]])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - b    <span class="comment"># shape이 다르면 error발생</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-18-e62ba154daaa&gt; in &lt;module&gt;
----&gt; 1 a - b    # shape이 다르면 error발생


ValueError: operands could not be broadcast together with shapes (2,3) (3,2) 
</code></pre>
<br>
<br>
<h2 id="3-행렬-곱셈"><a class="markdownIt-Anchor" href="#3-행렬-곱셈"></a> <strong>3. 행렬 - 곱셈</strong></h2>
<h3 id="3-1-일반-곱셈"><a class="markdownIt-Anchor" href="#3-1-일반-곱셈"></a> 3-1. 일반 곱셈</h3>
<p>일반곱셈은 덧셈과 뺏셈이랑 동일하게 같은 위치에 있는 애들끼리 곱한다.<br>
<strong>[shape이 완전 같아야 함]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 3,  8, 15],
       [ 2,  6, 12]])
</code></pre>
 <br>  
<h3 id="3-2-dot-product-내적곱"><a class="markdownIt-Anchor" href="#3-2-dot-product-내적곱"></a> 3-2. dot product / 내적곱</h3>
<p><strong>[맞닿는 shape이 같아야 함]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">              [<span class="number">5</span>, <span class="number">6</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.shape, b.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((2, 3), (3, 2))
</code></pre>
<br>
<p><strong>방법 1: np.dot(a, b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.dot(a, b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22, 28],
       [31, 40]])
</code></pre>
<br>
<p><strong>방법2: a.dot(b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.dot(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22, 28],
       [31, 40]])
</code></pre>
<br>
<br>  
<h2 id="4-broadcasting"><a class="markdownIt-Anchor" href="#4-broadcasting"></a> <strong>4. Broadcasting</strong></h2>
<h3 id="4-1-숫자의-연산"><a class="markdownIt-Anchor" href="#4-1-숫자의-연산"></a> 4-1. 숫자의 연산</h3>
<p>array a 의 모든 원소에 3을 더하고 싶다면:</p>
<ul>
<li>단순히 행렬 덧셈을 사용할 때:</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 5, 6],
       [5, 6, 7]])
</code></pre>
<br>
<ul>
<li>Broadcasting 사용할 때:</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a + <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[4, 5, 6],
       [5, 6, 7]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a - <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2, -1,  0],
       [-1,  0,  1]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 3,  6,  9],
       [ 6,  9, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a / <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0.33333333, 0.66666667, 1.        ],
       [0.66666667, 1.        , 1.33333333]])
</code></pre>
<br>
 <br> 
<h3 id="4-2-array-배열의-broadcasting"><a class="markdownIt-Anchor" href="#4-2-array-배열의-broadcasting"></a> 4-2. array (배열)의 broadcasting</h3>
<p>original array의 shape이 유지됨.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([[<span class="number">1</span>],</span><br><span class="line">              [<span class="number">2</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.shape, b.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((2, 3), (2, 1))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 2, 3],
       [4, 6, 8]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">              [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a * b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  4,  9],
       [ 2,  6, 12]])
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Numpy - (3) 수열. 정렬</title>
    <url>/2020/05/20/S-Python-Numpy3/</url>
    <content><![CDATA[<p>arange. range. 정렬(sort &amp; argsort)</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-arange%EB%9E%80"><strong>1. arange란?</strong></a>
<ul>
<li><a href="#1-1-%EC%88%9C%EC%84%9C%EB%8C%80%EB%A1%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90-%EA%B0%92%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EB%A0%A4%EB%A9%B4">1-1. 순서대로 리스트에 값을 생성하려면?</a></li>
<li><a href="#1-2-arange%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C-%EC%89%BD%EA%B2%8C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0">1-2. arange를 사용해서 쉽게 생성하기</a></li>
<li><a href="#1-3-keyword%EC%9D%B8%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0">1-3. keyword인자를 사용해보기</a></li>
<li><a href="#1-4-%ED%99%80%EC%88%98%EC%9D%98-%EA%B0%92%EB%A7%8C-%EC%83%9D%EC%84%B1">1-4. 홀수의 값만 생성</a></li>
</ul>
</li>
<li><a href="#2-range-numpy%EC%99%80%EB%8A%94-%EC%83%81%EA%B4%80%EC%97%86%EB%8A%94-python%EB%AC%B8%EB%B2%95"><strong>2. range (Numpy와는 상관없는 Python문법)</strong></a></li>
<li><a href="#3-%EC%A0%95%EB%A0%AC"><strong>3. 정렬</strong></a>
<ul>
<li><a href="#3-1-1%EC%B0%A8%EC%9B%90-%EC%A0%95%EB%A0%AC">3-1. 1차원 정렬</a></li>
<li><a href="#3-2-n%EC%B0%A8%EC%9B%90-%EC%A0%95%EB%A0%AC">3-2. N차원 정렬</a></li>
<li><a href="#3-3-index%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%98%EB%8A%94-argsort">3-3. index를 반환하는 argsort</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-arange란"><a class="markdownIt-Anchor" href="#1-arange란"></a> <strong>1. arange란?</strong></h2>
<p>arange와 range를 같이 보고 이해하면 됨</p>
<p><strong>[실제 상황 예시]</strong></p>
<p>우리는 순차적인 값을 생성할 때가 많다. 예를 들면:</p>
<ol>
<li>회원에 대한 가입번호 부여</li>
<li>100개 한정 판매 상품에 대한 고유 번호 부여</li>
</ol>
<p>이 밖에도 데이터 관리를 위한 인덱스를 차례대로 부여하는 것은 매우 흔한 일이다.</p>
  <br>
<h3 id="1-1-순서대로-리스트에-값을-생성하려면"><a class="markdownIt-Anchor" href="#1-1-순서대로-리스트에-값을-생성하려면"></a> 1-1. 순서대로 리스트에 값을 생성하려면?</h3>
<p>1~10까지 값을 생성하려면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
 <br> 
<h3 id="1-2-arange를-사용해서-쉽게-생성하기"><a class="markdownIt-Anchor" href="#1-2-arange를-사용해서-쉽게-생성하기"></a> 1-2. arange를 사용해서 쉽게 생성하기</h3>
<p><strong>np.arange(a, b):</strong> <strong><font color="red">a</font></strong> 부터 <strong><font color="red">b-1</font></strong> 까지 생성한다  <strong><font color="red">(a포함, b미포함)</font></strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
 <br>
<h3 id="1-3-keyword인자를-사용해보기"><a class="markdownIt-Anchor" href="#1-3-keyword인자를-사용해보기"></a> 1-3. keyword인자를 사용해보기</h3>
<p><strong>np.arange(start = a,  stop = b)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(start=<span class="number">1</span>, stop=<span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(stop=<span class="number">11</span>, start=<span class="number">1</span>)  <span class="comment"># start &amp; stop 지정했기 때문에 순서 바꿔도 됨</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">11</span>,<span class="number">1</span>)  <span class="comment"># start &amp; stop 지정 안하면 순서 바꿨을 때 오류 남</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([], dtype=int32)
</code></pre>
<br>
<h3 id="1-4-홀수의-값만-생성"><a class="markdownIt-Anchor" href="#1-4-홀수의-값만-생성"></a> 1-4. 홀수의 값만 생성</h3>
<p>1~10 사이의 값중 홀수만 생성</p>
<p><strong>step 키워드 활용</strong></p>
<p>np.arange(start, stop, step)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7, 9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(start=<span class="number">1</span>, stop=<span class="number">11</span>, step=<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 3, 5, 7, 9])
</code></pre>
 <br>
<br>
<h2 id="2-range-numpy와는-상관없는-python문법"><a class="markdownIt-Anchor" href="#2-range-numpy와는-상관없는-python문법"></a> <strong>2. range (Numpy와는 상관없는 Python문법)</strong></h2>
<ul>
<li>
<p>range는 말 그대로 범위를 지정해 주는 것이다</p>
</li>
<li>
<p>보통 for-in 의 반복문에서 많이 사용된다</p>
</li>
<li>
<p>arange와는 다르게 array형태로 저장되어있지 않고 그냥 가볍게 바로바로 쓴다</p>
<br>
</li>
</ul>
<p><strong>arange 구문 활용시</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.arange(<span class="number">1</span>, <span class="number">11</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<p><strong>range 구문 활용시</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>, <span class="number">2</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
3
5
7
9
</code></pre>
<br>
<br>
<h2 id="3-정렬"><a class="markdownIt-Anchor" href="#3-정렬"></a> <strong>3. 정렬</strong></h2>
<h3 id="3-1-1차원-정렬"><a class="markdownIt-Anchor" href="#3-1-1차원-정렬"></a> 3-1. 1차원 정렬</h3>
<p>1차원 정렬은 매우 간단함</p>
<ul>
<li>오름차순으로 정렬: np.sort(arr)</li>
<li>내림차순으로 정렬: np.sort(arr)[::-1]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr = np.array([<span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)[::<span class="number">-1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([10,  9,  8,  8,  7,  6,  5,  4,  3,  2,  1])
</code></pre>
<br>
<p>하지만, 그냥 이상태에서는 정렬된 이 값들이 <strong>유지가 안됨</strong><br>
값을 sort 된 상태로 유지시키려면:</p>
<ul>
<li>변수로 다시 지정해주기</li>
<li>np.sort(arr) 대신 arr.sort() 쓴다 [arr자체에 sort명령을 씌워줌]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr    <span class="comment"># np.sort 만 실행했을 때 유지가 안됨</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1, 10,  5,  8,  2,  4,  3,  6,  8,  7,  9])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2 = np.sort(arr)   <span class="comment"># 방법1: arr2로 지정하기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr.sort()    <span class="comment"># 방법2: arr.sort 사용하기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  8,  9, 10])
</code></pre>
<br>
 <br> 
<h3 id="3-2-n차원-정렬"><a class="markdownIt-Anchor" href="#3-2-n차원-정렬"></a> 3-2. N차원 정렬</h3>
<p>N차원 정렬에서는 axis 중요함. (즉, 정렬 기준이 되는 축)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d = np.array([[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], </span><br><span class="line">                  [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">                  [<span class="number">10</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">11</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(3, 4)
</code></pre>
<br>
<p><strong>열 정렬 (왼쪽에서 오른쪽으로 정렬) – axis 1을 기준으로 삼</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">1</span>)   <span class="comment"># 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 1,  2,  3,  4],
       [ 9, 10, 11, 12]])
</code></pre>
  <br>
<p><strong>행 정렬 (위에서 아래로 정렬) – axis 0을 기준으로 삼</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 4,  3,  2,  1],
       [ 5,  6,  7,  8],
       [10,  9, 12, 11]])
</code></pre>
<br>
<br>  
<h3 id="3-3-index를-반환하는-argsort"><a class="markdownIt-Anchor" href="#3-3-index를-반환하는-argsort"></a> 3-3. index를 반환하는 argsort</h3>
<p>정렬한 결과에는 값을 반환하는 것이 아닌 index를 반환한다</p>
 <br>
<p><strong>열 정렬 (왼쪽에서 오른쪽으로 정렬)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">1</span>)  <span class="comment"># sort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 1,  2,  3,  4],
       [ 9, 10, 11, 12]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(arr2d, axis = <span class="number">1</span>)   <span class="comment"># argsort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 1, 2, 3],
       [3, 2, 1, 0],
       [1, 0, 3, 2]], dtype=int64)
</code></pre>
 <br>
<br>
<p><strong>행 정렬 (위에서 아래로 정렬)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">arr2d   <span class="comment"># 정렬 전</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 5,  6,  7,  8],
       [ 4,  3,  2,  1],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.sort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># sort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 4,  3,  2,  1],
       [ 5,  6,  7,  8],
       [10,  9, 12, 11]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(arr2d, axis = <span class="number">0</span>)   <span class="comment"># argsort 정렬 후</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[1, 1, 1, 1],
       [0, 0, 0, 0],
       [2, 2, 2, 2]], dtype=int64)
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (1) row &amp; column 의 추가 및 제거</title>
    <url>/2020/06/18/S-Python-Pandas-Pre1/</url>
    <content><![CDATA[<h1 id="row-column-의-추가-및-제거"><a class="markdownIt-Anchor" href="#row-column-의-추가-및-제거"></a> row &amp; column 의 추가 및 제거</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-row%EC%9D%98-%EC%B6%94%EA%B0%80"><strong>1. row의 추가</strong></a></li>
<li><a href="#2-column%EC%9D%98-%EC%B6%94%EA%B0%80"><strong>2. column의 추가</strong></a></li>
<li><a href="#3-row%EC%9D%98-%EC%A0%9C%EA%B1%B0"><strong>3. row의 제거</strong></a></li>
<li><a href="#4-column%EC%9D%98-%EC%A0%9C%EA%B1%B0"><strong>4. column의 제거</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>
<h2 id="1-row의-추가"><a class="markdownIt-Anchor" href="#1-row의-추가"></a> <strong>1. row의 추가</strong></h2>
<blockquote>
<p><em>df_name</em> <strong>.append ( {…} , ignore_index = True )</strong></p>
</blockquote>
<blockquote>
<p>dictionary 형태의 데이터를 만들어 준다음 <strong>append()</strong> 함수를 사용하여 데이터를 추가할 수 있다. <strong>ignore_index=True</strong>옵션을 반드시 같이 추가해야한다</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.append({<span class="string">'이름'</span>: <span class="string">'홍길동'</span>, <span class="string">'그룹'</span>: <span class="string">'a그룹'</span>, <span class="string">'소속사'</span>:<span class="string">'A사'</span>, <span class="string">'성별'</span>: <span class="string">'남자'</span>, <span class="string">'생년월일'</span>: <span class="string">'1990-01-01'</span>, <span class="string">'키'</span>: <span class="number">185.0</span>, <span class="string">'혈액형'</span>: <span class="string">'B'</span>, <span class="string">'브랜드평판지수'</span>: <span class="number">12345678</span>}, ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>15</th>
      <td>홍길동</td>
      <td>a그룹</td>
      <td>A사</td>
      <td>남자</td>
      <td>1990-01-01</td>
      <td>185.0</td>
      <td>B</td>
      <td>12345678</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<br> 
<h2 id="2-column의-추가"><a class="markdownIt-Anchor" href="#2-column의-추가"></a> <strong>2. column의 추가</strong></h2>
<blockquote>
<p>새로운 column을 만들고 값을 대입해주면, column이 쉽게 추가될 수 있다</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'국적'</span>] = <span class="string">'대한민국'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>국적</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>대한민국</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>새로운 column의 값을 다르게 부여하고 싶다면 loc 함수를 활용하면 된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'이름'</span>] == <span class="string">'지드래곤'</span>, <span class="string">'국적'</span>] = <span class="string">'korea'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>국적</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>korea</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>대한민국</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>대한민국</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="3-row의-제거"><a class="markdownIt-Anchor" href="#3-row의-제거"></a> <strong>3. row의 제거</strong></h2>
<blockquote>
<ul>
<li>하나의 행: <em>df_name</em> <strong>.drop</strong> (<em>index_num</em>, <strong>axis = 0</strong>)</li>
<li>복수의 행: <em>df_name</em> <strong>.drop</strong> ( [ <em>index_num1, index_num2</em> ], <strong>axis = 0</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop(<span class="number">3</span>, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop([<span class="number">3</span>, <span class="number">5</span>], axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="4-column의-제거"><a class="markdownIt-Anchor" href="#4-column의-제거"></a> <strong>4. column의 제거</strong></h2>
<blockquote>
<ul>
<li>하나의 열: <em>df_name</em> <strong>.drop</strong> ( ‘<em>col_name</em>’, <strong>axis = 1</strong>)</li>
<li>복수의 열: <em>df_name</em> <strong>.drop</strong> ( [ <em>‘col_name1’, ‘col_name2’</em> ], <strong>axis = 1</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop(<span class="string">"그룹"</span>, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop([<span class="string">"그룹"</span>, <span class="string">"소속사"</span>], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (4) Series의 Type 변환하기</title>
    <url>/2020/06/19/S-Python-Pandas-Pre4/</url>
    <content><![CDATA[<h1 id="series의-type-변환하기"><a class="markdownIt-Anchor" href="#series의-type-변환하기"></a> Series의 Type 변환하기</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-series%EC%9D%98-type"><strong>1. Series의 Type</strong></a>
<ul>
<li><a href="#1-1-type-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">1-1. Type 확인하기</a></li>
<li><a href="#1-2-type-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0">1-2. Type 변환하기</a></li>
<li><a href="#1-3-%EB%82%A0%EC%A7%9C-datatime-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0">1-3. 날짜 (datatime) 타입 변환하기</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h2 id="1-series의-type"><a class="markdownIt-Anchor" href="#1-series의-type"></a> <strong>1. Series의 Type</strong></h2>
<h3 id="1-1-type-확인하기"><a class="markdownIt-Anchor" href="#1-1-type-확인하기"></a> 1-1. Type 확인하기</h3>
<blockquote>
<p><strong><em>df_name</em>.info()</strong> 명령어를 사용하여 Dataframe의 Series Type을 확인할 수 있다<br>
<strong><em>df_name</em> [ “<em>col_name</em>” ] .dtypes</strong> 명령어를 사용하여 특정 Series의 Type을 확인할 수 있다</p>
</blockquote>
<blockquote>
<p><strong>Series Type</strong></p>
<ul>
<li>object: 일반 문자영 타입</li>
<li>float: 실수</li>
<li>int: 정수</li>
<li>category: 카테고리</li>
<li>datatime: 시간</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
<pre><code>.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"이름"</span>].dtypes</span><br></pre></td></tr></tbody></table></figure>
<pre><code>dtype('O')
</code></pre>
<br>
<h3 id="1-2-type-변환하기"><a class="markdownIt-Anchor" href="#1-2-type-변환하기"></a> 1-2. Type 변환하기</h3>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.astype(…)</strong></p>
</blockquote>
<br>
<p><strong>e.g.</strong>  “키” column을 float에서 int로 변환해보기</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-12-c145a39acdb2&gt; in &lt;module&gt;
----&gt; 1 df["키"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    866 
    867         if not np.isfinite(arr).all():
--&gt; 868             raise ValueError("Cannot convert non-finite values (NA or inf) to integer")
    869 
    870     elif is_object_dtype(arr):


ValueError: Cannot convert non-finite values (NA or inf) to integer
</code></pre>
<br>
<p>“키” column에 NaN값이 존재하기 때문에 Error 발생!</p>
<br>
<blockquote>
<p><strong>column에 NaN 값이 있는 경우:</strong> 면저 NaN 값을 다른 값으로 대체한 후 Type을 변환할 수 있다</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>] = df[<span class="string">"키"</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173
1     177
2     180
3     178
4     162
5     178
6     182
7      -1
8     179
9     167
10     -1
11    183
12    175
13    176
14    174
Name: 키, dtype: int32
</code></pre>
<br>
<h3 id="1-3-날짜-datatime-타입-변환하기"><a class="markdownIt-Anchor" href="#1-3-날짜-datatime-타입-변환하기"></a> 1-3. 날짜 (datatime) 타입 변환하기</h3>
<p><strong>(1) datetime 타입으로 변환하기</strong></p>
<blockquote>
<p><strong>pd.to_datetime</strong> ( <em>df_name</em> [ “<em>col_nema</em>”] )</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     1995-10-13
1     1988-08-18
2     1996-12-10
3     1995-12-30
4     1995-07-23
5     1997-09-01
6     1995-08-09
7     1998-08-26
8     1992-12-04
9     1994-03-22
10    1989-03-09
11    1997-03-30
12    1995-07-21
13    1995-06-08
14    1993-03-09
Name: 생년월일, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.to_datetime(df[<span class="string">"생년월일"</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1995-10-13
1    1988-08-18
2    1996-12-10
3    1995-12-30
4    1995-07-23
5    1997-09-01
6    1995-08-09
7    1998-08-26
8    1992-12-04
9    1994-03-22
10   1989-03-09
11   1997-03-30
12   1995-07-21
13   1995-06-08
14   1993-03-09
Name: 생년월일, dtype: datetime64[ns]
</code></pre>
<p><br>변환된 것을 <strong>원래 column에 다시 대입을 해줘야</strong> 정상적으로 변환된 값이 들어간다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>] = pd.to_datetime(df[<span class="string">"생년월일"</span>])</span><br><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1995-10-13
1    1988-08-18
2    1996-12-10
3    1995-12-30
4    1995-07-23
5    1997-09-01
6    1995-08-09
7    1998-08-26
8    1992-12-04
9    1994-03-22
10   1989-03-09
11   1997-03-30
12   1995-07-21
13   1995-06-08
14   1993-03-09
Name: 생년월일, dtype: datetime64[ns]
</code></pre>
<br>  
<p><strong>(2) datatime 타입을 활용하기</strong></p>
<blockquote>
<p><strong><em>df_name</em> [ “<em>datetime_col</em>” ] .dt</strong><br>
을 활용하여 매우 손쉽게 <strong>년, 월, 일, 요일</strong> 등등 날짜 정보를 세부적으로 <strong>추출</strong>해낼 수 있다</p>
</blockquote>
<blockquote>
<ul>
<li>년: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.year</strong></li>
<li>월: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.month</strong></li>
<li>일: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.day</strong></li>
<li>요일: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.dayofweek</strong></li>
<li>주: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.weekofyear</strong></li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1995-10-13
1    1988-08-18
2    1996-12-10
3    1995-12-30
4    1995-07-23
5    1997-09-01
6    1995-08-09
7    1998-08-26
8    1992-12-04
9    1994-03-22
10   1989-03-09
11   1997-03-30
12   1995-07-21
13   1995-06-08
14   1993-03-09
Name: 생년월일, dtype: datetime64[ns]
</code></pre>
  <br>
<p><strong>년 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.year</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     1995
1     1988
2     1996
3     1995
4     1995
5     1997
6     1995
7     1998
8     1992
9     1994
10    1989
11    1997
12    1995
13    1995
14    1993
Name: 생년월일, dtype: int64
</code></pre>
<br>
<p><strong>월 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.month</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     10
1      8
2     12
3     12
4      7
5      9
6      8
7      8
8     12
9      3
10     3
11     3
12     7
13     6
14     3
Name: 생년월일, dtype: int64
</code></pre>
<br>  
<p><strong>일 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.day</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     13
1     18
2     10
3     30
4     23
5      1
6      9
7     26
8      4
9     22
10     9
11    30
12    21
13     8
14     9
Name: 생년월일, dtype: int64
</code></pre>
 <br> 
<p><strong>요일 추출:</strong></p>
<blockquote>
<p>월 [0],  화 [1],  수 [2],  목 [3],  금 [4],  토 [5],  일 [6]</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.dayofweek</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     4
1     3
2     1
3     5
4     6
5     0
6     2
7     2
8     4
9     1
10    3
11    6
12    4
13    3
14    1
Name: 생년월일, dtype: int64
</code></pre>
 <br> 
<p><strong>주 추출:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.weekofyear</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     41
1     33
2     50
3     52
4     29
5     36
6     32
7     35
8     49
9     12
10    10
11    13
12    29
13    23
14    10
Name: 생년월일, dtype: int64
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (2) 결측값 및 중복값 처리</title>
    <url>/2020/06/18/S-Python-Pandas-Pre2/</url>
    <content><![CDATA[<h1 id="결측값-및-중복값-처리"><a class="markdownIt-Anchor" href="#결측값-및-중복값-처리"></a> 결측값 및 중복값 처리</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-dropna"><strong>1. 결측값을 제거하기 – dropna()</strong></a></li>
<li><a href="#2-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%9D%84-%EC%B1%84%EC%9B%8C%EC%A3%BC%EA%B8%B0-fillna"><strong>2. 결측값을 채워주기 – fillna</strong></a>
<ul>
<li><a href="#2-1-na%EA%B0%92%EC%9D%84-%ED%8A%B9%EC%A0%95-%EC%88%AB%EC%9E%90%EB%A1%9C-%EC%B1%84%EC%9A%B0%EA%B8%B0">2-1. NA값을 특정 숫자로 채우기</a></li>
<li><a href="#2-2-na%EA%B0%92%EC%9D%84-%ED%86%B5%EA%B3%84%EA%B0%92%EC%9C%BC%EB%A1%9C-%EC%B1%84%EC%9A%B0%EA%B8%B0">2-2. NA값을 통계값으로 채우기</a></li>
</ul>
</li>
<li><a href="#3-%EC%A4%91%EB%B3%B5%EB%90%9C-%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-drop_duplicates"><strong>3. 중복된 값을 제거하기 – drop_duplicates</strong></a>
<ul>
<li><a href="#3-1-column%EC%9D%98-%EC%A4%91%EB%B3%B5%EA%B0%92-%EC%A0%9C%EA%B1%B0">3-1. column의 중복값 제거</a></li>
<li><a href="#3-2-%ED%96%89-%EC%A0%84%EC%B2%B4-%EC%A0%9C%EA%B1%B0">3-2. 행 전체 제거</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-결측값을-제거하기-dropna"><a class="markdownIt-Anchor" href="#1-결측값을-제거하기-dropna"></a> <strong>1. 결측값을 제거하기 – dropna()</strong></h2>
<blockquote>
<ul>
<li>결측값이 있는 행을 제거:<br>
(1) <em>df_name</em> <strong>.dropna()</strong><br>
(2) <em>df_name</em> <strong>.dropna(axis=0)</strong></li>
<li>결측값이 있는 열을 제거: <em>df_name</em> <strong>.dropna(axis=1)</strong></li>
<li>NA가 하나라도 있는 경우 제거: <em>df_name</em> <strong>.dropna</strong>(axis=0, <strong>how = ‘any’</strong>)</li>
<li>모두가 NA인 경우 제거: <em>df_name</em> <strong>.dropna</strong>(axis=0, <strong>how = ‘all’</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>(1) 결측값이 있는 행 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>(2) 결측 값이 있는 열 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>(3) NA가 하나라도 있는 경우 행 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">0</span>, how = <span class="string">'any'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>(4) 모두가 NA인 경우 행 제거</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[<span class="number">10</span>] = np.nan</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">0</span>, how = <span class="string">'all'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442.0</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h2 id="2-결측값을-채워주기-fillna"><a class="markdownIt-Anchor" href="#2-결측값을-채워주기-fillna"></a> <strong>2. 결측값을 채워주기 – fillna</strong></h2>
<blockquote>
<p><em>df_name</em> [ '<em>na_col_name</em> ’ ] <strong>.fillna(<em>fill_value</em>)</strong></p>
</blockquote>
<blockquote>
<p>결측값을 채운 데이터프레임을 유지시키려면:<br>
(1) inplace = True 옵션을 추가함<br>
(2) 원 dataframe에 다시 대입함</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<p>"키"에 2개의 데이터가 누락, "그룹"에 1개의 데이터가 누락된 것을 확인할 수 있다</p>
  <br>
<h3 id="2-1-na값을-특정-숫자로-채우기"><a class="markdownIt-Anchor" href="#2-1-na값을-특정-숫자로-채우기"></a> 2-1. NA값을 특정 숫자로 채우기</h3>
<blockquote>
<ul>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>new_value</em>, inplace = True)</li>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] = <em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>new_value</em>)</li>
</ul>
</blockquote>
<br>
<p><strong>e.g.</strong> 누락된 ‘키’ 값을 '-1’로 채워줌</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>  
<p>이때는 원 데이터가 변화되지 않음.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
 <br>
<p>수정된 데이터를 유지시키려면:</p>
<p>&lt;방법1&gt;</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(<span class="number">-1</span>, inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>
<p>&lt;방법2&gt;</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7      -1.0
8     179.2
9     167.1
10     -1.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>
<h3 id="2-2-na값을-통계값으로-채우기"><a class="markdownIt-Anchor" href="#2-2-na값을-통계값으로-채우기"></a> 2-2. NA값을 통계값으로 채우기</h3>
<blockquote>
<ul>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.mean()</strong>, inplace = True)</li>
<li><em>df_name</em>[ '<em>na_col_name</em> ’ ] = <em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.mean()</strong>)</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
 <br> 
<p><strong>(1) 평균으로 대체</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>175.79230769230767
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].mean(), inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].mean())</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.600000
1     177.000000
2     180.000000
3     178.000000
4     162.100000
5     178.000000
6     182.300000
7     175.792308
8     179.200000
9     167.100000
10    175.792308
11    183.000000
12    175.000000
13    176.000000
14    174.000000
Name: 키, dtype: float64
</code></pre>
 <br> 
<p><strong>(2) 중위값으로 대체</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].median()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>177.0
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].median(), inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].median())</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7     177.0
8     179.2
9     167.1
10    177.0
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<p><br>  <br></p>
<h2 id="3-중복된-값을-제거하기-drop_duplicates"><a class="markdownIt-Anchor" href="#3-중복된-값을-제거하기-drop_duplicates"></a> <strong>3. 중복된 값을 제거하기 – drop_duplicates</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br> 
<h3 id="3-1-column의-중복값-제거"><a class="markdownIt-Anchor" href="#3-1-column의-중복값-제거"></a> 3-1. column의 중복값 제거</h3>
<blockquote>
<p><em>df_name</em> [“<em>col_name</em>”] <strong>.drop_duplicates( keep = … )</strong></p>
</blockquote>
<blockquote>
<ul>
<li>여러 개 중복값 (NaN 포함) 중에서 기본적으로 첫번째 것만 유지시키고 나머지는 다 제거한다</li>
<li>하지만 keep 옵션으로 유지하고 싶은 데이터를 선택할 수 있다. [keep: ‘first’ / ‘last’]</li>
<li>이때는 해당 위치의 값만 삭제되고 행 자체는 유지된다</li>
</ul>
</blockquote>
<br>
<p><strong>(1) 중복값 중의 첫번째를 유지시킴  <font color="blue"> (default) </font></strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3       NaN
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates()  <span class="comment"># remove 2nd "178.0" &amp; 2nd "NaN"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3       NaN
4     162.1
5     178.0
6     182.3
8     179.2
9     167.1
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'first'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3       NaN
4     162.1
5     178.0
6     182.3
8     179.2
9     167.1
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<br>  
<p><strong>(2) 중복값 중의 마지막을 유지시킴</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
3     178.0
4     162.1
5     178.0
6     182.3
7       NaN
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     173.6
1     177.0
2     180.0
4     162.1
5     178.0
6     182.3
8     179.2
9     167.1
10      NaN
11    183.0
12    175.0
13    176.0
14    174.0
Name: 키, dtype: float64
</code></pre>
 <br> 
<p><strong>이때는 해당위치의 값만 제거되고 행 자체는 유지됨</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>] = df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>NaN</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-2-행-전체-제거"><a class="markdownIt-Anchor" href="#3-2-행-전체-제거"></a> 3-2. 행 전체 제거</h3>
<blockquote>
<p><em>df_name</em> <strong>.drop_duplicates</strong>(“<em>col_name</em>”, keep = …)</p>
</blockquote>
<blockquote>
<p>지정한 column에서 중복값이 포함되어 있으면 중복값을 포함한 행을 전체 제거</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>NaN</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     방탄소년단
1        빅뱅
2       NaN
3     방탄소년단
4       마마무
5     방탄소년단
6      뉴이스트
7       아이들
8     방탄소년단
9        핫샷
10     소녀시대
11     아스트로
12     뉴이스트
13     뉴이스트
14    방탄소년단
Name: 그룹, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop_duplicates(<span class="string">'그룹'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.drop_duplicates(<span class="string">'그룹'</span>, keep = <span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (6) 데이터프레임의 산술연산</title>
    <url>/2020/06/20/S-Python-Pandas-Pre6/</url>
    <content><![CDATA[<h1 id="데이터프레임의-산술연산"><a class="markdownIt-Anchor" href="#데이터프레임의-산술연산"></a> 데이터프레임의 산술연산</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-column-%EA%B3%BC-column-%EA%B0%84-%EC%97%B0%EC%82%B0-"><strong>1. Column 과 Column 간 연산 (+, -, *, /, %)</strong></a></li>
<li><a href="#2-column-%EA%B3%BC-%EC%88%AB%EC%9E%90-%EA%B0%84-%EC%97%B0%EC%82%B0-"><strong>2. Column 과 숫자 간 연산 (+, -, *, /, %)</strong></a></li>
<li><a href="#3-%EB%B3%B5%ED%95%A9-%EC%97%B0%EC%82%B0"><strong>3. 복합 연산</strong></a></li>
<li><a href="#4-mean-sum-%EC%9D%84-axis-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EC%97%B0%EC%82%B0"><strong>4. mean(), sum() 을 axis 기준으로 연산</strong></a></li>
<li><a href="#5-nan-%EA%B0%92%EC%9D%B4-%EC%A1%B4%EC%9E%AC%ED%95%A0-%EA%B2%BD%EC%9A%B0-%EC%97%B0%EC%82%B0"><strong>5. NaN 값이 존재할 경우 연산</strong></a></li>
<li><a href="#6-dataframe-%EA%B3%BC-dataframe-%EA%B0%84-%EC%97%B0%EC%82%B0"><strong>6. DataFrame 과 DataFrame 간 연산</strong></a>
<ul>
<li><a href="#6-1-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%ED%8F%AC%ED%95%A8%EB%90%9C-series-dataframe%EC%9D%98-%EC%97%B0%EC%82%B0%EC%9D%80-%EB%B6%88%EA%B0%80%ED%95%98%EB%8B%A4">6-1. 문자열이 포함된 Series / DataFrame의 연산은 불가하다</a></li>
<li><a href="#6-2-%EB%91%90-dataframe%EC%9D%98-column-%EC%9D%B4%EB%A6%84%EC%9D%80-%EA%B0%99%EC%9C%BC%EB%82%98-column-%EC%88%9C%EC%84%9C%EB%A7%8C-%EB%B0%94%EB%80%8C%EC%96%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0">6-2. 두 DataFrame의 column 이름은 같으나 column 순서만 바뀌어 있는 경우</a></li>
<li><a href="#6-3-%ED%96%89%EC%9D%98-%EA%B0%AF%EC%88%98%EA%B0%80-%EB%8B%A4%EB%A5%B8-%EA%B2%BD%EC%9A%B0">6-3. 행의 갯수가 다른 경우</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>예제 DataFrame 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="1-column-과-column-간-연산-"><a class="markdownIt-Anchor" href="#1-column-과-column-간-연산-"></a> <strong>1. Column 과 Column 간 연산 (+, -, *, /, %)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(df[<span class="string">"통계"</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>pandas.core.series.Series
</code></pre>
<p>즉 Series 과 Series 간의 연산</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] + df[<span class="string">"체육"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    180
1    190
2    210
3    280
4    270
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] - df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    10
1    15
2     0
3   -15
4   -20
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] * df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    3000
1    3850
2    6400
3    8500
4    7125
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1.200000
1    1.272727
2    1.000000
3    0.850000
4    0.789474
dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] % df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    10
1    15
2     0
3    85
4    75
dtype: int64
</code></pre>
<p><br> <br></p>
<h2 id="2-column-과-숫자-간-연산-"><a class="markdownIt-Anchor" href="#2-column-과-숫자-간-연산-"></a> <strong>2. Column 과 숫자 간 연산 (+, -, *, /, %)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    60
1    70
2    80
3    85
4    75
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    70
1    80
2    90
3    95
4    85
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] - <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    50
1    60
2    70
3    75
4    65
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] * <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    600
1    700
2    800
3    850
4    750
Name: 통계, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    6.0
1    7.0
2    8.0
3    8.5
4    7.5
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] % <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    0
1    0
2    0
3    5
4    5
Name: 통계, dtype: int64
</code></pre>
<br>
<br>
<h2 id="3-복합-연산"><a class="markdownIt-Anchor" href="#3-복합-연산"></a> <strong>3. 복합 연산</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계미술+10"</span>] = df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
      <th>통계미술+10</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
      <td>120</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
      <td>135</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
      <td>170</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
      <td>195</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
      <td>180</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] - df[<span class="string">"체육"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     40
1     60
2    110
3     90
4     70
dtype: int64
</code></pre>
<br>
  <br>
<h2 id="4-mean-sum-을-axis-기준으로-연산"><a class="markdownIt-Anchor" href="#4-mean-sum-을-axis-기준으로-연산"></a> <strong>4. mean(), sum() 을 axis 기준으로 연산</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>(1) 각 column의 <font color="blue">모든 row 값의 합</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sum(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>통계    370
미술    380
체육    380
dtype: int64
</code></pre>
<br>  
<p><strong>(2) 각 column의 <font color="blue">모든 row 값의 평균</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.mean(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>통계    74.0
미술    76.0
체육    76.0
dtype: float64
</code></pre>
<br>
<p><strong>(3) 각 row의 <font color="blue">모든 column 값의 합</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sum(axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    180
1    190
2    210
3    280
4    270
dtype: int64
</code></pre>
<br>
<p><strong>(4) 각 row의 <font color="blue">모든 column 값의 평균</font> 구하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.mean(axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    60.000000
1    63.333333
2    70.000000
3    93.333333
4    90.000000
dtype: float64
</code></pre>
<br>
  <br>
<h2 id="5-nan-값이-존재할-경우-연산"><a class="markdownIt-Anchor" href="#5-nan-값이-존재할-경우-연산"></a> <strong>5. NaN 값이 존재할 경우 연산</strong></h2>
<blockquote>
<p>NaN 값이 포함된 모든 연산의 결과가 다 NaN 값이다</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, np.nan, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, np.nan, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, np.nan] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60.0</td>
      <td>50.0</td>
      <td>70.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>NaN</td>
      <td>55.0</td>
      <td>65.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80.0</td>
      <td>NaN</td>
      <td>50.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85.0</td>
      <td>100.0</td>
      <td>95.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75.0</td>
      <td>95.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    30.0
1     NaN
2    40.0
3    42.5
4    37.5
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1000</span> / df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    16.666667
1          NaN
2    12.500000
3    11.764706
4    13.333333
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / np.nan</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0   NaN
1   NaN
2   NaN
3   NaN
4   NaN
Name: 통계, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.nan / df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0   NaN
1   NaN
2   NaN
3   NaN
4   NaN
Name: 통계, dtype: float64
</code></pre>
<br>
 <br>  
<h2 id="6-dataframe-과-dataframe-간-연산"><a class="markdownIt-Anchor" href="#6-dataframe-과-dataframe-간-연산"></a> <strong>6. DataFrame 과 DataFrame 간 연산</strong></h2>
<h3 id="6-1-문자열이-포함된-series-dataframe의-연산은-불가하다"><a class="markdownIt-Anchor" href="#6-1-문자열이-포함된-series-dataframe의-연산은-불가하다"></a> 6-1. 문자열이 포함된 Series / DataFrame의 연산은 불가하다</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">'미술'</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">'체육'</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="string">'good'</span>, <span class="string">'bad'</span>, <span class="string">'ok'</span> , <span class="string">'good'</span>, <span class="string">'ok'</span>], <span class="string">'미술'</span>: [<span class="number">50</span>, <span class="number">60</span> , <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">'체육'</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">70</span> , <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>60</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>70</td>
      <td>55</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>80</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>85</td>
      <td>100</td>
      <td>95</td>
    </tr>
    <tr>
      <th>4</th>
      <td>75</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
      <th>체육</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>good</td>
      <td>50</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>bad</td>
      <td>60</td>
      <td>65</td>
    </tr>
    <tr>
      <th>2</th>
      <td>ok</td>
      <td>80</td>
      <td>50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>good</td>
      <td>100</td>
      <td>70</td>
    </tr>
    <tr>
      <th>4</th>
      <td>ok</td>
      <td>95</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 + df2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)
    148     try:
--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)
    150     except TypeError:


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)
    207     if use_numexpr:
--&gt; 208         return _evaluate(op, op_str, a, b)
    209     return _evaluate_standard(op, op_str, a, b)


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)
    120     if result is None:
--&gt; 121         result = _evaluate_standard(op, op_str, a, b)
    122 


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)
     69     with np.errstate(all="ignore"):
---&gt; 70         return op(a, b)
     71 


TypeError: unsupported operand type(s) for +: 'int' and 'str'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)
    148     try:
--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)
    150     except TypeError:


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)
    207     if use_numexpr:
--&gt; 208         return _evaluate(op, op_str, a, b)
    209     return _evaluate_standard(op, op_str, a, b)


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)
    120     if result is None:
--&gt; 121         result = _evaluate_standard(op, op_str, a, b)
    122 


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)
     69     with np.errstate(all="ignore"):
---&gt; 70         return op(a, b)
     71 


TypeError: can only concatenate str (not "int") to str
</code></pre>
<br>
<br>
<h3 id="6-2-두-dataframe의-column-이름은-같으나-column-순서만-바뀌어-있는-경우"><a class="markdownIt-Anchor" href="#6-2-두-dataframe의-column-이름은-같으나-column-순서만-바뀌어-있는-경우"></a> 6-2. 두 DataFrame의 column 이름은 같으나 column 순서만 바뀌어 있는 경우</h3>
<blockquote>
<p>연산시 자동으로 column 이름 기준으로 연산 된다</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'미술'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'통계'</span>:[<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'미술'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 + df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>70</td>
      <td>70</td>
    </tr>
    <tr>
      <th>1</th>
      <td>90</td>
      <td>90</td>
    </tr>
    <tr>
      <th>2</th>
      <td>110</td>
      <td>110</td>
    </tr>
    <tr>
      <th>3</th>
      <td>130</td>
      <td>130</td>
    </tr>
    <tr>
      <th>4</th>
      <td>150</td>
      <td>150</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br> 
<h3 id="6-3-행의-갯수가-다른-경우"><a class="markdownIt-Anchor" href="#6-3-행의-갯수가-다른-경우"></a> 6-3. 행의 갯수가 다른 경우</h3>
<blockquote>
<p>행 index 기준으로 연산하되, 하나의 DataFrame에만 존재하는 행은 연산결과가 NaN으로 나옴</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'미술'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>], <span class="string">'통계'</span>:[<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">110</span>] })</span><br><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'미술'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
    <tr>
      <th>5</th>
      <td>60</td>
      <td>110</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>통계</th>
      <th>미술</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>70</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>80</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>90</td>
    </tr>
    <tr>
      <th>4</th>
      <td>50</td>
      <td>100</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 * df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>미술</th>
      <th>통계</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>600.0</td>
      <td>600.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1400.0</td>
      <td>1400.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2400.0</td>
      <td>2400.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3600.0</td>
      <td>3600.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5000.0</td>
      <td>5000.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (7) 기타</title>
    <url>/2020/06/20/S-Python-Pandas-Pre7/</url>
    <content><![CDATA[<h1 id="기타"><a class="markdownIt-Anchor" href="#기타"></a> 기타</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85%EB%B3%84-column-%EC%84%A0%ED%83%9D-select_dtypes"><strong>1. 데이터 타입별 column 선택 (select_dtypes)</strong></a>
<ul>
<li><a href="#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%EC%9E%88%EB%8A%94-column%EB%A7%8C-%EC%84%A0%ED%83%9D-%EB%B0%B0%EC%A0%9C">문자열이 있는 column만 선택 / 배제</a></li>
</ul>
</li>
<li><a href="#2-one-hot-encoding-%EC%9B%90%ED%95%AB%EC%9D%B8%EC%BD%94%EB%94%A9"><strong>2. One-hot-encoding (원핫인코딩)</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"korean-idol.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="1-데이터-타입별-column-선택-select_dtypes"><a class="markdownIt-Anchor" href="#1-데이터-타입별-column-선택-select_dtypes"></a> <strong>1. 데이터 타입별 column 선택 (select_dtypes)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<h3 id="문자열이-있는-column만-선택-배제"><a class="markdownIt-Anchor" href="#문자열이-있는-column만-선택-배제"></a> 문자열이 있는 column만 선택 / 배제</h3>
<blockquote>
<ul>
<li><em>df_name</em> <strong>.select_dtypes (include = ‘object’)</strong></li>
<li><em>df_name</em> <strong>.select_dtypes (exclude = ‘object’)</strong></li>
</ul>
</blockquote>
<br>  
<p><strong>(1) 문자열 column만 선택</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.select_dtypes(include = <span class="string">'object'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>혈액형</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>A</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>A</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>A</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>A</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>A</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>O</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>B</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>O</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>A</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>A</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>B</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>O</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>O</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>(2) 문자열 column 배제 (문자열이 아닌 column만 선택)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.select_dtypes(exclude = <span class="string">'object'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>173.6</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>177.0</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>180.0</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>178.0</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>162.1</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>178.0</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>182.3</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>179.2</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>167.1</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>183.0</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>175.0</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>176.0</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>174.0</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>문자열이 포함된 DataFrame의 연산으로 발생되는 Error문제는 이 방법을 이용하여 해결할 수 있다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)
    148     try:
--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)
    150     except TypeError:


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)
    207     if use_numexpr:
--&gt; 208         return _evaluate(op, op_str, a, b)
    209     return _evaluate_standard(op, op_str, a, b)


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)
    120     if result is None:
--&gt; 121         result = _evaluate_standard(op, op_str, a, b)
    122 


D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)
     69     with np.errstate(all="ignore"):
---&gt; 70         return op(a, b)
     71 


TypeError: can only concatenate str (not "int") to str
</code></pre>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.select_dtypes(exclude = <span class="string">'object'</span>) + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>183.6</td>
      <td>10523270</td>
    </tr>
    <tr>
      <th>1</th>
      <td>187.0</td>
      <td>9916957</td>
    </tr>
    <tr>
      <th>2</th>
      <td>190.0</td>
      <td>8273755</td>
    </tr>
    <tr>
      <th>3</th>
      <td>188.0</td>
      <td>8073511</td>
    </tr>
    <tr>
      <th>4</th>
      <td>172.1</td>
      <td>7650938</td>
    </tr>
    <tr>
      <th>5</th>
      <td>188.0</td>
      <td>5208345</td>
    </tr>
    <tr>
      <th>6</th>
      <td>192.3</td>
      <td>4989802</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>4668625</td>
    </tr>
    <tr>
      <th>8</th>
      <td>189.2</td>
      <td>4570318</td>
    </tr>
    <tr>
      <th>9</th>
      <td>177.1</td>
      <td>4036499</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>3918671</td>
    </tr>
    <tr>
      <th>11</th>
      <td>193.0</td>
      <td>3506037</td>
    </tr>
    <tr>
      <th>12</th>
      <td>185.0</td>
      <td>3301664</td>
    </tr>
    <tr>
      <th>13</th>
      <td>186.0</td>
      <td>3274147</td>
    </tr>
    <tr>
      <th>14</th>
      <td>184.0</td>
      <td>2925452</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>(3) “문자열 column” / “비문자열 column” 의 column명을 추출</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">obj_cols = df.select_dtypes(include = <span class="string">'object'</span>).columns</span><br><span class="line">obj_cols</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '혈액형'], dtype='object')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">num_cols = df.select_dtypes(exclude = <span class="string">'object'</span>).columns</span><br><span class="line">num_cols</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['키', '브랜드평판지수'], dtype='object')
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[num_cols]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>173.6</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>177.0</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>180.0</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>178.0</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>162.1</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>178.0</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>182.3</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>179.2</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>167.1</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>NaN</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>183.0</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>175.0</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>176.0</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>174.0</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h2 id="2-one-hot-encoding-원핫인코딩"><a class="markdownIt-Anchor" href="#2-one-hot-encoding-원핫인코딩"></a> <strong>2. One-hot-encoding (원핫인코딩)</strong></h2>
<blockquote>
<p><strong>One-hot-encoding:</strong> Categorical data를 dummy data로 변환시키는 방법</p>
<ul>
<li>Dummy data로 변환 시 한개의 요소는 True (1) 로, 나머지 요소는 Flase (0) 로 변환시킨다</li>
</ul>
</blockquote>
<blockquote>
<p><strong>pd.get_dummies</strong> (<em>df_name</em> [ ‘<em>col_name</em>’ ], prefix = “…”)</p>
<ul>
<li>prefix: dummy data 로 분리된 새 column들의 column name에 접두사 붙이기</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'혈액형'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      A
1      A
2      A
3     AB
4      A
5      A
6      O
7      B
8      O
9      A
10     A
11     B
12    AB
13     O
14     O
Name: 혈액형, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">'혈액형'</span>])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">'혈액형'</span>], prefix = <span class="string">'혈액형'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>혈액형_A</th>
      <th>혈액형_AB</th>
      <th>혈액형_B</th>
      <th>혈액형_O</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<blockquote>
<p><strong>categorical data의 각 카테고리가 숫자형식으로 표현됐을 때 one-hot-encoding이 더 중요해지는 이유:</strong></p>
<ul>
<li>categorical data의 각 카테고리를 상징하는 숫자들은 <strong>그저 분류의 의미를 가질 뿐</strong>, 숫자의 크기 자체는 아무 의미도 없고, 숫자들의 연산도 역시 무의미하다.</li>
<li>하지만 이를 one-hot-encoding 작업 없이 머신러닝 알고리즘에 바로 넣으면 컴퓨터가 이 숫자들을 <strong>대소비교가 가능하고 연산이 가능하는 "숫자"로 인식</strong>하게 되므로 카테고리 간에 <strong>잘못된 관계</strong>를 맺을 수 있음.</li>
<li>따라서 이런 경우에는 one-hot-encoding 작업이 꼭 필요하다</li>
</ul>
</blockquote>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">blood_map = {</span><br><span class="line">    <span class="string">'A'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'B'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'AB'</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">'O'</span>: <span class="number">3</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>] = df[<span class="string">"혈액형"</span>].map(blood_map)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>혈액형_code</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    7
3    4
2    2
1    2
Name: 혈액형_code, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     0
1     0
2     0
3     2
4     0
5     0
6     3
7     1
8     3
9     0
10    0
11    1
12    2
13    3
14    3
Name: 혈액형_code, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[ <span class="string">"혈액형_code"</span> ])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">"혈액형_code"</span>], prefix = <span class="string">"혈액형"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>혈액형_0</th>
      <th>혈액형_1</th>
      <th>혈액형_2</th>
      <th>혈액형_3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>14</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (5) column 값을 변환시키는 방법</title>
    <url>/2020/06/19/S-Python-Pandas-Pre5/</url>
    <content><![CDATA[<h1 id="dataframe의-column-값을-변환시키는-방법"><a class="markdownIt-Anchor" href="#dataframe의-column-값을-변환시키는-방법"></a> DataFrame의 column 값을 변환시키는 방법</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-apply-%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98"><strong>1. apply + 일반 함수</strong></a>
<ul>
<li><a href="#1-1-%EB%AA%A9%ED%91%9C-%EC%84%B1%EB%B3%84-column%EC%9D%98-%EB%82%A8%EC%9E%90-%EC%97%AC%EC%9E%90%EB%A5%BC-1-2%EB%A1%9C-%EB%B0%94%EA%BE%BC%EB%8B%A4">1-1. (목표) ‘성별’ column의 “남자” / "여자"를 1 / 2로 바꾼다</a></li>
<li><a href="#1-2-%EB%AA%A9%ED%91%9C-cm%EB%8B%B9-%EB%B8%8C%EB%9E%9C%EB%93%9C-%ED%8F%89%ED%8C%90%EC%A7%80%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%9C%EB%8B%A4-%EB%B8%8C%EB%9E%9C%EB%93%9C%ED%8F%89%ED%8C%90%EC%A7%80%EC%88%98-%ED%82%A4">1-2. (목표) cm당 브랜드 평판지수를 구한다 (브랜드평판지수 / 키)</a></li>
</ul>
</li>
<li><a href="#2-apply-lamda-%ED%95%A8%EC%88%98"><strong>2. apply + lamda 함수</strong></a></li>
<li><a href="#3-map-map-%ED%95%A8%EC%88%98"><strong>3. map + map 함수</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-apply-일반-함수"><a class="markdownIt-Anchor" href="#1-apply-일반-함수"></a> <strong>1. apply + 일반 함수</strong></h2>
<blockquote>
<p>apply는 Series나 DataFrame에 좀 더 <strong>구체적인 로직</strong>을 적용하고 싶은 경우 활용한다</p>
<ul>
<li>apply를 적용하기 위해서는 함수가 먼저 정의되어야한다</li>
<li>apply는 정의한 로직 함수를 인자로 넘겨준다</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>
<p><strong>Series에 적용할 경우:</strong><br>
<em>df_name</em> [ “<em>col_name</em>” ] <strong>.apply( <em>func</em> )</strong></p>
</li>
<li>
<p><strong>DataFrame에 적용할 경우:</strong><br>
<em>df_name</em> <strong>.apply( <em>func</em>, axis = 1)</strong></p>
</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="1-1-목표-성별-column의-남자-여자를-1-2로-바꾼다"><a class="markdownIt-Anchor" href="#1-1-목표-성별-column의-남자-여자를-1-2로-바꾼다"></a> 1-1. (목표) ‘성별’ column의 “남자” / "여자"를 1 / 2로 바꾼다</h3>
<p><strong>변환 규칙:</strong><br>
남자: 1   여자: 2   기타: -1</p>
<br>
<p><strong>(1) 로직 함수 정의</strong></p>
<p><strong>[주의] 반드시 return 값이 존재</strong>하여야한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">male_or_female</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">"남자"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> x == <span class="string">"여자"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>(2) apply로 DataFrame에 적용</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"성별_NEW"</span>] = df[<span class="string">"성별"</span>].apply(male_or_female)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성별_NEW</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="1-2-목표-cm당-브랜드-평판지수를-구한다-브랜드평판지수-키"><a class="markdownIt-Anchor" href="#1-2-목표-cm당-브랜드-평판지수를-구한다-브랜드평판지수-키"></a> 1-2. (목표) cm당 브랜드 평판지수를 구한다 (브랜드평판지수 / 키)</h3>
<p><strong>변환 규칙:</strong><br>
키: 178  브랜드평판지수: 99000<br>
값: 99000 / 178</p>
<br>
<p><strong>(1) 로직 함수 정의</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cm_to_brand</span><span class="params">(df)</span>:</span></span><br><span class="line">    value = df[<span class="string">"브랜드평판지수"</span>] / df[<span class="string">"키"</span>]</span><br><span class="line">    <span class="keyword">return</span> value</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(2) apply로 DataFrame에 적용</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.apply(cm_to_brand, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     60617.857143
1     56027.949153
2     45965.250000
3     45356.747191
4     47198.815546
5     29260.308989
6     27371.321997
7              NaN
8     25503.950893
9     24156.128067
10             NaN
11    19158.617486
12    18866.594286
13    18603.051136
14    16812.885057
dtype: float64
</code></pre>
 <br>
<br> 
<h2 id="2-apply-lamda-함수"><a class="markdownIt-Anchor" href="#2-apply-lamda-함수"></a> <strong>2. apply + lamda 함수</strong></h2>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.apply (<em>lambda_func</em>)</strong></p>
</blockquote>
<blockquote>
<ul>
<li>lambda는 1줄로 작성하는 간단 함수식이다</li>
<li>return을 별도로 멱기하지 않는다</li>
</ul>
</blockquote>
 <br> 
<p><strong>(1) male_or_female 함수</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">male_or_female = <span class="keyword">lambda</span> x: <span class="number">1</span> <span class="keyword">if</span> x == <span class="string">"남자"</span> <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"성별"</span>].apply(male_or_female)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     1
1     1
2     1
3     1
4     0
5     1
6     1
7     0
8     1
9     1
10    0
11    1
12    1
13    1
14    1
Name: 성별, dtype: int64
</code></pre>
<br>  
<p><strong>(2) 실제로는 간단한 계산식을 적용하려는 경우에 많이 사용한다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"키/2"</span>] = df[<span class="string">"키"</span>].apply(<span class="keyword">lambda</span> x: x / <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성별_NEW</th>
      <th>키/2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>1</td>
      <td>86.80</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>1</td>
      <td>88.50</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>1</td>
      <td>90.00</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>1</td>
      <td>89.00</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>2</td>
      <td>81.05</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p>apply에 함수식을 만들어서 적용해주는 것과 동일하기 때문에, <strong>복잠한 조건식은 &lt;함수&gt;로, 간단한 계산식은 &lt; lambda &gt; 로</strong> 적용하면 된다</p>
<p><br><br></p>
<h2 id="3-map-map-함수"><a class="markdownIt-Anchor" href="#3-map-map-함수"></a> <strong>3. map + map 함수</strong></h2>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.map ( <em>map_func</em> )</strong></p>
</blockquote>
<blockquote>
<p><strong>Step 1:</strong> dictionary 형식으로 map 함수를 정의하기<br>
<strong>Step 2:</strong> DataFrame / Series에 map 함수를 적용</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성별_NEW</th>
      <th>키/2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>1</td>
      <td>86.80</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>1</td>
      <td>88.50</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>1</td>
      <td>90.00</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>1</td>
      <td>89.00</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>2</td>
      <td>81.05</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_map = {</span><br><span class="line">    <span class="string">"남자"</span>: <span class="string">"male"</span>,</span><br><span class="line">    <span class="string">"여자"</span>: <span class="string">"female"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"성별"</span>].map(my_map)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       male
1       male
2       male
3       male
4     female
5       male
6       male
7     female
8       male
9       male
10    female
11      male
12      male
13      male
14      male
Name: 성별, dtype: object
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 시각화</title>
    <url>/2020/06/25/S-Python-Pandas-visual/</url>
    <content><![CDATA[<h1 id="pandas-데이터-시각화"><a class="markdownIt-Anchor" href="#pandas-데이터-시각화"></a> Pandas - 데이터 시각화</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EC%A4%80%EB%B9%84-%ED%95%9C%EA%B8%80%ED%8F%B0%ED%8A%B8-%EA%B9%A8%EC%A7%90%ED%98%84%EC%83%81-%ED%95%B4%EA%B2%B0"><strong>0. 준비 – 한글폰트 깨짐현상 해결</strong></a></li>
<li><a href="#1-plot-%EA%B7%B8%EB%9E%98%ED%94%84"><strong>1. Plot 그래프</strong></a>
<ul>
<li><a href="#line-%EA%B7%B8%EB%9E%98%ED%94%84">line 그래프</a></li>
<li><a href="#bar-%EA%B7%B8%EB%9E%98%ED%94%84">bar 그래프</a></li>
<li><a href="#%ED%9E%88%EC%8A%A4%ED%86%A0%EA%B7%B8%EB%9E%A8-hist">히스토그램 (hist)</a></li>
<li><a href="#%EC%BB%A4%EB%84%90-%EB%B0%80%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-kde">커널 밀도 그래프 (kde)</a></li>
<li><a href="#%EA%B3%A0%EB%B0%80%EB%8F%84-%EC%82%B0%EC%A0%90%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-hexbin">고밀도 산점도 그래프 (hexbin)</a></li>
<li><a href="#%EB%B0%95%EC%8A%A4-%ED%94%8C%EB%A1%AF-box">박스 플롯 (box)</a></li>
<li><a href="#area-plot">area plot</a></li>
<li><a href="#%ED%8C%8C%EC%9D%B4-%EA%B7%B8%EB%9E%98%ED%94%84-pie-plot">파이 그래프 (pie plot)</a></li>
<li><a href="#%EC%82%B0%EC%A0%90%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-scatter-plot">산점도 그래프 (scatter plot)</a></li>
</ul>
</li>
</ul>
<p></p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"house_price_clean.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>4</th>
      <td>인천</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>3488</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3288</th>
      <td>경남</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3065</td>
    </tr>
    <tr>
      <th>3289</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>3290</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>3291</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>3292</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>3293 rows × 5 columns</p>
</div>
<br>
  <br>
<h2 id="0-준비-한글폰트-깨짐현상-해결"><a class="markdownIt-Anchor" href="#0-준비-한글폰트-깨짐현상-해결"></a> <strong>0. 준비 – 한글폰트 깨짐현상 해결</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em></p>
<ol>
<li><a href="https://blog.naver.com/itisik/221789012960" target="_blank" rel="noopener">주피터 노트북(Jupyter notebook) - Matplotlib 한글 깨짐 현상 해결</a></li>
<li><a href="https://teddylee777.github.io/visualization/matplotlib-%EC%8B%9C%EA%B0%81%ED%99%94-%ED%95%9C%EA%B8%80%ED%8F%B0%ED%8A%B8%EC%A0%81%EC%9A%A9" target="_blank" rel="noopener">matplotlib/seaborn으로 시각화할 때 한글 폰트 깨짐현상 해결방법</a></li>
</ol>
</blockquote>
<br>
<p>Jupyter Notebook에서 그래프를 그릴 때 한글 깨짐 현상이 발생한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179eb070ac8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_9_2.png" alt="png"></p>
<blockquote>
<p>우리는 <strong>설정 파일을 수정하여 한글 폰트를 영구 등록</strong>함으로써 이 문제를 해결할 수 있다</p>
</blockquote>
<br>
<p><strong>(1) 설정 파일 위치 찾기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"></span><br><span class="line"><span class="comment">#font 설정 파일 위치 출력</span></span><br><span class="line">mpl.matplotlib_fname()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'D:\\Anaconda\\lib\\site-packages\\matplotlib\\mpl-data\\matplotlibrc'
</code></pre>
<br>
<p><strong>(2) 설정 파일 수정하기</strong></p>
<p>맨 마지막 <em><strong>matplotlibrc</strong></em> 는 우리가 수정해야할 파일의 이름이다</p>
<ul>
<li>
<p>step 1. 한글 폰트 적용<br>
수정전: <em><mark>#</mark> font.family   : <mark>sans-serif</mark></em><br>
수정후: <em>font.family   : <mark>Malgun Gothic</mark></em></p>
</li>
<li>
<p>step 2. minus 깨짐 방지<br>
수정전: <em><mark>#</mark> axes.unicode_minus  : <mark>True</mark> ## use unicode for the minus symbol</em><br>
수정후: <em>axes.unicode_minus  : <mark>False</mark> ## use unicode for the minus symbol</em></p>
</li>
</ul>
<br>
<p><strong>(3) Tip: 전역으로 시각화 figsize 조절</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">'figure.figsize'</span>] = (<span class="number">8</span>, <span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>설정을 완료한 후 jupyter notebook의 kernel을 리셋하고 다시 그래프를 그리면,<br>
한글폰트가 깨지지 않고 잘 출력되는 것을 확인하실 수 있다.</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f01b0c48&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_24_1.png" alt="png"></p>
<br>
<br>
<h2 id="1-plot-그래프"><a class="markdownIt-Anchor" href="#1-plot-그래프"></a> <strong>1. Plot 그래프</strong></h2>
<blockquote>
<p><em>df_name</em> [ <em>col_name</em> ] <strong>.plot</strong> ( <strong>kind</strong> = ‘…’ )</p>
</blockquote>
<blockquote>
<ul>
<li>plot은 일반 선그래프를 나타난다</li>
<li>kind 옵션을 통해 원하는 그패프를 그릴 수 있다</li>
</ul>
</blockquote>
<br>
<p><strong>kind 옵션:</strong></p>
<ul>
<li>
<p>line: 선 그래프</p>
</li>
<li>
<p>bar: 바 그래프</p>
</li>
<li>
<p>barh: 수평 바 프래프</p>
</li>
<li>
<p>hist: 히스토르램</p>
</li>
<li>
<p>kde: 커널 밀도 그래프</p>
</li>
<li>
<p>hexbin: 고밀도 산점도 그래프</p>
</li>
<li>
<p>box: 박스 플롯</p>
</li>
<li>
<p>area: 면적 그래프</p>
</li>
<li>
<p>pie: 파이 그래프</p>
</li>
<li>
<p>scatter: 산점도 그래프</p>
<br> 
</li>
</ul>
<h3 id="line-그래프"><a class="markdownIt-Anchor" href="#line-그래프"></a> line 그래프</h3>
<blockquote>
<p>line 그래프는 데이터가 연속적인 경우 사용하기 적절하다. (예를 들면, 주가 데이터)</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>4</th>
      <td>인천</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>3488</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3288</th>
      <td>경남</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3065</td>
    </tr>
    <tr>
      <th>3289</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>3290</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>3291</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>3292</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>3293 rows × 5 columns</p>
</div>
<br>  
<p><strong>(1) 모든 observation의 분양가 살펴보기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># index - 분양가</span></span><br><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">'line'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f01a0bc8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_38_1.png" alt="png"></p>
<br>
<p><strong>(2) 연도에 따른 서울 분양가 변화 추세</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># select "서울" data</span></span><br><span class="line">df_seoul = df.loc[df[<span class="string">"지역"</span>] == <span class="string">"서울"</span>]</span><br><span class="line">df_seoul</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>64</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td>6320</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3178</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>1</td>
      <td>8779</td>
    </tr>
    <tr>
      <th>3234</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>8193</td>
    </tr>
    <tr>
      <th>3235</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>8140</td>
    </tr>
    <tr>
      <th>3236</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>13835</td>
    </tr>
    <tr>
      <th>3237</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>9039</td>
    </tr>
  </tbody>
</table>
<p>212 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># group by "year" </span></span><br><span class="line">df_seoul_year = df_seoul.groupby(<span class="string">'연도'</span>).mean()</span><br><span class="line">df_seoul_year</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>월</th>
      <th>분양가</th>
    </tr>
    <tr>
      <th>연도</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2015</th>
      <td>11.0</td>
      <td>6201.000000</td>
    </tr>
    <tr>
      <th>2016</th>
      <td>6.5</td>
      <td>6674.520833</td>
    </tr>
    <tr>
      <th>2017</th>
      <td>6.5</td>
      <td>6658.729167</td>
    </tr>
    <tr>
      <th>2018</th>
      <td>6.5</td>
      <td>7054.687500</td>
    </tr>
    <tr>
      <th>2019</th>
      <td>6.5</td>
      <td>8735.083333</td>
    </tr>
    <tr>
      <th>2020</th>
      <td>1.5</td>
      <td>9647.375000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># line plot</span></span><br><span class="line">df_seoul_year[<span class="string">"분양가"</span>].plot(kind = <span class="string">'line'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028b5c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_43_1.png" alt="png"></p>
<br>
<h3 id="bar-그래프"><a class="markdownIt-Anchor" href="#bar-그래프"></a> bar 그래프</h3>
<blockquote>
<p>bar 그패프는 그룹별로 비교할 때 유용하다</p>
</blockquote>
 <br> 
<p><strong>지역별 평균 분양가 살펴보기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역
강원    2448.156863
경기    4133.952830
경남    2858.932367
경북    2570.465000
광주    3055.043750
대구    3679.620690
대전    3176.127389
부산    3691.981132
서울    7308.943396
세종    2983.543147
울산    2990.373913
인천    3684.302885
전남    2326.250000
전북    2381.416268
제주    3472.677966
충남    2534.950000
충북    2348.183962
Name: 분양가, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 수직 바 그래프</span></span><br><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean().plot(kind = <span class="string">'bar'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028b548&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_50_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 수평 바 그래프</span></span><br><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean().plot(kind = <span class="string">'barh'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179edd9d4c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_51_1.png" alt="png"></p>
<br>
<h3 id="히스토그램-hist"><a class="markdownIt-Anchor" href="#히스토그램-hist"></a> 히스토그램 (hist)</h3>
<blockquote>
<p>히스토그램은 <strong>분포-빈도 를 시각화</strong>하여 보여준다.<br>
가로축에는 분포를, 세로축에는 빈도가 시각화되어 보여짐.</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">"hist"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f021cc88&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_56_1.png" alt="png"></p>
<br>
<h3 id="커널-밀도-그래프-kde"><a class="markdownIt-Anchor" href="#커널-밀도-그래프-kde"></a> 커널 밀도 그래프 (kde)</h3>
<blockquote>
<ul>
<li>히스토그램과 유사하게 밀도를 보여주는 그래프다</li>
<li>히스토그램과 유사한 모양새를 각추고 있다</li>
<li>하지만 히스토그램과 다르게 부드러운 라인을 가지고 있다</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">"kde"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f043d608&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_61_1.png" alt="png"></p>
<br>
<h3 id="고밀도-산점도-그래프-hexbin"><a class="markdownIt-Anchor" href="#고밀도-산점도-그래프-hexbin"></a> 고밀도 산점도 그래프 (hexbin)</h3>
<blockquote>
<ul>
<li>hexbin은 고밀고 산점도 그래프다</li>
<li>x와 y 키 값을 넣어 주어야 한다</li>
<li>x, y 값 모두 numeric value 이어야한다</li>
<li>데이터의 밀도를 추정한다</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot(kind = <span class="string">"hexbin"</span>, x = <span class="string">"분양가"</span>, y = <span class="string">"연도"</span>, gridsize = <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028a9c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_66_1.png" alt="png"></p>
<br>
<h3 id="박스-플롯-box"><a class="markdownIt-Anchor" href="#박스-플롯-box"></a> 박스 플롯 (box)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_seoul = df.loc[df[<span class="string">"지역"</span>] == <span class="string">"서울"</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_seoul[<span class="string">"분양가"</span>].plot(kind = <span class="string">"box"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f226d748&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_70_1.png" alt="png"></p>
<br>
<p><strong>box plot 해석</strong></p>
<p><img src="/images/S-Python-Pandas-visual/R800x0" alt="box plot 해석"></p>
  <br>
<ul>
<li>
<p><strong>IQR (Inter Quantile Range)</strong>   = 3Q - 1Q</p>
</li>
<li>
<p><strong>Upper fence</strong> = 75th Percentile + 1.5*IQR</p>
</li>
<li>
<p><strong>Lower fence</strong> = 25th Percentile - 1.5*IQR</p>
<br>
</li>
</ul>
<p>box plot은 데이터 outlier 감지할 때 가장 많이 활용되며, 25%, median, 75% 분위값을 활용하는 용도로도 많이 활용된다</p>
  <br>
<h3 id="area-plot"><a class="markdownIt-Anchor" href="#area-plot"></a> area plot</h3>
<blockquote>
<p>area plot은 line 그래프에서 아래 area를 모두 색칠해 주는 것이 특징이다.</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역</th>
      <th>규모</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>4</th>
      <td>인천</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>3488</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>3288</th>
      <td>경남</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3065</td>
    </tr>
    <tr>
      <th>3289</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>3290</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>3291</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>3292</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>3293 rows × 5 columns</p>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"월"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">"line"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f22a6688&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_83_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"월"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">"area"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f2267588&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_84_1.png" alt="png"></p>
<br>
<h3 id="파이-그래프-pie-plot"><a class="markdownIt-Anchor" href="#파이-그래프-pie-plot"></a> 파이 그래프 (pie plot)</h3>
<blockquote>
<p>pie는 대표적으로 데이터의 점유율을 보유줄 때 유용하다</p>
</blockquote>
<br>  
<p><strong>연도별 분양가 데이터 점유율</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"연도"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">'pie'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f224fec8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_90_1.png" alt="png"></p>
<br>
<h3 id="산점도-그래프-scatter-plot"><a class="markdownIt-Anchor" href="#산점도-그래프-scatter-plot"></a> 산점도 그래프 (scatter plot)</h3>
<blockquote>
<ul>
<li>점으로 데이터를 표기해준다</li>
<li>x, y값을 넣어주어야한다 (hexbin과 유사)</li>
<li>x축과 y축을 지정해주면 그에 맞는 데이터 분포를 볼 수 있다</li>
<li>역시 numeric column 만 지정할 수 있다</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.plot(x = <span class="string">"월"</span>, y = <span class="string">"분양가"</span>, kind = <span class="string">"scatter"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f23372c8&gt;
</code></pre>
<p><img src="/images/S-Python-Pandas-visual/output_95_1.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>시각화</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (1) Series와 DataFrame</title>
    <url>/2020/05/22/S-Python-Pandas1/</url>
    <content><![CDATA[<h1 id="series-dataframe"><a class="markdownIt-Anchor" href="#series-dataframe"></a> <strong>Series &amp; DataFrame</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-pandas-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A1%9C%EB%93%9C"><strong>1. pandas 패키지 로드</strong></a></li>
<li><a href="#2-pandas%EC%9D%98-series-%EC%99%80-dataframe"><strong>2. pandas의 Series 와 DataFrame</strong></a>
<ul>
<li><a href="#2-1-series">2-1. Series</a></li>
<li><a href="#2-2-dataframe">2-2. DataFrame</a>
<ul>
<li><a href="#%EB%B0%A9%EB%B2%95-1-list%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0">방법 1. list로 만들기</a></li>
<li><a href="#%EB%B0%A9%EB%B2%95-2-dict%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0">방법 2. dict로 만들기</a></li>
</ul>
</li>
<li><a href="#2-3-index%EB%A5%BC-%ED%8A%B9%EC%A0%95column%EC%9C%BC%EB%A1%9C-%EC%A7%80%EC%A0%95%ED%95%98%EA%B8%B0">2-3. index를 특정column으로 지정하기</a></li>
<li><a href="#2-4-column-series">2-4. column = Series</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-pandas-패키지-로드"><a class="markdownIt-Anchor" href="#1-pandas-패키지-로드"></a> <strong>1. pandas 패키지 로드</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<p>별칭은 주로 pd로 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;module 'pandas' from 'D:\\Anaconda\\lib\\site-packages\\pandas\\__init__.py'&gt;
</code></pre>
<br>
 <br> 
<h2 id="2-pandas의-series-와-dataframe"><a class="markdownIt-Anchor" href="#2-pandas의-series-와-dataframe"></a> <strong>2. pandas의 Series 와 DataFrame</strong></h2>
<p><strong>1차원, 1개의 column은 Series라고 한다</strong></p>
<h3 id="2-1-series"><a class="markdownIt-Anchor" href="#2-1-series"></a> 2-1. Series</h3>
<p><strong>Series 생성:</strong></p>
<ul>
<li>
<p>pd.Series(“list”)</p>
</li>
<li>
<p>pd.Series(“list_name”)</p>
<br>
</li>
</ul>
<p>(1) pd.Series(“list”)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<br>
<p>(2) pd.Series(“list_name”)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.Series(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.Series(mylist)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<br>
 <br>   
<h3 id="2-2-dataframe"><a class="markdownIt-Anchor" href="#2-2-dataframe"></a> 2-2. DataFrame</h3>
<h4 id="방법-1-list로-만들기"><a class="markdownIt-Anchor" href="#방법-1-list로-만들기"></a> 방법 1. list로 만들기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">company1 = [[<span class="string">'삼성'</span>, <span class="number">2000</span>, <span class="string">'스마트폰'</span>],</span><br><span class="line">           [<span class="string">'현대'</span>, <span class="number">1000</span>, <span class="string">'자동차'</span>],</span><br><span class="line">           [<span class="string">'네이버'</span>, <span class="number">500</span>, <span class="string">'포털'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame(company1)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>&lt;활용을 하기 위해 DataFrame을 변수에 지정하기&gt;</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1 = pd.DataFrame(company1)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;<br />
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>&lt;제목컬럼 만들기&gt; – “dfname.column = [ ]”</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1.columns = [<span class="string">'기업명'</span>, <span class="string">'매출액'</span>, <span class="string">'업종'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<ul>
<li><strong>주의:</strong> column명의 개수는 반드시 DataFrame의 column수와 동일해야 함<br>
<br></li>
</ul>
<h4 id="방법-2-dict로-만들기"><a class="markdownIt-Anchor" href="#방법-2-dict로-만들기"></a> 방법 2. dict로 만들기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">company2 = {<span class="string">'기업명'</span>: [<span class="string">'삼성'</span>, <span class="string">'현대'</span>, <span class="string">'네이버'</span>],  </span><br><span class="line">            <span class="string">'매출액'</span>: [<span class="number">2000</span>, <span class="number">1000</span>, <span class="number">500</span>],  </span><br><span class="line">            <span class="string">'업종'</span>:   [<span class="string">'스므트폰'</span>, <span class="string">'자동차'</span>, <span class="string">'포털'</span>]</span><br><span class="line">            }</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.DataFrame(company2)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스므트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-3-index를-특정column으로-지정하기"><a class="markdownIt-Anchor" href="#2-3-index를-특정column으로-지정하기"></a> 2-3. index를 특정column으로 지정하기</h3>
<p>“dfname.index = [ ]” 명령을 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>1</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>2</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1.index = df1[<span class="string">'기업명'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>기업명</th>
      <th>매출액</th>
      <th>업종</th>
    </tr>
    <tr>
      <th>기업명</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>삼성</th>
      <td>삼성</td>
      <td>2000</td>
      <td>스마트폰</td>
    </tr>
    <tr>
      <th>현대</th>
      <td>현대</td>
      <td>1000</td>
      <td>자동차</td>
    </tr>
    <tr>
      <th>네이버</th>
      <td>네이버</td>
      <td>500</td>
      <td>포털</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-4-column-series"><a class="markdownIt-Anchor" href="#2-4-column-series"></a> 2-4. column = Series</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df1[<span class="string">'매출액'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>기업명
삼성     2000
현대     1000
네이버     500
Name: 매출액, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(df1[<span class="string">'매출액'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>pandas.core.series.Series
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (2) 파일 불러오기 및 복사</title>
    <url>/2020/05/24/S-Python-Pandas2/</url>
    <content><![CDATA[<h1 id="파일-불러오기-및-복사"><a class="markdownIt-Anchor" href="#파일-불러오기-및-복사"></a> 파일 불러오기 및 복사</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-csv%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0-pdread_csv"><strong>1. csv파일 읽어오기 – "pd.read_csv"</strong></a>
<ul>
<li><a href="#1-1-jupyter-notebook-%EA%B8%B0%EB%B0%98">1-1. Jupyter Notebook 기반</a></li>
<li><a href="#1-2-colab-%EA%B8%B0%EB%B0%98">1-2. Colab 기반</a></li>
</ul>
</li>
<li><a href="#2-excle%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0-pdread_excel"><strong>2. Excle파일 읽어오기 – "pd.read_excel"</strong></a>
<ul>
<li><a href="#2-1-jupyter-notebook-%EA%B8%B0%EB%B0%98">2-1. Jupyter Notebook 기반</a></li>
<li><a href="#2-2-colab-%EA%B8%B0%EB%B0%98">2-2. Colab 기반</a></li>
</ul>
</li>
<li><a href="#3-%EB%B3%B5%EC%82%AC-copy"><strong>3. 복사 (copy)</strong></a></li>
</ul>
<p></p>
  <br>
<h2 id="1-csv파일-읽어오기-pdread_csv"><a class="markdownIt-Anchor" href="#1-csv파일-읽어오기-pdread_csv"></a> <strong>1. csv파일 읽어오기 – "pd.read_csv"</strong></h2>
<h3 id="1-1-jupyter-notebook-기반"><a class="markdownIt-Anchor" href="#1-1-jupyter-notebook-기반"></a> 1-1. Jupyter Notebook 기반</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="1-2-colab-기반"><a class="markdownIt-Anchor" href="#1-2-colab-기반"></a> 1-2. Colab 기반</h3>
<p><strong>방법 1. 로컬에서 파일 읽어오기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> files</span><br><span class="line">myfile = files.upload()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">pd.read_csv(io.BytesIO(myfile[<span class="string">'korean-idol.csv'</span>]))</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>방법 2: 구글 드라이브에 있는 샘플 파일 읽어오기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive</span><br><span class="line">drive.mount(<span class="string">'/content/drive'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 나타나는 link에 따라 google drive 로그인하여 link복사, </span></span><br><span class="line"><span class="comment"># 'Enter your authorization code:'에서 복사된 link를 입력</span></span><br><span class="line"></span><br><span class="line">filename = <span class="string">'colab 왼쪽 목록에서 파일 경로를 복사하여 붙혀놓기'</span></span><br><span class="line"></span><br><span class="line">pd.read_csv(filename)</span><br></pre></td></tr></tbody></table></figure>
<p><br> <br></p>
<h2 id="2-excle파일-읽어오기-pdread_excel"><a class="markdownIt-Anchor" href="#2-excle파일-읽어오기-pdread_excel"></a> <strong>2. Excle파일 읽어오기 – "pd.read_excel"</strong></h2>
<h3 id="2-1-jupyter-notebook-기반"><a class="markdownIt-Anchor" href="#2-1-jupyter-notebook-기반"></a> 2-1. Jupyter Notebook 기반</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.read_excel(<span class="string">'korean-idol.xlsx'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="2-2-colab-기반"><a class="markdownIt-Anchor" href="#2-2-colab-기반"></a> 2-2. Colab 기반</h3>
<p><strong>구글 드라이브에 있는 샘플 파일 읽어오기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive</span><br><span class="line">drive.mount(<span class="string">'/content/drive'</span>)</span><br><span class="line"></span><br><span class="line">filename = <span class="string">'파일 경로 붙혀놓기'</span></span><br><span class="line"></span><br><span class="line">pd.read_excel(filename)</span><br></pre></td></tr></tbody></table></figure>
<br>
<br>
<h2 id="3-복사-copy"><a class="markdownIt-Anchor" href="#3-복사-copy"></a> <strong>3. 복사 (copy)</strong></h2>
<blockquote>
<p>dataframe을 복사할 때 "<em>df_name</em>.copy()"를 사용한다</p>
</blockquote>
  <br>
<ul>
<li><strong>"="를 사용</strong>하여 원본데이터를 "복사"하면 복사된 데이터를 수정할 때 <strong>원본 데이터도 같이 변화한다</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new = df</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new[<span class="string">'이름'</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_new.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<p>이렇게 되는 이유는 두 dataframe이 같은 메모리 주소를 참조하기 때문이다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df_new))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109f6e6c8'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109f6e6c8'
</code></pre>
  <br>
<ul>
<li>원본 데이터를 유지 시키고, 새로운 변수에 복사할 때 <strong>copy()</strong> 를 사용한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy = df.copy()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<p>복사된 dataframe이 원본 데이터와 같은 메모리 주소를 참조한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109fefa48'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">hex(id(df_copy))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'0x25109ff4408'
</code></pre>
 <br>
<p>copy본을 수정할 때 원본 데이터가 유지된다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy[<span class="string">'이름'</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
  <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (4) 정렬</title>
    <url>/2020/05/24/S-Python-Pandas4/</url>
    <content><![CDATA[<h1 id="정렬-sort"><a class="markdownIt-Anchor" href="#정렬-sort"></a> 정렬 (sort)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-index-%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC"><strong>1. index 순으로 정렬</strong></a></li>
<li><a href="#2-column%EC%9D%98-value%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC"><strong>2. column의 value순으로 정렬</strong></a>
<ul>
<li><a href="#2-1-%EB%8B%A8%EC%9D%BC-column-%EA%B8%B0%EC%A4%80">2-1. 단일 column 기준</a></li>
<li><a href="#2-2-%EB%B3%B5%EC%88%98-column-%EA%B8%B0%EC%A4%80">2-2. 복수 column 기준</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
  <br>
<h2 id="1-index-순으로-정렬"><a class="markdownIt-Anchor" href="#1-index-순으로-정렬"></a> <strong>1. index 순으로 정렬</strong></h2>
<blockquote>
<p>오름차순 정렬: <em>df_name</em>.sort_index()   <font color="blue"><em>(default)</em></font><br>
내림차순 정렬: <em>df_name</em>.sort_index(ascending = False)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_index()  <span class="comment"># 오름차순</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_index(ascending = <span class="literal">False</span>)  <span class="comment"># 내림차순</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
 <br> 
<h2 id="2-column의-value순으로-정렬"><a class="markdownIt-Anchor" href="#2-column의-value순으로-정렬"></a> <strong>2. column의 value순으로 정렬</strong></h2>
<blockquote>
<p>오름차순 정렬: <em>df_name</em>.sort_values(by = ‘<em>col_name</em>’)<br>
내림차순 정렬: <em>df_name</em>.sort_values(by = ‘<em>col_name</em>’, ascending = False)</p>
</blockquote>
<h3 id="2-1-단일-column-기준"><a class="markdownIt-Anchor" href="#2-1-단일-column-기준"></a> 2-1. 단일 column 기준</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by=<span class="string">'키'</span>)  <span class="comment"># 오름차순</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by = <span class="string">'키'</span>, ascending = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-2-복수-column-기준"><a class="markdownIt-Anchor" href="#2-2-복수-column-기준"></a> 2-2. 복수 column 기준</h3>
<blockquote>
<p>먼저 column1 기준으로 정렬하고, column1 값이 동일한 row들은 column2기준으로 정렬:</p>
<ul>
<li><em>df_name</em> .sort_value ( by = [ ‘<em>col_name 1</em>’ , ‘<em>col_name 2</em>’ ] )</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by = [<span class="string">'키'</span>, <span class="string">'브랜드평판지수'</span>])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sort_values(by = [<span class="string">'키'</span>, <span class="string">'브랜드평판지수'</span>], ascending = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (3) 기본정보 &amp; 통계정보 파악</title>
    <url>/2020/05/24/S-Python-Pandas3/</url>
    <content><![CDATA[<h1 id="기본정보-통계정보-파악"><a class="markdownIt-Anchor" href="#기본정보-통계정보-파악"></a> 기본정보 &amp; 통계정보 파악</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EC%96%B4%EC%98%A4%EA%B8%B0-csv"><strong>1. 파일 읽어오기 (csv)</strong></a></li>
<li><a href="#2-%EA%B8%B0%EB%B3%B8-%ED%96%89%EC%97%B4-%EC%A0%95%EB%B3%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0-column-index-info"><strong>2. 기본 행&amp;열 정보 알아보기  (column, index, info)</strong></a>
<ul>
<li><a href="#2-1-column-%EC%97%B4-%EC%9D%B4%EB%A6%84-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0">2-1. column (열) 이름 출력하기</a></li>
<li><a href="#2-2-column-%EC%97%B4-%EC%9D%B4%EB%A6%84-%EC%9E%AC%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0">2-2. column (열) 이름 재정의하기</a></li>
<li><a href="#2-3-index-%ED%96%89-%EC%A0%95%EB%B3%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0">2-3. index (행) 정보 출력하기</a></li>
<li><a href="#2-4-info-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-column-%EC%A0%95%EB%B3%B4%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85">2-4. info (기본적인 column 정보와 데이터 타입)</a></li>
</ul>
</li>
<li><a href="#3-%ED%98%95%ED%83%9C-shape-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>3. 형태 (shape) 알아보기</strong></a></li>
<li><a href="#4-%EC%83%81%EC%9C%84-5%EA%B0%9C-%ED%95%98%EC%9C%84-5%EA%B0%9C%EC%9D%98-%EC%A0%95%EB%B3%B4%EB%A7%8C-%EB%B3%B4%EA%B8%B0"><strong>4. 상위 5개, 하위 5개의 정보만 보기</strong></a></li>
<li><a href="#5-%ED%86%B5%EA%B3%84-%EC%A0%95%EB%B3%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>5. 통계 정보 알아보기</strong></a>
<ul>
<li><a href="#5-1-%EC%A0%84%EC%B2%B4-%ED%86%B5%EA%B3%84-%EC%A0%95%EB%B3%B4">5-1. 전체 통계 정보</a></li>
<li><a href="#5-2-%EC%B5%9C%EC%86%8C%EA%B0%92min-%EC%B5%9C%EB%8C%80%EA%B0%92max-%EC%A4%91%EC%95%99%EA%B0%92median-%EC%B5%9C%EB%B9%88%EA%B0%92mode">5-2. 최소값(min),  최대값(max), 중앙값(median), 최빈값(mode)</a></li>
<li><a href="#5-3-%ED%95%A9%EA%B3%84sum-%ED%8F%89%EA%B7%A0mean-%EB%B6%84%EC%82%B0var-%ED%91%9C%EC%A4%80%ED%8E%B8%EC%B0%A8std">5-3. 합계(sum), 평균(mean), 분산(var), 표준편차(std)</a></li>
<li><a href="#5-4-%EA%B0%AF%EC%88%98%EB%A5%BC-%EC%84%B8%EB%8A%94-count">5-4. 갯수를 세는 count</a></li>
</ul>
</li>
</ul>
<p></p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<h2 id="1-파일-읽어오기-csv"><a class="markdownIt-Anchor" href="#1-파일-읽어오기-csv"></a> <strong>1. 파일 읽어오기 (csv)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
  <br>
<h2 id="2-기본-행열-정보-알아보기-column-index-info"><a class="markdownIt-Anchor" href="#2-기본-행열-정보-알아보기-column-index-info"></a> <strong>2. 기본 행&amp;열 정보 알아보기  (column, index, info)</strong></h2>
<h3 id="2-1-column-열-이름-출력하기"><a class="markdownIt-Anchor" href="#2-1-column-열-이름-출력하기"></a> 2-1. column (열) 이름 출력하기</h3>
<blockquote>
<p><em>df_name</em> <strong>.columns</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object')
</code></pre>
<p>​    <br></p>
<h3 id="2-2-column-열-이름-재정의하기"><a class="markdownIt-Anchor" href="#2-2-column-열-이름-재정의하기"></a> 2-2. column (열) 이름 재정의하기</h3>
<p><strong>(1) 전체 column 이름</strong></p>
<blockquote>
<p><em>df_name</em> <strong>.columns</strong> = […]</p>
</blockquote>
<p><strong>예:</strong> “이름” --&gt; “name”:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">new_col = [<span class="string">'name'</span>, <span class="string">'그룹'</span>, <span class="string">'소속사'</span>, <span class="string">'성별'</span>, <span class="string">'생년월일'</span>, <span class="string">'키'</span>, <span class="string">'혈액형'</span>, <span class="string">'브랜드평판지수'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns = new_col</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['name', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object')
</code></pre>
<p>​    <br></p>
<p><strong>(2) 개별 column 이름</strong></p>
<blockquote>
<p><em>df_name</em> <strong>.rename</strong> ( columns = { “<em>old_name</em>” : “<em>new_name</em>” } )</p>
</blockquote>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object') 
</code></pre>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.rename(columns = {<span class="string">"이름"</span> : <span class="string">"name"</span>})</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['name', '그룹', '소속사', '성별', '생년월일', '키', '혈액형', '브랜드평판지수'], dtype='object')
</code></pre>
<p>​    <br></p>
<h3 id="2-3-index-행-정보-출력하기"><a class="markdownIt-Anchor" href="#2-3-index-행-정보-출력하기"></a> 2-3. index (행) 정보 출력하기</h3>
<blockquote>
<p><em>df_name</em> <strong>.index</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.index</span><br></pre></td></tr></tbody></table></figure>
<pre><code>RangeIndex(start=0, stop=15, step=1)
</code></pre>
   <br>
<h3 id="2-4-info-기본적인-column-정보와-데이터-타입"><a class="markdownIt-Anchor" href="#2-4-info-기본적인-column-정보와-데이터-타입"></a> 2-4. info (기본적인 column 정보와 데이터 타입)</h3>
<blockquote>
<p><em>df_name</em> <strong>.info()</strong></p>
</blockquote>
<blockquote>
<p><strong>Tip:</strong> info메소드는 주로 빠진 값 (null 값)과 데이터 타입을 볼 때 활용함</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   name     15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<p>“object” type은 주로 문자형 데이터를 가리킴.</p>
  <br>  
<h2 id="3-형태-shape-알아보기"><a class="markdownIt-Anchor" href="#3-형태-shape-알아보기"></a> <strong>3. 형태 (shape) 알아보기</strong></h2>
<blockquote>
<p>shape는 tuple형태로 반환되며, 첫번째는 row, 두번째는 column의 숫자를 의미함.</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(15, 8)
</code></pre>
  <br>
<h2 id="4-상위-5개-하위-5개의-정보만-보기"><a class="markdownIt-Anchor" href="#4-상위-5개-하위-5개의-정보만-보기"></a> <strong>4. 상위 5개, 하위 5개의 정보만 보기</strong></h2>
<blockquote>
<p>상위 5개 row:  <em>df_name</em> <strong>.head()</strong><br>
하위 5개 row:  <em>df_name</em> <strong>.tail()</strong><br>
상위 n개 row:  <em>df_name</em> <strong>.head(n)</strong><br>
하위 n개 row:  <em>df_name</em> <strong>.tail(n)</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.tail(<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>name</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>    
<br>
<h2 id="5-통계-정보-알아보기"><a class="markdownIt-Anchor" href="#5-통계-정보-알아보기"></a> <strong>5. 통계 정보 알아보기</strong></h2>
<blockquote>
<p>통계값은 산술 연산이 가능한 숫자형 (float / int) 인 column을 다룬다</p>
</blockquote>
<h3 id="5-1-전체-통계-정보"><a class="markdownIt-Anchor" href="#5-1-전체-통계-정보"></a> 5-1. 전체 통계 정보</h3>
<blockquote>
<p><em>df_name</em> <strong>.describe()</strong></p>
</blockquote>
<p>산술 연산이 가능한 column만 출력됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>13.000000</td>
      <td>1.500000e+01</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>175.792308</td>
      <td>5.655856e+06</td>
    </tr>
    <tr>
      <th>std</th>
      <td>5.820576</td>
      <td>2.539068e+06</td>
    </tr>
    <tr>
      <th>min</th>
      <td>162.100000</td>
      <td>2.925442e+06</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>174.000000</td>
      <td>3.712344e+06</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>177.000000</td>
      <td>4.668615e+06</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>179.200000</td>
      <td>7.862214e+06</td>
    </tr>
    <tr>
      <th>max</th>
      <td>183.000000</td>
      <td>1.052326e+07</td>
    </tr>
  </tbody>
</table>
</div>
   <br>
<h3 id="5-2-최소값min-최대값max-중앙값median-최빈값mode"><a class="markdownIt-Anchor" href="#5-2-최소값min-최대값max-중앙값median-최빈값mode"></a> 5-2. 최소값(min),  최대값(max), 중앙값(median), 최빈값(mode)</h3>
<blockquote>
<p>최소값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.min()</strong><br>
최대값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.max()</strong><br>
중앙값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.median()</strong><br>
최빈값: <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.mode()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].min()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>162.1
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].max()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>183.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].median()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>177.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].mode()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    178.0
dtype: float64
</code></pre>
 <br>
<h3 id="5-3-합계sum-평균mean-분산var-표준편차std"><a class="markdownIt-Anchor" href="#5-3-합계sum-평균mean-분산var-표준편차std"></a> 5-3. 합계(sum), 평균(mean), 분산(var), 표준편차(std)</h3>
<blockquote>
<p>합계(sum): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.sum()</strong><br>
평균(mean): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.mean()</strong><br>
분산(variance): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.var()</strong><br>
표준편차(standard deviation): <em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.std()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2285.3
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>175.7923076923077
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].var()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>33.879102564102595
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].std()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5.820575793175672
</code></pre>
<br>
<h3 id="5-4-갯수를-세는-count"><a class="markdownIt-Anchor" href="#5-4-갯수를-세는-count"></a> 5-4. 갯수를 세는 count</h3>
<blockquote>
<p><em>df_name</em> [ ‘<em>col_name</em>’ ] <strong>.count</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].count()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>13
</code></pre>
  <br>
  <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (6) 결측값 확인 및 추출</title>
    <url>/2020/06/12/S-Python-Pandas6/</url>
    <content><![CDATA[<h1 id="결측값-확인-및-추출"><a class="markdownIt-Anchor" href="#결측값-확인-및-추출"></a> 결측값 확인 및 추출</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC"><strong>1. 결측값에 대하여</strong></a></li>
<li><a href="#2-column%EB%B3%84-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EA%B0%9C%EC%88%98-%ED%99%95%EC%9D%B8-info"><strong>2. column별 (비)결측값 개수 확인 – info()</strong></a></li>
<li><a href="#3-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EC%9C%84%EC%B9%98-%ED%99%95%EC%9D%B8"><strong>3. (비)결측값 위치 확인</strong></a>
<ul>
<li><a href="#3-1-%EC%A0%84%EC%B2%B4-data">3-1. 전체 Data</a></li>
<li><a href="#3-2-%ED%8A%B9%EC%A0%95-column">3-2. 특정 column</a></li>
</ul>
</li>
<li><a href="#4-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EC%B6%94%EC%B6%9C"><strong>4. (비)결측값 추출</strong></a>
<ul>
<li><a href="#4-1-%ED%95%B4%EB%8B%B9-column%EB%A7%8C-%EC%B6%94%EC%B6%9C">4-1. 해당 column만 추출</a></li>
<li><a href="#4-2-%EC%A0%84%EC%B2%B4-column-%EC%B6%94%EC%B6%9C">4-2. 전체 column 추출</a></li>
<li><a href="#4-3-%EC%A7%80%EC%A0%95%ED%95%9C-column-%EC%B6%94%EC%B6%9C">4-3. 지정한 column 추출</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<h2 id="1-결측값에-대하여"><a class="markdownIt-Anchor" href="#1-결측값에-대하여"></a> <strong>1. 결측값에 대하여</strong></h2>
<ul>
<li>
<p>Null 값은 <strong>비어있는 값, 고급 언어로 결측값</strong>이다</p>
</li>
<li>
<p>pandas 에서는 NaN =&gt; Not a Number 로 표기 된다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="2-column별-비결측값-개수-확인-info"><a class="markdownIt-Anchor" href="#2-column별-비결측값-개수-확인-info"></a> <strong>2. column별 (비)결측값 개수 확인 – info()</strong></h2>
<p>info() 로 각 column별의 결측값(NaN) 개수를 쉽게 확인할 수 있다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 15 entries, 0 to 14
Data columns (total 8 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   이름       15 non-null     object 
 1   그룹       14 non-null     object 
 2   소속사      15 non-null     object 
 3   성별       15 non-null     object 
 4   생년월일     15 non-null     object 
 5   키        13 non-null     float64
 6   혈액형      15 non-null     object 
 7   브랜드평판지수  15 non-null     int64  
dtypes: float64(1), int64(1), object(6)
memory usage: 1.1+ KB
</code></pre>
<br>
<br>
<h2 id="3-비결측값-위치-확인"><a class="markdownIt-Anchor" href="#3-비결측값-위치-확인"></a> <strong>3. (비)결측값 위치 확인</strong></h2>
<ul>
<li>
<p>.isna()</p>
</li>
<li>
<p>.isnull()</p>
</li>
<li>
<p>.notna()</p>
</li>
<li>
<p>.notnull()</p>
<br>
</li>
</ul>
<h3 id="3-1-전체-data"><a class="markdownIt-Anchor" href="#3-1-전체-data"></a> 3-1. 전체 Data</h3>
<blockquote>
<p><em>df_name</em> .명령어</p>
</blockquote>
<br>
<p><strong>(1) 결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.isna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.isnull()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>False</td>
      <td>True</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>5</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>6</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>7</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>8</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>9</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>10</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>11</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>12</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>13</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
    <tr>
      <th>14</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>(2) 비결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.notna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.notnull()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>1</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>2</th>
      <td>True</td>
      <td>False</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>4</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>5</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>6</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>7</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>False</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>8</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>9</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>10</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>False</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>11</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>12</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>13</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
    <tr>
      <th>14</th>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h3 id="3-2-특정-column"><a class="markdownIt-Anchor" href="#3-2-특정-column"></a> 3-2. 특정 column</h3>
<blockquote>
<p><em>df_name</em> [ ‘<em>col_name</em>’ ] .명령어</p>
</blockquote>
<br>
<p><strong>(1) 결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].isna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].isnull()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     False
1     False
2      True
3     False
4     False
5     False
6     False
7     False
8     False
9     False
10    False
11    False
12    False
13    False
14    False
Name: 그룹, dtype: bool
</code></pre>
<br>
<p><strong>(2) 비결측값 = True</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].notna()</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].notnull()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      True
1      True
2     False
3      True
4      True
5      True
6      True
7      True
8      True
9      True
10     True
11     True
12     True
13     True
14     True
Name: 그룹, dtype: bool
</code></pre>
 <br>
<br>  
<h2 id="4-비결측값-추출"><a class="markdownIt-Anchor" href="#4-비결측값-추출"></a> <strong>4. (비)결측값 추출</strong></h2>
<h3 id="4-1-해당-column만-추출"><a class="markdownIt-Anchor" href="#4-1-해당-column만-추출"></a> 4-1. 해당 column만 추출</h3>
<blockquote>
<p>결측값: <em>df_name</em> [ ‘<em>col_name</em>’]  [ <em>df_name</em> [ ‘<em>col_name</em>’ ] .isna() / isnull() ]<br>
비결측값: <em>df_name</em> [ ‘<em>col_name</em>’ ]  [<em>df_name</em> [ ‘<em>col_name</em>’ ] .notna() / notnull()]</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>][df[<span class="string">'그룹'</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    NaN
Name: 그룹, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>][df[<span class="string">'그룹'</span>].notnull()]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     방탄소년단
1        빅뱅
3     방탄소년단
4       마마무
5     방탄소년단
6      뉴이스트
7       아이들
8     방탄소년단
9        핫샷
10     소녀시대
11     아스트로
12     뉴이스트
13     뉴이스트
14    방탄소년단
Name: 그룹, dtype: object
</code></pre>
  <br>
<br>
<h3 id="4-2-전체-column-추출"><a class="markdownIt-Anchor" href="#4-2-전체-column-추출"></a> 4-2. 전체 column 추출</h3>
<blockquote>
<p>결측값: <em>df_name</em> .loc [<em>df_name</em> [ ‘<em>col_name</em>’ ] .isna() / isnull() ]</p>
<p>비결측값: <em>df_name</em> .loc [<em>df_name</em> ['<em>col_name</em>] .notna() / notnull() ]</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].notnull()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h3 id="4-3-지정한-column-추출"><a class="markdownIt-Anchor" href="#4-3-지정한-column-추출"></a> 4-3. 지정한 column 추출</h3>
<blockquote>
<p>결측값: <em>df_name</em> .loc [<em>df_name</em> [ ‘<em>na_col_name</em>’ ] .isna() / isnull() , [‘<em>col_name1</em>’, ‘<em>col_name2</em>’, …]]</p>
<p>비결측값: <em>df_name</em> .loc [<em>df_name</em> ['<em>na_col_name</em>] .notna() / notnull() , [‘<em>col_name1</em>’, ‘<em>col_name2</em>’, …]]</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].isna(), [<span class="string">'이름'</span>, <span class="string">'소속사'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].notnull(), [<span class="string">'이름'</span>, <span class="string">'소속사'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
    </tr>
  </tbody>
</table>
</div>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (5) 범위선택</title>
    <url>/2020/05/24/S-Python-Pandas5/</url>
    <content><![CDATA[<h1 id="범위선택"><a class="markdownIt-Anchor" href="#범위선택"></a> 범위선택</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%8B%A8%EC%9D%BC-column%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95"><strong>1. 단일 column을 선택하는 방법</strong></a></li>
<li><a href="#2-index-column-%EB%B2%94%EC%9C%84-%EC%84%A0%ED%83%9D-range-selection"><strong>2. index &amp; column 범위 선택 (range selection)</strong></a>
<ul>
<li><a href="#2-1-%EB%8B%A8%EC%88%9C-index%EC%97%90-%EB%8C%80%ED%95%9C-%EB%B2%94%EC%9C%84-%EC%84%A0%ED%83%9D">2-1. 단순 index에 대한 범위 선택</a></li>
<li><a href="#2-2-index-column-%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-loc">2-2. index &amp; column 범위선택 – loc</a></li>
<li><a href="#2-3-index-column-%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-iloc-position%EC%9C%BC%EB%A1%9C-%EC%83%89%EC%9D%B8">2-3. index &amp; column 범위선택 – iloc (position으로 색인)</a></li>
</ul>
</li>
<li><a href="#3-index-column-%EC%A1%B0%EA%B1%B4%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-boolean-indexing"><strong>3. index &amp; column 조건범위선택 – Boolean Indexing</strong></a>
<ul>
<li><a href="#3-1-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%8C%EC%A1%B1%ED%95%9C-row%EB%93%A4%EC%9D%98-%EB%AA%A8%EB%93%A0-column%EC%9D%84-%EC%B6%94%EC%B6%9C">3-1. 조건에 만족한 row들의 모든 column을 추출</a></li>
<li><a href="#3-2-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%8C%EC%A1%B1%ED%95%9C-row%EB%93%A4%EC%9D%98-%ED%8A%B9%EC%A0%95-column%EB%93%A4%EC%9D%84-%EC%B6%94%EC%B6%9C">3-2. 조건에 만족한 row들의 특정 column들을 추출</a></li>
</ul>
</li>
<li><a href="#4-index-column-%EC%A1%B0%EA%B1%B4%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-inis%EC%9D%84-%ED%99%9C%EC%9A%A9%EB%9E%80-%EC%83%89%EC%9D%B8"><strong>4. index &amp; column 조건범위선택 – inis을 활용란 색인</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h2 id="1-단일-column을-선택하는-방법"><a class="markdownIt-Anchor" href="#1-단일-column을-선택하는-방법"></a> <strong>1. 단일 column을 선택하는 방법</strong></h2>
<blockquote>
<ul>
<li><em>df_name</em> [ '<em>col_name</em> ’ ]</li>
<li><em>df_name</em> [ "<em>col_name</em> " ]</li>
<li><em>df_name</em> .<em>col_name</em></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"이름"</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.이름</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       지민
1     지드래곤
2     강다니엘
3        뷔
4       화사
5       정국
6       민현
7       소연
8        진
9      하성운
10      태연
11     차은우
12      백호
13      JR
14      슈가
Name: 이름, dtype: object
</code></pre>
<p><br><br></p>
<h2 id="2-index-column-범위-선택-range-selection"><a class="markdownIt-Anchor" href="#2-index-column-범위-선택-range-selection"></a> <strong>2. index &amp; column 범위 선택 (range selection)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<h3 id="2-1-단순-index에-대한-범위-선택"><a class="markdownIt-Anchor" href="#2-1-단순-index에-대한-범위-선택"></a> 2-1. 단순 index에 대한 범위 선택</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[:<span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="2-2-index-column-범위선택-loc"><a class="markdownIt-Anchor" href="#2-2-index-column-범위선택-loc"></a> 2-2. index &amp; column 범위선택 – loc</h3>
<blockquote>
<p><em>df_name</em> <strong>.loc</strong> [행(index) 범위, (열)column 범위]</p>
</blockquote>
<ul>
<li>
<p><strong>행 범위는</strong><br>
“:”<br>
“:b”<br>
“a:b”<br>
등 형식을 사용</p>
</li>
<li>
<p><strong>열 범위는</strong><br>
'<em>column name</em> ’<br>
['<em>column name1</em> ', '<em>column name2</em> ']<br>
'<em>column name1</em> ’ : '<em>column name2</em> ’<br>
등 형식을 사용</p>
</li>
</ul>
<blockquote>
<p><font color="red"> <strong>주의:</strong>  </font></p>
<ul>
<li><font color="red">pandas의 loc</font>에서 범위 a : b는 <font color="blue"><strong>index a &amp; index b 모두 포함</strong></font></li>
<li><font color="red">numpy</font>에서는 <font color="blue"><strong>index a 포함, index b 미포함</strong></font></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[:, <span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       지민
1     지드래곤
2     강다니엘
3        뷔
4       화사
5       정국
6       민현
7       소연
8        진
9      하성운
10      태연
11     차은우
12      백호
13      JR
14      슈가
Name: 이름, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[:, [<span class="string">'이름'</span>, <span class="string">'생년월일'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>생년월일</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>1995-10-13</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>1988-08-18</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>1996-12-10</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>1995-12-30</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>1995-07-23</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>1997-09-01</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>1995-08-09</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>1998-08-26</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>1992-12-04</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>1994-03-22</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>1989-03-09</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>1997-03-30</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>1995-07-21</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>1995-06-08</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>1993-03-09</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[<span class="number">3</span>:<span class="number">8</span>, [<span class="string">'이름'</span>, <span class="string">'생년월일'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>생년월일</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>1995-12-30</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>1995-07-23</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>1997-09-01</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>1995-08-09</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>1998-08-26</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>1992-12-04</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[<span class="number">2</span>:<span class="number">5</span>, <span class="string">'이름'</span>:<span class="string">'생년월일'</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<h3 id="2-3-index-column-범위선택-iloc-position으로-색인"><a class="markdownIt-Anchor" href="#2-3-index-column-범위선택-iloc-position으로-색인"></a> 2-3. index &amp; column 범위선택 – iloc (position으로 색인)</h3>
<blockquote>
<p>행(index) 범위 선택은 loc와 동일</p>
<p>열(column) 범위는 'column 명’대신 column position을 사용</p>
</blockquote>
<ul>
<li>
<p><strong>행 범위는</strong><br>
“:”<br>
“:b”<br>
“a:b”<br>
등 형식을 사용</p>
</li>
<li>
<p><strong>열 범위는</strong><br>
“c”<br>
“[c, d]”<br>
“c:d”<br>
등 형식을 사용</p>
</li>
</ul>
<blockquote>
<p><font color="red"> <strong>주의:</strong>  </font></p>
<ul>
<li>pandas의 <font color="red">iloc</font>에서 범위 a : b는 <font color="blue"><strong>index a 포함, index b 미포함</strong></font> (<font color="red">numpy</font>와 동일)</li>
<li>pandas의 <font color="red">loc</font>에서 범위 a : b는 <font color="blue"><strong>index a &amp; index b 모두 포함</strong></font></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[:, [<span class="number">0</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>큐브</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>스타크루이엔티</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>판타지오</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>빅히트</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>:<span class="number">5</span>, [<span class="number">0</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>YG</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>커넥트</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>빅히트</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>RBW</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>:<span class="number">5</span>, <span class="number">0</span>:<span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="3-index-column-조건범위선택-boolean-indexing"><a class="markdownIt-Anchor" href="#3-index-column-조건범위선택-boolean-indexing"></a> <strong>3. index &amp; column 조건범위선택 – Boolean Indexing</strong></h2>
<p>Boolean indexing은 Numpy에서의 Boolean indexing과 같은 원리다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-1-조건에-만족한-row들의-모든-column을-추출"><a class="markdownIt-Anchor" href="#3-1-조건에-만족한-row들의-모든-column을-추출"></a> 3-1. 조건에 만족한 row들의 모든 column을 추출</h3>
<blockquote>
<p>df [<em>조건</em> ]</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'키'</span>] &gt; <span class="number">180</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     False
1     False
2     False
3     False
4     False
5     False
6      True
7     False
8     False
9     False
10    False
11     True
12    False
13    False
14    False
Name: 키, dtype: bool
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[df[<span class="string">'키'</span>] &gt; <span class="number">180</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="3-2-조건에-만족한-row들의-특정-column들을-추출"><a class="markdownIt-Anchor" href="#3-2-조건에-만족한-row들의-특정-column들을-추출"></a> 3-2. 조건에 만족한 row들의 특정 column들을 추출</h3>
<blockquote>
<p><strong>방법 1.</strong> <em>df_name</em> [<em>조건</em> ] [<em>column범위</em> ]</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span> ] [<span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6      민현
11    차은우
Name: 이름, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df [ df[<span class="string">'키'</span>] &gt; <span class="number">180</span> ] [[<span class="string">'이름'</span>, <span class="string">'키'</span>]]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>키</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>182.3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>183.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<blockquote>
<p><strong>방법 2.</strong> loc를 활용: <em>df_name</em>.loc[ <em>조건</em> , <em>column범위</em>  ]       <font color="blue"> <em>【추천】</em> </font></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, <span class="string">'이름'</span> ]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6      민현
11    차은우
Name: 이름, dtype: object
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, [<span class="string">'이름'</span>, <span class="string">'그룹'</span>] ]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, <span class="string">'이름'</span> : <span class="string">'성별'</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
    </tr>
  </tbody>
</table>
</div>
<p><br> <br></p>
<h2 id="4-index-column-조건범위선택-inis을-활용란-색인"><a class="markdownIt-Anchor" href="#4-index-column-조건범위선택-inis을-활용란-색인"></a> <strong>4. index &amp; column 조건범위선택 – inis을 활용란 색인</strong></h2>
<p>column값이 미리 정의한 list에 속한다는 조건을 걸고자 할 때 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_condition = [<span class="string">'플레디스'</span>, <span class="string">'SM'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'소속사'</span>].isin(my_condition)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     False
1     False
2     False
3     False
4     False
5     False
6      True
7     False
8     False
9     False
10     True
11    False
12     True
13     True
14    False
Name: 소속사, dtype: bool
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'소속사'</span>].isin(my_condition) ]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'소속사'</span>].isin(my_condition) , [<span class="string">'이름'</span>, <span class="string">'소속사'</span>] ]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>소속사</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>SM</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>플레디스</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>플레디스</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (2) 집합 형태의 데이터 타입</title>
    <url>/2020/05/13/S-Python-base2/</url>
    <content><![CDATA[<h1 id="집합-형태의-데이터-타입"><a class="markdownIt-Anchor" href="#집합-형태의-데이터-타입"></a> <strong>집합 형태의 데이터 타입</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-list-%EC%88%9C%EC%84%9C%EA%B0%80-%EC%9E%88%EB%8A%94-%EC%A7%91%ED%95%A9"><strong>1. list (순서가 있는 집합)</strong></a>
<ul>
<li><a href="#1-1-%ED%98%95%ED%85%8C%EB%A1%9C-%ED%91%9C%ED%98%84">1-1. [ ] 형테로 표현</a></li>
<li><a href="#1-2-%EA%B0%92-%EC%B6%94%EA%B0%80-append">1-2. 값 추가 – “.append( )”</a></li>
<li><a href="#1-3-%EA%B0%92-%EC%A0%9C%EA%B1%B0-remove-clear">1-3. 값 제거 – “.remove” / “.clear”</a></li>
<li><a href="#1-4-%EC%9D%B8%EB%8D%B1%EC%8B%B1indexing-%EC%83%89%EC%9D%B8">1-4. 인덱싱(Indexing) -&gt; 색인</a></li>
<li><a href="#1-5-%EC%9D%B8%EB%8D%B1%EC%8A%A4%EB%A1%9C-%EC%A0%91%EA%B7%BC%ED%95%98%EC%97%AC-%EA%B0%92-%EB%B0%94%EA%BE%B8%EA%B8%B0">1-5. 인덱스로 접근하여 값 바꾸기</a></li>
<li><a href="#1-6-%EA%B8%B8%EC%9D%B4-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">1-6. 길이 파악하기</a></li>
</ul>
</li>
<li><a href="#2-tuple-%EC%88%9C%EC%84%9C%EA%B0%80-%EC%9E%88%EB%8A%94-%EC%A7%91%ED%95%A9-%EC%9D%BD%EA%B8%B0-%EC%A0%84%EC%9A%A9"><strong>2. tuple (순서가 있는 집합, 읽기 전용)</strong></a>
<ul>
<li><a href="#2-1-%ED%98%95%ED%83%9C%EB%A1%9C-%ED%91%9C%ED%98%84">2-1. ( ) 형태로 표현</a></li>
<li><a href="#2-2-%EC%9D%BD%EA%B8%B0-%EC%A0%84%EC%9A%A9%EC%9D%B4%EB%9D%BC-%EA%B0%92-%EC%B6%94%EA%B0%80-%EA%B0%92-%EC%A0%9C%EA%B1%B0-%EA%B0%92-%EB%B0%94%EA%BE%B8%EA%B8%B0-%EB%AA%A8%EB%91%90-%EC%95%88%EB%90%A8">2-2. 읽기 전용이라 “값 추가”, “값 제거”, “값 바꾸기” 모두 안됨</a></li>
<li><a href="#2-3-%EA%B8%B8%EC%9D%B4-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">2-3. 길이 파악하기</a></li>
</ul>
</li>
<li><a href="#3-set-%EC%88%9C%EC%84%9C-x-%EC%A4%91%EB%B3%B5-x"><strong>3. set (순서 X, 중복 X)</strong></a>
<ul>
<li><a href="#3-1-set%EC%9D%98-%ED%95%A0%EB%8B%B9-set">3-1. set의 할당: set()</a></li>
<li><a href="#3-2-%EA%B0%92-%EC%B6%94%EA%B0%80-add">3-2. 값 추가 –  ".add "</a></li>
<li><a href="#3-3-%EA%B0%92-%EC%A0%9C%EA%B1%B0-remove-clear">3-3. 값 제거 – “.remove” / “.clear”</a></li>
</ul>
</li>
<li><a href="#4-dict-%EC%82%AC%EC%A0%84%ED%98%95-%EC%A7%91%ED%95%A9-key%EC%99%80-value-%EC%8C%8D"><strong>4. dict (사전형 집합, key와 value 쌍)</strong></a>
<ul>
<li><a href="#4-1-%ED%98%95%ED%83%9C%EB%A1%9C-%ED%91%9C%ED%97%8C">4-1. { } 형태로 표헌</a></li>
<li><a href="#4-2-%EA%B0%92-%EC%B6%94%EA%B0%80-key%EC%99%80-value-%EB%AA%A8%EB%91%90-%EC%A7%80%EC%A0%95">4-2. 값 추가 (key와 value 모두 지정)</a></li>
<li><a href="#4-3-%EA%B0%92-%EB%B0%94%EA%BE%B8%EA%B8%B0">4-3. 값 바꾸기</a></li>
<li><a href="#4-4-%EA%B0%92-%EC%A0%9C%EA%B1%B0-pop-clear">4-4. 값 제거 – “.pop” / “.clear”</a></li>
<li><a href="#4-5-%EA%B8%B8%EC%9D%B4-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">4-5. 길이 파악하기</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<p><strong>짐합 형태의 데이터 타입</strong></p>
<ol>
<li>
<p>list (순서 O, 짐합)</p>
</li>
<li>
<p>tuple (순서 X, 읽기 전용 집합)</p>
</li>
<li>
<p>set (순서 X, 중복 X 집합)</p>
</li>
<li>
<p>dict (key, value로 이루어진 사전형 집합)</p>
<br>
</li>
</ol>
<h2 id="1-list-순서가-있는-집합"><a class="markdownIt-Anchor" href="#1-list-순서가-있는-집합"></a> <strong>1. list (순서가 있는 집합)</strong></h2>
<h3 id="1-1-형테로-표현"><a class="markdownIt-Anchor" href="#1-1-형테로-표현"></a> 1-1. [ ] 형테로 표현</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = []</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(mylist)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>list
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist2 = [<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]   <span class="comment"># 순서가 있다</span></span><br><span class="line">mylist2</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[5, 4, 3, 2, 1]
</code></pre>
<br>
<h3 id="1-2-값-추가-append"><a class="markdownIt-Anchor" href="#1-2-값-추가-append"></a> 1-2. 값 추가 – “.append( )”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = []</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.append(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.append(<span class="number">2</span>)</span><br><span class="line">mylist.append(<span class="number">3</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3]
</code></pre>
<br>
<p><strong>.append 함수 안에 1 argument만 들어갈 수 있다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.append(<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-22-6f00703728b8&gt; in &lt;module&gt;
----&gt; 1 mylist.append(4,5)
      2 mylist


TypeError: append() takes exactly one argument (2 given)
</code></pre>
<br>
<h3 id="1-3-값-제거-remove-clear"><a class="markdownIt-Anchor" href="#1-3-값-제거-remove-clear"></a> 1-3. 값 제거 – “.remove” / “.clear”</h3>
<p><strong>부분 제거 – ".remove"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.remove(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 3]
</code></pre>
 <br>
<p><strong>전부 제거 – ".clear"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.clear()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br> 
<p><strong>같은 값이 여러 개 포함되어 있을 때의 제거 순서</strong></p>
<p>앞에서 부터 순차적으로 제거 됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 1, 2, 3]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.remove(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 3, 1, 2, 3]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.remove(<span class="number">1</span>)</span><br><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 3, 2, 3]
</code></pre>
  <br>
<h3 id="1-4-인덱싱indexing-색인"><a class="markdownIt-Anchor" href="#1-4-인덱싱indexing-색인"></a> 1-4. 인덱싱(Indexing) -&gt; 색인</h3>
<p>인덱스는 <strong>0번 부터 시작</strong>한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]  <span class="comment"># 인덱스: 0번, 1번, 2번, 3번</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-34-88b11041aa4f&gt; in &lt;module&gt;
----&gt; 1 mylist[4]


IndexError: list index out of range
</code></pre>
<br>
<p>인덱스가 음수일 경우: 뒤에서 부터 n번째</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">-1</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4
</code></pre>
<br>
<h3 id="1-5-인덱스로-접근하여-값-바꾸기"><a class="markdownIt-Anchor" href="#1-5-인덱스로-접근하여-값-바꾸기"></a> 1-5. 인덱스로 접근하여 값 바꾸기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist[<span class="number">0</span>] = <span class="number">100</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[100, 2, 3, 4]
</code></pre>
<br>
<h3 id="1-6-길이-파악하기"><a class="markdownIt-Anchor" href="#1-6-길이-파악하기"></a> 1-6. 길이 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[100, 2, 3, 4]
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(mylist)  <span class="comment"># length</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>4
</code></pre>
<br>
  <br>
<h2 id="2-tuple-순서가-있는-집합-읽기-전용"><a class="markdownIt-Anchor" href="#2-tuple-순서가-있는-집합-읽기-전용"></a> <strong>2. tuple (순서가 있는 집합, 읽기 전용)</strong></h2>
<h3 id="2-1-형태로-표현"><a class="markdownIt-Anchor" href="#2-1-형태로-표현"></a> 2-1. ( ) 형태로 표현</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="2-2-읽기-전용이라-값-추가-값-제거-값-바꾸기-모두-안됨"><a class="markdownIt-Anchor" href="#2-2-읽기-전용이라-값-추가-값-제거-값-바꾸기-모두-안됨"></a> 2-2. 읽기 전용이라 “값 추가”, “값 제거”, “값 바꾸기” 모두 안됨</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple.append(<span class="number">1</span>)    <span class="comment"># 읽기 전용이라 값을 추가할 수 없음</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

AttributeError                            Traceback (most recent call last)

&lt;ipython-input-45-d0f55ea1e3f6&gt; in &lt;module&gt;
----&gt; 1 mytuple.append(1)    # 읽기 전용이라 값을 추가할 수 없음


AttributeError: 'tuple' object has no attribute 'append'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple.remove(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

AttributeError                            Traceback (most recent call last)

&lt;ipython-input-46-05a40423345b&gt; in &lt;module&gt;
----&gt; 1 mytuple.remove(1)


AttributeError: 'tuple' object has no attribute 'remove'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple[<span class="number">0</span>] = <span class="number">100</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-48-4e527888818c&gt; in &lt;module&gt;
----&gt; 1 mytuple[0] = 100


TypeError: 'tuple' object does not support item assignment
</code></pre>
<br>
<h3 id="2-3-길이-파악하기"><a class="markdownIt-Anchor" href="#2-3-길이-파악하기"></a> 2-3. 길이 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mytuple</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1, 2, 3, 4, 5)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(mytuple)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
  <br>
<h2 id="3-set-순서-x-중복-x"><a class="markdownIt-Anchor" href="#3-set-순서-x-중복-x"></a> <strong>3. set (순서 X, 중복 X)</strong></h2>
<h3 id="3-1-set의-할당-set"><a class="markdownIt-Anchor" href="#3-1-set의-할당-set"></a> 3-1. set의 할당: set()</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset = set()</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>set()
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(myset)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>set
</code></pre>
<br>
<h3 id="3-2-값-추가-add"><a class="markdownIt-Anchor" href="#3-2-값-추가-add"></a> 3-2. 값 추가 –  ".add "</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.add(<span class="number">1</span>)</span><br><span class="line">myset.add(<span class="number">2</span>)</span><br><span class="line">myset.add(<span class="number">3</span>)</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.add(<span class="number">1</span>)  </span><br><span class="line">myset.add(<span class="number">2</span>)</span><br><span class="line">myset.add(<span class="number">3</span>)</span><br><span class="line">myset.add(<span class="number">1</span>)  <span class="comment"># 중복된 값을 한번만 기록</span></span><br><span class="line">myset.add(<span class="number">2</span>)</span><br><span class="line">myset.add(<span class="number">3</span>)</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.add(<span class="number">4</span>)</span><br><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3, 4}
</code></pre>
<br>
<h3 id="3-3-값-제거-remove-clear"><a class="markdownIt-Anchor" href="#3-3-값-제거-remove-clear"></a> 3-3. 값 제거 – “.remove” / “.clear”</h3>
<p><strong>부분 제거 – ".remove"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 3, 4}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset.remove(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myset</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1, 2, 4}
</code></pre>
<br> 
<p><strong>전부 제거 – ".clear"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist.clear()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[]
</code></pre>
<br>
<br>
<h2 id="4-dict-사전형-집합-key와-value-쌍"><a class="markdownIt-Anchor" href="#4-dict-사전형-집합-key와-value-쌍"></a> <strong>4. dict (사전형 집합, key와 value 쌍)</strong></h2>
<h3 id="4-1-형태로-표헌"><a class="markdownIt-Anchor" href="#4-1-형태로-표헌"></a> 4-1. { } 형태로 표헌</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict = dict()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(mydict)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>dict
</code></pre>
<br>
<h3 id="4-2-값-추가-key와-value-모두-지정"><a class="markdownIt-Anchor" href="#4-2-값-추가-key와-value-모두-지정"></a> 4-2. 값 추가 (key와 value 모두 지정)</h3>
<ul>
<li>mydict [ " <em>key</em> " ] = <em>value</em></li>
<li>key는 문자형 (str) / 숫자형 (int &amp; float) 모두 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>] = <span class="number">123</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 123}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">0</span>] = <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 123, 0: 2}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">3.14</span>] = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 123, 0: 2, 3.14: 1}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="number">3.14</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<h3 id="4-3-값-바꾸기"><a class="markdownIt-Anchor" href="#4-3-값-바꾸기"></a> 4-3. 값 바꾸기</h3>
<p>새 값을 해당 key에 할당하기</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>] = <span class="string">"hello"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 'hello', 0: 2, 3.14: 1}
</code></pre>
<br>
<h3 id="4-4-값-제거-pop-clear"><a class="markdownIt-Anchor" href="#4-4-값-제거-pop-clear"></a> 4-4. 값 제거 – “.pop” / “.clear”</h3>
<p><strong>부분 제거 – ".pop"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict.pop(<span class="string">'apple'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'hello'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{0: 2, 3.14: 1}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict.pop(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{3.14: 1}
</code></pre>
<br>
<p><strong>전부 제거 – ".clear"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict.clear()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{}
</code></pre>
<br>
<h3 id="4-5-길이-파악하기"><a class="markdownIt-Anchor" href="#4-5-길이-파악하기"></a> 4-5. 길이 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict[<span class="string">"apple"</span>] = <span class="number">123</span></span><br><span class="line">mydict[<span class="number">0</span>] = <span class="number">2</span></span><br><span class="line">mydict[<span class="number">3.14</span>] = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mydict</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'apple': 'hello', 0: 2, 3.14: 1}
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(mydict)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
  <br>
  <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (7) 기타</title>
    <url>/2020/06/17/S-Python-Pandas7/</url>
    <content><![CDATA[<h1 id="기타"><a class="markdownIt-Anchor" href="#기타"></a> 기타</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94"><strong>1. 피벗테이블</strong></a></li>
<li><a href="#2-groupby-%EA%B7%B8%EB%A3%B9%EC%9C%BC%EB%A1%9C-%EB%AC%B6%EC%96%B4-%EB%B3%B4%EA%B8%B0"><strong>2. GroupBy (그룹으로 묶어 보기)</strong></a></li>
<li><a href="#3-multi-index-%EB%B3%B5%ED%95%A9-%EC%9D%B8%EB%8D%B1%EC%8A%A4"><strong>3. Multi-Index (복합 인덱스)</strong></a>
<ul>
<li><a href="#3-1-multi-index-%EC%A0%81%EC%9A%A9">3-1. Multi-Index 적용</a></li>
<li><a href="#3-2-multi-index-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A0%88%EC%9E%84%EC%9D%84-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A1%9C-%EB%B3%80%ED%99%98">3-2. Multi-Index 데이터 프레임을 피벗테이블로 변환</a></li>
<li><a href="#3-3-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%B4%88%EA%B8%B0%ED%99%94-reset_index">3-3. 인덱스 초기화 (reset_index)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-피벗테이블"><a class="markdownIt-Anchor" href="#1-피벗테이블"></a> <strong>1. 피벗테이블</strong></h2>
<ul>
<li>데이터 열 중에서 <strong>두 개의 열을 각각 행 인덱스, 열 인덱스로 사용</strong>하여 데이터를 조회하여 펼쳐놓은 건을 의미함</li>
<li>왼쪽에 나타나는 인덱스를 <strong>행 인덱스, 상단에 나타나는 인덱스를 열 인덱스</strong>라고 부른다</li>
</ul>
<blockquote>
<p>pd.pivot_table(<em>df_name</em>, index = “<em>col_name_분류기준1</em>”, columns = “<em>col_name_분류기준2</em>”, values = “<em>col_name_조회대상</em>”, aggfunc = …)</p>
<ul>
<li>index는 행 인덱스</li>
<li>columns는 열 인덱스</li>
<li>values는 조회하고 싶은 값</li>
<li>aggfunc는 value를 산출하는 연산법<br>
(1) e.g.: aggfunc = np.sum / np.mean<br>
(2) 설정하지 않은 경우 기본적으로 평균값을 구한다</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"소속사"</span>, columns = <span class="string">"혈액형"</span>, values = <span class="string">"키"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>혈액형</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
    <tr>
      <th>소속사</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>RBW</th>
      <td>162.1</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>YG</th>
      <td>177.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>빅히트</th>
      <td>175.8</td>
      <td>178.0</td>
      <td>NaN</td>
      <td>176.60</td>
    </tr>
    <tr>
      <th>스타크루이엔티</th>
      <td>167.1</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>커넥트</th>
      <td>180.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>판타지오</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>183.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>플레디스</th>
      <td>NaN</td>
      <td>175.0</td>
      <td>NaN</td>
      <td>179.15</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"그룹"</span>, columns = <span class="string">"혈액형"</span>, values  = <span class="string">"브랜드평판지수"</span>, aggfunc = np.sum)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>혈액형</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
    <tr>
      <th>그룹</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>뉴이스트</th>
      <td>NaN</td>
      <td>3301654.0</td>
      <td>NaN</td>
      <td>8263929.0</td>
    </tr>
    <tr>
      <th>마마무</th>
      <td>7650928.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>방탄소년단</th>
      <td>15731595.0</td>
      <td>8073501.0</td>
      <td>NaN</td>
      <td>7495750.0</td>
    </tr>
    <tr>
      <th>빅뱅</th>
      <td>9916947.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>소녀시대</th>
      <td>3918661.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>아스트로</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>3506027.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>아이들</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>4668615.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>핫샷</th>
      <td>4036489.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<p><br><br></p>
<h2 id="2-groupby-그룹으로-묶어-보기"><a class="markdownIt-Anchor" href="#2-groupby-그룹으로-묶어-보기"></a> <strong>2. GroupBy (그룹으로 묶어 보기)</strong></h2>
<ul>
<li>groupby는 데이터를 <strong>그룹으로 묶어 분석</strong>할 때 활용한다</li>
<li><strong>소속사</strong>별 키의 평균, <strong>성별</strong> 키의 평균 등 특정, 그룹별 통계 및 데이터의 성질을 확인하고자 할 때 활용한다</li>
</ul>
<blockquote>
<p>groupby와 함께</p>
<ul>
<li>count() - 갯수</li>
<li>sum() - 합계</li>
<li>mean() - 평균</li>
<li>var() - 분산</li>
<li>std() -표준편차</li>
<li>min() / max() - 최소값, 최대값</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"소속사"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000024E760EC288&gt;
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'소속사'</span>).count()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>소속사</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>RBW</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>SM</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>YG</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>빅히트</th>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <th>스타크루이엔티</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>커넥트</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>큐브</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>판타지오</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>플레디스</th>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br> 
<p>산술 통계는 자동으로 산술통계가 가능한 열만 출력됨.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'그룹'</span>).mean()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>그룹</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>뉴이스트</th>
      <td>177.766667</td>
      <td>3.855194e+06</td>
    </tr>
    <tr>
      <th>마마무</th>
      <td>162.100000</td>
      <td>7.650928e+06</td>
    </tr>
    <tr>
      <th>방탄소년단</th>
      <td>176.560000</td>
      <td>6.260169e+06</td>
    </tr>
    <tr>
      <th>빅뱅</th>
      <td>177.000000</td>
      <td>9.916947e+06</td>
    </tr>
    <tr>
      <th>소녀시대</th>
      <td>NaN</td>
      <td>3.918661e+06</td>
    </tr>
    <tr>
      <th>아스트로</th>
      <td>183.000000</td>
      <td>3.506027e+06</td>
    </tr>
    <tr>
      <th>아이들</th>
      <td>NaN</td>
      <td>4.668615e+06</td>
    </tr>
    <tr>
      <th>핫샷</th>
      <td>167.100000</td>
      <td>4.036489e+06</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'성별'</span>).sum()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>남자</th>
      <td>2123.2</td>
      <td>68599637</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.1</td>
      <td>16238204</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>특정 열만 출력하고 싶다면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">'혈액형'</span>)[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>혈액형
A     172.966667
AB    176.500000
B     183.000000
O     177.875000
Name: 키, dtype: float64
</code></pre>
<br>
<br> 
<h2 id="3-multi-index-복합-인덱스"><a class="markdownIt-Anchor" href="#3-multi-index-복합-인덱스"></a> <strong>3. Multi-Index (복합 인덱스)</strong></h2>
<h3 id="3-1-multi-index-적용"><a class="markdownIt-Anchor" href="#3-1-multi-index-적용"></a> 3-1. Multi-Index 적용</h3>
<p>행 인덱스를 복합적으로 구성하고 싶은 경우는 인덱스를 리스트로 만들어 준다</p>
<blockquote>
<p><em>df_name</em> <strong>.groupby([‘<em>col_name_1</em>’,‘<em>col_name_2</em>’])</strong> .<em>mean()</em></p>
<ul>
<li>데이터를 먼저 col_1기준으로 분류한 다음, col_2기준으로 한번 더 분류한다. 2번 분류 후의 데이터에 대해 산술통계값을 구한다</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby([<span class="string">'혈액형'</span>, <span class="string">'성별'</span>]).mean()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">A</th>
      <th>남자</th>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>AB</th>
      <th>남자</th>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">B</th>
      <th>남자</th>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>O</th>
      <th>남자</th>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-2-multi-index-데이터-프레임을-피벗테이블로-변환"><a class="markdownIt-Anchor" href="#3-2-multi-index-데이터-프레임을-피벗테이블로-변환"></a> 3-2. Multi-Index 데이터 프레임을 피벗테이블로 변환</h3>
<p>Multi-Index로 된 데이터프레임을 피벗테이블 형태로 다시 변환해줄 수 있다</p>
<blockquote>
<p><em>df_name</em> <strong>.unstack( <em>‘col_열’</em> )</strong></p>
<ul>
<li>col_열: groupby에서 선택한 두 column중 pivot table의 열인덱스로 지정해주고 싶은 column명을 입력</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df.groupby([<span class="string">'혈액형'</span>, <span class="string">'성별'</span>]).mean()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">A</th>
      <th>남자</th>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>AB</th>
      <th>남자</th>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">B</th>
      <th>남자</th>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>O</th>
      <th>남자</th>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.unstack(<span class="string">'혈액형'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr>
      <th></th>
      <th colspan="4" halign="left">키</th>
      <th colspan="4" halign="left">브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
      <th>A</th>
      <th>AB</th>
      <th>B</th>
      <th>O</th>
    </tr>
    <tr>
      <th>성별</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>남자</th>
      <td>175.14</td>
      <td>176.5</td>
      <td>183.0</td>
      <td>177.875</td>
      <td>7591755.2</td>
      <td>5687577.5</td>
      <td>3506027.0</td>
      <td>3939919.75</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.10</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>5784794.5</td>
      <td>NaN</td>
      <td>4668615.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.unstack(<span class="string">'성별'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead tr th {
    text-align: left;
}

.dataframe thead tr:last-of-type th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr>
      <th></th>
      <th colspan="2" halign="left">키</th>
      <th colspan="2" halign="left">브랜드평판지수</th>
    </tr>
    <tr>
      <th>성별</th>
      <th>남자</th>
      <th>여자</th>
      <th>남자</th>
      <th>여자</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>175.140</td>
      <td>162.1</td>
      <td>7591755.20</td>
      <td>5784794.5</td>
    </tr>
    <tr>
      <th>AB</th>
      <td>176.500</td>
      <td>NaN</td>
      <td>5687577.50</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>B</th>
      <td>183.000</td>
      <td>NaN</td>
      <td>3506027.00</td>
      <td>4668615.0</td>
    </tr>
    <tr>
      <th>O</th>
      <td>177.875</td>
      <td>NaN</td>
      <td>3939919.75</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-3-인덱스-초기화-reset_index"><a class="markdownIt-Anchor" href="#3-3-인덱스-초기화-reset_index"></a> 3-3. 인덱스 초기화 (reset_index)</h3>
<p>reset_index() 는 Multi-Index로 구성된 데이터 프레임의 <strong>인덱스를 초기화</strong>해 준다</p>
<p>그 의미는 Multi-Index로 구성된 데이터 프레임 중의 index들을 dataframe의 column으로 변환시키는 것</p>
<blockquote>
<p><em>df_name</em> = <em>df_name</em> <strong>.reset_index()</strong></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
    <tr>
      <th>혈액형</th>
      <th>성별</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">A</th>
      <th>남자</th>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>AB</th>
      <th>남자</th>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">B</th>
      <th>남자</th>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>여자</th>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>O</th>
      <th>남자</th>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df2.reset_index()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>혈액형</th>
      <th>성별</th>
      <th>키</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>남자</td>
      <td>175.140</td>
      <td>7591755.20</td>
    </tr>
    <tr>
      <th>1</th>
      <td>A</td>
      <td>여자</td>
      <td>162.100</td>
      <td>5784794.50</td>
    </tr>
    <tr>
      <th>2</th>
      <td>AB</td>
      <td>남자</td>
      <td>176.500</td>
      <td>5687577.50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>B</td>
      <td>남자</td>
      <td>183.000</td>
      <td>3506027.00</td>
    </tr>
    <tr>
      <th>4</th>
      <td>B</td>
      <td>여자</td>
      <td>NaN</td>
      <td>4668615.00</td>
    </tr>
    <tr>
      <th>5</th>
      <td>O</td>
      <td>남자</td>
      <td>177.875</td>
      <td>3939919.75</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>데이터파악</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (1) 출력. 데이터 타입. 데이터의 응용</title>
    <url>/2020/05/12/S-Python-base1/</url>
    <content><![CDATA[<p>출력. 변수. 데이터 타입. 데이터의 응용. 데이터 타입의 변환.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EC%B6%9C%EB%A0%A5-print"><strong>1. 출력 (print)</strong></a>
<ul>
<li><a href="#print-%ED%95%A8%EC%88%98"><strong>print( ) 함수</strong></a></li>
</ul>
</li>
<li><a href="#2-%EB%B3%80%EC%88%98%EC%99%80-%EB%8C%80%EC%9E%85"><strong>2. 변수와 대입</strong></a>
<ul>
<li><a href="#2-1-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9D%B4%EB%A6%84">2-1. 변수의 이름</a>
<ul>
<li><a href="#%EA%B0%80%EB%8A%A5%ED%95%9C-%EA%B2%BD%EC%9A%B0">【가능한 경우】</a></li>
<li><a href="#%EB%B6%88%EA%B0%80%ED%95%9C-%EA%B2%BD%EC%9A%B0">【불가한 경우】</a></li>
</ul>
</li>
<li><a href="#2-2-%EB%B3%80%EC%88%98%EC%9D%98-%EB%8C%80%EC%9E%85">2-2. 변수의 대입</a></li>
<li><a href="#2-3-%EB%B3%80%EC%88%98%EC%9D%98-%EC%B6%9C%EB%A0%A5">2-3. 변수의 출력</a></li>
</ul>
</li>
<li><a href="#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85"><strong>3. 데이터 타입</strong></a>
<ul>
<li><a href="#3-1-int%EC%A0%95%EC%88%98">3-1. int(정수)</a></li>
<li><a href="#3-2-float%EC%8B%A4%EC%88%98">3-2. float(실수)</a></li>
<li><a href="#3-3-str-%ED%98%B9%EC%9D%80-object-%EB%AC%B8%EC%9E%90%EC%97%B4">3-3. str 혹은 object (문자열)</a></li>
<li><a href="#3-4-bool-%EC%B0%B8%EA%B1%B0%EC%A7%93">3-4. bool (참/거짓)</a></li>
<li><a href="#3-5-%EC%95%84%EB%AC%B4%EA%B2%83%EB%8F%84-%EC%95%84%EB%8B%8C-none%ED%83%80%EC%9E%85%EB%8F%84-%EC%9E%88%EB%8B%A4">3-5. 아무것도 아닌 None타입도 있다</a></li>
</ul>
</li>
<li><a href="#4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%9D%91%EC%9A%A9"><strong>4. 데이터의 응용</strong></a>
<ul>
<li><a href="#4-1-%EC%82%AC%EC%B9%99-%EC%97%B0%EC%82%B0%EC%9E%90">4-1. 사칙 연산자</a></li>
<li><a href="#4-2-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EC%97%B0%EA%B2%B0">4-2. 문자열의 연결</a></li>
</ul>
</li>
<li><a href="#5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98"><strong>5. 데이터 타입 변환</strong></a>
<ul>
<li><a href="#5-1-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C-%EB%B3%80%ED%99%98-str-%ED%95%A8%EC%88%98-or-%EB%94%B0%EC%9B%80%ED%91%9C">5-1. 문자열로 변환:  “str( ) 함수”  or  “따움표”</a></li>
<li><a href="#5-2-%EC%A0%95%EC%88%98%EB%A1%9C-%EB%B3%80%ED%99%98-int-%ED%95%A8%EC%88%98">5-2. 정수로 변환: " int( ) 함수"</a></li>
<li><a href="#5-3-%EC%8B%A4%EC%88%98%EB%A1%9C-%EB%B3%80%ED%99%98-float-%ED%95%A8%EC%88%98">5-3. 실수로 변환: “float( ) 함수”</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-출력-print"><a class="markdownIt-Anchor" href="#1-출력-print"></a> <strong>1. 출력 (print)</strong></h2>
<h3 id="print-함수"><a class="markdownIt-Anchor" href="#print-함수"></a> <strong>print( ) 함수</strong></h3>
<ol>
<li>숫자를 출력할 때 따움표(’ ’ or " ") 필요없음</li>
<li>문자를 출력할 때 따움표 필요
<ul>
<li>’ ’ 와 " "  차이없음</li>
<li>‘’’  ‘’’ 를 사용하면 출력시 “줄 바꿈” 형식이 보류될 수 있음</li>
</ul>
</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">1</span>+<span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'안녕하세요'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"반갑습니다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>반갑습니다
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">안녕하세요,</span></span><br><span class="line"><span class="string">반갑습니다.</span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요,
반갑습니다.
</code></pre>
<br>
<br>
<h2 id="2-변수와-대입"><a class="markdownIt-Anchor" href="#2-변수와-대입"></a> <strong>2. 변수와 대입</strong></h2>
<h3 id="2-1-변수의-이름"><a class="markdownIt-Anchor" href="#2-1-변수의-이름"></a> 2-1. 변수의 이름</h3>
<h4 id="가능한-경우"><a class="markdownIt-Anchor" href="#가능한-경우"></a> 【가능한 경우】</h4>
<p>case 1. 알파벳</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">A = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 2. 알파벳 + 숫자</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a1 = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 3. 알파벳 + 언더바(_)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_ = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<p>case 4. 언더바(_) + 알파벳</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">_a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<h4 id="불가한-경우"><a class="markdownIt-Anchor" href="#불가한-경우"></a> 【불가한 경우】</h4>
<p><strong>case 1. 언더바(_)를 제외한 특수문자</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">* = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-23-6d0163a9fd4c&gt;", line 1
    * = 1
      ^
SyntaxError: invalid syntax
</code></pre>
<br>
<p><strong>case 2. 알파벳 + 언더바를 제외한 특수문자</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a$ = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-25-2501fc576aab&gt;", line 1
    a$ = 1
     ^
SyntaxError: invalid syntax
</code></pre>
<br>
<p><strong>case 3. 변수의 이름 사이의 공백</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a b = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-26-2bab97d7970c&gt;", line 1
    a b = 1
      ^
SyntaxError: invalid syntax
</code></pre>
<p><br><br></p>
<h3 id="2-2-변수의-대입"><a class="markdownIt-Anchor" href="#2-2-변수의-대입"></a> 2-2. 변수의 대입</h3>
<p>변수 값을 부여할 때 "="를 사용한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="2-3-변수의-출력"><a class="markdownIt-Anchor" href="#2-3-변수의-출력"></a> 2-3. 변수의 출력</h3>
<ol>
<li>print() 구문 사이에 <strong>값을 직접</strong> 입력하면, 바로 값이 출력됨.</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="number">123</span>)   <span class="comment"># 숫자는 "" 필요없음</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">"text"</span>)   <span class="comment"># 문자는 "" 필요함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>text
</code></pre>
<br>
<ol start="2">
<li>print()구분 사이에 <strong>변수 이름</strong>을 입력하면, 변수의 값이 출력됨.</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">123</span></span><br><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">"text"</span></span><br><span class="line">print(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>text
</code></pre>
<br>
 <br> 
<h2 id="3-데이터-타입"><a class="markdownIt-Anchor" href="#3-데이터-타입"></a> <strong>3. 데이터 타입</strong></h2>
<p><strong>데이터 type:</strong><br>
1. int(정수)<br>
2. float(실수)<br>
3. str(문자열)<br>
4. bool(참/거짓)</p>
<br>
<h3 id="3-1-int정수"><a class="markdownIt-Anchor" href="#3-1-int정수"></a> 3-1. int(정수)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
</code></pre>
<br>
<p><strong>코딩에서 1은 참으로 취급, 0은 거짓으로  취급</strong></p>
<p>다음 코딩으로 진단해보자:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'1은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'1은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1은 참으로 취급
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'0은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'0은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0은 거짓부렁이
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">123</span>:</span><br><span class="line">    print(<span class="string">'123은 참으로 취급'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'123은 거짓부렁이'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>123은 참으로 취급
</code></pre>
<p>[0 이외의 정수 다 참으로 취급]</p>
<br>
<br>  
<h3 id="3-2-float실수"><a class="markdownIt-Anchor" href="#3-2-float실수"></a> 3-2. float(실수)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">3.14</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3.14
</code></pre>
<br>
<h3 id="3-3-str-혹은-object-문자열"><a class="markdownIt-Anchor" href="#3-3-str-혹은-object-문자열"></a> 3-3. str 혹은 object (문자열)</h3>
<ol>
<li><strong>문자열은 반드시 ’ ’ 혹은 " " 로 묶어야 함</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">word = <span class="string">'안녕하세요'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">word = <span class="string">"안녕하세요"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(word)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<ol start="2">
<li><strong>’" "’ 를 사용하면 출력시 “줄 바꿈” 형식이 보류될 수 있음</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">안녕하세요,</span></span><br><span class="line"><span class="string">반갑습니다.</span></span><br><span class="line"><span class="string">'''</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요,
반갑습니다.
</code></pre>
<p><br> <br></p>
<h3 id="3-4-bool-참거짓"><a class="markdownIt-Anchor" href="#3-4-bool-참거짓"></a> 3-4. bool (참/거짓)</h3>
<p>참:   True<br>
거짓: False</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>bool
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>bool
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">0</span> == <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">123</span> == <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<ul>
<li>1 이외의 정수는 조건절에서 참으로 인식되지만, bool과 비교할 때 참이 아니다</li>
</ul>
<br>
<br>
<h3 id="3-5-아무것도-아닌-none타입도-있다"><a class="markdownIt-Anchor" href="#3-5-아무것도-아닌-none타입도-있다"></a> 3-5. 아무것도 아닌 None타입도 있다</h3>
<p>Null값을 넣는다고도 한다.</p>
<ul>
<li>Null: Nullify (무효화하다) – 사전상 의미</li>
</ul>
<p>Python에서는 <strong>None</strong> 입니다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>None
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>NoneType
</code></pre>
<br>
<p>조건문에 None이라면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">None</span>:</span><br><span class="line">    print(<span class="string">"None은 참으로 취급"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"None은 거짓부렁이"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>None은 거짓부렁이
</code></pre>
<br>
<br>
<h2 id="4-데이터의-응용"><a class="markdownIt-Anchor" href="#4-데이터의-응용"></a> <strong>4. 데이터의 응용</strong></h2>
<h3 id="4-1-사칙-연산자"><a class="markdownIt-Anchor" href="#4-1-사칙-연산자"></a> 4-1. 사칙 연산자</h3>
<table>
<thead>
<tr>
<th style="text-align:center">연산자</th>
<th style="text-align:center">의미</th>
<th style="text-align:center">예</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">더하기</td>
<td style="text-align:center">2 + 1 -&gt; 3</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">빼기</td>
<td style="text-align:center">1 - 2 -&gt; -1</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">곱하기</td>
<td style="text-align:center">1 * 2 -&gt; 2</td>
</tr>
<tr>
<td style="text-align:center">/</td>
<td style="text-align:center">나누기</td>
<td style="text-align:center">1 / 2 -&gt; 0.5</td>
</tr>
<tr>
<td style="text-align:center">//</td>
<td style="text-align:center">몫</td>
<td style="text-align:center">5 // 2 -&gt; 2</td>
</tr>
<tr>
<td style="text-align:center">%</td>
<td style="text-align:center">나머지</td>
<td style="text-align:center">5 % 2 -&gt; 1</td>
</tr>
<tr>
<td style="text-align:center">**</td>
<td style="text-align:center">멱</td>
<td style="text-align:center">2**3 -&gt; 8</td>
</tr>
</tbody>
</table>
  <br>
<h3 id="4-2-문자열의-연결"><a class="markdownIt-Anchor" href="#4-2-문자열의-연결"></a> 4-2. 문자열의 연결</h3>
<p>여러 개 문자열을 "+"을 통해 연결할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">subject = <span class="string">"나는 "</span></span><br><span class="line">object = <span class="string">"치킨을 "</span></span><br><span class="line">verb = <span class="string">"좋아한다"</span></span><br><span class="line"></span><br><span class="line">print(subject + object + verb)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>나는 치킨을 좋아한다
</code></pre>
<br>
<p>하지만 문자열(str)과 숫자(int &amp; float)는 <em>직접</em>  연결할 수 없다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">"내가 "</span></span><br><span class="line">b = <span class="string">"친구랑 "</span></span><br><span class="line">c = <span class="number">12</span></span><br><span class="line">d = <span class="string">"시에 "</span></span><br><span class="line">e = <span class="string">"보기로 했다"</span></span><br><span class="line"></span><br><span class="line">print(a + b + c + d + e)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-82-34cd0f9ce519&gt; in &lt;module&gt;
      5 e = "보기로 했다"
      6 
----&gt; 7 print(a + b + c + d + e)


TypeError: can only concatenate str (not "int") to str
</code></pre>
<p>이 때는 데이터 타입을 변환할 필요가 있다</p>
<br>
<br>
<h2 id="5-데이터-타입-변환"><a class="markdownIt-Anchor" href="#5-데이터-타입-변환"></a> <strong>5. 데이터 타입 변환</strong></h2>
<h3 id="5-1-문자열로-변환-str-함수-or-따움표"><a class="markdownIt-Anchor" href="#5-1-문자열로-변환-str-함수-or-따움표"></a> 5-1. 문자열로 변환:  “str( ) 함수”  or  “따움표”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="number">6</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(str(<span class="number">6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="string">'6'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="number">3.14</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(str(<span class="number">3.14</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(<span class="string">"3.14"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>str
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">"내가 "</span></span><br><span class="line">b = <span class="string">"친구랑 "</span></span><br><span class="line">c = <span class="number">12</span></span><br><span class="line">d = <span class="string">"시에 "</span></span><br><span class="line">e = <span class="string">"보기로 했다"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a + b + str(c) + d + e)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>내가 친구랑 12시에 보기로 했다
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(a + b + <span class="string">'12'</span> + d + e)a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>내가 친구랑 12시에 보기로 했다
</code></pre>
<br>
<br>
<h3 id="5-2-정수로-변환-int-함수"><a class="markdownIt-Anchor" href="#5-2-정수로-변환-int-함수"></a> 5-2. 정수로 변환: " int( ) 함수"</h3>
<ol>
<li><strong>"str" --&gt; “int”:  str( ) 안 내용이 정수일 때만 가능</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(int(<span class="string">"2"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">number1 = <span class="string">"2"</span></span><br><span class="line">number2 = <span class="string">"3"</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(number1) + int(number2))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(<span class="string">"2.6"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-103-f4645c45f771&gt; in &lt;module&gt;
----&gt; 1 print(int("2.6"))


ValueError: invalid literal for int() with base 10: '2.6'
</code></pre>
<br>
<ol start="2">
<li><strong>"float" --&gt; “int”: 소수점 버림</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(int(<span class="number">3.6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>int
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(int(<span class="number">3.6</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3
</code></pre>
<br>
<br>
<h3 id="5-3-실수로-변환-float-함수"><a class="markdownIt-Anchor" href="#5-3-실수로-변환-float-함수"></a> 5-3. 실수로 변환: “float( ) 함수”</h3>
<ol>
<li><strong>"str" --&gt; “float”:  str( ) 안 내용이 정수일 때만 가능</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(float(<span class="string">"3.14"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(float(<span class="string">"3.14"</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>3.14
</code></pre>
<br>
<ol start="2">
<li><strong>"int" --&gt; “float”: 소수점 하나 추가</strong></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">type(float(<span class="number">178</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>float
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(float(<span class="number">178</span>))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>178.0
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (3) 함수</title>
    <url>/2020/05/13/S-Python-base3/</url>
    <content><![CDATA[<p><strong>함수의 기초</strong></p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%95%A8%EC%88%98%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C"><strong>1. 함수란 무엇일까?</strong></a></li>
<li><a href="#2-%ED%95%A8%EC%88%98-%EC%A0%95%EC%9D%98-def-define"><strong>2. 함수 정의: def (define)</strong></a></li>
<li><a href="#3-%ED%95%A8%EC%88%98%EB%8A%94-%EA%B0%92%EC%9D%84-return%ED%95%A0-%EC%88%98-%EC%9E%88%EA%B3%A0-%EC%95%88%ED%95%B4%EB%8F%84-%EB%90%A8"><strong>3. 함수는 값을 return할 수 있고, 안해도 됨</strong></a></li>
<li><a href="#4-parameter%EA%B0%80-%EC%97%AC%EB%9F%AC-%EA%B0%9C-%EC%9E%88%EC%9C%BC%EB%A9%B4-%ED%95%A8%EC%88%98%EC%97%90-%EB%84%98%EA%B2%A8-%EC%A4%84-%EB%95%8C-%EC%88%9C%EC%84%9C%EA%B0%80-%EC%A4%91%EC%9A%94"><strong>4. parameter가 여러 개 있으면, 함수에 넘겨 줄 때 순서가 중요</strong></a></li>
</ul>
<p></p>
<br>
<h1 id="함수"><a class="markdownIt-Anchor" href="#함수"></a> <strong>함수</strong></h1>
<h2 id="1-함수란-무엇일까"><a class="markdownIt-Anchor" href="#1-함수란-무엇일까"></a> <strong>1. 함수란 무엇일까?</strong></h2>
<p>반복적으로 사용되는 부문을 묶어서, <strong>재사용 가능</strong>하도록 만들어 주는 것</p>
<p>함수에는 **들어가는 놈 (input)**이 있고, **나오는 놈 (output 혹은 return)**이 있다. 전해진 로직(규칙)에 따라, input -&gt; output으로 효율적으로 바꿔주는 역할을 한다</p>
<br>
<p><strong>[예시]</strong></p>
<p><strong>함수 없이 계산할 때</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>12
</code></pre>
<br>
<p><strong>함수로 변경 후</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">func(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>9
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">func(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>12
</code></pre>
  <br>
  <br>
<h2 id="2-함수-정의-def-define"><a class="markdownIt-Anchor" href="#2-함수-정의-def-define"></a> <strong>2. 함수 정의: def (define)</strong></h2>
<ul>
<li>
<p>사용법: def <strong>함수이름</strong> (parameter1, parameter2, parameter3…):</p>
</li>
<li>
<p>parameter는 함수로 부터 <strong>넘겨 받은 변수 또는 값</strong>이다</p>
</li>
<li>
<p>끝에 콜론 ( : ) 빼먹지 않음에 주의 해야함!</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myfunc</span><span class="params">(var1)</span>:</span></span><br><span class="line">    print(var1)      <span class="comment"># 실행 명령</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">myfunc(<span class="string">"안녕하세요"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>안녕하세요
</code></pre>
<br>
<br>
<h2 id="3-함수는-값을-return할-수-있고-안해도-됨"><a class="markdownIt-Anchor" href="#3-함수는-값을-return할-수-있고-안해도-됨"></a> <strong>3. 함수는 값을 return할 수 있고, 안해도 됨</strong></h2>
<p><strong>리턴이 없는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    print(a, b)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(<span class="number">1</span>,<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1 10
</code></pre>
<br>
<p><strong>리턴이 있는 경우</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    s = a + b</span><br><span class="line">    <span class="keyword">return</span> s</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(<span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<br>
<p><strong>리턴이 있는 경우는 변수에 값을 다시 할당 할 수 있음</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">result = my_func(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(result)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(result + <span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>15
</code></pre>
<p><br><br></p>
<h2 id="4-parameter가-여러-개-있으면-함수에-넘겨-줄-때-순서가-중요"><a class="markdownIt-Anchor" href="#4-parameter가-여러-개-있으면-함수에-넘겨-줄-때-순서가-중요"></a> <strong>4. parameter가 여러 개 있으면, 함수에 넘겨 줄 때 순서가 중요</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(a, b, c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> (a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">c = <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(a + b) * c</span><br></pre></td></tr></tbody></table></figure>
<pre><code>90
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(a, b, c)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>90
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">my_func(c, b, a)   <span class="comment"># (c + b) * a = (3 + 20) * 10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>230
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (4) 비교/논리 연산자. 조건문. 반복문</title>
    <url>/2020/05/13/S-Python-base4/</url>
    <content><![CDATA[<p>비교연산자. 조건문. 논리연산자. 반복문</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> 목록</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90"><strong>1. 비교연산자</strong></a>
<ul>
<li><a href="#1-1-%EB%8C%80%EC%86%8C%EB%B9%84%EA%B5%90">1-1. 대소비교 &gt;, &gt;=, &lt;, &lt;=</a></li>
<li><a href="#1-2-%EA%B0%99%EB%8B%A4">1-2. 같다 ==</a></li>
<li><a href="#1-3-%EA%B0%99%EC%A7%80-%EC%95%8A%EB%8B%A4">1-3. 같지 않다 !=</a></li>
</ul>
</li>
<li><a href="#2-%EC%A1%B0%EA%B1%B4%EB%AC%B8"><strong>2. 조건문</strong></a>
<ul>
<li><a href="#2-1-%EA%B0%9C%EB%85%90">2-1. 개념</a></li>
<li><a href="#2-2-if">2-2. if</a></li>
<li><a href="#2-3-else">2-3. else</a></li>
<li><a href="#2-4-elif">2-4. elif</a></li>
<li><a href="#2-5-1%EC%9D%B4%EB%82%98-0%EC%9D%80-%EC%B0%B8%EC%9D%B4%EB%82%98-%EA%B1%B0%EC%A7%93%EC%9D%84-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0%EB%8F%84-%ED%95%9C%EB%8B%A4">2-5. 1이나 0은 참이나 거짓을 표현하기도 한다</a></li>
</ul>
</li>
<li><a href="#3-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90-and-or"><strong>3. 논리 연산자 (and, or)</strong></a>
<ul>
<li><a href="#3-1-and">3-1. and</a></li>
<li><a href="#3-2-or">3-2. or</a></li>
</ul>
</li>
<li><a href="#4-%EB%B0%98%EB%B3%B5%EB%AC%B8"><strong>4. 반복문</strong></a>
<ul>
<li><a href="#4-1-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%B4%EB%9E%80">4-1. 반복문이란?</a></li>
<li><a href="#4-2-for-%EC%99%80-in%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%9E%90">4-2. for 와 in을 활용하자!</a></li>
<li><a href="#4-3-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%97%90%EC%84%9C-%EC%A7%9D%EC%88%98%EB%A7%8C-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%A0%A4%EB%A9%B4-continue%EA%B5%AC%EB%AC%B8">4-3. 반복문에서 짝수만 출력하려면? (continue구문)</a></li>
<li><a href="#4-4-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EC%B6%A9%EC%A1%B1%EC%8B%9C-%EC%88%9C%ED%99%98%EC%97%90%EC%84%9C-%EB%B9%A0%EC%A0%B8%EB%82%98%EC%99%80%EB%B3%B4%EC%9E%90-break%EA%B5%AC%EB%AC%B8">4-4. 조건을 충족시 순환에서 빠져나와보자! (break구문)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-비교연산자"><a class="markdownIt-Anchor" href="#1-비교연산자"></a> <strong>1. 비교연산자</strong></h2>
<p>비교 연산자는 주로 대소비교를 할 때 사용한다.</p>
<h3 id="1-1-대소비교"><a class="markdownIt-Anchor" href="#1-1-대소비교"></a> 1-1. 대소비교 &gt;, &gt;=, &lt;, &lt;=</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">1</span> &gt; <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">10</span> &gt;= <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">9</span> &lt; <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">8</span> &lt;= <span class="number">7</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<p><br><br></p>
<h3 id="1-2-같다"><a class="markdownIt-Anchor" href="#1-2-같다"></a> 1-2. 같다 ==</h3>
<ul>
<li><strong>주의:</strong> = 는 대입연산자. == 는 비교연산자 중의 “같다”</li>
<li>숫자형 &amp; 문자형 모두 비교 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> = <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-6-a8e553549e25&gt;", line 1
    2 = 2
         ^
SyntaxError: can't assign to literal
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> == <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> == <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"나"</span> == <span class="string">"나"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
  <br>
<h3 id="1-3-같지-않다"><a class="markdownIt-Anchor" href="#1-3-같지-않다"></a> 1-3. 같지 않다 !=</h3>
<ul>
<li>숫자형 &amp; 문자형 모두 비교 가능</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> != <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">2</span> != <span class="number">3</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"나"</span> != <span class="string">"너"</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<br>  
<h2 id="2-조건문"><a class="markdownIt-Anchor" href="#2-조건문"></a> <strong>2. 조건문</strong></h2>
<h3 id="2-1-개념"><a class="markdownIt-Anchor" href="#2-1-개념"></a> 2-1. 개념</h3>
<p>주어진 조건이 <strong>참</strong>인 경우 그 다음 내가 규칙(로직)을 실행하는 개념이다</p>
  <br>
<h3 id="2-2-if"><a class="markdownIt-Anchor" href="#2-2-if"></a> 2-2. if</h3>
<ul>
<li>if는 어떤 조건이 성립한다면 ~이라는 의미</li>
<li>if구문 끝에는 반드시 콜론( : )이 있어야 함</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
</code></pre>
<br>
<ul>
<li>if구문 뒤에 indent가 있는 명령어는 if조건이 성립하면 실행</li>
<li>indent가 없으면 if의 성립여부와 무관하여 무조건 실행</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">   </span><br><span class="line">print(<span class="string">'끝'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
참
끝
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line">   </span><br><span class="line">print(<span class="string">'끝'</span>)  <span class="comment"># 앞에 indent가 없으면 if의 성립여부와 무관하여 실행</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>끝
</code></pre>
<br>
<br>
<h3 id="2-3-else"><a class="markdownIt-Anchor" href="#2-3-else"></a> 2-3. else</h3>
<p>else는 if 조견 후에 따라오면, if가 아닌 경우에 실행 됨</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">"성립한다"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"성립하지 않은다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>성립하지 않은다
</code></pre>
<br>
<p>else는 꼭 if랑 같이 써야함. 단독으로 실행할 수 없음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"성립하지 않은다"</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>  File "&lt;ipython-input-22-6c0f4debaa4b&gt;", line 1
    else:
       ^
SyntaxError: invalid syntax
</code></pre>
<br>
  <br>
<h3 id="2-4-elif"><a class="markdownIt-Anchor" href="#2-4-elif"></a> 2-4. elif</h3>
<p>elif구문은 3가지 이상 문기(조건)의 동작을 수행할 때 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'if 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'elif 구문'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'이것도 저것도 아니다'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>elif 구문
</code></pre>
<br>
<p>그럼, elif구문이 참인 여러 구문을 나열 했을 때는 어떻게 될까?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'if 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'elif 1 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'elif 2 구문'</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">3</span> &lt; <span class="number">6</span>:</span><br><span class="line">    print(<span class="string">'elif 3 구문'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'이것도 저것도 아니다'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>elif 1 구문
</code></pre>
<p>elif구문이 참인 여러 구문을 나열 했을 때는 <strong>첫번째 참인 elif구문만</strong> 실행됨</p>
<p><br><br></p>
<h3 id="2-5-1이나-0은-참이나-거짓을-표현하기도-한다"><a class="markdownIt-Anchor" href="#2-5-1이나-0은-참이나-거짓을-표현하기도-한다"></a> 2-5. 1이나 0은 참이나 거짓을 표현하기도 한다</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>거짓
</code></pre>
<br>
<br>
<h2 id="3-논리-연산자-and-or"><a class="markdownIt-Anchor" href="#3-논리-연산자-and-or"></a> <strong>3. 논리 연산자 (and, or)</strong></h2>
<p><strong>and</strong>나 <strong>or</strong>조건은 두 가지 이상 조건을 다룰 때 활용한다</p>
  <br>
<h3 id="3-1-and"><a class="markdownIt-Anchor" href="#3-1-and"></a> 3-1. and</h3>
<p>and 조건은 <strong>모두 만족</strong>할 때 <strong>참</strong>으로 인식한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span> <span class="keyword">and</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="literal">False</span> <span class="keyword">and</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">and</span> (<span class="number">0</span> &lt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'모두 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>모두 참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">and</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'모두 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>거짓
</code></pre>
<br>
<br>
<h3 id="3-2-or"><a class="markdownIt-Anchor" href="#3-2-or"></a> 3-2. or</h3>
<p>or조건은 조건 중 <strong>하나라도 만족</strong>할 때 <strong>참</strong>으로 인식한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span> <span class="keyword">or</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &lt; <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'하나라도 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'모두 거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>하나라도 참
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt; <span class="number">1</span>) <span class="keyword">or</span> (<span class="number">0</span> &gt; <span class="number">2</span>):</span><br><span class="line">    print(<span class="string">'하나라도 참'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'모두 거짓'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>모두 거짓
</code></pre>
<br>
<br>
<h2 id="4-반복문"><a class="markdownIt-Anchor" href="#4-반복문"></a> <strong>4. 반복문</strong></h2>
<h3 id="4-1-반복문이란"><a class="markdownIt-Anchor" href="#4-1-반복문이란"></a> 4-1. 반복문이란?</h3>
<ul>
<li>일을 반복 처리 해준다는 것</li>
<li>대상은 반드시 list, dict, set등 집합이어야 한다</li>
</ul>
<br>
<p>[예]</p>
<p>반복문 쓰지 않을 때:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p>mylist에 들어 닜는 모든 값들을 출력하려고 한다면?</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(mylist[<span class="number">0</span>])</span><br><span class="line">print(mylist[<span class="number">1</span>])</span><br><span class="line">print(mylist[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'...'</span>)</span><br><span class="line">print(mylist[<span class="number">8</span>])</span><br><span class="line">print(mylist[<span class="number">9</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
...
9
10
</code></pre>
<p>반복문은 노가다를 획기적으로 줄여주는 방법이다!</p>
  <br>
<br>
<h3 id="4-2-for-와-in을-활용하자"><a class="markdownIt-Anchor" href="#4-2-for-와-in을-활용하자"></a> 4-2. for 와 in을 활용하자!</h3>
<p><strong>[기본 문법]</strong><br>
for 지정한 변수명 in [꺼내올 집합]:<br>
명령어</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
6
7
8
9
10
</code></pre>
<br>
<br>
<h3 id="4-3-반복문에서-짝수만-출력하려면-continue구문"><a class="markdownIt-Anchor" href="#4-3-반복문에서-짝수만-출력하려면-continue구문"></a> 4-3. 반복문에서 짝수만 출력하려면? (continue구문)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p><strong>방법1:</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<p><strong>방법2:</strong><br>
<strong>continue</strong>구문을 사용하면 조건이 충족할 때 아래 명령어를 SKIP하고 다시 다음 순환으로 넘어간다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<br>
<h3 id="4-4-조건을-충족시-순환에서-빠져나와보자-break구문"><a class="markdownIt-Anchor" href="#4-4-조건을-충족시-순환에서-빠져나와보자-break구문"></a> 4-4. 조건을 충족시 순환에서 빠져나와보자! (break구문)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<p>i가 6 이상이면 STOP</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">6</span>:       <span class="comment"># i &gt; 6 이면 6까지 출력한다 </span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1
2
3
4
5
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (5) List Comprehension. 문자열</title>
    <url>/2020/05/14/S-Python-base5/</url>
    <content><![CDATA[<p>List Comprehension (List에 조건필터를 적용).  문자열을 가지고 노는 방법.</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-list-comprehension-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B3%A0%EC%9C%A0%EC%9D%98-%EC%95%84%EB%A6%84%EB%8B%A4%EC%9A%B4-%EB%AC%B8%EB%B2%95"><strong>1. List Comprehension (파이썬 고유의 아름다운 문법)</strong></a>
<ul>
<li><a href="#1-1-list-comprehension-%EC%A1%B0%EA%B1%B4%ED%95%84%ED%84%B0">1-1. list comprehension 조건필터</a></li>
<li><a href="#1-2-step-1-list%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%95%BC-%ED%95%98%EB%8B%88-%EC%9D%BC%EB%8B%A8-%EA%BA%BE%EC%87%A0-%EB%A5%BC-%EC%94%8C%EC%9A%B4%EB%8B%A4">1-2. [STEP 1] list를 만들어야 하니 일단 꺾쇠[ ]를 씌운다</a></li>
<li><a href="#1-3-step-2-%EC%A1%B0%EA%B1%B4-%ED%95%84%ED%84%B0%EB%A5%BC-%EA%B1%B8%EC%96%B4-%EC%A4%80%EB%8B%A4">1-3. [STEP 2] 조건 필터를 걸어 준다</a></li>
<li><a href="#1-4-%EC%9D%91%EC%9A%A9-step-%EB%B3%80%EC%88%98-%EA%B0%92%EC%9D%84-%EA%B0%80%EA%B3%B5%ED%95%A0-%EC%88%98%EB%8F%84-%EC%9E%88%EB%8B%A4">1-4. [응용 STEP] 변수 값을 가공할 수도 있다</a></li>
</ul>
</li>
<li><a href="#2-%EB%AC%B8%EC%9E%90%EC%97%B4string%EC%9D%84-%EA%B0%80%EC%A7%80%EA%B3%A0-%EB%86%80%EA%B8%B0"><strong>2. 문자열(string)을 가지고 놀기</strong></a>
<ul>
<li><a href="#2-1-%EB%AC%B8%EC%9E%90%EC%9D%98-%EA%B8%B8%EC%9D%B4">2-1. 문자의 길이</a></li>
<li><a href="#2-2-%EB%AC%B8%EC%9E%A5-%EC%AA%BC%EA%B0%9C%EA%B8%B0-split">2-2. 문장 쪼개기 – “.split”</a></li>
<li><a href="#2-3-%EB%8C%80%EB%AC%B8%EC%9E%90-%EC%86%8C%EB%AC%B8%EC%9E%90%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0-upper-lower">2-3. 대문자 / 소문자로 만들기 – “.upper” / “.lower”</a></li>
<li><a href="#24-~%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-~%EB%A1%9C-%EB%81%9D%EB%82%98%EB%8A%94-startswith-endswith">2.4. ~로 시작하는, ~로 끝나는 – “.startswith” , “.endswith”</a></li>
<li><a href="#2-5-%EB%B0%94%EA%BE%B8%EA%B8%B0-replace%EB%B0%94%EA%BF%80-%EB%8C%80%EC%83%81-%EB%B0%94%EA%BF%94%EC%95%BC%ED%95%A0-%EA%B0%92">2-5. 바꾸기 – “.replace(‘바꿀 대상, 바꿔야할 값’)”</a></li>
<li><a href="#2-6-%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EA%B3%B5%EB%B0%B1-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-strip">2-6. 불필요한 공백 제거하기 – “.strip”</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-list-comprehension-파이썬-고유의-아름다운-문법"><a class="markdownIt-Anchor" href="#1-list-comprehension-파이썬-고유의-아름다운-문법"></a> <strong>1. List Comprehension (파이썬 고유의 아름다운 문법)</strong></h2>
<ul>
<li>
<p>for ~ in 구조를 기본적으로 가지고 있다</p>
</li>
<li>
<p>List Comprehension 이니까 당연히 List를 사용한다</p>
<br>
</li>
</ul>
<p><strong>[실제 사례 연구]</strong></p>
<p>mylist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] 이라는 list를 만들어 주고<br>
우리는 이 중 짝수만 출력하고 싶으면 아래와 같이 쓸 수 있다:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
4
6
8
10
</code></pre>
<br>
<p>그럼 mylist에서 짝수만 뽑아서 <strong>list로 만들어</strong> 주고 싶다면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">even = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        even.append(i)</span><br><span class="line"></span><br><span class="line">print(even)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<p>이렇게 for in 문으로 해줄 수 있다.<br>
하지만, 우리는 <strong>list comprehension을 통해 더욱 쉽게 해결</strong> 할 수 있다!!</p>
<br>
 <br> 
<h3 id="1-1-list-comprehension-조건필터"><a class="markdownIt-Anchor" href="#1-1-list-comprehension-조건필터"></a> 1-1. list comprehension 조건필터</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<br>
<p>아래 문법이 바로 list comprehension 이다. 한 줄로 해결해 버리는 것이 매력임!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<br>  
<h3 id="1-2-step-1-list를-만들어야-하니-일단-꺾쇠-를-씌운다"><a class="markdownIt-Anchor" href="#1-2-step-1-list를-만들어야-하니-일단-꺾쇠-를-씌운다"></a> 1-2. [STEP 1] list를 만들어야 하니 일단 꺾쇠[ ]를 씌운다</h3>
<ul>
<li>꺾쇠 안에 <strong>반복문이 들어간다</strong></li>
<li>반복문을 돌면서 return 된 i값을 list에 넣는 원리이기 때문에 <strong>for구분 앞에 i를 써준다</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<br>
<br>  
<h3 id="1-3-step-2-조건-필터를-걸어-준다"><a class="markdownIt-Anchor" href="#1-3-step-2-조건-필터를-걸어-준다"></a> 1-3. [STEP 2] 조건 필터를 걸어 준다</h3>
<p>[i for i in mylist (이곳에 조건문)]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">[i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<p>이것을 변수에 다시 할당해주면 끝!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i <span class="keyword">for</span> i <span class="keyword">in</span> mylist <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<br>
<br>  
<h3 id="1-4-응용-step-변수-값을-가공할-수도-있다"><a class="markdownIt-Anchor" href="#1-4-응용-step-변수-값을-가공할-수도-있다"></a> 1-4. [응용 STEP] 변수 값을 가공할 수도 있다</h3>
<p><strong>예를 들어:</strong></p>
<p>mylist의 모든 값에 +2를 하고 다시 even이라는 list에 저장하고 싶다면</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even = [i+<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> mylist]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">even</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
</code></pre>
<br>
<br>  
<h2 id="2-문자열string을-가지고-놀기"><a class="markdownIt-Anchor" href="#2-문자열string을-가지고-놀기"></a> <strong>2. 문자열(string)을 가지고 놀기</strong></h2>
<h3 id="2-1-문자의-길이"><a class="markdownIt-Anchor" href="#2-1-문자의-길이"></a> 2-1. 문자의 길이</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'banana'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(a)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'banana pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(a)  <span class="comment"># 공백도 count된다</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>10
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글 바나나'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">len(b)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>6
</code></pre>
<br>
<br>  
<h3 id="2-2-문장-쪼개기-split"><a class="markdownIt-Anchor" href="#2-2-문장-쪼개기-split"></a> 2-2. 문장 쪼개기 – “.split”</h3>
<ul>
<li>split은 문장을 특정 규칙에 의해 쪼개 주는 기능을 한다</li>
<li><strong>명령어:</strong>  변수명.split(‘<em>쪼개는 기준</em>’)</li>
<li>쪼개는 기준이 설정되어 있지 않으면 그냥 '빈칸’으로 인식된다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'This is a pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.split(<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.split()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'This-is-a-pen'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.split(<span class="string">'-'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<ul>
<li>return된 값을 list형식으로 저장한다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa = a.split(<span class="string">' '</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['This', 'is', 'a', 'pen']
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'This'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'a'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">aa[<span class="number">0</span>] + aa[<span class="number">2</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'Thisa'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c = <span class="string">'한글은 어떻게 될까요?'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c.split()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['한글은', '어떻게', '될까요?']
</code></pre>
<br>
  <br> 
<h3 id="2-3-대문자-소문자로-만들기-upper-lower"><a class="markdownIt-Anchor" href="#2-3-대문자-소문자로-만들기-upper-lower"></a> 2-3. 대문자 / 소문자로 만들기 – “.upper” / “.lower”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'My name is hyemin'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.upper()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'MY NAME IS HYEMIN'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.lower()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'my name is hyemin'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="string">'한글엔 대소문자가 없어요ㅠ'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.upper()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'한글엔 대소문자가 없어요ㅠ'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.lower()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'한글엔 대소문자가 없어요ㅠ'
</code></pre>
<br>
 <br> 
<h3 id="24-~로-시작하는-~로-끝나는-startswith-endswith"><a class="markdownIt-Anchor" href="#24-~로-시작하는-~로-끝나는-startswith-endswith"></a> 2.4. ~로 시작하는, ~로 끝나는 – “.startswith” , “.endswith”</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'01-sample.png'</span></span><br><span class="line">b = <span class="string">'02-sample.jpg'</span></span><br><span class="line">c = <span class="string">'03-sample.pdf'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.startswith(<span class="string">'01'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.endswith(<span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">b.endswith(<span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<br>
<p>조건(혹은 형식)에 맞는 파일을 추출하고 싶을 때:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mylist = [a, b]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> mylist:</span><br><span class="line">    <span class="keyword">if</span> file.endswith(<span class="string">'jpg'</span>):</span><br><span class="line">        print(file)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>02-sample.jpg
</code></pre>
<br>
<br>
<h3 id="2-5-바꾸기-replace바꿀-대상-바꿔야할-값"><a class="markdownIt-Anchor" href="#2-5-바꾸기-replace바꿀-대상-바꿔야할-값"></a> 2-5. 바꾸기 – “.replace(‘바꿀 대상, 바꿔야할 값’)”</h3>
<p><strong>[예]</strong>   file형식을 바꾸고 싶다면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'01-sample.png'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<p>이 때 a의 값이 변하지 않아. 다시 할당 해야 함</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.png'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_new = a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)  <span class="comment"># 새로 지정</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a_new</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = a.replace(<span class="string">'.png'</span>, <span class="string">'.jpg'</span>)  <span class="comment"># 덮어쒸우기</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.jpg'
</code></pre>
<br>
<br>    
<h3 id="2-6-불필요한-공백-제거하기-strip"><a class="markdownIt-Anchor" href="#2-6-불필요한-공백-제거하기-strip"></a> 2-6. 불필요한 공백 제거하기 – “.strip”</h3>
<p><strong>[예]</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = <span class="string">'   01-sample.png'</span></span><br><span class="line">b = <span class="string">'01-sample.png'</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a == b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False
</code></pre>
<br>
<p>strip은 양 끝 불필요한 공백을 제거해 줌.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.strip()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'01-sample.png'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a.strip() == b</span><br></pre></td></tr></tbody></table></figure>
<pre><code>True
</code></pre>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 기초문법 - (6) Package</title>
    <url>/2020/05/16/S-Python-base6/</url>
    <content><![CDATA[<p>패키지(Package) 와 import</p>
<a id="more"></a>
<h1 id="목록"><a class="markdownIt-Anchor" href="#목록"></a> <strong>목록</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%8C%A8%ED%82%A4%EC%A7%80%EC%99%80-%EB%AA%A8%EB%93%88-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%ED%95%A8%EC%88%98%EC%9D%98-%EA%B4%80%EA%B3%84%EB%8F%84"><strong>1. 패키지와 모듈 그리고 함수의 관계도</strong></a></li>
<li><a href="#2-%EB%AA%A8%EB%93%88-import-%ED%95%98%EA%B8%B0"><strong>2. 모듈 import 하기</strong></a></li>
<li><a href="#3-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%97%90%EC%84%9C-import%ED%95%98%EA%B8%B0"><strong>3. 패키지 에서 import하기</strong></a></li>
<li><a href="#4-%EB%B3%84%EC%B9%AD-alias-%EC%A7%80%EC%96%B4%EC%A3%BC%EA%B8%B0"><strong>4. 별칭 (alias) 지어주기</strong></a></li>
<li><a href="#5-%EC%95%9E%EC%9C%BC%EB%A1%9C-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%AA%A8%EB%93%88-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0"><strong>5. 앞으로 자주 사용할 패키지, 모듈 미리보기</strong></a></li>
</ul>
<p></p>
<br>
<h1 id="패키지package-와-import"><a class="markdownIt-Anchor" href="#패키지package-와-import"></a> <strong>패키지(Package) 와 import</strong></h1>
<h2 id="1-패키지와-모듈-그리고-함수의-관계도"><a class="markdownIt-Anchor" href="#1-패키지와-모듈-그리고-함수의-관계도"></a> <strong>1. 패키지와 모듈 그리고 함수의 관계도</strong></h2>
<ul>
<li>
<p><strong>함수</strong>들이 뭉쳐진 하나의 .py파일 안에 이루어진 것을 <strong>모듈</strong>이라고 한다</p>
</li>
<li>
<p>여러 개의 모듈을 그룹화 하면 <strong>패키지</strong>가 된다</p>
</li>
<li>
<p><strong>패키지</strong>는 종종 <strong>라이브러비</strong>라고도 불린다</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment"># 출척: pythonstudy.xyz</span></span><br><span class="line">Image(<span class="string">'http://pythonstudy.xyz/images/basics/python-package.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<p><img src="http://pythonstudy.xyz/images/basics/python-package.png" alt="png"></p>
<p><br><br></p>
<h2 id="2-모듈-import-하기"><a class="markdownIt-Anchor" href="#2-모듈-import-하기"></a> <strong>2. 모듈 import 하기</strong></h2>
<p><strong>import 하는 방법</strong></p>
<p>.py (파이썬 파일 확장자)로 된 파일을 우리는 <strong>모듈</strong> 이라고 한다, import 구문을 통해 해당 파일을 불러올 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<p>위의 코드는 pandas라는 모듈을 우리가 불러오겠다라는 의미이다</p>
<p><br> <br></p>
<h2 id="3-패키지-에서-import하기"><a class="markdownIt-Anchor" href="#3-패키지-에서-import하기"></a> <strong>3. 패키지 에서 import하기</strong></h2>
<ul>
<li>패키지 안에서 하나의 모듈을 불러온다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame   <span class="comment"># pandas라는 패키지 안에서 DataFrame이라는 모듈을 불러온다</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">DataFrame()  <span class="comment"># 모듈 DataFrame사용</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
<ul>
<li>통째로 패키지나 모듈을 불러온다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pandas.DataFrame()  <span class="comment"># DataFrame이라는 모듈을 사용하기 위해서는 .을 찍고 이어서 쓰면 됨</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
  <br>
<h2 id="4-별칭-alias-지어주기"><a class="markdownIt-Anchor" href="#4-별칭-alias-지어주기"></a> <strong>4. 별칭 (alias) 지어주기</strong></h2>
<p>pandas라는 패키지 이름이 너무 길기 때문에 우리는 약어로 줄여쓸 수 있다. 보통 pd를 보편적으로 많이 사용한다.</p>
<p>줄여서 별명을 지어줄 때는 as를 붙혀준다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<br />
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
 <br> 
<h2 id="5-앞으로-자주-사용할-패키지-모듈-미리보기"><a class="markdownIt-Anchor" href="#5-앞으로-자주-사용할-패키지-모듈-미리보기"></a> <strong>5. 앞으로 자주 사용할 패키지, 모듈 미리보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li>numpy: 과학계산을 위한 패키지</li>
<li>pandas: 데이터 분석을 할 때 가장 많이 쓰이는 패키지</li>
<li>matplotlib: 시각확를 위한 패키지</li>
<li>seaborn: 시각화를 위한 패키지 (matplotlib을 더 쉽게 사용할 수 있도록 도와주는 패키지)</li>
</ul>
<p><br><br></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python_Base</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Pandas 전처리 -- 부동산 데이터</title>
    <url>/2020/06/22/E-Python-Pandas-Pre-1/</url>
    <content><![CDATA[<h1 id="pandas-전처리-실습-부동산-데이터"><a class="markdownIt-Anchor" href="#pandas-전처리-실습-부동산-데이터"></a> &lt;Pandas 전처리&gt; 실습 – 부동산 데이터</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EC%83%98%ED%94%8C%EB%8D%B0%EC%9D%B4%ED%84%B0"><strong>0. 샘플데이터</strong></a></li>
<li><a href="#1-column-%EC%9D%B4%EB%A6%84-%EC%A0%9C%EC%A0%95%EC%9D%98-rename"><strong>1. column 이름 제정의 (rename)</strong></a></li>
<li><a href="#2-data-overview"><strong>2. Data Overview</strong></a>
<ul>
<li><a href="#2-1-data-shape-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-1. Data Shape 확인하기</a></li>
<li><a href="#2-2-%EA%B1%B8%EC%B8%A1%EA%B0%92%EA%B3%BC-data-type-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-2. 걸측값과 Data Type 확인하기</a></li>
<li><a href="#2-3-%ED%86%B5%EA%B3%84%EA%B0%92-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-3. 통계값 확인하기</a></li>
</ul>
</li>
<li><a href="#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98"><strong>3. 데이터 타입 변환</strong></a>
<ul>
<li><a href="#3-1-strstrip%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B3%B5%EB%B0%B1%EC%9D%B4-%EC%9E%88%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B3%B5%EB%B0%B1-%EC%97%86%EC%95%A0%EA%B8%B0">3-1. str.strip()을 활용하여 공백이 있는 데이터의 공백 없애기</a></li>
<li><a href="#3-2-%EB%B9%88-%EA%B3%B5%EB%B0%B1%EC%97%90-0%EC%9D%84-%EB%84%A3%EC%96%B4%EC%A3%BC%EA%B8%B0">3-2. 빈 공백에 0을 넣어주기</a></li>
<li><a href="#3-3-nan-%EA%B0%92%EC%9D%80-fillna%EB%A1%9C-%EC%B1%84%EC%9B%8C%EC%A3%BC%EA%B8%B0">3-3. NaN 값은 fillna로 채워주기</a></li>
<li><a href="#3-4-strreplace-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EC%BD%A4%EB%A7%88%EB%A5%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-4. str.replace() 를 활용하여 콤마를 제거하기</a></li>
<li><a href="#3-5-strreplace%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-5. str.replace()를 활용하여 “-” 제거하기</a></li>
<li><a href="#3-6-%EA%B7%9C%EB%AA%A8%EA%B5%AC%EB%B6%84-column%EC%97%90-%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%84%EC%9A%A9%EB%A9%B4%EC%A0%81-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-6. 규모구분 column에 불필요한 “전용면적” 제거하기</a></li>
</ul>
</li>
<li><a href="#4-%EC%A0%84%EC%B2%98%EB%A6%AC-%EB%82%B4%EC%9A%A9-%EB%B3%B5%EC%8A%B5%ED%95%98%EA%B8%B0"><strong>4. 전처리 내용 복습하기</strong></a></li>
<li><a href="#5-%EC%A7%80%EC%97%AD%EB%B3%84-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0"><strong>5. 지역별 분양가격을 확인해보기</strong></a>
<ul>
<li><a href="#5-1-%EC%A7%80%EC%97%AD%EB%B3%84-%ED%8F%89%EA%B7%A0-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-1. 지역별 평균 분양가격 확인해보기</a></li>
<li><a href="#5-2-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%B4-100%EB%B3%B4%EB%8B%A4-%EC%9E%91%EC%9D%80-%ED%96%89%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%B4%EB%B3%B4%EA%B8%B0">5-2. 분양가격이 100보다 작은 행을 제거해보기</a></li>
<li><a href="#5-3-%EC%A7%80%EC%97%AD%EB%B3%84-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B0%AF%EC%88%98%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-3. 지역별 “분양가격” 데이터의 갯수를 확인해보기</a></li>
<li><a href="#5-4-%EC%A7%80%EC%97%AD%EB%B3%84-%EC%A0%9C%EC%9D%BC-%EB%B9%84%EC%8B%BC-%EB%B6%84%EC%96%91%EA%B0%80%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-4. 지역별 제일 비싼 분양가를 확인해보기</a></li>
</ul>
</li>
<li><a href="#6-%EC%97%B0%EB%8F%84%EB%B3%84-%ED%8F%89%EA%B7%A0-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0"><strong>6. 연도별 평균 분양가격을 확인해보기</strong></a></li>
<li><a href="#7-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0"><strong>7. 피벗테이블 활용하기</strong></a></li>
<li><a href="#8-%EC%97%B0%EB%8F%84%EB%B3%84-%EA%B7%9C%EB%AA%A8%EB%B3%84-%EA%B0%80%EA%B2%A9%EC%9D%84-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>8. 연도별, 규모별 가격을 알아보기</strong></a></li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="0-샘플데이터"><a class="markdownIt-Anchor" href="#0-샘플데이터"></a> <strong>0. 샘플데이터</strong></h2>
<p><a href="https://www.data.go.kr/" target="_blank" rel="noopener">공공데이터포털</a> 에서 제공하는 공공데이터 “민간 아파트 가격동향” 를 활용한다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"seoul_house_price.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격(㎡)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
<p><br><br></p>
<h2 id="1-column-이름-제정의-rename"><a class="markdownIt-Anchor" href="#1-column-이름-제정의-rename"></a> <strong>1. column 이름 제정의 (rename)</strong></h2>
<p><strong>[목표] 분양가격 column의 이름을 재정의:</strong></p>
<blockquote>
<p>“분양가격(m<sup>2</sup>)​” --&gt; “분양가격”</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.rename(columns = {<span class="string">"분양가격(㎡)"</span> : <span class="string">"분양가격"</span>})</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
<br>
 <br>
<h2 id="2-data-overview"><a class="markdownIt-Anchor" href="#2-data-overview"></a> <strong>2. Data Overview</strong></h2>
<h3 id="2-1-data-shape-확인하기"><a class="markdownIt-Anchor" href="#2-1-data-shape-확인하기"></a> 2-1. Data Shape 확인하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4505, 5)
</code></pre>
<br>
<h3 id="2-2-걸측값과-data-type-확인하기"><a class="markdownIt-Anchor" href="#2-2-걸측값과-data-type-확인하기"></a> 2-2. 걸측값과 Data Type 확인하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4505 entries, 0 to 4504
Data columns (total 5 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   지역명     4505 non-null   object
 1   규모구분    4505 non-null   object
 2   연도      4505 non-null   int64 
 3   월       4505 non-null   int64 
 4   분양가격    4210 non-null   object
dtypes: int64(2), object(3)
memory usage: 176.1+ KB
</code></pre>
<br>
<h3 id="2-3-통계값-확인하기"><a class="markdownIt-Anchor" href="#2-3-통계값-확인하기"></a> 2-3. 통계값 확인하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>연도</th>
      <th>월</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>4505.000000</td>
      <td>4505.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>2017.452830</td>
      <td>6.566038</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.311432</td>
      <td>3.595519</td>
    </tr>
    <tr>
      <th>min</th>
      <td>2015.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>2016.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>2017.000000</td>
      <td>7.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>2019.000000</td>
      <td>10.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>2020.000000</td>
      <td>12.000000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
 <br>
<h2 id="3-데이터-타입-변환"><a class="markdownIt-Anchor" href="#3-데이터-타입-변환"></a> <strong>3. 데이터 타입 변환</strong></h2>
<p><strong>[목표] &lt;object 타입&gt;으로 되어있는 "분양가격"을 &lt;int 타입&gt;으로 변환하기</strong></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-193-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: invalid literal for int() with base 10: '  '
</code></pre>
<br>
<blockquote>
<p>!! “분양가격” column에 <font color="blue">“2칸 공백” 값이 있어서</font> Error가 납니다</p>
</blockquote>
  <br>
<h3 id="3-1-strstrip을-활용하여-공백이-있는-데이터의-공백-없애기"><a class="markdownIt-Anchor" href="#3-1-strstrip을-활용하여-공백이-있는-데이터의-공백-없애기"></a> 3-1. str.strip()을 활용하여 공백이 있는 데이터의 공백 없애기</h3>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.str.strip()</strong></p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">'  '</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>28</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>29</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>34</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>81</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>113</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>114</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>119</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>166</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>198</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>199</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>204</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>251</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>283</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>284</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>289</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>336</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.strip(<span class="string">'  '</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>  
<h3 id="3-2-빈-공백에-0을-넣어주기"><a class="markdownIt-Anchor" href="#3-2-빈-공백에-0을-넣어주기"></a> 3-2. 빈 공백에 0을 넣어주기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">''</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-198-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: cannot convert float NaN to integer
</code></pre>
<br>
<blockquote>
<p>!! “분양가격” column에 <font color="blue">“NaN” 값이 있어서</font> Error가 또 납니다 ㅠㅠ</p>
</blockquote>
<br>  
<h3 id="3-3-nan-값은-fillna로-채워주기"><a class="markdownIt-Anchor" href="#3-3-nan-값은-fillna로-채워주기"></a> 3-3. NaN 값은 fillna로 채워주기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>368</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>369</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>374</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>388</th>
      <td>강원</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>421</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4461</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4488</th>
      <td>전남</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4493</th>
      <td>경북</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4499</th>
      <td>경남</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
<p>295 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-203-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: invalid literal for int() with base 10: '6,657'
</code></pre>
<br>
<blockquote>
<p>!! 이번에는 <font color="blue">","가 들어간</font> 데이터가 문제네요…</p>
</blockquote>
  <br>
<h3 id="3-4-strreplace-를-활용하여-콤마를-제거하기"><a class="markdownIt-Anchor" href="#3-4-strreplace-를-활용하여-콤마를-제거하기"></a> 3-4. str.replace() 를 활용하여 콤마를 제거하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">"6,657"</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2125</th>
      <td>서울</td>
      <td>전체</td>
      <td>2017</td>
      <td>11</td>
      <td>6,657</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.replace(<span class="string">','</span>, <span class="string">''</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-206-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: cannot convert float NaN to integer
</code></pre>
<br>
<blockquote>
<p>!! 다시 NaN값이 생겨서 fillna로 채워줍니다.</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-208-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: invalid literal for int() with base 10: '-'
</code></pre>
<br>
<blockquote>
<p>!! 이번에는 <font color="blue">"-"가</font> 멀썽이네요…</p>
</blockquote>
 <br>
<h3 id="3-5-strreplace를-활용하여-제거하기"><a class="markdownIt-Anchor" href="#3-5-strreplace를-활용하여-제거하기"></a> 3-5. str.replace()를 활용하여 “-” 제거하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">""</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&lt;ipython-input-211-5870dcdf031c&gt; in &lt;module&gt;
----&gt; 1 df["분양가격"].astype(int)


D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)
   5696         else:
   5697             # else, only a single dtype is given
-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)
   5699             return self._constructor(new_data).__finalize__(self)
   5700 


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)
    580 
    581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):
--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)
    583 
    584     def convert(self, **kwargs):


D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)
    440                 applied = b.apply(f, **kwargs)
    441             else:
--&gt; 442                 applied = getattr(b, f)(**kwargs)
    443             result_blocks = _extend_blocks(applied, result_blocks)
    444 


D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)
    623             vals1d = values.ravel()
    624             try:
--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)
    626             except (ValueError, TypeError):
    627                 # e.g. astype_nansafe can fail on object-dtype of strings


D:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)
    872         # work around NumPy brokenness, #1987
    873         if np.issubdtype(dtype.type, np.integer):
--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)
    875 
    876         # if we have a datetime/timedelta array of objects


pandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()


ValueError: cannot convert float NaN to integer
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4505 entries, 0 to 4504
Data columns (total 5 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   지역명     4505 non-null   object
 1   규모구분    4505 non-null   object
 2   연도      4505 non-null   int64 
 3   월       4505 non-null   int64 
 4   분양가격    4505 non-null   int32 
dtypes: int32(1), int64(2), object(2)
memory usage: 158.5+ KB
</code></pre>
<br>
<blockquote>
<p>이제 드디어 “분양가격” column의 Type을 int로 성공적으로 바꿨습니다!!!</p>
</blockquote>
<br>
<h3 id="3-6-규모구분-column에-불필요한-전용면적-제거하기"><a class="markdownIt-Anchor" href="#3-6-규모구분-column에-불필요한-전용면적-제거하기"></a> 3-6. 규모구분 column에 불필요한 “전용면적” 제거하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"규모구분"</span>] = df[<span class="string">"규모구분"</span>].str.replace(<span class="string">"전용면적"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
   <br>
<h2 id="4-전처리-내용-복습하기"><a class="markdownIt-Anchor" href="#4-전처리-내용-복습하기"></a> <strong>4. 전처리 내용 복습하기</strong></h2>
<p><strong>방급 진행 했던 전처리 과정을 복습해봅시다!</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">"seoul_house_price.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
   <br>
<p><strong>(1) 콤마가 있는 경우</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.str.replace</strong> (’,’, ‘’)</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.iloc[<span class="number">2125</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명           서울
규모구분          전체
연도          2017
월             11
분양가격(㎡)    6,657
Name: 2125, dtype: object
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = df2.rename(columns = {<span class="string">"분양가격(㎡)"</span> : <span class="string">"분양가격"</span>})</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.replace(<span class="string">","</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.iloc[<span class="number">2125</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명       서울
규모구분      전체
연도      2017
월         11
분양가격    6657
Name: 2125, dtype: object
</code></pre>
 <br>
<p><strong>(2) - 가 있는 경우</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] **.str.replace(’-’, ‘’)</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"-"</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3683</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3686</th>
      <td>대전</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3688</th>
      <td>대전</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3690</th>
      <td>울산</td>
      <td>전체</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3691</th>
      <td>울산</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3692</th>
      <td>울산</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3693</th>
      <td>울산</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3694</th>
      <td>울산</td>
      <td>전용면적 102㎡초과</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
    <tr>
      <th>3696</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td>-</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"-"</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
 <br>
<p><strong>(3) 공백이 2개 들어간 경우</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] **.str.strip("  ")</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>28</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>29</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>34</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>81</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>113</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>114</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>119</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>166</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>198</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>199</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>204</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>251</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>283</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>284</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>289</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>336</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.strip(<span class="string">"  "</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
  <br> 
<p><strong>(4) 빈 칸을 0으로 채우기</strong></p>
<blockquote>
<p><em>df_name</em>.loc [ <em>df_name</em> [ “<em>col_name</em>” ] == “” , “<em>col_name</em>”] = 0</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>28</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>29</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>34</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>81</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td></td>
    </tr>
    <tr>
      <th>113</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>114</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>119</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>166</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>11</td>
      <td></td>
    </tr>
    <tr>
      <th>198</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>199</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>204</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>251</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2015</td>
      <td>12</td>
      <td></td>
    </tr>
    <tr>
      <th>283</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>284</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>289</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>336</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>1</td>
      <td></td>
    </tr>
    <tr>
      <th>3683</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3686</th>
      <td>대전</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3688</th>
      <td>대전</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3690</th>
      <td>울산</td>
      <td>전체</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3691</th>
      <td>울산</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3692</th>
      <td>울산</td>
      <td>전용면적 60㎡초과 85㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3693</th>
      <td>울산</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3694</th>
      <td>울산</td>
      <td>전용면적 102㎡초과</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
    <tr>
      <th>3696</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2019</td>
      <td>5</td>
      <td></td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
 <br>  
<p><strong>(5) NaN 값을 0으로 바꾸기</strong></p>
<blockquote>
<p><em>df_name</em>.loc [ <em>df_name</em> [ “<em>col_name</em>” ] <strong>.isna()</strong> ]<br>
<em>df_name</em> [ “<em>col_name</em>” ].fillna(0)</p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>368</th>
      <td>광주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>369</th>
      <td>광주</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>374</th>
      <td>대전</td>
      <td>전용면적 102㎡초과</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>388</th>
      <td>강원</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>421</th>
      <td>제주</td>
      <td>전용면적 60㎡이하</td>
      <td>2016</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4461</th>
      <td>세종</td>
      <td>전용면적 60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4488</th>
      <td>전남</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4493</th>
      <td>경북</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4499</th>
      <td>경남</td>
      <td>전용면적 102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>전용면적 85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
<p>295 rows × 5 columns</p>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>
 <br>  
<p><strong>(6) column type 바꾸기</strong></p>
<blockquote>
<p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.astype(…)</strong></p>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0       5841
1       5652
2       5882
3       5721
4       5879
        ... 
4500    3955
4501    4039
4502    3962
4503       0
4504    3601
Name: 분양가격, Length: 4505, dtype: int32
</code></pre>
 <br>
   <br>
<h2 id="5-지역별-분양가격을-확인해보기"><a class="markdownIt-Anchor" href="#5-지역별-분양가격을-확인해보기"></a> <strong>5. 지역별 분양가격을 확인해보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4505 entries, 0 to 4504
Data columns (total 5 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   지역명     4505 non-null   object
 1   규모구분    4505 non-null   object
 2   연도      4505 non-null   int64 
 3   월       4505 non-null   int64 
 4   분양가격    4505 non-null   int32 
dtypes: int32(1), int64(2), object(2)
memory usage: 158.5+ KB
</code></pre>
 <br>
<h3 id="5-1-지역별-평균-분양가격-확인해보기"><a class="markdownIt-Anchor" href="#5-1-지역별-평균-분양가격-확인해보기"></a> 5-1. 지역별 평균 분양가격 확인해보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원    2339.807547
경기    4072.667925
경남    2761.275472
경북    2432.128302
광주    2450.728302
대구    3538.920755
대전    2479.135849
부산    3679.920755
서울    7225.762264
세종    2815.098113
울산    1826.101887
인천    3578.433962
전남    2270.177358
전북    2322.060377
제주    2979.407547
충남    2388.324528
충북    2316.871698
Name: 분양가격, dtype: float64
</code></pre>
  <br> 
<h3 id="5-2-분양가격이-100보다-작은-행을-제거해보기"><a class="markdownIt-Anchor" href="#5-2-분양가격이-100보다-작은-행을-제거해보기"></a> 5-2. 분양가격이 100보다 작은 행을 제거해보기</h3>
<blockquote>
<p>특정 조건에 만족하는 행을 제거하고자 할 때는</p>
<ol>
<li>index를 list로 가져온다
<ul>
<li><em>idx</em> = df.loc [ <em>조건식</em> ] <strong>.index</strong></li>
</ul>
</li>
<li>drop을 활용하여 행을 제거한다
<ul>
<li><em>df_name</em> = <em>df_name</em> <strong>.drop</strong> (<em>idx</em>, axis = 0)</li>
</ul>
</li>
</ol>
</blockquote>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx = df.loc[df[<span class="string">"분양가격"</span>] &lt; <span class="number">100</span>].index</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">idx</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Int64Index([  28,   29,   34,   81,  113,  114,  119,  166,  198,  199,
            ...
            4418, 4448, 4453, 4458, 4459, 4461, 4488, 4493, 4499, 4503],
           dtype='int64', length=320)
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4503</th>
      <td>제주</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4505 rows × 5 columns</p>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = df.drop(idx, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>4498</th>
      <td>경남</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3247</td>
    </tr>
    <tr>
      <th>4500</th>
      <td>제주</td>
      <td>전체</td>
      <td>2020</td>
      <td>2</td>
      <td>3955</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>제주</td>
      <td>60㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>4039</td>
    </tr>
    <tr>
      <th>4502</th>
      <td>제주</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2020</td>
      <td>2</td>
      <td>3962</td>
    </tr>
    <tr>
      <th>4504</th>
      <td>제주</td>
      <td>102㎡초과</td>
      <td>2020</td>
      <td>2</td>
      <td>3601</td>
    </tr>
  </tbody>
</table>
<p>4185 rows × 5 columns</p>
</div>
   <br>
<p>다시 한 번 지역명으로 group을 묶어 분양가격을 확인해보자!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원    2412.642023
경기    4072.667925
경남    2814.376923
경북    2547.486166
광주    3049.028169
대구    3663.335938
대전    3128.433333
부산    3679.920755
서울    7225.762264
세종    2984.004000
울산    3043.503145
인천    3633.275862
전남    2304.969349
전북    2348.648855
제주    3432.795652
충남    2501.604743
충북    2316.871698
Name: 분양가격, dtype: float64
</code></pre>
 <br>
<h3 id="5-3-지역별-분양가격-데이터의-갯수를-확인해보기"><a class="markdownIt-Anchor" href="#5-3-지역별-분양가격-데이터의-갯수를-확인해보기"></a> 5-3. 지역별 “분양가격” 데이터의 갯수를 확인해보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].count()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원    257
경기    265
경남    260
경북    253
광주    213
대구    256
대전    210
부산    265
서울    265
세종    250
울산    159
인천    261
전남    261
전북    262
제주    230
충남    253
충북    265
Name: 분양가격, dtype: int64
</code></pre>
 <br>  
<h3 id="5-4-지역별-제일-비싼-분양가를-확인해보기"><a class="markdownIt-Anchor" href="#5-4-지역별-제일-비싼-분양가를-확인해보기"></a> 5-4. 지역별 제일 비싼 분양가를 확인해보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].max()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>지역명
강원     3906
경기     5670
경남     4303
경북     3457
광주     4881
대구     5158
대전     4877
부산     4623
서울    13835
세종     3931
울산     3594
인천     5188
전남     3053
전북     3052
제주     5462
충남     3201
충북     2855
Name: 분양가격, dtype: int32
</code></pre>
<p><br>  <br></p>
<h2 id="6-연도별-평균-분양가격을-확인해보기"><a class="markdownIt-Anchor" href="#6-연도별-평균-분양가격을-확인해보기"></a> <strong>6. 연도별 평균 분양가격을 확인해보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">"연도"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>연도
2015    2788.707819
2016    2934.250000
2017    3143.311795
2018    3326.951034
2019    3693.422149
2020    3853.960526
Name: 분양가격, dtype: float64
</code></pre>
 <br>
   <br>
<h2 id="7-피벗테이블-활용하기"><a class="markdownIt-Anchor" href="#7-피벗테이블-활용하기"></a> <strong>7. 피벗테이블 활용하기</strong></h2>
<ul>
<li>
<p><strong>행 인덱스:</strong> 연도</p>
</li>
<li>
<p><strong>열 인덱스:</strong> 규모구분</p>
</li>
<li>
<p><strong>값:</strong> 분양가 (평균)</p>
 <br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>지역명</th>
      <th>규모구분</th>
      <th>연도</th>
      <th>월</th>
      <th>분양가격</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>서울</td>
      <td>전체</td>
      <td>2015</td>
      <td>10</td>
      <td>5841</td>
    </tr>
    <tr>
      <th>1</th>
      <td>서울</td>
      <td>60㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5652</td>
    </tr>
    <tr>
      <th>2</th>
      <td>서울</td>
      <td>60㎡초과 85㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5882</td>
    </tr>
    <tr>
      <th>3</th>
      <td>서울</td>
      <td>85㎡초과 102㎡이하</td>
      <td>2015</td>
      <td>10</td>
      <td>5721</td>
    </tr>
    <tr>
      <th>4</th>
      <td>서울</td>
      <td>102㎡초과</td>
      <td>2015</td>
      <td>10</td>
      <td>5879</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"연도"</span>, columns = <span class="string">"규모구분"</span>, values = <span class="string">"분양가격"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>규모구분</th>
      <th>102㎡초과</th>
      <th>60㎡이하</th>
      <th>60㎡초과 85㎡이하</th>
      <th>85㎡초과 102㎡이하</th>
      <th>전체</th>
    </tr>
    <tr>
      <th>연도</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2015</th>
      <td>2980.977778</td>
      <td>2712.583333</td>
      <td>2694.490196</td>
      <td>2884.395833</td>
      <td>2694.862745</td>
    </tr>
    <tr>
      <th>2016</th>
      <td>3148.099476</td>
      <td>2848.144279</td>
      <td>2816.965686</td>
      <td>3067.380435</td>
      <td>2816.073529</td>
    </tr>
    <tr>
      <th>2017</th>
      <td>3427.649746</td>
      <td>3112.538071</td>
      <td>2981.950980</td>
      <td>3204.075145</td>
      <td>3008.279412</td>
    </tr>
    <tr>
      <th>2018</th>
      <td>3468.355932</td>
      <td>3286.184783</td>
      <td>3227.458128</td>
      <td>3467.184211</td>
      <td>3235.098522</td>
    </tr>
    <tr>
      <th>2019</th>
      <td>4039.854839</td>
      <td>3486.910112</td>
      <td>3538.545918</td>
      <td>3933.538462</td>
      <td>3515.974490</td>
    </tr>
    <tr>
      <th>2020</th>
      <td>4187.566667</td>
      <td>3615.968750</td>
      <td>3594.852941</td>
      <td>4532.090909</td>
      <td>3603.911765</td>
    </tr>
  </tbody>
</table>
</div>
<p><br>  <br></p>
<h2 id="8-연도별-규모별-가격을-알아보기"><a class="markdownIt-Anchor" href="#8-연도별-규모별-가격을-알아보기"></a> <strong>8. 연도별, 규모별 가격을 알아보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.groupby([<span class="string">"연도"</span>, <span class="string">"규모구분"</span>])[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>연도    규모구분         
2015   102㎡초과          2980.977778
       60㎡이하           2712.583333
       60㎡초과 85㎡이하     2694.490196
       85㎡초과 102㎡이하    2884.395833
      전체               2694.862745
2016   102㎡초과          3148.099476
       60㎡이하           2848.144279
       60㎡초과 85㎡이하     2816.965686
       85㎡초과 102㎡이하    3067.380435
      전체               2816.073529
2017   102㎡초과          3427.649746
       60㎡이하           3112.538071
       60㎡초과 85㎡이하     2981.950980
       85㎡초과 102㎡이하    3204.075145
      전체               3008.279412
2018   102㎡초과          3468.355932
       60㎡이하           3286.184783
       60㎡초과 85㎡이하     3227.458128
       85㎡초과 102㎡이하    3467.184211
      전체               3235.098522
2019   102㎡초과          4039.854839
       60㎡이하           3486.910112
       60㎡초과 85㎡이하     3538.545918
       85㎡초과 102㎡이하    3933.538462
      전체               3515.974490
2020   102㎡초과          4187.566667
       60㎡이하           3615.968750
       60㎡초과 85㎡이하     3594.852941
       85㎡초과 102㎡이하    4532.090909
      전체               3603.911765
Name: 분양가격, dtype: float64
</code></pre>
  <br> 
<p>예쁘게 출력이 안되어서 보기가 힘들때는 pd.DataFrame()으로 한 번 더 감싸주면 됩니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame(df.groupby([<span class="string">"연도"</span>, <span class="string">"규모구분"</span>])[<span class="string">"분양가격"</span>].mean())</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>분양가격</th>
    </tr>
    <tr>
      <th>연도</th>
      <th>규모구분</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="5" valign="top">2015</th>
      <th>102㎡초과</th>
      <td>2980.977778</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>2712.583333</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>2694.490196</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>2884.395833</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>2694.862745</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2016</th>
      <th>102㎡초과</th>
      <td>3148.099476</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>2848.144279</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>2816.965686</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3067.380435</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>2816.073529</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2017</th>
      <th>102㎡초과</th>
      <td>3427.649746</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3112.538071</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>2981.950980</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3204.075145</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3008.279412</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2018</th>
      <th>102㎡초과</th>
      <td>3468.355932</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3286.184783</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>3227.458128</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3467.184211</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3235.098522</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2019</th>
      <th>102㎡초과</th>
      <td>4039.854839</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3486.910112</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>3538.545918</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>3933.538462</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3515.974490</td>
    </tr>
    <tr>
      <th rowspan="5" valign="top">2020</th>
      <th>102㎡초과</th>
      <td>4187.566667</td>
    </tr>
    <tr>
      <th>60㎡이하</th>
      <td>3615.968750</td>
    </tr>
    <tr>
      <th>60㎡초과 85㎡이하</th>
      <td>3594.852941</td>
    </tr>
    <tr>
      <th>85㎡초과 102㎡이하</th>
      <td>4532.090909</td>
    </tr>
    <tr>
      <th>전체</th>
      <td>3603.911765</td>
    </tr>
  </tbody>
</table>
</div>
 <br>
 <br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Exercise】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (3) DataFrame의 합침 및 병합</title>
    <url>/2020/06/19/S-Python-Pandas-Pre3/</url>
    <content><![CDATA[<h1 id="dataframe의-합침-및-병합"><a class="markdownIt-Anchor" href="#dataframe의-합침-및-병합"></a> DataFrame의 합침 및 병합</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-dataframe-%ED%95%A9%EC%B9%98%EA%B8%B0-concat"><strong>1. DataFrame 합치기 (concat)</strong></a>
<ul>
<li><a href="#1-1-row-%EA%B8%B0%EC%A4%80-%ED%95%A9%EC%B9%98%EA%B8%B0-%EB%B0%91%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%A8">1-1. Row 기준 합치기 (밑으로 합침)</a></li>
<li><a href="#1-2-column-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0-%EC%98%86%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%A8">1-2. column 기준으로 합치기 (옆으로 합침)</a></li>
</ul>
</li>
<li><a href="#2-dataframe-%EB%B3%91%ED%95%A9%ED%95%98%EA%B8%B0-merge"><strong>2. DataFrame 병합하기 (merge)</strong></a>
<ul>
<li><a href="#2-0-%EC%98%88%EC%A0%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0">2-0. 예제 데이터 만들기</a></li>
<li><a href="#2-1-left-right-%EB%B0%A9%EC%8B%9D">2-1. left, right 방식</a></li>
<li><a href="#2-2-inner-outer-%EB%B0%A9%EC%8B%9D">2-2. inner, outer 방식</a></li>
<li><a href="#2-3-column%EB%AA%85%EC%9D%80-%EB%8B%A4%EB%A5%B4%EC%A7%80%EB%A7%8C-%EB%8F%99%EC%9D%BC%ED%95%9C-%EC%84%B1%EC%A7%88%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%B8-%EA%B2%BD%EC%9A%B0">2-3. column명은 다르지만, 동일한 성질의 데이터 인 경우?</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">'korean-idol-2.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<br>
<h2 id="1-dataframe-합치기-concat"><a class="markdownIt-Anchor" href="#1-dataframe-합치기-concat"></a> <strong>1. DataFrame 합치기 (concat)</strong></h2>
<h3 id="1-1-row-기준-합치기-밑으로-합침"><a class="markdownIt-Anchor" href="#1-1-row-기준-합치기-밑으로-합침"></a> 1-1. Row 기준 합치기 (밑으로 합침)</h3>
<blockquote>
<p><em>df_concat</em> = <strong>pd.concat</strong> ( [ <em>df_name1</em> , <em>df_name2</em> ], sort = False)<br>
<em>df_concat</em> <strong>.reset_index</strong> (drop = True)</p>
</blockquote>
<blockquote>
<ul>
<li>합칠 데이터프리임을 list로 묶어준다.</li>
<li><strong>sort=False 옵션</strong>을 주어 column의 순서가 유지되도록 한다</li>
<li>합친 dataframe을 새 변수에 대입한 뒤 <strong>reset_index 옵션</strong>으로 index를 초기화한다 (아님 각각 원래의 index을 가지고 있음)</li>
<li>reseet_index에서 <strong>drop=True 옵션</strong>을 사용해 원래의 행 index가 새로 index column으로 생성되지 않도록 한다</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_copy = df.copy()</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) sort 옵션</strong></p>
<p><strong>sort = False:</strong> column 순서 유지;<br>
<strong>sort = True:</strong> column을 이름순으로 재정열</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df_copy], sort = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df_copy], sort = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>그룹</th>
      <th>브랜드평판지수</th>
      <th>생년월일</th>
      <th>성별</th>
      <th>소속사</th>
      <th>이름</th>
      <th>키</th>
      <th>혈액형</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>방탄소년단</td>
      <td>10523260</td>
      <td>1995-10-13</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>지민</td>
      <td>173.6</td>
      <td>A</td>
    </tr>
    <tr>
      <th>1</th>
      <td>빅뱅</td>
      <td>9916947</td>
      <td>1988-08-18</td>
      <td>남자</td>
      <td>YG</td>
      <td>지드래곤</td>
      <td>177.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>2</th>
      <td>NaN</td>
      <td>8273745</td>
      <td>1996-12-10</td>
      <td>남자</td>
      <td>커넥트</td>
      <td>강다니엘</td>
      <td>180.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>3</th>
      <td>방탄소년단</td>
      <td>8073501</td>
      <td>1995-12-30</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>뷔</td>
      <td>178.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>4</th>
      <td>마마무</td>
      <td>7650928</td>
      <td>1995-07-23</td>
      <td>여자</td>
      <td>RBW</td>
      <td>화사</td>
      <td>162.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>5</th>
      <td>방탄소년단</td>
      <td>5208335</td>
      <td>1997-09-01</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>정국</td>
      <td>178.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>6</th>
      <td>뉴이스트</td>
      <td>4989792</td>
      <td>1995-08-09</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>민현</td>
      <td>182.3</td>
      <td>O</td>
    </tr>
    <tr>
      <th>7</th>
      <td>아이들</td>
      <td>4668615</td>
      <td>1998-08-26</td>
      <td>여자</td>
      <td>큐브</td>
      <td>소연</td>
      <td>NaN</td>
      <td>B</td>
    </tr>
    <tr>
      <th>8</th>
      <td>방탄소년단</td>
      <td>4570308</td>
      <td>1992-12-04</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>진</td>
      <td>179.2</td>
      <td>O</td>
    </tr>
    <tr>
      <th>9</th>
      <td>핫샷</td>
      <td>4036489</td>
      <td>1994-03-22</td>
      <td>남자</td>
      <td>스타크루이엔티</td>
      <td>하성운</td>
      <td>167.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>10</th>
      <td>소녀시대</td>
      <td>3918661</td>
      <td>1989-03-09</td>
      <td>여자</td>
      <td>SM</td>
      <td>태연</td>
      <td>NaN</td>
      <td>A</td>
    </tr>
    <tr>
      <th>11</th>
      <td>아스트로</td>
      <td>3506027</td>
      <td>1997-03-30</td>
      <td>남자</td>
      <td>판타지오</td>
      <td>차은우</td>
      <td>183.0</td>
      <td>B</td>
    </tr>
    <tr>
      <th>12</th>
      <td>뉴이스트</td>
      <td>3301654</td>
      <td>1995-07-21</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>백호</td>
      <td>175.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>13</th>
      <td>뉴이스트</td>
      <td>3274137</td>
      <td>1995-06-08</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>JR</td>
      <td>176.0</td>
      <td>O</td>
    </tr>
    <tr>
      <th>14</th>
      <td>방탄소년단</td>
      <td>2925442</td>
      <td>1993-03-09</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>슈가</td>
      <td>174.0</td>
      <td>O</td>
    </tr>
    <tr>
      <th>0</th>
      <td>방탄소년단</td>
      <td>10523260</td>
      <td>1995-10-13</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>지민</td>
      <td>173.6</td>
      <td>A</td>
    </tr>
    <tr>
      <th>1</th>
      <td>빅뱅</td>
      <td>9916947</td>
      <td>1988-08-18</td>
      <td>남자</td>
      <td>YG</td>
      <td>지드래곤</td>
      <td>177.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>2</th>
      <td>NaN</td>
      <td>8273745</td>
      <td>1996-12-10</td>
      <td>남자</td>
      <td>커넥트</td>
      <td>강다니엘</td>
      <td>180.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>3</th>
      <td>방탄소년단</td>
      <td>8073501</td>
      <td>1995-12-30</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>뷔</td>
      <td>178.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>4</th>
      <td>마마무</td>
      <td>7650928</td>
      <td>1995-07-23</td>
      <td>여자</td>
      <td>RBW</td>
      <td>화사</td>
      <td>162.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>5</th>
      <td>방탄소년단</td>
      <td>5208335</td>
      <td>1997-09-01</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>정국</td>
      <td>178.0</td>
      <td>A</td>
    </tr>
    <tr>
      <th>6</th>
      <td>뉴이스트</td>
      <td>4989792</td>
      <td>1995-08-09</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>민현</td>
      <td>182.3</td>
      <td>O</td>
    </tr>
    <tr>
      <th>7</th>
      <td>아이들</td>
      <td>4668615</td>
      <td>1998-08-26</td>
      <td>여자</td>
      <td>큐브</td>
      <td>소연</td>
      <td>NaN</td>
      <td>B</td>
    </tr>
    <tr>
      <th>8</th>
      <td>방탄소년단</td>
      <td>4570308</td>
      <td>1992-12-04</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>진</td>
      <td>179.2</td>
      <td>O</td>
    </tr>
    <tr>
      <th>9</th>
      <td>핫샷</td>
      <td>4036489</td>
      <td>1994-03-22</td>
      <td>남자</td>
      <td>스타크루이엔티</td>
      <td>하성운</td>
      <td>167.1</td>
      <td>A</td>
    </tr>
    <tr>
      <th>10</th>
      <td>소녀시대</td>
      <td>3918661</td>
      <td>1989-03-09</td>
      <td>여자</td>
      <td>SM</td>
      <td>태연</td>
      <td>NaN</td>
      <td>A</td>
    </tr>
    <tr>
      <th>11</th>
      <td>아스트로</td>
      <td>3506027</td>
      <td>1997-03-30</td>
      <td>남자</td>
      <td>판타지오</td>
      <td>차은우</td>
      <td>183.0</td>
      <td>B</td>
    </tr>
    <tr>
      <th>12</th>
      <td>뉴이스트</td>
      <td>3301654</td>
      <td>1995-07-21</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>백호</td>
      <td>175.0</td>
      <td>AB</td>
    </tr>
    <tr>
      <th>13</th>
      <td>뉴이스트</td>
      <td>3274137</td>
      <td>1995-06-08</td>
      <td>남자</td>
      <td>플레디스</td>
      <td>JR</td>
      <td>176.0</td>
      <td>O</td>
    </tr>
    <tr>
      <th>14</th>
      <td>방탄소년단</td>
      <td>2925442</td>
      <td>1993-03-09</td>
      <td>남자</td>
      <td>빅히트</td>
      <td>슈가</td>
      <td>174.0</td>
      <td>O</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<p><strong>(2) reset_index 옵션</strong></p>
<p><strong>reset_index():</strong> index가 초기화됨, 원래의 index가 새로 index column으로 저장됨<br>
<strong>reset_index(drop = True):</strong>  index가 초기화됨, 원래의 index가 새로 index column으로 생성되지 않음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_concat = pd.concat([df, df_copy], sort = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_concat.reset_index()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>index</th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2</td>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>5</td>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>6</td>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>7</td>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>8</td>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>9</td>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>10</td>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>11</td>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>12</td>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>13</td>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>14</td>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>15</th>
      <td>0</td>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>16</th>
      <td>1</td>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>17</th>
      <td>2</td>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>18</th>
      <td>3</td>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>19</th>
      <td>4</td>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>20</th>
      <td>5</td>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>21</th>
      <td>6</td>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>22</th>
      <td>7</td>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>23</th>
      <td>8</td>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>24</th>
      <td>9</td>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>25</th>
      <td>10</td>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>26</th>
      <td>11</td>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>27</th>
      <td>12</td>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>28</th>
      <td>13</td>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>29</th>
      <td>14</td>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_concat.reset_index(drop = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
    <tr>
      <th>15</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>16</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>17</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>18</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>19</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>20</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>21</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>22</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>23</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>24</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>25</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>26</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>27</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>28</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>29</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<br>
<h3 id="1-2-column-기준으로-합치기-옆으로-합침"><a class="markdownIt-Anchor" href="#1-2-column-기준으로-합치기-옆으로-합침"></a> 1-2. column 기준으로 합치기 (옆으로 합침)</h3>
<blockquote>
<p>column 기준으로 합치고자 할 때는 <strong>axis = 1 옵션</strong>을 준다:<br>
<strong>pd.concat</strong> ( [<em>df_name1</em>, <em>df_name2</em>], <strong>axis = 1</strong>)</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">'korean-idol-2.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>3050</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df2], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>뷔</td>
      <td>3050</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>정국</td>
      <td>2900</td>
      <td>5</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>소연</td>
      <td>4500</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<blockquote>
<p>행의 갯수가 맞지 않을 시</p>
<ul>
<li>두 DataFrame이 행 index기준으로 합치게 됨</li>
<li>행 갯수가 적은 DataFrame의 빈칸에는 NaN로 채워지게 됨</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df3 = df2.drop([<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line">df3</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>4500</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df3], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>지드래곤</td>
      <td>3500.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>소연</td>
      <td>4500.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>JR</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>슈가</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df4 = df2.drop([<span class="number">13</span>, <span class="number">14</span>])</span><br><span class="line">pd.concat([df,df4], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>지드래곤</td>
      <td>3500.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>뷔</td>
      <td>3050.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>정국</td>
      <td>2900.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>소연</td>
      <td>4500.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br>  
<h2 id="2-dataframe-병합하기-merge"><a class="markdownIt-Anchor" href="#2-dataframe-병합하기-merge"></a> <strong>2. DataFrame 병합하기 (merge)</strong></h2>
<blockquote>
<p><strong>concat과 merge의 차이:</strong></p>
<ul>
<li><strong>concat:</strong> row 나 column 기준으로 단순하게 이어 붙히기</li>
<li><strong>merge:</strong> 특정 고유한 키(unique id) 값을 기준으로 병합하기</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df2.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>3500</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>3050</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>df와 df2는 <strong>"이름"이라는 column이 겹친다</strong><br>
따라서, 우리는 "이름"을 기준으로 두 DataFrame을 <strong>병합</strong>할 수 있다</p>
<blockquote>
<p><strong>pd.merge (<em>left_df</em>, <em>right_df</em>, on = “기준 column”, how = “…” )</strong></p>
<ul>
<li>left_df와 right_df 에는 병합할 두 DataFrame을 대입한다</li>
<li>on 에는 병합의 기준이 되는 column을 넣어 준다</li>
<li>how 에는 ‘left’, ‘right’, ‘inner’, 'outer’라는 4가지의 병합 방식중 한가지를 택한다</li>
</ul>
</blockquote>
<br>  
<h3 id="2-0-예제-데이터-만들기"><a class="markdownIt-Anchor" href="#2-0-예제-데이터-만들기"></a> 2-0. 예제 데이터 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right = df2.drop([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right = df_right.reset_index(drop = <span class="literal">True</span>)</span><br><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>concat로 합치는 경우:</strong><br>
데이터가 행 index기준으로 합치게 되기 때문에 <strong>이름이 다른 시람의 데이터가 합치게 된다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.concat([df, df_right], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>JR</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>슈가</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>따리서, 우리는 merge를 사용하여 두 DataFrame를 “이름” 기준으로 병합한다</p>
 <br> 
<h3 id="2-1-left-right-방식"><a class="markdownIt-Anchor" href="#2-1-left-right-방식"></a> 2-1. left, right 방식</h3>
<blockquote>
<ul>
<li>"left"옵션을 부여할 때: left DataFrame에 키 값이 존재하면 해당 데이터를 유지하고, 병합한 right DataFrame의 값은 NaN이 대입 됨</li>
<li>반대로, "right"옵션을 부여할 때 right DataFrame을 기준으로 병합하게 됨</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">"left"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">"right"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p>현재, left DataFrame이 더 많은 데이터를 보유하고 있으니, right를 기준으로 병합하면 DataFrame 사이즈가 줄어드게 된다</p>
 <br> 
<h3 id="2-2-inner-outer-방식"><a class="markdownIt-Anchor" href="#2-2-inner-outer-방식"></a> 2-2. inner, outer 방식</h3>
<blockquote>
<ul>
<li>inner 방식은 두 DataFrame에 <strong>모두 키 값이 존재</strong>하는 경우만 병합한다 (교집합과 비슷)</li>
<li>outer 방식은 <strong>하나의 DataFrame에만 키 값이 존재</strong>하더라도 모두 병합한다 (합집합과 비슷)</li>
<li>outer 방식에서는 없는 값은 NaN으로 대입된다</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">'inner'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700</td>
      <td>3</td>
    </tr>
    <tr>
      <th>7</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850</td>
      <td>5</td>
    </tr>
    <tr>
      <th>8</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900</td>
      <td>4</td>
    </tr>
    <tr>
      <th>9</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100</td>
      <td>3</td>
    </tr>
    <tr>
      <th>10</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">'outer'</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="2-3-column명은-다르지만-동일한-성질의-데이터-인-경우"><a class="markdownIt-Anchor" href="#2-3-column명은-다르지만-동일한-성질의-데이터-인-경우"></a> 2-3. column명은 다르지만, 동일한 성질의 데이터 인 경우?</h3>
<blockquote>
<p><strong>pd.merge</strong> ( <em>left_df</em>, <em>right_df</em>, <strong>left_on = “<em>left_col</em>”, right_on = “<em>right_col</em>”</strong>, how = “…” )</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>연봉</th>
      <th>가족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right.columns = [<span class="string">"성함"</span>, <span class="string">"연봉"</span>, <span class="string">"기족수"</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_right.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>성함</th>
      <th>연봉</th>
      <th>기족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>3000</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>강다니엘</td>
      <td>3200</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2</th>
      <td>화사</td>
      <td>4300</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>민현</td>
      <td>3400</td>
      <td>6</td>
    </tr>
    <tr>
      <th>4</th>
      <td>진</td>
      <td>4200</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p>df의 "이름"과  df_right의 "성함"은 column name이 다르지만, 동일한 성질의 데이터다.<br>
이럴 때는 left_on, right_on 옵션을 사용해 기준 column을 지정한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.merge(df, df_right, left_on = <span class="string">"이름"</span>, right_on = <span class="string">"성함"</span>, how = <span class="string">"outer"</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>이름</th>
      <th>그룹</th>
      <th>소속사</th>
      <th>성별</th>
      <th>생년월일</th>
      <th>키</th>
      <th>혈액형</th>
      <th>브랜드평판지수</th>
      <th>성함</th>
      <th>연봉</th>
      <th>기족수</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>지민</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-10-13</td>
      <td>173.6</td>
      <td>A</td>
      <td>10523260</td>
      <td>지민</td>
      <td>3000.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>지드래곤</td>
      <td>빅뱅</td>
      <td>YG</td>
      <td>남자</td>
      <td>1988-08-18</td>
      <td>177.0</td>
      <td>A</td>
      <td>9916947</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>강다니엘</td>
      <td>NaN</td>
      <td>커넥트</td>
      <td>남자</td>
      <td>1996-12-10</td>
      <td>180.0</td>
      <td>A</td>
      <td>8273745</td>
      <td>강다니엘</td>
      <td>3200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>뷔</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1995-12-30</td>
      <td>178.0</td>
      <td>AB</td>
      <td>8073501</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>화사</td>
      <td>마마무</td>
      <td>RBW</td>
      <td>여자</td>
      <td>1995-07-23</td>
      <td>162.1</td>
      <td>A</td>
      <td>7650928</td>
      <td>화사</td>
      <td>4300.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>정국</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1997-09-01</td>
      <td>178.0</td>
      <td>A</td>
      <td>5208335</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>민현</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-08-09</td>
      <td>182.3</td>
      <td>O</td>
      <td>4989792</td>
      <td>민현</td>
      <td>3400.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>소연</td>
      <td>아이들</td>
      <td>큐브</td>
      <td>여자</td>
      <td>1998-08-26</td>
      <td>NaN</td>
      <td>B</td>
      <td>4668615</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>진</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1992-12-04</td>
      <td>179.2</td>
      <td>O</td>
      <td>4570308</td>
      <td>진</td>
      <td>4200.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>하성운</td>
      <td>핫샷</td>
      <td>스타크루이엔티</td>
      <td>남자</td>
      <td>1994-03-22</td>
      <td>167.1</td>
      <td>A</td>
      <td>4036489</td>
      <td>하성운</td>
      <td>4300.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>태연</td>
      <td>소녀시대</td>
      <td>SM</td>
      <td>여자</td>
      <td>1989-03-09</td>
      <td>NaN</td>
      <td>A</td>
      <td>3918661</td>
      <td>태연</td>
      <td>3700.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>차은우</td>
      <td>아스트로</td>
      <td>판타지오</td>
      <td>남자</td>
      <td>1997-03-30</td>
      <td>183.0</td>
      <td>B</td>
      <td>3506027</td>
      <td>차은우</td>
      <td>3850.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>12</th>
      <td>백호</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-07-21</td>
      <td>175.0</td>
      <td>AB</td>
      <td>3301654</td>
      <td>백호</td>
      <td>3900.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>13</th>
      <td>JR</td>
      <td>뉴이스트</td>
      <td>플레디스</td>
      <td>남자</td>
      <td>1995-06-08</td>
      <td>176.0</td>
      <td>O</td>
      <td>3274137</td>
      <td>JR</td>
      <td>4100.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>14</th>
      <td>슈가</td>
      <td>방탄소년단</td>
      <td>빅히트</td>
      <td>남자</td>
      <td>1993-03-09</td>
      <td>174.0</td>
      <td>O</td>
      <td>2925442</td>
      <td>슈가</td>
      <td>4150.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>전처리</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Seaborn - (1) Seaborn을 활용한 다양한 그래프 그리기</title>
    <url>/2020/07/03/S-Python-Seaborn1/</url>
    <content><![CDATA[<h1 id="seaborn을-활용한-다양한-그래프-그리기"><a class="markdownIt-Anchor" href="#seaborn을-활용한-다양한-그래프-그리기"></a> Seaborn을 활용한 다양한 그래프 그리기</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-seaborn-%EA%B0%9C%EC%9A%94"><strong>0. Seaborn 개요</strong></a>
<ul>
<li><a href="#0-1-seaborn-%EC%97%90%EC%84%9C%EB%A7%8C-%EC%A0%9C%EA%B3%B5%EB%90%98%EB%8A%94-%ED%86%B5%EA%B3%84-%EA%B8%B0%EB%B0%98-plot">0-1. seaborn 에서만 제공되는 통계 기반 plot</a></li>
<li><a href="#0-2-%EC%95%84%EB%A6%84%EB%8B%A4%EC%9A%B4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">0-2. 아름다운 스타일링</a></li>
<li><a href="#0-3-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8">0-3. 컬러 팔레트</a></li>
<li><a href="#0-4-pandas-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84%EA%B3%BC-%EB%86%92%EC%9D%80-%ED%98%B8%ED%99%98%EC%84%B1">0-4. pandas 데이터프레임과 높은 호환성</a></li>
</ul>
</li>
<li><a href="#1-scatterplot"><strong>1. Scatterplot</strong></a>
<ul>
<li><a href="#1-1-x-y-color-area-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">1-1. x, y, color, area 설정하기</a></li>
<li><a href="#1-2-cmap%EA%B3%BC-alpha">1-2. cmap과 alpha</a></li>
</ul>
</li>
<li><a href="#2-barplot-barhplot"><strong>2. Barplot, Barhplot</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-barplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-1. 기본 Barplot 그리기</a></li>
<li><a href="#2-2-%EA%B8%B0%EB%B3%B8-barhplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-2. 기본 Barhplot 그리기</a></li>
<li><a href="#2-3-barplot%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-3. Barplot에서 비교 그래프 그리기</a></li>
</ul>
</li>
<li><a href="#3-line-plot"><strong>3. Line Plot</strong></a>
<ul>
<li><a href="#3-1-%EA%B8%B0%EB%B3%B8-lineplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-1. 기본 lineplot 그리기</a></li>
<li><a href="#3-2-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. 2개 이상의 그래프 그리기</a></li>
<li><a href="#3-3-%EB%A7%88%EC%BB%A4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-3. 마커 스타일링</a></li>
<li><a href="#3-4-%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0">3-4. 라인 스타일 변경하기</a></li>
</ul>
</li>
<li><a href="#4-areaplot-filled-area"><strong>4. Areaplot (Filled Area)</strong></a></li>
<li><a href="#5histogram"><strong>5.Histogram</strong></a>
<ul>
<li><a href="#5-1-%EA%B8%B0%EB%B3%B8-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 Histogram 그리기</a></li>
<li><a href="#5-2-%EB%8B%A4%EC%A4%91-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-2. 다중 Histogram 그리기</a></li>
</ul>
</li>
<li><a href="#6-pie-chart"><strong>6. Pie Chart</strong></a></li>
<li><a href="#7-box-plot"><strong>7. Box Plot</strong></a>
<ul>
<li><a href="#7-1-%EA%B8%B0%EB%B3%B8-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-1. 기본 박스플롯 생성</a></li>
<li><a href="#7-2-%EB%8B%A4%EC%A4%91-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-2. 다중 박스플롯 생성</a></li>
<li><a href="#7-3-box-plot-%EC%B6%95-%EB%B0%94%EA%BE%B8%EA%B8%B0">7-3. Box Plot 축 바꾸기</a></li>
<li><a href="#7-4-outlier-%EB%A7%88%EC%BB%A4-%EC%8B%AC%EB%B3%BC%EA%B3%BC-%EC%BB%AC%EB%9F%AC-%EB%B3%80%EA%B2%BD">7-4. Outlier 마커 심볼과 컬러 변경</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<blockquote>
<p><em><strong>reference:</strong></em></p>
<ul>
<li><a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">pyplot 공식 도튜먼트 살펴보기</a></li>
<li><a href="https://seaborn.pydata.org/" target="_blank" rel="noopener">seaborn 공식 도큐먼트 살펴보기</a></li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># seaborn</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="0-seaborn-개요"><a class="markdownIt-Anchor" href="#0-seaborn-개요"></a> <strong>0. Seaborn 개요</strong></h2>
<p>seaborn은 matplotlib을 더 사용하게 쉽게 해주는 라이브러리다.<br>
matplotlib으로 대부분의 시각화는 가능하지만, 다음과 같은 이유로 많은 사람들이 <code>seaborn</code>을 선호한다.</p>
<blockquote>
<p><strong>비교:</strong> <a href="https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib2/">matplotlib을 활용한 다양한 그래프 그리기</a></p>
</blockquote>
 <br> 
<h3 id="0-1-seaborn-에서만-제공되는-통계-기반-plot"><a class="markdownIt-Anchor" href="#0-1-seaborn-에서만-제공되는-통계-기반-plot"></a> 0-1. seaborn 에서만 제공되는 통계 기반 plot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) violinplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'violin plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_14_0.png" alt="png"></p>
<br>
<p><strong>(2) countplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(tips[<span class="string">'day'</span>])</span><br><span class="line">plt.title(<span class="string">'countplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_17_0.png" alt="png"></p>
<br>
<p><strong>(3) relplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'tip'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'relplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_20_0.png" alt="png"></p>
<br>
<p><strong>(4) lmplot</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'tip'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'lmplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_23_0.png" alt="png"></p>
<br>
<p><strong>(5) heatmap</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.title(<span class="string">'heatmap'</span>)</span><br><span class="line">sns.heatmap(tips.corr(), annot=<span class="literal">True</span>, linewidths=<span class="number">1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_26_0.png" alt="png"></p>
<br>
<h3 id="0-2-아름다운-스타일링"><a class="markdownIt-Anchor" href="#0-2-아름다운-스타일링"></a> 0-2. 아름다운 스타일링</h3>
<p><strong>(1) default color의 예쁜 조합</strong></p>
<p>seaborn의 최대 장점 중의 하나가 아름다운 컬러팔레트다.<br>
스타일링에 크게 신경 쓰지 않아도 default 컬러가 예쁘게 조합해준다.</p>
<br>
<p><strong>matplotlib VS seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.bar(tips[<span class="string">'day'</span>], tips[<span class="string">'total_bill'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_32_0.png" alt="png"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_33_0.png" alt="png"></p>
<br>
<p><strong>(2) 그래프 배경 설정</strong></p>
<p>그래프의 배경 (grid 스타일)을 설정할 수 있음.</p>
<blockquote>
<p><strong>sns.set_style(’…’)</strong></p>
<ul>
<li>whitegrid: white background + grid</li>
<li>darkgrid: dark background + grid</li>
<li>white: white background (without grid)</li>
<li>dark: dark background (without grid)</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_38_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set_style(<span class="string">'white'</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_39_0.png" alt="png"></p>
<br>
<h3 id="0-3-컬러-팔레트"><a class="markdownIt-Anchor" href="#0-3-컬러-팔레트"></a> 0-3. 컬러 팔레트</h3>
<p>자세한 컬러팔레트는 <a href="https://chrisalbon.com/python/data_visualization/seaborn_color_palettes/" target="_blank" rel="noopener">공식 도큐먼트</a>를 참고</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.palplot(sns.light_palette((<span class="number">210</span>, <span class="number">90</span>, <span class="number">60</span>), input=<span class="string">"husl"</span>))</span><br><span class="line">sns.palplot(sns.dark_palette(<span class="string">"muted purple"</span>, input=<span class="string">"xkcd"</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"BrBG"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"BrBG_r"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"coolwarm"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.diverging_palette(<span class="number">255</span>, <span class="number">133</span>, l=<span class="number">60</span>, n=<span class="number">10</span>, center=<span class="string">"dark"</span>))</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_43_0.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_1.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_2.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_3.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_4.png" alt="png"></p>
<p><img src="/images/S-Python-Seaborn1/output_43_5.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"tip"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">'coolwarm'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5bf62888&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_44_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"tip"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">'Reds'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba59e40988&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_45_1.png" alt="png"></p>
<br>
<h3 id="0-4-pandas-데이터프레임과-높은-호환성"><a class="markdownIt-Anchor" href="#0-4-pandas-데이터프레임과-높은-호환성"></a> 0-4. pandas 데이터프레임과 높은 호환성</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>239</th>
      <td>29.03</td>
      <td>5.92</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>240</th>
      <td>27.18</td>
      <td>2.00</td>
      <td>Female</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>241</th>
      <td>22.67</td>
      <td>2.00</td>
      <td>Male</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>242</th>
      <td>17.82</td>
      <td>1.75</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>243</th>
      <td>18.78</td>
      <td>3.00</td>
      <td>Female</td>
      <td>No</td>
      <td>Thur</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>244 rows × 7 columns</p>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_50_0.png" alt="png"></p>
<br>
<ul>
<li><code>hue</code>옵션: bar를 새로운 기준으로 분할</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            hue=<span class="string">"smoker"</span>, </span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_53_0.png" alt="png"></p>
<br>
<ul>
<li><code>col</code> / <code>row</code> 옵션: 그래프 자체를 새로운 기준으로 분할</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            hue=<span class="string">"smoker"</span>, </span><br><span class="line">            col=<span class="string">"time"</span>,</span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_56_0.png" alt="png"></p>
<br>
<ul>
<li>
<p>xtick, ytick, xlabel, ylabel을 알아서 생성해 줌</p>
</li>
<li>
<p>legend까지 자동으로 생성해 줌</p>
</li>
<li>
<p>뿐만 아니라, 신뢰 구간도 알아서 계산하여 생성함</p>
<br>
</li>
</ul>
<h2 id="1-scatterplot"><a class="markdownIt-Anchor" href="#1-scatterplot"></a> <strong>1. Scatterplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.scatterplot.html" target="_blank" rel="noopener">&lt;sns.scatterplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.scatterplot</strong> ( <em>x, y, size=None, sizes=None, hue=None, palette=None, color=‘auto’, alpha=‘auto’…</em> )</p>
<ul>
<li><code>sizes</code> 옵션: size의 선택범위를 설정. (사아즈의 min, max를 설정)</li>
<li><code>hue</code> 옵션: 컬러의 구별 기준이 되는 grouping variable 설정</li>
<li><code>color</code> 옵션: cmap에 컬러를 지정하면, 컬러 값을 모두 같게 가겨갈 수 있음</li>
<li><code>alpha</code> 옵션: 투명도 (0~1)</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-1-x-y-color-area-설정하기"><a class="markdownIt-Anchor" href="#1-1-x-y-color-area-설정하기"></a> 1-1. x, y, color, area 설정하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 데이터 생성</span></span><br><span class="line">x = np.random.rand(<span class="number">50</span>)</span><br><span class="line">y = np.random.rand(<span class="number">50</span>)</span><br><span class="line">colors = np.arange(<span class="number">50</span>)</span><br><span class="line">area = x * y * <span class="number">1000</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.scatter(x, y, s=area, c=colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_69_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), hue=area, palette=<span class="string">'coolwarm'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_72_0.png" alt="png"></p>
<br>
<p><strong>[Tip]</strong> Palette 이름이 생각안나면: palette 값을 임의로 주고 실행하여 오류 경고창에 정확한 palette 이름을 보여줌</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), hue=area, palette=<span class="string">'coolwarm111'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

D:\Anaconda\lib\site-packages\seaborn\relational.py in numeric_to_palette(self, data, order, palette, norm)
    248             try:
--&gt; 249                 cmap = mpl.cm.get_cmap(palette)
    250             except (ValueError, TypeError):


D:\Anaconda\lib\site-packages\matplotlib\cm.py in get_cmap(name, lut)
    182             "Colormap %s is not recognized. Possible values are: %s"
--&gt; 183             % (name, ', '.join(sorted(cmap_d))))
    184 


ValueError: Colormap coolwarm111 is not recognized. Possible values are: Accent, Accent_r, Blues, Blues_r, BrBG, BrBG_r, BuGn, BuGn_r, BuPu, BuPu_r, CMRmap, CMRmap_r, Dark2, Dark2_r, GnBu, GnBu_r, Greens, Greens_r, Greys, Greys_r, OrRd, OrRd_r, Oranges, Oranges_r, PRGn, PRGn_r, Paired, Paired_r, Pastel1, Pastel1_r, Pastel2, Pastel2_r, PiYG, PiYG_r, PuBu, PuBuGn, PuBuGn_r, PuBu_r, PuOr, PuOr_r, PuRd, PuRd_r, Purples, Purples_r, RdBu, RdBu_r, RdGy, RdGy_r, RdPu, RdPu_r, RdYlBu, RdYlBu_r, RdYlGn, RdYlGn_r, Reds, Reds_r, Set1, Set1_r, Set2, Set2_r, Set3, Set3_r, Spectral, Spectral_r, Wistia, Wistia_r, YlGn, YlGnBu, YlGnBu_r, YlGn_r, YlOrBr, YlOrBr_r, YlOrRd, YlOrRd_r, afmhot, afmhot_r, autumn, autumn_r, binary, binary_r, bone, bone_r, brg, brg_r, bwr, bwr_r, cividis, cividis_r, cool, cool_r, coolwarm, coolwarm_r, copper, copper_r, cubehelix, cubehelix_r, flag, flag_r, gist_earth, gist_earth_r, gist_gray, gist_gray_r, gist_heat, gist_heat_r, gist_ncar, gist_ncar_r, gist_rainbow, gist_rainbow_r, gist_stern, gist_stern_r, gist_yarg, gist_yarg_r, gnuplot, gnuplot2, gnuplot2_r, gnuplot_r, gray, gray_r, hot, hot_r, hsv, hsv_r, icefire, icefire_r, inferno, inferno_r, jet, jet_r, magma, magma_r, mako, mako_r, nipy_spectral, nipy_spectral_r, ocean, ocean_r, pink, pink_r, plasma, plasma_r, prism, prism_r, rainbow, rainbow_r, rocket, rocket_r, seismic, seismic_r, spring, spring_r, summer, summer_r, tab10, tab10_r, tab20, tab20_r, tab20b, tab20b_r, tab20c, tab20c_r, terrain, terrain_r, twilight, twilight_r, twilight_shifted, twilight_shifted_r, viridis, viridis_r, vlag, vlag_r, winter, winter_r
</code></pre>
  <br>
<h3 id="1-2-cmap과-alpha"><a class="markdownIt-Anchor" href="#1-2-cmap과-alpha"></a> 1-2. cmap과 alpha</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'blue'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.1'</span>)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.5'</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'red'</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=1.0'</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'green'</span>, alpha=<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_79_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'blue'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.1'</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.5'</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'red'</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=1.0'</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'green'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_82_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-barplot-barhplot"><a class="markdownIt-Anchor" href="#2-barplot-barhplot"></a> <strong>2. Barplot, Barhplot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.barplot.html" target="_blank" rel="noopener">&lt;sns.barplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.boxplot</strong> ( <em>x, y, hue=None, data=None, alpha=‘auto’, palette=None / color=None</em> )</p>
</blockquote>
<br> 
<h3 id="2-1-기본-barplot-그리기"><a class="markdownIt-Anchor" href="#2-1-기본-barplot-그리기"></a> 2-1. 기본 Barplot 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(rotation=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_91_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">sns.barplot(x, y, alpha=<span class="number">0.8</span>, palette=<span class="string">'YlGnBu'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(rotation=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_94_0.png" alt="png"></p>
<br>
<h3 id="2-2-기본-barhplot-그리기"><a class="markdownIt-Anchor" href="#2-2-기본-barhplot-그리기"></a> 2-2. 기본 Barhplot 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<blockquote>
<ul>
<li><strong>plt.barh</strong> 함수 사용</li>
<li>bar 함수에서 <strong>xticks / ylabel 로 설정</strong>했던 부분이 barh 함수에서 <strong>yticks / xlabel 로 변경함</strong></li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">plt.barh(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.yticks(x)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_99_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<blockquote>
<ul>
<li>sns.barplot 함수를 그대로 사용</li>
<li>barplot함수 안에 x와 y의 위치를 교환<br>
xticks설정이 변경 불필요;<br>
하지만 ylabel설정은 xlable로 변경 필요</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">sns.barplot(y, x, alpha=<span class="number">0.9</span>, palette=<span class="string">"YlOrRd"</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_102_0.png" alt="png"></p>
<br>
<h3 id="2-3-barplot에서-비교-그래프-그리기"><a class="markdownIt-Anchor" href="#2-3-barplot에서-비교-그래프-그리기"></a> 2-3. Barplot에서 비교 그래프 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.bar(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>)</span><br><span class="line">axes.bar(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.xticks(x)</span><br><span class="line">axes.set_xticklabels(x_label)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_106_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.barh(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>, color = <span class="string">"green"</span>)</span><br><span class="line">axes.barh(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.5</span>, color = <span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.yticks(x)</span><br><span class="line">axes.set_yticklabels(x_label)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_107_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<p>Seaborn에서는 위의 <code>matplotlib</code>과 조금 다른 방식을 취한다.<br>
seaborn에서 <code>hue</code>옵션으로 매우 쉽게 비교 <strong>barplot</strong>을 그릴 수 있음.</p>
<blockquote>
<p><strong>sns.barplot</strong> ( <em>x, y, hue=…, data=…, palette=…</em> )</p>
</blockquote>
<br>
<p><strong>실전 tip.</strong></p>
<ul>
<li>
<p>그래프를 임의로 그려야 하는 경우 -&gt; <code>matplotlib</code></p>
</li>
<li>
<p>DataFrame을 가지고 그리는 경우 -&gt; <code>seaborn</code></p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table style="width = 100%;">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>sex</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>embarked</th>
      <th>class</th>
      <th>who</th>
      <th>adult_male</th>
      <th>deck</th>
      <th>embark_town</th>
      <th>alive</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>7.2500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>71.2833</td>
      <td>C</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.9250</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>53.1000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>8.0500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">'sex'</span>, y=<span class="string">'survived'</span>, hue=<span class="string">'pclass'</span>, data=titanic, palette=<span class="string">'muted'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_115_0.png" alt="png"></p>
<br>
<br>
<h2 id="3-line-plot"><a class="markdownIt-Anchor" href="#3-line-plot"></a> <strong>3. Line Plot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.lineplot.html" target="_blank" rel="noopener">&lt;sns.lineplot&gt; Document</a></p>
</blockquote>
<br>
<blockquote>
<p><strong>sns.lineplot</strong> ( <em>x, y, label=…, color=None, alpha=‘auto’, marker=None, linestyle=None</em> )</p>
<ul>
<li>기본 옵션은 matplotlib의 <code>plt.plot</code>과 비슷</li>
<li>함수만 <code>plt.plot</code>에서 <code>sns.lineplot</code>로 바꾸면 됨</li>
<li>plt.legend() 명령어 따로 쓸 필요없음</li>
<li>배경이 whitegrid / darkgrid 로 설정되어 있을 시 plt.grid() 명령어 불필요</li>
</ul>
</blockquote>
<br>  
<h3 id="3-1-기본-lineplot-그리기"><a class="markdownIt-Anchor" href="#3-1-기본-lineplot-그리기"></a> 3-1. 기본 lineplot 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y = <span class="number">1</span> + np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_124_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lineplot(x, y)  <span class="comment"># 함수만 변경하면 됨 (plt.plot -&gt; sns.lineplot)</span></span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_127_0.png" alt="png"></p>
<br>
<h3 id="3-2-2개-이상의-그래프-그리기"><a class="markdownIt-Anchor" href="#3-2-2개-이상의-그래프-그리기"></a> 3-2. 2개 이상의 그래프 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span> + np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1,label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha = <span class="number">0.3</span>)  <span class="comment"># label 설정값을 legend에 나타날 수 있음</span></span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">"x value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y value"</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"sin and cos graph"</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_130_0.png" alt="png"></p>
<br>
<h3 id="3-3-마커-스타일링"><a class="markdownIt-Anchor" href="#3-3-마커-스타일링"></a> 3-3. 마커 스타일링</h3>
<ul>
<li>marker: 마커 옵션</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.3</span>, marker=<span class="string">'o'</span>)</span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.7</span>, marker=<span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_134_0.png" alt="png"></p>
<br>
<h3 id="3-4-라인-스타일-변경하기"><a class="markdownIt-Anchor" href="#3-4-라인-스타일-변경하기"></a> 3-4. 라인 스타일 변경하기</h3>
<ul>
<li>linestyle: 라인 스타일 변경하기</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_138_0.png" alt="png"></p>
<br>
<br>
<h2 id="4-areaplot-filled-area"><a class="markdownIt-Anchor" href="#4-areaplot-filled-area"></a> <strong>4. Areaplot (Filled Area)</strong></h2>
<blockquote>
<p>Seaborn에서는 <strong>areaplot을 지원하지 않음</strong><br>
matplotlib을 활용하여 구현해야 함</p>
</blockquote>
<br>  
<h2 id="5histogram"><a class="markdownIt-Anchor" href="#5histogram"></a> <strong>5.Histogram</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html" target="_blank" rel="noopener">&lt;sns.distplot&gt; Document</a></p>
</blockquote>
<br>
<blockquote>
<p><strong>sns.distplot</strong> ( <em>x, bins=None, hist=True, kde=True, vertical=False</em> )</p>
<ul>
<li><strong>bins:</strong> hist bins 갯수 설정</li>
<li><strong>hist:</strong> Whether to plot a (normed) histogram</li>
<li><strong>kde:</strong> Whether to plot a gaussian kernel density estimate</li>
<li><strong>vertical:</strong> If True, observed values are on y-axis</li>
</ul>
</blockquote>
  <br>
<h3 id="5-1-기본-histogram-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-histogram-그리기"></a> 5-1. 기본 Histogram 그리기</h3>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">plt.hist(x, bins=bins)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_150_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<p><strong>Histogram + Density Function</strong> <font color="blue">(<em>default</em>)</font></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">sns.distplot(x, bins=bins)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5cc800c8&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_154_1.png" alt="png"></p>
<br>
<p><strong>Histogram Only</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, hist=<span class="literal">True</span>, kde=<span class="literal">False</span>, color=<span class="string">'g'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5cd09788&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_157_1.png" alt="png"></p>
<br>
<p><strong>Density Function Only</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>, color=<span class="string">'g'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5c7cc208&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_160_1.png" alt="png"></p>
<br>
<p><strong>수평 그래프</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, vertical=<span class="literal">True</span>, color=<span class="string">'r'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5c250108&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_163_1.png" alt="png"></p>
<br>
<h3 id="5-2-다중-histogram-그리기"><a class="markdownIt-Anchor" href="#5-2-다중-histogram-그리기"></a> 5-2. 다중 Histogram 그리기</h3>
<p>matplotlib 에서의 방법을 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, </span><br><span class="line">                        sharey = <span class="literal">True</span>,</span><br><span class="line">                        tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins)</span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins*<span class="number">2</span>)</span><br><span class="line">axes[<span class="number">2</span>].hist(x, bins = bins*<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_167_0.png" alt="png"></p>
<br>
<br>
<h2 id="6-pie-chart"><a class="markdownIt-Anchor" href="#6-pie-chart"></a> <strong>6. Pie Chart</strong></h2>
<blockquote>
<p>Seaborn에서는 <strong>pie plot을 지원하지 않음</strong><br>
matplotlib을 활용하여 구현해야 함</p>
</blockquote>
  <br>
<h2 id="7-box-plot"><a class="markdownIt-Anchor" href="#7-box-plot"></a> <strong>7. Box Plot</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.boxplot.html" target="_blank" rel="noopener">&lt;sns.boxplot&gt; Document</a></p>
</blockquote>
<br>
<blockquote>
<p><strong>sns.baxplot</strong> ( <em>x=None, y=None, hue=None, data=None, orient=None, width=0.8</em> )</p>
<ul>
<li><strong>hue:</strong> 비교 그래프를 그릴 때 나눔 기준이 되는 Variable 설정</li>
<li><strong>orient:</strong> “v” / “h”.  Orientation of the plot (vertical or horizontal)</li>
<li><strong>width:</strong> box의 넓이</li>
</ul>
</blockquote>
<br>  
<h3 id="7-1-기본-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-1-기본-박스플롯-생성"></a> 7-1. 기본 박스플롯 생성</h3>
<p><strong>샘플 데이터 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_182_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(data, orient=<span class="string">'v'</span>, width=<span class="number">0.2</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_185_0.png" alt="png"></p>
<br>
<h3 id="7-2-다중-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-2-다중-박스플롯-생성"></a> 7-2. 다중 박스플롯 생성</h3>
<p>seaborn에서는  <code>hue</code>옵션으로 매우 쉽게 <strong>비교 boxplot</strong>을 그릴 수 있으며 주로 DataFrame을 가지고 그릴 때 활용한다.</p>
<p>barplot과 마찬가지로, 용도에 따라 적절한 library를 사용한다</p>
<br>
<p><strong>실전 Tip.</strong></p>
<ul>
<li>
<p>그래프를 임의로 그려야 하는 경우 -&gt; <code>matplotlit</code></p>
</li>
<li>
<p>DataFrame을 가지고 그리는 경우 -&gt; <code>seaborn</code></p>
<br>
</li>
</ul>
<p><strong>(1) matplotlib</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread1 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center1 = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high1 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low1 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data1 = np.concatenate((spread1, center1, flier_high1, flier_low1))</span><br><span class="line"></span><br><span class="line">spread2 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center2 = np.ones(<span class="number">25</span>) * <span class="number">40</span></span><br><span class="line">flier_high2 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low2 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data2 = np.concatenate((spread2, center2, flier_high2, flier_low2))</span><br><span class="line"></span><br><span class="line">data1.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">data2.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = [data1, data2, data2[::<span class="number">2</span>, <span class="number">0</span>]]</span><br></pre></td></tr></tbody></table></figure>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_194_0.png" alt="png"></p>
<br>
<p><strong>(2) seaborn</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table style="width = 100%;">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>sex</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>embarked</th>
      <th>class</th>
      <th>who</th>
      <th>adult_male</th>
      <th>deck</th>
      <th>embark_town</th>
      <th>alive</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>7.2500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>71.2833</td>
      <td>C</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.9250</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>53.1000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>8.0500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
</div>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(x=<span class="string">'pclass'</span>, y=<span class="string">'age'</span>, hue=<span class="string">'survived'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_199_0.png" alt="png"></p>
<br>
<h3 id="7-3-box-plot-축-바꾸기"><a class="markdownIt-Anchor" href="#7-3-box-plot-축-바꾸기"></a> 7-3. Box Plot 축 바꾸기</h3>
<p><strong>(1) 단일 boxplot</strong></p>
<ul>
<li>orient옵션: orient = "h"로 설정</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(data, orient=<span class="string">'h'</span>, width=<span class="number">0.3</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5e866188&gt;
</code></pre>
<p><img src="/images/S-Python-Seaborn1/output_205_1.png" alt="png"></p>
<br>
<p><strong>(2) 다중 boxplot</strong></p>
<ol>
<li>x, y 변수 교환</li>
<li>orient = “h”</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.boxplot(y=<span class="string">'pclass'</span>, x=<span class="string">'age'</span>, hue=<span class="string">'survived'</span>, data=titanic, orient=<span class="string">'h'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_209_0.png" alt="png"></p>
<br>
<h3 id="7-4-outlier-마커-심볼과-컬러-변경"><a class="markdownIt-Anchor" href="#7-4-outlier-마커-심볼과-컬러-변경"></a> 7-4. Outlier 마커 심볼과 컬러 변경</h3>
<ul>
<li><strong>flierprops = …</strong> 옵션 사용  <font color="blue">(matplotlib과 동일)</font></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">outlier_marker = dict(markerfacecolor=<span class="string">'r'</span>, marker=<span class="string">'D'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Changed Outlier Symbols'</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">sns.boxplot(data, orient=<span class="string">'v'</span>, width=<span class="number">0.2</span>, flierprops=outlier_marker)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn1/output_213_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>시각화</tag>
        <tag>Seaborn</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; Seaborn - (2) 통계 기반의 시각화</title>
    <url>/2020/07/03/S-Python-Seaborn2/</url>
    <content><![CDATA[<h1 id="통계-기반의-시각화"><a class="markdownIt-Anchor" href="#통계-기반의-시각화"></a> 통계 기반의 시각화</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%ED%86%B5%EA%B3%84-%EA%B8%B0%EB%B0%98%EC%9D%98-%EC%8B%9C%EA%B0%81%ED%99%94%EB%A5%BC-%EC%A0%9C%EA%B3%B5%ED%95%B4%EC%A3%BC%EB%8A%94-seaborn"><strong>0. 통계 기반의 시각화를 제공해주는 Seaborn</strong></a></li>
<li><a href="#1-countplot"><strong>1. countplot</strong></a>
<ul>
<li><a href="#1-1-%EC%84%B8%EB%A1%9C%EB%A1%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0">1-1. 세로로 그리기</a></li>
<li><a href="#1-2-%EA%B0%80%EB%A1%9C%EB%A1%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0">1-2. 가로로 그리기</a></li>
<li><a href="#1-3-%EC%83%89%EC%83%81-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%84%A4%EC%A0%95">1-3. 색상 팔레트 설정</a></li>
</ul>
</li>
<li><a href="#2-distplot"><strong>2. distplot</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-displot">2-1. 기본 displot</a></li>
<li><a href="#2-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-series%EC%9D%BC-%EA%B2%BD%EC%9A%B0">2-2. 데이터가 Series일 경우</a></li>
<li><a href="#2-3-rugplot">2-3. rugplot</a></li>
<li><a href="#2-4-kde-kernel-density">2-4. kde (kernel density)</a></li>
<li><a href="#2-5-%EA%B0%80%EB%A1%9C%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0">2-5. 가로로 표현하기</a></li>
<li><a href="#2-6-%EC%BB%AC%EB%9F%AC-%EB%B0%94%EA%BE%B8%EA%B8%B0">2-6. 컬러 바꾸기</a></li>
</ul>
</li>
<li><a href="#3-heatmap"><strong>3. heatmap</strong></a>
<ul>
<li><a href="#3-1-%EA%B8%B0%EB%B3%B8-heatmap">3-1. 기본 heatmap</a></li>
<li><a href="#3-2-pivot-table%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. pivot table을 활용하여 그리기</a></li>
<li><a href="#3-3-correlation%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%8B%9C%EA%B0%81%ED%99%94">3-3. correlation(상관관계)를 시각화</a></li>
</ul>
</li>
<li><a href="#4-pairplot"><strong>4. pairplot</strong></a>
<ul>
<li><a href="#4-1-%EA%B8%B0%EB%B3%B8-pairplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">4-1. 기본 pairplot 그리기</a></li>
<li><a href="#4-2-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%ED%8A%B9%EC%84%B1-%EA%B5%AC%EB%B6%84">4-2. hue 옵션으로 특성 구분</a></li>
<li><a href="#4-3-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%A0%81%EC%9A%A9">4-3. 컬러 팔레트 적용</a></li>
<li><a href="#4-4-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%A0%81%EC%9A%A9">4-4. 사이즈 적용</a></li>
</ul>
</li>
<li><a href="#5-violinplot"><strong>5. violinplot</strong></a>
<ul>
<li><a href="#5-1-%EA%B8%B0%EB%B3%B8-violinplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 violinplot 그리기</a></li>
<li><a href="#5-2-%EB%B9%84%EA%B5%90-%EB%B6%84%ED%8F%AC-%ED%99%95%EC%9D%B8">5-2. 비교 분포 확인</a></li>
<li><a href="#5-3-%EA%B0%80%EB%A1%9C%EB%A1%9C-%EB%89%98%EC%9D%B8-violinplot">5-3. 가로로 뉘인 violinplot</a></li>
<li><a href="#5-4-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%B6%84%ED%8F%AC-%EB%B9%84%EA%B5%90">5-4. hue 옵션으로 분포 비교</a></li>
</ul>
</li>
<li><a href="#6-lmplot"><strong>6. lmplot</strong></a>
<ul>
<li><a href="#6-1-%EA%B8%B0%EB%B3%B8-lmplot">6-1. 기본 lmplot</a></li>
<li><a href="#6-2-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%8B%A4%EC%A4%91-%EC%84%A0%ED%98%95%EA%B4%80%EA%B3%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">6-2. hue 옵션으로 다중 선형관계 그리기</a></li>
<li><a href="#6-3-col-%EC%98%B5%EC%85%98%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84%EB%A5%BC-%EB%B3%84%EB%8F%84%EB%A1%9C-%EA%B7%B8%EB%A0%A4%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8B%A4">6-3. col 옵션을 추가하여 그래프를 별도로 그려볼 수 있다</a></li>
</ul>
</li>
<li><a href="#7-relplot"><strong>7. relplot</strong></a>
<ul>
<li><a href="#7-1-%EA%B8%B0%EB%B3%B8-relplot">7-1. 기본 relplot</a></li>
<li><a href="#7-2-col-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B6%84%ED%95%A0">7-2. col 옵션으로 그래프 분할</a></li>
<li><a href="#7-3-row%EC%99%80-column%EC%97%90-%ED%91%9C%EA%B8%B0%ED%95%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0-column-%EC%84%A0%ED%83%9D">7-3. row와 column에 표기할 데이터 column 선택</a></li>
<li><a href="#7-4-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%A0%81%EC%9A%A9">7-4. 컬러 팔레트 적용</a></li>
</ul>
</li>
<li><a href="#8-jointplot"><strong>8. jointplot</strong></a>
<ul>
<li><a href="#8-1-%EA%B8%B0%EB%B3%B8-jointplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-1. 기본 jointplot 그리기</a></li>
<li><a href="#8-2-%EC%84%A0%ED%98%95%EA%B4%80%EA%B3%84%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%98%EB%8A%94-regression-%EB%9D%BC%EC%9D%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-2. 선형관계를 표현하는 regression 라인 그리기</a></li>
<li><a href="#8-3-hex-%EB%B0%80%EB%8F%84-%EB%B3%B4%EA%B8%B0">8-3. hex 밀도 보기</a></li>
<li><a href="#8-4-%EB%93%B1%EA%B3%A0%EC%84%A0-%EB%AA%A8%EC%96%91%EC%9C%BC%EB%A1%9C-%EB%B0%80%EC%A7%91%EB%8F%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">8-4. 등고선 모양으로 밀집도 확인하기</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h2 id="0-통계-기반의-시각화를-제공해주는-seaborn"><a class="markdownIt-Anchor" href="#0-통계-기반의-시각화를-제공해주는-seaborn"></a> <strong>0. 통계 기반의 시각화를 제공해주는 Seaborn</strong></h2>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/api.html" target="_blank" rel="noopener">Seaborn 공식 도큐먼트</a></p>
</blockquote>
<p>seaborn 라이브러리가  매력적인 이유는 바로 <strong>통계 차트</strong>다.</p>
<p>이번 실습에서는 seaborn의 다양한 통계 차트 중 대표적인 차트 몇 개를 뽑아서 다뤄볼 예정이다.</p>
<p>그럼 먼저 실습에 사용되는 Dataset을 한번 살펴볼게요.</p>
 <br> 
<p><strong>Dataset — "Titanic"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>sex</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>embarked</th>
      <th>class</th>
      <th>who</th>
      <th>adult_male</th>
      <th>deck</th>
      <th>embark_town</th>
      <th>alive</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>7.2500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>71.2833</td>
      <td>C</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.9250</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>53.1000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>C</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>8.0500</td>
      <td>S</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>886</th>
      <td>0</td>
      <td>2</td>
      <td>male</td>
      <td>27.0</td>
      <td>0</td>
      <td>0</td>
      <td>13.0000</td>
      <td>S</td>
      <td>Second</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>True</td>
    </tr>
    <tr>
      <th>887</th>
      <td>1</td>
      <td>1</td>
      <td>female</td>
      <td>19.0</td>
      <td>0</td>
      <td>0</td>
      <td>30.0000</td>
      <td>S</td>
      <td>First</td>
      <td>woman</td>
      <td>False</td>
      <td>B</td>
      <td>Southampton</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>888</th>
      <td>0</td>
      <td>3</td>
      <td>female</td>
      <td>NaN</td>
      <td>1</td>
      <td>2</td>
      <td>23.4500</td>
      <td>S</td>
      <td>Third</td>
      <td>woman</td>
      <td>False</td>
      <td>NaN</td>
      <td>Southampton</td>
      <td>no</td>
      <td>False</td>
    </tr>
    <tr>
      <th>889</th>
      <td>1</td>
      <td>1</td>
      <td>male</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>30.0000</td>
      <td>C</td>
      <td>First</td>
      <td>man</td>
      <td>True</td>
      <td>C</td>
      <td>Cherbourg</td>
      <td>yes</td>
      <td>True</td>
    </tr>
    <tr>
      <th>890</th>
      <td>0</td>
      <td>3</td>
      <td>male</td>
      <td>32.0</td>
      <td>0</td>
      <td>0</td>
      <td>7.7500</td>
      <td>Q</td>
      <td>Third</td>
      <td>man</td>
      <td>True</td>
      <td>NaN</td>
      <td>Queenstown</td>
      <td>no</td>
      <td>True</td>
    </tr>
  </tbody>
</table>
</div>
<p>891 rows × 15 columns</p>
</div>
<br>
<ul>
<li>
<p>survived: 생존여부</p>
</li>
<li>
<p>pclass: 좌석등급 (숫자)</p>
</li>
<li>
<p>sex: 성별</p>
</li>
<li>
<p>age: 나이</p>
</li>
<li>
<p>sibsp: 형제자매 + 배우자 숫자</p>
</li>
<li>
<p>parch: 부모 + 자식 숫자</p>
</li>
<li>
<p>fare: 요금</p>
</li>
<li>
<p>embarked: 탑승 항구</p>
</li>
<li>
<p>class: 좌석등급 (영문)</p>
</li>
<li>
<p>who: 사람 구분</p>
</li>
<li>
<p>deck: 데크</p>
</li>
<li>
<p>embark_town: 탑승 항구 (영문)</p>
</li>
<li>
<p>alive: 생존여부 (영문)</p>
</li>
<li>
<p>alone: 혼자인지 여부</p>
<br>
</li>
</ul>
<p><strong>Dataset — "tips"</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">'tips'</span>)</span><br><span class="line">tips</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>239</th>
      <td>29.03</td>
      <td>5.92</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>240</th>
      <td>27.18</td>
      <td>2.00</td>
      <td>Female</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>241</th>
      <td>22.67</td>
      <td>2.00</td>
      <td>Male</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>242</th>
      <td>17.82</td>
      <td>1.75</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>243</th>
      <td>18.78</td>
      <td>3.00</td>
      <td>Female</td>
      <td>No</td>
      <td>Thur</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>244 rows × 7 columns</p>
</div>
<br>
<ul>
<li>
<p>total_bill: 총 합계 요금표</p>
</li>
<li>
<p>tip: 팁</p>
</li>
<li>
<p>sex: 성별</p>
</li>
<li>
<p>smoker: 흡연자 여부</p>
</li>
<li>
<p>day: 요일</p>
</li>
<li>
<p>time: 식사 시간</p>
</li>
<li>
<p>size: 식사 인원</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 배경 설정</span></span><br><span class="line">sns.set(style=<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h2 id="1-countplot"><a class="markdownIt-Anchor" href="#1-countplot"></a> <strong>1. countplot</strong></h2>
<p>항목별 갯수를 세어주는 <code>countplot</code></p>
<ul>
<li>해당 column을 구성하고 있는 value들을 자동으로 구분하여 보여준다</li>
</ul>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.countplot.html" target="_blank" rel="noopener">&lt;sns.countplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.countplot</strong> ( <em>x=None, y=None, hue=None, data=None, color=None, palette=None</em> )</p>
</blockquote>
 <br> 
<h3 id="1-1-세로로-그리기"><a class="markdownIt-Anchor" href="#1-1-세로로-그리기"></a> 1-1. 세로로 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_26_0.png" alt="png"></p>
<br>
<h3 id="1-2-가로로-그리기"><a class="markdownIt-Anchor" href="#1-2-가로로-그리기"></a> 1-2. 가로로 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(y=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_29_0.png" alt="png"></p>
<br>
<h3 id="1-3-색상-팔레트-설정"><a class="markdownIt-Anchor" href="#1-3-색상-팔레트-설정"></a> 1-3. 색상 팔레트 설정</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, palette=<span class="string">'copper'</span>, data= titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_32_0.png" alt="png"></p>
<br>
<br>
<h2 id="2-distplot"><a class="markdownIt-Anchor" href="#2-distplot"></a> <strong>2. distplot</strong></h2>
<p>matplotlib의 <code>hist</code>그래프와 <code>kdeplot</code>을 통합한 그래프다.<br>
<strong>분포</strong>와 <strong>밀도</strong>를 확인할 수 있음</p>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html?highlight=distplot#seaborn.distplot" target="_blank" rel="noopener">&lt;sns.distplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.displot</strong> ( <em>a, hist=True, kde=True, rug=False, vertical=False, color=None</em> )</p>
<ul>
<li>hist: histogram</li>
<li>kde: kernel density estimate</li>
<li>rug: rugplot</li>
<li>vertical: If True, observed values are on y-axis</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 샘플 데이터 생성</span></span><br><span class="line">x = np.random.randn(<span class="number">100</span>)</span><br><span class="line">x</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-3.39765920e-01, -1.48664049e+00, -5.57926444e-01,  3.25206560e-01,
       -7.46665762e-01, -3.10926812e-01, -2.14536012e+00,  1.25905620e+00,
       -2.07806423e-01,  5.56377038e-01, -2.20574498e+00, -1.15138577e-01,
       -3.32417471e-01,  1.13927613e-01, -7.29559442e-01, -1.31243715e+00,
       -8.27477111e-01, -1.24455099e+00, -5.44035731e-02, -1.85399773e+00,
       -1.62571613e+00,  3.89312791e-01,  1.26815698e+00, -7.43355761e-01,
       -1.34113997e+00,  2.67291801e-02, -4.74142344e-01, -1.07662894e+00,
       -2.35607451e+00,  1.90337236e-01, -1.18577255e+00, -1.23238300e+00,
        9.39298755e-01, -2.69078751e-01, -3.50418097e-01,  1.92109121e+00,
       -1.46520490e-01,  3.90810577e-01, -6.60511307e-01, -1.46288431e+00,
        1.26314685e+00,  2.38384651e-01,  8.03730080e-01,  2.83340226e-01,
       -1.24219159e+00, -1.50458389e+00, -1.60213592e-01,  3.97086657e-01,
        1.27321390e-01, -1.13722876e+00, -1.48448425e+00,  1.36136226e+00,
       -2.34669327e-01, -1.32679409e+00,  1.59032718e+00,  7.53779845e-01,
       -7.48815568e-01,  7.34822673e-03,  5.57358372e-01,  1.78429993e+00,
       -1.50510591e+00, -3.87983571e-01, -7.57372493e-01,  6.25354827e-01,
        1.44857563e-01,  7.78608476e-01, -6.61441801e-02, -1.24836018e+00,
        1.77522984e+00,  1.60497019e-01, -1.18893624e+00,  1.93951152e+00,
       -9.34504796e-01,  1.82000588e+00, -1.91594654e+00, -1.13118210e+00,
       -4.13371342e-01, -5.07021131e-01,  1.57792370e+00, -2.52509848e+00,
        1.86695906e-01, -1.18412859e+00,  1.49572473e-01, -3.53669860e-01,
        1.38877682e+00,  2.53212949e-02,  7.79387552e-01, -7.41508306e-01,
        4.10007279e-01,  1.96517288e-02, -5.69215198e-01,  1.45113980e+00,
       -8.80722624e-01,  1.35468793e+00, -1.67677998e-03, -1.14952039e+00,
        8.90718244e-01, -4.10411520e-01,  6.17620908e-01,  2.96993057e-01])
</code></pre>
<br>
<h3 id="2-1-기본-displot"><a class="markdownIt-Anchor" href="#2-1-기본-displot"></a> 2-1. 기본 displot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x)  <span class="comment"># x: numpy array</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_43_0.png" alt="png"></p>
<br>
<h3 id="2-2-데이터가-series일-경우"><a class="markdownIt-Anchor" href="#2-2-데이터가-series일-경우"></a> 2-2. 데이터가 Series일 경우</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x = pd.Series(x, name=<span class="string">'x variable'</span>)</span><br><span class="line">x</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    -0.339766
1    -1.486640
2    -0.557926
3     0.325207
4    -0.746666
        ...   
95   -1.149520
96    0.890718
97   -0.410412
98    0.617621
99    0.296993
Name: x variable, Length: 100, dtype: float64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x)  <span class="comment"># x: Series</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_47_0.png" alt="png"></p>
<p>x가 Seires일 때는:  그래프에서 x label이 자동으로 Series 이름(column name) 으로 나타남</p>
<br>  
<h3 id="2-3-rugplot"><a class="markdownIt-Anchor" href="#2-3-rugplot"></a> 2-3. rugplot</h3>
<p>데이터 위치를 x축 위에 <strong>작은 선분(rug)으로 나타내어</strong> 데이터들의 위치 밒 분포를 보여준다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, rug=<span class="literal">True</span>, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_52_0.png" alt="png"></p>
<br>
<h3 id="2-4-kde-kernel-density"><a class="markdownIt-Anchor" href="#2-4-kde-kernel-density"></a> 2-4. kde (kernel density)</h3>
<p>kde 는 histogram보다 <strong>부드러운 형태의 분포 곧선</strong>을 보여주는 방법</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, rug=<span class="literal">False</span>, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_56_0.png" alt="png"></p>
<br>
<h3 id="2-5-가로로-표현하기"><a class="markdownIt-Anchor" href="#2-5-가로로-표현하기"></a> 2-5. 가로로 표현하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, vertical=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_59_0.png" alt="png"></p>
<br>
<h3 id="2-6-컬러-바꾸기"><a class="markdownIt-Anchor" href="#2-6-컬러-바꾸기"></a> 2-6. 컬러 바꾸기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.distplot(x, color=<span class="string">'r'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_62_0.png" alt="png"></p>
<br>
<br>
<h2 id="3-heatmap"><a class="markdownIt-Anchor" href="#3-heatmap"></a> <strong>3. heatmap</strong></h2>
<p>색상으로 표현할 수 있는 다양한 정보를 <strong>일정한 이미지위에 열분포 형태의 비쥬얼한 그래픽</strong>으로 출력하는 것이 특정이다</p>
<p><strong>주로 활용되는 경우:</strong></p>
<ol>
<li>pivot table의 데이터를 시각화할 때</li>
<li>데이터의 상관관계를 살펴볼 때</li>
</ol>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.heatmap.html?highlight=heatmap#seaborn.heatmap" target="_blank" rel="noopener"> &lt;sns.heatmap&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.heatmap</strong> ( <em>data, annot=None, cmap=None</em> )</p>
<ul>
<li>annot: If True, write the data value in each cell</li>
</ul>
</blockquote>
  <br>
<h3 id="3-1-기본-heatmap"><a class="markdownIt-Anchor" href="#3-1-기본-heatmap"></a> 3-1. 기본 heatmap</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">uniform_data = np.random.rand(<span class="number">10</span>, <span class="number">12</span>)</span><br><span class="line">sns.heatmap(uniform_data, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_72_0.png" alt="png"></p>
<p>컬러가 진할수록 숫자가 0에 가깝고, 연할수록 1에 가깝다</p>
  <br>
<h3 id="3-2-pivot-table을-활용하여-그리기"><a class="markdownIt-Anchor" href="#3-2-pivot-table을-활용하여-그리기"></a> 3-2. pivot table을 활용하여 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>239</th>
      <td>29.03</td>
      <td>5.92</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>240</th>
      <td>27.18</td>
      <td>2.00</td>
      <td>Female</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>241</th>
      <td>22.67</td>
      <td>2.00</td>
      <td>Male</td>
      <td>Yes</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>242</th>
      <td>17.82</td>
      <td>1.75</td>
      <td>Male</td>
      <td>No</td>
      <td>Sat</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>243</th>
      <td>18.78</td>
      <td>3.00</td>
      <td>Female</td>
      <td>No</td>
      <td>Thur</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
<p>244 rows × 7 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pivot = tips.pivot_table(index=<span class="string">'day'</span>, columns=<span class="string">'size'</span>, values=<span class="string">'tip'</span>)</span><br><span class="line">pivot</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th>size</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
    </tr>
    <tr>
      <th>day</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Thur</th>
      <td>1.83</td>
      <td>2.442500</td>
      <td>2.692500</td>
      <td>4.218000</td>
      <td>5.000000</td>
      <td>5.3</td>
    </tr>
    <tr>
      <th>Fri</th>
      <td>1.92</td>
      <td>2.644375</td>
      <td>3.000000</td>
      <td>4.730000</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>Sat</th>
      <td>1.00</td>
      <td>2.517547</td>
      <td>3.797778</td>
      <td>4.123846</td>
      <td>3.000000</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>Sun</th>
      <td>NaN</td>
      <td>2.816923</td>
      <td>3.120667</td>
      <td>4.087778</td>
      <td>4.046667</td>
      <td>5.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.heatmap(pivot, cmap=<span class="string">'Blues'</span>, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_78_0.png" alt="png"></p>
<br>
<h3 id="3-3-correlation상관관계를-시각화"><a class="markdownIt-Anchor" href="#3-3-correlation상관관계를-시각화"></a> 3-3. correlation(상관관계)를 시각화</h3>
<p><strong>corr()</strong> 함수는 데이터의 상관관계를 보여줌</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">titanic.corr()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>survived</th>
      <th>pclass</th>
      <th>age</th>
      <th>sibsp</th>
      <th>parch</th>
      <th>fare</th>
      <th>adult_male</th>
      <th>alone</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>survived</th>
      <td>1.000000</td>
      <td>-0.338481</td>
      <td>-0.077221</td>
      <td>-0.035322</td>
      <td>0.081629</td>
      <td>0.257307</td>
      <td>-0.557080</td>
      <td>-0.203367</td>
    </tr>
    <tr>
      <th>pclass</th>
      <td>-0.338481</td>
      <td>1.000000</td>
      <td>-0.369226</td>
      <td>0.083081</td>
      <td>0.018443</td>
      <td>-0.549500</td>
      <td>0.094035</td>
      <td>0.135207</td>
    </tr>
    <tr>
      <th>age</th>
      <td>-0.077221</td>
      <td>-0.369226</td>
      <td>1.000000</td>
      <td>-0.308247</td>
      <td>-0.189119</td>
      <td>0.096067</td>
      <td>0.280328</td>
      <td>0.198270</td>
    </tr>
    <tr>
      <th>sibsp</th>
      <td>-0.035322</td>
      <td>0.083081</td>
      <td>-0.308247</td>
      <td>1.000000</td>
      <td>0.414838</td>
      <td>0.159651</td>
      <td>-0.253586</td>
      <td>-0.584471</td>
    </tr>
    <tr>
      <th>parch</th>
      <td>0.081629</td>
      <td>0.018443</td>
      <td>-0.189119</td>
      <td>0.414838</td>
      <td>1.000000</td>
      <td>0.216225</td>
      <td>-0.349943</td>
      <td>-0.583398</td>
    </tr>
    <tr>
      <th>fare</th>
      <td>0.257307</td>
      <td>-0.549500</td>
      <td>0.096067</td>
      <td>0.159651</td>
      <td>0.216225</td>
      <td>1.000000</td>
      <td>-0.182024</td>
      <td>-0.271832</td>
    </tr>
    <tr>
      <th>adult_male</th>
      <td>-0.557080</td>
      <td>0.094035</td>
      <td>0.280328</td>
      <td>-0.253586</td>
      <td>-0.349943</td>
      <td>-0.182024</td>
      <td>1.000000</td>
      <td>0.404744</td>
    </tr>
    <tr>
      <th>alone</th>
      <td>-0.203367</td>
      <td>0.135207</td>
      <td>0.198270</td>
      <td>-0.584471</td>
      <td>-0.583398</td>
      <td>-0.271832</td>
      <td>0.404744</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.heatmap(titanic.corr(), annot=<span class="literal">True</span>, cmap=<span class="string">'YlGnBu'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_83_0.png" alt="png"></p>
<br>
<br>
<h2 id="4-pairplot"><a class="markdownIt-Anchor" href="#4-pairplot"></a> <strong>4. pairplot</strong></h2>
<p>pairplot은 grid 형태로 각 <strong>집합의 조합에 대해 히스토그램과 분포도</strong>를 그린다.<br>
(숫자형 column에 대해서만 그려줌)</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.pairplot.html?highlight=pairplot#seaborn.pairplot" target="_blank" rel="noopener">&lt;sns.pairplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.pairplot</strong> ( <em>data, hue=None, palette=None, height=2.5</em> )</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="4-1-기본-pairplot-그리기"><a class="markdownIt-Anchor" href="#4-1-기본-pairplot-그리기"></a> 4-1. 기본 pairplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_94_0.png" alt="png"></p>
<br>
<h3 id="4-2-hue-옵션으로-특성-구분"><a class="markdownIt-Anchor" href="#4-2-hue-옵션으로-특성-구분"></a> 4-2. hue 옵션으로 특성 구분</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_97_0.png" alt="png"></p>
<br>
<h3 id="4-3-컬러-팔레트-적용"><a class="markdownIt-Anchor" href="#4-3-컬러-팔레트-적용"></a> 4-3. 컬러 팔레트 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>, palette=<span class="string">'rainbow'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_100_0.png" alt="png"></p>
<br>
<h3 id="4-4-사이즈-적용"><a class="markdownIt-Anchor" href="#4-4-사이즈-적용"></a> 4-4. 사이즈 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>, palette=<span class="string">'rainbow'</span>, height=<span class="number">4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_103_0.png" alt="png"></p>
<br>
<br>
<h2 id="5-violinplot"><a class="markdownIt-Anchor" href="#5-violinplot"></a> <strong>5. violinplot</strong></h2>
<p>마이올린처럼 생긴 violinplot다.</p>
<p>column에 대한 <strong>데이터의 비교 분포도</strong>를 확인할 수 있다.</p>
<ul>
<li>곡선형 부분 (뚱뚱한 부분)은 데이터의 분포를 나타냄</li>
<li>양쪽 끝 뾰족한 부분은 데이터의 최소값과 최대값을 나타냄</li>
</ul>
<br>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.violinplot.html" target="_blank" rel="noopener">&lt;sns.violinplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.violinplot</strong> ( <em>x=None. y=None, hue=None, data=None, split=False</em> )</p>
<ul>
<li><strong>split:</strong> When using hue nesting with a variable that takes two levels, setting split to True will draw half of a violin for each level. This can make it easier to directly compare the distributions.</li>
</ul>
</blockquote>
 <br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="5-1-기본-violinplot-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-violinplot-그리기"></a> 5-1. 기본 violinplot 그리기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=tips[<span class="string">'total_bill'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_113_0.png" alt="png"></p>
<br>
<h3 id="5-2-비교-분포-확인"><a class="markdownIt-Anchor" href="#5-2-비교-분포-확인"></a> 5-2. 비교 분포 확인</h3>
<p>x, y축을 지정해줌으로써 바이올린을 분할하여 <strong>비교 분포</strong>를 볼 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_117_0.png" alt="png"></p>
<br>
<h3 id="5-3-가로로-뉘인-violinplot"><a class="markdownIt-Anchor" href="#5-3-가로로-뉘인-violinplot"></a> 5-3. 가로로 뉘인 violinplot</h3>
<ul>
<li>x축, y축 변경</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(y=<span class="string">'day'</span>, x=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_120_0.png" alt="png"></p>
<br>
<h3 id="5-4-hue-옵션으로-분포-비교"><a class="markdownIt-Anchor" href="#5-4-hue-옵션으로-분포-비교"></a> 5-4. hue 옵션으로 분포 비교</h3>
<p>사실 hue옵션을 사용하지 않으면 바이올린이 대칭이기 때문에 분포의 큰 의미는 없다.<br>
하지만, hue옵션을 주면, <strong>단일 column에 대한 바이올린 모양의 비교</strong>를 할 수 있다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, hue=<span class="string">'smoker'</span>, data=tips, palette=<span class="string">'muted'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_124_0.png" alt="png"></p>
<br>
<p><strong>split 옵션으로 바이올린을 합쳐서 볼 수 있다</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, hue=<span class="string">'smoker'</span>, data=tips, palette=<span class="string">'muted'</span>, split=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_127_0.png" alt="png"></p>
<p>violinplot은 이런 경우에 많이 활용된다</p>
<p><br> <br></p>
<h2 id="6-lmplot"><a class="markdownIt-Anchor" href="#6-lmplot"></a> <strong>6. lmplot</strong></h2>
<p>lmport (<em>initial: 소문자 L</em>) 은 column간의 <strong>선형관계를 확인하기에 용이한 차트</strong>임.<br>
또한, <strong>outlier</strong>도 같이 짐작해 볼 수 있다.</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.lmplot.html" target="_blank" rel="noopener">&lt;sns.lmplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.lmplot</strong> ( <em>x, y, data, hue=None, col=None, col_wrap=None, row=None, height=5</em> )</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="6-1-기본-lmplot"><a class="markdownIt-Anchor" href="#6-1-기본-lmplot"></a> 6-1. 기본 lmplot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_138_0.png" alt="png"></p>
<br>
<h3 id="6-2-hue-옵션으로-다중-선형관계-그리기"><a class="markdownIt-Anchor" href="#6-2-hue-옵션으로-다중-선형관계-그리기"></a> 6-2. hue 옵션으로 다중 선형관계 그리기</h3>
<p>아래의 그래프를 통하여 비흡연자가, 흡연자 대비 좀 더 <strong>가파른 선형관계</strong>를 가지는 것을 볼 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'smoker'</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_142_0.png" alt="png"></p>
<br>
<h3 id="6-3-col-옵션을-추가하여-그래프를-별도로-그려볼-수-있다"><a class="markdownIt-Anchor" href="#6-3-col-옵션을-추가하여-그래프를-별도로-그려볼-수-있다"></a> 6-3. col 옵션을 추가하여 그래프를 별도로 그려볼 수 있다</h3>
<p>또한, <code>col_wrap</code>으로 한 줄에 표기할 column의 갯수를 명시할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'smoker'</span>, col=<span class="string">'day'</span>, col_wrap=<span class="number">2</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_146_0.png" alt="png"></p>
<br>
<br>
<h2 id="7-relplot"><a class="markdownIt-Anchor" href="#7-relplot"></a> <strong>7. relplot</strong></h2>
<p>두 column간 상관관계를 보지만 <code>lmport</code>처럼 선형관계를 따로 그려주지 않다</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.relplot.html?highlight=relplot#seaborn.relplot" target="_blank" rel="noopener">&lt;sns.replot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.relplot</strong> ( <em>x, y, data, hue=None, col=None, row=None, height=5, palette=None</em> )</p>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="7-1-기본-relplot"><a class="markdownIt-Anchor" href="#7-1-기본-relplot"></a> 7-1. 기본 relplot</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_157_0.png" alt="png"></p>
<br>
<h3 id="7-2-col-옵션으로-그래프-분할"><a class="markdownIt-Anchor" href="#7-2-col-옵션으로-그래프-분할"></a> 7-2. col 옵션으로 그래프 분할</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_160_0.png" alt="png"></p>
<br>
<h3 id="7-3-row와-column에-표기할-데이터-column-선택"><a class="markdownIt-Anchor" href="#7-3-row와-column에-표기할-데이터-column-선택"></a> 7-3. row와 column에 표기할 데이터 column 선택</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>,hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, row=<span class="string">'sex'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_163_0.png" alt="png"></p>
<br>
<h3 id="7-4-컬러-팔레트-적용"><a class="markdownIt-Anchor" href="#7-4-컬러-팔레트-적용"></a> 7-4. 컬러 팔레트 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, row=<span class="string">'sex'</span>, data=tips, palette=<span class="string">'CMRmap_r'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_166_0.png" alt="png"></p>
<br>
<br>
<h2 id="8-jointplot"><a class="markdownIt-Anchor" href="#8-jointplot"></a> <strong>8. jointplot</strong></h2>
<p>jointplot은 scatter(산점도)와 histogram(분포)을 동시에 그려줌.(숫자형 데이터만)</p>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.jointplot.html?highlight=jointplot#seaborn.jointplot" target="_blank" rel="noopener">&lt;sns.jointplot&gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>sns.jointplot</strong> ( <em>x, y, data=None, kind=‘scatter’, height=6</em> )</p>
<ul>
<li><strong>kind</strong>: kind of plot to draw. {‘scatter’, ‘reg’, ‘resid’, ‘kde’, ‘hex’}</li>
</ul>
</blockquote>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>total_bill</th>
      <th>tip</th>
      <th>sex</th>
      <th>smoker</th>
      <th>day</th>
      <th>time</th>
      <th>size</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>16.99</td>
      <td>1.01</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>10.34</td>
      <td>1.66</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>21.01</td>
      <td>3.50</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>23.68</td>
      <td>3.31</td>
      <td>Male</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>24.59</td>
      <td>3.61</td>
      <td>Female</td>
      <td>No</td>
      <td>Sun</td>
      <td>Dinner</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="8-1-기본-jointplot-그리기"><a class="markdownIt-Anchor" href="#8-1-기본-jointplot-그리기"></a> 8-1. 기본 jointplot 그리기</h3>
<p><strong>default 로 "scatter plot"을 그린다  (kind=‘scatter’)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_178_0.png" alt="png"></p>
<br>
<h3 id="8-2-선형관계를-표현하는-regression-라인-그리기"><a class="markdownIt-Anchor" href="#8-2-선형관계를-표현하는-regression-라인-그리기"></a> 8-2. 선형관계를 표현하는 regression 라인 그리기</h3>
<p><strong>옵션: kind='reg’</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'total_bill'</span>, <span class="string">'tip'</span>, data=tips, kind=<span class="string">'reg'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_182_0.png" alt="png"></p>
<br>
<h3 id="8-3-hex-밀도-보기"><a class="markdownIt-Anchor" href="#8-3-hex-밀도-보기"></a> 8-3. hex 밀도 보기</h3>
<p><strong>옵션: kind='hex’</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'total_bill'</span>, <span class="string">'tip'</span>, data=tips, kind=<span class="string">'hex'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_186_0.png" alt="png"></p>
<br>
<h3 id="8-4-등고선-모양으로-밀집도-확인하기"><a class="markdownIt-Anchor" href="#8-4-등고선-모양으로-밀집도-확인하기"></a> 8-4. 등고선 모양으로 밀집도 확인하기</h3>
<p><strong>kind=‘kde’</strong> 옵션으로 데이터의 밀집도를 보다 부드러운 선으로 확인할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">iris = sns.load_dataset(<span class="string">'iris'</span>)</span><br><span class="line">iris</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal_length</th>
      <th>sepal_width</th>
      <th>petal_length</th>
      <th>petal_width</th>
      <th>species</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>setosa</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>145</th>
      <td>6.7</td>
      <td>3.0</td>
      <td>5.2</td>
      <td>2.3</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>146</th>
      <td>6.3</td>
      <td>2.5</td>
      <td>5.0</td>
      <td>1.9</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>147</th>
      <td>6.5</td>
      <td>3.0</td>
      <td>5.2</td>
      <td>2.0</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>148</th>
      <td>6.2</td>
      <td>3.4</td>
      <td>5.4</td>
      <td>2.3</td>
      <td>virginica</td>
    </tr>
    <tr>
      <th>149</th>
      <td>5.9</td>
      <td>3.0</td>
      <td>5.1</td>
      <td>1.8</td>
      <td>virginica</td>
    </tr>
  </tbody>
</table>
<p>150 rows × 5 columns</p>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'sepal_width'</span>, <span class="string">'petal_length'</span>, data=iris, kind=<span class="string">'kde'</span>, color=<span class="string">'g'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-Seaborn2/output_192_0.png" alt="png"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>시각화</tag>
        <tag>Seaborn</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn -(0) sklearn 개요</title>
    <url>/2020/07/17/S-Python-sklearn0/</url>
    <content><![CDATA[<h1 id="scikit-learn-개요"><a class="markdownIt-Anchor" href="#scikit-learn-개요"></a> <strong>scikit-learn 개요</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#install-package"><strong>Install Package</strong></a></li>
<li><a href="#import-functions-from-sub-packages"><strong>Import Functions from Sub-packages</strong></a></li>
<li><a href="#3-steps-to-fit-model-and-do-prediction"><strong>3 Steps to Fit Model and Do Prediction</strong></a></li>
</ul>
<p></p>
<br>
<blockquote>
<p><a href="https://scikit-learn.org/stable/" target="_blank" rel="noopener">&lt; scikit-learn &gt; Homepage</a></p>
</blockquote>
<p>scikit-learn 패키지는 지도학습, 비지도학습 등 대부분의 머신러닝 알고리즘을 제공하고 있으며, Python에서 머신러닝을 수행할 때 굉장히 많이 쓰이는 패키지 중의 하나다</p>
<p><img src="/images/S-Python-sklearn0/NzXkk9.png" alt="sk_learn"></p>
  <br>
<h2 id="install-package"><a class="markdownIt-Anchor" href="#install-package"></a> <strong>Install Package</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install -U scikit-learn  <span class="comment"># -U: Update</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>Note: you may need to restart the kernel to use updated packages.
</code></pre>
<p>​</p>
<pre><code>Usage:   
  D:\Anaconda\python.exe -m pip install [options] &lt;requirement specifier&gt; [package-index-options] ...
  D:\Anaconda\python.exe -m pip install [options] -r &lt;requirements file&gt; [package-index-options] ...
  D:\Anaconda\python.exe -m pip install [options] [-e] &lt;vcs project url&gt; ...
  D:\Anaconda\python.exe -m pip install [options] [-e] &lt;local project path&gt; ...
  D:\Anaconda\python.exe -m pip install [options] &lt;archive url/path&gt; ...

no such option: -:
</code></pre>
<br>
<h2 id="import-functions-from-sub-packages"><a class="markdownIt-Anchor" href="#import-functions-from-sub-packages"></a> <strong>Import Functions from Sub-packages</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="3-steps-to-fit-model-and-do-prediction"><a class="markdownIt-Anchor" href="#3-steps-to-fit-model-and-do-prediction"></a> <strong>3 Steps to Fit Model and Do Prediction</strong></h2>
<p><strong>STEP 1. 모델 정의</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">model = LinearRegression()</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>STEP 2. 학습 (Fit in Training set)</strong></p>
<ul>
<li>명령어:  <em>model_name</em> <font color="red">.fit</font></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">model.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>STEP 3. 예측 (Predict in Test set)</strong></p>
<ul>
<li>명령어: <em>model_name</em> <font color="red">.predict</font></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (1) 전처리</title>
    <url>/2020/07/17/S-Python-sklearn1/</url>
    <content><![CDATA[<h1 id="전처리-pre-processing"><a class="markdownIt-Anchor" href="#전처리-pre-processing"></a> <strong>전처리 (Pre-Processing)</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#%EA%B0%9C%EC%9A%94"><strong>개요</strong></a>
<ul>
<li><a href="#1-%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%98-%EC%A0%95%EC%9D%98">1. 전처리의 정의</a></li>
<li><a href="#2-%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%98-%EC%A2%85%EB%A5%98">2. 전처리의 종류</a></li>
</ul>
</li>
<li><a href="#%EC%8B%A4%EC%8A%B5-titanic"><strong>실습 – Titanic</strong></a>
<ul>
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B-%ED%8C%8C%EC%95%85">0. 데이터 셋 파악</a></li>
<li><a href="#1-train-validation-%EC%85%8B-%EB%82%98%EB%88%84%EA%B8%B0">1. train / validation 셋 나누기</a></li>
<li><a href="#2-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2. 결측치 처리</a>
<ul>
<li><a href="#2-0-%EA%B2%B0%EC%B8%A1%EC%B9%98-%ED%99%95%EC%9D%B8">2-0. 결측치 확인</a></li>
<li><a href="#2-1-numerical-column%EC%9D%98-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2-1. Numerical Column의 결측치 처리</a></li>
<li><a href="#2-2-categorical-column%EC%9D%98-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2-2. Categorical Column의 결측치 처리</a></li>
</ul>
</li>
<li><a href="#3-label-encoding-%EB%AC%B8%EC%9E%90categorivcal%EB%A5%BC-%EC%88%98%EC%B9%98numerical%EB%A1%9C-%EB%B3%80%ED%99%98">3. Label Encoding: 문자(categorivcal)를 수치(numerical)로 변환</a></li>
<li><a href="#4-%EC%9B%90-%ED%95%AB-%EC%9D%B8%EC%BD%94%EB%94%A9-one-hot-encoding">4. 원 핫 인코딩 (One Hot Encoding)</a></li>
<li><a href="#5-normalize-%EC%A0%95%EA%B7%9C%ED%99%94">5. Normalize (정규화)</a></li>
<li><a href="#6-standard-scaling-%ED%91%9C%EC%A4%80%ED%99%94">6. Standard Scaling (표준화)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="개요"><a class="markdownIt-Anchor" href="#개요"></a> <strong>개요</strong></h2>
<h3 id="1-전처리의-정의"><a class="markdownIt-Anchor" href="#1-전처리의-정의"></a> 1. 전처리의 정의</h3>
<p><strong>데이터 전처리</strong>는 데이터 분석에 적합하게 데이터를 <strong>가공/ 변경/ 처리/ 클리닝</strong>하는 과정이다</p>
  <br>
<h3 id="2-전처리의-종류"><a class="markdownIt-Anchor" href="#2-전처리의-종류"></a> 2. 전처리의 종류</h3>
<ol>
<li>
<p><strong>결측치</strong> - Imputer</p>
</li>
<li>
<p><strong>이상치</strong></p>
</li>
<li>
<p><strong>정규화 (Normalization)</strong></p>
<ul>
<li>0~1사이의 분포로 조정</li>
<li><font size="4"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_{new} = \frac{x-x_{min}}{x_{max}-x_{min}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.263531em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></font></li>
</ul>
</li>
<li>
<p><strong>표준화 (Standardization)</strong></p>
<ul>
<li>평균을 0, 표준편차를 1로 맞춤</li>
<li><font size="4"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding="application/x-tex">x_{new} = \frac{x-\mu}{\sigma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199439em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></font></li>
</ul>
</li>
<li>
<p><strong>샘플링 (over/under sampling)</strong></p>
</li>
<li>
<p><strong>피처 공학 (Feature Engineering)</strong></p>
<ul>
<li>feature 생성/ 연산</li>
<li>구간 생성, 스케일 변경</li>
</ul>
</li>
</ol>
<p><br>  <br></p>
<h2 id="실습-titanic"><a class="markdownIt-Anchor" href="#실습-titanic"></a> <strong>실습 – Titanic</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br><span class="line">test = pd.read_csv(<span class="string">'test.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="0-데이터-셋-파악"><a class="markdownIt-Anchor" href="#0-데이터-셋-파악"></a> 0. 데이터 셋 파악</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<ul>
<li>
<p>PassengerId: 승객 아이디</p>
</li>
<li>
<p>Survived: 생존 여부, 1: 생존, 0: 사망</p>
</li>
<li>
<p>Pclass: 등급</p>
</li>
<li>
<p>Name: 성함</p>
</li>
<li>
<p>Sex: 성별</p>
</li>
<li>
<p>Age: 나이</p>
</li>
<li>
<p>SibSp: 형제, 자매, 배우자 수</p>
</li>
<li>
<p>Parch: 부모, 자식 수</p>
</li>
<li>
<p>Ticket: 티켓번호</p>
</li>
<li>
<p>Fare: 요즘</p>
</li>
<li>
<p>Cabin: 좌석번호</p>
</li>
<li>
<p>Embarked: 탑승 항구</p>
<br>
<br>
</li>
</ul>
<h3 id="1-train-validation-셋-나누기"><a class="markdownIt-Anchor" href="#1-train-validation-셋-나누기"></a> 1. train / validation 셋 나누기</h3>
<p><strong>STEP 1. feature &amp; label 정의하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">feature = [</span><br><span class="line">    <span class="string">'Pclass'</span>, <span class="string">'Sex'</span>, <span class="string">'Age'</span>, <span class="string">'Fare'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">label = [</span><br><span class="line">    <span class="string">'Survived'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[feature].head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Pclass</th>
      <th>Sex</th>
      <th>Age</th>
      <th>Fare</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>3</td>
      <td>male</td>
      <td>22.0</td>
      <td>7.2500</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>female</td>
      <td>38.0</td>
      <td>71.2833</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>female</td>
      <td>26.0</td>
      <td>7.9250</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>female</td>
      <td>35.0</td>
      <td>53.1000</td>
    </tr>
    <tr>
      <th>4</th>
      <td>3</td>
      <td>male</td>
      <td>35.0</td>
      <td>8.0500</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[label].head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Survived</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>STEP 2. 적절한 비율로 train / validation set 나누기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<p><em><strong>reference:</strong></em> <a href="https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html" target="_blank" rel="noopener">&lt; train_test_split &gt; Document</a></p>
</blockquote>
<blockquote>
<p><strong>train_test_split</strong> ( <em>X, y, test_size=…, random_state=…, shuffle=True</em> )</p>
<ul>
<li><strong>test_size:</strong> validation set에 할당할 비율 (20% -&gt; 0.2)</li>
<li><strong>random_state:</strong> random seed 설정</li>
<li><strong>shuffle:</strong> 기본 True: shuffle the data before splitting</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(train[feature], train[label], test_size=<span class="number">0.2</span>, random_state=<span class="number">30</span>, shuffle=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((712, 4), (712, 1))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((179, 4), (179, 1))
</code></pre>
<p><br> <br></p>
<h3 id="2-결측치-처리"><a class="markdownIt-Anchor" href="#2-결측치-처리"></a> 2. 결측치 처리</h3>
<h4 id="2-0-결측치-확인"><a class="markdownIt-Anchor" href="#2-0-결측치-확인"></a> 2-0. 결측치 확인</h4>
<p><strong>방법 1.</strong> pandas의 <code>info()</code></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>방법 2.</strong> pandas의 <code>isnull()</code><br>
합계를 구하는 sum()을 통해 한 눈에 확인할 수 있다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>PassengerId      0
Survived         0
Pclass           0
Name             0
Sex              0
Age            177
SibSp            0
Parch            0
Ticket           0
Fare             0
Cabin          687
Embarked         2
dtype: int64
</code></pre>
<p>개별 column의 결측치 확인하기</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>177
</code></pre>
<br>  
<h4 id="2-1-numerical-column의-결측치-처리"><a class="markdownIt-Anchor" href="#2-1-numerical-column의-결측치-처리"></a> 2-1. Numerical Column의 결측치 처리</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>1. Pandas의 <font color="blue">"fillna()"</font>를 사용</strong>: 1개의 column을 처리할 때</p>
<p><strong>a. 숫자"0"으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].fillna(<span class="number">0</span>).describe()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>count    891.000000
mean      23.799293
std       17.596074
min        0.000000
25%        6.000000
50%       24.000000
75%       35.000000
max       80.000000
Name: Age, dtype: float64
</code></pre>
 <br> 
<p><strong>b. 통계값(평균)으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].fillna(train[<span class="string">'Age'</span>].mean()).describe()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>count    891.000000
mean      29.699118
std       13.002015
min        0.420000
25%       22.000000
50%       29.699118
75%       35.000000
max       80.000000
Name: Age, dtype: float64
</code></pre>
 <br> 
<p><strong>2. sklearn의 <font color="blue">"SimpleImputer"</font>를 사용</strong>: 2개 이상의 column을 한 번에 처리할 때</p>
<blockquote>
<p><em><strong>reference:</strong></em></p>
<ol>
<li><a href="https://scikit-learn.org/stable/modules/impute.html" target="_blank" rel="noopener">Impute 도큐먼트</a></li>
<li><a href="https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html" target="_blank" rel="noopener">SimplrImputer 도큐먼트</a></li>
</ol>
</blockquote>
<blockquote>
<p><strong>SimpleImputer</strong>( <em>*, missing_values=nan, strategy=‘mean’, fill_value=None, verbose=0, copy=True, add_indicator=False</em> )</p>
<ul>
<li>strategy: “mean” / “median” / “most_frequent” / “constant”</li>
</ul>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.impute <span class="keyword">import</span> SimpleImputer</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>a. 숫자"0"으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 1. imputer 만들기</span></span><br><span class="line">imputer = SimpleImputer(strategy=<span class="string">'constant'</span>, fill_value=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 2. fit() 을 통해 결측치에 대한 학습을 진행하기</span></span><br><span class="line">imputer.fit(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>SimpleImputer(add_indicator=False, copy=True, fill_value=0, missing_values=nan,
              strategy='constant', verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 3. transform() 을 통해 실제 결측치에 대해 처리하기</span></span><br><span class="line">result = imputer.transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br><span class="line">result</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[22.,  3.],
       [38.,  1.],
       [26.,  3.],
       ...,
       [ 0.,  3.],
       [26.,  1.],
       [32.,  3.]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 4. 처리 결과를 original data에 대입</span></span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       0
Pclass    0
dtype: int64
</code></pre>
<br>  
<p><strong>fit_transform()</strong> 은 fit()과 transform()을 한 번에 해주는 합수다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       177
Pclass      0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 1. imputer 만들기</span></span><br><span class="line">imputer = SimpleImputer(strategy=<span class="string">'constant'</span>, fill_value=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 2. fit and transform</span></span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 3. 결과 대입</span></span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       0
Pclass    0
dtype: int64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Age</th>
      <th>Pclass</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>891.000000</td>
      <td>891.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>23.799293</td>
      <td>2.308642</td>
    </tr>
    <tr>
      <th>std</th>
      <td>17.596074</td>
      <td>0.836071</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.000000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>6.000000</td>
      <td>2.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>24.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>35.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>80.000000</td>
      <td>3.000000</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>b. 통계값(평균)으로 채우기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       177
Pclass      0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">imputer = SimpleImputer(strategy=<span class="string">'mean'</span>)</span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Age       0
Pclass    0
dtype: int64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Age</th>
      <th>Pclass</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>891.000000</td>
      <td>891.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>29.699118</td>
      <td>2.308642</td>
    </tr>
    <tr>
      <th>std</th>
      <td>13.002015</td>
      <td>0.836071</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.420000</td>
      <td>1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>22.000000</td>
      <td>2.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>29.699118</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>35.000000</td>
      <td>3.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>80.000000</td>
      <td>3.000000</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h4 id="2-2-categorical-column의-결측치-처리"><a class="markdownIt-Anchor" href="#2-2-categorical-column의-결측치-처리"></a> 2-2. Categorical Column의 결측치 처리</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>1. Pandas의 <font color="blue">"fillna()"</font>를 사용</strong>: 1개의 column을 처리할 때</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      S
1      C
2      S
3      S
4      S
      ..
886    S
887    S
888    S
889    C
890    Q
Name: Embarked, Length: 891, dtype: object
</code></pre>
<br>
<p><strong>2. sklearn의 <font color="blue">"SimpleImputer"</font>를 사용</strong>: 2개 이상의 column을 한 번에 처리할 때</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">imputer = SimpleImputer(strategy = <span class="string">'most_frequent'</span>)</span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]])</span><br><span class="line">train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]] = result</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Embarked    0
Cabin       0
dtype: int64
</code></pre>
<p><br>  <br></p>
<h3 id="3-label-encoding-문자categorivcal를-수치numerical로-변환"><a class="markdownIt-Anchor" href="#3-label-encoding-문자categorivcal를-수치numerical로-변환"></a> 3. Label Encoding: 문자(categorivcal)를 수치(numerical)로 변환</h3>
<p>기계학습을 위해서 모든 <strong>문자</strong>로된 데이터는 <strong>수치로 변환</strong>해야 한다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0        male
1      female
2      female
3      female
4        male
        ...  
886      male
887    female
888    female
889      male
890      male
Name: Sex, Length: 891, dtype: object
</code></pre>
<br>
<p><strong>방법 1: convert함수를 직접 정의하기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>male      577
female    314
Name: Sex, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 1. 함수 정의</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">'female'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> data == <span class="string">'male'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># STEP 2. 함수 apply</span></span><br><span class="line">train[<span class="string">'Sex'</span>].apply(convert)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      0
1      1
2      1
3      1
4      0
      ..
886    0
887    1
888    1
889    0
890    0
Name: Sex, Length: 891, dtype: int64
</code></pre>
  <br>
<p><strong>방법 2: sklearn의 <font color="blue">“LabelEncoder”</font> 사용</strong></p>
<ul>
<li>변환 규칙: value name의 <strong>alphabet 순서대로</strong> 0, 1, 2… 숫자를 부여</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>male      577
female    314
Name: Sex, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">le = LabelEncoder()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex_num'</span>] = le.fit_transform(train[<span class="string">'Sex'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Sex_num'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    577
0    314
Name: Sex_num, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># class 확인</span></span><br><span class="line">le.classes_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['female', 'male'], dtype=object)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 숫자 -&gt; 문자</span></span><br><span class="line">le.inverse_transform([<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['female', 'male', 'male', 'female', 'female', 'male', 'male'],
      dtype=object)
</code></pre>
<br>  
<p>NaN 값이 포함되어 있으면, <code>LabeEncoder</code>가 정상 동작하지 않음</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      S
1      C
2      S
3      S
4      S
      ..
886    S
887    S
888    S
889    C
890    Q
Name: Embarked, Length: 891, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>S    644
C    168
Q     77
Name: Embarked, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">le.fit_transform(train[<span class="string">'Embarked'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode(values, uniques, encode, check_unknown)
    111         try:
--&gt; 112             res = _encode_python(values, uniques, encode)
    113         except TypeError:


D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode_python(values, uniques, encode)
     59     if uniques is None:
---&gt; 60         uniques = sorted(set(values))
     61         uniques = np.array(uniques, dtype=values.dtype)


TypeError: '&lt;' not supported between instances of 'float' and 'str'
</code></pre>
<p>​</p>
<pre><code>During handling of the above exception, another exception occurred:


TypeError                                 Traceback (most recent call last)

&lt;ipython-input-38-86525b1fc929&gt; in &lt;module&gt;
----&gt; 1 le.fit_transform(train['Embarked'])


D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in fit_transform(self, y)
    250         """
    251         y = column_or_1d(y, warn=True)
--&gt; 252         self.classes_, y = _encode(y, encode=True)
    253         return y
    254 


D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode(values, uniques, encode, check_unknown)
    112             res = _encode_python(values, uniques, encode)
    113         except TypeError:
--&gt; 114             raise TypeError("argument must be a string or number")
    115         return res
    116     else:


TypeError: argument must be a string or number
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>] = train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>] = le.fit_transform(train[<span class="string">'Embarked'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0      2
1      0
2      2
3      2
4      2
      ..
886    2
887    2
888    2
889    0
890    1
Name: Embarked, Length: 891, dtype: int32
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    646
0    168
1     77
Name: Embarked, dtype: int64
</code></pre>
  <br>
  <br>
<h3 id="4-원-핫-인코딩-one-hot-encoding"><a class="markdownIt-Anchor" href="#4-원-핫-인코딩-one-hot-encoding"></a> 4. 원 핫 인코딩 (One Hot Encoding)</h3>
<blockquote>
<p><strong>pd.get_dummies</strong> ( <em>df_name</em> [ <em>‘col_name’</em> ] )</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>PassengerId</th>
      <th>Survived</th>
      <th>Pclass</th>
      <th>Name</th>
      <th>Sex</th>
      <th>Age</th>
      <th>SibSp</th>
      <th>Parch</th>
      <th>Ticket</th>
      <th>Fare</th>
      <th>Cabin</th>
      <th>Embarked</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>Braund, Mr. Owen Harris</td>
      <td>male</td>
      <td>22.0</td>
      <td>1</td>
      <td>0</td>
      <td>A/5 21171</td>
      <td>7.2500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>
      <td>female</td>
      <td>38.0</td>
      <td>1</td>
      <td>0</td>
      <td>PC 17599</td>
      <td>71.2833</td>
      <td>C85</td>
      <td>C</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>Heikkinen, Miss. Laina</td>
      <td>female</td>
      <td>26.0</td>
      <td>0</td>
      <td>0</td>
      <td>STON/O2. 3101282</td>
      <td>7.9250</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>
      <td>female</td>
      <td>35.0</td>
      <td>1</td>
      <td>0</td>
      <td>113803</td>
      <td>53.1000</td>
      <td>C123</td>
      <td>S</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>Allen, Mr. William Henry</td>
      <td>male</td>
      <td>35.0</td>
      <td>0</td>
      <td>0</td>
      <td>373450</td>
      <td>8.0500</td>
      <td>NaN</td>
      <td>S</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 891 entries, 0 to 890
Data columns (total 12 columns):
 #   Column       Non-Null Count  Dtype  
---  ------       --------------  -----  
 0   PassengerId  891 non-null    int64  
 1   Survived     891 non-null    int64  
 2   Pclass       891 non-null    int64  
 3   Name         891 non-null    object 
 4   Sex          891 non-null    object 
 5   Age          714 non-null    float64
 6   SibSp        891 non-null    int64  
 7   Parch        891 non-null    int64  
 8   Ticket       891 non-null    object 
 9   Fare         891 non-null    float64
 10  Cabin        204 non-null    object 
 11  Embarked     889 non-null    object 
dtypes: float64(2), int64(5), object(5)
memory usage: 83.7+ KB
</code></pre>
<br>
<p><strong>"Embarked"를 살펴보기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Unique Value 확인하기</span></span><br><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>S    644
C    168
Q     77
Name: Embarked, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># NA 채우기</span></span><br><span class="line">train[<span class="string">'Embarked'</span>] = train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>S    646
C    168
Q     77
Name: Embarked, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Label Encoding (문자 to 숫자)</span></span><br><span class="line">train[<span class="string">'Embarked_num'</span>] = LabelEncoder().fit_transform(train[<span class="string">'Embarked'</span>])</span><br><span class="line">train[<span class="string">'Embarked_num'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    646
0    168
1     77
Name: Embarked_num, dtype: int64
</code></pre>
<br>
<p>Embarked는 탑승 항구의 이니셜을 나타낸다. 우리는 <code>LabelEncoder</code>를 통해서 값을 수치형으로 변환해주었다, 하지만 이대로 데이터를 기계학습 시키면, 기계는 데이터 안에서 관계를 학습한다.</p>
<p>예를 들면, ‘S’= 2, ‘Q’= 1 이라고 되어 있는데, <code>Q</code>+<code>Q</code>=<code>S</code>가 된다라고 학습해버린다</p>
<p>그렇기 때문에, 우리는 <font color="blue">각 unique value를 별도의 column으로 분리하고, 값에 해당하는 column는 <strong>True (1)</strong>, 나머지 column는 <strong>False (0)</strong> 를 갖게 한다</font>.이것이 바로 <strong>원 핫 인코딩</strong> 이다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>][:<span class="number">6</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    S
1    C
2    S
3    S
4    S
5    Q
Name: Embarked, dtype: object
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">train[<span class="string">'Embarked_num'</span>][:<span class="number">6</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    2
1    0
2    2
3    2
4    2
5    1
Name: Embarked_num, dtype: int32
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">one_hot = pd.get_dummies(train[<span class="string">'Embarked_num'</span>][:<span class="number">6</span>])</span><br><span class="line">one_hot</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">one_hot.columns = [<span class="string">'C'</span>, <span class="string">'Q'</span>, <span class="string">'S'</span>]</span><br><span class="line">one_hot</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>C</th>
      <th>Q</th>
      <th>S</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>원핫인코딩</strong>은 카테고리의 특성을(계절, 항구, 성별, 종류…) 가지는 column에 대해서 적용한다</p>
<p><br>  <br></p>
<h3 id="5-normalize-정규화"><a class="markdownIt-Anchor" href="#5-normalize-정규화"></a> 5. Normalize (정규화)</h3>
<p><strong>정규화:</strong> column간에 다른 min,max 값을 가지는 경우, 정규화를 통해 min / max 의 척도를 맞추어 주는 작업이다</p>
<blockquote>
<p>sklearn.preprocessing  --&gt;  MinMaxScaler()</p>
</blockquote>
  <br>
<p><strong>예: 영화평점</strong></p>
<ul>
<li>네이버 영화평점 (0점 ~ 10점): [2, 4, 6, 8, 10]</li>
<li>넷플릭스 영화평점 (0점 ~ 5점): [1, 2, 3, 4, 5]</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">movie = {<span class="string">'naver'</span>: [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">         <span class="string">'netflix'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">movie = pd.DataFrame(data=movie)</span><br><span class="line">movie</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>naver</th>
      <th>netflix</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>6</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>10</td>
      <td>5</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">min_max_scaler = MinMaxScaler()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">min_max_movie = min_max_scaler.fit_transform(movie)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pd.DataFrame(min_max_movie, columns = [<span class="string">'naver'</span>, <span class="string">'netfllix'</span>])</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>naver</th>
      <th>netfllix</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00</td>
      <td>0.00</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.25</td>
      <td>0.25</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.50</td>
      <td>0.50</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.75</td>
      <td>0.75</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1.00</td>
      <td>1.00</td>
    </tr>
  </tbody>
</table>
</div>
<br>
  <br>
<h3 id="6-standard-scaling-표준화"><a class="markdownIt-Anchor" href="#6-standard-scaling-표준화"></a> 6. Standard Scaling (표준화)</h3>
<p><strong>표준화:</strong> 평균이 0, 표준편차가 1이 되도록 변환해주는 작업</p>
<blockquote>
<p>sklearn.preprocessing  --&gt;  StandardScaler()</p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">standard_scaler = StandardScaler()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 샘플데이터 생성</span></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x[<span class="number">9</span>] = <span class="number">1000</span>   <span class="comment"># oulier 추가</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x.mean(), x.std()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(103.6, 298.8100399919654)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 원본 데이터 표준화하기</span></span><br><span class="line">scaled = standard_scaler.fit_transform(x.reshape(<span class="number">-1</span>, <span class="number">1</span>))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">scaled.mean(), scaled.std()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4.4408920985006264e-17, 1.0)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">round(scaled.mean(), <span class="number">2</span>), scaled.std()  <span class="comment"># mean값 반올림</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>(0.0, 1.0)
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>전처리</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (2) 분류 (Classification)</title>
    <url>/2020/07/26/S-Python-sklearn2/</url>
    <content><![CDATA[<h1 id="분류-classification"><a class="markdownIt-Anchor" href="#분류-classification"></a> <strong>분류 (Classification)</strong></h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B"><strong>0. 데이터 셋</strong></a>
<ul>
<li><a href="#0-1-iris-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B">0-1. iris 데이터 셋</a></li>
<li><a href="#0-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0">0-2. 데이터프레임 만들기</a></li>
<li><a href="#0-3-%EC%8B%9C%EA%B0%81%ED%99%94%EB%A1%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0">0-3. 시각화로 데이터셋 파악하기</a></li>
</ul>
</li>
<li><a href="#1-training-set-validation-set-%EB%82%98%EB%88%84%EA%B8%B0"><strong>1. training set / validation set 나누기</strong></a></li>
<li><a href="#2-%ED%95%98%EC%9D%B4%ED%8D%BC-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-hyper-parameter-%ED%8A%9C%EB%8B%9D"><strong>2. 하이퍼 파라미터 (hyper-parameter) 튜닝</strong></a></li>
<li><a href="#3-%EB%B6%84%EB%A5%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"><strong>3. 분류 알고리즘</strong></a>
<ul>
<li><a href="#3-1-logistic-regression">3-1. Logistic Regression</a></li>
<li><a href="#3-2-sgd-sgdclassifier">3-2. SGD (SGDClassifier)</a></li>
<li><a href="#3-3-knn-kneighborsclassifier">3-3. KNN (KNeighborsClassifier)</a></li>
<li><a href="#3-4-svm-svc">3-4. SVM (SVC)</a></li>
<li><a href="#3-5-decision-tree-decisiontreeclassifier">3-5. Decision Tree (DecisionTreeClassifier)</a>
<ul>
<li><a href="#1-decision-tree-%EC%9D%98%EC%82%AC-%EA%B2%B0%EC%A0%95-%EB%82%98%EB%AC%B4-%EB%82%98%EB%AC%B4-%EA%B0%80%EC%A7%80%EC%B9%98%EA%B8%B0%EB%A5%BC-%ED%86%B5%ED%95%B4-%EC%86%8C%EA%B7%B8%EB%A3%B9%EC%9C%BC%EB%A1%9C-%EB%82%98%EB%88%84%EC%96%B4-%ED%8C%90%EB%B3%84%ED%95%98%EB%8A%94%EA%B2%83">1. Decision Tree (의사 결정 나무): 나무 가지치기를 통해 소그룹으로 나누어 판별하는것</a></li>
<li><a href="#2-decision-tree-%EB%B6%84%EB%A5%98-%EA%B2%B0%EA%B3%BC-%EC%8B%9C%EA%B0%81%ED%99%94">2. Decision Tree 분류 결과 시각화</a></li>
<li><a href="#3-%EA%B0%80%EC%A7%80-%EC%B9%98%EA%B8%B0-pruning">3. 가지 치기 (pruning)</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C"><strong>4. 모델 성능 평가 지표</strong></a>
<ul>
<li><a href="#4-1-%EC%98%A4%EC%B0%A8-%ED%96%89%EB%A0%AC-confusion-matrix">4-1. 오차 행렬 (Confusion Matrix)</a></li>
<li><a href="#4-2-%EC%A0%95%ED%99%95%EB%8F%84-accuracy">4-2. 정확도 (Accuracy)</a></li>
<li><a href="#4-3-%EC%A0%95%EB%B0%80%EB%8F%84-precision">4-3. 정밀도 (Precision)</a></li>
<li><a href="#4-4-%EB%AF%BC%EA%B0%90%EB%8F%84-sensitivity-%EC%9E%AC%ED%98%84%EC%9C%A8-recall">4-4. 민감도 (Sensitivity)  /  재현율 (Recall)</a></li>
<li><a href="#4-5-%ED%8A%B9%EC%9D%B4%EB%8F%84-specificity">4-5. 특이도 (Specificity)</a></li>
<li><a href="#4-6-f1-score">4-6. F1 Score</a></li>
<li></li>
</ul>
</li>
</ul>
<p></p>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>) <span class="comment"># 불필요한 경고 출력을 방지함</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="0-데이터-셋"><a class="markdownIt-Anchor" href="#0-데이터-셋"></a> <strong>0. 데이터 셋</strong></h2>
<p><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.datasets" target="_blank" rel="noopener">sklearn.dataset</a> 에서 제공해주는 다양한 샘플 데이터를 활용한다</p>
<p>여기서는 iris 데이터 셋을 활용한다</p>
 <br> 
<h3 id="0-1-iris-데이터-셋"><a class="markdownIt-Anchor" href="#0-1-iris-데이터-셋"></a> 0-1. iris 데이터 셋</h3>
<p><strong>Mission:</strong> 꽃 종류 분류하기</p>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html#sklearn.datasets.load_iris" target="_blank" rel="noopener">iris 데이터 셋</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># iris 데이터 셋 로드</span></span><br><span class="line">iris = load_iris()</span><br></pre></td></tr></tbody></table></figure>
 <br>
<p><strong>iris 데이터 셋 구성 (key values):</strong></p>
<ul>
<li>
<p><code>DESCR</code>: 데이터 셋의 정보를 보여줌</p>
</li>
<li>
<p><code>data</code>: feature data</p>
</li>
<li>
<p><code>feature_names</code>: feature data의 컬럼 이름</p>
</li>
<li>
<p><code>target</code>: label data (수치형)</p>
</li>
<li>
<p><code>target_names</code>: label data의 value 이름 (문자형)</p>
 <br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 데이터 셋 정보 확인하기</span></span><br><span class="line">print(iris[<span class="string">'DESCR'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _iris_dataset:

Iris plants dataset
--------------------

**Data Set Characteristics:**

    :Number of Instances: 150 (50 in each of three classes)
    :Number of Attributes: 4 numeric, predictive attributes and the class
    :Attribute Information:
        - sepal length in cm
        - sepal width in cm
        - petal length in cm
        - petal width in cm
        - class:
                - Iris-Setosa
                - Iris-Versicolour
                - Iris-Virginica
                
    :Summary Statistics:

    ============== ==== ==== ======= ===== ====================
                    Min  Max   Mean    SD   Class Correlation
    ============== ==== ==== ======= ===== ====================
    sepal length:   4.3  7.9   5.84   0.83    0.7826
    sepal width:    2.0  4.4   3.05   0.43   -0.4194
    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)
    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)
    ============== ==== ==== ======= ===== ====================

    :Missing Attribute Values: None
    :Class Distribution: 33.3% for each of 3 classes.
    :Creator: R.A. Fisher
    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)
    :Date: July, 1988

The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken
from Fisher's paper. Note that it's the same as in R, but not as in the UCI
Machine Learning Repository, which has two wrong data points.

This is perhaps the best known database to be found in the
pattern recognition literature.  Fisher's paper is a classic in the field and
is referenced frequently to this day.  (See Duda &amp; Hart, for example.)  The
data set contains 3 classes of 50 instances each, where each class refers to a
type of iris plant.  One class is linearly separable from the other 2; the
latter are NOT linearly separable from each other.

.. topic:: References

   - Fisher, R.A. "The use of multiple measurements in taxonomic problems"
     Annual Eugenics, 7, Part II, 179-188 (1936); also in "Contributions to
     Mathematical Statistics" (John Wiley, NY, 1950).
   - Duda, R.O., &amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis.
     (Q327.D83) John Wiley &amp; Sons.  ISBN 0-471-22361-1.  See page 218.
   - Dasarathy, B.V. (1980) "Nosing Around the Neighborhood: A New System
     Structure and Classification Rule for Recognition in Partially Exposed
     Environments".  IEEE Transactions on Pattern Analysis and Machine
     Intelligence, Vol. PAMI-2, No. 1, 67-71.
   - Gates, G.W. (1972) "The Reduced Nearest Neighbor Rule".  IEEE Transactions
     on Information Theory, May 1972, 431-433.
   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al"s AUTOCLASS II
     conceptual clustering system finds 3 classes in the data.
   - Many, many more ...
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># data 불러오기</span></span><br><span class="line">data = iris[<span class="string">'data'</span>]</span><br><span class="line">data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[5.1, 3.5, 1.4, 0.2],
       [4.9, 3. , 1.4, 0.2],
       [4.7, 3.2, 1.3, 0.2],
       [4.6, 3.1, 1.5, 0.2],
       [5. , 3.6, 1.4, 0.2]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># feature names 확인하기</span></span><br><span class="line">feature_names = iris[<span class="string">'feature_names'</span>]</span><br><span class="line">feature_names</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['sepal length (cm)',
 'sepal width (cm)',
 'petal length (cm)',
 'petal width (cm)']
</code></pre>
<p><strong>[해석]</strong> sepal: 꽃 받침;  petal: 꽃잎</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># label data 확인하기</span></span><br><span class="line">target = iris[<span class="string">'target'</span>]</span><br><span class="line">target[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 0, 0, 0, 0])
</code></pre>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># target names 확인하기</span></span><br><span class="line">iris[<span class="string">'target_names'</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['setosa', 'versicolor', 'virginica'], dtype='&lt;U10')
</code></pre>
<br>
<h3 id="0-2-데이터프레임-만들기"><a class="markdownIt-Anchor" href="#0-2-데이터프레임-만들기"></a> 0-2. 데이터프레임 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># feature data 먼저 생성하기</span></span><br><span class="line">df_iris = pd.DataFrame(data, columns = feature_names)</span><br><span class="line">df_iris.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># target column 추가하기</span></span><br><span class="line">df_iris[<span class="string">'target'</span>] = target</span><br><span class="line">df_iris.head()  <span class="comment"># 최종 dataframe</span></span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h3 id="0-3-시각화로-데이터셋-파악하기"><a class="markdownIt-Anchor" href="#0-3-시각화로-데이터셋-파악하기"></a> 0-3. 시각화로 데이터셋 파악하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<p><strong>1. Sepal data로 보는 꽃 종류</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df_iris.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)',
       'petal width (cm)', 'target'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(<span class="string">'sepal width (cm)'</span>, <span class="string">'sepal length (cm)'</span>, hue=<span class="string">'target'</span>, palette=<span class="string">'muted'</span>, data=df_iris)</span><br><span class="line">plt.title(<span class="string">'Sepal'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_32_0.png" alt="png"></p>
<br>
<p><strong>2. petal data로 보는 꽃 종류</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.scatterplot(<span class="string">'petal width (cm)'</span>, <span class="string">'petal length (cm)'</span>, hue=<span class="string">'target'</span>, palette=<span class="string">'muted'</span>, data=df_iris)</span><br><span class="line">plt.title(<span class="string">'Petal'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_35_0.png" alt="png"></p>
<br>
<p><strong>3. 3D plot로 보는 꽃 종류 (PCA 이용)</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">ax = Axes3D(fig, elev=<span class="number">-150</span>, azim=<span class="number">110</span>)</span><br><span class="line">X_reduced = PCA(n_components=<span class="number">3</span>).fit_transform(df_iris.drop(<span class="string">'target'</span>, <span class="number">1</span>))</span><br><span class="line">ax.scatter(X_reduced[:, <span class="number">0</span>], X_reduced[:, <span class="number">1</span>], X_reduced[:, <span class="number">2</span>], c=df_iris[<span class="string">'target'</span>],</span><br><span class="line">           cmap=plt.cm.Set1, edgecolor=<span class="string">'k'</span>, s=<span class="number">40</span>)</span><br><span class="line">ax.set_title(<span class="string">"Iris 3D"</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">"x"</span>)</span><br><span class="line">ax.w_xaxis.set_ticklabels([])</span><br><span class="line">ax.set_ylabel(<span class="string">"y"</span>)</span><br><span class="line">ax.w_yaxis.set_ticklabels([])</span><br><span class="line">ax.set_zlabel(<span class="string">"z"</span>)</span><br><span class="line">ax.w_zaxis.set_ticklabels([])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_38_0.png" alt="png"></p>
<br>
<br>
<h2 id="1-training-set-validation-set-나누기"><a class="markdownIt-Anchor" href="#1-training-set-validation-set-나누기"></a> <strong>1. training set / validation set 나누기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(df_iris.drop(<span class="string">'target'</span>, <span class="number">1</span>), df_iris[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((112, 4), (112,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((38, 4), (38,))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1cb7aaaeec8&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn2/output_46_1.png" alt="png"></p>
<p>'target’값이 0, 1, 2인 데이터가 Original dataset으로 부터 랜덤으로 뽑히기 때문에 <strong>비율의 차이가 존재</strong>할 수 있다. 따라서 기계학습할 때 <strong>sample size가 큰 데이터 위주로 학습</strong>하여 모델의 <strong>예측성능이 떨어질</strong> 수 있다. (위 상황에서, 학습된 머신러닝 모델이 sample size가 큰 target=1인 경우를 좀 더 잘 예측하고, target=2에 대한 예측도가 떨어질 수 있다)</p>
<p>이를 방지하기 위해 우리는 <strong><code>stratify</code>옵션</strong>을 이용하여 label의 class 분포를 균등하게 배분한다.</p>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(df_iris.drop(<span class="string">'target'</span>, <span class="number">1</span>), df_iris[<span class="string">'target'</span>], stratify=df_iris[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1cb7b17b508&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn2/output_50_1.png" alt="png"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((112, 4), (112,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((38, 4), (38,))
</code></pre>
<br>
  <br>
<h2 id="2-하이퍼-파라미터-hyper-parameter-튜닝"><a class="markdownIt-Anchor" href="#2-하이퍼-파라미터-hyper-parameter-튜닝"></a> <strong>2. 하이퍼 파라미터 (hyper-parameter) 튜닝</strong></h2>
<p>모델 학습할 때 설정 한 옵션들은 **하이퍼 파라미터 (hyper-parameter)**라고 한다. 설정한 값에 따라 모델 성능도 달라질 수 있다.</p>
<p>각 알고리즘 별, hyper-parameter의 종류가 매우 다양하다. 다음 두 가지 parameter는 기본적으로 설정해주는 것이 좋다:</p>
<ul>
<li>
<p>random_state: sampling seed 설정 (항상 동일하게 sampling 하기)</p>
</li>
<li>
<p>n_jobs=-1: CPU를 모두 사용 (학습속도가 빠름)</p>
<br>
</li>
</ul>
<h2 id="3-분류-알고리즘"><a class="markdownIt-Anchor" href="#3-분류-알고리즘"></a> <strong>3. 분류 알고리즘</strong></h2>
<h3 id="3-1-logistic-regression"><a class="markdownIt-Anchor" href="#3-1-logistic-regression"></a> 3-1. Logistic Regression</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regression#sklearn.linear_model.LogisticRegression" target="_blank" rel="noopener">[sklearn.linear_model.<strong>LogisticRegression</strong>] Document</a></p>
</blockquote>
<p>Logistic Regression, SVM(Support Vector Machine)과 같은 알고리즘은 <strong>이진(Binary Class) 분류만 가능</strong>한다. (2개의 클래스 판별만 가능한다.)</p>
<p>하지만, <strong>3개 이상의 클래스에 대한 판별</strong> **[다중 클래스(Multi-Class) 분류]**을 진행하는 경우, 다음과 같은 전략으로 판별한다.</p>
<ul>
<li>
<p><strong>one-vs-one (OvO)</strong>:   K 개의 클래스가 존재할 때, 이 중 2개의 클래스 조합을 선택하여  <font color="blue">K(K−1)/2 개</font>의 이진 클래스 분류 문제를 풀고 이진판별을 통해 가장 많은 판별값을 얻은 클래스를 선택하는 방법이다.</p>
</li>
<li>
<p><strong>one-vs-rest (OvR)</strong>: K 개의 클래스가 존재할 때, 클래스들을 “k번째 클래스(one)” &amp; "나머지(rest)"로 나누어서 <font color="blue">K개</font>의 개별 이진 분류 문제를 푼다. 즉, 각각의 클래스에 대해 표본이 속하는지(y=1) 속하지 않는지(y=0)의 이진 분류 문제를 푸는 것이다. OvO와 달리 클래스 수만큼의 이진 분류 문제를 풀면 된다.</p>
</li>
</ul>
<p>대부분 <strong>OvsR 전략을 선호</strong>합니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 1: 모델 선언</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr = LogisticRegression(random_state=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 2: 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=100,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
</code></pre>
<p><strong>step 3: 예측</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction = lr.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 2, 0])
</code></pre>
<p><strong>step 4: 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(prediction == y_valid).mean()  <span class="comment"># 정확도</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
 <br> 
<h3 id="3-2-sgd-sgdclassifier"><a class="markdownIt-Anchor" href="#3-2-sgd-sgdclassifier"></a> 3-2. SGD (SGDClassifier)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html" target="_blank" rel="noopener">[sklearn.linear_model.<strong>SGDClassifier</strong>] Document</a></p>
</blockquote>
<p><strong>stochastic gradient descent (SGD):</strong> 확률적 경사 하강법</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 출처: https://machinelearningnotepad.wordpress.com/</span></span><br><span class="line">Image(<span class="string">'https://machinelearningnotepad.files.wordpress.com/2018/04/yk1mk.png'</span>, width=<span class="number">500</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_80_0.png" alt="png" style="zoom: 33%;">
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> SGDClassifier</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 1: 모델 선언</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd = SGDClassifier(random_state=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 2: 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=None, penalty='l2',
              power_t=0.5, random_state=0, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
</code></pre>
<p><strong>step 3: 예측</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction = sgd.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<p><strong>step 4: 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(prediction == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
 <br> 
<p><strong>Change hyper-parameter values:</strong></p>
<p>e.g.: penalty = ‘l1’, random_state = 1, n_jobs = -1</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd2 = SGDClassifier(penalty=<span class="string">'l1'</span>, random_state=<span class="number">1</span>, n_jobs=<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sgd2.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l1',
              power_t=0.5, random_state=1, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">prediction2 = sgd2.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(prediction2 == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1.0
</code></pre>
 <br> 
<h3 id="3-3-knn-kneighborsclassifier"><a class="markdownIt-Anchor" href="#3-3-knn-kneighborsclassifier"></a> 3-3. KNN (KNeighborsClassifier)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html" target="_blank" rel="noopener">[sklearn.neighbors.<strong>KNeighborsClassifier</strong>] Document</a></p>
</blockquote>
<p><strong>KNN (K Nearest Neighbors):</strong> K 최근접 이웃 알고리즘</p>
<p>새로운 데이터의 분류 결과가 K 개 최근접 이웃의 클래스에 의해서 결정되며, 데이터는 가장 많이 할당되는 클래스로 분류하게 된다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 출처: 데이터 캠프</span></span><br><span class="line">Image(<span class="string">'https://res.cloudinary.com/dyd911kmh/image/upload/f_auto,q_auto:best/v1531424125/KNN_final_a1mrv9.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_102_0.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 모델 선언</span></span><br><span class="line">knn = KNeighborsClassifier()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 2. 모델 학습</span></span><br><span class="line">knn.fit(x_train, y_train)  <span class="comment"># default: n_neighbors=5</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 3. 예측</span></span><br><span class="line">prediction = knn.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 4. 평가</span></span><br><span class="line">(prediction == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9210526315789473
</code></pre>
  <br>
<p>n_neighnors를 9개로 설정하여 다시 예측해본다:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">knn2 = KNeighborsClassifier(n_neighbors=<span class="number">9</span>)</span><br><span class="line">knn2.fit(x_train, y_train)</span><br><span class="line">knn2_pred = knn2.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(knn2_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
<br>  
<h3 id="3-4-svm-svc"><a class="markdownIt-Anchor" href="#3-4-svm-svc"></a> 3-4. SVM (SVC)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC" target="_blank" rel="noopener">[sklearn.svm.<strong>SVC</strong>] Document</a></p>
</blockquote>
<ul>
<li>새로운 데이터가 어느 카테고리에 속할지 판단하는 비확률적 이진 선형 분류 모델을 만듦.</li>
<li>경계로 표현되는 데이터들 중 가장 큰 폭을 가진 경계를 찾는 알고리즘.</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://csstudy.files.wordpress.com/2011/03/screen-shot-2011-02-28-at-5-53-26-pm.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_117_0.png" alt="png"></p>
<br>
<p>SVM은 Logistic Regression과 같이 이진 분류만 가능하다. (2개의 클래스 판별만 가능)<br>
3개 이상의 클래스인 경우: <strong>OvsR 전략</strong> 사용</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC  <span class="comment"># SVC: Support Vector Classification</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc = SVC(random_state=<span class="number">0</span>)</span><br><span class="line">svc.fit(x_train, y_train)</span><br><span class="line">svc_pred = svc.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc  <span class="comment"># hyper-parameter 확인</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma='scale', kernel='rbf',
    max_iter=-1, probability=False, random_state=0, shrinking=True, tol=0.001,
    verbose=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(svc_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9473684210526315
</code></pre>
<br>
<p>각 클래스 별 확률값을 return해주는 <code>decision_function()</code></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc.decision_function(x_valid)[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 2.22273426,  1.18194657, -0.25426485],
       [-0.22060229,  2.23192595,  0.91725911],
       [-0.23638817,  1.18969144,  2.17593611],
       [-0.23457057,  1.07146337,  2.22588253],
       [ 2.22808358,  1.16872302, -0.25381783]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svc_pred[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0, 1, 2, 2, 0])
</code></pre>
<p><strong>확률값이 제일 높은 클래스</strong>로 분류(예측) 된 것을 확인하실 수 있다</p>
<br>  
<h3 id="3-5-decision-tree-decisiontreeclassifier"><a class="markdownIt-Anchor" href="#3-5-decision-tree-decisiontreeclassifier"></a> 3-5. Decision Tree (DecisionTreeClassifier)</h3>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html?highlight=decision%20tree#sklearn.tree.DecisionTreeClassifier" target="_blank" rel="noopener">[sklearn.tree.<strong>DecisionTreeClassifier</strong>] Document</a></p>
</blockquote>
<h4 id="1-decision-tree-의사-결정-나무-나무-가지치기를-통해-소그룹으로-나누어-판별하는것"><a class="markdownIt-Anchor" href="#1-decision-tree-의사-결정-나무-나무-가지치기를-통해-소그룹으로-나누어-판별하는것"></a> 1. Decision Tree (의사 결정 나무): 나무 가지치기를 통해 소그룹으로 나누어 판별하는것</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://www.researchgate.net/profile/Ludmila_Aleksejeva/publication/293194222/figure/fig1/AS:669028842487827@1536520314657/Decision-tree-for-Iris-dataset.png'</span>, width=<span class="number">500</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_132_0.png" alt="png" style="zoom: 67%;">
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">dt = DecisionTreeClassifier(random_state=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">dt.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=0, splitter='best')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">dt_pred = dt.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(dt_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9210526315789473
</code></pre>
<br>  
<h4 id="2-decision-tree-분류-결과-시각화"><a class="markdownIt-Anchor" href="#2-decision-tree-분류-결과-시각화"></a> 2. Decision Tree 분류 결과 시각화</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> export_graphviz</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>방법 1:</strong> <code>pydot</code>을 사용하여 "<em>dot</em> 파일"을 "<em>png</em> 이미지"로 전환 (<a href="https://niceman.tistory.com/169" target="_blank" rel="noopener">참고</a>)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install pydot</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Collecting pydotNote: you may need to restart the kernel to use updated packages.
  Downloading pydot-1.4.1-py2.py3-none-any.whl (19 kB)
Requirement already satisfied: pyparsing&gt;=2.1.4 in d:\anaconda\lib\site-packages (from pydot) (2.4.6)
Installing collected packages: pydot
Successfully installed pydot-1.4.1
</code></pre>
<p>​    <br></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 참고: https://niceman.tistory.com/169</span></span><br><span class="line"><span class="keyword">import</span> pydot</span><br><span class="line"></span><br><span class="line"><span class="comment"># .dot결과 생성</span></span><br><span class="line">export_graphviz(dt, out_file=<span class="string">'tree.dot'</span>, feature_names=feature_names, class_names=np.unique(iris[<span class="string">'target_names'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Encoding</span></span><br><span class="line">(graph,) = pydot.graph_from_dot_file(<span class="string">'tree.dot'</span>, encoding=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># .dot파일을 .png이미지로 저장</span></span><br><span class="line">graph.write_png(<span class="string">'tree.png'</span>)</span><br><span class="line"></span><br><span class="line">Image(filename = <span class="string">'tree.png'</span>, width=<span class="number">600</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_144_0.png" alt="png" style="zoom: 80%;">
  <br>
 <br>
<p><strong>방법 2:</strong> <code>graphviz.Source</code>이용 (<a href="https://www.kaggle.com/praanj/titanic-decision-tree-complete-evaluation" target="_blank" rel="noopener">참고</a>)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install -U graphviz</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Requirement already up-to-date: graphviz in d:\anaconda\lib\site-packages (0.14.1)
Note: you may need to restart the kernel to use updated packages.
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> graphviz</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 참고: https://www.kaggle.com/vaishvik25/titanic-eda-fe-3-model-decision-tree-viz</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier, export_graphviz</span><br><span class="line"></span><br><span class="line">tree_dot = export_graphviz(dt,out_file=<span class="literal">None</span>, feature_names=feature_names, class_names=np.unique(iris[<span class="string">'target_names'</span>]))</span><br><span class="line">tree = graphviz.Source(tree_dot)</span><br><span class="line">tree</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn2/output_149_0.svg" alt="svg" style="zoom: 80%;">
 <br>
<p><strong>gini계수:</strong> 불순도를 의미함. gini계수가 높을 수록 엔트로피(Entropy)가 큼. 즉, 클래스가 혼잡하게 섞여 있음.</p>
  <br>
<h4 id="3-가지-치기-pruning"><a class="markdownIt-Anchor" href="#3-가지-치기-pruning"></a> 3. 가지 치기 (pruning)</h4>
<p>Overfitting을 방지하기 위해 적당히 가지 치기를 진행한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 수동으로 max_depth 설정</span></span><br><span class="line">dt2 = DecisionTreeClassifier(max_depth=<span class="number">2</span>)</span><br><span class="line">dt2.fit(x_train, y_train)</span><br><span class="line">dt2_pred = dt2.predict(x_valid)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">(dt2_pred == y_valid).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9210526315789473
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">tree2_dot = export_graphviz(dt2,out_file=<span class="literal">None</span>, feature_names=feature_names, class_names=np.unique(iris[<span class="string">'target_names'</span>]))</span><br><span class="line">tree2 = graphviz.Source(tree2_dot)</span><br><span class="line">tree2</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_156_0.svg" alt="svg"></p>
  <br>
  <br>
<h2 id="4-모델-성능-평가-지표"><a class="markdownIt-Anchor" href="#4-모델-성능-평가-지표"></a> <strong>4. 모델 성능 평가 지표</strong></h2>
<blockquote>
<p>참고자료: <a href="https://sumniya.tistory.com/26" target="_blank" rel="noopener">분류성능평가지표 - Precision(정밀도), Recall(재현율) and Accuracy(정확도)</a></p>
</blockquote>
<h3 id="4-1-오차-행렬-confusion-matrix"><a class="markdownIt-Anchor" href="#4-1-오차-행렬-confusion-matrix"></a> 4-1. 오차 행렬 (Confusion Matrix)</h3>
<img src="/images/S-Python-sklearn2/a9psOK.png" alt="confusion_matrix" style="zoom: 67%;">
  <br>
<h3 id="4-2-정확도-accuracy"><a class="markdownIt-Anchor" href="#4-2-정확도-accuracy"></a> 4-2. 정확도 (Accuracy)</h3>
<p><strong>정확도 (Accuracy):</strong> 모델이 샘플을 올바르게 예측하는 비율</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>c</mi><mi>c</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Accuracy = \frac{TP+TN}{TP+FP+TN+FN}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">c</span><span class="mord mathdefault">c</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
 <br> 
<p><strong>!!정확도의 함정!!</strong></p>
<p>정확도는 모델의 성능을 가장 지관적으로 나타낼 수 있는 평가 지표다. 하지만, 만약 Actual positive sample과 Actual negative sample의 비율이 차이가 많이 나면 <strong>정확도의 함정</strong>에 빠질 수 있다.</p>
<p>즉, <em><strong>모두 positive / negative로 예측</strong></em> 했을 때 모델의 정확도가 매우 높은 경우다. 이 경우에 <font color="blue"><strong>예측 정확도가 높지만, 모델의 예측 성능이 좋다라고 말할 수는 없다.</strong></font></p>
  <br>
<p>유방암 환자 데이터셋을 이용하여 한번 이해해 볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_breast_cancer</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">cancer = load_breast_cancer(유방암 환자 데이터셋)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(cancer[<span class="string">'DESCR'</span>])  <span class="comment"># describe</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _breast_cancer_dataset:

Breast cancer wisconsin (diagnostic) dataset
--------------------------------------------

**Data Set Characteristics:**

    :Number of Instances: 569

    :Number of Attributes: 30 numeric, predictive attributes and the class

    :Attribute Information:
        - radius (mean of distances from center to points on the perimeter)
        - texture (standard deviation of gray-scale values)
        - perimeter
        - area
        - smoothness (local variation in radius lengths)
        - compactness (perimeter^2 / area - 1.0)
        - concavity (severity of concave portions of the contour)
        - concave points (number of concave portions of the contour)
        - symmetry 
        - fractal dimension ("coastline approximation" - 1)

        The mean, standard error, and "worst" or largest (mean of the three
        largest values) of these features were computed for each image,
        resulting in 30 features.  For instance, field 3 is Mean Radius, field
        13 is Radius SE, field 23 is Worst Radius.

        - class:
                - WDBC-Malignant
                - WDBC-Benign

    :Summary Statistics:

    ===================================== ====== ======
                                           Min    Max
    ===================================== ====== ======
    radius (mean):                        6.981  28.11
    texture (mean):                       9.71   39.28
    perimeter (mean):                     43.79  188.5
    area (mean):                          143.5  2501.0
    smoothness (mean):                    0.053  0.163
    compactness (mean):                   0.019  0.345
    concavity (mean):                     0.0    0.427
    concave points (mean):                0.0    0.201
    symmetry (mean):                      0.106  0.304
    fractal dimension (mean):             0.05   0.097
    radius (standard error):              0.112  2.873
    texture (standard error):             0.36   4.885
    perimeter (standard error):           0.757  21.98
    area (standard error):                6.802  542.2
    smoothness (standard error):          0.002  0.031
    compactness (standard error):         0.002  0.135
    concavity (standard error):           0.0    0.396
    concave points (standard error):      0.0    0.053
    symmetry (standard error):            0.008  0.079
    fractal dimension (standard error):   0.001  0.03
    radius (worst):                       7.93   36.04
    texture (worst):                      12.02  49.54
    perimeter (worst):                    50.41  251.2
    area (worst):                         185.2  4254.0
    smoothness (worst):                   0.071  0.223
    compactness (worst):                  0.027  1.058
    concavity (worst):                    0.0    1.252
    concave points (worst):               0.0    0.291
    symmetry (worst):                     0.156  0.664
    fractal dimension (worst):            0.055  0.208
    ===================================== ====== ======

    :Missing Attribute Values: None

    :Class Distribution: 212 - Malignant, 357 - Benign

    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian

    :Donor: Nick Street

    :Date: November, 1995

This is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.
https://goo.gl/U2Uwz2

Features are computed from a digitized image of a fine needle
aspirate (FNA) of a breast mass.  They describe
characteristics of the cell nuclei present in the image.

Separating plane described above was obtained using
Multisurface Method-Tree (MSM-T) [K. P. Bennett, "Decision Tree
Construction Via Linear Programming." Proceedings of the 4th
Midwest Artificial Intelligence and Cognitive Science Society,
pp. 97-101, 1992], a classification method which uses linear
programming to construct a decision tree.  Relevant features
were selected using an exhaustive search in the space of 1-4
features and 1-3 separating planes.

The actual linear program used to obtain the separating plane
in the 3-dimensional space is that described in:
[K. P. Bennett and O. L. Mangasarian: "Robust Linear
Programming Discrimination of Two Linearly Inseparable Sets",
Optimization Methods and Software 1, 1992, 23-34].

This database is also available through the UW CS ftp server:

ftp ftp.cs.wisc.edu
cd math-prog/cpo-dataset/machine-learn/WDBC/

.. topic:: References

   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction 
     for breast tumor diagnosis. IS&amp;T/SPIE 1993 International Symposium on 
     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,
     San Jose, CA, 1993.
   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and 
     prognosis via linear programming. Operations Research, 43(4), pages 570-577, 
     July-August 1995.
   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques
     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) 
     163-171.
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = cancer[<span class="string">'data'</span>]</span><br><span class="line">target = cancer[<span class="string">'target'</span>]</span><br><span class="line">feature_names = cancer[<span class="string">'feature_names'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 데이터 프레임 생성</span></span><br><span class="line">df = pd.DataFrame(data = data, columns = feature_names)</span><br><span class="line">df[<span class="string">'target'</span>] = target</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mean radius</th>
      <th>mean texture</th>
      <th>mean perimeter</th>
      <th>mean area</th>
      <th>mean smoothness</th>
      <th>mean compactness</th>
      <th>mean concavity</th>
      <th>mean concave points</th>
      <th>mean symmetry</th>
      <th>mean fractal dimension</th>
      <th>...</th>
      <th>worst texture</th>
      <th>worst perimeter</th>
      <th>worst area</th>
      <th>worst smoothness</th>
      <th>worst compactness</th>
      <th>worst concavity</th>
      <th>worst concave points</th>
      <th>worst symmetry</th>
      <th>worst fractal dimension</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>17.99</td>
      <td>10.38</td>
      <td>122.80</td>
      <td>1001.0</td>
      <td>0.11840</td>
      <td>0.27760</td>
      <td>0.3001</td>
      <td>0.14710</td>
      <td>0.2419</td>
      <td>0.07871</td>
      <td>...</td>
      <td>17.33</td>
      <td>184.60</td>
      <td>2019.0</td>
      <td>0.1622</td>
      <td>0.6656</td>
      <td>0.7119</td>
      <td>0.2654</td>
      <td>0.4601</td>
      <td>0.11890</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20.57</td>
      <td>17.77</td>
      <td>132.90</td>
      <td>1326.0</td>
      <td>0.08474</td>
      <td>0.07864</td>
      <td>0.0869</td>
      <td>0.07017</td>
      <td>0.1812</td>
      <td>0.05667</td>
      <td>...</td>
      <td>23.41</td>
      <td>158.80</td>
      <td>1956.0</td>
      <td>0.1238</td>
      <td>0.1866</td>
      <td>0.2416</td>
      <td>0.1860</td>
      <td>0.2750</td>
      <td>0.08902</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>19.69</td>
      <td>21.25</td>
      <td>130.00</td>
      <td>1203.0</td>
      <td>0.10960</td>
      <td>0.15990</td>
      <td>0.1974</td>
      <td>0.12790</td>
      <td>0.2069</td>
      <td>0.05999</td>
      <td>...</td>
      <td>25.53</td>
      <td>152.50</td>
      <td>1709.0</td>
      <td>0.1444</td>
      <td>0.4245</td>
      <td>0.4504</td>
      <td>0.2430</td>
      <td>0.3613</td>
      <td>0.08758</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>11.42</td>
      <td>20.38</td>
      <td>77.58</td>
      <td>386.1</td>
      <td>0.14250</td>
      <td>0.28390</td>
      <td>0.2414</td>
      <td>0.10520</td>
      <td>0.2597</td>
      <td>0.09744</td>
      <td>...</td>
      <td>26.50</td>
      <td>98.87</td>
      <td>567.7</td>
      <td>0.2098</td>
      <td>0.8663</td>
      <td>0.6869</td>
      <td>0.2575</td>
      <td>0.6638</td>
      <td>0.17300</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>20.29</td>
      <td>14.34</td>
      <td>135.10</td>
      <td>1297.0</td>
      <td>0.10030</td>
      <td>0.13280</td>
      <td>0.1980</td>
      <td>0.10430</td>
      <td>0.1809</td>
      <td>0.05883</td>
      <td>...</td>
      <td>16.67</td>
      <td>152.20</td>
      <td>1575.0</td>
      <td>0.1374</td>
      <td>0.2050</td>
      <td>0.4000</td>
      <td>0.1625</td>
      <td>0.2364</td>
      <td>0.07678</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 31 columns</p>
</div>
</div>
<br>
<p><strong>target:</strong> 0: Malignant (악성종양);  1: Benign (양성종양)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pos = df.loc[df[<span class="string">'target'</span>] == <span class="number">1</span>] <span class="comment"># 앙성 sample</span></span><br><span class="line">neg = df.loc[df[<span class="string">'target'</span>] == <span class="number">0</span>] <span class="comment"># 음성 sample</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pos.shape, neg.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((357, 31), (212, 31))
</code></pre>
<br>
<p><strong>시범용 sample data를 생성:</strong> 양성 환자 357 + 음성 환자 5</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sample = pd.concat([pos, neg[:<span class="number">5</span>]], sort=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(sample.drop(<span class="string">'target'</span>,<span class="number">1</span>), sample[<span class="string">'target'</span>], random_state=<span class="number">42</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((271, 30), (271,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((91, 30), (91,))
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모델 정의 및 학습</span></span><br><span class="line">model = LogisticRegression()</span><br><span class="line">model.fit(x_train, y_train)</span><br><span class="line">model_pred = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<ul>
<li>Confusion Matrix</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">confusion_matrix(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 1,  0],
       [ 2, 88]], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.heatmap(confusion_matrix(y_test, model_pred), annot=<span class="literal">True</span>, cmap=<span class="string">'Reds'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Predict'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Actual'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn2/output_192_0.png" alt="png"></p>
<br>
<ul>
<li>정확도 (Accuracy)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># logistic 모델 정확도</span></span><br><span class="line">(model_pred == y_test).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.978021978021978
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모두 양성으로 예측한 경우</span></span><br><span class="line">my_pred = np.ones(shape=y_test.shape)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 정확도</span></span><br><span class="line">(my_pred == y_test).mean()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.989010989010989
</code></pre>
<p>정확도만 놓고 본다면, 무조건 양성 환자로 예측하는 분류기가 성능이 더 좋다. 하지만 <strong>무조건 양성 환자로 예측해서 예측율이 98.9%로 말하는 의사는</strong> 당영히 자질이 좋은 의사라고 볼 수 없다</p>
<p>정확도(Accuracy)만 보고 분류기의 성능을 판별하는 것은 위와 같은 오류에 빠질 수 있다. 이를 보완하기 위해 다음과 같은 지표들도 같이 활용하게 된다</p>
  <br>
<h3 id="4-3-정밀도-precision"><a class="markdownIt-Anchor" href="#4-3-정밀도-precision"></a> 4-3. 정밀도 (Precision)</h3>
<p><strong>정밀도 (Precision):</strong> 양성 예측의 정확도. 즉, Positive Prediction 중에서 올바르게 예측되는 비율</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Precision=\frac{TP}{TP+FP}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> precision_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">precision_score(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1.0
</code></pre>
<br>
<h3 id="4-4-민감도-sensitivity-재현율-recall"><a class="markdownIt-Anchor" href="#4-4-민감도-sensitivity-재현율-recall"></a> 4-4. 민감도 (Sensitivity)  /  재현율 (Recall)</h3>
<p><strong>민감도 (Sensitivity) / 재현율 (Recall):</strong><br>
분류기가 양성 샘플에 대한 식별력을 나타남. 즉, Positive Condition 중에서 올바르게 예측되는 비율. True Positive Rate (TPR) 이라고도 불린다.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>e</mi><mi>n</mi><mi>s</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>i</mi><mi>t</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Sensitivity / Recall = \frac{TP}{TP+FN}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> recall_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">recall_score(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9777777777777777
</code></pre>
  <br>
<h3 id="4-5-특이도-specificity"><a class="markdownIt-Anchor" href="#4-5-특이도-specificity"></a> 4-5. 특이도 (Specificity)</h3>
<p><strong>특이도 (Specificity):</strong> 분류기가 음성 샘플에 대한 식별력을 나타남. 즉, Negative Condition 중에서 올바르게 예측되는 비율. True Negative Rate (TNR) 이라고도 불린다.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Specificity = \frac{TN}{TN+FP}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">i</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<br>  
<h3 id="4-6-f1-score"><a class="markdownIt-Anchor" href="#4-6-f1-score"></a> 4-6. F1 Score</h3>
<p><strong>F1 Score:</strong> 정밀도(Precision)와 재현율(Recall)의 조화 평균을 나타나는 지표임.<br>
데이터 label이 불균형 구조일 때, 모델의 성능을 정확하게 평가할 수 있으며, 성능을 하나의 숫자로 표현할 수 있다.</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mn>1</mn><mtext>&nbsp;</mtext><mi>S</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mfrac><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>∗</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mfrac><mrow><mi>F</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow><mn>2</mn></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">F1\ Score = 2*\frac{Precision * Recall}{Precision + Recall}=\frac{TP}{TP+\frac{FN+FP}{2}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace">&nbsp;</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4676609999999997em;vertical-align:-1.1073309999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.2376690000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1073309999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> f1_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">f1_score(y_test, model_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.9887640449438202
</code></pre>
<br>
<br>
<h3 id=""><a class="markdownIt-Anchor" href="#"></a> </h3>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>분류</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (3) 회귀 (Regression)</title>
    <url>/2020/07/29/S-Python-sklearn3/</url>
    <content><![CDATA[<h1 id="회귀-regression-예측"><a class="markdownIt-Anchor" href="#회귀-regression-예측"></a> 회귀 (Regression) 예측</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B"><strong>0. 데이터 셋</strong></a>
<ul>
<li><a href="#0-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A1%9C%EB%93%9C">0-1. 데이터 로드</a></li>
<li><a href="#0-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0">0-2. 데이터프레임 만들기</a></li>
</ul>
</li>
<li><a href="#1-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0"><strong>1. Training set / Test set 나누기</strong></a></li>
<li><a href="#2-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0"><strong>2. 평가 지표 만들기</strong></a>
<ul>
<li><a href="#2-1-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EA%B3%84%EC%82%B0%EC%8B%9D">2-1. 평가 지표 계산식</a></li>
<li><a href="#2-2-%EC%BD%94%EB%94%A9%EC%9C%BC%EB%A1%9C-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EA%B8%B0">2-2. 코딩으로 평가 지표 만들어 보기</a></li>
<li><a href="#2-3-sklearn%EC%9D%98-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0">2-3. sklearn의 평가 지표 활용하기</a></li>
<li><a href="#2-4-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%99%95%EC%9D%B8%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%95%A8%EC%88%98">2-4. 모델 성능 확인을 위한 함수</a></li>
</ul>
</li>
<li><a href="#3-%ED%9A%8C%EA%B7%80-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"><strong>3. 회귀 알고리즘</strong></a>
<ul>
<li><a href="#3-1-linear-regression">3-1. Linear Regression</a></li>
<li><a href="#3-2-ridge-lasso-elasticnet">3-2. Ridge &amp; LASSO &amp; ElasticNet</a>
<ul>
<li><a href="#1-%EA%B0%9C%EB%85%90">(1) 개념</a></li>
<li><a href="#2-%EC%8B%A4%EC%8A%B5">(2) 실습</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-scaling"><strong>4. Scaling</strong></a>
<ul>
<li><a href="#4-1-scaler-%EC%86%8C%EA%B0%9C">4-1. Scaler 소개</a></li>
<li><a href="#4-2-scaling-%ED%9B%84-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%ED%99%9C%EC%9A%A9">4-2. Scaling 후 모델 학습 – 파이프라인 활용</a></li>
</ul>
</li>
<li><a href="#5-polynomial-features"><strong>5. Polynomial Features</strong></a></li>
</ul>
<p></p>
<br>
<blockquote>
<p><a href="https://scikit-learn.org/stable/supervised_learning.html#supervised-learning" target="_blank" rel="noopener">[Supervised Learning] Document</a></p>
</blockquote>
<p><strong>특성:</strong> 수치형 값을 예측 (Y의 값이 연속형 수치로 표현)</p>
<p><strong>예시:</strong></p>
<ul>
<li>
<p>주택 가격 예측</p>
</li>
<li>
<p>매출앵 예측</p>
<br>
</li>
</ul>
<h2 id="0-데이터-셋"><a class="markdownIt-Anchor" href="#0-데이터-셋"></a> <strong>0. 데이터 셋</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>) <span class="comment"># If True, print floating point numbers instead of scientific notation</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br></pre></td></tr></tbody></table></figure>
<p>[<a href="https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_boston.html#sklearn.datasets.load_boston" target="_blank" rel="noopener">Boston Dataset</a>]</p>
 <br> 
<h3 id="0-1-데이터-로드"><a class="markdownIt-Anchor" href="#0-1-데이터-로드"></a> 0-1. 데이터 로드</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = load_boston()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(data[<span class="string">'DESCR'</span>])  <span class="comment"># data description</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _boston_dataset:

Boston house prices dataset
---------------------------

**Data Set Characteristics:**  

    :Number of Instances: 506 

    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.

    :Attribute Information (in order):
        - CRIM     per capita crime rate by town
        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.
        - INDUS    proportion of non-retail business acres per town
        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)
        - NOX      nitric oxides concentration (parts per 10 million)
        - RM       average number of rooms per dwelling
        - AGE      proportion of owner-occupied units built prior to 1940
        - DIS      weighted distances to five Boston employment centres
        - RAD      index of accessibility to radial highways
        - TAX      full-value property-tax rate per $10,000
        - PTRATIO  pupil-teacher ratio by town
        - B        1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town
        - LSTAT    % lower status of the population
        - MEDV     Median value of owner-occupied homes in $1000's

    :Missing Attribute Values: None

    :Creator: Harrison, D. and Rubinfeld, D.L.

This is a copy of UCI ML housing dataset.
https://archive.ics.uci.edu/ml/machine-learning-databases/housing/
</code></pre>
<p>​</p>
<pre><code>This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.

The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic
prices and the demand for clean air', J. Environ. Economics &amp; Management,
vol.5, 81-102, 1978.   Used in Belsley, Kuh &amp; Welsch, 'Regression diagnostics
...', Wiley, 1980.   N.B. Various transformations are used in the table on
pages 244-261 of the latter.

The Boston house-price data has been used in many machine learning papers that address regression
problems.   
     
.. topic:: References

   - Belsley, Kuh &amp; Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.
   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.
</code></pre>
<p>​</p>
  <br>
<h3 id="0-2-데이터프레임-만들기"><a class="markdownIt-Anchor" href="#0-2-데이터프레임-만들기"></a> 0-2. 데이터프레임 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># step 1. features (X)</span></span><br><span class="line"><span class="comment"># data['data'] - feature data; data['feature_names'] - feature column names</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(data[<span class="string">'data'</span>], columns = data[<span class="string">'feature_names'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2. target (y) 추가 </span></span><br><span class="line">df[<span class="string">'MEDV'</span>] = data[<span class="string">'target'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
      <th>MEDV</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0.0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1.0</td>
      <td>296.0</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
      <td>24.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
      <td>21.6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
      <td>34.7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
      <td>33.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
      <td>36.2</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>컬럼 소게</strong> (feature 13 + target 1):</p>
<ul>
<li>
<p><strong>CRIM</strong>: 범죄율</p>
</li>
<li>
<p><strong>ZN</strong>: 25,000 square feet 당 주거용 토지의 비율</p>
</li>
<li>
<p><strong>INDUS</strong>: 비소매(non-retail) 비즈니스 면적 비율</p>
</li>
<li>
<p><strong>CHAS</strong>: 찰스 강 더미 변수 (통로가 하천을 향하면 1; 그렇지 않으면 0)</p>
</li>
<li>
<p><strong>NOX</strong>: 산화 질소 농도 (천만 분의 1)</p>
</li>
<li>
<p><strong>RM</strong>:주거 당 평균 객실 수</p>
</li>
<li>
<p><strong>AGE</strong>: 1940 년 이전에 건축된 자가 소유 점유 비율</p>
</li>
<li>
<p><strong>DIS</strong>: 5 개의 보스턴 고용 센터까지의 가중 거리</p>
</li>
<li>
<p><strong>RAD</strong>: 고속도로 접근성 지수</p>
</li>
<li>
<p><strong>TAX</strong>: 10,000 달러 당 전체 가치 재산 세율</p>
</li>
<li>
<p><strong>PTRATIO</strong>  도시 별 학생-교사 비율</p>
</li>
<li>
<p><strong>B</strong>: 1000 (Bk-0.63) ^ 2 여기서 Bk는 도시 별 검정 비율입니다.</p>
</li>
<li>
<p><strong>LSTAT</strong>: 인구의 낮은 지위</p>
</li>
<li>
<p><strong>MEDV</strong>: 자가 주택의 중앙값 (1,000 달러 단위)</p>
<br>
<br>
</li>
</ul>
<h2 id="1-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#1-training-set-test-set-나누기"></a> <strong>1. Training set / Test set 나누기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(df.drop(<span class="string">'MEDV'</span>, <span class="number">1</span>), df[<span class="string">'MEDV'</span>], random_state=<span class="number">23</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((379, 13), (379,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((127, 13), (127,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>112</th>
      <td>0.12329</td>
      <td>0.0</td>
      <td>10.01</td>
      <td>0.0</td>
      <td>0.547</td>
      <td>5.913</td>
      <td>92.9</td>
      <td>2.3534</td>
      <td>6.0</td>
      <td>432.0</td>
      <td>17.8</td>
      <td>394.95</td>
      <td>16.21</td>
    </tr>
    <tr>
      <th>301</th>
      <td>0.03537</td>
      <td>34.0</td>
      <td>6.09</td>
      <td>0.0</td>
      <td>0.433</td>
      <td>6.590</td>
      <td>40.4</td>
      <td>5.4917</td>
      <td>7.0</td>
      <td>329.0</td>
      <td>16.1</td>
      <td>395.75</td>
      <td>9.50</td>
    </tr>
    <tr>
      <th>401</th>
      <td>14.23620</td>
      <td>0.0</td>
      <td>18.10</td>
      <td>0.0</td>
      <td>0.693</td>
      <td>6.343</td>
      <td>100.0</td>
      <td>1.5741</td>
      <td>24.0</td>
      <td>666.0</td>
      <td>20.2</td>
      <td>396.90</td>
      <td>20.32</td>
    </tr>
    <tr>
      <th>177</th>
      <td>0.05425</td>
      <td>0.0</td>
      <td>4.05</td>
      <td>0.0</td>
      <td>0.510</td>
      <td>6.315</td>
      <td>73.4</td>
      <td>3.3175</td>
      <td>5.0</td>
      <td>296.0</td>
      <td>16.6</td>
      <td>395.60</td>
      <td>6.29</td>
    </tr>
    <tr>
      <th>69</th>
      <td>0.12816</td>
      <td>12.5</td>
      <td>6.07</td>
      <td>0.0</td>
      <td>0.409</td>
      <td>5.885</td>
      <td>33.0</td>
      <td>6.4980</td>
      <td>4.0</td>
      <td>345.0</td>
      <td>18.9</td>
      <td>396.90</td>
      <td>8.79</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">y_train.head()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>112    18.8
301    22.0
401     7.2
177    24.6
69     20.9
Name: MEDV, dtype: float64
</code></pre>
<br>
  <br>
<h2 id="2-평가-지표-만들기"><a class="markdownIt-Anchor" href="#2-평가-지표-만들기"></a> <strong>2. 평가 지표 만들기</strong></h2>
<h3 id="2-1-평가-지표-계산식"><a class="markdownIt-Anchor" href="#2-1-평가-지표-계산식"></a> 2-1. 평가 지표 계산식</h3>
<p><strong>(1) MAE (Mean Absolute Error)</strong></p>
<p>MAE (평균 절대 오차): 에측값과 실제값의 차이의 <strong>절대값</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">MAE = \frac{1}{n} \sum_{i=1}^n \left\vert y_i - \widehat{y_i} \right\vert
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<p><strong>(2) MSE (Mean Squared Error)</strong></p>
<p>MSE (평균 제곱 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">MSE = \frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>(3) RMSE (Root Mean Squared Error)</strong></p>
<p>RMSE (평균 제곱근 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 뒤 <strong>루트</strong>를 씌운 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">RMSE = \sqrt{\frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1568160000000005em;vertical-align:-1.277669em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8791470000000006em;"><span class="svg-align" style="top:-5.116816em;"><span class="pstrut" style="height:5.116816em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.8391470000000005em;"><span class="pstrut" style="height:5.116816em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.196816em;"><svg width="400em" height="3.196816em" viewBox="0 0 400000 3196" preserveAspectRatio="xMinYMin slice"><path d="M702 80H400000v40H742v3062l-4 4-4 4c-.667.7
-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667
-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155
 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span></span></span></span></span></p>
  <br>
<h3 id="2-2-코딩으로-평가-지표-만들어-보기"><a class="markdownIt-Anchor" href="#2-2-코딩으로-평가-지표-만들어-보기"></a> 2-2. 코딩으로 평가 지표 만들어 보기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">actual = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">pred = np.array([<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MAE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_mae</span><span class="params">(actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.abs(actual - pred).mean()</span><br><span class="line"></span><br><span class="line">my_mae(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MSE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_mse</span><span class="params">(actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> ((actual - pred)**<span class="number">2</span>).mean()</span><br><span class="line"></span><br><span class="line">my_mse(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4.0
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># RMSE</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_rmse</span><span class="params">(actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.sqrt(my_mse(actual, pred))</span><br><span class="line"></span><br><span class="line">my_rmse(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2.0
</code></pre>
<br>  
<h3 id="2-3-sklearn의-평가-지표-활용하기"><a class="markdownIt-Anchor" href="#2-3-sklearn의-평가-지표-활용하기"></a> 2-3. sklearn의 평가 지표 활용하기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error, mean_squared_error</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_absolute_error.html" target="_blank" rel="noopener">[sklearn.metrics.<strong>mean_absolute_error</strong>]</a><br>
<a href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.mean_squared_error.html" target="_blank" rel="noopener">[sklearn.metrics.<strong>mean_squared_error</strong>]</a></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MAE (my_mae VS sklearn_mae)</span></span><br><span class="line">my_mae(actual, pred), mean_absolute_error(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(2.0, 2.0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># MSE (my_mse VS sklearn_mse)</span></span><br><span class="line">my_mse(actual, pred), mean_squared_error(actual, pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(4.0, 4.0)
</code></pre>
 <br> 
<h3 id="2-4-모델-성능-확인을-위한-함수"><a class="markdownIt-Anchor" href="#2-4-모델-성능-확인을-위한-함수"></a> 2-4. 모델 성능 확인을 위한 함수</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">my_predictions = {}</span><br><span class="line"></span><br><span class="line">colors = [<span class="string">'r'</span>, <span class="string">'c'</span>, <span class="string">'m'</span>, <span class="string">'y'</span>, <span class="string">'k'</span>, <span class="string">'khaki'</span>, <span class="string">'teal'</span>, <span class="string">'orchid'</span>, <span class="string">'sandybrown'</span>,</span><br><span class="line">          <span class="string">'greenyellow'</span>, <span class="string">'dodgerblue'</span>, <span class="string">'deepskyblue'</span>, <span class="string">'rosybrown'</span>, <span class="string">'firebrick'</span>,</span><br><span class="line">          <span class="string">'deeppink'</span>, <span class="string">'crimson'</span>, <span class="string">'salmon'</span>, <span class="string">'darkred'</span>, <span class="string">'olivedrab'</span>, <span class="string">'olive'</span>, </span><br><span class="line">          <span class="string">'forestgreen'</span>, <span class="string">'royalblue'</span>, <span class="string">'indigo'</span>, <span class="string">'navy'</span>, <span class="string">'mediumpurple'</span>, <span class="string">'chocolate'</span>,</span><br><span class="line">          <span class="string">'gold'</span>, <span class="string">'darkorange'</span>, <span class="string">'seagreen'</span>, <span class="string">'turquoise'</span>, <span class="string">'steelblue'</span>, <span class="string">'slategray'</span>, </span><br><span class="line">          <span class="string">'peru'</span>, <span class="string">'midnightblue'</span>, <span class="string">'slateblue'</span>, <span class="string">'dimgray'</span>, <span class="string">'cadetblue'</span>, <span class="string">'tomato'</span></span><br><span class="line">         ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># prediction plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_predictions</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    df = pd.DataFrame({<span class="string">'actual'</span>: y_test, <span class="string">'prediction'</span>: pred})</span><br><span class="line">    df = df.sort_values(by=<span class="string">'actual'</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'prediction'</span>], marker=<span class="string">'x'</span>, color=<span class="string">'r'</span>)</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'actual'</span>], alpha=<span class="number">0.7</span>, marker=<span class="string">'o'</span>, color=<span class="string">'black'</span>)</span><br><span class="line">    plt.title(name_, fontsize=<span class="number">15</span>)</span><br><span class="line">    plt.legend([<span class="string">'prediction'</span>, <span class="string">'actual'</span>], fontsize=<span class="number">12</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># evaluation plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mse_eval</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> predictions</span><br><span class="line">    <span class="keyword">global</span> colors</span><br><span class="line"></span><br><span class="line">    plot_predictions(name_, actual, pred)</span><br><span class="line"></span><br><span class="line">    mse = mean_squared_error(actual, pred)</span><br><span class="line">    my_predictions[name_] = mse</span><br><span class="line"></span><br><span class="line">    y_value = sorted(my_predictions.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    df = pd.DataFrame(y_value, columns=[<span class="string">'model'</span>, <span class="string">'mse'</span>])</span><br><span class="line">    print(df)</span><br><span class="line">    min_ = df[<span class="string">'mse'</span>].min() - <span class="number">10</span></span><br><span class="line">    max_ = df[<span class="string">'mse'</span>].max() + <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    length = len(df)</span><br><span class="line">    </span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, length))</span><br><span class="line">    ax = plt.subplot()</span><br><span class="line">    ax.set_yticks(np.arange(len(df)))</span><br><span class="line">    ax.set_yticklabels(df[<span class="string">'model'</span>], fontsize=<span class="number">15</span>)</span><br><span class="line">    bars = ax.barh(np.arange(len(df)), df[<span class="string">'mse'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(df[<span class="string">'mse'</span>]):</span><br><span class="line">        idx = np.random.choice(len(colors))</span><br><span class="line">        bars[i].set_color(colors[idx])</span><br><span class="line">        ax.text(v + <span class="number">2</span>, i, str(round(v, <span class="number">3</span>)), color=<span class="string">'k'</span>, fontsize=<span class="number">15</span>, fontweight=<span class="string">'bold'</span>)</span><br><span class="line">        </span><br><span class="line">    plt.title(<span class="string">'MSE Error'</span>, fontsize=<span class="number">18</span>)</span><br><span class="line">    plt.xlim(min_, max_)</span><br><span class="line">    </span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove model</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_model</span><span class="params">(name_)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_predictions</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">del</span> my_predictions[name_]</span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></tbody></table></figure>
  <br>
  <br>
<h2 id="3-회귀-알고리즘"><a class="markdownIt-Anchor" href="#3-회귀-알고리즘"></a> <strong>3. 회귀 알고리즘</strong></h2>
<h3 id="3-1-linear-regression"><a class="markdownIt-Anchor" href="#3-1-linear-regression"></a> 3-1. Linear Regression</h3>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html" target="_blank" rel="noopener">[sklearn.linear_model.<strong>LinearRegression</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">model = LinearRegression(n_jobs=<span class="number">-1</span>)  <span class="comment"># n_jobs: CPU코어의 사용</span></span><br><span class="line">model.fit(x_train, y_train)</span><br><span class="line">pred = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mse_eval(<span class="string">'LinearRegression'</span>, y_test, pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_59_0.png" alt="output_59_0"></p>
<pre><code>              model        mse
0  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_59_2.png" alt="output_59_2"></p>
<br>
<h3 id="3-2-ridge-lasso-elasticnet"><a class="markdownIt-Anchor" href="#3-2-ridge-lasso-elasticnet"></a> 3-2. Ridge &amp; LASSO &amp; ElasticNet</h3>
<h4 id="1-개념"><a class="markdownIt-Anchor" href="#1-개념"></a> (1) 개념</h4>
<p><a href="https://medium.com/mighty-data-science-bootcamp/linear-regression-ridge-lasso-elastic-net-fb8115c0a635" target="_blank" rel="noopener">참고</a></p>
<p><strong>규제(Regularization):</strong> 학습이 과적합 되는 것을 방지하고자 일종의 <strong>penalty</strong>를 부여하는 것.<br>
[원리] penalty를 부여하여 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>)를 축소함으로써 학습 모델의 예측 variance를 감소 시키는 것</p>
<br>
<p><strong>&gt;&gt; L2 규제 &amp; Ridge (릿지)</strong></p>
<ul>
<li>
<p><strong>L2 규제 (L2 Regularization):</strong>  각 <font color="blue">가중치 제곱의 합</font>에 규제 강도 (Regularization Strength) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 곱한다</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mn>2</mn><mtext>&nbsp;</mtext><mi mathvariant="normal">규</mi><mi mathvariant="normal">제</mi><mo>=</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup><mo>=</mo><mi>λ</mi><mtext>&nbsp;</mtext><mo stretchy="false">∥</mo><mi>β</mi><msubsup><mo stretchy="false">∥</mo><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">L2 \ 규제 = \lambda \sum_{j=1}^p \beta_j^2 = \lambda\  \lVert \beta \rVert_2^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord">2</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">규</span><span class="mord hangul_fallback">제</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mspace">&nbsp;</span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>2</mn></msub><mtext>&nbsp;</mtext><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo>:</mo><mo stretchy="false">∥</mo><mi>β</mi><msub><mo stretchy="false">∥</mo><mn>2</mn></msub><mo>=</mo><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup></mrow></msqrt></mrow><annotation encoding="application/x-tex">l_2 \ norm:  \lVert \beta \rVert_2 = \sqrt{\sum_{j=1}^p \beta_j^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace">&nbsp;</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.3400320000000003em;vertical-align:-1.4137769999999998em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9262550000000005em;"><span class="svg-align" style="top:-5.300032em;"><span class="pstrut" style="height:5.300032em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.4231360000000004em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.8862550000000002em;"><span class="pstrut" style="height:5.300032em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.3800320000000004em;"><svg width="400em" height="3.3800320000000004em" viewBox="0 0 400000 3380" preserveAspectRatio="xMinYMin slice"><path d="M702 80H400000v40H742v3246l-4 4-4 4c-.667.7
-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667
-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155
 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><strong>Ridge:</strong> Loss Function에 L2 규제를 더한 값을 최소화 시키는 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>β</mi><mn>0</mn></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msub><mi>β</mi><mi>j</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mi>λ</mi><mtext>&nbsp;</mtext><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup><mo fence="true">]</mo></mrow><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><mi>R</mi><mi>S</mi><mi>S</mi><mo>+</mo><mi>λ</mi><mtext>&nbsp;</mtext><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msubsup><mi>β</mi><mi>j</mi><mn>2</mn></msubsup><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\min_{\beta_j} \ \left[ \sum_{i=1}^n \left( y_i-\beta_0-\sum_{j=1}^p\beta_jx_{ij} \right) + \lambda\ \sum_{j=1}^p\beta_j^2 \right]= \min_{\beta_j} \ \left[ RSS + \lambda\ \sum_{j=1}^p\beta_j^2 \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 크게 하면 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>) 가 더 많이 감소되고(규제를 중요시 함), <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 작게 하면 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>) 가 증가한다(규제를 중요시하지 않음)</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; L1 규제 &amp; LASSO (라쏘)</strong></p>
<ul>
<li>
<p><strong>L1 규제 (L1 Regularization):</strong> 각 <font color="blue">가중치 절대값의 합</font>에 규제 강도 (Regularization Strength) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span> 를 곱한다</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mn>1</mn><mtext>&nbsp;</mtext><mi mathvariant="normal">규</mi><mi mathvariant="normal">제</mi><mo>=</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo>=</mo><mi>λ</mi><mtext>&nbsp;</mtext><mo stretchy="false">∥</mo><mi>β</mi><msub><mo stretchy="false">∥</mo><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L1\ 규제 = \lambda \sum_{j=1}^p \left| \beta_j \right| = \lambda \ \lVert \beta \rVert_1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord">1</span><span class="mspace">&nbsp;</span><span class="mord hangul_fallback">규</span><span class="mord hangul_fallback">제</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mspace">&nbsp;</span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mn>1</mn><mtext>&nbsp;</mtext><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo>:</mo><mo stretchy="false">∥</mo><mi>β</mi><msub><mo stretchy="false">∥</mo><mn>1</mn></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">l1\ norm: \lVert \beta \rVert_1 = \sum_{j=1}^p \left| \beta_j \right|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord">1</span><span class="mspace">&nbsp;</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">∥</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1122820000000004em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
</li>
<li>
<p><strong>LASSO:</strong> Loss Function에 L1 규제를 더한 값을 최소화 시키는 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>β</mi><mn>0</mn></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msub><mi>β</mi><mi>j</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">]</mo></mrow><mo>=</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>β</mi><mi>j</mi></msub></munder><mtext>&nbsp;</mtext><mrow><mo fence="true">[</mo><mi>R</mi><mi>S</mi><mi>S</mi><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>β</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\min_{\beta_j} \ \left[ \sum_{i=1}^n \left( y_i-\beta_0-\sum_{j=1}^p\beta_jx_{ij} \right) + \lambda \sum_{j=1}^p \left| \beta_j \right| \right]= \min_{\beta_j} \ \left[ RSS + \lambda \sum_{j=1}^p \left| \beta_j \right| \right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1637769999999996em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.047892em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9494279999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace">&nbsp;</span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span></span></span></p>
</li>
<li>
<p>어떤 가중치(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>) 는 실제로 0이 된다. 즉, 모델에서 완전히 제외되는 특성이 생기는 것이다</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; ElasticNet</strong></p>
<p><strong>l1_ratio (default=0.5)</strong></p>
<ul>
<li>
<p>l1_ratio = 0 (L2 규제만 사용)</p>
</li>
<li>
<p>l1_ratio = 1 (L1 규제만 사용)</p>
</li>
<li>
<p>0 &lt; l1_ratio &lt;1 (L1 and L2 규제 혼합사용)</p>
<br>
</li>
</ul>
<h4 id="2-실습"><a class="markdownIt-Anchor" href="#2-실습"></a> (2) 실습</h4>
<p><strong>&gt;&gt; Ridge</strong>   <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html" target="_blank" rel="noopener">[Document]</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Ridge</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>예측 결과 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># lambda (규제강도) 범위 설정</span></span><br><span class="line">alphas = [<span class="number">100</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">0.1</span>, <span class="number">0.01</span>, <span class="number">0.001</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모델 학습</span></span><br><span class="line"><span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">    ridge = Ridge(alpha = alpha)</span><br><span class="line">    ridge.fit(x_train, y_train)</span><br><span class="line">    ridge_pred = ridge.predict(x_test)</span><br><span class="line">    mse_eval(<span class="string">'Ridge(alpha={})'</span>.format(alpha), y_test, ridge_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_75_0.png" alt="output_75_0"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_2.png" alt="output_75_2"></p>
<p><img src="/images/S-Python-sklearn3/output_75_3.png" alt="output_75_3"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1   Ridge(alpha=10)  22.793119
2  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_5.png" alt="output_75_5"></p>
<p><img src="/images/S-Python-sklearn3/output_75_6.png" alt="output_75_6"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1   Ridge(alpha=10)  22.793119
2  LinearRegression  22.770784
3    Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_8.png" alt="output_75_8"></p>
<p><img src="/images/S-Python-sklearn3/output_75_9.png" alt="output_75_9"></p>
<pre><code>              model        mse
0  Ridge(alpha=100)  23.487453
1   Ridge(alpha=10)  22.793119
2  LinearRegression  22.770784
3  Ridge(alpha=0.1)  22.718126
4    Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_11.png" alt="output_75_11"></p>
<p><img src="/images/S-Python-sklearn3/output_75_12.png" alt="output_75_12"></p>
<pre><code>               model        mse
0   Ridge(alpha=100)  23.487453
1    Ridge(alpha=10)  22.793119
2   LinearRegression  22.770784
3  Ridge(alpha=0.01)  22.764254
4   Ridge(alpha=0.1)  22.718126
5     Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_14.png" alt="output_75_14"></p>
<p><img src="/images/S-Python-sklearn3/output_75_15.png" alt="output_75_15"></p>
<pre><code>                model        mse
0    Ridge(alpha=100)  23.487453
1     Ridge(alpha=10)  22.793119
2    LinearRegression  22.770784
3  Ridge(alpha=0.001)  22.770117
4   Ridge(alpha=0.01)  22.764254
5    Ridge(alpha=0.1)  22.718126
6      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_75_17.png" alt="output_75_17"></p>
<br>
<ul>
<li><strong>coefficents 값 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ridge.coef_  <span class="comment"># for the last alpha in 'alphas'</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ -0.09608448,   0.04753482,   0.0259022 ,   3.24479273,
       -18.89579975,   4.06725732,   0.0020486 ,  -1.46883742,
         0.28149275,  -0.0094656 ,  -0.87454099,   0.01240815,
        -0.52406249])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># coefficients visulization</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_coef</span><span class="params">(columns, coef)</span>:</span></span><br><span class="line">    coef_df = pd.DataFrame(list(zip(columns, coef)))</span><br><span class="line">    coef_df.columns=[<span class="string">'feature'</span>, <span class="string">'coef'</span>]</span><br><span class="line">    coef_df = coef_df.sort_values(<span class="string">'coef'</span>, ascending=<span class="literal">False</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">9</span>, <span class="number">7</span>))</span><br><span class="line">    ax.barh(np.arange(len(coef_df)), coef_df[<span class="string">'coef'</span>])</span><br><span class="line">    idx = np.arange(len(coef_df))</span><br><span class="line">    ax.set_yticks(idx)</span><br><span class="line">    ax.set_yticklabels(coef_df[<span class="string">'feature'</span>])</span><br><span class="line">    fig.tight_layout()</span><br><span class="line">    plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, ridge.coef_)   <span class="comment"># alpha = 0.001</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_81_0.png" alt="output_81_0"></p>
<br>
<ul>
<li><strong>alpha 값에 따른 coef의 차이</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ridge_1 = Ridge(alpha=<span class="number">1</span>)</span><br><span class="line">ridge_1.fit(x_train, y_train)</span><br><span class="line">ridge_pred_1 = ridge_1.predict(x_test)</span><br><span class="line"></span><br><span class="line">ridge_100 = Ridge(alpha=<span class="number">100</span>)</span><br><span class="line">ridge_100.fit(x_train, y_train)</span><br><span class="line">ridge_pred_100 = ridge_100.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, ridge_1.coef_)   <span class="comment"># alpha = 1</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_85_0.png" alt="output_85_0"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, ridge_100.coef_)   <span class="comment"># alpha = 100</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_86_0.png" alt="output_86_0"></p>
<br>
<p><strong>&gt;&gt; LASSO</strong> <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html" target="_blank" rel="noopener">[Document]</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>예측 결과 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># lambda (규제강도) 범위 설정</span></span><br><span class="line">alphas = [<span class="number">100</span>, <span class="number">10</span>, <span class="number">1</span>, <span class="number">0.1</span>, <span class="number">0.01</span>, <span class="number">0.001</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모델 학습</span></span><br><span class="line"><span class="keyword">for</span> alpha <span class="keyword">in</span> alphas:</span><br><span class="line">    lasso = Lasso(alpha=alpha)</span><br><span class="line">    lasso.fit(x_train, y_train)</span><br><span class="line">    lasso_pred = lasso.predict(x_test)</span><br><span class="line">    mse_eval(<span class="string">'Lasso(alpha={})'</span>.format(alpha), y_test, lasso_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_92_0.png" alt="output_92_0"></p>
<pre><code>                model        mse
0    Lasso(alpha=100)  63.348818
1    Ridge(alpha=100)  23.487453
2     Ridge(alpha=10)  22.793119
3    LinearRegression  22.770784
4  Ridge(alpha=0.001)  22.770117
5   Ridge(alpha=0.01)  22.764254
6    Ridge(alpha=0.1)  22.718126
7      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_2.png" alt="output_92_2"></p>
<p><img src="/images/S-Python-sklearn3/output_92_3.png" alt="output_92_3"></p>
<pre><code>                model        mse
0    Lasso(alpha=100)  63.348818
1     Lasso(alpha=10)  42.436622
2    Ridge(alpha=100)  23.487453
3     Ridge(alpha=10)  22.793119
4    LinearRegression  22.770784
5  Ridge(alpha=0.001)  22.770117
6   Ridge(alpha=0.01)  22.764254
7    Ridge(alpha=0.1)  22.718126
8      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_5.png" alt="output_92_5"></p>
<p><img src="/images/S-Python-sklearn3/output_92_6.png" alt="output_92_6"></p>
<pre><code>                model        mse
0    Lasso(alpha=100)  63.348818
1     Lasso(alpha=10)  42.436622
2      Lasso(alpha=1)  27.493672
3    Ridge(alpha=100)  23.487453
4     Ridge(alpha=10)  22.793119
5    LinearRegression  22.770784
6  Ridge(alpha=0.001)  22.770117
7   Ridge(alpha=0.01)  22.764254
8    Ridge(alpha=0.1)  22.718126
9      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_8.png" alt="output_92_8"></p>
<p><img src="/images/S-Python-sklearn3/output_92_9.png" alt="output_92_9"></p>
<pre><code>                 model        mse
0     Lasso(alpha=100)  63.348818
1      Lasso(alpha=10)  42.436622
2       Lasso(alpha=1)  27.493672
3     Ridge(alpha=100)  23.487453
4     Lasso(alpha=0.1)  22.979708
5      Ridge(alpha=10)  22.793119
6     LinearRegression  22.770784
7   Ridge(alpha=0.001)  22.770117
8    Ridge(alpha=0.01)  22.764254
9     Ridge(alpha=0.1)  22.718126
10      Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_11.png" alt="output_92_11"></p>
<p><img src="/images/S-Python-sklearn3/output_92_12.png" alt="output_92_12"></p>
<pre><code>                 model        mse
0     Lasso(alpha=100)  63.348818
1      Lasso(alpha=10)  42.436622
2       Lasso(alpha=1)  27.493672
3     Ridge(alpha=100)  23.487453
4     Lasso(alpha=0.1)  22.979708
5      Ridge(alpha=10)  22.793119
6     LinearRegression  22.770784
7   Ridge(alpha=0.001)  22.770117
8    Ridge(alpha=0.01)  22.764254
9     Ridge(alpha=0.1)  22.718126
10      Ridge(alpha=1)  22.690411
11   Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_14.png" alt="output_92_14"></p>
<p><img src="/images/S-Python-sklearn3/output_92_15.png" alt="output_92_15"></p>
<pre><code>                 model        mse
0     Lasso(alpha=100)  63.348818
1      Lasso(alpha=10)  42.436622
2       Lasso(alpha=1)  27.493672
3     Ridge(alpha=100)  23.487453
4     Lasso(alpha=0.1)  22.979708
5      Ridge(alpha=10)  22.793119
6     LinearRegression  22.770784
7   Ridge(alpha=0.001)  22.770117
8    Ridge(alpha=0.01)  22.764254
9   Lasso(alpha=0.001)  22.753017
10    Ridge(alpha=0.1)  22.718126
11      Ridge(alpha=1)  22.690411
12   Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_92_17.png" alt="output_92_17"></p>
<br>
<ul>
<li><strong>coefficients 값 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># alpha = 0.01</span></span><br><span class="line">lasso_01 = Lasso(alpha=<span class="number">0.01</span>)</span><br><span class="line">lasso_01.fit(x_train, y_train)</span><br><span class="line">lasso_pred_01 = lasso_01.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># alpha = 100</span></span><br><span class="line">lasso_100 = Lasso(alpha=<span class="number">100</span>)</span><br><span class="line">lasso_100.fit(x_train, y_train)</span><br><span class="line">lasso_pred_100 = lasso_100.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>[alpha = 0.01]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lasso_01.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ -0.09427142,   0.04759954,   0.01255668,   3.08256139,
       -15.36800113,   4.07373679,  -0.00100439,  -1.40819927,
         0.27152905,  -0.0097157 ,  -0.84377679,   0.01249204,
        -0.52790174])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, lasso_01.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_100_0.png" alt="output_100_0"></p>
<br>
<p>[alpha = 100]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lasso_100.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-0.        ,  0.        , -0.        ,  0.        , -0.        ,
        0.        , -0.        ,  0.        , -0.        , -0.02078349,
       -0.        ,  0.00644409, -0.        ])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, lasso_100.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_105_0.png" alt="output_105_0"></p>
<br>
<p><strong>&gt;&gt; ElasticNet</strong>  <a href="https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.ElasticNet.html" target="_blank" rel="noopener">[Document]</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> ElasticNet</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><strong>예측 결과 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ratios = [<span class="number">0.2</span>, <span class="number">0.5</span>, <span class="number">0.8</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># alpha = 0.5 로 고정</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ratio <span class="keyword">in</span> ratios:</span><br><span class="line">    elasticnet = ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=ratio)</span><br><span class="line">    elasticnet.fit(x_train, y_train)</span><br><span class="line">    elas_pred = elasticnet.predict(x_test)</span><br><span class="line">    mse_eval(<span class="string">'ElasticNet(l1_ratio={})'</span>.format(ratio), y_test, elas_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_111_0.png" alt="output_111_0"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5            Ridge(alpha=10)  22.793119
6           LinearRegression  22.770784
7         Ridge(alpha=0.001)  22.770117
8          Ridge(alpha=0.01)  22.764254
9         Lasso(alpha=0.001)  22.753017
10  ElasticNet(l1_ratio=0.2)  22.749018
11          Ridge(alpha=0.1)  22.718126
12            Ridge(alpha=1)  22.690411
13         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_111_2.png" alt="output_111_2"></p>
<p><img src="/images/S-Python-sklearn3/output_111_3.png" alt="output_111_3"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5            Ridge(alpha=10)  22.793119
6   ElasticNet(l1_ratio=0.5)  22.787269
7           LinearRegression  22.770784
8         Ridge(alpha=0.001)  22.770117
9          Ridge(alpha=0.01)  22.764254
10        Lasso(alpha=0.001)  22.753017
11  ElasticNet(l1_ratio=0.2)  22.749018
12          Ridge(alpha=0.1)  22.718126
13            Ridge(alpha=1)  22.690411
14         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_111_5.png" alt="output_111_5"></p>
<p><img src="/images/S-Python-sklearn3/output_111_6.png" alt="output_111_6"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5   ElasticNet(l1_ratio=0.8)  22.865628
6            Ridge(alpha=10)  22.793119
7   ElasticNet(l1_ratio=0.5)  22.787269
8           LinearRegression  22.770784
9         Ridge(alpha=0.001)  22.770117
10         Ridge(alpha=0.01)  22.764254
11        Lasso(alpha=0.001)  22.753017
12  ElasticNet(l1_ratio=0.2)  22.749018
13          Ridge(alpha=0.1)  22.718126
14            Ridge(alpha=1)  22.690411
15         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_111_8.png" alt="output_111_8"></p>
<br>
<ul>
<li><strong>coefficients 값 확인</strong></li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># ㅣ1_ratio = 0.2</span></span><br><span class="line">elasticnet_2 = ElasticNet(alpha = <span class="number">0.1</span>, l1_ratio = <span class="number">0.2</span>)</span><br><span class="line">elasticnet_2.fit(x_train, y_train)</span><br><span class="line">elast_pred_2 = elasticnet_2.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># l1_ratio = 0.8</span></span><br><span class="line">elasticnet_8 = ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio = <span class="number">0.8</span>)</span><br><span class="line">elasticnet_8.fit(x_train, y_train)</span><br><span class="line">elast_pred_8 = elasticnet_8.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>[ l1_ratio = 0.2 ]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">elasticnet_2.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-0.09297585,  0.05293361, -0.03950412,  1.30126199, -0.41996826,
        3.15838796, -0.00644646, -1.15290012,  0.25973467, -0.01231233,
       -0.77186571,  0.01201684, -0.60780037])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, elasticnet_2.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_119_0.png" alt="output_119_0"></p>
<br>
<p>[ l1_ratio = 0.8 ]</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.columns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Index(['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT'],
      dtype='object')
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">elasticnet_8.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([-0.08797633,  0.05035601, -0.03058513,  1.51071961, -0.        ,
        3.70247373, -0.01017259, -1.12431077,  0.24389841, -0.01189981,
       -0.73481448,  0.01259147, -0.573733  ])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_coef(x_train.columns, elasticnet_8.coef_)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_124_0.png" alt="output_124_0"></p>
<br>
<br>
<h2 id="4-scaling"><a class="markdownIt-Anchor" href="#4-scaling"></a> <strong>4. Scaling</strong></h2>
<h3 id="4-1-scaler-소개"><a class="markdownIt-Anchor" href="#4-1-scaler-소개"></a> 4-1. Scaler 소개</h3>
<ul>
<li>
<p>StandardScaler</p>
</li>
<li>
<p>MinMaxScaler</p>
</li>
<li>
<p>RobustScaler</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler, MinMaxScaler, RobustScaler</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.describe()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
      <td>379.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>3.512192</td>
      <td>11.779683</td>
      <td>10.995013</td>
      <td>0.076517</td>
      <td>0.548712</td>
      <td>6.266953</td>
      <td>67.223483</td>
      <td>3.917811</td>
      <td>9.282322</td>
      <td>404.680739</td>
      <td>18.448549</td>
      <td>357.048100</td>
      <td>12.633773</td>
    </tr>
    <tr>
      <th>std</th>
      <td>8.338717</td>
      <td>23.492842</td>
      <td>6.792065</td>
      <td>0.266175</td>
      <td>0.115006</td>
      <td>0.681796</td>
      <td>28.563787</td>
      <td>2.084167</td>
      <td>8.583051</td>
      <td>166.813256</td>
      <td>2.154917</td>
      <td>92.745266</td>
      <td>7.259213</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.006320</td>
      <td>0.000000</td>
      <td>0.460000</td>
      <td>0.000000</td>
      <td>0.385000</td>
      <td>3.561000</td>
      <td>2.900000</td>
      <td>1.129600</td>
      <td>1.000000</td>
      <td>188.000000</td>
      <td>12.600000</td>
      <td>2.520000</td>
      <td>1.730000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.078910</td>
      <td>0.000000</td>
      <td>5.190000</td>
      <td>0.000000</td>
      <td>0.445000</td>
      <td>5.876500</td>
      <td>42.250000</td>
      <td>2.150900</td>
      <td>4.000000</td>
      <td>278.000000</td>
      <td>17.150000</td>
      <td>375.425000</td>
      <td>6.910000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.228760</td>
      <td>0.000000</td>
      <td>9.690000</td>
      <td>0.000000</td>
      <td>0.532000</td>
      <td>6.208000</td>
      <td>74.400000</td>
      <td>3.414500</td>
      <td>5.000000</td>
      <td>330.000000</td>
      <td>19.000000</td>
      <td>392.110000</td>
      <td>11.380000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>2.756855</td>
      <td>19.000000</td>
      <td>18.100000</td>
      <td>0.000000</td>
      <td>0.624000</td>
      <td>6.611000</td>
      <td>93.850000</td>
      <td>5.400900</td>
      <td>8.000000</td>
      <td>666.000000</td>
      <td>20.200000</td>
      <td>396.260000</td>
      <td>16.580000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>73.534100</td>
      <td>100.000000</td>
      <td>27.740000</td>
      <td>1.000000</td>
      <td>0.871000</td>
      <td>8.398000</td>
      <td>100.000000</td>
      <td>10.585700</td>
      <td>24.000000</td>
      <td>711.000000</td>
      <td>22.000000</td>
      <td>396.900000</td>
      <td>37.970000</td>
    </tr>
  </tbody>
</table>
</div>
</div>
 <br> 
<p><strong>&gt;&gt; StandardScaler</strong></p>
<p>평균(mean)을 0, 표준편차(std)를 1로 만들어 주는 scaler</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">std_scaler = StandardScaler()</span><br><span class="line">std_scaled = std_scaler.fit_transform(x_train)</span><br><span class="line">round(pd.DataFrame(std_scaled).describe(), <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
      <th>7</th>
      <th>8</th>
      <th>9</th>
      <th>10</th>
      <th>11</th>
      <th>12</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>-0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>-0.00</td>
      <td>-0.00</td>
      <td>-0.00</td>
      <td>-0.00</td>
      <td>0.00</td>
      <td>-0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-0.42</td>
      <td>-0.50</td>
      <td>-1.55</td>
      <td>-0.29</td>
      <td>-1.43</td>
      <td>-3.97</td>
      <td>-2.25</td>
      <td>-1.34</td>
      <td>-0.97</td>
      <td>-1.30</td>
      <td>-2.72</td>
      <td>-3.83</td>
      <td>-1.50</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>-0.41</td>
      <td>-0.50</td>
      <td>-0.86</td>
      <td>-0.29</td>
      <td>-0.90</td>
      <td>-0.57</td>
      <td>-0.88</td>
      <td>-0.85</td>
      <td>-0.62</td>
      <td>-0.76</td>
      <td>-0.60</td>
      <td>0.20</td>
      <td>-0.79</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>-0.39</td>
      <td>-0.50</td>
      <td>-0.19</td>
      <td>-0.29</td>
      <td>-0.15</td>
      <td>-0.09</td>
      <td>0.25</td>
      <td>-0.24</td>
      <td>-0.50</td>
      <td>-0.45</td>
      <td>0.26</td>
      <td>0.38</td>
      <td>-0.17</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>-0.09</td>
      <td>0.31</td>
      <td>1.05</td>
      <td>-0.29</td>
      <td>0.66</td>
      <td>0.51</td>
      <td>0.93</td>
      <td>0.71</td>
      <td>-0.15</td>
      <td>1.57</td>
      <td>0.81</td>
      <td>0.42</td>
      <td>0.54</td>
    </tr>
    <tr>
      <th>max</th>
      <td>8.41</td>
      <td>3.76</td>
      <td>2.47</td>
      <td>3.47</td>
      <td>2.81</td>
      <td>3.13</td>
      <td>1.15</td>
      <td>3.20</td>
      <td>1.72</td>
      <td>1.84</td>
      <td>1.65</td>
      <td>0.43</td>
      <td>3.49</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>&gt;&gt; MinMaxScaler</strong></p>
<p>min값과 max값을 0~1사이로 정규화 (Normalize)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">minmax_scaler = MinMaxScaler()</span><br><span class="line">minmax_scaled = minmax_scaler.fit_transform(x_train)</span><br><span class="line">round(pd.DataFrame(minmax_scaled).describe(), <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
      <th>7</th>
      <th>8</th>
      <th>9</th>
      <th>10</th>
      <th>11</th>
      <th>12</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
      <td>379.00</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>0.05</td>
      <td>0.12</td>
      <td>0.39</td>
      <td>0.08</td>
      <td>0.34</td>
      <td>0.56</td>
      <td>0.66</td>
      <td>0.29</td>
      <td>0.36</td>
      <td>0.41</td>
      <td>0.62</td>
      <td>0.90</td>
      <td>0.30</td>
    </tr>
    <tr>
      <th>std</th>
      <td>0.11</td>
      <td>0.23</td>
      <td>0.25</td>
      <td>0.27</td>
      <td>0.24</td>
      <td>0.14</td>
      <td>0.29</td>
      <td>0.22</td>
      <td>0.37</td>
      <td>0.32</td>
      <td>0.23</td>
      <td>0.24</td>
      <td>0.20</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.00</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.17</td>
      <td>0.00</td>
      <td>0.12</td>
      <td>0.48</td>
      <td>0.41</td>
      <td>0.11</td>
      <td>0.13</td>
      <td>0.17</td>
      <td>0.48</td>
      <td>0.95</td>
      <td>0.14</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.00</td>
      <td>0.00</td>
      <td>0.34</td>
      <td>0.00</td>
      <td>0.30</td>
      <td>0.55</td>
      <td>0.74</td>
      <td>0.24</td>
      <td>0.17</td>
      <td>0.27</td>
      <td>0.68</td>
      <td>0.99</td>
      <td>0.27</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>0.04</td>
      <td>0.19</td>
      <td>0.65</td>
      <td>0.00</td>
      <td>0.49</td>
      <td>0.63</td>
      <td>0.94</td>
      <td>0.45</td>
      <td>0.30</td>
      <td>0.91</td>
      <td>0.81</td>
      <td>1.00</td>
      <td>0.41</td>
    </tr>
    <tr>
      <th>max</th>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
      <td>1.00</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<p><strong>&gt;&gt; RobustScaler</strong></p>
<p>중앙값(median)이 0, IQR(interquartile rage)이 1이 되도록 변환<br>
<strong>outlier 처리에 유용</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">robust_scaler = RobustScaler()</span><br><span class="line">robust_scaled = robust_scaler.fit_transform(x_train)</span><br><span class="line">round(pd.DataFrame(robust_scaled).median(), <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0     0.0
1     0.0
2     0.0
3     0.0
4     0.0
5     0.0
6     0.0
7     0.0
8     0.0
9     0.0
10    0.0
11    0.0
12    0.0
dtype: float64
</code></pre>
  <br>
<h3 id="4-2-scaling-후-모델-학습-파이프라인-활용"><a class="markdownIt-Anchor" href="#4-2-scaling-후-모델-학습-파이프라인-활용"></a> 4-2. Scaling 후 모델 학습 – 파이프라인 활용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> make_pipeline</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># elasticnet(alpha=0.1, l1_ratio=0.2) &lt; without standard scaling &gt;</span></span><br><span class="line">elasticnet_no_scale = ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">no_scale_pred = elasticnet_no_scale.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'No Standard ElasticNet'</span>, y_test, no_scale_pred)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># elasticnet(alpha=0.1, l1_ratio=0.2) &lt; with standard scaling &gt;</span></span><br><span class="line">elasticnet_pipeline = make_pipeline(</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">with_scale_pred = elasticnet_pipeline.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'With Standard ElasticNet'</span>, y_test, with_scale_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_148_0.png" alt="output_148_0"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4           Lasso(alpha=0.1)  22.979708
5   ElasticNet(l1_ratio=0.8)  22.865628
6            Ridge(alpha=10)  22.793119
7   ElasticNet(l1_ratio=0.5)  22.787269
8           LinearRegression  22.770784
9         Ridge(alpha=0.001)  22.770117
10         Ridge(alpha=0.01)  22.764254
11        Lasso(alpha=0.001)  22.753017
12  ElasticNet(l1_ratio=0.2)  22.749018
13    No Standard ElasticNet  22.749018
14          Ridge(alpha=0.1)  22.718126
15            Ridge(alpha=1)  22.690411
16         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_148_2.png" alt="output_148_2"></p>
<p><img src="/images/S-Python-sklearn3/output_148_3.png" alt="output_148_3"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4   With Standard ElasticNet  23.230164
5           Lasso(alpha=0.1)  22.979708
6   ElasticNet(l1_ratio=0.8)  22.865628
7            Ridge(alpha=10)  22.793119
8   ElasticNet(l1_ratio=0.5)  22.787269
9           LinearRegression  22.770784
10        Ridge(alpha=0.001)  22.770117
11         Ridge(alpha=0.01)  22.764254
12        Lasso(alpha=0.001)  22.753017
13  ElasticNet(l1_ratio=0.2)  22.749018
14    No Standard ElasticNet  22.749018
15          Ridge(alpha=0.1)  22.718126
16            Ridge(alpha=1)  22.690411
17         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_148_5.png" alt="output_148_5"></p>
<br>
<br>
<h2 id="5-polynomial-features"><a class="markdownIt-Anchor" href="#5-polynomial-features"></a> <strong>5. Polynomial Features</strong></h2>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.PolynomialFeatures.html?highlight=poly%20feature#sklearn.preprocessing.PolynomialFeatures" target="_blank" rel="noopener">[Document]</a></p>
<p>다항식의 계수간 상호작용을 통해 <strong>새로운 feature를 생성</strong>한다.<br>
예를 들면, [a, b] 2개의 feature가 존재한다고 가정하고,<br>
degree=2로 설정한다면, polynomial features 는 [1, a, b, a^2, ab, b^2]가 돤다</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br></pre></td></tr></tbody></table></figure>
<p><strong>Polynomial Features 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly = PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly_features = poly.fit_transform(x_train)[<span class="number">0</span>]</span><br><span class="line">poly_features</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([     0.12329   ,      0.        ,     10.01      ,      0.        ,
            0.547     ,      5.913     ,     92.9       ,      2.3534    ,
            6.        ,    432.        ,     17.8       ,    394.95      ,
           16.21      ,      0.01520042,      0.        ,      1.2341329 ,
            0.        ,      0.06743963,      0.72901377,     11.453641  ,
            0.29015069,      0.73974   ,     53.26128   ,      2.194562  ,
           48.6933855 ,      1.9985309 ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,    100.2001    ,      0.        ,
            5.47547   ,     59.18913   ,    929.929     ,     23.557534  ,
           60.06      ,   4324.32      ,    178.178     ,   3953.4495    ,
          162.2621    ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.        ,
            0.        ,      0.        ,      0.        ,      0.299209  ,
            3.234411  ,     50.8163    ,      1.2873098 ,      3.282     ,
          236.304     ,      9.7366    ,    216.03765   ,      8.86687   ,
           34.963569  ,    549.3177    ,     13.9156542 ,     35.478     ,
         2554.416     ,    105.2514    ,   2335.33935   ,     95.84973   ,
         8630.41      ,    218.63086   ,    557.4       ,  40132.8       ,
         1653.62      ,  36690.855     ,   1505.909     ,      5.53849156,
           14.1204    ,   1016.6688    ,     41.89052   ,    929.47533   ,
           38.148614  ,     36.        ,   2592.        ,    106.8       ,
         2369.7       ,     97.26      , 186624.        ,   7689.6       ,
       170618.4       ,   7002.72      ,    316.84      ,   7030.11      ,
          288.538     , 155985.5025    ,   6402.1395    ,    262.7641    ])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.iloc[<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>CRIM         0.12329
ZN           0.00000
INDUS       10.01000
CHAS         0.00000
NOX          0.54700
RM           5.91300
AGE         92.90000
DIS          2.35340
RAD          6.00000
TAX        432.00000
PTRATIO     17.80000
B          394.95000
LSTAT       16.21000
Name: 112, dtype: float64
</code></pre>
  <br>
<p><strong>Polynomial Features + Standard Scaling 후 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly_pipeline = make_pipeline(</span><br><span class="line">    PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>),</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.1</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">poly_pred = poly_pipeline.fit(x_train, y_train).predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>D:\Anaconda\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:476: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 32.61172784964583, tolerance: 3.2374824854881266
  positive)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mse_eval(<span class="string">'Poly ElasticNet'</span>, y_test, poly_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn3/output_163_0.png" alt="output_163_0"></p>
<pre><code>                       model        mse
0           Lasso(alpha=100)  63.348818
1            Lasso(alpha=10)  42.436622
2             Lasso(alpha=1)  27.493672
3           Ridge(alpha=100)  23.487453
4   With Standard ElasticNet  23.230164
5           Lasso(alpha=0.1)  22.979708
6   ElasticNet(l1_ratio=0.8)  22.865628
7            Ridge(alpha=10)  22.793119
8   ElasticNet(l1_ratio=0.5)  22.787269
9           LinearRegression  22.770784
10        Ridge(alpha=0.001)  22.770117
11         Ridge(alpha=0.01)  22.764254
12        Lasso(alpha=0.001)  22.753017
13  ElasticNet(l1_ratio=0.2)  22.749018
14    No Standard ElasticNet  22.749018
15          Ridge(alpha=0.1)  22.718126
16            Ridge(alpha=1)  22.690411
17         Lasso(alpha=0.01)  22.635614
18           Poly ElasticNet  17.526214
</code></pre>
<p><img src="/images/S-Python-sklearn3/output_163_2.png" alt="output_163_2"></p>
<p>2차 Polynomial Features 추가 후 학습된 모델의 성능이 많이 향상 된것을 확인할 수 있다</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>회귀</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (4) 앙상블 (Ensemble)</title>
    <url>/2020/08/04/S-Python-sklearn4/</url>
    <content><![CDATA[<h1 id="앙상블-ensemble"><a class="markdownIt-Anchor" href="#앙상블-ensemble"></a> 앙상블 (Ensemble)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B"><strong>0. 데이터 셋</strong></a>
<ul>
<li><a href="#0-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A1%9C%EB%93%9C">0-1. 데이터 로드</a></li>
<li><a href="#0-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0">0-2. 데이터프레임 만들기</a></li>
</ul>
</li>
<li><a href="#1-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0"><strong>1. Training set / Test set 나누기</strong></a></li>
<li><a href="#2-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0"><strong>2. 평가 지표 만들기</strong></a>
<ul>
<li><a href="#2-1-%ED%8F%89%EA%B0%80-%EC%A7%80%ED%91%9C">2-1. 평가 지표</a></li>
<li><a href="#2-2-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%99%95%EC%9D%B8%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%95%A8%EC%88%98">2-2. 모델 성능 확인을 위한 함수</a></li>
</ul>
</li>
<li><a href="#3-%EB%8B%A8%EC%9D%BC-%ED%9A%8C%EA%B7%80-%EB%AA%A8%EB%8D%B8-%EC%A7%80%EB%82%9C-%EC%8B%9C%EA%B0%84"><strong>3. 단일 회귀 모델 (지난 시간)</strong></a>
<ul>
<li><a href="#1-linear-regression">(1)  Linear Regression</a></li>
<li><a href="#2-ridge">(2)  Ridge</a></li>
<li><a href="#3-lasso">(3)  LASSO</a></li>
<li><a href="#4-elasticnet">(4) ElasticNet</a></li>
<li><a href="#5-with-standard-scaling">(5) With Standard Scaling</a></li>
<li><a href="#6-polynomial-features">(6) Polynomial Features</a></li>
</ul>
</li>
<li><a href="#4-%EC%95%99%EC%83%81%EB%B8%94-ensemble-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98"><strong>4. 앙상블 (Ensemble)  알고리즘</strong></a>
<ul>
<li><a href="#4-1-%EB%B3%B4%ED%8C%85-voting">4-1. 보팅 (Voting)</a>
<ul>
<li><a href="#%ED%9A%8C%EA%B7%80-regression">&gt;&gt; 회귀 (Regression)</a></li>
<li><a href="#%EB%B6%84%EB%A5%98-classification">&gt;&gt; 분류 (Classification)</a></li>
</ul>
</li>
<li><a href="#4-2-%EB%B0%B0%EA%B9%85-bagging">4-2. 배깅 (Bagging)</a>
<ul>
<li><a href="#random-forest">&gt;&gt; Random Forest</a></li>
</ul>
</li>
<li><a href="#4-3-%EB%B6%80%EC%8A%A4%ED%8C%85-boosting">4-3. 부스팅 (Boosting)</a>
<ul>
<li><a href="#4-3-1-gradient-boost">4-3-1. Gradient Boost</a></li>
<li><a href="#4-3-2-xgboost">4-3-2. XGBoost</a></li>
<li><a href="#4-3-3-lightgbm">4-3-3. LightGBM</a></li>
</ul>
</li>
<li><a href="#4-4-%EC%8A%A4%ED%83%9C%ED%82%B9-stacking">4-4. 스태킹 (Stacking)</a></li>
<li><a href="#4-5-weighted-blending">4-5. Weighted Blending</a></li>
<li><a href="#4-6-%EC%95%99%EC%83%81%EB%B8%94-%EB%AA%A8%EB%8D%B8-%EC%A0%95%EB%A6%AC">4-6. 앙상블 모델 정리</a></li>
</ul>
</li>
<li><a href="#5-cross-validation"><strong>5. Cross Validation</strong></a>
<ul>
<li><a href="#5-1-cross-validation-%EC%86%8C%EA%B0%9C">5-1. Cross Validation 소개</a></li>
<li><a href="#5-2-hyper-parameter-%ED%8A%9C%EB%8B%9D">5-2. Hyper-parameter 튜닝</a>
<ul>
<li><a href="#1-randomizedsearchcv">(1) RandomizedSearchCV</a></li>
<li><a href="#2-gridserchcv">(2) GridSerchCV</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<p>머신러닝 앙상블이란 <strong>여러 개의 머신러닝 모델을 이용해 최적의 답을 찾아내는 기법</strong>이다.<br>
(여러 모델을 이용하여 데이터를 학습하고, 모든 모델의 예측결과를 평균하여 예측)</p>
<br>
<p><strong>앙상블 기법의 종류</strong></p>
<ul>
<li>보팅 (Voting): 투표를 통해 결과 도출</li>
<li>배깅 (Bagging): 샘플 중복 생성을 통해 결과 도출</li>
<li>부스팅 (Boosting): 이전 오차를 보완하면서 가중치 부여</li>
<li>스태킹 (Stacking): 여러 모델을 기반으로 예측된 결과를 통해 meta 모델이 다시 한번 예측</li>
</ul>
<br>
<p><strong>참고자료 (블로그)</strong></p>
<ul>
<li>
<p><a href="https://blog.naver.com/winddori2002/221848433173" target="_blank" rel="noopener">보팅 (Voting)</a></p>
</li>
<li>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-2" target="_blank" rel="noopener">배경 (Bagging)</a></p>
</li>
<li>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-3" target="_blank" rel="noopener">부스팅 (Boosting)</a></p>
<br>
<br>
</li>
</ul>
<h2 id="0-데이터-셋"><a class="markdownIt-Anchor" href="#0-데이터-셋"></a> <strong>0. 데이터 셋</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>) <span class="comment"># If True, print floating point numbers instead of scientific notation</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h3 id="0-1-데이터-로드"><a class="markdownIt-Anchor" href="#0-1-데이터-로드"></a> 0-1. 데이터 로드</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = load_boston()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(data[<span class="string">'DESCR'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>.. _boston_dataset:

Boston house prices dataset
---------------------------

**Data Set Characteristics:**  

    :Number of Instances: 506 

    :Number of Attributes: 13 numeric/categorical predictive. Median Value (attribute 14) is usually the target.

    :Attribute Information (in order):
        - CRIM     per capita crime rate by town
        - ZN       proportion of residential land zoned for lots over 25,000 sq.ft.
        - INDUS    proportion of non-retail business acres per town
        - CHAS     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)
        - NOX      nitric oxides concentration (parts per 10 million)
        - RM       average number of rooms per dwelling
        - AGE      proportion of owner-occupied units built prior to 1940
        - DIS      weighted distances to five Boston employment centres
        - RAD      index of accessibility to radial highways
        - TAX      full-value property-tax rate per $10,000
        - PTRATIO  pupil-teacher ratio by town
        - B        1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town
        - LSTAT    % lower status of the population
        - MEDV     Median value of owner-occupied homes in $1000's

    :Missing Attribute Values: None

    :Creator: Harrison, D. and Rubinfeld, D.L.

This is a copy of UCI ML housing dataset.
https://archive.ics.uci.edu/ml/machine-learning-databases/housing/
</code></pre>
<p>​</p>
<pre><code>This dataset was taken from the StatLib library which is maintained at Carnegie Mellon University.

The Boston house-price data of Harrison, D. and Rubinfeld, D.L. 'Hedonic
prices and the demand for clean air', J. Environ. Economics &amp; Management,
vol.5, 81-102, 1978.   Used in Belsley, Kuh &amp; Welsch, 'Regression diagnostics
...', Wiley, 1980.   N.B. Various transformations are used in the table on
pages 244-261 of the latter.

The Boston house-price data has been used in many machine learning papers that address regression
problems.   
     
.. topic:: References

   - Belsley, Kuh &amp; Welsch, 'Regression diagnostics: Identifying Influential Data and Sources of Collinearity', Wiley, 1980. 244-261.
   - Quinlan,R. (1993). Combining Instance-Based and Model-Based Learning. In Proceedings on the Tenth International Conference of Machine Learning, 236-243, University of Massachusetts, Amherst. Morgan Kaufmann.
</code></pre>
<p>​</p>
 <br> 
<h3 id="0-2-데이터프레임-만들기"><a class="markdownIt-Anchor" href="#0-2-데이터프레임-만들기"></a> 0-2. 데이터프레임 만들기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame(data[<span class="string">'data'</span>], columns = data[<span class="string">'feature_names'</span>])</span><br><span class="line">df[<span class="string">'MEDV'</span>] = data[<span class="string">'target'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
      <th>MEDV</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0.0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1.0</td>
      <td>296.0</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
      <td>24.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
      <td>21.6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
      <td>34.7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
      <td>33.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
      <td>36.2</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p><strong>컬럼 소게</strong> (feature 13 + target 1):</p>
<ul>
<li>
<p><strong>CRIM</strong>: 범죄율</p>
</li>
<li>
<p><strong>ZN</strong>: 25,000 square feet 당 주거용 토지의 비율</p>
</li>
<li>
<p><strong>INDUS</strong>: 비소매(non-retail) 비즈니스 면적 비율</p>
</li>
<li>
<p><strong>CHAS</strong>: 찰스 강 더미 변수 (통로가 하천을 향하면 1; 그렇지 않으면 0)</p>
</li>
<li>
<p><strong>NOX</strong>: 산화 질소 농도 (천만 분의 1)</p>
</li>
<li>
<p><strong>RM</strong>:주거 당 평균 객실 수</p>
</li>
<li>
<p><strong>AGE</strong>: 1940 년 이전에 건축된 자가 소유 점유 비율</p>
</li>
<li>
<p><strong>DIS</strong>: 5 개의 보스턴 고용 센터까지의 가중 거리</p>
</li>
<li>
<p><strong>RAD</strong>: 고속도로 접근성 지수</p>
</li>
<li>
<p><strong>TAX</strong>: 10,000 달러 당 전체 가치 재산 세율</p>
</li>
<li>
<p><strong>PTRATIO</strong>  도시 별 학생-교사 비율</p>
</li>
<li>
<p><strong>B</strong>: 1000 (Bk-0.63) ^ 2 여기서 Bk는 도시 별 검정 비율입니다.</p>
</li>
<li>
<p><strong>LSTAT</strong>: 인구의 낮은 지위</p>
</li>
<li>
<p><strong>MEDV</strong>: 자가 주택의 중앙값 (1,000 달러 단위)</p>
<br>
</li>
</ul>
<h2 id="1-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#1-training-set-test-set-나누기"></a> <strong>1. Training set / Test set 나누기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(df.drop(<span class="string">'MEDV'</span>, <span class="number">1</span>), df[<span class="string">'MEDV'</span>], random_state=<span class="number">23</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((379, 13), (379,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((127, 13), (127,))
</code></pre>
  <br>
<h2 id="2-평가-지표-만들기"><a class="markdownIt-Anchor" href="#2-평가-지표-만들기"></a> <strong>2. 평가 지표 만들기</strong></h2>
<h3 id="2-1-평가-지표"><a class="markdownIt-Anchor" href="#2-1-평가-지표"></a> 2-1. 평가 지표</h3>
<p><strong>(1) MAE (Mean Absolute Error)</strong></p>
<p>MAE (평균 절대 오차): 에측값과 실제값의 차이의 <strong>절대값</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">MAE = \frac{1}{n} \sum_{i=1}^n \left\vert y_i - \widehat{y_i} \right\vert
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p>
<p><strong>(2) MSE (Mean Squared Error)</strong></p>
<p>MSE (평균 제곱 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">MSE = \frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>(3) RMSE (Root Mean Squared Error)</strong></p>
<p>RMSE (평균 제곱근 오차): 예측값과 실제값의 차이의 <strong>제곱</strong>에 대하여 평균을 낸 뒤 <strong>루트</strong>를 씌운 것</p>
<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="true">^</mo></mover><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">RMSE = \sqrt{\frac{1}{n} \sum_{i=1}^n \left( y_i - \widehat{y_i} \right)^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1568160000000005em;vertical-align:-1.277669em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8791470000000006em;"><span class="svg-align" style="top:-5.116816em;"><span class="pstrut" style="height:5.116816em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewBox="0 0 1062 239" preserveAspectRatio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.8391470000000005em;"><span class="pstrut" style="height:5.116816em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.196816em;"><svg width="400em" height="3.196816em" viewBox="0 0 400000 3196" preserveAspectRatio="xMinYMin slice"><path d="M702 80H400000v40H742v3062l-4 4-4 4c-.667.7
-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667
-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155
 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span></span></span></span></span></p>
  <br>
<h3 id="2-2-모델-성능-확인을-위한-함수"><a class="markdownIt-Anchor" href="#2-2-모델-성능-확인을-위한-함수"></a> 2-2. 모델 성능 확인을 위한 함수</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># sklearn 평가지표 활용</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error, mean_squared_error</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">my_predictions = {}</span><br><span class="line"></span><br><span class="line">colors = [<span class="string">'r'</span>, <span class="string">'c'</span>, <span class="string">'m'</span>, <span class="string">'y'</span>, <span class="string">'k'</span>, <span class="string">'khaki'</span>, <span class="string">'teal'</span>, <span class="string">'orchid'</span>, <span class="string">'sandybrown'</span>,</span><br><span class="line">          <span class="string">'greenyellow'</span>, <span class="string">'dodgerblue'</span>, <span class="string">'deepskyblue'</span>, <span class="string">'rosybrown'</span>, <span class="string">'firebrick'</span>,</span><br><span class="line">          <span class="string">'deeppink'</span>, <span class="string">'crimson'</span>, <span class="string">'salmon'</span>, <span class="string">'darkred'</span>, <span class="string">'olivedrab'</span>, <span class="string">'olive'</span>, </span><br><span class="line">          <span class="string">'forestgreen'</span>, <span class="string">'royalblue'</span>, <span class="string">'indigo'</span>, <span class="string">'navy'</span>, <span class="string">'mediumpurple'</span>, <span class="string">'chocolate'</span>,</span><br><span class="line">          <span class="string">'gold'</span>, <span class="string">'darkorange'</span>, <span class="string">'seagreen'</span>, <span class="string">'turquoise'</span>, <span class="string">'steelblue'</span>, <span class="string">'slategray'</span>, </span><br><span class="line">          <span class="string">'peru'</span>, <span class="string">'midnightblue'</span>, <span class="string">'slateblue'</span>, <span class="string">'dimgray'</span>, <span class="string">'cadetblue'</span>, <span class="string">'tomato'</span></span><br><span class="line">         ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># prediction plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_predictions</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    df = pd.DataFrame({<span class="string">'actual'</span>: y_test, <span class="string">'prediction'</span>: pred})</span><br><span class="line">    df = df.sort_values(by=<span class="string">'actual'</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    plt.figure(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'prediction'</span>], marker=<span class="string">'x'</span>, color=<span class="string">'r'</span>)</span><br><span class="line">    plt.scatter(df.index, df[<span class="string">'actual'</span>], alpha=<span class="number">0.7</span>, marker=<span class="string">'o'</span>, color=<span class="string">'black'</span>)</span><br><span class="line">    plt.title(name_, fontsize=<span class="number">15</span>)</span><br><span class="line">    plt.legend([<span class="string">'prediction'</span>, <span class="string">'actual'</span>], fontsize=<span class="number">12</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># evaluation plot</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mse_eval</span><span class="params">(name_, actual, pred)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> predictions</span><br><span class="line">    <span class="keyword">global</span> colors</span><br><span class="line"></span><br><span class="line">    plot_predictions(name_, actual, pred)</span><br><span class="line"></span><br><span class="line">    mse = mean_squared_error(actual, pred)</span><br><span class="line">    my_predictions[name_] = mse</span><br><span class="line"></span><br><span class="line">    y_value = sorted(my_predictions.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    df = pd.DataFrame(y_value, columns=[<span class="string">'model'</span>, <span class="string">'mse'</span>])</span><br><span class="line">    print(df)</span><br><span class="line">    min_ = df[<span class="string">'mse'</span>].min() - <span class="number">10</span></span><br><span class="line">    max_ = df[<span class="string">'mse'</span>].max() + <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    length = len(df)</span><br><span class="line">    </span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>, length))</span><br><span class="line">    ax = plt.subplot()</span><br><span class="line">    ax.set_yticks(np.arange(len(df)))</span><br><span class="line">    ax.set_yticklabels(df[<span class="string">'model'</span>], fontsize=<span class="number">15</span>)</span><br><span class="line">    bars = ax.barh(np.arange(len(df)), df[<span class="string">'mse'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(df[<span class="string">'mse'</span>]):</span><br><span class="line">        idx = np.random.choice(len(colors))</span><br><span class="line">        bars[i].set_color(colors[idx])</span><br><span class="line">        ax.text(v + <span class="number">2</span>, i, str(round(v, <span class="number">3</span>)), color=<span class="string">'k'</span>, fontsize=<span class="number">15</span>, fontweight=<span class="string">'bold'</span>)</span><br><span class="line">        </span><br><span class="line">    plt.title(<span class="string">'MSE Error'</span>, fontsize=<span class="number">18</span>)</span><br><span class="line">    plt.xlim(min_, max_)</span><br><span class="line">    </span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove model</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_model</span><span class="params">(name_)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_predictions</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">del</span> my_predictions[name_]</span><br><span class="line">    <span class="keyword">except</span> KeyError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># coefficients visulization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_coef</span><span class="params">(columns, coef)</span>:</span></span><br><span class="line">    coef_df = pd.DataFrame(list(zip(columns, coef)))</span><br><span class="line">    coef_df.columns=[<span class="string">'feature'</span>, <span class="string">'coef'</span>]</span><br><span class="line">    coef_df = coef_df.sort_values(<span class="string">'coef'</span>, ascending=<span class="literal">False</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    fig, ax = plt.subplots(figsize=(<span class="number">9</span>, <span class="number">7</span>))</span><br><span class="line">    ax.barh(np.arange(len(coef_df)), coef_df[<span class="string">'coef'</span>])</span><br><span class="line">    idx = np.arange(len(coef_df))</span><br><span class="line">    ax.set_yticks(idx)</span><br><span class="line">    ax.set_yticklabels(coef_df[<span class="string">'feature'</span>])</span><br><span class="line">    fig.tight_layout()</span><br><span class="line">    plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><br> <br></p>
<h2 id="3-단일-회귀-모델-지난-시간"><a class="markdownIt-Anchor" href="#3-단일-회귀-모델-지난-시간"></a> <strong>3. 단일 회귀 모델 (지난 시간)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Ridge</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> Lasso</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> ElasticNet</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler, MinMaxScaler, RobustScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.pipeline <span class="keyword">import</span> make_pipeline</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h3 id="1-linear-regression"><a class="markdownIt-Anchor" href="#1-linear-regression"></a> (1)  Linear Regression</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">linear_reg = LinearRegression(n_jobs=<span class="number">-1</span>)</span><br><span class="line">linear_reg.fit(x_train, y_train)</span><br><span class="line">linear_pred = linear_reg.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'LinearRegression'</span>, y_test, linear_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_43_0.png" alt="output_43_0"></p>
<pre><code>              model        mse
0  LinearRegression  22.770784
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_43_2.png" alt="output_43_2"></p>
<br>
<h3 id="2-ridge"><a class="markdownIt-Anchor" href="#2-ridge"></a> (2)  Ridge</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">ridge = Ridge(alpha=<span class="number">1</span>)</span><br><span class="line">ridge.fit(x_train, y_train)</span><br><span class="line">ridge_pred = ridge.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Ridge(alpha=1)'</span>, y_test, ridge_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_46_0.png" alt="output_46_0"></p>
<pre><code>              model        mse
0  LinearRegression  22.770784
1    Ridge(alpha=1)  22.690411
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_46_2.png" alt="output_46_2"></p>
<br>
<h3 id="3-lasso"><a class="markdownIt-Anchor" href="#3-lasso"></a> (3)  LASSO</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lasso = Lasso(alpha=<span class="number">0.01</span>)</span><br><span class="line">lasso.fit(x_train, y_train)</span><br><span class="line">lasso_pred = lasso.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Lasso(alpha=0.01)'</span>, y_test, lasso_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_49_0.png" alt="output_49_0"></p>
<pre><code>               model        mse
0   LinearRegression  22.770784
1     Ridge(alpha=1)  22.690411
2  Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_49_2.png" alt="output_49_2"></p>
<br>
<h3 id="4-elasticnet"><a class="markdownIt-Anchor" href="#4-elasticnet"></a> (4) ElasticNet</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">elasticnet = ElasticNet(alpha=<span class="number">0.5</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">elasticnet.fit(x_train, y_train)</span><br><span class="line">elas_pred = elasticnet.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'ElasticNet(l1_ratio=0.2)'</span>, y_test, elas_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_52_0.png" alt="output_52_0"></p>
<pre><code>                      model        mse
0  ElasticNet(l1_ratio=0.2)  24.481069
1          LinearRegression  22.770784
2            Ridge(alpha=1)  22.690411
3         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_52_2.png" alt="output_52_2"></p>
<br>
<h3 id="5-with-standard-scaling"><a class="markdownIt-Anchor" href="#5-with-standard-scaling"></a> (5) With Standard Scaling</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">standard_elasticnet = make_pipeline(</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.5</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">elas_scaled_pred = standard_elasticnet.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Standard ElasticNet'</span>, y_test, elas_scaled_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_55_0.png" alt="output_55_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_55_2.png" alt="output_55_2"></p>
<br>
<h3 id="6-polynomial-features"><a class="markdownIt-Anchor" href="#6-polynomial-features"></a> (6) Polynomial Features</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 2-Degree Polynomial Features + Standard Scaling</span></span><br><span class="line">poly_elasticnet = make_pipeline(</span><br><span class="line">    PolynomialFeatures(degree=<span class="number">2</span>, include_bias=<span class="literal">False</span>),</span><br><span class="line">    StandardScaler(),</span><br><span class="line">    ElasticNet(alpha=<span class="number">0.5</span>, l1_ratio=<span class="number">0.2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">poly_pred = poly_elasticnet.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Poly ElasticNet'</span>, y_test, poly_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_58_0-1596543446470.png" alt="output_58_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
5           Poly ElasticNet  20.805986
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_58_2-1596543452273.png" alt="output_58_2"></p>
<br>
<br>
<h2 id="4-앙상블-ensemble-알고리즘"><a class="markdownIt-Anchor" href="#4-앙상블-ensemble-알고리즘"></a> <strong>4. 앙상블 (Ensemble)  알고리즘</strong></h2>
<p><a href="https://scikit-learn.org/stable/modules/classes.html?highlight=ensemble#module-sklearn.ensemble" target="_blank" rel="noopener">[sklearn.ensemble] Document</a></p>
<p><strong>앙상블 기법의 종류</strong></p>
<ul>
<li>
<p>보팅 (Voting): 투표를 통해 결과 도출</p>
</li>
<li>
<p>배깅 (Bagging): 샘플 중복 생성을 통해 결과 도출</p>
</li>
<li>
<p>부스팅 (Boosting): 이전 오차를 보완하면서 가중치 부여</p>
</li>
<li>
<p>스태킹 (Stacking): 여러 모델을 기반으로 예측된 결과를 통해 meta 모델이 다시 한번 예측</p>
<br>
</li>
</ul>
<h3 id="4-1-보팅-voting"><a class="markdownIt-Anchor" href="#4-1-보팅-voting"></a> 4-1. 보팅 (Voting)</h3>
<h4 id="회귀-regression"><a class="markdownIt-Anchor" href="#회귀-regression"></a> &gt;&gt; 회귀 (Regression)</h4>
<p>Voting은 단어 뜻 그대로 <strong>투표를 통해 최종 결과를 결정하는 방식</strong>이다. Voting과 Bagging은 모두 투표방식이지만, 다음과 같은 큰 차이점이 있다:</p>
<ul>
<li>Voting은 다른 알고리즘 model을 조합해서 사용함</li>
<li>Bagging은 같은 알고리즘 내에서 다른 sample 조합을 사용함</li>
</ul>
 <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> VotingRegressor</span><br></pre></td></tr></tbody></table></figure>
<p>반드시, <strong>Tuple 형태로 모델</strong>을 정의해야 한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 보팅에 참여한 single models 지정</span></span><br><span class="line">single_models = [</span><br><span class="line">    (<span class="string">'linear_reg'</span>, linear_reg),</span><br><span class="line">    (<span class="string">'ridge'</span>, ridge),</span><br><span class="line">    (<span class="string">'lasso'</span>, lasso),</span><br><span class="line">    (<span class="string">'elasticnet'</span>, elasticnet),</span><br><span class="line">    (<span class="string">'standard_elasticnet'</span>, standard_elasticnet),</span><br><span class="line">    (<span class="string">'poly_elasticnet'</span>, poly_elasticnet)</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># voting regressor 만들기</span></span><br><span class="line">voting_regressor = VotingRegressor(single_models, n_jobs=<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">voting_regressor.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>VotingRegressor(estimators=[('linear_reg',
                             LinearRegression(copy_X=True, fit_intercept=True,
                                              n_jobs=-1, normalize=False)),
                            ('ridge',
                             Ridge(alpha=1, copy_X=True, fit_intercept=True,
                                   max_iter=None, normalize=False,
                                   random_state=None, solver='auto',
                                   tol=0.001)),
                            ('lasso',
                             Lasso(alpha=0.01, copy_X=True, fit_intercept=True,
                                   max_iter=1000, normalize=False,
                                   positive=False, pr...
                                                                 interaction_only=False,
                                                                 order='C')),
                                             ('standardscaler',
                                              StandardScaler(copy=True,
                                                             with_mean=True,
                                                             with_std=True)),
                                             ('elasticnet',
                                              ElasticNet(alpha=0.5, copy_X=True,
                                                         fit_intercept=True,
                                                         l1_ratio=0.2,
                                                         max_iter=1000,
                                                         normalize=False,
                                                         positive=False,
                                                         precompute=False,
                                                         random_state=None,
                                                         selection='cyclic',
                                                         tol=0.0001,
                                                         warm_start=False))],
                                      verbose=False))],
                n_jobs=-1, weights=None)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">voting_pred = voting_regressor.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Voting Ensemble'</span>, y_test, voting_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_74_0-1596543659301.png" alt="output_74_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
5           Voting Ensemble  22.092158
6           Poly ElasticNet  20.805986
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_74_2-1596543665427.png" alt="output_74_2"></p>
<br>
<h4 id="분류-classification"><a class="markdownIt-Anchor" href="#분류-classification"></a> &gt;&gt; 분류 (Classification)</h4>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-1" target="_blank" rel="noopener">참고 자료 (Blog)</a></p>
<p>분류기 모델을 만들때, Voting 앙상블은 1가지의 <strong>중요한 parameter</strong>가 있다:</p>
<ul>
<li><code>voting</code> = {‘hard’, ‘soft’}</li>
</ul>
<br>
<p>class를 0, 1로 분류 예측을 하는 이진 분류를 예로 들어 보자.</p>
<p><strong>(1) hard 로 설정한 경우</strong></p>
<p>Hard Voting 방식에서는 결과 값에 대한 다수 class를 사용한다.</p>
<blockquote>
<p>분류를 예측한 값이 1, 0, 0, 1, 1 이었다고 가정한다면 1이 3표, 0이 2표를 받았기 때문에 Hard Voting 방식에서는 1이 최종 값으로 예측을 하게 된다.</p>
</blockquote>
 <br> 
<p><strong>(2) soft 로 설정한 경우</strong></p>
<p>soft voting 방식은 각각의 확률의 평균 값을 계산한다음에 가장 확률이 높은 값으로 확정짓게 된다.</p>
<blockquote>
<p>가령 class 0이 나올 확률이 (0.4, 0.9, 0.9, 0.4, 0.4)이었고, class 1이 나올 확률이 (0.6, 0.1, 0.1, 0.6, 0.6) 이었다면,</p>
<ul>
<li>class 0이 나올 최종 확률은 (0.4+0.9+0.9+0.4+0.4) / 5 = 0.44,</li>
<li>class 1이 나올 최종 확률은 (0.6+0.1+0.1+0.6+0.6) / 5 = 0.4</li>
</ul>
<p>가 되기 때문에 앞선 Hard Voting의 결과와는 다른 결과 값이 최종으로 선출되게 된다.</p>
</blockquote>
<br>  
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> VotingClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression, RidgeClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">models = [</span><br><span class="line">    (<span class="string">'Logit'</span>, LogisticRegression()),</span><br><span class="line">    (<span class="string">'ridge'</span>, RidgeClassifier())</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<p>voting 옵션 지정</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">vc = VotingClassifier(models, voting=<span class="string">'soft'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="4-2-배깅-bagging"><a class="markdownIt-Anchor" href="#4-2-배깅-bagging"></a> 4-2. 배깅 (Bagging)</h3>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-2" target="_blank" rel="noopener">참고 자료 (Blog)</a></p>
<p>Bagging은 <strong>Bootstrap Aggregating의 줄임말</strong>이다.</p>
<p>Bootstrap은 여러 개의 dataset을 중첩을 허용하게 하여 샘플링하여 분할하는 방식.</p>
<p>데이터 셋의 구성이 [1, 2, 3, 4, 5]로 되어 있다면,</p>
<ol>
<li>group 1 = [1, 2, 3]</li>
<li>group 2 = [1, 3, 4]</li>
<li>group 3 = [2, 3, 5]</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://teddylee777.github.io/images/2019-12-17/image-20191217015537872.png'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_94_0-1596543677837.png" alt="output_94_0"></p>
<br>  
<p><strong>Voting VS Bagging</strong></p>
<ul>
<li><strong>Voting</strong>은 여러 알고리즘의 조합에 대한 앙상블</li>
<li><strong>Bagging</strong>은 하나의 단일 알고리즘에 대하여 여러 개의 샘플 조합으로 앙상블</li>
</ul>
<p><strong>대표적인 Bagging 앙상블</strong></p>
<ol>
<li>
<p>Random Forest</p>
</li>
<li>
<p>Bagging</p>
</li>
</ol>
  <br> 
<h4 id="random-forest"><a class="markdownIt-Anchor" href="#random-forest"></a> &gt;&gt; Random Forest</h4>
<ul>
<li>Decision Tree 기반 Bagging 앙상블</li>
<li>굉장히 인기있는 앙상블 모델</li>
<li>사용성이 쉽고, 성능도 우수함</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html" target="_blank" rel="noopener">[sklearn.ensemble.<strong>RandomForestRegressor</strong>] Document</a><br>
<a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html" target="_blank" rel="noopener">[sklearn.ensemble.<strong>RandomForestClassifier</strong>] Document</a></p>
  <br>
<ul>
<li><strong>회귀 (Regression)</strong></li>
</ul>
<p><strong>Hyper-parameter의 default value로 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rfr = RandomForestRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">rfr.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                      max_depth=None, max_features='auto', max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_impurity_split=None, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      n_estimators=100, n_jobs=None, oob_score=False,
                      random_state=1, verbose=0, warm_start=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rfr_pred = rfr.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'RandomForest Ensemble'</span>, y_test, rfr_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_107_0-1596543686370.png" alt="output_107_0"></p>
<pre><code>                      model        mse
0       Standard ElasticNet  26.010756
1  ElasticNet(l1_ratio=0.2)  24.481069
2          LinearRegression  22.770784
3            Ridge(alpha=1)  22.690411
4         Lasso(alpha=0.01)  22.635614
5           Voting Ensemble  22.092158
6           Poly ElasticNet  20.805986
7     RandomForest Ensemble  13.781191
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_107_2-1596543692042.png" alt="output_107_2"></p>
<br>
<p><strong>주요 Hyper-parameter</strong></p>
<ul>
<li><strong>random_state:</strong> random seed 고정 값</li>
<li><strong>n_jobs:</strong> CPU 사용 갯수</li>
<li><strong>max_depth:</strong> 깊어질 수 있는 최대 깊이. 과대적합 방지용</li>
<li><strong>n_estimators:</strong> 암상블하는 트리의 갯수</li>
<li><strong>max_features:</strong> best split을 판단할 때 최대로 사용할 feature의 갯수 {‘auto’, ‘sqrt’, ‘log2’}. 과대적합 방지용</li>
<li><strong>min_samples_split:</strong> 트리가 분할할 때 최소 샘플의 갯수. default=2. 과대적합 방지용</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://teddylee777.github.io/images/2020-01-09/decistion-tree.png'</span>, width=<span class="number">600</span>)</span><br></pre></td></tr></tbody></table></figure>
<img src="/images/S-Python-sklearn4/output_110_0-1596543700142.png" alt="output_110_0" style="zoom: 50%;">
 <br> 
<p><strong>With Hyper-parameter Tuning</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rfr_t = RandomForestRegressor(random_state=<span class="number">1</span>, n_estimators=<span class="number">500</span>, max_depth=<span class="number">7</span>, max_features=<span class="string">'sqrt'</span>)</span><br><span class="line">rfr_t.fit(x_train, y_train)</span><br><span class="line">rfr_t_pred = rfr_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'RandomForest Ensemble w/ Tuning'</span>, y_test, rfr_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_113_0-1596543713401.png" alt="output_113_0"></p>
<pre><code>                             model        mse
0              Standard ElasticNet  26.010756
1         ElasticNet(l1_ratio=0.2)  24.481069
2                 LinearRegression  22.770784
3                   Ridge(alpha=1)  22.690411
4                Lasso(alpha=0.01)  22.635614
5                  Voting Ensemble  22.092158
6                  Poly ElasticNet  20.805986
7            RandomForest Ensemble  13.781191
8  RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_113_2-1596543719396.png" alt="output_113_2"></p>
<br>
<h3 id="4-3-부스팅-boosting"><a class="markdownIt-Anchor" href="#4-3-부스팅-boosting"></a> 4-3. 부스팅 (Boosting)</h3>
<p><a href="https://teddylee777.github.io/machine-learning/ensemble%EA%B8%B0%EB%B2%95%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4%EC%99%80-%EC%A2%85%EB%A5%98-3" target="_blank" rel="noopener">참고 자료 (Blog)</a></p>
<p>악한 학습기를 순차적으로 학습을 하되, 이전 학습에 대하여 잘멋 예측된 데이터에 <strong>가중치를 부여해 오차를 보완</strong>해 나가는 방식이다.</p>
<p><strong>장점</strong></p>
<ul>
<li>성능이 매우 우수하다 (LightGBM, XGBoost)</li>
</ul>
<p><strong>단점</strong></p>
<ul>
<li>부스팅 알고리즘의 특성상 계속 약점(오분류/잔차)을 보완하려고 하기 때문에 <strong>잘못된 레이블링이나 아웃라이어에 필요 이상으로 민감</strong>할 수 있다</li>
<li>다른 앙상블 대비 <strong>학습 시간이 오래걸린다는 단점</strong>이 존재</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://keras.io/img/graph-kaggle-1.jpeg'</span>, width=<span class="number">800</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_120_0-1596543725618.jpg" alt="output_120_0"></p>
  <br>
<p><strong>대표적인 Boosting 앙상블</strong></p>
<ol>
<li>
<p>AdaBoost</p>
</li>
<li>
<p>GradientBoost</p>
</li>
<li>
<p>LightGBM (LGBM)</p>
</li>
<li>
<p>XGBoost</p>
</li>
</ol>
  <br> 
<h4 id="4-3-1-gradient-boost"><a class="markdownIt-Anchor" href="#4-3-1-gradient-boost"></a> 4-3-1. Gradient Boost</h4>
<ul>
<li><strong>장점:</strong> 성능이 우수함</li>
<li><strong>단점:</strong> 학습 시간이 너무 오래 걸린다</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.GradientBoostingRegressor.html?highlight=gradient%20boost#sklearn.ensemble.GradientBoostingRegressor" target="_blank" rel="noopener">[sklearn.ensemble.<strong>GradientBoostingRegressor</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> GradientBoostingRegressor, GradientBoostingClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># default value로 학습</span></span><br><span class="line">gbr = GradientBoostingRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">gbr.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='ls', max_depth=3,
                          max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_impurity_split=None,
                          min_samples_leaf=1, min_samples_split=2,
                          min_weight_fraction_leaf=0.0, n_estimators=100,
                          n_iter_no_change=None, presort='deprecated',
                          random_state=1, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">gbr_pred = gbr.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble'</span>, y_test, gbr_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_129_0-1596543733348.png" alt="output_129_0"></p>
<pre><code>                             model        mse
0              Standard ElasticNet  26.010756
1         ElasticNet(l1_ratio=0.2)  24.481069
2                 LinearRegression  22.770784
3                   Ridge(alpha=1)  22.690411
4                Lasso(alpha=0.01)  22.635614
5                  Voting Ensemble  22.092158
6                  Poly ElasticNet  20.805986
7            RandomForest Ensemble  13.781191
8           GradientBoost Ensemble  13.451877
9  RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_129_2-1596543738508.png" alt="output_129_2"></p>
<br>
<p><strong>주요 Hyper-parameter</strong></p>
<ul>
<li><strong>random_state:</strong> random seed 고정 값</li>
<li><strong>n_jobs:</strong> CPU 사용 갯수</li>
<li><strong>learning rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. default=0.1 (n_estimators와 같이 튜닝해야 함)</li>
<li><strong>n_estimators:</strong> 부스팅 스테이지 수. default=100<br>
(Random Forest 트리의 갯수 설정과 비슷)</li>
<li><strong>subsample:</strong> 샘플 사용 비율 (max_features와 비슷). 과대적합 방지용</li>
<li><strong>min_samples_split:</strong> 노드 분할시 최소 샘플의 갯수. default=2. 과대적합 방지용</li>
</ul>
<blockquote>
<p>There’s a trade-off between <font color="blue"><em>learning_rate</em></font> and <font color="blue"><em>n_estimators</em></font>.<br>
둘의 곱을 유지하는 것이 좋다</p>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># with hyper-parameter tuning</span></span><br><span class="line"><span class="comment"># learning_rate=0.01 (without tuning n_estimators together)</span></span><br><span class="line">gbr_t = GradientBoostingRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>)</span><br><span class="line">gbr_t.fit(x_train, y_train)</span><br><span class="line">gbr_t_pred = gbr_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble w/ tuning (lr=0.01)'</span>, y_test, gbr_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_133_0-1596543744823.png" alt="output_133_0"></p>
<pre><code>                                         model        mse
0                          Standard ElasticNet  26.010756
1   GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                     ElasticNet(l1_ratio=0.2)  24.481069
3                             LinearRegression  22.770784
4                               Ridge(alpha=1)  22.690411
5                            Lasso(alpha=0.01)  22.635614
6                              Voting Ensemble  22.092158
7                              Poly ElasticNet  20.805986
8                        RandomForest Ensemble  13.781191
9                       GradientBoost Ensemble  13.451877
10             RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_133_2-1596543750011.png" alt="output_133_2"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># tuning: learning_rate=0.01, n_estimators=1000</span></span><br><span class="line">gbr_t2 = GradientBoostingRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">1000</span>)</span><br><span class="line">gbr_t2.fit(x_train, y_train)</span><br><span class="line">gbr_t2_pred = gbr_t2.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble w/ tuning (lr=0.01, est=1000)'</span>, y_test, gbr_t2_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_135_0-1596543755501.png" alt="output_135_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                               RandomForest Ensemble  13.781191
9                              GradientBoost Ensemble  13.451877
10  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
11                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_135_2-1596543760559.png" alt="output_135_2"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># tuning: learning_rate=0.01, n_estimators=1000, subsample=0.8</span></span><br><span class="line">gbr_t3 = GradientBoostingRegressor(random_state=<span class="number">42</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">1000</span>, subsample=<span class="number">0.7</span>)</span><br><span class="line">gbr_t3.fit(x_train, y_train)</span><br><span class="line">gbr_t3_pred = gbr_t3.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GradientBoost Ensemble w/ tuning (lr=0.01, est=1000, subsample=0.7)'</span>, y_test, gbr_t3_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_137_0-1596543766188.png" alt="output_137_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                               RandomForest Ensemble  13.781191
9                              GradientBoost Ensemble  13.451877
10  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
12                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_137_2-1596543771241.png" alt="output_137_2"></p>
<br>
<h4 id="4-3-2-xgboost"><a class="markdownIt-Anchor" href="#4-3-2-xgboost"></a> 4-3-2. XGBoost</h4>
<p>e<strong>X</strong>treme <strong>G</strong>radient <strong>B</strong>oosting</p>
<p><a href="https://xgboost.readthedocs.io/en/latest/" target="_blank" rel="noopener">[XGBoost] Document</a></p>
<p><strong>주요 특징</strong></p>
<ul>
<li>
<p>scikit-learn 패키지 아님</p>
</li>
<li>
<p>성능이 우수함</p>
</li>
<li>
<p>GBM보다는 빠르고 성능도 향상됨</p>
</li>
<li>
<p>여전히 학습 속도가 느림</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install xgboost</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Requirement already satisfied: xgboost in d:\anaconda\lib\site-packages (1.1.1)
Requirement already satisfied: scipy in d:\anaconda\lib\site-packages (from xgboost) (1.4.1)
Requirement already satisfied: numpy in d:\anaconda\lib\site-packages (from xgboost) (1.18.1)
Note: you may need to restart the kernel to use updated packages.
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> XGBRegressor, XGBClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># default value로 학습</span></span><br><span class="line">xgb = XGBRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">xgb.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,
             colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,
             importance_type='gain', interaction_constraints='',
             learning_rate=0.300000012, max_delta_step=0, max_depth=6,
             min_child_weight=1, missing=nan, monotone_constraints='()',
             n_estimators=100, n_jobs=0, num_parallel_tree=1,
             objective='reg:squarederror', random_state=1, reg_alpha=0,
             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact',
             validate_parameters=1, verbosity=None)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">xgb_pred = xgb.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'XGBoost'</span>, y_test, xgb_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_146_0-1596543778583.png" alt="output_146_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
13                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_146_2-1596543783973.png" alt="output_146_2"></p>
<br>
<p><strong>주요 Hyper-parameter</strong></p>
<ul>
<li>
<p><strong>random_state:</strong> random seed 고정 값</p>
</li>
<li>
<p><strong>n_jobs:</strong> CPU 사용 갯수</p>
</li>
<li>
<p><strong>learning_rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. n_estimators와 같이 튜닝. default=0.1</p>
</li>
<li>
<p><strong>n_estimators:</strong> 부스팅 스테이지 수. (랜덤포레스트 트리의 갯수 설정과 비슷한 개념). default=100</p>
</li>
<li>
<p><strong>max_depth:</strong> 트리의 깊이. 과대적합 방지용. default=3.</p>
</li>
<li>
<p><strong>subsample:</strong> 샘플 사용 비율. 과대적합 방지용. default=1.0</p>
</li>
<li>
<p><strong>max_features:</strong> 최대로 사용할 feature의 비율. 과대적합 방지용. default=1.0</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># with hyeper-parameter tuning</span></span><br><span class="line">xgb_t = XGBRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">1000</span>, subsample=<span class="number">0.7</span>, max_features=<span class="number">0.8</span>, max_depth=<span class="number">7</span>)</span><br><span class="line">xgb_t.fit(x_train, y_train)</span><br><span class="line">xgb_t_pred = xgb_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'XGBoost w/ Tuning'</span>, y_test, xgb_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[16:55:00] WARNING: C:\Users\Administrator\workspace\xgboost-win64_release_1.1.0\src\learner.cc:480: 
Parameters: { max_features } might not be used.

  This may not be accurate due to some parameters are only used in language bindings but
  passed down to XGBoost core.  Or some parameters are not used but slip through this
  verification. Please open an issue if you find above cases.
</code></pre>
<p>​<br>
​</p>
<p><img src="/images/S-Python-sklearn4/output_150_1-1596543791859.png" alt="output_150_1"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
13                                  XGBoost w/ Tuning  11.987602
14                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_150_3-1596543797426.png" alt="output_150_3"></p>
<br>
<h4 id="4-3-3-lightgbm"><a class="markdownIt-Anchor" href="#4-3-3-lightgbm"></a> 4-3-3. LightGBM</h4>
<p><a href="https://lightgbm.readthedocs.io/en/latest/" target="_blank" rel="noopener">[LightGBM] Document</a></p>
<p><strong>주요 특징</strong></p>
<ul>
<li>
<p>scikit-learn 패키지가 아님</p>
</li>
<li>
<p>성능이 우수함</p>
</li>
<li>
<p>속도도 매우 빠름</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pip install lightgbm</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Requirement already satisfied: lightgbm in d:\anaconda\lib\site-packages (2.3.1)
Requirement already satisfied: scipy in d:\anaconda\lib\site-packages (from lightgbm) (1.4.1)
Requirement already satisfied: numpy in d:\anaconda\lib\site-packages (from lightgbm) (1.18.1)
Requirement already satisfied: scikit-learn in d:\anaconda\lib\site-packages (from lightgbm) (0.22.1)
Requirement already satisfied: joblib&gt;=0.11 in d:\anaconda\lib\site-packages (from scikit-learn-&gt;lightgbm) (0.14.1)
Note: you may need to restart the kernel to use updated packages.
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lightgbm <span class="keyword">import</span> LGBMRegressor, LGBMClassifier</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># default value 로 학습</span></span><br><span class="line">lgbm = LGBMRegressor(random_state=<span class="number">1</span>)</span><br><span class="line">lgbm.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=1, reg_alpha=0.0, reg_lambda=0.0, silent=True,
              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_pred = lgbm.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'LightGBM'</span>, y_test, lgbm_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_158_0-1596543804030.png" alt="output_158_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12                                           LightGBM  12.882170
13  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
14                                  XGBoost w/ Tuning  11.987602
15                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_158_2-1596543812633.png" alt="output_158_2"></p>
<br>
<p><strong>주요 Hyperparameter</strong></p>
<ul>
<li>
<p><strong>random_state:</strong> random seed 고정 값</p>
</li>
<li>
<p><strong>n_jobs:</strong> CPU 사용 갯수</p>
</li>
<li>
<p><strong>learning_rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. n_estimators와 같이 튜닝. default=0.1</p>
</li>
<li>
<p><strong>n_estimators:</strong> 부스팅 스테이지 수. (랜덤포레스트 트리의 갯수 설정과 비슷한 개념). default=100</p>
</li>
<li>
<p><strong>max_depth:</strong> 트리의 깊이. 과대적합 방지용. default=3.</p>
</li>
<li>
<p><strong>colsample_bytree:</strong> 샘플 사용 비율 (max_features와 비슷한 개념). 과대적합 방지용. default=1.0</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># with hyper-parameter tuning</span></span><br><span class="line">lgbm_t = LGBMRegressor(random_state=<span class="number">1</span>, learning_rate=<span class="number">0.01</span>, n_estimators=<span class="number">2000</span>, colsample_bytree=<span class="number">0.9</span>, subsample=<span class="number">0.7</span>, max_depth=<span class="number">5</span>)</span><br><span class="line">lgbm_t.fit(x_train, y_train)</span><br><span class="line">lgbm_t_pred = lgbm_t.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'LightGBM w/ Tuning'</span>, y_test, lgbm_t_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_162_0-1596543872792.png" alt="output_162_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                             XGBoost  13.841454
9                               RandomForest Ensemble  13.781191
10                             GradientBoost Ensemble  13.451877
11  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
12                                           LightGBM  12.882170
13  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
14                                 LightGBM w/ Tuning  12.200040
15                                  XGBoost w/ Tuning  11.987602
16                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_162_2-1596543881929.png" alt="output_162_2"></p>
<br>
<h3 id="4-4-스태킹-stacking"><a class="markdownIt-Anchor" href="#4-4-스태킹-stacking"></a> 4-4. 스태킹 (Stacking)</h3>
<p>개별 모델이 예측한 데이터를 기반으로 <strong>final_estimators</strong> 종합하여 예측을 수행</p>
<ul>
<li>
<p>성능을 극으로 끌오올릴 때 활용하기도 함</p>
</li>
<li>
<p>과대적합을 유발할 수 있다. (특히, 데이터셋이 적은 경우)</p>
<br>
</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.StackingRegressor.html" target="_blank" rel="noopener">[sklearn.ensemble.<strong>StackingRegressor</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> StackingRegressor</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">stack_models = [</span><br><span class="line">    (<span class="string">'elasticnet'</span>, poly_elasticnet),</span><br><span class="line">    (<span class="string">'randomforest'</span>, rfr_t),</span><br><span class="line">    (<span class="string">'lgbm'</span>, lgbm_t)</span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">stack_reg = StackingRegressor(stack_models, final_estimator=xgb, n_jobs=<span class="number">-1</span>)</span><br><span class="line">stack_reg.fit(x_train, y_train)</span><br><span class="line">stack_pred = stack_reg.predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'Stacking Ensemble'</span>, y_test, stack_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_171_0-1596543891772.png" alt="output_171_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
15                                 LightGBM w/ Tuning  12.200040
16                                  XGBoost w/ Tuning  11.987602
17                    RandomForest Ensemble w/ Tuning  11.481491
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_171_2-1596543909420.png" alt="output_171_2"></p>
<br>
<h3 id="4-5-weighted-blending"><a class="markdownIt-Anchor" href="#4-5-weighted-blending"></a> 4-5. Weighted Blending</h3>
<p>각 모델의 <strong>예측값</strong>에 대하여 weight를 곱해혀 최종 output 산출</p>
<ul>
<li>
<p>모델에 대한 가중치를 조절하여, 최종 output을 산출함</p>
</li>
<li>
<p><strong>가중치의 합은 1.0</strong>이 되도록 설정</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">final_outputs = {</span><br><span class="line">    <span class="string">'randomforest'</span>: rfr_t_pred,</span><br><span class="line">    <span class="string">'xgboost'</span>: xgb_t_pred,</span><br><span class="line">    <span class="string">'lgbm'</span>: lgbm_t_pred</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">final_prediction=\</span><br><span class="line">final_outputs[<span class="string">'randomforest'</span>] * <span class="number">0.5</span>\</span><br><span class="line">+final_outputs[<span class="string">'xgboost'</span>] * <span class="number">0.3</span>\</span><br><span class="line">+final_outputs[<span class="string">'lgbm'</span>] * <span class="number">0.2</span>\</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">mse_eval(<span class="string">'Weighted Blending'</span>, y_test, final_prediction)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_178_0-1596543918172.png" alt="output_178_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
15                                 LightGBM w/ Tuning  12.200040
16                                  XGBoost w/ Tuning  11.987602
17                    RandomForest Ensemble w/ Tuning  11.481491
18                                  Weighted Blending  10.585610
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_178_2-1596543958921.png" alt="output_178_2"></p>
<br>
<h3 id="4-6-앙상블-모델-정리"><a class="markdownIt-Anchor" href="#4-6-앙상블-모델-정리"></a> 4-6. 앙상블 모델 정리</h3>
<ol>
<li>
<p>앙상블은 대체적으로 단일 모델 대비 성능이 좋다</p>
</li>
<li>
<p>앙상블을 앙상블하는 기법인 Stacking과 Weighted Blending도 참고해 볼만 하다</p>
</li>
<li>
<p>앙상블 모델은 적절한 <strong>Hyper-parameter Tuning</strong>이 중요하다</p>
</li>
<li>
<p>앙상블 모델은 대체적으로 학습시간이 더 오래 걸린다</p>
</li>
<li>
<p>따라서, 모델 튜닝을 하는 데에 시간이 오래 소유된다</p>
<br>
</li>
</ol>
  <br>
<h2 id="5-cross-validation"><a class="markdownIt-Anchor" href="#5-cross-validation"></a> <strong>5. Cross Validation</strong></h2>
<h3 id="5-1-cross-validation-소개"><a class="markdownIt-Anchor" href="#5-1-cross-validation-소개"></a> 5-1. Cross Validation 소개</h3>
<p><a href="https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation" target="_blank" rel="noopener">Cross Validation 알아보기</a></p>
<p><a href="https://3months.tistory.com/321" target="_blank" rel="noopener">참고 자료: 딥러닝 모델의 K-겹 교차검증 (K-fold Cross Validation)</a></p>
<p>전에 진행했던 실습에서도 보였듯이, Hyper-parameter의 값은 모델의 성능을 좌우한다. 그러므로 예측 모델의 성능을 높이기 위해, Hyper-parameter Tuning이 매우 중요하다.</p>
<ul>
<li>
<p>이를 실현하기 위해 저희는 Training data을 다시 Training set과 Validation set으로 나눈다. Trainging set에서 Hyper-parameter값을 바뀌가면서 모델 학습하고, Validation set에서 모델의 성능을 평가하여, 모델 성능을 제일 높일 수 있는 Hyper-parameter값을 선택한다</p>
</li>
<li>
<p>하지만, 데이터의 일부만 Validation set으로 사용해 모델 성능을 평가하게 되면, 훈련된 모델이 Test set에 대한 성능 평가의 신뢰성이 떨어질 수 있다. 이를 방지하기 위해 **K-fold Cross Validation (K-겹 교차검증)**을 많이 활용한다</p>
<ul>
<li>K겹 교차 검증은 모든 데이터가 최소 한 번은 validation set으로 쓰이도록 한다<br>
(아래의 그림을 보면, 데이터를 5개로 쪼개 매번 validation set을 바꿔나가는 것을 볼 수 있다)</li>
<li>K번 검증을 통해 구한 K 개의 평가지표 값을 평균 내어 모델 성능을 평가한다</li>
</ul>
</li>
</ul>
<p><img src="/images/S-Python-sklearn4/grid_search_cross_validation.png" alt="CV"></p>
<br>
<p>[예시]</p>
<ul>
<li>
<p>Estimation 1일 때,<br>
Training set: [2, 3, 4, 5] / Validation set: [1]</p>
</li>
<li>
<p>Estimation 2일 때,<br>
Training set: [1, 3, 4, 5] / Validation set: [2]</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> KFold</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">n_splits = <span class="number">5</span></span><br><span class="line">kfold = KFold(n_splits=n_splits, random_state=<span class="number">1</span>, shuffle = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
      <th>MEDV</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0.0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1.0</td>
      <td>296.0</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
      <td>24.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
      <td>21.6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0.0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2.0</td>
      <td>242.0</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
      <td>34.7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
      <td>33.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0.0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3.0</td>
      <td>222.0</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
      <td>36.2</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">X = np.array(df.drop(<span class="string">'MEDV'</span>, <span class="number">1</span>))</span><br><span class="line">Y = np.array(df[<span class="string">'MEDV'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_fold = LGBMRegressor(random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line">total_error = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> train_index, test_index <span class="keyword">in</span> kfold.split(X):</span><br><span class="line">    x_train_fold, x_test_fold = X[train_index], X[test_index]</span><br><span class="line">    y_train_fold, y_test_fold = Y[train_index], Y[test_index]</span><br><span class="line">    lgbm_fold_pred = lgbm_fold.fit(x_train_fold, y_train_fold).predict(x_test_fold)</span><br><span class="line">    error = mean_squared_error(y_test_fold, lgbm_fold_pred)</span><br><span class="line">    print(<span class="string">'Fold = {}, prediction score = {:.2f}'</span>.format(i, error))</span><br><span class="line">    total_error += error</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">print(<span class="string">'---'</span>*<span class="number">10</span>)</span><br><span class="line">print(<span class="string">'Average Error: %s'</span> % (total_error / n_splits))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Fold = 1, prediction score = 9.76
Fold = 2, prediction score = 20.58
Fold = 3, prediction score = 6.95
Fold = 4, prediction score = 12.18
Fold = 5, prediction score = 10.87
------------------------------
Average Error: 12.06743160435072
</code></pre>
<br>
<h3 id="5-2-hyper-parameter-튜닝"><a class="markdownIt-Anchor" href="#5-2-hyper-parameter-튜닝"></a> 5-2. Hyper-parameter 튜닝</h3>
<p><strong>Hyper-parameter 튜닝</strong> 시 경우의 수가 너무 많으므로 우리는 <strong>자동화</strong>할 틸요가 있다</p>
<p>sklearn 패키지에서 자주 사용되는 hyper-parameter 튜닝을 돕는 클래스는 다음 2가지가 있다:</p>
<ol>
<li><strong>RandomizedSerchCV</strong></li>
<li><strong>GridSerchCV</strong></li>
</ol>
<p><strong>적용하는 방법</strong></p>
<ol>
<li>
<p>사용할 Search 방법을 선택한다</p>
</li>
<li>
<p>hyper-parameter 도메인(값의 범위)을 설정한다 (<code>max_depth</code>, <code>n_estimators</code>… 등등)</p>
</li>
<li>
<p>학습을 시킨 후, 기다린다</p>
</li>
<li>
<p>도출된 결과 값을 모델에 적용하고 성능을 비교한다</p>
<br>
</li>
</ol>
<h4 id="1-randomizedsearchcv"><a class="markdownIt-Anchor" href="#1-randomizedsearchcv"></a> (1) RandomizedSearchCV</h4>
<ul>
<li>
<p>모든 매개 변수 값이 시도되는 것이 아니라 지정된 분포에서 고정 된 수의 매개 변수 설정이 샘플링된다.</p>
</li>
<li>
<p>시도 된 매개 변수 설정의 수는 <code>n_iter</code>에 의해 제공됨.</p>
<br>
</li>
</ul>
<p><strong>주요 Hyper-parameter (LGBM)</strong></p>
<ul>
<li><strong>random_state:</strong> random seed 고정 값</li>
<li><strong>n_jobs:</strong> CPU 사용 갯수</li>
<li><strong>learning_rate:</strong> 학습율. 너무 큰 학습율은 성능을 떨어뜨리고, 너무 작은 학습율은 학습이 느리다. 적절한 값을 찾아야함. n_estimators와 같이 튜닝. default=0.1</li>
<li><strong>n_estimators:</strong> 부스팅 스테이지 수. (랜덤포레스트 트리의 갯수 설정과 비슷한 개념). default=100</li>
<li><strong>max_depth:</strong> 트리의 깊이. 과대적합 방지용. default=3.</li>
<li><strong>colsample_bytree:</strong> 샘플 사용 비율 (max_features와 비슷한 개념). 과대적합 방지용. default=1.0</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">params = {</span><br><span class="line">    <span class="string">'learning_rate'</span>: [<span class="number">0.005</span>, <span class="number">0.01</span>, <span class="number">0.03</span>, <span class="number">0.05</span>],</span><br><span class="line">    <span class="string">'n_estimators'</span>: [<span class="number">500</span>, <span class="number">1000</span>, <span class="number">2000</span>, <span class="number">3000</span>],</span><br><span class="line">    <span class="string">'max_depth'</span>: [<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>],</span><br><span class="line">    <span class="string">'colsample_bytree'</span>: [<span class="number">0.8</span>, <span class="number">0.9</span>, <span class="number">1.0</span>],</span><br><span class="line">    <span class="string">'subsample'</span>: [<span class="number">0.7</span>, <span class="number">0.8</span>, <span class="number">0.9</span>, <span class="number">1.0</span>],</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> RandomizedSearchCV</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><figcaption><span>조절하여, 총 몇 회의 시도를 진행할 것인자 정의한다  </span></figcaption><table><tbody><tr><td class="code"><pre><span class="line">(회수가 늘어나면, 더 좋은 parameter를 찾을 확률은 올라가지만, 그만큼 시간이 오래걸린다.)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">rcv_lgbm = RandomizedSearchCV(LGBMRegressor(), params, random_state=1, cv=5, n_iter=100, scoring='neg_mean_squared_error')</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rcv_lgbm.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>RandomizedSearchCV(cv=5, error_score=nan,
                   estimator=LGBMRegressor(boosting_type='gbdt',
                                           class_weight=None,
                                           colsample_bytree=1.0,
                                           importance_type='split',
                                           learning_rate=0.1, max_depth=-1,
                                           min_child_samples=20,
                                           min_child_weight=0.001,
                                           min_split_gain=0.0, n_estimators=100,
                                           n_jobs=-1, num_leaves=31,
                                           objective=None, random_state=None,
                                           reg_alpha=0.0, reg_lambda=0.0,
                                           silen...
                                           subsample_freq=0),
                   iid='deprecated', n_iter=100, n_jobs=None,
                   param_distributions={'colsample_bytree': [0.8, 0.9, 1.0],
                                        'learning_rate': [0.005, 0.01, 0.03,
                                                          0.05],
                                        'max_depth': [3, 5, 7],
                                        'n_estimators': [500, 1000, 2000, 3000],
                                        'subsample': [0.7, 0.8, 0.9, 1.0]},
                   pre_dispatch='2*n_jobs', random_state=1, refit=True,
                   return_train_score=False, scoring='neg_mean_squared_error',
                   verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rcv_lgbm.best_score_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>-11.132039701508374
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">rcv_lgbm.best_params_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'subsample': 0.8,
 'n_estimators': 1000,
 'max_depth': 3,
 'learning_rate': 0.05,
 'colsample_bytree': 0.9}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_best = LGBMRegressor(learning_rate=<span class="number">0.05</span>, n_estimators=<span class="number">1000</span>, subsample=<span class="number">0.8</span>, max_depth=<span class="number">3</span>, colsample_bytree=<span class="number">0.9</span>)</span><br><span class="line">lgbm_best_pred = lgbm_best.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'RandomSearch LGBM'</span>, y_test, lgbm_best_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_216_0-1596543976320.png" alt="output_216_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14                                  RandomSearch LGBM  12.661917
15  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
16                                 LightGBM w/ Tuning  12.200040
17                                  XGBoost w/ Tuning  11.987602
18                    RandomForest Ensemble w/ Tuning  11.481491
19                                  Weighted Blending  10.585610
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_216_2-1596543983232.png" alt="output_216_2"></p>
<br>
<h4 id="2-gridserchcv"><a class="markdownIt-Anchor" href="#2-gridserchcv"></a> (2) GridSerchCV</h4>
<ul>
<li>모든 매개 변수 값에 대하여 <strong>완전 탐색</strong>을 시도한다</li>
<li>따라서, 최적화할 parameter가 많다면, <strong>시간이 매우 오래</strong>걸린다</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">params = {</span><br><span class="line">    <span class="string">'learning_rate'</span>: [<span class="number">0.04</span>, <span class="number">0.05</span>, <span class="number">0.06</span>],</span><br><span class="line">    <span class="string">'n_estimators'</span>: [<span class="number">800</span>, <span class="number">1000</span>, <span class="number">1200</span>],</span><br><span class="line">    <span class="string">'max_depth'</span>: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">    <span class="string">'colsample_bytree'</span>: [<span class="number">0.8</span>, <span class="number">0.85</span>, <span class="number">0.9</span>],</span><br><span class="line">    <span class="string">'subsample'</span>: [<span class="number">0.8</span>, <span class="number">0.85</span>, <span class="number">0.9</span>],</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search = GridSearchCV(LGBMRegressor(), params, cv=<span class="number">5</span>, n_jobs=<span class="number">-1</span>, scoring=<span class="string">'neg_mean_squared_error'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>GridSearchCV(cv=5, error_score=nan,
             estimator=LGBMRegressor(boosting_type='gbdt', class_weight=None,
                                     colsample_bytree=1.0,
                                     importance_type='split', learning_rate=0.1,
                                     max_depth=-1, min_child_samples=20,
                                     min_child_weight=0.001, min_split_gain=0.0,
                                     n_estimators=100, n_jobs=-1, num_leaves=31,
                                     objective=None, random_state=None,
                                     reg_alpha=0.0, reg_lambda=0.0, silent=True,
                                     subsample=1.0, subsample_for_bin=200000,
                                     subsample_freq=0),
             iid='deprecated', n_jobs=-1,
             param_grid={'colsample_bytree': [0.8, 0.85, 0.9],
                         'learning_rate': [0.04, 0.05, 0.06],
                         'max_depth': [3, 4, 5],
                         'n_estimators': [800, 1000, 1200],
                         'subsample': [0.8, 0.85, 0.9]},
             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,
             scoring='neg_mean_squared_error', verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search.best_score_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>-11.10039780445118
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">grid_search.best_params_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{'colsample_bytree': 0.9,
 'learning_rate': 0.05,
 'max_depth': 3,
 'n_estimators': 800,
 'subsample': 0.8}
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lgbm_best = LGBMRegressor(learning_rate=<span class="number">0.05</span>, n_estimators=<span class="number">800</span>, subsample=<span class="number">0.8</span>, max_depth=<span class="number">3</span>, colsample_bytree=<span class="number">0.9</span>)</span><br><span class="line">lgbm_best_pred = lgbm_best.fit(x_train, y_train).predict(x_test)</span><br><span class="line">mse_eval(<span class="string">'GridSearch LGBM'</span>, y_test, lgbm_best_pred)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn4/output_226_0-1596543990796.png" alt="output_226_0"></p>
<pre><code>                                                model        mse
0                                 Standard ElasticNet  26.010756
1          GradientBoost Ensemble w/ tuning (lr=0.01)  24.599441
2                            ElasticNet(l1_ratio=0.2)  24.481069
3                                    LinearRegression  22.770784
4                                      Ridge(alpha=1)  22.690411
5                                   Lasso(alpha=0.01)  22.635614
6                                     Voting Ensemble  22.092158
7                                     Poly ElasticNet  20.805986
8                                   Stacking Ensemble  16.906090
9                                             XGBoost  13.841454
10                              RandomForest Ensemble  13.781191
11                             GradientBoost Ensemble  13.451877
12  GradientBoost Ensemble w/ tuning (lr=0.01, est...  13.002472
13                                           LightGBM  12.882170
14                                    GridSearch LGBM  12.794172
15                                  RandomSearch LGBM  12.661917
16  GradientBoost Ensemble w/ tuning (lr=0.01, est...  12.607717
17                                 LightGBM w/ Tuning  12.200040
18                                  XGBoost w/ Tuning  11.987602
19                    RandomForest Ensemble w/ Tuning  11.481491
20                                  Weighted Blending  10.585610
</code></pre>
<p><img src="/images/S-Python-sklearn4/output_226_2-1596543997347.png" alt="output_226_2"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>앙상블</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; sklearn - (5) 비지도 학습 (Unsupervised Learning)</title>
    <url>/2020/08/06/S-Python-sklearn5/</url>
    <content><![CDATA[<h1 id="비지도-학습-unsupervised-learning"><a class="markdownIt-Anchor" href="#비지도-학습-unsupervised-learning"></a> 비지도 학습 (Unsupervised Learning)</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%EB%B9%84%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5%EC%9D%98-%EA%B0%9C%EC%9A%94"><strong>1. 비지도 학습의 개요</strong></a></li>
<li><a href="#2-%EC%B0%A8%EC%9B%90-%EC%B6%95%EC%86%8C"><strong>2. 차원 축소</strong></a>
<ul>
<li><a href="#2-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A1%9C%EB%93%9C-iris-%EB%8D%B0%EC%9D%B4%ED%84%B0">2-1. 데이터 로드 (iris 데이터)</a></li>
<li><a href="#2-2-pca-%EC%B0%A8%EC%9B%90-%EC%B6%95%EC%86%8C">2-2. PCA 차원 축소</a></li>
<li><a href="#2-3-lda-%EC%B0%A8%EC%9B%90-%EC%B6%95%EC%86%8C">2-3. LDA 차원 축소</a></li>
<li><a href="#2-4-svd-%ED%8A%B9%EC%9D%B4%EA%B0%92-%EB%B6%84%ED%95%B4">2-4. SVD (특이값 분해)</a></li>
</ul>
</li>
<li><a href="#3-%EA%B5%B0%EC%A7%91%ED%99%94"><strong>3. 군집화</strong></a>
<ul>
<li><a href="#3-1-k-means-clustering">3-1. K-Means Clustering</a></li>
<li><a href="#3-2-dbscan">3-2. DBSCAN</a></li>
<li><a href="#3-3-%EC%8B%A4%EB%A3%A8%EC%97%A3-%EC%8A%A4%EC%BD%94%EC%96%B4-%EA%B5%B0%EC%A7%91%ED%99%94-%ED%8F%89%EA%B0%80">3-3. 실루엣 스코어 (군집화 평가)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h2 id="1-비지도-학습의-개요"><a class="markdownIt-Anchor" href="#1-비지도-학습의-개요"></a> <strong>1. 비지도 학습의 개요</strong></h2>
<p>비지도 학습 (Unsupervised Learning)은 기계 학습의 일종으로, 데이터가 어떻게 구성되어 있는지를 알아내는 문제의 범주에 속한다. 이 방법은 지도 학습 (Supervised Learning) 혹은 강화 학습 (Reinforcement Learning)과는 달리 <strong>입력값에 대한 목표치가 주어지지 않는다</strong></p>
<ul>
<li>
<p>차원 축소: PCA, LDA, SVD</p>
</li>
<li>
<p>군집화: KMeans Clustering, DBSCAN</p>
</li>
<li>
<p>군집화 평가</p>
<br>
</li>
</ul>
<h2 id="2-차원-축소"><a class="markdownIt-Anchor" href="#2-차원-축소"></a> <strong>2. 차원 축소</strong></h2>
<ul>
<li>feature의 갯수를 줄이는 것을 뛰어 넘어, 특징을 추출하는 역할응 하기도 함</li>
<li>계산 비용을 감소하는 효과</li>
<li>전반적인 데이터에 대한 이해도를 높이는 효과</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>
<br>  
<h3 id="2-1-데이터-로드-iris-데이터"><a class="markdownIt-Anchor" href="#2-1-데이터-로드-iris-데이터"></a> 2-1. 데이터 로드 (iris 데이터)</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">iris = datasets.load_iris()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data = iris[<span class="string">'data'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[5.1, 3.5, 1.4, 0.2],
       [4.9, 3. , 1.4, 0.2],
       [4.7, 3.2, 1.3, 0.2],
       [4.6, 3.1, 1.5, 0.2],
       [5. , 3.6, 1.4, 0.2]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.DataFrame(data, columns = iris[<span class="string">'feature_names'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'target'</span>] = iris[<span class="string">'target'</span>]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="2-2-pca-차원-축소"><a class="markdownIt-Anchor" href="#2-2-pca-차원-축소"></a> 2-2. PCA 차원 축소</h3>
<blockquote>
<p>참고: <a href="https://excelsior-cjh.tistory.com/167" target="_blank" rel="noopener">PCA 원리 관련 블로그</a></p>
</blockquote>
<p>주성분 분석 (PCA, Principal Component Analysis) 는 선형 차원 축소 기법이다. 매우 인기 있게 사용되는 차원 축소 기법중 하나다.</p>
<p>PCA는 먼저 데이터에 가장 가까운 초평면(hyperplane)을 구한 다음, 데이터를 이 초평면에 투영(projection)시킨다. 주요 특징 중의 하나는 <strong>분산(variance)을 촤대한 보존</strong>한다는 점이다.</p>
<ul>
<li>
<p><strong>분산 보존</strong></p>
<p>PCA는 <strong>데이터의 분산이 최대</strong>가 되는 축을 찾는다. 즉, 원본 데이터셋과 투영된 데이터셋 간의 <strong>평균제곱거리</strong>를 <strong>최소화</strong>하는 축을 찾는다.</p>
</li>
<li>
<p><strong>PCA 실현 과정</strong></p>
<ol>
<li>학습 데이터셋에서 분산이 최대인 축(axis)을 찾는다</li>
<li>이렇게 찾은 첫 번째 축과 직교(orthogonal)하면서 분산이 최대인 두 번째 축을 찾는다</li>
<li>첫 번째 축과 두 번째 축에 직교하고 분산을 최대한 보존하는 세 번째 축을 찾는다</li>
<li><code>1~3</code>과 같은 방법으로 데이터셋의 차원(특성 수)만큼의 축을  찾는다</li>
</ol>
<p>이렇게 i-번째 축을 정의하는 **단위 벡터(unit vector)**를 i-번째 <strong>주성분</strong>(PC, Principle Component)이라고 한다.</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; sklearn에서 실현</strong></p>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html" target="_blank" rel="noopener">[sklearn.decomposition.<strong>PCA</strong>] Documnet</a></p>
<ul>
<li>
<p>n_components에 1보다 작은 값을 넣으면, 분산을 기준으로 차원 축소</p>
</li>
<li>
<p>n_components에 1보다 큰 값을 넣으면, 해당 값을 기준으로 feature를 축소</p>
<br>
</li>
</ul>
<p><strong>(1) 주성분 2개로 지정</strong> (n_components = 2)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모델 선언</span></span><br><span class="line">pca = PCA(n_components=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data scaling</span></span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># PCA 실행</span></span><br><span class="line">pca_data = pca.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data_scaled[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-0.90068117,  1.01900435, -1.34022653, -1.3154443 ],
       [-1.14301691, -0.13197948, -1.34022653, -1.3154443 ],
       [-1.38535265,  0.32841405, -1.39706395, -1.3154443 ],
       [-1.50652052,  0.09821729, -1.2833891 , -1.3154443 ],
       [-1.02184904,  1.24920112, -1.34022653, -1.3154443 ]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pca_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2.26470281,  0.4800266 ],
       [-2.08096115, -0.67413356],
       [-2.36422905, -0.34190802],
       [-2.29938422, -0.59739451],
       [-2.38984217,  0.64683538]])
</code></pre>
  <br>
<p>주성분에 따른 데이터 시각화</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.scatter(pca_data[:, <span class="number">0</span>], pca_data[:, <span class="number">1</span>], c=df[<span class="string">'target'</span>]) <span class="comment"># c: color 기준</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x201028bf148&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_39_1.png" alt="output_39_1"></p>
<br>
<p><strong>(2) 분산을 기준으로 차원축소</strong> (n_components &lt; 1)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">pca2 = PCA(n_components=<span class="number">0.99</span>)</span><br><span class="line">pca_data2 = pca2.fit_transform(data_scaled)</span><br><span class="line">pca_data2[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2.26470281,  0.4800266 , -0.12770602],
       [-2.08096115, -0.67413356, -0.23460885],
       [-2.36422905, -0.34190802,  0.04420148],
       [-2.29938422, -0.59739451,  0.09129011],
       [-2.38984217,  0.64683538,  0.0157382 ]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">'3d'</span>)  <span class="comment"># Axe3D object</span></span><br><span class="line"></span><br><span class="line">sample_size = <span class="number">50</span></span><br><span class="line">ax.scatter(pca_data2[:,<span class="number">0</span>], pca_data2[:,<span class="number">1</span>], pca_data2[:,<span class="number">2</span>], alpha=<span class="number">0.6</span>, c=df[<span class="string">'target'</span>])</span><br><span class="line">plt.savefig(<span class="string">'./tmp.svg'</span>)</span><br><span class="line">plt.title(<span class="string">'ax.plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn5/output_43_0.png" alt="output_43_0"></p>
<br>
<h3 id="2-3-lda-차원-축소"><a class="markdownIt-Anchor" href="#2-3-lda-차원-축소"></a> 2-3. LDA 차원 축소</h3>
<blockquote>
<p>참고 블로그:</p>
<ol>
<li><a href="https://blog.naver.com/mo223772/222051769650" target="_blank" rel="noopener">차원 축소 - LDA(Linear Discriminant Analysis) 개요</a></li>
<li><a href="https://blog.naver.com/jaehong7719/221926671654" target="_blank" rel="noopener">머신러닝 기초9 - LDA (Linear Discriminant Analysis)</a></li>
</ol>
</blockquote>
<p>LDA (Linear Discriminant Analysis): 선형 판별 분석법 (PCA와 유사)</p>
<p>LDA는 클래스(Class)분리를 최대화하는 축을 찾기 위해 클래스 간 분산(between-class scatter)과 내분 분산(within-class scatter)의 비율을 최대화하는 방식으로 차원을 축소함.</p>
<p>즉, 클래스 간 분산은 최대한 크게 가져가고, 클래스 내부의 분산은 최대한 작게 가져가는 방식이다.</p>
<br>  
<p><strong>&gt;&gt; sklearn에서 실현</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.discriminant_analysis <span class="keyword">import</span> LinearDiscriminantAnalysis</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 모델 선언</span></span><br><span class="line">lda = LinearDiscriminantAnalysis(n_components=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data scaling</span></span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># LDA 실행</span></span><br><span class="line">lda_data = lda.fit_transform(data_scaled, df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lda_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-8.06179978,  0.30042062],
       [-7.12868772, -0.78666043],
       [-7.48982797, -0.26538449],
       [-6.81320057, -0.67063107],
       [-8.13230933,  0.51446253]])
</code></pre>
<br>
<p>시각화</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># LDA</span></span><br><span class="line">plt.scatter(lda_data[:,<span class="number">0</span>], lda_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102cd5608&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_57_1.png" alt="output_57_1"></p>
<p>PCA 결과와 비교</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># PCA</span></span><br><span class="line">plt.scatter(pca_data[:,<span class="number">0</span>], pca_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102ba6908&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_59_1.png" alt="output_59_1"></p>
<br>
<h3 id="2-4-svd-특이값-분해"><a class="markdownIt-Anchor" href="#2-4-svd-특이값-분해"></a> 2-4. SVD (특이값 분해)</h3>
<blockquote>
<p><a href="https://ko.wikipedia.org/wiki/%ED%8A%B9%EC%9D%B4%EA%B0%92_%EB%B6%84%ED%95%B4" target="_blank" rel="noopener">위키문서</a></p>
</blockquote>
<p>SVD (Singular Value Decomposition):</p>
<ul>
<li>특이값 분해 기법이다</li>
<li>PCA와 유사한 차원 축소 기법이다</li>
<li>scikit-learn 패키지에서는 truncated SVD (aka LSA)을 사용한다</li>
<li>상품의 추천 시스템에도 활용되어지는 알고리즘 (추천시스템)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> TruncatedSVD</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>sepal length (cm)</th>
      <th>sepal width (cm)</th>
      <th>petal length (cm)</th>
      <th>petal width (cm)</th>
      <th>target</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.1</td>
      <td>3.5</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.9</td>
      <td>3.0</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.7</td>
      <td>3.2</td>
      <td>1.3</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.6</td>
      <td>3.1</td>
      <td>1.5</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5.0</td>
      <td>3.6</td>
      <td>1.4</td>
      <td>0.2</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svd = TruncatedSVD(n_components = <span class="number">2</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">svd_data = svd.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">svd_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[-2.26470281,  0.4800266 ],
       [-2.08096115, -0.67413356],
       [-2.36422905, -0.34190802],
       [-2.29938422, -0.59739451],
       [-2.38984217,  0.64683538]])
</code></pre>
<br>  
<p>시각화</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># SVD</span></span><br><span class="line">plt.scatter(svd_data[:,<span class="number">0</span>], svd_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102b2ed08&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_71_1.png" alt="output_71_1"></p>
<p>PCA &amp; LDA와 비교</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># PCA</span></span><br><span class="line">plt.scatter(pca_data[:,<span class="number">0</span>], pca_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102ad7d88&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_73_1.png" alt="output_73_1"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># LDA</span></span><br><span class="line">plt.scatter(lda_data[:,<span class="number">0</span>], lda_data[:,<span class="number">1</span>], c=df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x20102d43e08&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_74_1.png" alt="output_74_1"></p>
<br>
<br>
<h2 id="3-군집화"><a class="markdownIt-Anchor" href="#3-군집화"></a> <strong>3. 군집화</strong></h2>
<h3 id="3-1-k-means-clustering"><a class="markdownIt-Anchor" href="#3-1-k-means-clustering"></a> 3-1. K-Means Clustering</h3>
<blockquote>
<p><a href="https://ko.wikipedia.org/wiki/K-%ED%8F%89%EA%B7%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98" target="_blank" rel="noopener">위키문서</a></p>
</blockquote>
<p>군집화에서 가장 대중적으로 사용되는 알고리즘이다. centroid라는 중점을 기준으로 가강 가까운 포인트를 선택하는 군집화 기법이다</p>
<p><strong>원리:</strong> 주어진 데이터를 k개의 cluster로 묶는 방식, 거리 차이의 분산을 최소화하는 방식으로 동작.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://image.slidesharecdn.com/patternrecognitionbinoy-06-kmeansclustering-160317135729/95/pattern-recognition-binoy-k-means-clustering-13-638.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn5/output_81_0.jpg" alt="output_81_0"></p>
<br>
<p><strong>사용되는 예제</strong></p>
<ul>
<li>스팸 문자 분류</li>
<li>뉴스 기사 분류</li>
</ul>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html" target="_blank" rel="noopener">[sklearn.cluster.<strong>KMeans</strong>] Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kmeans = KMeans(n_clusters=<span class="number">3</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">cluster_data = kmeans.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">cluster_data[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[3.12119834, 0.21295824, 3.98940603],
       [2.6755083 , 0.99604549, 4.01793312],
       [2.97416665, 0.65198444, 4.19343668],
       [2.88014429, 0.9034561 , 4.19784749],
       [3.30022609, 0.40215457, 4.11157152]])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kmeans.labels_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2,
       0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,
       2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2,
       2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0])
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(kmeans.labels_)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x201043c7fc8&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_88_1.png" alt="output_88_1"></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(df[<span class="string">'target'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2010301bec8&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_89_1.png" alt="output_89_1"></p>
<br>
<p>Hyper-parameter Tuning</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kmeans</span><br></pre></td></tr></tbody></table></figure>
<pre><code>KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init=10, n_jobs=None, precompute_distances='auto',
       random_state=None, tol=0.0001, verbose=0)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># max_iter: maximum number of iterations for a single run</span></span><br><span class="line">kmeans2 = KMeans(n_clusters=<span class="number">3</span>, max_iter=<span class="number">500</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">cluster_data2 = kmeans2.fit_transform(data_scaled)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.countplot(kmeans2.labels_)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x20105525688&gt;
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_94_1.png" alt="output_94_1"></p>
<br>
<h3 id="3-2-dbscan"><a class="markdownIt-Anchor" href="#3-2-dbscan"></a> 3-2. DBSCAN</h3>
<p><strong>밀도 기반 클러스터링</strong><br>
(DBSCAN: Dencity-Based Spatial Clustering of Applications with Noise)</p>
<ul>
<li>밀도가 높은 부분을 클러스터링 하는 방식</li>
<li>어느 점을 기준으로 반경 x내에 점이 n개 이상 있으면 하나의 군집으로 인식하는 방식</li>
<li>KMeans 에서는 n_cluster의 갯수를 반드시 지정해 주어야 하나, DBSCAN에서는 필요없음</li>
<li>기하학적인 clustering도 잘 찾아냄</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Image(<span class="string">'https://image.slidesharecdn.com/pydatanyc2015-151119175854-lva1-app6891/95/pydata-nyc-2015-automatically-detecting-outliers-with-datadog-26-638.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/S-Python-sklearn5/output_98_0.jpg" alt="output_98_0"></p>
  <br>
<p><a href="https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html" target="_blank" rel="noopener">[sklearn.cluster.<strong>DBSCAN</strong>] Document</a></p>
<p><strong>주의:</strong> 변환 시 <code>fit_transform()</code>대신 <strong><code>fit_predict()</code></strong> 를 쓴다</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> DBSCAN</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># eps: The maximum distance between two samples for one to be considered as in the neighborhoood of the other</span></span><br><span class="line">dbscan = DBSCAN(eps=<span class="number">0.7</span>, min_samples=<span class="number">2</span>)</span><br><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">dbscan_data = dbscan.fit_predict(data_scaled)</span><br><span class="line">dbscan_data</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1, -1,  1,  1, -1,  1,  1,  1,  1,  1,  1,  1,  2,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
      dtype=int64)
</code></pre>
 <br>   
<h3 id="3-3-실루엣-스코어-군집화-평가"><a class="markdownIt-Anchor" href="#3-3-실루엣-스코어-군집화-평가"></a> 3-3. 실루엣 스코어 (군집화 평가)</h3>
<p>클러스터링의 품질을 정량적으로 평가해 주는 지표</p>
<ul>
<li>1: 클러스터링의 품질이 좋다</li>
<li>0: 클러스터링의 품질이 안좋다 (클러스터링의 의미 없음)</li>
<li>음수: 잘못 분류됨</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> silhouette_samples, silhouette_score</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data_scaled = StandardScaler().fit_transform(df.loc[:, <span class="string">'sepal length (cm)'</span> : <span class="string">'petal width (cm)'</span>])</span><br><span class="line">score = silhouette_score(data_scaled, kmeans.labels_)</span><br><span class="line">score</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.45994823920518635
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">samples = silhouette_samples(data_scaled, kmeans.labels_)</span><br><span class="line">samples[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([0.73419485, 0.56827391, 0.67754724, 0.62050159, 0.72847412])
</code></pre>
<br>
<p><a href="https://scikit-learn.org/stable/auto_examples/cluster/plot_kmeans_silhouette_analysis.html" target="_blank" rel="noopener">silhouette analysis 시각화 Document</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_silhouette</span><span class="params">(X, num_cluesters)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> n_clusters <span class="keyword">in</span> num_cluesters:</span><br><span class="line">        <span class="comment"># Create a subplot with 1 row and 2 columns</span></span><br><span class="line">        fig, (ax1, ax2) = plt.subplots(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">        fig.set_size_inches(<span class="number">18</span>, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># The 1st subplot is the silhouette plot</span></span><br><span class="line">        <span class="comment"># The silhouette coefficient can range from -1, 1 but in this example all</span></span><br><span class="line">        <span class="comment"># lie within [-0.1, 1]</span></span><br><span class="line">        ax1.set_xlim([<span class="number">-0.1</span>, <span class="number">1</span>])</span><br><span class="line">        <span class="comment"># The (n_clusters+1)*10 is for inserting blank space between silhouette</span></span><br><span class="line">        <span class="comment"># plots of individual clusters, to demarcate them clearly.</span></span><br><span class="line">        ax1.set_ylim([<span class="number">0</span>, len(X) + (n_clusters + <span class="number">1</span>) * <span class="number">10</span>])</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># Initialize the clusterer with n_clusters value and a random generator</span></span><br><span class="line">        <span class="comment"># seed of 10 for reproducibility.</span></span><br><span class="line">        clusterer = KMeans(n_clusters=n_clusters, random_state=<span class="number">10</span>)</span><br><span class="line">        cluster_labels = clusterer.fit_predict(X)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># The silhouette_score gives the average value for all the samples.</span></span><br><span class="line">        <span class="comment"># This gives a perspective into the density and separation of the formed</span></span><br><span class="line">        <span class="comment"># clusters</span></span><br><span class="line">        silhouette_avg = silhouette_score(X, cluster_labels)</span><br><span class="line">        print(<span class="string">"For n_clusters ="</span>, n_clusters,</span><br><span class="line">              <span class="string">"The average silhouette_score is :"</span>, silhouette_avg)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># Compute the silhouette scores for each sample</span></span><br><span class="line">        sample_silhouette_values = silhouette_samples(X, cluster_labels)</span><br><span class="line">    </span><br><span class="line">        y_lower = <span class="number">10</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n_clusters):</span><br><span class="line">            <span class="comment"># Aggregate the silhouette scores for samples belonging to</span></span><br><span class="line">            <span class="comment"># cluster i, and sort them</span></span><br><span class="line">            ith_cluster_silhouette_values = \</span><br><span class="line">                sample_silhouette_values[cluster_labels == i]</span><br><span class="line">    </span><br><span class="line">            ith_cluster_silhouette_values.sort()</span><br><span class="line">    </span><br><span class="line">            size_cluster_i = ith_cluster_silhouette_values.shape[<span class="number">0</span>]</span><br><span class="line">            y_upper = y_lower + size_cluster_i</span><br><span class="line">    </span><br><span class="line">            color = cm.nipy_spectral(float(i) / n_clusters)</span><br><span class="line">            ax1.fill_betweenx(np.arange(y_lower, y_upper),</span><br><span class="line">                              <span class="number">0</span>, ith_cluster_silhouette_values,</span><br><span class="line">                              facecolor=color, edgecolor=color, alpha=<span class="number">0.7</span>)</span><br><span class="line">    </span><br><span class="line">            <span class="comment"># Label the silhouette plots with their cluster numbers at the middle</span></span><br><span class="line">            ax1.text(<span class="number">-0.05</span>, y_lower + <span class="number">0.5</span> * size_cluster_i, str(i))</span><br><span class="line">    </span><br><span class="line">            <span class="comment"># Compute the new y_lower for next plot</span></span><br><span class="line">            y_lower = y_upper + <span class="number">10</span>  <span class="comment"># 10 for the 0 samples</span></span><br><span class="line">    </span><br><span class="line">        ax1.set_title(<span class="string">"The silhouette plot for the various clusters."</span>)</span><br><span class="line">        ax1.set_xlabel(<span class="string">"The silhouette coefficient values"</span>)</span><br><span class="line">        ax1.set_ylabel(<span class="string">"Cluster label"</span>)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># The vertical line for average silhouette score of all the values</span></span><br><span class="line">        ax1.axvline(x=silhouette_avg, color=<span class="string">"red"</span>, linestyle=<span class="string">"--"</span>)</span><br><span class="line">    </span><br><span class="line">        ax1.set_yticks([])  <span class="comment"># Clear the yaxis labels / ticks</span></span><br><span class="line">        ax1.set_xticks([<span class="number">-0.1</span>, <span class="number">0</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">0.6</span>, <span class="number">0.8</span>, <span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 2nd Plot showing the actual clusters formed</span></span><br><span class="line">        colors = cm.nipy_spectral(cluster_labels.astype(float) / n_clusters)</span><br><span class="line">        ax2.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], marker=<span class="string">'.'</span>, s=<span class="number">30</span>, lw=<span class="number">0</span>, alpha=<span class="number">0.7</span>,</span><br><span class="line">                    c=colors, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># Labeling the clusters</span></span><br><span class="line">        centers = clusterer.cluster_centers_</span><br><span class="line">        <span class="comment"># Draw white circles at cluster centers</span></span><br><span class="line">        ax2.scatter(centers[:, <span class="number">0</span>], centers[:, <span class="number">1</span>], marker=<span class="string">'o'</span>,</span><br><span class="line">                    c=<span class="string">"white"</span>, alpha=<span class="number">1</span>, s=<span class="number">200</span>, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span> i, c <span class="keyword">in</span> enumerate(centers):</span><br><span class="line">            ax2.scatter(c[<span class="number">0</span>], c[<span class="number">1</span>], marker=<span class="string">'$%d$'</span> % i, alpha=<span class="number">1</span>,</span><br><span class="line">                        s=<span class="number">50</span>, edgecolor=<span class="string">'k'</span>)</span><br><span class="line">    </span><br><span class="line">        ax2.set_title(<span class="string">"The visualization of the clustered data."</span>)</span><br><span class="line">        ax2.set_xlabel(<span class="string">"Feature space for the 1st feature"</span>)</span><br><span class="line">        ax2.set_ylabel(<span class="string">"Feature space for the 2nd feature"</span>)</span><br><span class="line">    </span><br><span class="line">        plt.suptitle((<span class="string">"Silhouette analysis for KMeans clustering on sample data "</span></span><br><span class="line">                      <span class="string">"with n_clusters = %d"</span> % n_clusters),</span><br><span class="line">                     fontsize=<span class="number">14</span>, fontweight=<span class="string">'bold'</span>)</span><br><span class="line">    </span><br><span class="line">        plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plot_silhouette(data_scaled, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>For n_clusters = 2 The average silhouette_score is : 0.5817500491982808
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_1.png" alt="output_112_1"></p>
<pre><code>For n_clusters = 3 The average silhouette_score is : 0.45994823920518635
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_3.png" alt="output_112_3"></p>
<pre><code>For n_clusters = 4 The average silhouette_score is : 0.4188923398171004
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_5.png" alt="output_112_5"></p>
<pre><code>For n_clusters = 5 The average silhouette_score is : 0.34551099599809465
</code></pre>
<p><img src="/images/S-Python-sklearn5/output_112_7.png" alt="output_112_7"></p>
<ul>
<li>빨간 점선은 평균 실루엣 계수를 의미함</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>비지도 학습</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; EDA &amp; Linear Regression -- 부동산 데이터</title>
    <url>/2020/08/11/E-Python-LinearRegression-1/</url>
    <content><![CDATA[<h1 id="eda-regression-실습-부동산-데이터"><a class="markdownIt-Anchor" href="#eda-regression-실습-부동산-데이터"></a> 【EDA &amp; Regression 실습】 – 부동산 데이터</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-eda-exploratory-data-analysis-%ED%83%90%EC%83%89%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D"><strong>2. EDA (Exploratory Data Analysis: 탐색적 데이터 분석)</strong></a>
<ul>
<li><a href="#2-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4-%ED%83%90%EC%83%89">2-1. 데이터셋 기본 정보 탐색</a></li>
<li><a href="#2-2-%ED%9A%8C%EA%B7%80-%EB%B6%84%EC%84%9D-%EC%A2%85%EC%86%8D%EB%AA%A9%ED%91%9C-%EB%B3%80%EC%88%98-%ED%83%90%EC%83%89">2-2. 회귀 분석 종속(목표) 변수 탐색</a></li>
<li><a href="#2-3-%ED%9A%8C%EA%B7%80-%EB%B6%84%EC%84%9D-%EC%84%A4%EB%AA%85-%EB%B3%80%EC%88%98-%ED%83%90%EC%83%89">2-3. 회귀 분석 설명 변수 탐색</a>
<ul>
<li><a href="#%EC%84%A4%EB%AA%85-%EB%B3%80%EC%88%98%EB%93%A4%EC%9D%98-%EB%B6%84%ED%8F%AC-%ED%83%90%EC%83%89">&gt;&gt; 설명 변수들의 분포 탐색</a></li>
<li><a href="#%EC%84%A4%EB%AA%85-%EB%B3%80%EC%88%98%EB%93%A4%EC%9D%98-%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84-%ED%83%90%EC%83%89-with-target-variable-cmedv">&gt;&gt; 설명 변수들의 상관관계 탐색  (with target variable “CMEDV”)</a></li>
<li><a href="#%EC%84%A4%EB%AA%85-%EB%B3%80%EC%88%98%EC%99%80-%EC%A2%85%EC%86%8D-%EB%B3%80%EC%88%98%EC%9D%98-%EA%B4%80%EA%B3%84-%ED%83%90%EC%83%89">&gt;&gt; 설명 변수와 종속 변수의 관계 탐색</a></li>
<li><a href="#%EC%A7%80%EC%97%AD%EB%B3%84-%EC%B0%A8%EC%9D%B4-%ED%83%90%EC%83%89">&gt;&gt; 지역별 차이 탐색</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-%EC%A7%91%EA%B0%92-%EC%98%88%EC%B8%A1-%EB%B6%84%EC%84%9D-%ED%9A%8C%EA%B7%80%EB%B6%84%EC%84%9D"><strong>3. 집값 예측 분석: 회귀분석</strong></a>
<ul>
<li><a href="#3-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC">3-1. 데이터 전처리</a>
<ul>
<li><a href="#feature-%ED%91%9C%EC%A4%80%ED%99%94">&gt;&gt; feature 표준화</a></li>
<li><a href="#training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0">&gt;&gt; Training set / Test set 나누기</a></li>
<li><a href="#%EB%8B%A4%EC%A4%91-%EA%B3%B5%EC%84%A0%EC%84%B1">&gt;&gt; 다중 공선성</a></li>
</ul>
</li>
<li><a href="#3-2-%ED%9A%8C%EA%B7%80-%EB%B6%84%EC%84%9D-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5-%EB%B0%8F-%EC%98%88%EC%B8%A1">3-2. 회귀 분석 모델 학습 및 예측</a>
<ul>
<li><a href="#coefficients-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">&gt;&gt; coefficients 확인하기</a></li>
<li><a href="#feature-%EC%9C%A0%EC%9D%98%EC%84%B1-%EA%B2%80%EC%A0%95">&gt;&gt; feature 유의성 검정</a></li>
<li><a href="#%EC%98%88%EC%B8%A1-%EA%B2%B0%EA%B3%BC-%EB%B0%8F-%EB%AA%A8%EB%8D%B8-%EC%84%B1%EB%8A%A5-%ED%99%95%EC%9D%B8">&gt;&gt; 예측 결과 및 모델 성능 확인</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br> 
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>Boston 지역의 부동산 데이터를 이용하여 선형 집값 예측 모델을 만듭니다.</p>
<p>사용 방법: 지도학습 — Linear Regression</p>
 <br>
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<p><strong>&gt;&gt; 사용할 데이터셋 – Boston Housing Dataset</strong></p>
<blockquote>
<p>Original Data Source: <a href="http://lib.stat.cmu.edu/datasets/boston_corrected.txt" target="_blank" rel="noopener">http://lib.stat.cmu.edu/datasets/boston_corrected.txt</a><br>
Dataset Introduction: <a href="https://geodacenter.github.io/data-and-lab/boston-housing/" target="_blank" rel="noopener">Boston Housing 1970</a></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/BostonHousing2.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOWN</th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Nahant</td>
      <td>-70.955</td>
      <td>42.2550</td>
      <td>24.0</td>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1</td>
      <td>296</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Swampscott</td>
      <td>-70.950</td>
      <td>42.2875</td>
      <td>21.6</td>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Swampscott</td>
      <td>-70.936</td>
      <td>42.2830</td>
      <td>34.7</td>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Marblehead</td>
      <td>-70.928</td>
      <td>42.2930</td>
      <td>33.4</td>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Marblehead</td>
      <td>-70.922</td>
      <td>42.2980</td>
      <td>36.2</td>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>  
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>
<p>TOWN: 지역 이름</p>
</li>
<li>
<p>LON, LAT: 경도(Longitudes) 위도(Latitudes) 정보</p>
</li>
<li>
<p><strong>CMEDV: 해당 지역의 집값 (중앙값)</strong> (corrected median values of housing in USD 1000)</p>
</li>
<li>
<p>CRIM: 근방 범죄율 per capita crime</p>
</li>
<li>
<p>ZN: 주택지 비율</p>
</li>
<li>
<p>INDUS: 상업적 비즈니스에 활용되지 않는 농지 면적</p>
</li>
<li>
<p>CHAS: 경계선에 강에 있는지 여부 <strong>(dummy variable)</strong></p>
</li>
<li>
<p>NOX: 산화질소 농도</p>
</li>
<li>
<p>RM: 자택당 평균 방 갯수</p>
</li>
<li>
<p>AGE: 1940년 이전에 건설된 비율</p>
</li>
<li>
<p>DIS: 5개의 보스턴 고용 센터와의 거리레 따른 가중치 부여</p>
</li>
<li>
<p>RAD: radial 고속도로와의 접근성 지수</p>
</li>
<li>
<p>TAX: 10000달러당 재산세</p>
</li>
<li>
<p>PTRATIO: 지역별 학생-교사 비율</p>
</li>
<li>
<p>B: 지역의 흑인 지수 (1000(Bk - 0.63)^2), Bk는 흑인의 비율</p>
</li>
<li>
<p>LSTAT: 빈곤층의 비율</p>
<br>
<br>
</li>
</ul>
<h2 id="2-eda-exploratory-data-analysis-탐색적-데이터-분석"><a class="markdownIt-Anchor" href="#2-eda-exploratory-data-analysis-탐색적-데이터-분석"></a> <strong>2. EDA (Exploratory Data Analysis: 탐색적 데이터 분석)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 그래프 배경 설정</span></span><br><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3 id="2-1-데이터셋-기본-정보-탐색"><a class="markdownIt-Anchor" href="#2-1-데이터셋-기본-정보-탐색"></a> 2-1. 데이터셋 기본 정보 탐색</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># shape (dimension)</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(506, 17)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>TOWN       0
LON        0
LAT        0
CMEDV      0
CRIM       0
ZN         0
INDUS      0
CHAS       0
NOX        0
RM         0
AGE        0
DIS        0
RAD        0
TAX        0
PTRATIO    0
B          0
LSTAT      0
dtype: int64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information (data type)</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 506 entries, 0 to 505
Data columns (total 17 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   TOWN     506 non-null    object 
 1   LON      506 non-null    float64
 2   LAT      506 non-null    float64
 3   CMEDV    506 non-null    float64
 4   CRIM     506 non-null    float64
 5   ZN       506 non-null    float64
 6   INDUS    506 non-null    float64
 7   CHAS     506 non-null    int64  
 8   NOX      506 non-null    float64
 9   RM       506 non-null    float64
 10  AGE      506 non-null    float64
 11  DIS      506 non-null    float64
 12  RAD      506 non-null    int64  
 13  TAX      506 non-null    int64  
 14  PTRATIO  506 non-null    float64
 15  B        506 non-null    float64
 16  LSTAT    506 non-null    float64
dtypes: float64(13), int64(3), object(1)
memory usage: 67.3+ KB
</code></pre>
<br>
<h3 id="2-2-회귀-분석-종속목표-변수-탐색"><a class="markdownIt-Anchor" href="#2-2-회귀-분석-종속목표-변수-탐색"></a> 2-2. 회귀 분석 종속(목표) 변수 탐색</h3>
<p><strong>&gt;&gt; Target Variable: ‘CMEDV’(집값) 탐색</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'CMEDV'</span>].describe()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>count    506.000000
mean      22.528854
std        9.182176
min        5.000000
25%       17.025000
50%       21.200000
75%       25.000000
max       50.000000
Name: CMEDV, dtype: float64
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 분포</span></span><br><span class="line">df[<span class="string">'CMEDV'</span>].hist(bins=<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf30df388&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_24_1.png" alt="output_24_1"></p>
<br>
<p><strong>boxplot:</strong></p>
<ol>
<li>Pandas Function (<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.boxplot.html?highlight=boxplot#pandas.DataFrame.boxplot" target="_blank" rel="noopener">pandas.DataFrame.boxplot</a>)</li>
<li>Matplotlib Function (<a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.boxplot.html#matplotlib.pyplot.boxplot" target="_blank" rel="noopener">matplotlib.pyplot.boxplot</a>)</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># boxplot - Pandas</span></span><br><span class="line">df.boxplot(column=[<span class="string">'CMEDV'</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf38c44c8&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_26_1.png" alt="output_26_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># boxplot - matplotlib</span></span><br><span class="line">plt.boxplot(df[<span class="string">'CMEDV'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_27_0.png" alt="output_27_0"></p>
<br>
<h3 id="2-3-회귀-분석-설명-변수-탐색"><a class="markdownIt-Anchor" href="#2-3-회귀-분석-설명-변수-탐색"></a> 2-3. 회귀 분석 설명 변수 탐색</h3>
<h4 id="설명-변수들의-분포-탐색"><a class="markdownIt-Anchor" href="#설명-변수들의-분포-탐색"></a> &gt;&gt; 설명 변수들의 분포 탐색</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># numerical features (except "LON" &amp; "LAT")</span></span><br><span class="line">numerical_columns = [<span class="string">'CRIM'</span>, <span class="string">'ZN'</span>, <span class="string">'INDUS'</span>, <span class="string">'CHAS'</span>, <span class="string">'NOX'</span>, <span class="string">'RM'</span>, <span class="string">'AGE'</span>, <span class="string">'DIS'</span>, <span class="string">'RAD'</span>, <span class="string">'TAX'</span>, <span class="string">'PTRATIO'</span>, <span class="string">'B'</span>, <span class="string">'LSTAT'</span>]</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">16</span>, <span class="number">20</span>))</span><br><span class="line">ax = fig.gca()  <span class="comment"># Axes 생성</span></span><br><span class="line"></span><br><span class="line">df[numerical_columns].hist(ax=ax)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_31_0.png" alt="output_31_0"></p>
<br>
<h4 id="설명-변수들의-상관관계-탐색-with-target-variable-cmedv"><a class="markdownIt-Anchor" href="#설명-변수들의-상관관계-탐색-with-target-variable-cmedv"></a> &gt;&gt; 설명 변수들의 상관관계 탐색  (with target variable “CMEDV”)</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Person 상관계수</span></span><br><span class="line">cols = [<span class="string">'CMEDV'</span>, <span class="string">'CRIM'</span>, <span class="string">'ZN'</span>, <span class="string">'INDUS'</span>, <span class="string">'CHAS'</span>, <span class="string">'NOX'</span>, <span class="string">'RM'</span>, <span class="string">'AGE'</span>, <span class="string">'DIS'</span>, <span class="string">'RAD'</span>, <span class="string">'TAX'</span>, <span class="string">'PTRATIO'</span>, <span class="string">'B'</span>, <span class="string">'LSTAT'</span>]</span><br><span class="line"></span><br><span class="line">corr = df[cols].corr(method = <span class="string">'pearson'</span>)</span><br><span class="line">corr</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>CMEDV</th>
      <td>1.000000</td>
      <td>-0.389582</td>
      <td>0.360386</td>
      <td>-0.484754</td>
      <td>0.175663</td>
      <td>-0.429300</td>
      <td>0.696304</td>
      <td>-0.377999</td>
      <td>0.249315</td>
      <td>-0.384766</td>
      <td>-0.471979</td>
      <td>-0.505655</td>
      <td>0.334861</td>
      <td>-0.740836</td>
    </tr>
    <tr>
      <th>CRIM</th>
      <td>-0.389582</td>
      <td>1.000000</td>
      <td>-0.200469</td>
      <td>0.406583</td>
      <td>-0.055892</td>
      <td>0.420972</td>
      <td>-0.219247</td>
      <td>0.352734</td>
      <td>-0.379670</td>
      <td>0.625505</td>
      <td>0.582764</td>
      <td>0.289946</td>
      <td>-0.385064</td>
      <td>0.455621</td>
    </tr>
    <tr>
      <th>ZN</th>
      <td>0.360386</td>
      <td>-0.200469</td>
      <td>1.000000</td>
      <td>-0.533828</td>
      <td>-0.042697</td>
      <td>-0.516604</td>
      <td>0.311991</td>
      <td>-0.569537</td>
      <td>0.664408</td>
      <td>-0.311948</td>
      <td>-0.314563</td>
      <td>-0.391679</td>
      <td>0.175520</td>
      <td>-0.412995</td>
    </tr>
    <tr>
      <th>INDUS</th>
      <td>-0.484754</td>
      <td>0.406583</td>
      <td>-0.533828</td>
      <td>1.000000</td>
      <td>0.062938</td>
      <td>0.763651</td>
      <td>-0.391676</td>
      <td>0.644779</td>
      <td>-0.708027</td>
      <td>0.595129</td>
      <td>0.720760</td>
      <td>0.383248</td>
      <td>-0.356977</td>
      <td>0.603800</td>
    </tr>
    <tr>
      <th>CHAS</th>
      <td>0.175663</td>
      <td>-0.055892</td>
      <td>-0.042697</td>
      <td>0.062938</td>
      <td>1.000000</td>
      <td>0.091203</td>
      <td>0.091251</td>
      <td>0.086518</td>
      <td>-0.099176</td>
      <td>-0.007368</td>
      <td>-0.035587</td>
      <td>-0.121515</td>
      <td>0.048788</td>
      <td>-0.053929</td>
    </tr>
    <tr>
      <th>NOX</th>
      <td>-0.429300</td>
      <td>0.420972</td>
      <td>-0.516604</td>
      <td>0.763651</td>
      <td>0.091203</td>
      <td>1.000000</td>
      <td>-0.302188</td>
      <td>0.731470</td>
      <td>-0.769230</td>
      <td>0.611441</td>
      <td>0.668023</td>
      <td>0.188933</td>
      <td>-0.380051</td>
      <td>0.590879</td>
    </tr>
    <tr>
      <th>RM</th>
      <td>0.696304</td>
      <td>-0.219247</td>
      <td>0.311991</td>
      <td>-0.391676</td>
      <td>0.091251</td>
      <td>-0.302188</td>
      <td>1.000000</td>
      <td>-0.240265</td>
      <td>0.205246</td>
      <td>-0.209847</td>
      <td>-0.292048</td>
      <td>-0.355501</td>
      <td>0.128069</td>
      <td>-0.613808</td>
    </tr>
    <tr>
      <th>AGE</th>
      <td>-0.377999</td>
      <td>0.352734</td>
      <td>-0.569537</td>
      <td>0.644779</td>
      <td>0.086518</td>
      <td>0.731470</td>
      <td>-0.240265</td>
      <td>1.000000</td>
      <td>-0.747881</td>
      <td>0.456022</td>
      <td>0.506456</td>
      <td>0.261515</td>
      <td>-0.273534</td>
      <td>0.602339</td>
    </tr>
    <tr>
      <th>DIS</th>
      <td>0.249315</td>
      <td>-0.379670</td>
      <td>0.664408</td>
      <td>-0.708027</td>
      <td>-0.099176</td>
      <td>-0.769230</td>
      <td>0.205246</td>
      <td>-0.747881</td>
      <td>1.000000</td>
      <td>-0.494588</td>
      <td>-0.534432</td>
      <td>-0.232471</td>
      <td>0.291512</td>
      <td>-0.496996</td>
    </tr>
    <tr>
      <th>RAD</th>
      <td>-0.384766</td>
      <td>0.625505</td>
      <td>-0.311948</td>
      <td>0.595129</td>
      <td>-0.007368</td>
      <td>0.611441</td>
      <td>-0.209847</td>
      <td>0.456022</td>
      <td>-0.494588</td>
      <td>1.000000</td>
      <td>0.910228</td>
      <td>0.464741</td>
      <td>-0.444413</td>
      <td>0.488676</td>
    </tr>
    <tr>
      <th>TAX</th>
      <td>-0.471979</td>
      <td>0.582764</td>
      <td>-0.314563</td>
      <td>0.720760</td>
      <td>-0.035587</td>
      <td>0.668023</td>
      <td>-0.292048</td>
      <td>0.506456</td>
      <td>-0.534432</td>
      <td>0.910228</td>
      <td>1.000000</td>
      <td>0.460853</td>
      <td>-0.441808</td>
      <td>0.543993</td>
    </tr>
    <tr>
      <th>PTRATIO</th>
      <td>-0.505655</td>
      <td>0.289946</td>
      <td>-0.391679</td>
      <td>0.383248</td>
      <td>-0.121515</td>
      <td>0.188933</td>
      <td>-0.355501</td>
      <td>0.261515</td>
      <td>-0.232471</td>
      <td>0.464741</td>
      <td>0.460853</td>
      <td>1.000000</td>
      <td>-0.177383</td>
      <td>0.374044</td>
    </tr>
    <tr>
      <th>B</th>
      <td>0.334861</td>
      <td>-0.385064</td>
      <td>0.175520</td>
      <td>-0.356977</td>
      <td>0.048788</td>
      <td>-0.380051</td>
      <td>0.128069</td>
      <td>-0.273534</td>
      <td>0.291512</td>
      <td>-0.444413</td>
      <td>-0.441808</td>
      <td>-0.177383</td>
      <td>1.000000</td>
      <td>-0.366087</td>
    </tr>
    <tr>
      <th>LSTAT</th>
      <td>-0.740836</td>
      <td>0.455621</td>
      <td>-0.412995</td>
      <td>0.603800</td>
      <td>-0.053929</td>
      <td>0.590879</td>
      <td>-0.613808</td>
      <td>0.602339</td>
      <td>-0.496996</td>
      <td>0.488676</td>
      <td>0.543993</td>
      <td>0.374044</td>
      <td>-0.366087</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># heatmap (seaborn)</span></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">16</span>, <span class="number">12</span>))</span><br><span class="line">ax = fig.gca()</span><br><span class="line"></span><br><span class="line">sns.set(font_scale = <span class="number">1.5</span>)  <span class="comment"># heatmap 안의 font-size 설정</span></span><br><span class="line">heatmap = sns.heatmap(corr.values, annot = <span class="literal">True</span>, fmt=<span class="string">'.2f'</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>},</span><br><span class="line">                      yticklabels = cols, xticklabels = cols, ax=ax)</span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_35_0.png" alt="output_35_0"></p>
<p>우리의 관심사인 target variable **“CMEDV”**가 다른 feature간의 상관관계를 살펴보면, 이는 <strong>“RM - 자택당 평균 방 갯수”(0.7)</strong> 및 **“LSTAT - 빈곤층의 비율”(-0.74)**과 <strong>강한 상관관계</strong>를 보이고 있다는 것을 알 수 있다.</p>
<p>이 두 변수와의 관계를 좀 더 자세히 살펴볼게요.</p>
  <br>
<h4 id="설명-변수와-종속-변수의-관계-탐색"><a class="markdownIt-Anchor" href="#설명-변수와-종속-변수의-관계-탐색"></a> &gt;&gt; 설명 변수와 종속 변수의 관계 탐색</h4>
<ul>
<li>집값 ( “CMEDV” )  ~  방 갯수 ( “RM” )</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># scatter plot</span></span><br><span class="line">sns.scatterplot(data=df, x=<span class="string">'RM'</span>, y=<span class="string">'CMEDV'</span>, markers=<span class="string">'o'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.title(<span class="string">'Scatter Plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_40_0.png" alt="output_40_0"></p>
<p>집값은 방 갯수와 양의 상관관계(positive correlation)를 갖는다. 즉, 방 갯수가 많을 수록 집값이 높을 경향이 있다</p>
<br>
<ul>
<li>집값(“CMEDV”) ~ 빈곤층의 비율(“LSTAT”)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># scatter plot</span></span><br><span class="line">sns.scatterplot(data=df, x=<span class="string">'LSTAT'</span>, y=<span class="string">'CMEDV'</span>, markers=<span class="string">'o'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.title(<span class="string">'Scatter Plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_43_0.png" alt="output_43_0"></p>
<p>집값은 빈곤층의 비율과 음의 상관관계(negative correlation)를 갖는다. 즉, 빈곤층의 비율이 높을 수록 집값이 낮은 경향이 있다.</p>
  <br>
<h4 id="지역별-차이-탐색"><a class="markdownIt-Anchor" href="#지역별-차이-탐색"></a> &gt;&gt; 지역별 차이 탐색</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 지역 데이터 - "TOWN"</span></span><br><span class="line">df[<span class="string">'TOWN'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Cambridge            30
Boston Savin Hill    23
Lynn                 22
Boston Roxbury       19
Newton               18
                     ..
Hanover               1
Hull                  1
Sherborn              1
Hamilton              1
Dover                 1
Name: TOWN, Length: 92, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 지역별 데이터 갯수</span></span><br><span class="line">df[<span class="string">'TOWN'</span>].value_counts().hist(bins=<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf3fb4b08&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_48_1.png" alt="output_48_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 지역별 집값 특징 (boxplot 이용)</span></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">12</span>, <span class="number">20</span>))</span><br><span class="line">sns.boxplot(x=<span class="string">'CMEDV'</span>, y=<span class="string">'TOWN'</span>, data=df)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf3ff9ec8&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_49_1.png" alt="output_49_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 지역별 범죄율 특징</span></span><br><span class="line">fig = plt.figure(figsize = (<span class="number">12</span>, <span class="number">20</span>))</span><br><span class="line">sns.boxplot(x=<span class="string">'CRIM'</span>, y=<span class="string">'TOWN'</span>, data=df)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23cf407fec8&gt;
</code></pre>
<p><img src="/images/E-Python-LinearRegression-1/output_50_1.png" alt="output_50_1"></p>
<br>
<br>
<h2 id="3-집값-예측-분석-회귀분석"><a class="markdownIt-Anchor" href="#3-집값-예측-분석-회귀분석"></a> <strong>3. 집값 예측 분석: 회귀분석</strong></h2>
<h3 id="3-1-데이터-전처리"><a class="markdownIt-Anchor" href="#3-1-데이터-전처리"></a> 3-1. 데이터 전처리</h3>
<h4 id="feature-표준화"><a class="markdownIt-Anchor" href="#feature-표준화"></a> &gt;&gt; feature 표준화</h4>
<p>Feature 들의 scale 차이를 없애기 위해 먼저 Feature 표준화를 진행한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOWN</th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Nahant</td>
      <td>-70.955</td>
      <td>42.2550</td>
      <td>24.0</td>
      <td>0.00632</td>
      <td>18.0</td>
      <td>2.31</td>
      <td>0</td>
      <td>0.538</td>
      <td>6.575</td>
      <td>65.2</td>
      <td>4.0900</td>
      <td>1</td>
      <td>296</td>
      <td>15.3</td>
      <td>396.90</td>
      <td>4.98</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Swampscott</td>
      <td>-70.950</td>
      <td>42.2875</td>
      <td>21.6</td>
      <td>0.02731</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>6.421</td>
      <td>78.9</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>396.90</td>
      <td>9.14</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Swampscott</td>
      <td>-70.936</td>
      <td>42.2830</td>
      <td>34.7</td>
      <td>0.02729</td>
      <td>0.0</td>
      <td>7.07</td>
      <td>0</td>
      <td>0.469</td>
      <td>7.185</td>
      <td>61.1</td>
      <td>4.9671</td>
      <td>2</td>
      <td>242</td>
      <td>17.8</td>
      <td>392.83</td>
      <td>4.03</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Marblehead</td>
      <td>-70.928</td>
      <td>42.2930</td>
      <td>33.4</td>
      <td>0.03237</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>6.998</td>
      <td>45.8</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>394.63</td>
      <td>2.94</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Marblehead</td>
      <td>-70.922</td>
      <td>42.2980</td>
      <td>36.2</td>
      <td>0.06905</td>
      <td>0.0</td>
      <td>2.18</td>
      <td>0</td>
      <td>0.458</td>
      <td>7.147</td>
      <td>54.2</td>
      <td>6.0622</td>
      <td>3</td>
      <td>222</td>
      <td>18.7</td>
      <td>396.90</td>
      <td>5.33</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 506 entries, 0 to 505
Data columns (total 17 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   TOWN     506 non-null    object 
 1   LON      506 non-null    float64
 2   LAT      506 non-null    float64
 3   CMEDV    506 non-null    float64
 4   CRIM     506 non-null    float64
 5   ZN       506 non-null    float64
 6   INDUS    506 non-null    float64
 7   CHAS     506 non-null    int64  
 8   NOX      506 non-null    float64
 9   RM       506 non-null    float64
 10  AGE      506 non-null    float64
 11  DIS      506 non-null    float64
 12  RAD      506 non-null    int64  
 13  TAX      506 non-null    int64  
 14  PTRATIO  506 non-null    float64
 15  B        506 non-null    float64
 16  LSTAT    506 non-null    float64
dtypes: float64(13), int64(3), object(1)
memory usage: 67.3+ KB
</code></pre>
<br>
<p>Dummy Variable을 제외한 Numerical Variable 들을 표준화 함.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature standardization  (numerical_columns except dummy var.-"CHAS")</span></span><br><span class="line">scaler = StandardScaler()  <span class="comment"># 평균 0, 표준편차 1</span></span><br><span class="line">scale_columns = [<span class="string">'CRIM'</span>, <span class="string">'ZN'</span>, <span class="string">'INDUS'</span>, <span class="string">'NOX'</span>, <span class="string">'RM'</span>, <span class="string">'AGE'</span>, <span class="string">'DIS'</span>, <span class="string">'RAD'</span>, <span class="string">'TAX'</span>, <span class="string">'PTRATIO'</span>, <span class="string">'B'</span>, <span class="string">'LSTAT'</span>]</span><br><span class="line">df[scale_columns] = scaler.fit_transform(df[scale_columns])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOWN</th>
      <th>LON</th>
      <th>LAT</th>
      <th>CMEDV</th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Nahant</td>
      <td>-70.955</td>
      <td>42.2550</td>
      <td>24.0</td>
      <td>-0.419782</td>
      <td>0.284830</td>
      <td>-1.287909</td>
      <td>0</td>
      <td>-0.144217</td>
      <td>0.413672</td>
      <td>-0.120013</td>
      <td>0.140214</td>
      <td>-0.982843</td>
      <td>-0.666608</td>
      <td>-1.459000</td>
      <td>0.441052</td>
      <td>-1.075562</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Swampscott</td>
      <td>-70.950</td>
      <td>42.2875</td>
      <td>21.6</td>
      <td>-0.417339</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>0.194274</td>
      <td>0.367166</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.441052</td>
      <td>-0.492439</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Swampscott</td>
      <td>-70.936</td>
      <td>42.2830</td>
      <td>34.7</td>
      <td>-0.417342</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>1.282714</td>
      <td>-0.265812</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.396427</td>
      <td>-1.208727</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Marblehead</td>
      <td>-70.928</td>
      <td>42.2930</td>
      <td>33.4</td>
      <td>-0.416750</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.016303</td>
      <td>-0.809889</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.416163</td>
      <td>-1.361517</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Marblehead</td>
      <td>-70.922</td>
      <td>42.2980</td>
      <td>36.2</td>
      <td>-0.412482</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.228577</td>
      <td>-0.511180</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.441052</td>
      <td>-1.026501</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<br>  
<h4 id="training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#training-set-test-set-나누기"></a> &gt;&gt; Training set / Test set 나누기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># features for linear regression model</span></span><br><span class="line">df[numerical_columns].head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CRIM</th>
      <th>ZN</th>
      <th>INDUS</th>
      <th>CHAS</th>
      <th>NOX</th>
      <th>RM</th>
      <th>AGE</th>
      <th>DIS</th>
      <th>RAD</th>
      <th>TAX</th>
      <th>PTRATIO</th>
      <th>B</th>
      <th>LSTAT</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.419782</td>
      <td>0.284830</td>
      <td>-1.287909</td>
      <td>0</td>
      <td>-0.144217</td>
      <td>0.413672</td>
      <td>-0.120013</td>
      <td>0.140214</td>
      <td>-0.982843</td>
      <td>-0.666608</td>
      <td>-1.459000</td>
      <td>0.441052</td>
      <td>-1.075562</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.417339</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>0.194274</td>
      <td>0.367166</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.441052</td>
      <td>-0.492439</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-0.417342</td>
      <td>-0.487722</td>
      <td>-0.593381</td>
      <td>0</td>
      <td>-0.740262</td>
      <td>1.282714</td>
      <td>-0.265812</td>
      <td>0.557160</td>
      <td>-0.867883</td>
      <td>-0.987329</td>
      <td>-0.303094</td>
      <td>0.396427</td>
      <td>-1.208727</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-0.416750</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.016303</td>
      <td>-0.809889</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.416163</td>
      <td>-1.361517</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-0.412482</td>
      <td>-0.487722</td>
      <td>-1.306878</td>
      <td>0</td>
      <td>-0.835284</td>
      <td>1.228577</td>
      <td>-0.511180</td>
      <td>1.077737</td>
      <td>-0.752922</td>
      <td>-1.106115</td>
      <td>0.113032</td>
      <td>0.441052</td>
      <td>-1.026501</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="comment"># split dataset into training &amp; test</span></span><br><span class="line">X = df[numerical_columns]</span><br><span class="line">y = df[<span class="string">'CMEDV'</span>]</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">X_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((404, 13), (404,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">X_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((102, 13), (102,))
</code></pre>
<br>
<h4 id="다중-공선성"><a class="markdownIt-Anchor" href="#다중-공선성"></a> &gt;&gt; 다중 공선성</h4>
<p>다중 공선성을 판단할 때 보통 VIF값을 본다.</p>
<p>일반적으로, VIF &gt; 10인 feature들은 다른 변수와 상관관계가 높아, 다중 공선성이 존재하는 것으로 판단한다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> statsmodels.stats.outliers_influence <span class="keyword">import</span> variance_inflation_factor</span><br><span class="line"></span><br><span class="line">vif = pd.DataFrame()</span><br><span class="line">vif[<span class="string">'features'</span>] = X_train.columns</span><br><span class="line">vif[<span class="string">"VIF Factor"</span>] = [variance_inflation_factor(X_train.values, i) <span class="keyword">for</span> i <span class="keyword">in</span> range(X_train.shape[<span class="number">1</span>])]</span><br><span class="line">vif.round(<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>features</th>
      <th>VIF Factor</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>CRIM</td>
      <td>1.7</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ZN</td>
      <td>2.5</td>
    </tr>
    <tr>
      <th>2</th>
      <td>INDUS</td>
      <td>3.8</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHAS</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NOX</td>
      <td>4.4</td>
    </tr>
    <tr>
      <th>5</th>
      <td>RM</td>
      <td>1.9</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AGE</td>
      <td>3.2</td>
    </tr>
    <tr>
      <th>7</th>
      <td>DIS</td>
      <td>4.2</td>
    </tr>
    <tr>
      <th>8</th>
      <td>RAD</td>
      <td>8.1</td>
    </tr>
    <tr>
      <th>9</th>
      <td>TAX</td>
      <td>9.8</td>
    </tr>
    <tr>
      <th>10</th>
      <td>PTRATIO</td>
      <td>1.9</td>
    </tr>
    <tr>
      <th>11</th>
      <td>B</td>
      <td>1.4</td>
    </tr>
    <tr>
      <th>12</th>
      <td>LSTAT</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="3-2-회귀-분석-모델-학습-및-예측"><a class="markdownIt-Anchor" href="#3-2-회귀-분석-모델-학습-및-예측"></a> 3-2. 회귀 분석 모델 학습 및 예측</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line"></span><br><span class="line"><span class="comment"># fit regression model in training set</span></span><br><span class="line">lr = linear_model.LinearRegression()</span><br><span class="line">model = lr.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict in test set</span></span><br><span class="line">pred_test = lr.predict(X_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h4 id="coefficients-확인하기"><a class="markdownIt-Anchor" href="#coefficients-확인하기"></a> &gt;&gt; coefficients 확인하기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># print coef</span></span><br><span class="line">print(lr.coef_)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[-0.9479409   1.39796831  0.14786968  2.13469673 -2.25995614  2.15879342
  0.12103297 -3.23121173  2.63662665 -1.95959865 -2.05639351  0.65670428
 -3.93702535]
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "feature - coefficients" DataFrame 만들기</span></span><br><span class="line">coefs = pd.DataFrame(zip(df[numerical_columns].columns, lr.coef_), columns = [<span class="string">'feature'</span>, <span class="string">'coefficients'</span>])</span><br><span class="line">coefs</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>feature</th>
      <th>coefficients</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>CRIM</td>
      <td>-0.947941</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ZN</td>
      <td>1.397968</td>
    </tr>
    <tr>
      <th>2</th>
      <td>INDUS</td>
      <td>0.147870</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHAS</td>
      <td>2.134697</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NOX</td>
      <td>-2.259956</td>
    </tr>
    <tr>
      <th>5</th>
      <td>RM</td>
      <td>2.158793</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AGE</td>
      <td>0.121033</td>
    </tr>
    <tr>
      <th>7</th>
      <td>DIS</td>
      <td>-3.231212</td>
    </tr>
    <tr>
      <th>8</th>
      <td>RAD</td>
      <td>2.636627</td>
    </tr>
    <tr>
      <th>9</th>
      <td>TAX</td>
      <td>-1.959599</td>
    </tr>
    <tr>
      <th>10</th>
      <td>PTRATIO</td>
      <td>-2.056394</td>
    </tr>
    <tr>
      <th>11</th>
      <td>B</td>
      <td>0.656704</td>
    </tr>
    <tr>
      <th>12</th>
      <td>LSTAT</td>
      <td>-3.937025</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 크기 순서로 나열</span></span><br><span class="line">coefs.reindex(coefs.coefficients.abs().sort_values(ascending=<span class="literal">False</span>).index)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>feature</th>
      <th>coefficients</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>12</th>
      <td>LSTAT</td>
      <td>-3.937025</td>
    </tr>
    <tr>
      <th>7</th>
      <td>DIS</td>
      <td>-3.231212</td>
    </tr>
    <tr>
      <th>8</th>
      <td>RAD</td>
      <td>2.636627</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NOX</td>
      <td>-2.259956</td>
    </tr>
    <tr>
      <th>5</th>
      <td>RM</td>
      <td>2.158793</td>
    </tr>
    <tr>
      <th>3</th>
      <td>CHAS</td>
      <td>2.134697</td>
    </tr>
    <tr>
      <th>10</th>
      <td>PTRATIO</td>
      <td>-2.056394</td>
    </tr>
    <tr>
      <th>9</th>
      <td>TAX</td>
      <td>-1.959599</td>
    </tr>
    <tr>
      <th>1</th>
      <td>ZN</td>
      <td>1.397968</td>
    </tr>
    <tr>
      <th>0</th>
      <td>CRIM</td>
      <td>-0.947941</td>
    </tr>
    <tr>
      <th>11</th>
      <td>B</td>
      <td>0.656704</td>
    </tr>
    <tr>
      <th>2</th>
      <td>INDUS</td>
      <td>0.147870</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AGE</td>
      <td>0.121033</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">## coefficients 시각화</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">8</span>, <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># bar plot</span></span><br><span class="line">plt.barh(coefs[<span class="string">'feature'</span>], coefs[<span class="string">'coefficients'</span>])</span><br><span class="line">plt.title(<span class="string">'"feature - coefficient" Graph'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'coefficients'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'features'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_81_0.png" alt="output_81_0"></p>
<br>
<h4 id="feature-유의성-검정"><a class="markdownIt-Anchor" href="#feature-유의성-검정"></a> &gt;&gt; feature 유의성 검정</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"></span><br><span class="line">X_train2 = sm.add_constant(X_train)</span><br><span class="line">model2 = sm.OLS(y_train, X_train2).fit()</span><br><span class="line">model2.summary()</span><br></pre></td></tr></tbody></table></figure>
<table class="simpletable">
<caption>OLS Regression Results</caption>
<tbody><tr>
  <th>Dep. Variable:</th>          <td>CMEDV</td>      <th>  R-squared:         </th> <td>   0.734</td> 
</tr>
<tr>
  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.725</td> 
</tr>
<tr>
  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   82.86</td> 
</tr>
<tr>
  <th>Date:</th>             <td>Tue, 11 Aug 2020</td> <th>  Prob (F-statistic):</th> <td>1.72e-103</td>
</tr>
<tr>
  <th>Time:</th>                 <td>00:22:07</td>     <th>  Log-Likelihood:    </th> <td> -1191.9</td> 
</tr>
<tr>
  <th>No. Observations:</th>      <td>   404</td>      <th>  AIC:               </th> <td>   2412.</td> 
</tr>
<tr>
  <th>Df Residuals:</th>          <td>   390</td>      <th>  BIC:               </th> <td>   2468.</td> 
</tr>
<tr>
  <th>Df Model:</th>              <td>    13</td>      <th>                     </th>     <td> </td>    
</tr>
<tr>
  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    
</tr>
</tbody></table>
<table class="simpletable">
<tbody><tr>
     <td></td>        <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P&gt;|t|</th>  <th>[0.025</th>    <th>0.975]</th>  
</tr>
<tr>
  <th>const</th>   <td>   22.4313</td> <td>    0.245</td> <td>   91.399</td> <td> 0.000</td> <td>   21.949</td> <td>   22.914</td>
</tr>
<tr>
  <th>CRIM</th>    <td>   -0.9479</td> <td>    0.290</td> <td>   -3.263</td> <td> 0.001</td> <td>   -1.519</td> <td>   -0.377</td>
</tr>
<tr>
  <th>ZN</th>      <td>    1.3980</td> <td>    0.372</td> <td>    3.758</td> <td> 0.000</td> <td>    0.667</td> <td>    2.129</td>
</tr>
<tr>
  <th>INDUS</th>   <td>    0.1479</td> <td>    0.458</td> <td>    0.323</td> <td> 0.747</td> <td>   -0.753</td> <td>    1.049</td>
</tr>
<tr>
  <th>CHAS</th>    <td>    2.1347</td> <td>    0.899</td> <td>    2.375</td> <td> 0.018</td> <td>    0.367</td> <td>    3.902</td>
</tr>
<tr>
  <th>NOX</th>     <td>   -2.2600</td> <td>    0.490</td> <td>   -4.617</td> <td> 0.000</td> <td>   -3.222</td> <td>   -1.298</td>
</tr>
<tr>
  <th>RM</th>      <td>    2.1588</td> <td>    0.332</td> <td>    6.495</td> <td> 0.000</td> <td>    1.505</td> <td>    2.812</td>
</tr>
<tr>
  <th>AGE</th>     <td>    0.1210</td> <td>    0.415</td> <td>    0.292</td> <td> 0.771</td> <td>   -0.695</td> <td>    0.937</td>
</tr>
<tr>
  <th>DIS</th>     <td>   -3.2312</td> <td>    0.477</td> <td>   -6.774</td> <td> 0.000</td> <td>   -4.169</td> <td>   -2.293</td>
</tr>
<tr>
  <th>RAD</th>     <td>    2.6366</td> <td>    0.671</td> <td>    3.931</td> <td> 0.000</td> <td>    1.318</td> <td>    3.955</td>
</tr>
<tr>
  <th>TAX</th>     <td>   -1.9596</td> <td>    0.731</td> <td>   -2.679</td> <td> 0.008</td> <td>   -3.398</td> <td>   -0.522</td>
</tr>
<tr>
  <th>PTRATIO</th> <td>   -2.0564</td> <td>    0.319</td> <td>   -6.446</td> <td> 0.000</td> <td>   -2.684</td> <td>   -1.429</td>
</tr>
<tr>
  <th>B</th>       <td>    0.6567</td> <td>    0.272</td> <td>    2.414</td> <td> 0.016</td> <td>    0.122</td> <td>    1.191</td>
</tr>
<tr>
  <th>LSTAT</th>   <td>   -3.9370</td> <td>    0.405</td> <td>   -9.723</td> <td> 0.000</td> <td>   -4.733</td> <td>   -3.141</td>
</tr>
</tbody></table>
<table class="simpletable">
<tbody><tr>
  <th>Omnibus:</th>       <td>169.952</td> <th>  Durbin-Watson:     </th> <td>   1.935</td> 
</tr>
<tr>
  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 859.012</td> 
</tr>
<tr>
  <th>Skew:</th>          <td> 1.762</td>  <th>  Prob(JB):          </th> <td>2.94e-187</td>
</tr>
<tr>
  <th>Kurtosis:</th>      <td> 9.213</td>  <th>  Cond. No.          </th> <td>    10.7</td> 
</tr>
</tbody></table><br>Warnings:<br>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
<br>
<br>
<p>t검정 결과를 확인해보면, INDUS(상업적 비즈니스에 활용되지 않는 농지 면적)과 AGE(1940 년 이전에 건설된 비율) 두 변수가 유의하지 않다는 것을 확인할 수 있다.</p>
 <br> 
<h4 id="예측-결과-및-모델-성능-확인"><a class="markdownIt-Anchor" href="#예측-결과-및-모델-성능-확인"></a> &gt;&gt; 예측 결과 및 모델 성능 확인</h4>
<ul>
<li>예측 결과 시각화</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 예측 결과 시각화 (test set)</span></span><br><span class="line">df = pd.DataFrame({<span class="string">'actual'</span>: y_test, <span class="string">'prediction'</span>: pred_test})</span><br><span class="line">df = df.sort_values(by=<span class="string">'actual'</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">9</span>))</span><br><span class="line">plt.scatter(df.index, df[<span class="string">'prediction'</span>], marker=<span class="string">'x'</span>, color=<span class="string">'r'</span>)</span><br><span class="line">plt.scatter(df.index, df[<span class="string">'actual'</span>], alpha=<span class="number">0.7</span>, marker=<span class="string">'o'</span>, color=<span class="string">'black'</span>)</span><br><span class="line">plt.title(<span class="string">"Prediction Result in Test Set"</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.legend([<span class="string">'prediction'</span>, <span class="string">'actual'</span>], fontsize=<span class="number">12</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-LinearRegression-1/output_89_0.png" alt="output_89_0"></p>
<br>
<ul>
<li>R square</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># R square</span></span><br><span class="line">print(model.score(X_train, y_train))  <span class="comment"># training set</span></span><br><span class="line">print(model.score(X_test, y_test))  <span class="comment"># test set</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>0.7341832055169144
0.7639579157366423
</code></pre>
<br>
<ul>
<li>RMSE</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># RMSE</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># training set</span></span><br><span class="line">pred_train = lr.predict(X_train)</span><br><span class="line">print(sqrt(mean_squared_error(y_train, pred_train)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># test set</span></span><br><span class="line">print(sqrt(mean_squared_error(y_test, pred_test)))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>4.624051760840334
4.829847098176557
</code></pre>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Exercise】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>회귀</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Classification -- 포켓몬 데이터셋</title>
    <url>/2020/08/13/E-Python-Classification-1/</url>
    <content><![CDATA[<h1 id="classification-실습-포켓몬-데이터셋"><a class="markdownIt-Anchor" href="#classification-실습-포켓몬-데이터셋"></a> 【Classification 실습】 – 포켓몬 데이터셋</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-eda-exploratoty-data-analysis-%ED%83%90%EC%83%89%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B6%84%EC%84%9D"><strong>2. EDA (Exploratoty Data Analysis: 탐색적 데이터 분석)</strong></a>
<ul>
<li><a href="#2-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4-%ED%83%90%EC%83%89">2-1. 데이터셋 기본 정보 탐색</a></li>
<li><a href="#2-2-%EB%B3%80%EC%88%98feature-%ED%8A%B9%EC%A7%95-%ED%83%90%EC%83%89">2-2. 변수(Feature) 특징 탐색</a>
<ul>
<li><a href="#1-%EA%B0%81-%EB%8A%A5%EB%A0%A5%EC%B9%98-%EB%B6%84%ED%8F%AC">(1) 각 능력치 분포</a></li>
<li><a href="#2-%EC%B4%9D-%EB%8A%A5%EB%A0%A5%EC%B9%98-total-%EB%B6%84%ED%8F%AC">(2) 총 능력치 (Total) 분포</a></li>
<li><a href="#3-%ED%8F%AC%EC%BC%93%EB%AA%AC-%ED%83%80%EC%9E%85-type-1-type-2-%EB%B6%84%ED%8F%AC">(3) 포켓몬 타입 (Type 1 &amp; Type 2) 분포</a></li>
<li><a href="#4-%ED%8F%AC%EC%BC%93%EB%AA%AC-%EC%84%B8%EB%8C%80generation-%EB%B6%84%ED%8F%AC">(4) 포켓몬 세대(Generation) 분포</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5-%EA%B8%B0%EB%B0%98-%EB%B6%84%EB%A5%98-%EB%B6%84%EC%84%9D-logistic-regression"><strong>3. 지도 학습 기반 분류 분석 – Logistic Regression</strong></a>
<ul>
<li><a href="#3-1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC">3-1. 데이터 전처리</a>
<ul>
<li><a href="#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%EA%B2%BD">(1) 데이터 타입 변경</a></li>
<li><a href="#2-one-hot-encoding">(2) One-Hot Encoding</a></li>
<li><a href="#3-feature-%ED%8F%AC%EC%A4%80%ED%99%94">(3) Feature 포준화</a></li>
<li><a href="#4-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0">(4) Training set / Test set 나누기</a></li>
</ul>
</li>
<li><a href="#3-2-logistic-regression-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5">3-2. Logistic Regression 모델 학습</a>
<ul>
<li><a href="#1-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5">(1) 모델 학습</a></li>
<li><a href="#2-%EB%AA%A8%EB%8D%B8-%ED%8F%89%EA%B0%80">(2) 모델 평가</a></li>
</ul>
</li>
<li><a href="#3-3-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B6%88%EA%B7%A0%ED%98%95-%EC%A1%B0%EC%A0%95">3-3. 클래스 불균형 조정</a></li>
</ul>
</li>
<li><a href="#4-%EB%B9%84%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5-%EA%B8%B0%EB%B0%98-%EA%B5%B0%EC%A7%91-%EB%B6%84%EB%A5%98-%EB%B6%84%EC%84%9D-k-means-clustering"><strong>4. 비지도 학습 기반 군집 분류 분석 – K-Means Clustering</strong></a>
<ul>
<li><a href="#4-1-k-means-%EA%B5%B0%EC%A7%91-%EB%B6%84%EB%A5%98">4-1. K-Means 군집 분류</a>
<ul>
<li><a href="#1-2%EC%B0%A8%EC%9B%90-%EA%B5%B0%EC%A7%91-%EB%B6%84%EC%84%9D">(1) 2차원 군집 분석</a></li>
<li><a href="#2-%EB%8B%A4%EC%B0%A8%EC%9B%90-%EA%B5%B0%EC%A7%91-%EB%B6%84%EC%84%9D">(2) 다차원 군집 분석</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>포켓몬 데이터셋을 이용해 분류 분석을 진행합니다.</p>
<ul>
<li><strong>지도 학습 (Logistic Regression):</strong> “전설의 포켓몬” 여부 예측 – “Legendary” = 0/1</li>
<li><strong>비지도 학습 (K-Means Clustering):</strong> 포켓몬 분류</li>
</ul>
<br>  
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">"ignore"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">'font.family'</span>] = <span class="string">'Malgun Gothic'</span>  <span class="comment"># 한글 깨짐 방지</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">'figure.figsize'</span>] = (<span class="number">10</span>, <span class="number">8</span>)  <span class="comment"># figsize 설정</span></span><br></pre></td></tr></tbody></table></figure>
<br>  
<p><strong>&gt;&gt; 사용할 데이터셋 - Pokemon Dataset</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/Pokemon.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>#</th>
      <th>Name</th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Bulbasaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>Ivysaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>VenusaurMega Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>Charmander</td>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>Name: 포켓몬 이름</li>
<li>Type 1: 포켓몬 타입 1</li>
<li>Type 2: 포켓몬 타입 2</li>
<li>Total: 포켓몬 총 능력치 (Sum of ‘HP’, ‘Attack’, ‘Defense’, ‘Sp.Atk’, ‘Sp.Def’ and ‘Speed’)</li>
<li>HP: 포켓몬 HP 능력치</li>
<li>Attack: 포켓몬 Attack 능력치</li>
<li>Defense: 포켓몬 Defense 능력치</li>
<li>Sp.Atk: 포켓몬 Sp.Atk 능력치</li>
<li>Sp.Def: 포켓몬 Sp.Def 능력치</li>
<li>Speed: 포켓몬 Speed 능력치</li>
<li>Generation: 포켓몬 세대</li>
<li>Legendary: 전설의 포켓몬 여부</li>
</ul>
<p><br>  <br></p>
<h2 id="2-eda-exploratoty-data-analysis-탐색적-데이터-분석"><a class="markdownIt-Anchor" href="#2-eda-exploratoty-data-analysis-탐색적-데이터-분석"></a> <strong>2. EDA (Exploratoty Data Analysis: 탐색적 데이터 분석)</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 그래프 배경 설정</span></span><br><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3 id="2-1-데이터셋-기본-정보-탐색"><a class="markdownIt-Anchor" href="#2-1-데이터셋-기본-정보-탐색"></a> 2-1. 데이터셋 기본 정보 탐색</h3>
<p><strong>&gt;&gt; 전체 데이터셋</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># demension</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(800, 13)
</code></pre>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information (data type)</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 800 entries, 0 to 799
Data columns (total 13 columns):
 #   Column      Non-Null Count  Dtype 
---  ------      --------------  ----- 
 0   #           800 non-null    int64 
 1   Name        800 non-null    object
 2   Type 1      800 non-null    object
 3   Type 2      414 non-null    object
 4   Total       800 non-null    int64 
 5   HP          800 non-null    int64 
 6   Attack      800 non-null    int64 
 7   Defense     800 non-null    int64 
 8   Sp. Atk     800 non-null    int64 
 9   Sp. Def     800 non-null    int64 
 10  Speed       800 non-null    int64 
 11  Generation  800 non-null    int64 
 12  Legendary   800 non-null    bool  
dtypes: bool(1), int64(9), object(3)
memory usage: 75.9+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>#               0
Name            0
Type 1          0
Type 2        386
Total           0
HP              0
Attack          0
Defense         0
Sp. Atk         0
Sp. Def         0
Speed           0
Generation      0
Legendary       0
dtype: int64
</code></pre>
  <br>
<p><strong>&gt;&gt; 개별 Feature 탐색</strong></p>
<ul>
<li><strong>분류할 목표 Feature</strong>: “Legendary” (전설의 포켓몬 여부)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># class 별 데이터 수 확인</span></span><br><span class="line">df[<span class="string">'Legendary'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>False    735
True      65
Name: Legendary, dtype: int64
</code></pre>
 <br> 
<ul>
<li>“Generation” (포켓몬 세대)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 세대별 데이터 수 확인</span></span><br><span class="line">df[<span class="string">'Generation'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    166
5    165
3    160
4    121
2    106
6     82
Name: Generation, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 세대 순서로 데이터 갯수 시각화</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">df[<span class="string">'Generation'</span>].value_counts().sort_index().plot()</span><br><span class="line">plt.title(<span class="string">"'Generation 별 데이터 갯수'"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_34_0.png" alt="output_34_0"></p>
<br>
<ul>
<li>“Type 1” &amp; “Type 2” (포켓몬 타입)</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># unique value of "Type 1"</span></span><br><span class="line">df[<span class="string">'Type 1'</span>].unique()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['Grass', 'Fire', 'Water', 'Bug', 'Normal', 'Poison', 'Electric',
       'Ground', 'Fairy', 'Fighting', 'Psychic', 'Rock', 'Ghost', 'Ice',
       'Dragon', 'Dark', 'Steel', 'Flying'], dtype=object)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># No. of unique value for "Type 1"</span></span><br><span class="line">len(df[<span class="string">'Type 1'</span>].unique())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>18
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># unique value of "Type 2"  (exclude "NaN")</span></span><br><span class="line">df[df[<span class="string">'Type 2'</span>].notnull()][<span class="string">'Type 2'</span>].unique()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array(['Poison', 'Flying', 'Dragon', 'Ground', 'Fairy', 'Grass',
       'Fighting', 'Psychic', 'Steel', 'Ice', 'Rock', 'Dark', 'Water',
       'Electric', 'Fire', 'Ghost', 'Bug', 'Normal'], dtype=object)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># No. of unique value for "Type 2"</span></span><br><span class="line">len(df[df[<span class="string">'Type 2'</span>].notnull()][<span class="string">'Type 2'</span>].unique())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>18
</code></pre>
  <br>
<h3 id="2-2-변수feature-특징-탐색"><a class="markdownIt-Anchor" href="#2-2-변수feature-특징-탐색"></a> 2-2. 변수(Feature) 특징 탐색</h3>
<p>각 변수(Feature)의 분포를 관찰함으로써, 변수들의 특징을 알아보도록 하겠습니다.</p>
<p>특히, 저희가 분류할 목표 Feature가 "Legendary"이므로, 각 변수의 분포를 탐색 시:</p>
<ol>
<li>각 항목(feature)에서 <strong>전체 데이터의 분포</strong> 뿐만 아닌</li>
<li><strong>"Legendary"변수 class 별의 데이터 분포</strong>도 함께 살펴볼게요.</li>
</ol>
   <br> 
<p><strong>GUIDE</strong></p>
<p>【전체 데이터 탐색】  <strong>&amp;</strong>  【“Legendary” class별 탐색】</p>
<ol>
<li>각 능력치 분포</li>
<li>총 능력치 (Toal) 분포</li>
<li>포켓몬 타입 (Type 1 &amp; Type 2) 분포</li>
<li>포켓몬 세대 (Generation) 분포</li>
</ol>
 <br> 
<h4 id="1-각-능력치-분포"><a class="markdownIt-Anchor" href="#1-각-능력치-분포"></a> (1) 각 능력치 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬의 각 능력치 분포</span></span><br><span class="line"></span><br><span class="line">stats = [<span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>] <span class="comment"># 능력치 변수 집합</span></span><br><span class="line">sns.boxplot(data = df[stats])</span><br><span class="line">plt.title(<span class="string">'각 능력치 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_48_0.png" alt="output_48_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 능력치 분포</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">16</span>, <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sns.boxplot(data = df[df[<span class="string">'Legendary'</span>]==<span class="number">1</span>][stats])</span><br><span class="line">plt.title(<span class="string">'Legendary = True'</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">sns.boxplot(data = df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>][stats])</span><br><span class="line">plt.title(<span class="string">'Legendary = False'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_50_0.png" alt="output_50_0"></p>
 <br>
<p>"전설의 포켓몬"은 전체적으로 더 높은 능력치를 보유하고 있으며, Attack와 Sp.Atk가 특히 높은 것으로 보입니다.</p>
 <br> 
<h4 id="2-총-능력치-total-분포"><a class="markdownIt-Anchor" href="#2-총-능력치-total-분포"></a> (2) 총 능력치 (Total) 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬의 총 능력치 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Total'</span>].hist(bins=<span class="number">50</span>)</span><br><span class="line">plt.title(<span class="string">'총 능력치 (Total) 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_54_0.png" alt="output_54_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 세대별 총 능력치 분포</span></span><br><span class="line">sns.boxplot(data = df, x = <span class="string">"Generation"</span>, y=<span class="string">"Total"</span>)</span><br><span class="line">plt.title(<span class="string">"세대별 총 능력치 분포"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_56_0.png" alt="output_56_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 세대 "전설의 포켓몬" 여부에 따른 총 능력치 분포</span></span><br><span class="line">sns.boxplot(data = df, x = <span class="string">"Generation"</span>, y=<span class="string">"Total"</span>, hue=<span class="string">"Legendary"</span>)</span><br><span class="line">plt.title(<span class="string">"각 세대 '전설의 포켓몬' 여부에 따른 총 능력치 분포"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_57_0.png" alt="output_57_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 타입(Type 1)별 총 능력치 분포</span></span><br><span class="line">sns.boxplot(data = df, x = <span class="string">'Type 1'</span>, y = <span class="string">'Total'</span>)</span><br><span class="line">plt.title(<span class="string">"타입(Type 1)별 총 능력치 분포"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_59_0.png" alt="output_59_0"></p>
<br>
<h4 id="3-포켓몬-타입-type-1-type-2-분포"><a class="markdownIt-Anchor" href="#3-포켓몬-타입-type-1-type-2-분포"></a> (3) 포켓몬 타입 (Type 1 &amp; Type 2) 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬 -- Type 1 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Type 1'</span>].value_counts(sort=<span class="literal">False</span>).sort_index().plot.barh()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2e92fab51c8&gt;
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_62_1.png" alt="output_62_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 Type 1 분포</span></span><br><span class="line"></span><br><span class="line">T1_Total = pd.DataFrame(df[<span class="string">'Type 1'</span>].value_counts().sort_index())</span><br><span class="line">T1_NotLeg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].groupby(<span class="string">'Type 1'</span>).size())</span><br><span class="line">T1_count = pd.concat([T1_Total, T1_NotLeg], axis = <span class="number">1</span>)</span><br><span class="line">T1_count.columns = [<span class="string">'Total'</span>, <span class="string">'Not Legend'</span>]</span><br><span class="line">T1_count[<span class="string">'Legend'</span>] = T1_count[<span class="string">'Total'</span>] - T1_count[<span class="string">'Not Legend'</span>]</span><br><span class="line">T1_count</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>Not Legend</th>
      <th>Legend</th>
    </tr>
    <tr>
      <th>Type 1</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bug</th>
      <td>69</td>
      <td>69</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Dark</th>
      <td>31</td>
      <td>29</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Dragon</th>
      <td>32</td>
      <td>20</td>
      <td>12</td>
    </tr>
    <tr>
      <th>Electric</th>
      <td>44</td>
      <td>40</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Fairy</th>
      <td>17</td>
      <td>16</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Fighting</th>
      <td>27</td>
      <td>27</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Fire</th>
      <td>52</td>
      <td>47</td>
      <td>5</td>
    </tr>
    <tr>
      <th>Flying</th>
      <td>4</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Ghost</th>
      <td>32</td>
      <td>30</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Grass</th>
      <td>70</td>
      <td>67</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Ground</th>
      <td>32</td>
      <td>28</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Ice</th>
      <td>24</td>
      <td>22</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Normal</th>
      <td>98</td>
      <td>96</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Poison</th>
      <td>28</td>
      <td>28</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Psychic</th>
      <td>57</td>
      <td>43</td>
      <td>14</td>
    </tr>
    <tr>
      <th>Rock</th>
      <td>44</td>
      <td>40</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Steel</th>
      <td>27</td>
      <td>23</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Water</th>
      <td>112</td>
      <td>108</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">T1_count[[<span class="string">'Not Legend'</span>, <span class="string">'Legend'</span>]].plot.barh(width=<span class="number">0.7</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2e92ff18b88&gt;
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_65_1.png" alt="output_65_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬 -- Type 2 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Type 2'</span>].value_counts(sort=<span class="literal">False</span>).sort_index().plot.barh()</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'"전설의 포켓몬" 여부에 따른 Type 1 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_67_0.png" alt="output_67_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 Type 2 분포</span></span><br><span class="line"></span><br><span class="line">T2_Total = pd.DataFrame(df[<span class="string">'Type 2'</span>].value_counts().sort_index())</span><br><span class="line">T2_NotLeg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].groupby(<span class="string">'Type 2'</span>).size())</span><br><span class="line">T2_count = pd.concat([T2_Total, T2_NotLeg], axis = <span class="number">1</span>)</span><br><span class="line">T2_count.columns = [<span class="string">'Total'</span>, <span class="string">'Not Legend'</span>]</span><br><span class="line">T2_count[<span class="string">'Legend'</span>] = T2_count[<span class="string">'Total'</span>] - T2_count[<span class="string">'Not Legend'</span>]</span><br><span class="line">T2_count</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>Not Legend</th>
      <th>Legend</th>
    </tr>
    <tr>
      <th>Type 2</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bug</th>
      <td>3</td>
      <td>3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Dark</th>
      <td>20</td>
      <td>19</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Dragon</th>
      <td>18</td>
      <td>14</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Electric</th>
      <td>6</td>
      <td>5</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Fairy</th>
      <td>23</td>
      <td>21</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Fighting</th>
      <td>26</td>
      <td>22</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Fire</th>
      <td>12</td>
      <td>9</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Flying</th>
      <td>97</td>
      <td>84</td>
      <td>13</td>
    </tr>
    <tr>
      <th>Ghost</th>
      <td>14</td>
      <td>13</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Grass</th>
      <td>25</td>
      <td>25</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Ground</th>
      <td>35</td>
      <td>34</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Ice</th>
      <td>14</td>
      <td>11</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Normal</th>
      <td>4</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Poison</th>
      <td>34</td>
      <td>34</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Psychic</th>
      <td>33</td>
      <td>28</td>
      <td>5</td>
    </tr>
    <tr>
      <th>Rock</th>
      <td>14</td>
      <td>14</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Steel</th>
      <td>22</td>
      <td>21</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Water</th>
      <td>14</td>
      <td>13</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">T2_count[[<span class="string">'Not Legend'</span>, <span class="string">'Legend'</span>]].plot.barh(width=<span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'"전설의 포켓몬" 여부에 따른 Type 2 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_70_0.png" alt="output_70_0"></p>
<br>
<h4 id="4-포켓몬-세대generation-분포"><a class="markdownIt-Anchor" href="#4-포켓몬-세대generation-분포"></a> (4) 포켓몬 세대(Generation) 분포</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 포켓몬 -- 세대 분포</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Generation'</span>].value_counts().sort_index().plot.bar()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2e930887d08&gt;
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_73_1.png" alt="output_73_1"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "전설의 포켓몬" 여부에 따른 세대 분포</span></span><br><span class="line"></span><br><span class="line">gene_Leg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">1</span>].groupby(<span class="string">'Generation'</span>).size())</span><br><span class="line">gene_NotLeg = pd.DataFrame(df[df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].groupby(<span class="string">'Generation'</span>).size())</span><br><span class="line">gene_count = pd.concat([gene_Leg, gene_NotLeg], axis=<span class="number">1</span>)</span><br><span class="line">gene_count.columns = [<span class="string">'Legend'</span>, <span class="string">'Not Legend'</span>]</span><br><span class="line">gene_count</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Legend</th>
      <th>Not Legend</th>
    </tr>
    <tr>
      <th>Generation</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>6</td>
      <td>160</td>
    </tr>
    <tr>
      <th>2</th>
      <td>5</td>
      <td>101</td>
    </tr>
    <tr>
      <th>3</th>
      <td>18</td>
      <td>142</td>
    </tr>
    <tr>
      <th>4</th>
      <td>13</td>
      <td>108</td>
    </tr>
    <tr>
      <th>5</th>
      <td>15</td>
      <td>150</td>
    </tr>
    <tr>
      <th>6</th>
      <td>8</td>
      <td>74</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">gene_count.plot.bar()</span><br><span class="line">plt.title(<span class="string">'"전설의 포켓몬" 여부에 따른 세대 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_76_0.png" alt="output_76_0"></p>
<br>
<br>
<h2 id="3-지도-학습-기반-분류-분석-logistic-regression"><a class="markdownIt-Anchor" href="#3-지도-학습-기반-분류-분석-logistic-regression"></a> <strong>3. 지도 학습 기반 분류 분석 – Logistic Regression</strong></h2>
<h3 id="3-1-데이터-전처리"><a class="markdownIt-Anchor" href="#3-1-데이터-전처리"></a> 3-1. 데이터 전처리</h3>
<h4 id="1-데이터-타입-변경"><a class="markdownIt-Anchor" href="#1-데이터-타입-변경"></a> (1) 데이터 타입 변경</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>#</th>
      <th>Name</th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Bulbasaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>Ivysaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>VenusaurMega Venusaur</td>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>Charmander</td>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 800 entries, 0 to 799
Data columns (total 13 columns):
 #   Column      Non-Null Count  Dtype 
---  ------      --------------  ----- 
 0   #           800 non-null    int64 
 1   Name        800 non-null    object
 2   Type 1      800 non-null    object
 3   Type 2      414 non-null    object
 4   Total       800 non-null    int64 
 5   HP          800 non-null    int64 
 6   Attack      800 non-null    int64 
 7   Defense     800 non-null    int64 
 8   Sp. Atk     800 non-null    int64 
 9   Sp. Def     800 non-null    int64 
 10  Speed       800 non-null    int64 
 11  Generation  800 non-null    int64 
 12  Legendary   800 non-null    bool  
dtypes: bool(1), int64(9), object(3)
memory usage: 75.9+ KB
</code></pre>
<br>
<ul>
<li>
<p>분류예측 목표 Feature인 "Lengendary"의 값은 현재 “True”/"False"로 구성되어있습니다. 예측 모델에 적용하기 위해 “1”/"0"으로 바꾸겠습니다.</p>
</li>
<li>
<p>포켓몬의 세대를 나타나는 Feature인 "Generation"의 타입은 지금 "int"로 되어있지만, Feature의 의미상 해당 숫자는 분류 역할을 하고 있으므로 "str"타입으로 변환시키겠습니다.</p>
</li>
<li>
<p>분류 예측 시 이름 데이터가 예측에 도움이 없으므로 "Name"을 빼고 데이터셋을 제구성하겠습니다.</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'Legendary'</span>] = df[<span class="string">'Legendary'</span>].astype(int)</span><br><span class="line">df[<span class="string">'Generation'</span>] = df[<span class="string">'Generation'</span>].astype(str)</span><br><span class="line">preprocessed_df = df[[<span class="string">'Type 1'</span>, <span class="string">'Type 2'</span>, <span class="string">'Total'</span>, <span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, </span><br><span class="line">                      <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>, <span class="string">'Generation'</span>, <span class="string">'Legendary'</span>]]</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<br>  
<h4 id="2-one-hot-encoding"><a class="markdownIt-Anchor" href="#2-one-hot-encoding"></a> (2) One-Hot Encoding</h4>
<p>Categorical Variable에 대해서 dummy화 작업을 진행하겠습니다.</p>
<ul>
<li>
<p>1 data one-label: One-hot Encoding</p>
</li>
<li>
<p>1 data multi-label: Multi-label Encoding</p>
<br>
</li>
</ul>
<p><strong>&gt;&gt; 타입 (Type) – Multi-label Encoding</strong></p>
<ul>
<li>먼저 Type 1과 Type 2를 하나의 변수(Type)로 묶는다.</li>
<li>그 다음 1~2개의 label를 가진 Type변수에 대해서 Multi-label Encoding을 진행한다.</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># pokemon type list 생성</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_list</span><span class="params">(x1, x2)</span>:</span></span><br><span class="line">    type_list = []</span><br><span class="line">    type_list.append(x1)</span><br><span class="line">    <span class="keyword">if</span> x2 <span class="keyword">is</span> <span class="keyword">not</span> np.nan:</span><br><span class="line">        type_list.append(x2)</span><br><span class="line">    <span class="keyword">return</span> type_list</span><br><span class="line"></span><br><span class="line">preprocessed_df[<span class="string">'Type'</span>] = preprocessed_df.apply(<span class="keyword">lambda</span> x: make_list(x[<span class="string">'Type 1'</span>], x[<span class="string">'Type 2'</span>]), axis=<span class="number">1</span>)</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Type 1</th>
      <th>Type 2</th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Grass</td>
      <td>Poison</td>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Fire</td>
      <td>NaN</td>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
      <td>[Fire]</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> preprocessed_df[<span class="string">'Type 1'</span>]</span><br><span class="line"><span class="keyword">del</span> preprocessed_df[<span class="string">'Type 2'</span>]</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>[Grass, Poison]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
      <td>[Fire]</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># multi-lacel encoding</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MultiLabelBinarizer</span><br><span class="line"></span><br><span class="line">ml = MultiLabelBinarizer()</span><br><span class="line">preprocessed_df = preprocessed_df.join(pd.DataFrame(ml.fit_transform(preprocessed_df.pop(<span class="string">'Type'</span>)),</span><br><span class="line">                                                    columns = ml.classes_))</span><br></pre></td></tr></tbody></table></figure>
<blockquote>
<ul>
<li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.join.html" target="_blank" rel="noopener">[pandas.DataFrame.join]</a>: Join columns of another DataFrame</li>
<li><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pop.html" target="_blank" rel="noopener">[pandas.DataFrame.pop (<em>item</em>) ]</a>: Return item and drop from frame</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Generation</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>...</th>
      <th>Ghost</th>
      <th>Grass</th>
      <th>Ground</th>
      <th>Ice</th>
      <th>Normal</th>
      <th>Poison</th>
      <th>Psychic</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 27 columns</p>
</div>
</div>
 <br> 
<p><strong>&gt;&gt; 세대 (Generation) – One-hot Encoding</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># apply one-hot encoding to 'Generation'</span></span><br><span class="line">preprocessed_df = pd.get_dummies(preprocessed_df)  <span class="comment"># df name입력하면 str var를 자동 식별하여 encoding 진행함</span></span><br><span class="line"><span class="comment"># preprocessed_ddf = pd.get_dummies(preprocessed_df['Generation'])  # 작업할 var 지정</span></span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Psychic</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>318</td>
      <td>45</td>
      <td>49</td>
      <td>49</td>
      <td>65</td>
      <td>65</td>
      <td>45</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>405</td>
      <td>60</td>
      <td>62</td>
      <td>63</td>
      <td>80</td>
      <td>80</td>
      <td>60</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>525</td>
      <td>80</td>
      <td>82</td>
      <td>83</td>
      <td>100</td>
      <td>100</td>
      <td>80</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>625</td>
      <td>80</td>
      <td>100</td>
      <td>123</td>
      <td>122</td>
      <td>120</td>
      <td>80</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>309</td>
      <td>39</td>
      <td>52</td>
      <td>43</td>
      <td>60</td>
      <td>50</td>
      <td>65</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 32 columns</p>
</div>
</div>
<br>  
<h4 id="3-feature-포준화"><a class="markdownIt-Anchor" href="#3-feature-포준화"></a> (3) Feature 포준화</h4>
<p>Numerical Feature간의 Scale차이를 없애기 위해 feature 표준화를 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">preprocessed_df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 800 entries, 0 to 799
Data columns (total 32 columns):
 #   Column        Non-Null Count  Dtype
---  ------        --------------  -----
 0   Total         800 non-null    int64
 1   HP            800 non-null    int64
 2   Attack        800 non-null    int64
 3   Defense       800 non-null    int64
 4   Sp. Atk       800 non-null    int64
 5   Sp. Def       800 non-null    int64
 6   Speed         800 non-null    int64
 7   Legendary     800 non-null    int32
 8   Bug           800 non-null    int32
 9   Dark          800 non-null    int32
 10  Dragon        800 non-null    int32
 11  Electric      800 non-null    int32
 12  Fairy         800 non-null    int32
 13  Fighting      800 non-null    int32
 14  Fire          800 non-null    int32
 15  Flying        800 non-null    int32
 16  Ghost         800 non-null    int32
 17  Grass         800 non-null    int32
 18  Ground        800 non-null    int32
 19  Ice           800 non-null    int32
 20  Normal        800 non-null    int32
 21  Poison        800 non-null    int32
 22  Psychic       800 non-null    int32
 23  Rock          800 non-null    int32
 24  Steel         800 non-null    int32
 25  Water         800 non-null    int32
 26  Generation_1  800 non-null    uint8
 27  Generation_2  800 non-null    uint8
 28  Generation_3  800 non-null    uint8
 29  Generation_4  800 non-null    uint8
 30  Generation_5  800 non-null    uint8
 31  Generation_6  800 non-null    uint8
dtypes: int32(19), int64(7), uint8(6)
memory usage: 107.9 KB
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="comment"># feature standardization</span></span><br><span class="line">scaler = StandardScaler()</span><br><span class="line">scale_columns = [<span class="string">'Total'</span>, <span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>]</span><br><span class="line">preprocessed_df[scale_columns] = scaler.fit_transform(preprocessed_df[scale_columns])</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Psychic</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.976765</td>
      <td>-0.950626</td>
      <td>-0.924906</td>
      <td>-0.797154</td>
      <td>-0.239130</td>
      <td>-0.248189</td>
      <td>-0.801503</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.251088</td>
      <td>-0.362822</td>
      <td>-0.524130</td>
      <td>-0.347917</td>
      <td>0.219560</td>
      <td>0.291156</td>
      <td>-0.285015</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.749845</td>
      <td>0.420917</td>
      <td>0.092448</td>
      <td>0.293849</td>
      <td>0.831146</td>
      <td>1.010283</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.583957</td>
      <td>0.420917</td>
      <td>0.647369</td>
      <td>1.577381</td>
      <td>1.503891</td>
      <td>1.729409</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.051836</td>
      <td>-1.185748</td>
      <td>-0.832419</td>
      <td>-0.989683</td>
      <td>-0.392027</td>
      <td>-0.787533</td>
      <td>-0.112853</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 32 columns</p>
</div>
</div>
 <br> 
<h4 id="4-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#4-training-set-test-set-나누기"></a> (4) Training set / Test set 나누기</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">X = preprocessed_df.loc[:, preprocessed_df.columns != <span class="string">'Legendary'</span>]</span><br><span class="line">y = preprocessed_df[<span class="string">'Legendary'</span>]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((600, 31), (600,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((200, 31), (200,))
</code></pre>
 <br> 
<h3 id="3-2-logistic-regression-모델-학습"><a class="markdownIt-Anchor" href="#3-2-logistic-regression-모델-학습"></a> 3-2. Logistic Regression 모델 학습</h3>
<h4 id="1-모델-학습"><a class="markdownIt-Anchor" href="#1-모델-학습"></a> (1) 모델 학습</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score, precision_score, recall_score, f1_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fit in Training set</span></span><br><span class="line">logit = LogisticRegression(random_state=<span class="number">0</span>)</span><br><span class="line">logit.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict in Test set</span></span><br><span class="line">y_pred = logit.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<h4 id="2-모델-평가"><a class="markdownIt-Anchor" href="#2-모델-평가"></a> (2) 모델 평가</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># classification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"accuracy: %.2f"</span> % accuracy_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">"Precision: %.3f"</span> % precision_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">"Recall: %.3f"</span> % recall_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">"F1: %.3f"</span> % f1_score(y_test, y_pred))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 0.93
Precision: 0.615
Recall: 0.471
F1: 0.533
</code></pre>
<br>
<p>위 모델 평가 결과를 확인해보면, 해당 모델은 <strong>정확도(accuracy) 만</strong> 높고, 정밀도(Precision), 재현율(Recall), F1 score 등 모두 낮습니다. 이는 학습 데이터의 <strong>클래스 불균형으로 인한 정확도 함정</strong> 문제일 가능성이 높습니다. (참고: <a href="https://hyemin-kim.github.io/2020/07/26/S-Python-sklearn2/#4-2-%EC%A0%95%ED%99%95%EB%8F%84-accuracy">[Python &gt;&gt; sklearn - (2) 분류] 4-2. !!정확도 함정!!</a>)</p>
<p>추가 확인을 위해 Confusion Matrix를 출력해 봅니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"></span><br><span class="line"><span class="comment"># print confusion matrix</span></span><br><span class="line">confu = confusion_matrix(y_true = y_test, y_pred = y_pred)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_122_0.png" alt="output_122_0"></p>
<p>Positive Condition ( <em>“Legendary” = True/1</em> ) &lt;17&gt; 대비 Negative Condition ( <em>“Legendary” = False/0</em> ) &lt;183&gt;인 케이스가 훨씬 많다는 것을 볼 수 있습니다. 따라서, 클래스 불균형으로 인한 정확도 함정 문제가 맞으며, <strong>클래스 불균형을 조정</strong>한 후 다시 학습 시키도록 하겠습니다.</p>
<br>  
<h3 id="3-3-클래스-불균형-조정"><a class="markdownIt-Anchor" href="#3-3-클래스-불균형-조정"></a> 3-3. 클래스 불균형 조정</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">preprocessed_df[<span class="string">'Legendary'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>0    735
1     65
Name: Legendary, dtype: int64
</code></pre>
<br>  
<p><strong>&gt;&gt; 1:1 샘플링</strong></p>
<p>Positive Condition 케이스와 Negative Condition 케이스를 1:1비율로 샘플링 합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">positive_random_idx = preprocessed_df[preprocessed_df[<span class="string">'Legendary'</span>]==<span class="number">1</span>].sample(<span class="number">65</span>, random_state=<span class="number">12</span>).index.tolist()</span><br><span class="line">negative_random_idx = preprocessed_df[preprocessed_df[<span class="string">'Legendary'</span>]==<span class="number">0</span>].sample(<span class="number">65</span>, random_state=<span class="number">12</span>).index.tolist()</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; Training set / Test set 나누기</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">random_idx = positive_random_idx + negative_random_idx</span><br><span class="line">X = preprocessed_df.loc[random_idx, preprocessed_df.columns != <span class="string">'Legendary'</span>]</span><br><span class="line">y = preprocessed_df[<span class="string">'Legendary'</span>][random_idx]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((97, 31), (97,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((33, 31), (33,))
</code></pre>
<br>  
<p><strong>&gt;&gt; 모델 재학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Fit in Training set</span></span><br><span class="line">logit2 = LogisticRegression(random_state=<span class="number">0</span>)</span><br><span class="line">logit2.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict in Test set</span></span><br><span class="line">y_pred2 = logit2.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 모델 재평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># clssification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"accuracy: %.2f"</span> % accuracy_score(y_test, y_pred2))</span><br><span class="line">print(<span class="string">"Precision: %.3f"</span> % precision_score(y_test, y_pred2))</span><br><span class="line">print(<span class="string">"Recall: %.3f"</span> % recall_score(y_test, y_pred2))</span><br><span class="line">print(<span class="string">"F1: %.3f"</span> % f1_score(y_test, y_pred2))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 1.00
Precision: 1.000
Recall: 1.000
F1: 1.000
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line"></span><br><span class="line">confu2 = confusion_matrix(y_true=y_test, y_pred = y_pred2)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu2, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_143_0.png" alt="output_143_0"></p>
<p>클래스 불균형을 조정한 후, 새롭게 학습된 모델의 performance가 많이 좋아졌습니다.</p>
<p><br>  <br></p>
<h2 id="4-비지도-학습-기반-군집-분류-분석-k-means-clustering"><a class="markdownIt-Anchor" href="#4-비지도-학습-기반-군집-분류-분석-k-means-clustering"></a> <strong>4. 비지도 학습 기반 군집 분류 분석 – K-Means Clustering</strong></h2>
<h3 id="4-1-k-means-군집-분류"><a class="markdownIt-Anchor" href="#4-1-k-means-군집-분류"></a> 4-1. K-Means 군집 분류</h3>
<h4 id="1-2차원-군집-분석"><a class="markdownIt-Anchor" href="#1-2차원-군집-분석"></a> (1) 2차원 군집 분석</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"></span><br><span class="line"><span class="comment"># K-means train &amp; Elbow method</span></span><br><span class="line">X = preprocessed_df[[<span class="string">'Attack'</span>, <span class="string">'Defense'</span>]]</span><br><span class="line"></span><br><span class="line">k_list = []</span><br><span class="line">cost_list = []</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range (<span class="number">1</span>, <span class="number">8</span>):</span><br><span class="line">    kmeans = KMeans(n_clusters=k).fit(X)</span><br><span class="line">    interia = kmeans.inertia_  <span class="comment"># inertia: Sum of squared distances of samples to their closest cluster center.</span></span><br><span class="line">    print(<span class="string">"k:"</span>, k, <span class="string">"| cost:"</span>, interia)</span><br><span class="line">    k_list.append(k)</span><br><span class="line">    cost_list.append(interia)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">plt.plot(k_list, cost_list)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>k: 1 | cost: 1600.0
k: 2 | cost: 853.3477298974242
k: 3 | cost: 642.3911470107209
k: 4 | cost: 480.49450250321513
k: 5 | cost: 403.97191765107124
k: 6 | cost: 343.98696660525184
k: 7 | cost: 295.56093457429847



[&lt;matplotlib.lines.Line2D at 0x2e930467c48&gt;]
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_151_2.png" alt="output_151_2"></p>
<br>
<p>추세를 봤을 때, 4 clusters가 제일 적당한 것으로 보입니다.</p>
<p>따라서, cluster를 4로 지정한 후 다시 학습시킨 뒤, 각 데이터가 분류된 cluster 결과를 원 데이터셋에 추가합니다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># k-means fitting and predict</span></span><br><span class="line">kmeans = KMeans(n_clusters=<span class="number">4</span>).fit(X)</span><br><span class="line">cluster_num = pd.Series(kmeans.predict(X))</span><br><span class="line">preprocessed_df[<span class="string">'cluster_num'</span>] = cluster_num.values</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
      <th>cluster_num</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.976765</td>
      <td>-0.950626</td>
      <td>-0.924906</td>
      <td>-0.797154</td>
      <td>-0.239130</td>
      <td>-0.248189</td>
      <td>-0.801503</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.251088</td>
      <td>-0.362822</td>
      <td>-0.524130</td>
      <td>-0.347917</td>
      <td>0.219560</td>
      <td>0.291156</td>
      <td>-0.285015</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.749845</td>
      <td>0.420917</td>
      <td>0.092448</td>
      <td>0.293849</td>
      <td>0.831146</td>
      <td>1.010283</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.583957</td>
      <td>0.420917</td>
      <td>0.647369</td>
      <td>1.577381</td>
      <td>1.503891</td>
      <td>1.729409</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.051836</td>
      <td>-1.185748</td>
      <td>-0.832419</td>
      <td>-0.989683</td>
      <td>-0.392027</td>
      <td>-0.787533</td>
      <td>-0.112853</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 33 columns</p>
</div>
</div>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(preprocessed_df[<span class="string">'cluster_num'</span>].value_counts())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>2    309
0    253
3    128
1    110
Name: cluster_num, dtype: int64
</code></pre>
<br>
<p><strong>&gt;&gt; 군집 시각화</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Visualization</span></span><br><span class="line"></span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">0</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">0</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'red'</span>, alpha = <span class="number">0.5</span>, label = <span class="string">'Pokemon Group 1'</span>)</span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">1</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">1</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'green'</span>, alpha = <span class="number">0.7</span>, label = <span class="string">'Pokemon Group 2'</span>)</span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">2</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">2</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'blue'</span>, alpha = <span class="number">0.5</span>, label = <span class="string">'Pokemon Group 3'</span>)</span><br><span class="line">plt.scatter(preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">3</span>][<span class="string">'Attack'</span>],</span><br><span class="line">            preprocessed_df[preprocessed_df[<span class="string">'cluster_num'</span>] == <span class="number">3</span>][<span class="string">'Defense'</span>],</span><br><span class="line">            s = <span class="number">50</span>, c = <span class="string">'yellow'</span>, alpha = <span class="number">0.8</span>, label = <span class="string">'Pokemon Group 4'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Pokemon Cluster by "Attack" &amp; "Defense"'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Attack'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Defense'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_157_0.png" alt="output_157_0"></p>
<br>
<h4 id="2-다차원-군집-분석"><a class="markdownIt-Anchor" href="#2-다차원-군집-분석"></a> (2) 다차원 군집 분석</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"></span><br><span class="line"><span class="comment"># K-Means train &amp; Elbow method</span></span><br><span class="line">X = preprocessed_df[[<span class="string">'HP'</span>, <span class="string">'Attack'</span>, <span class="string">'Defense'</span>, <span class="string">'Sp. Atk'</span>, <span class="string">'Sp. Def'</span>, <span class="string">'Speed'</span>]]</span><br><span class="line"></span><br><span class="line">k_list = []</span><br><span class="line">cost_list = []</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range (<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">    kmeans = KMeans(n_clusters=k).fit(X)</span><br><span class="line">    interia = kmeans.inertia_  <span class="comment"># inertia: Sum of squared distances of samples to their closest cluster center.</span></span><br><span class="line">    print(<span class="string">"k:"</span>, k, <span class="string">"| cost:"</span>, interia)</span><br><span class="line">    k_list.append(k)</span><br><span class="line">    cost_list.append(interia)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">plt.plot(k_list, cost_list)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>k: 1 | cost: 4800.0
k: 2 | cost: 3275.3812330305977
k: 3 | cost: 2862.057922495397
k: 4 | cost: 2566.5807792995274
k: 5 | cost: 2328.0706840275643
k: 6 | cost: 2182.759972635841
k: 7 | cost: 2070.734327066247
k: 8 | cost: 1957.5240844927844
k: 9 | cost: 1854.3770148227836
k: 10 | cost: 1778.3178764912984
k: 11 | cost: 1721.845255688537
k: 12 | cost: 1644.3967658442484
k: 13 | cost: 1579.4938049394318
k: 14 | cost: 1536.785887021493



[&lt;matplotlib.lines.Line2D at 0x2e930efbb88&gt;]
</code></pre>
<p><img src="/images/E-Python-Classification-1/output_160_2.png" alt="output_160_2"></p>
<br>
<p>이 경우에는 cluster가 5일 때가 제일 적당해 보입니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># k-means fitting and predict</span></span><br><span class="line">kmeans = KMeans(n_clusters=<span class="number">5</span>).fit(X)</span><br><span class="line">cluster_num = pd.Series(kmeans.predict(X))</span><br><span class="line">preprocessed_df[<span class="string">'cluster_num'</span>] = cluster_num.values</span><br><span class="line">preprocessed_df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<div style="overflow:auto">
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total</th>
      <th>HP</th>
      <th>Attack</th>
      <th>Defense</th>
      <th>Sp. Atk</th>
      <th>Sp. Def</th>
      <th>Speed</th>
      <th>Legendary</th>
      <th>Bug</th>
      <th>Dark</th>
      <th>...</th>
      <th>Rock</th>
      <th>Steel</th>
      <th>Water</th>
      <th>Generation_1</th>
      <th>Generation_2</th>
      <th>Generation_3</th>
      <th>Generation_4</th>
      <th>Generation_5</th>
      <th>Generation_6</th>
      <th>cluster_num</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-0.976765</td>
      <td>-0.950626</td>
      <td>-0.924906</td>
      <td>-0.797154</td>
      <td>-0.239130</td>
      <td>-0.248189</td>
      <td>-0.801503</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.251088</td>
      <td>-0.362822</td>
      <td>-0.524130</td>
      <td>-0.347917</td>
      <td>0.219560</td>
      <td>0.291156</td>
      <td>-0.285015</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.749845</td>
      <td>0.420917</td>
      <td>0.092448</td>
      <td>0.293849</td>
      <td>0.831146</td>
      <td>1.010283</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.583957</td>
      <td>0.420917</td>
      <td>0.647369</td>
      <td>1.577381</td>
      <td>1.503891</td>
      <td>1.729409</td>
      <td>0.403635</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.051836</td>
      <td>-1.185748</td>
      <td>-0.832419</td>
      <td>-0.989683</td>
      <td>-0.392027</td>
      <td>-0.787533</td>
      <td>-0.112853</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>...</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
<p>5 rows × 33 columns</p>
</div>
</div>
<br>  
<p><strong>&gt;&gt; 군집별 특성 시각화</strong></p>
<p>2차원이 아니기 때문에 위와 같이 군집 결과를 시각화하기 어렵습니다.</p>
<p>군집화 결과를 확인하기 위해 <strong>각 Feature의 군집별 특성</strong>을 시각화하도록 하겠습니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># HP</span></span><br><span class="line">sns.boxplot(x = <span class="string">"cluster_num"</span>, y = <span class="string">"HP"</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "HP" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_167_0.png" alt="output_167_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Attack</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Attack'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Attack" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_169_0.png" alt="output_169_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Defense</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Defense'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Defense" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_171_0.png" alt="output_171_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Sp. Atk</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Sp. Atk'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Sp. Atk" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_173_0.png" alt="output_173_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Sp. Def</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Sp. Def'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Sp. Def" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_175_0.png" alt="output_175_0"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Speed</span></span><br><span class="line">sns.boxplot(x = <span class="string">'cluster_num'</span>, y = <span class="string">'Speed'</span>, data = preprocessed_df)</span><br><span class="line">plt.title(<span class="string">'군집별 "Speed" 분포'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-Classification-1/output_177_0.png" alt="output_177_0"></p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Exercise】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>sklearn</tag>
        <tag>Machine Learning</tag>
        <tag>분류</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Text Mining -- 영화 시나리오</title>
    <url>/2020/08/20/E-Python-TextMining-1/</url>
    <content><![CDATA[<h1 id="text-mining-실습-영화-시나리오-word-cloud-단어-중요도tf-idf-분석"><a class="markdownIt-Anchor" href="#text-mining-실습-영화-시나리오-word-cloud-단어-중요도tf-idf-분석"></a> 【Text Mining 실습】-- 영화 시나리오: Word Cloud &amp; 단어 중요도(TF-IDF) 분석</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0"><strong>2. 데이터셋 살펴보기</strong></a>
<ul>
<li><a href="#2-1-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4-%ED%83%90%EC%83%89">2-1. 기본 정보 탐색</a></li>
</ul>
</li>
<li><a href="#3-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC"><strong>3. 텍스트 데이터 전처리</strong></a>
<ul>
<li><a href="#3-1-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%A0%81%EC%9A%A9">3-1. 정규 표현식 적용</a></li>
<li><a href="#3-2-word-count">3-2. Word Count</a>
<ul>
<li><a href="#1-%EB%A7%90%EB%AD%89%EC%B9%98%EC%BD%94%ED%8D%BC%EC%8A%A4-%EC%83%9D%EC%84%B1">(1) 말뭉치(코퍼스) 생성</a></li>
<li><a href="#2-bow-bag-of-words-%EB%B2%A1%ED%84%B0-%EC%83%9D%EC%84%B1">(2) BoW (Bag of Words) 벡터 생성</a></li>
<li><a href="#3-%EB%8B%A8%EC%96%B4-%EB%B6%84%ED%8F%AC-%ED%83%90%EC%83%89">(3) 단어 분포 탐색</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#4-%ED%83%9D%EC%8A%A4%ED%8A%B8-%EB%A7%88%EC%9D%B4%EB%8B%9D"><strong>4. 택스트 마이닝</strong></a>
<ul>
<li><a href="#4-1-%EB%8B%A8%EC%96%B4%EB%B3%84-%EB%B9%88%EB%8F%84-%EB%B6%84%EC%84%9D-word-cloud">4-1. 단어별 빈도 분석 (+ Word Cloud)</a>
<ul>
<li><a href="#1-%EC%83%81%EC%9C%84-%EB%B9%88%EB%8F%84%EC%88%98-%EB%8B%A8%EC%96%B4-%EC%B6%9C%EB%A0%A5">(1) 상위 빈도수 단어 출력</a></li>
<li><a href="#2-word-cloud-%EC%8B%9C%EA%B0%81%ED%99%94">(2) Word Cloud 시각화</a></li>
</ul>
</li>
<li><a href="#4-2-%EC%9E%A5%EB%A9%B4%EB%B3%84-%EC%A4%91%EC%9A%94-%EB%8B%A8%EC%96%B4-%EC%8B%9C%EA%B0%81%ED%99%94-tf-idf">4-2. 장면별 중요 단어 시각화 (TF-IDF)</a>
<ul>
<li><a href="#1-tf-idf-%EB%B3%80%ED%99%98">(1) TF-IDF 변환</a></li>
<li><a href="#2-%EB%B2%A1%ED%84%B0-%EB%8B%A8%EC%96%B4-mapping">(2) “벡터” - “단어” mapping</a></li>
<li><a href="#3-%EC%A4%91%EC%9A%94-%EB%8B%A8%EC%96%B4-%EC%B6%94%EC%B6%9C-top-3-tf-idf">(3) 중요 단어 추출 - Top 3 TF-IDF</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>영화 시나리오 데이터를 활용해 2가지의 Text Mining 분석을 진행합니다.</p>
<ol>
<li>
<p>단어별 빈도 분석 (Word Cloud 산출)</p>
</li>
<li>
<p>장면별 중요 단어 시각화 (TF-IDF 분석)</p>
<br>
</li>
</ol>
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">"ignore"</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 사용할 데이터셋</strong></p>
<p>영화 "The Bourne Supermacy"의 시나리오를 활용하겠습니다. <a href="https://www.dailyscript.com/scripts/bournesupremacy.pdf" target="_blank" rel="noopener">Link (pdf파일)</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/bourne_scenario.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>
<p>page_no: 데이터가 위치한 pdf파일의 페이지 수</p>
</li>
<li>
<p>scene_title: 씬 제목</p>
</li>
<li>
<p>text: 씬에 해당하는 지문/대본 텍스트 정보</p>
<br>
<br>
</li>
</ul>
<h2 id="2-데이터셋-살펴보기"><a class="markdownIt-Anchor" href="#2-데이터셋-살펴보기"></a> <strong>2. 데이터셋 살펴보기</strong></h2>
<h3 id="2-1-기본-정보-탐색"><a class="markdownIt-Anchor" href="#2-1-기본-정보-탐색"></a> 2-1. 기본 정보 탐색</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># demension</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 3)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>page_no        0
scene_title    0
text           0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 320 entries, 0 to 319
Data columns (total 3 columns):
 #   Column       Non-Null Count  Dtype 
---  ------       --------------  ----- 
 0   page_no      320 non-null    int64 
 1   scene_title  320 non-null    object
 2   text         320 non-null    object
dtypes: int64(1), object(2)
memory usage: 7.6+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># text 변수 확인</span></span><br><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>" 1                It's raining...                Light strobes across the wet glass at a rhythmic pace...                 Suddenly -- through the window a face -- JASON BOURNE --               riding in the backseat -- his gaze fixed.      "
</code></pre>
  <br>
<p>"text"내용을 확인해보면, 여기에 우리가 필요없는 내용들이 포함되어있습니다: 맨 앞에 있는 씬 번호, 공백, 특수 문자 등. 이들을 제거하는 전처리 과정이 필요해보입니다.<br>
또한, Text mining을 진행할 때, 대소분자의 구분이 의미가 없습니다. 따라서, 대분자를 소문자로 변환하는 작업도 함계 진행하겠습니다.</p>
<p><br> <br></p>
<h2 id="3-텍스트-데이터-전처리"><a class="markdownIt-Anchor" href="#3-텍스트-데이터-전처리"></a> <strong>3. 텍스트 데이터 전처리</strong></h2>
<h3 id="3-1-정규-표현식-적용"><a class="markdownIt-Anchor" href="#3-1-정규-표현식-적용"></a> 3-1. 정규 표현식 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>" 1                It's raining...                Light strobes across the wet glass at a rhythmic pace...                 Suddenly -- through the window a face -- JASON BOURNE --               riding in the backseat -- his gaze fixed.      "
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 함수 정의</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_regular_expression</span><span class="params">(text)</span>:</span></span><br><span class="line">    text = text.lower()  <span class="comment"># 대문자 -&gt; 소문자 변환</span></span><br><span class="line">    english = re.compile(<span class="string">'[^ a-z]'</span>)  <span class="comment"># 영어 추출 규칙: 띄어 쓰기를 포함한 알파벳</span></span><br><span class="line">    result = english.sub(<span class="string">''</span>, text)  <span class="comment"># 위에 설정한 "english"규칙을 "text"에 적용(.sub)시킴</span></span><br><span class="line">    result = re.sub(<span class="string">' +'</span>, <span class="string">' '</span>, result) <span class="comment"># 2개 이상의 공백을(' +') 하나의 공백(' ')으로 바꿈</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>만들어 놓은 정규 표현식을 "text"의 첫번째 데이터에 적용해보면:</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>' its raining light strobes across the wet glass at a rhythmic pace suddenly through the window a face jason bourne riding in the backseat his gaze fixed '
</code></pre>
<br>
<p>우리의 예상대로 소문자만 존재하고, 공백과 특수문자가 모두 제거됐습니다.</p>
<p>그럼 이제 이 규칙을 전체 데이터셋에 적용해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 적용</span></span><br><span class="line">df[<span class="string">'processed_text'</span>] = df[<span class="string">'text'</span>].apply(<span class="keyword">lambda</span> x: apply_regular_expression(x))</span><br><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
      <th>processed_text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
      <td>its raining light strobes across the wet glas...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
      <td>a on his knee a syringe and a gun the eyes of...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
      <td>bournes eyes open panicked gasping trying to ...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
      <td>a bourne moving for the medicine cabinet digs...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
      <td>one minute later bourne moves out onto the ve...</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<h3 id="3-2-word-count"><a class="markdownIt-Anchor" href="#3-2-word-count"></a> 3-2. Word Count</h3>
<h4 id="1-말뭉치코퍼스-생성"><a class="markdownIt-Anchor" href="#1-말뭉치코퍼스-생성"></a> (1) 말뭉치(코퍼스) 생성</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># make corpus</span></span><br><span class="line">corpus = df[<span class="string">'processed_text'</span>].tolist()</span><br><span class="line">corpus</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow-x: scroll; overflow-y: scroll;">
<pre>    [' its raining light strobes across the wet glass at a rhythmic pace suddenly through the window a face jason bourne riding in the backseat his gaze fixed ',
     ' a on his knee a syringe and a gun the eyes of the driver jarda watching bournes pov the passenger back of his head cell phone rings the head turns its conklin bourne returns his stare ',
     ' bournes eyes open panicked gasping trying to stay quiet marie sleeps ',
     ' a bourne moving for the medicine cabinet digs through the medicine cabinet downs something specific ',
     ' one minute later bourne moves out onto the veranda marie pads in watching him for a moment concerned clearly its not the first time this has happened they both look different than last we saw them his hair is longer shes a blonde hippie travelers their cottage is humble but sweet the bedroom opens to a beach and a town just down the hill club music from some all night rave wafting in from the far distance marie where were you jason bourne in the car conklin up front marie ill get the book bourne no theres nothing new marie youre sure he nods we should still we should write it down bourne two years were scribbling in a notebook marie it hasnt been two years bourne its always bad and its never anything but bits and pieces anyway shes gone quiet you ever think that maybe its just making it worse you dont wonder that she lays her hands on his shoulders steadies him marie we write them down because sooner or later youre going to remember something good bourne softens i do remember something good all the time i remember you she smiles kisses him leads him back in ',
     ' marie getting bourne into the bed turning down the light getting him settled waiting for that pill to kick in what would he do without her bourne im trying marie okay marie i worry when you get like this bourne its just a nightmare marie i dont mean that i worry when you try to ignore it he hesitates but that gets him he knows shes right and with that opening hes letting go resistance folding almost childlike shes gathering him in hes letting her do it marie contd sleep sleep now bourne i should be better by now marie you are better and i think its not memories at all its just a dream you keep having over and over bourne but it ends up the same marie one day it will be different it just takes time beat well make new memories you and me silence she strokes his face he gives in to her tenderness hes fading two waifs in the dark ',
     ' bourne running in the sun a punishing pace along the sand moving strong effortless deep into it focused the stunning conjunction of sun and scenery are lost on him ',
     ' a busy market town fishing town hippie town lots of young western faces rundown and happening at the same time marie shopping filling a bag with local produce ',
     ' bourne still running leaving the beach behind ',
     ' marie back from the market putting the groceries away almost done when she stops for a moment a photograph there on the windowsill a snapshot jason and marie on a beach her arms around him as if she were the protector big smiles young alive in love marie smiles ',
     ' funky busy colonial facades in vivid subcontinental technicolor loud morning traffic camera finds bourne coming out of a store with a big bottle of water hes just finished his run standing there chugging away checking the scene when something catches his eye his pov the street a silver car something newish pulling down the block cant quite see whos driving but back to bourne watching this silver car so serious hes casual nobody passing would notice but we do hes on alert moving with him as bourne follows the silver car on foot natural cruising the busy sidewalk blending into the mix chugging on that water bottle and up ahead the silver car making the corner and turning now back to bourne slowing as he reaches the corner his pov the silver car has parked theres a guy welldressed casual physical sunglasses call him kirill hes out of the car and heading across the street toward a building there a telegraph office back to bourne checking his watch the car the guy perimeter ',
     ' mr mohan at his desk hes a crisp proper man of fifty hes just been handed something a photograph of marie an old passport picture mr mohan and your question sir kirill across the desk kirill shes my sister theres been a death in the family this is the last place we know she called from ',
     ' a note on the table im at the beach bourne has just come in just read the note balling it quickly in fact everything is quickly now because bourne is bailing fast calm methodical some exfil procedure that hes honed and choreographed packing like a machine rapid time cuts backpacks thrown open on the bed house cash pulled from a lamp base credit cards taped under the counter ',
     ' kirill coming out of the bank mission accomplished heading back to the silver car getting in and ',
     ' kirill starting it up glancing around nice and easy hes cool putting the car into gear he makes a slow pass through the marketplace eyes everywhere ',
     ' bourne done the place is stripped pulling on the backpacks glancing around one last thing shit he almost missed it the photograph the one of he and marie on the beach the one we saw her looking at earlier there it is on the windowsill jamming it into his pocket and ',
     ' a kirill now parked and out of the car on the move on foot he begins a sweep of the beach ',
     ' bourne out the back jogging keeping low into the neighborhood through the alleys nothing random about it this has all been worked out and ',
     ' crowded with tourists sunbathers marie at her favorite spot talking with two women laughing with them happy ',
     ' a a burly jeep comes roaring up bourne spots the silver car parks at the other end takes off towards the beach ',
     ' kirill methodically making his way up the beach checking every blue tent every towel ',
     ' bourne coming up the beach the opposite way one eye on kirill one eye on marie he arrives just as kirill looks up and sees them a hundred yards away a hard stare between them bourne bends down bourne we gotta go marie we gotta go now from the tone of his voice she knows its serious marie grabs her bag a quick goodbye to the friends they hurry off bourne uses the sunbathers as cover kirill retreats ',
     ' they reach the jeep she knows the drill bag tossed in the back even as the jeep pulls away and ',
     ' bourne driving marie beside him bourne were blown she hesitates one minute ago everything was fine marie no how bourne the telegraph office marie but we were so careful bourne we pushed it we got lazy ',
     ' kirill already back at the silver car following them out onto the main street blocked by the local traffic pulling a huge automatic pistol out from his travel bag ',
     ' the jeep pulling down this narrow little passageway and bournes windshield pov main street packed with traffic and back to bourne not liking this eyes all over trying to decide marie but youre sure bourne he was at the campground yesterday marie so bourne its wrong guy with a rental car and hundred dollar sneakers sleeps in a tent trying to decide whether to pull out or back up marie thats crazy bourne no not this this is real suddenly and hes right there throwing the car into reverse marie where bourne back there at the corner hyundai silver ',
     ' kirill trapped in some main street gridlock glancing back for a way out freezing suddenly because there his pov the jeep the alley right there twenty yards back a good look at bourne and marie as they disappear and ',
     ' the jeep backing up the way it came blowing its horn because an old van pulls in and blocks him from behind ',
     ' bourne leaning on the horn shit now theyve got to wait marie but youre not youre not sure bourne we cant wait to be sure marie i dont want to move againi like it here bourne look we clear out we get to the shack we get safe we hang there awhile ill come back ill check it out but right now we cant marie wheres left to go bourne theres places we cant afford to be wrong ',
     ' kirill calm possessed of a familiar tactical patience he cant get the hyundai to the alley from where he is and it doesnt make sense to go on foot he checks his rearview fuck it theres an opening ahead and hes taking it even though its away from them hell find another way ',
     ' bourne sees the hyundai move forward into traffic the old van is still blocking them from behind bourne you drive marie what bourne already squeezing over switch you drive marie where bourne make the left toward the bridge marie scrambling over the seat bourne eyes everywhere checks his watch the jeep squirts back on the main street and ',
     ' marie at the wheel adrenaline pumping clear running for thirty yards ahead and marie skidding them into the right turn clipping another vehicle mirror shattering speeding up bourne scanning behind them marie moving out to pass veering back an oncoming bus just in time and marie jesus glancing over is he back there bourne not yet marie its just him bourne yeah one guy i dont think he was ready marie hang on marie bearing down pulling out gives him a quick smile bourne knowing hes got a good one here ',
     ' kirill stopping short on a rise bit of a view from here gets half out the car to look below the jeep headed for a bridge hes gonna lose them kirills mind racing grabs duffle from the back abandons car ',
     ' marie driving bourne preps his pistol eye out for kirill bourne you keep going to the shack ill meet you there in an hour marie concerned where are you going bourne im going to bail on the other side and wait this bridge is the only way he can follow marie what if its not who you think it is bourne if he crosses the bridge it is marie there must be another way bourne i warned them marie i told them to leave us alone marie jason please dont do thisit wont ever be over like this bourne theres no choice her pov the old concrete bridge ahead almost there ',
     ' kirill slams into it quick precise grabs into the bag only a moment and hes got a sniper rifle ',
     ' a bourne pistol in hand spare clip in the other checks his watch bourne at the end make the left when i roll out do not slow down marie nods got it after a beat marie i love you too bourne tell me later marie looks ahead ',
     ' b kirill eye to the scope sniper scope pov there the jeep rumbling across the bridge no clear target just the back of the full drivers side headrest kirills finger squeezing firing ',
     ' the jeep jerking front fender tearing into and along the guard rail cement shards fill the air bourne reaching for the wheel too late as the jeep finally crashes through the flimsy guardrail plummets splashes hard begins to sink out of sight ',
     ' kirill lowers the scope takes a quick look around hes basically gone unnoticed in this little nook with his silenced rifle but people are already rushing toward the bridge then there an old woman looking directly at kirill from a doorway not quite sure what but an old indian woman in goa so what kirill drills her with a look as she sinks back inside ',
     ' swallowed up bourne and marie gone ',
     ' kirill scans the surface of the river under the bridge waiting ',
     ' mud plumes as the jeep settles bourne reaches over to marie tries to urge her out ',
     ' kirill with a killers patience waiting almost done scope pov the surface of the water unbroken kirill scans his perimeter theres the old woman again but more people with her people coming out of the woodwork kirill checks the surface one last time nothing he breaks down the rifle in moments goes ',
     ' bourne up into an air pocket held by the jeeps canvas top a big gulp of air and hes back to marie frantic trying to unclip her seatbelt pull her out but its all jammed up ',
     ' bag chucked in the back all he has left is the scope one last look to the unbroken surface then its time to go kirill drifting away disappears ',
     ' the red halo growing bigger blood bourne pauses maries face is blank shes dead bourne finally pulling back realizing this is goodbye ',
     ' we pick up a man with a briefcase on a telephoto lens teddyradio vo the seller has arrived berlin as the man comes to a chinese restaurant he stops squarely so he can be seen clearly then he enters a stark glass office building teddyradio vo contd contd hes inside ',
     ' two men cross the square to the chinese restaurant vic is forty steelass intel operator he carries a large samples case beside him mike younger exnavyseal ',
     ' the hub secure anonymous office space somewhere in the city shades drawn lots of gear cabled around the stale improvised feel of a temporary outpost four serious people alone in this room pamela landy is a senior cia counterintelligence officer hovering over the communications console cronin pamelas early forties stonecold facade quarterbacking the operation over the radio kurt and kim are the techs here his and her headphones ruggedized laptops and comm gear spread around them cronin what have you got survey one ',
     ' dark teddy at the window another military face radio rig night scope watching vic and mike pass below him teddyradio over hub this is survey one mobile one is in motion seller is inside and waiting ',
     ' vic and mike slow as they come to the same stark glass office building teddyradio over we are ready to go ',
     ' mike and vic shake hands two tired coworkers parting ways mike will keep walking vic entering the building through the big glass doors smiling as hes approached by a night shift security guard and we hear mike still walking alone now heading away from the glass office building toward a van parked up the block mikeradio sleeve mike earpiece this is escort one im clear ',
     ' the command post cronin works the communications board cronin all teams listen up we are standing by for final green turning now to pamela who has been listening just as shes about to give the final word kim raises a finger kim langley she hands pamela a phone thats patched into her board pamela a bit surprised martin ',
     ' three men cia mandarins sit around a round table martin marshall deputy vicedirector hes in charge all is tense marshall im here so is donnie and jack weller we understand youre using the full allocation for this buy pamela thats where we came out marshall its a lot of money pam pamela were talking raw unprocessed kgb files its not something we can go out and comparison shop marshall still pamela for a thief a mole i vetted the source marty hes real if it does nothing more than narrow the list of suspects its a bargain at ten times the price mandarin pamela jack weller here its the quality thats at issue pamela yes sir im in total agreement if theyre fakes theyre expensive furious impatient gentlemen ive got the seller on site and in play quite honestly theres not much more to talk about marshall looks to his mandarians not convinced but doesnt want to lose the opportunity time to wash his hands marshall all right pam your game your call ',
     ' all eyes on pamela as she puts down the phone to langley nodding to cronin yes croninradio final green you are go repeat you are go for final green ',
     ' vic has just passed muster with the security guard hes standing alone at an elevator bank vicradio sleeve mike earpiece on my way up vic pulling his earpiece going dark waits for an elevator ',
     ' a dark a small room full of wiring and infrastructure lit by the glare of someones maglight gloved hands quickly pass over racks of gear and wiring and then stopping at the main electrical risers they carefully place an explosive device no bigger than a pack of cigarettes onto the main riser done with that here comes a second small explosive device but this ones special its being taken from a plastic bag and mounted down by the floor on a subpanel done the hands hold up what looks like a piece of tape ',
     ' transferring it onto the charge ',
     ' vic alone with the samples case pressing the button for the top floor the doors close the car rises and then it stops vic bracing himself as the door opens and ivan russian the guy we saw outside with the briefcase standing in an empty darkened hallway ivan show me vic here ivan holding open the door now show now vic flips open the case cash three million dollars ',
     ' a glass door a suite of offices beyond clean anonymous one light on deep inside caspiexpetroleum cherbourg moscow rome tehran',
     ' curtains drawn lights low ivan sitting with the samples case counting the cash vic poring over russian document files dozens of kgb files old and new spread sheets financial data incomprehensibly cyrillic marked up but judging by the seals and clearance sign offs all topsecret vic this is everything ivan is there is all there suddenly music a radio some tinny pop tune just started playing from somewhere down the hall vic what the hell is that alone you said alone both of them sure theyre being doublecrossed vic contd contd reaching for his ankle who who else is here ivan no not me no other people vic coming up with a pistol shut up just shut the freaked by the gun ivan to his feet vic pushing him back as he rushes past the sample case spilling cash and wrong snapph snapph snapph snapph snapph five fast suppressed small caliber shots vic falls first ivan crashing back across a desk as the bullets tear into him both of them dead before they hit the floor and reverse to find the gloved hands unscrewing a silencer tucking away the weapon already in motion before we know whats happened pulling a climbing duffel out from his back pack stuffing in the samples case and ivans briefcase all the files all the money except wait hes left out one old kgb file cover and now he pulls a plastic bag from his backpack gloved hands carefully remove a single sheet of paper from inside the bag and this paper looks exactly like all the stuff hes just tucked away another page full of cyrillic blur hes putting this sheet of paper inside the file cover now hes slipping them both underneath the desk tossing them there as if they fell in the struggle and ',
     ' the electrical risers as one of the two detonation decives blows a single tidy selfcontained explosion and ',
     ' as the lights flicker and fail and the night shift security guard is suddenly cast into darkness and ',
     ' as they were waiting but only a moment before teddyradio sudden urgent hub we just we lost power the building the whole place just went dark cronin looking at pamela the first whiff of dread as cronin repeat who is dark the target building or your location radio voices piling up panicked confusion cascading as ab ',
     ' anonymous drone barn kirill stepping out of a car hes carrying the duffle ',
     ' kirill heading down the hall ',
     ' kirill enters its a small room gretkov is waiting hes forty professional trim and polished dominant gretkov russian youre early kirill youre complaining gretkov its clean kirill would i bring it gretkov taking over now tosses some money on the bed checks out the photocopy of the files gretkov what are you doing kirill stripping quickly kirill im taking a shower its been a long day gretkov make it fast my plane is waiting gretkov dumping three million dollars over the bed as kirill sheds his clothes and we ',
     ' a workmen cluster as a cable winches the jeep is raised from the river bottom as water pours off of it bourne watching from a distance empty ',
     ' b crime scene police blocking office workers from getting in the building media vans clogging the street pamela and cronin across the street watching the mood is black ashes pamela we need to get in there cronin im working on it pamela stands there silent staring at the disaster across the street a ',
     ' a bourne is bailing exfil procedure but this is a heartbroken exfil a footlocker open bournes main stash bourne going through the footlocker setting aside his work clothes other things he needs but he also has to separate a growing pile of marie memories bank cards phony student ids loose passport photos with a mix of looks and hairdos clothes vacuumpacked bags spare shoes ',
     ' b a gasolinestoked fire burning in a rocklined pit bourne feeding his papers and all of maries belongings into the fire a passport cover crinkles back to reveal her photo her face begins to burn gassoaked clothes tossed in nothing left except the photograph the picture of he and marie at the beach the one from his desk bourne hesitates holds the photo out to the flames the rules of exfil say drop it but he cant wont he reaches to his bag sticks the photo on top of his gear then hefting the bag bourne strides away ',
     ' a folding table covered with xeroxed berlin police paperwork pamela getting a showandtell from cronin and teddy cronin so there were two of these explosive charges placed on the power lines one of them failed the fingerprint pamelas got it thats from the one that didnt go off pamela and the germans cant match it teddy nobodys got it we checked every database we could access nothing cronin show her the other thing teddy this is a kgb file that mustve fallen somehow and then slipped under i guess a desk there or handing it to her pamela do we know what this says teddy yup a scrap of paper the main word there the file heading translates as treadstone pamela what the hell is a treadstone cronin shaking his head nobody knows ',
     ' c bourne bouncing around on an old punjab bus alone in a crush of humanity going only god knows where ',
     ' a pamelas pov as she drives toward the entrance cia headquarters virginia ',
     ' a long bright sterile hallway pamela and cronin walking briskly alongside a uniformed sps officer ',
     ' pamela and cronin watching the sps officer unlock the operation panel coding in they begin to descend and ',
     ' drab and desolate pamela and cronin come around a corner walking with a new escort officer passing a sign that reads operations library center ',
     ' sealed triplelocked numbered door it swings open lights flicker on tons of shit packed away in here shelves bulging boxes tapes binders hard drives pamela steps in a huge filing cabinet labeled treadstone pamelaphone over ward abbott os yes pamelaphone pamela landy a ',
     ' ward abbott at his desk the cluttered clubhouse hq of a man whos spent the last thirtyfive years in the spy game a picture window offers a commanders view of the bullpen abbottphone what can i do for you pam pamelaphone i was hoping you had some time for me abbottphone time for what pamelaphone im free right now actually abbottphone that sounds ominous let me check my schedule abbott holds the phone eyes drifting out the window and abbotts pov the bullpen cronin is standing with daniel zorn one of abbotts trusted s clearly zorn is getting the less polite version of pamelas invitation zorn managing to shoot a quick questioning glance to abbott as ',
     ' a cold room desk two chairs abbott and pamela alone pamela treadstone abbott never heard of it pamela thats not gonna fly abbott with all due respect pam i think you mightve wandered a little past your pay grade she has a piece of paper she slides it forward pamela thats a warrant from director marshall granting me unrestricted access to all personnel and materials associated with treadstone abbott rocked and trying to hide it abbott and what are we looking for pamela i want to know about treadstone abbott to know about it almost amused it was a kill squad black on black closed down two years ago more abbott contd nobody wants to know about treadstone not around here the warrant you better take this back to marty and make sure he knows what youre doing pamela trump card he does ive been down to the archives i have the files ward ',
     ' a a hard working port a big mediterranean ferry coming in naples ferry bourne at the rail unchanged from india staring ahead as europe looms ',
     ' b bourne disembarking to an immigration queue looking unremarkable just one of many passing through ',
     ' as they were abbott watching pamela pull a photo from her file sliding it over conklins face peering back pamela lets talk about conklin abbott what are you after pam you want to fry me you want my desk is that it pamela i want to know what happened abbott what happened jason bourne happened fury focusing youve got the files then lets cut the crap it went wrong conklin had these guys wound so tight they were bound to snap more abbott contd bourne was his number one guy went out to work screwed the op and never came back conklin couldnt fix it couldnt find bourne couldnt adjust it all went sideways finally there were no options left pamela so you had conklin killed silence i mean if were cutting the crap abbott ive given thirty years and two marriages to this agency ive shoveled shit on four continents im due to retire next year and believe me i need my pension but if you think im gonna sit here and let you dangle me with this you can go to hell marshall too flat it had to be done pamela and bourne wheres he now abbott shrugs dead in a ditch drunk in a bar in mogadishu who knows pamela i think i do we had a deal going down in berlin last week during the buy both our field agent and the seller were killed we pulled a fingerprint from a timing charge that didnt go off beat they were killed by jason bourne abbott hesitates blindsided what a courtesy knock at the door cronin appearing in the doorway theyre ready for us upstairs ',
     ' a now at the immigration officer booth bourne hands over an old blue passport it reads jason bourne whats he up to is he giving up immigration officer where you coming from mr bourne bourne tangiers the officer runs the code on the passport through the scanner ',
     ' a tech turns as a computer alarm begins an incessant beeping the screen as jason bournes passport data begins scrolling through a sleeper waking up on the grid then his photo work station as an interpol supervisor leans in over the techs shoulder to see whats up after a beat as the tech begins typing and hits send ',
     ' crewcut turns from his monitor to his own superior as at the same time ',
     ' looking up from his computer the immigration officer gestures bourne to one side immigration officer sir would you be so kind as to step over here please bourne uh sure the immigration officer comes out of his booth as a carabinieri joins him and they escort bourne to a small room at the side of the customs hall immigration officer please wait in here bourne scans the hall as he walks enters room pamelas vo seven years ago twelve million dollars was stolen from a cia account bourne takes a seat carabinieri guards the room ',
     ' same table more faces marshall back in the throne abbott three cia mandarins plus their s and pamela in warsaw this is click a photo of the man killed in berlin fills the projection screen behind her click crime scene photo of dead body click pecos oil logo pamela contd ivan mevedev senior financial manager worked for one of the new russian petroleum companies pecos oil he claimed to know where the money landed we believe this could have only happened with help from someone inside the agency this click conklins photo pamela contd placing it on the table this is conklins computer click a photocopy of a banking contract pamela contd at the time of his death conklin was sitting on a personal account in the amount of sevenhundred and sixty thousand dollars abbott do you know what his budget was pamela excuse me abbott we were throwing money at him throwing it at him and asking him to keep it dark pamela may i finish abbott conklin mightve been a nut but he wasnt a mole you have me his calendar for a couple of days ill prove he killed lincoln appealing to marshall this is supposed to be definitive pamela whats definitive is that i just lost two people in berlin abbott so whats your theory mocking her conklins reaching out from the grave to protect his good name incredulous the man is dead marshall hes heard enough no ones disputing that ward abbott for crissake marty you knew conklin does this scan i mean at all marshall signals for quiet marshall okay cut to the chase pam what are you selling pamela i think that bourne and conklin were in business that bourne is still involved more pamela contd and that whatever information i was going to buy in berlin it was big enough to make bourne come out from wherever hes been hiding to kill again to abbott hows that scan as the mandarins all start talking at once zorn enters stands at the head of the table tries to get their attention zorn hey they look up look youre not gonna believe this but jason bournes passport just came on the grid in naples abbott blinks what ',
     ' nevins american a junior cia field officer walking from the parking lot talking on his cellphone nevins what can i do i cant ill call you when i know what im into a hassled pause i dont know some guys name came up on the computer starting toward the building so start without me if i can get there i will later nevins hangs up and pockets the phone he hustles towards the building ',
     ' the room is jumping agents tracking working the phones and computers pamela giving orders abbott watches cronin looks up from computer screen looks like hes been detained pamela whos going us cronin theres only a consulate they sent a field officer out half an hour ago pamela cuts him off then get a number they need to know who theyre dealing with cronin already on it ',
     ' as nevins flashes his credentials to carabinieri at door who gives an unimpressed shrug and lets him in nevins takes his overcoat off tosses it on the empty chair we see a big ass for just a second under his suit jacket nevins alright mr bourne is that your name bourne nods names nevins im with the us consulate could i see your passport bourne silent hands over his passport nevins contd so mr bourne nevins studies bournes passport nevins contd what are you doing in tangiers silence nevins contd faux friendly are you travelling alone bourne stares straight ahead nevins comes around the table and sits in front of bourne nevins contd in his face look i dont know what youve done but youre gonna need to play ball here nevins cell starts to ring he shrugs an apology turns away and answers nevins contd contd nevins pamelaphone this is pamela landy a ci supervisor calling from langley virginia are you with a jason bourne now nevins listens looks at bourne yes ',
     ' a pamela on the phone pamela then use extreme caution he can be very unpredictable and violent use whatever means necessary to ',
     ' whatever nevins is being told its concerning bourne watching him knows exactly what this is close on nevins as he steps away listening intently his hand just starting to move toward his shoulder holster nevins contd okay ill call you right back nevins flips shut his phone he reaches for his gun even as he turns and bourne is right there in his face whump momentum and gravity reaching mutual agreement as nevins hits the deck carabinieri barely clears his holster before chop chop bourne has him down in a heap bourne is back silent and effective finding nevins cellphone bourne reaches into his bag he holds the phone next to a larger diagnostic mobile unit the confirm light blinks nevins phone has been cloned bourne puts the phone back in nevins coat takes his gun and carabinieris gun and radio and puts them in his duffle were starting to realize theres a plan at work here finally bourne exits the door wedging a desk under the handle so it cannot be opened from the inside and calmly walks away like nothing ever happened ',
     ' and now we see the old bourne in his long black coat purposely striding out of the building he pauses long enough for the security camera to get a good look at him the ronin returns ',
     ' bourne crosses the street and approaches a man putting his suitcase in the trunk of a green peugeot bourne reaches into his bag pulls out some cash ',
     ' nevins stirring the carabinieri still out a phone starts to ring nevins phone finally sitting up he answers nevins hello ',
     ' pamela at the other end of the line pamelaphone mr nevins nevinsphone whos this pamelaphone pamela landy again where do we stand ',
     ' a nevins barely knows where he is ',
     ' bourne sits in the dark car headphones a nest of cool gadgetry on the passenger seat listening in recording he writes pamela landy circles it nevinsphone i think i think he got away pamela looks at the faces waiting around the table shakes her head no pamela have you locked down the area nevinsphone ah were in italy they dont exactly lock down real quick intercut bourne nevins pamela pamelaphone how long have you worked for the agency nevinsphone me four years pamelaphone if you ever want to make it to five youre gonna listen to me real close jason bourne is armed and extremely dangerous a week ago he assassinated two men in berlin one of whom was a highlyexperienced field officer continuing as were totally on bourne at this point sitting there in the dark car struggling to make sense of this what the fuck is she talking about berlin he writes it circles it pamelaphone contd i want that area secured i want any evidence secured and i want it done now is that clear nevinsphone yes sir maam pamelaphone im getting on a plane to berlin in minutes which means you are going to call me back in and when i ask you where we stand i had better be impressed my mobile number is bourne already turning the key in the ignition the peugeot roaring to life as he writes the number dropping the car into gear bourne pulls briskly away from the curb ',
     ' a pamela finishes hangs up abbott berlin pamela ive already got a team there i doubt bournes in naples to settle down and raise a family abbott you dont know what youre getting into here pamela and you do from the moment he left treadstone he has killed and eluded every person that you sent to find him before it can come to blows marshall riot act enough i want both of you on that plane more marshall contd and we are all of us going to do what we were either too lazy or inept to do the last time around youre going to find this sonofabitch and take him down before he destroys any more of this agency beat is that definitive enough for you abbott nods sharing a look with pamela as we ',
     ' aa pamela and cronin come screaming around a corner and down a long corridor abbott and zorn trying to keep up cronin kurts reopening all the wyfi and sat links pamela uplink all relevant files to kim a look back at zorn and i want them to contact anyone who had anything to do with treadstone zorn looks to abbott as they disappear around a corner ',
     ' b the peugeot speeding north north towards germany and ',
     ' bourne driving listening to playback of pamelas conversation with nevins pamelatape jason bourne is armed and extremely dangerous bournes face eyes tight looking weird pamelatape contd contd a week ago he assassinated two men in berlin one a highly a suddenly a flashback a shard pieces lightning flash of images getting in the back seat of the car rolling brandenburg berlin a mirror the television tower the driver looks back we see him well know him later as jarda then a steel case on the backseat inside a syringe a dark vial pistol as we lay hands on them b back to b bourne out of it jolted almost losing control of the car for a second jerking back into his lane recognition toughing it out steady as she goes catching his rhythm again accelerating and ',
     ' a bakery on the corner nicky emerging nicky from the old days suddenly she stops abbott stands there beside a parked car the passenger door open message clear get the fuck in ',
     ' inside a hanger inside an office abbott watching as cronin questions nicky pamela sits on a window sill cronin so your cover at the time was what nicky that i was an american student in paris cronin what exactly did your job with treadstone in paris consist of nicky looks to abbott he nods that its okay to answer pamela bristles at the checkoff nicky i had two responsibilities one was to coordinate logistical operations the other was to monitor the health of the agents to make sure they were up to date with their medications cronin health meaning what nicky their mental health because of what theyd been through they were prone to a variety of problems pamela losing patience what kind of problems nicky depression anger compulsive behaviors they had physical symptoms headaches sensitivity to light pamela amnesia nicky before this before bourne no nicky gets agitated abbott steps in fatherly good cop abbott were you familiar with the training program nicky the details no i mean i was told it was voluntary i dont know if thats true or not but thats what i was told a bit defensive look they took vulnerable subjects okay you mix that with the right pharmacology and some serious behavior modification and i dont know i mean i guess anythings possible zorn arrives from outside zorn the jets ready points to nicky theres a car for you everybody moving nicky relieved shes off the hook she thinks she becomes aware of pamela considering her nicky good luck pamela you were his local contact you were with him the night conklin died youre coming with us ',
     ' streaks across the sky ',
     ' quiet in the cabin abbott gets up to use the bathroom pamela sits across from nicky who stares out the window as the bathroom door clicks shut pamela seizes the privacy pamela im curious about bourne your interpretation of his condition you have specific training in the identification and diagnosis of psychological conditions nicky am i a doctor no but pamela are you an expert in amnesia nicky look what do you want me to say i was there i believed him pamela believed what nicky i believed jason bourne had suffered a severe traumatic breakdown pamela so he fooled you nicky frustration building if you say so pamela leans in still low not good enough youre the person who floated this amnesia story shifts gears ever feel sorry for him for what hed been through nicky youre making it out like were friends here or something i met him alone twice pamela you felt nothing no spark two young people in paris dangerous missions life and death nicky incredulous you mean did i want a date pamela did you nicky these were killers conklin had them all jacked up they were dobermans pamela some women like dobermans nicky what do you want from me i was reassigned im out pamela see thats a problem for me nicky whatever hes doing we need to end it this isnt the kind of mess you walk away from pamela leans away nicky looks back out the window ',
     ' three in the morning as the gulf stream lurches to a stop two black sedans here for the pickup teddy the greeting party as pamela cronin abbott zorn and nicky disembark ',
     ' a the sedans making their way stopping at a nondescript office building ',
     ' b elevator opens into their th floor world emergency activity kim ready to debrief kurt work the computers energy up pamela abbott and cronin bring nicky into the room kim so far bournes had no contact with anyone on the list langley pulled an image out of naples its uploading right now kurt coming in now everything stops as the photo blurry oblique begins materializing on halfadozen monitors around the room suddenly theyre surrounded by bourne pamela to nicky is it him looking closer she nods cronin hes not hiding thats for sure zorn why naples why now pamela has gone quiet just staring at the picture as kurt could be random cronin maybe hes running abbott looks skeptical abbott on his own passport kim the image whats he actually doing cronin whats he doing hes making his first mistake and then from behind them nicky its not a mistake everyone looks over they dont make mistakes and they dont do random theres always an objective always a target beat if hes in naples on his own passport theres a reason pamela turns to abbott a silent moment between them theyre in it now and they know it ',
     ' c the peugeot streaking through the alps passing a sign for the german border moonlit glacial peaks whipping past as club music starts pulsing louder and louder and ',
     ' d bourne driving hard pushing the car through the night mission bourne as the music keeps just building and building taking us into ',
     ' packed and loud skin and smoke a doorman on the move taking us with him through the crowd faces voices all the moscow party people and at the back a vip booth kirill simply shitfaced but in a really creepy numb kind of way three women absolutely gorgeous are sitting around him chatting away as if he werent even there the girls looking up to see the doorman standing there can he walk kirill stirs his stupor a futile attempt to escape eyes still those of an exceptionally hard man a minute later kirill can walk the most graceful drunk youve ever seen making his way through the club tuning out everything but the need to get to the door and ',
     ' yes day its nine am kirill suddenly in the sunlight people going to work kids off to school and gretkov sitting in his mercedes not happy follow car and security and assistant equally unhappy gretkov you told me jason bourne was dead kirill blinking against the sunlight trying to process ',
     ' discreet and chilly a car pulls up a man gets out munich we dont see his face as he heads in ',
     ' the man enters his alarm system beep beep starts once he comes through the door theres a keypad on the wall he enters his code and the beeping stops just like everyday its a sad house he hangs his coat on the rack moving now into the kitchen he drops his briefcase on the table opens the fridge for a drink except what he comes out with is a gun wheeling around the salaryman is jarda jarda from bournes dream but as he turns bourne behind him bigger gun waiting so ready bourne i emptied it jarda a total pro felt a little light bourne drop it jarda lets the gun fall looks his old comrade over a beat but bournes not interested in a reunion bourne contd contd here bourne tosses him flexcuffs jarda puts his hands behind his back turns to let bourne cinch them bourne contd contd front use your teeth jarda caught scamming sorry old habits bourne kicks over a chair sit jarda contd word in the ether was youd lost your memory bourne checking jardas briefcase tearing through it bourne you still shouldve moved jarda i like it here a beat more jarda contd last time i saw you was greece you had a good spot bourne reacts doesnt look over but realizes jarda contd i had the girl i had her lined up that whole afternoon waiting for you that was the problem defensive you ever do two targets its tough bourne turns cold jarda contd his real question so why didnt you kill me then bourne she wouldnt let me beat shes the only reason youre alive silence jarda down a peg or two jarda what do you want bourne conklin jarda hes dead bourne the gun right to jardas face bourne try again jarda shot dead in paris dead the night you walked out bournephone then who runs treadstone jarda nobody they shut it down were the last two its over not finishing because hes falling landing hard bourne just kicked the chair out from under him bourne youre lying if its over why are they after me jarda i dont know bourne who sent you to greece jarda a voice a voice from the states someone new bourne pamela landy jarda i dont know who that is bourne whats going on in berlin jarda i dont know why would i lie silence bourne pulls back unsure jarda makes it to his feet jarda contd what the hell did you do you must have really screwed up bourne doesnt know he backs off jarda contd she really did that told you not to kill me beat i had a woman once but after a while what do you talk about i mean for us the work you cant tell them who you are bourne i did jarda hesitates its really like bourne just told him how much he loved her jarda i thought you were here to kill me something in the way he said it plus jarda just glanced at his watch bourne what did you do jarda shrugs almost embarrassed bourne looks across to the alarm pad jarda hit on the way in voltage like a switch bourne contd contd you called it in jarda im sorry bourne how long how long do i have stopping because the phone just started ringing loud insistent bourne contd contd how long ',
     ' jamming right the fuck into it three guys jarheads dod special force dudes speeding through munich jar is the driver jar is prepping weapons like a maniac in the backseat and jar on the phone its a red flag file so fix it call them back asap jar the call what whatd they do jar bad news she called munich local jar slamming home another clip its probably just a drill anyway ',
     ' phone ringing jarda in cuffs bourne scanning out the windows everything fast bourne car keys jarda my coat but we should bourne what jarda take the back get another car bourne hesitates just a moment wrong slam out of nowhere jarda swings twohands still cuffed like a mace catching bourne hard and bourne stunned jarda smashing the coffee table slices the flexcuffs through on a shard of glass free jarda follows up knee up in the ribs the gun knocked free from bournes hand skittering across the floor bourne as jarda starts to move backhanding him and ',
     ' two munich patrol cars rolling and ',
     ' seen from inside glimpsed through the glass outside its war a flatout closequarter death match jarda older and cuffed but strong and determined bourne still hammered from that opening suckerpunch the two of them braced there grappling falling jarda the cuffs hes got bourne in a chokehold but bourne driving his head back into jardas face and ',
     ' jamming along through munich ',
     ' jarda bourne the gun on the floor struggling for it jarda there first bourne on him pinned there four hands one gun and blamm wild shot into the refrigerator still wrestling breaking jardas nose until the gun knocked away again finally their hands locked into each others throats this is as real and up close as it gets until bourne finally holds dead weight eyes fixed staring bourne jumping back blood all over his shirt bournes first kill in a long time a messy one revulsion ',
     ' jarheads getting close but up ahead another munich patrol car in motion the jarheads react dont need or want the company ',
     ' bourne all business now pulling the stove away from the wall there the gas line hose bourne ripping it free gas running wide open into the room next a fork grabbing it jamming it down into the mechanism on a toaster wedging it there and now hes grabbing papers jardas stuff on the table jamming a roll of sales projections into the toaster beside the fork bourne coughing from the gas turning the toaster on checking his watch taking one last look at jarda dead on the floor and ',
     ' theyre just turning into the street ',
     ' the dod car three dods approaching the house when booooomm jardas kitchen blown out gone ',
     ' bourne same moment flying out the rear as planned urban backyard exfil hes flying and gone ',
     ' fire smoke its all burning now munich cops blown back theyll have a story to tell tonight ',
     ' drives away past arriving police ',
     ' the bullpen is cranking phones to munich lines to langley abbott watching from the sidelines kurt and kim at their work stations pamela on mobile turns to abbott pamela so he beats a man within an inch of his life strangles him then blows the place up at nicky for someone with amnesia he certainly hasnt forgotten how to kill has he across the room cronin and teddy suddenly excited about what theyre seeing on their screen cronin hey theyve got him boxed in new data coming up on the monitor everyone rushing to look excited except zorn forget it they lost him teddy whatre you talking about theyve got a three block perimeter zorn you cant see him hes not in front of you forget it hes gone cronin fuck you buzzkill its not gonna be like last time zorn you better start listening to someone cause weve been there abbott okay enough stepping in take a walk danny get some air zorn nods happy to nicky piping in i dont think we need to keep looking for him anyway pamela and why is that nicky because hes doing just what he said hed do hes coming for us and for the first time theyre all thinking the same thing ',
     ' it is pouring rain seen from that hellish car a huge distinctive needlelike tower dominates the skyline lights flashing through the dark and wet ',
     ' bournes eyes opening heart pounding springing up alone damn his side hurts recoiling from that where is he hes in the car looking around and his windshield pov an autobahn reststop gas station sleeping trucks back to bourne catching his breath shifting away from the pain in his rib checking his watch but what the hell is that on his sleeve fuck its blood jardas blood ',
     ' bourne out of the car fast careless wrong not even checking whos watching pulling off the shirt tearing it off throwing it down and standing there in the weird light a big bruise ripening on his side looking around its okay nobodys watching but shit man get it together ',
     ' a streaking along bourne back to his mission ',
     ' b roaring by a sign berlin km ',
     ' kirill striding through the terminal moving quickly toward a departure gate and gretkov above watching him go ',
     ' bourne drives up ',
     ' quiet and forlorn this early just like bourne whos taking a locker stashing a backpack prepping the evac always ready he heads outside we hear hotel operator vo front desk german berlin hilton how can i help you bournephone vo im trying to reach a guest pamela landy please hotel operator vo im sorry but im not showing that we have a guest by that name continuing as ',
     ' a bourne tucked in with a berlin guide book a felt tip pen and a fiftyeuro phonecard working it bournephone pamela landy please hotel operator sorry i dont see it here crossing out another hotel off the list four down forty to go as we start time cutting and hotel voices vo overlapping no one here by that name no sir theres no landy here how are you spelling that sir sorry but no i have no landy registered sir continuing until ',
     ' b clean and plain a bed nobodys slept in the phone begins ringing pamela fresh from the shower rushing out from the bathroom to answer it pamelaphone hello dial tone pamela hangs up that was strange ',
     ' c a taxi driving through the empty early streets and ',
     ' d bourne in the backseat staring out the window and his pov the fernsehturm looming as they pass the berlin tv tower that needle in the sky from the flashback and then e suddenly e flashback its raining were still moving still in a car still near alexanderplatz but suddenly its pouring outside turning back we realize were not in the cab anymore theres a driver up front and beside him conklin yes conklin hes in the passenger seat turning back to us handing us something a photograph a face some guy conklin neski vladimir neski the photo hes at the hotel brecker get the papers beat say it bourne treadstone bourne alone in the back staring at the photo bourne neski hotel brecker papers conklin this is not a drill soldier were clear on that this is a live project and you are go training is over bourne yes sir conklin good then gimme the damn picture back taking it see you on the other side to the driver pull over hes getting out f back to f bourne sitting in the back seat of the cab frozen there rocked whats happening to him no chance to work it out because the taxis stopped and taxi driver waiting irritated the hotel brecker or the grand make up your mind bourne what taxi driver this is the westin grand you just said brecker bourne fishing for money yeah sorry this is good ',
     ' g concentric rings looking down on each other bourne slipping in unnoticed taking a quick look up before moving along ',
     ' h bourne stepping up to the guy behind the desk the gym mostly empty bourne hi i think i left my backpack here yesterday black nike the guy disappears in back to check bourne leans across the counter scrolling the computer the guest list his finger stabbing down on screen landy pamela bourne clears the screen walks away ',
     ' j because of the setup bourne pretending to talk on a house phone has a view of room across the way the door opens pamela exits carrying an overnight bag bourne watches ',
     ' k elevator doors opening pamela coming out into the lobby heading toward the exit and ',
     ' l a black suburban at the curb cronin standing there waiting as she emerges pamela anything teddy no munichs a bust hes loose pamela are we locked up cronin i told everyone they had an hour eat sleep shave whatever they want but once were back were back for good as they pile in and bourne walking right past them hes got the whole thing scoped heading quickly across the street and ',
     ' m bourne jumps into the first cab in the rank and ',
     ' n the driver starting up the car as bourne that black suv fifty euros if you keep me close the driver smiles and ',
     ' i pt kirill walks down the same hallway gretkov came to meet him last time a guy carrying a briefcase toward him stopping for a moment to light a smoke letting kirill take charge of the briefcase smooth like it never happened ',
     ' the suv rolling up the cab continuing past and stopping at the corner ',
     ' a bourne looking back out the rear window his pov as they pile out of the van start inside acknowledged by a security detail pretending to loiter outside as we hear pamela vo munich to berlin check everything flights trains police reports thatll be box teddy thats yours continuing as ',
     ' i pt kirill opening the briefcase two automatic pistols silencers ammo care package ',
     ' a bulkhead opening bourne stepping out among the satellite dishes unpacks a bag telescope water food and we hear pamela vo box call it prior german connections nicky i want to rerun all bournes treadstone material every footstep kim box lets call it munich outbound continuing as ',
     ' weve been hearing it now were seeing it pamela at the chalkboard abbott backing her up everyone else spread around theyre regrouping urgently behind them cots are being set up food water stacked up pamela lets stay on the local cops we need a vehicle parking ticket something langleys offered to upload any satellite imaging we need so lets find a target to look for to zorn danny box i need fresh eyes review the buy where we lost the three million timeline it with what we know about bournes movements turn it upside down and see how it looks continuing as ',
     ' a decent view into the berlin hq two windows one offers a look at an empty kitchenette the other a nice shot of the bullpen area it looks like they are in for the long haul theres teddy pacing pasta glimpse of zorn conferring with abbottnow kim talking on the phone ',
     ' bourne eyes locked on the target scanning waiting and then something changes suddenly theres something down there thats clearly a great deal more electric than what hes seen so far a telescopic pov a nicky shes just come into the kitchenette pouring herself a cup of coffee nicky who he knows and bourne lowering the telescope yes now hes getting somewhere thinking it through as ',
     ' nicky is joined by pamela who goes for the coffee pamela is it fresh nicky its got caffeine in it thats all i know before pamela can pour her cell phone rings she answers pamela pamela landy bournephone i was at the westin this morning i could have killed you pamela who is this intercut with rooftop bourne its me pamela holy christ bourne nicky reacts to the name runs to the other room to try and start a trace pamela contd contd what do you want bourne i want to come in he wants to come in its like a bomb going off nicky back in with conklin pamela waving for a pencil pamela okay how do you want to do it bourne i want someone i know to take me in pamela who bourne there was a girl in paris part of the program she used to handle the medication and now we stay with pamela her eyes flicker over to nicky pamela what if we cant find her bournephone its easy shes standing right in front of you busted pamela okay jason your move bourne alexanderplatz minutes under the world clock alone give her your phone click the line goes dead pamela steps away from the window realizing hes on one of the roofs out there ',
     ' a as the bulkhead door swings in the wind bourne is gone ',
     ' b everyone gathered a big detailed map of alexanderplatz spread on the table zorn heres the clock shit hes put her in the middle of everything cronin its a nightmare well never get her covered abbott call a mayday into berlin station we need snipers dod whatever they got pamela snipers hold on he said he wants to come in abbott my ass he does youre playing with fire pamela marshall said nail him to the wall i dont know how you interpreted that but i dont think he meant repatriate him pamela dont you want answers abbott there are no answers theres either jason bourne alive or jason bourne dead and i for one would prefer the latter and what about her points to nicky you just send her out to this lunatic with no protection pamela looks to nicky pamela what do you think is he coming in nicky i dont know he was sick he wanted out i believed him pamela alright pamela gestures to abbott cronin teddy pamela contd make the call get a wire on her if it starts to go wrong take him out ',
     ' a the rear of the official berlin cia hq and here they come ten delta dudes in civvies sprinting to a couple vehicles with drivers ready and engines running and bc ',
     ' d nicky her hands overhead as zorn tapes a transmitter and battery between her shoulder blades teddy and cronin plot the area with two men plainclothed delta team kim and kurt on their own lines kim this just in they got the number bournes calls came from nevins phone the field agent in genoa teddy nevins is bourne abbott losing it are you an idiot bourne mustve cloned his phone an embarrassed silence abbott mad at himself for losing his temper looking up to find pamelas eyes on his abbott contd contd i hope you know what youre doing ef ',
     ' g in all its vastness alone theres the world clock nicky waiting on the periphery two plainclothed deltas nearby in quick succession nicky binocular pov sniper scope pov on a video monitor ',
     ' h everyone waiting holding their breath watching nicky standing as ',
     ' j nickys pamelas phone rings she answers as a yellow tram approaches bourne see that tram coming around the corner nicky yes bourne get on it she turns and walks as the tram arrives the delta dudes start moving ',
     ' k the yellow tram arrives nicky enters one of the delta dudes just barely joining her the tram begins moving nicky looks around nervously nothing happens the tram moves about yards across the platz stops at the next stop people get on and off nicky and delta dude relax a bit doors begin to close and just like that bourne swoops in beside nicky flashes a gun bourne walk bourne takes her arm and they just get off as the doors close leaving the delta dude behind they disappear down into the pedestrian subway lm ',
     ' n a madhouse a video feed on a monitor pamela wheres nicky as they realize shes gone abbott goddamn it i told you cronin listen listen he cranks the speaker bournes voice what did i say what did i tell you in paris o ',
     ' p bourne what were my words but she cant speak leave me alone leave me out of it but you couldnt do that could you nicky i didjason i swear i didi told them i told them i believed you bourne who is pamela landy nicky you hear me i believed you bourne is she running treadstone ',
     ' q pamela all ears nickys voice shes ci counterintelligence shes a deputy director bournes voice what the hell is she doing ',
     ' r nicky whats she doing nicky looks at him like hes crazy bourne why is she trying to kill me nicky they know defiant reckless they know you were here they know you killed these two guys they know you and conklin had something on the side they dont know what it is but they know as bourne tries to process ',
     ' s radio chatter going wild panic delta vo into radio where are they anyone ',
     ' t still walking bourne knowing he must be driving them nuts bourne how do they know that how can they know any of that nicky what is this a game bourne i want to hear it from you she looks at him is he crazy what bourne contd contd say it nicky last week an agency field officer went to make a buy from a russian national bourne a russian nicky it was pamela landys op the guy was going to sellout a mole or something i havent been debriefed on exactly what it was bourne last week when is she supposed to answer nicky shrugs on quicksand nicky and you got to him before we could bourne i killed him nicky you left a print there was kel that didnt go off there was a partial print they tracked it back to treadstone they know its you bourne i left a fingerprint you fucking people suddenly bournes jerking her down to a lower level ',
     ' u big static on the speakers delta co cooly checks the map delta co she must be in one of the pedestrian tunnels ',
     ' v as delta dudes fan out head for the subway entrances ',
     ' w an intersection of three tunnels bourne leads nicky far left she looks really scared ',
     ' gretkov has landed just coming off the flight a ',
     ' bourne what was landy buying what kind of files when she doesnt answer instantly what was she buying nicky conklin stuff on conklin trying not to lose it suddenly he rips the microphone out from under her shirt he knew of course dropping it as he yanks her along ',
     ' as the transmission goes dead christ aboott drills a look at pamela your fault pamela ignoring abbott that phone has a locator on it kurt and kim work their stuff ',
     ' gloomy deserted a mausoleum here come nicky and bourne she knows shes on her own now bourne dead serious looks at his watch bourne why are you here then nicky please im only here because of paris because they cant figure out what youre doing im here because of abbott bourne abbott nicky he closed down treadstone he took care of me after paris bourne so when was i here nicky what do you mean bourne for treadstone in berlin you know my file i did a job here when nicky no you never worked berlin bourne my first job nicky your first assignment was geneva bourne thats a lie nicky emphatic you never worked berlin bourne raising the gun eyes gone dead oh shit nicky contd nojasonplease bourne i was here nicky its not in the filei sweari know your fileyour first job was genevai swear to god you never worked here hes so ready to kill her nicky starting to cry hands over her face covering up bracing for the bullet she knows is coming bourne about to pull the trigger suddenly a flashback a moment a shard a womans face a backing away begging begging us begging the camera pleading for her life in russian this awful blur of desperation and panic fear too fast too panicked b jam back to b bourne swamped thrown hesitating close on nicky sobbing now when finally looking out and bourne is gone ',
     ' c an hour later whole new vibe siege mode curtains drawn three delta dudes parked around the room kurt and kim working the phones and screens the mood is dark pamela abbott cronin all in here the safe zone away from the windows cronin on a cell phone got it yeah hang on to the room okay theyve got three guys out front and another two taking the back stairs no word on nicky kurt looks up from screen even if shes still got your phone it might take awhile signals hard to trace down there pamela turns looking at the photo of bourne in naples introspective pamela so whats he doing you believe him abbott its hard to swallow beat the confusion the amnesia but he keeps on killing its more calculated than sick real soft sell what about nicky shes the last one to see bourne in paris shes the one he asks for they disappear pamela well whatever hes doing ive had enough this is now a search and destroy mission turns to the room i want the berlin police fully briefed and handing the photo to cronin get this out to all the agencies abbott agrees ',
     ' a bmw parked in the shadows ',
     ' kirill wearing headphones listening to a berlin police frequency theres an interpol wanted picture of jason bourne there on the seat hes in play ',
     ' d quiet intense activity military radios chirping here and there zorn moving through the bullpen carrying a cup of coffee heading back toward pamelas office where abbott is leaning in the doorway past him inside we can see pamela in the midst of a tough phone conversation cronin and the delta boss sitting there with her zorn the coffee sir abbott thanks abbott nods takes a sip looking beat zorn contd i have that number you wanted abbott hesitates but only a moment he never asked for a number but hes playing along looking satisfied as zorn hands him a slip of paper abbott glancing at it she say what time i should call zorn the sooner the better abbott nods pockets the paper turning back as if it were nothing and ',
     ' e massive modern busy bourne in the back in a corner doing a search hotel brecker scrolling and then stopping freezing because on the monitor a berlin newspaper archive there it is written large in loud tabloid german oil reformer murdered theres a photograph of the berlin police carrying two body bags out of the hotel brecker theres a caption identifying the dead as vladimir and sonya neski theres even a long article accompanying all this but its in german and we dont need to read it anyway because bourne is reading it and were reading in his face that he is rocked that he has found another bottom to the abyss ',
     ' f remember the building where vic was killed were back zorn and abbott making their way in zorn steering them away toward a stairwell at the back ',
     ' zorn and abbott have snuck in here work light signs of repair on the wall zorn nervous i did my box work but i wanted to show you before i showed landy i came out here last night because none of this was making any sense i mean im with you on this conklin was a nut but a traitor i just cant get there abbott what do you have danny zorn the electrical riser you put a fourgam kel on here and its gonna take out power to the building you know that what you cant know is if its gonna blow the room with it abbott and zorn there were two charges they were supposed to go off simultaneously the second one the one that didnt go off was down here pointing it out first of all this is nothing its a sub line for the breaker above second why put the charge all the way down here if youre good enough to get in here and handle the gear youre good enough to know you dont need this beat bourne would know abbott it was staged zorn is it a slam dunk no but abbott jesus zorn spitballing okay what if someone decided to cover their tracks by blaming conklin and bourne what if bourne didnt have anything to do with this abbott keep going zorn somethings been going on here in europe and its still going on post conklin whos been in berlin abbott lots of people zorn including landy jumping off the cliff she had access to the archives zorn hesitates but its out its in the room abbott who else knows about this zorn nobody you hes scared i had to tell you right abbott show me again zorn okay turning away when abbott out of nowhere his hand jamming up into zorns ribcage more than his hand because zorns eyes barely have a moment to register shock before they bulge clenching the younger mans body pulling him close as he turns the knife and zorn is dead abbott without hesitation shifting away from the blood letting the body fall abbott standing there listening checking himself for blood hes clean looking for a place to stash the body as ',
     ' a bourne across the street staring at the hotel haunted as a police siren edges closer through the empty streets aa flashback aa we are a pov a stakeout watching the hotel across the way the pov checks its watch checks the perimeter the street deserted foreboding the hotel our destiny waiting up there somehow and suddenly a light comes on a terrible signal and as the car suddenly lurches forward and around the corner ab back to ab bourne muscling up his backpack heading toward the hotel ',
     ' b and hotel fusty but comfortable and busy guests and staff doing their thing a clerk behind the reception desk clerk guten abend bourne playing it american guten abend clerk switching to english can i help you suddenly ba flashback the lobby but seven years ago ba across the room a man buttoning a raincoat as he passes neski bb jamming back to bb bourne stalled coming back as clerk contd contd sir smiling do you have a reservation bourne no sorry i just got in rallying back i is room available off the clerks look i stayed there before my wife and i the clerk nods checking the register the concierge just down the desk glancing over at bourne nodding hello and clerk im sorry that room is occupied would room be okay its just across the hall bourne sure thats fine danka cd shot ',
     ' a bourne riding up alone dread mounting and ',
     ' the concierge coming out of the office with a sheet of fax paper placing it quietly down beside the clerk and the fax bournes face the same wanted picture and ',
     ' bourne off the elevator he makes his way down his pov the sixth floor hallway suddenly scary ',
     ' a kirill sitting up as the police radio starts broadcoasting an allpoints bulletin the words hotel brecker in there kirill dropping the car into gear and ',
     ' b bourne walking theres his room but across the hall and down one room bourne steps up listening a moment then he knocks nothing he pulls a knife from his pocket checks the hallway hes clear wedges the blade in there and onetwo pop ',
     ' bourne enters a suite closing the door behind him and treadstone bourne seven years ago does the same bourne shakes off the flash looks around the lights are on an open suitcase on the bed ',
     ' the clerk the concierge and the manager are huddled in conversation with three berlin cops whove just arrived and trying to be discreet but this is clearly serious ',
     ' bourne just standing there breathing it in treadstone bourne doing the same ',
     ' bourne with his hand on the wall as if he can feel it like its all still here heart pounding and ',
     ' chaos bournes been found everybody rushing out cronin to teddy go take the van pamela the hotel how far teddy five six minutes cronin kurt youre here keep the comm line open ',
     ' bourne standing there looking out the window the images the television tower over the city everything but the rain ',
     ' the berlin police swat team truck arrives discreetly by the back loading area ',
     ' bourne flat against the wall just as he was leaning forward to see in the mirror just so and there ',
     ' a a man in the mirror pacing into view neski on the phone a talking in russian its raining bourne standing there treadstone bourne still wet from the rain one eye on that mirror and the other on a syringe that he prepped a predator the mirror the doorbell rings neski gets off the phone bourne tensing new element factoring and the mirror as neski opens the door a new flood of russian happy its mrs neski a surprise but hes very happy to see her bourne pocketing the syringe new weapon pistol quiet methodical watching the lovers bill and coo and the mirror mr neski kisses her takes her bag shes hanging up her coat and moving now toward the bathroom and bourne checking the window the weapon his balance and the mirror mrs neskis face right there seeing him so freaked she cant even register it yet bourne with the pistol in her face finger to his lips shhh but she knows backing away begging for her life in russian this awful blur of desperation and fear mr neski turning back to see his wife backing out of the bathroom and bourne with the pistol with no hesitation snap one shot into neskis heart hes down mrs neski whats just happened bourne has her wrist in his hand raising it to her head to where he holds the pistol her fingers his trigger snap letting the gun fall with her as she drops and bourne starts to move starts to prep his evac but theres something on the dresser a photograph the neski family father mother and a twelveyearold girl arms around each other happy and bourne staring at the picture undone for a moment hard out flashback to ',
     ' bourne our bourne standing where they fell frozen there paralyzed by the shame of original sin pt ',
     ' a swat captain conferring discreetly with the manager manager hes in swat captain call all the guests on the th floor tell them to remain in their rooms tell them its a police order then start on the th and th floors ',
     ' a bourne trying to stabilize to breathe ',
     ' the swat team on their way up ',
     ' a ring ring bourne snaps back as the phone in his room starts to ring four times and it stops bourne freezes footsteps shadows under the door he leans into the peephole bournes pov room german swat team taking position ',
     ' b bourne backs away surveys the room his watch his balance and ',
     ' c quickly turning into a major event halfadozen police vehicles already parked here more arriving every minute passersby mixing with the cops and people from the hotel whove just come out and kirill jogging over from the bmw hes just parked and ',
     ' wham the door kicked off its hinges swat team flooding into bournes empty hotel room and ',
     ' a bourne in motion out the bathroom window and ',
     ' berlin swat leader gives order to search other rooms and ',
     ' bourne up the water pipe to the roof as he arrives a swat team member turns bourne pulls him over the edge fires point blank into the nd swat members vest stunning him hes moving fast scrambling along the roof and into the night ',
     ' wham the door caves in and the swat team moves enters rushing to the window nobody no sign of him and ',
     ' kirill heading for the hotel entrance blocked by the exiting guests ',
     ' too many cops and radios swat team boss trying to take charge listen up were clearing the building room by room ',
     ' pamela jumping out of a van the moment it stops seeing it all the crowd the army of cops the searchlights playing across the hotel facade its another disaster ',
     ' kirill wants to get upstairs he cant too many guests coming down the stairwell berlin cops trying keep it moving and ',
     ' kirill hears bourne is on the roof ',
     ' pamela and cronin listening to teddy who just got the police update teddy black coat possibly leather dark slacks dark tshirt pointing now he says theyre gonna try and corral the guests on the street over there and then check them out but pamela disgusted yeah thatll workwhat the hell was he doing here cronin maybe he just needed a place to spend the night pamela i want to look at the room to teddy as she goes check it out pamelas in charge now they enter the elevator ',
     ' bourne coming around the other side of the hotel stepping to the left before he spots the swat van bourne aboutfaces heads the other way a sidewalk cop looks over checks the bourne photo print out in his hand ',
     ' teddy huddled with the hotel manager and a group of high ranking berlin cops turning back as abbott arriving breathless they missed him teddy so far but they found nicky shes back at the westin bourne let her go abbott he let her go great wheres danny he should head over there and debrief her the hotel whats here what was he doing teddy we dont know theyre in a room upstairs i was told to wait down here abbott accepting that because he has to only we see the fear turns to leave abbott ok if you see danny tell him i went back to the hotel abbott steps out into the street as ',
     ' bourne striding away and following sidewalk cop blowing a whistle fumbling for his holster bourne running now slowly at first and ',
     ' a now faster as if he can gauge his speed and distance ',
     ' motion bourne tearing away and ',
     ' a bourne slows to a walk two patrol cars heading his way no choice there a narrow passageway between two moving trolley trains and sprinting through the patrol cars skidding into s ',
     ' b the river spree lit by the trolley thats rumbling past and the running lights of a double coal barge up the river bourne runs across the bridge going as fast as he can hearing the police sirens swirling behind him when a third and fourth police car ahead bourne turns hard for a stairwell jumps the walkway curb leaps up the stairs two at a time as all four cop cars skid to a stop as doors open ',
     ' a tram waiting as the last few passengers get on the doors seem to stay open in slow motion as bourne appears makes a mad last dash and hes on and the doors dont close its not scheduled to go yet and here come the cops bourne off the tram guns appear bourne runs to his left stops short the other cops are coming this way screaming at him not a lot of options bourne looks over the rail down below a coal barge passing the prow just emerging bourne on the rail and jumping even as the first shot is fired ',
     ' bourne lands hard stands voltage going up one leg and theyre shooting at him he can worry about the leg later he runs back toward them the barge moving slow bourne disappears under the bridge ',
     ' guns aimed police waiting for a clear shot two of them dash to watch over the other side ',
     ' countering the barge going one way bourne the other dodging all the superstructure on deck all the while keeping his cover overhead and leaping to the second barge and more of the same until bourne running out of barge leaping back onto the bridge footing and ',
     ' the police watching the barge fully emerge continuing down river shouting in german that hes either in the water or hiding on the barge off they go down the stairs leaving the passengers on the tram blinking out in shock and bourne climbing back over the rail limping back on the tram just before the doors close and off it goes ',
     ' police converge from both ends barge goes under as kirill arrives at the center of the bridge missed again behind kirill a train snakes off into the night ',
     ' pt pamela and cronin move into the living room a couple of cops in the hallway outside cronin the room he checked into was across the hall why why would he come here pamela glances around something bothering her about this space pamela he mustve had a reason thats how they were trained cronin moves around the bedroom then into the bathroom and cronin he went out the window in here ',
     ' pt there on the mirror scrawled in soap on the glass i killed neski cronin pam you need to see this pamela moves in behind him cronin contd whos neski both of them staring pamela thinking alrighttake it down cronin what pamela this stays between you and i sensing confusion we finally have an edge i dont want to lose it ',
     ' very late abbott waits on an isolated bridge a lone figure in the shadow of east berlin gretkov arrives by car walks through the darkness abbott barely glancing over abbott you told me bourne was dead gretkov there was a mistake abbott ill say you killed his goddam girlfriend instead now theyre onto neski theyre at the brecker hotel even as we speak gretkov will it track back to us abbott no the files are spotless whatever they find its just going to make conklin look worse gretkov and the landy woman abbott shes done everything i wanted she bit on conklin so fast it was laughable she even found his bogus swiss account gretkov anything else abbott shoves a piece of paper and address into gretkovs hand abbott the paper theres a body in the basement danny zorn hes got to disappear for good clean and fast ill put him in bed with conklin and bourne even the girl nicky give me twentyfour hours ill think it up but get the goddamn body out of there its getting late a taxi now and then abbott contd neski was a roadblock without me theres no company no fortune you owe me uri one last push gretkov one last push one gretkov leaves abbott watches him go ',
     ' seconds later gretkov getting in slowly ',
     ' kirill slouched in back waiting gretkov to the driver gretkov airport to kirill were done here kirill nods as they pull away abbott turns and walks into the foggy night ',
     ' a late abbott walks a lonely figure past someone in the shadows bourne mr abbott he turns to answer when bourne firmly guides him into a side street bourneabbott scene ',
     ' as pamela and cronin exit the elevator they are met by teddy teddy heres what ive got reads remember vladimir neski russian politician seven years ago he was due to speak to a group of european oil ministers here at the hotel he never did he was murdered pamela by who teddy his wife in room then she shot herself pamela and cronin share a look pamela to teddy alrighti want you kurt and kim to stay on bourne track everything thats out there teddy goes to get in the van pamela follows with cronin pamela contd confidentially to cronin and i want you to go through and cross reference our buy that went bad the neskis and treadstone as they get in pamela contd they have to be related ',
     ' bournes arrived limping as he continues for the station ',
     ' bourne retrieving the exfil bag he stashed in the locker changed his clothes ',
     ' bag slung limping out bourne has changed clothes a big overcoat knit cap ',
     ' a busy midnight departure big train bourne climbing on the train under the sign moscow express moved ',
     ' a a blueprint spread across a table nicky kurt kim all gathered around cronin works the treadstone files on another table teddy at center briefing pamela teddy were looking at all berlin outbound good news is every train station in berlin has thirty to forty fixed digital security cameras common feed pamela are we hacking or asking teddy yes in that order pamela and what about you anything cronin its starting to link up the hijacked money the leak pecos oil one last bit is treadstone ',
     ' crossing the border into poland cold desolate snow ',
     ' conductors moving quietly through the dark cars checking tickets and visas and bourne hands over his ticket and russian passport off the grid ',
     ' a am kurt kim and teddy spread around the room theyve been running laptop train station videos for hours just about ready to raise the white flag all they have so far is an isolated loop of bourne limping into the mens room cronin watches it stutter along cronin does it look like hes faking teddy on the way in forget it kurt the legs definitely hurt cronin the blueprint well theres no window in the mens room folks so lets find somebody coming out with a bad left leg kurt worn out maybe hes still in there teddy ive got a limping guy but its the right leg kim walking away or walking toward you cronin jumping on that right there over teddys shoulder cronin thats him its the coat what train is that ',
     ' bourne asleep in his chair rocked by the rhythm but something wakes him up looks out the window something weird about the light out there then up to see marie looking at him over the back of his chair in front of him no big deal bourne hey she smiles a beat she comes around sits beside him he looks away out the window bourne contd i wanted to kill him marie but you found another choice bourne i did marie it wouldnt have changed the way you feel bourne it might have bourne looks back at her she smiles he accepts it leans back closes his eyes bourne contd i know its a dream marie you do bourne i only dream about people who are dead marie leans over kisses his forehead whispers bourne contd god i miss you i dont know what to do without you marie softly serenely jason you know exactly what to do that is your mission now bourne opens his eyes and its morning outside and marie is gone a little girl smiles at him from over the back of the chair in front bourne cant meet her gaze for long as he looks back out the window ',
     ' bourne watching the birch trees rush past not quite hiding the smokestacks beyond eyes locked forging something within one final mission as we ',
     ' abbott coming through its empty this early but heres pamela nicky cronin and the team waiting to report pamela sorry to wake you abbott waves off apology i wasnt sleeping to nicky as he passes you ok nicky yeah thanks abbott whats up pamela bunch of stuff pamela looks to cronin him first cronin we tied the room bourne visited tonight to a murdersuicide seven years ago a russian couple the neskis abbott playing along neski the reformer i remember that cronin he championed the equal distribution of oil leases in the caspian sea when he died they were all released to one petroleum company pecos oil guess what the ceo uri gretkov is ex kgb nicky someone was using treadstone as a private cleaning service abbott conklin a beat its im sorry pamela i guess you were right all along pamela waves him off its okay but pamela theres something else abbott can see by their faces this hits closer to home abbott what pamela they found danny zorns body dead in the basement at the building where my people got hit the first time abbott oh god it must have been bourne pamela did he say anything to you abbott no it must have been bourne pamela straight pamela well know for sure when we get the security tapes cronin but we can relax we tracked him hes on a train to moscow abbott reeling hiding it abbott moscow what the hells he going to moscow for pamela shrugs dont know abbott jesus i zorn i have to call his family tell them pamela im sorry ward they watch as he goes ',
     ' abbott in the rising elevator imploding ',
     ' palatial but you cant buy taste gretkov working his computer answers his phone gretkov da abbottphone you didnt stay uri gretkov matter of fact this is not a clean phone ',
     ' everyone still here cronin answering his cell phone motioning to them hes got news cronin phone to his ear youre sure pamela what the tapes cronin nodding but hold on holding the phone yep and abbott just direct dialed moscow from his room now we realize shes set a trap and abbotts walked in all the same pamela shakes her head wishes it wasnt true and theyre moving ',
     ' abbott at his desk still on the phone pouring a vodka gretkov leaving was a business decision were both rich come enjoy it abbott what do you mean gretkov go to the airport get a plane ill have a brass band waiting for you abbott save it for bourne gretkov what theres a knocking at his door abbott simply ignores it abbott he left yesterday on the night train hes probably just getting in now he drinks youll have to hurry gretkov bourne comes here why more knocking abbott good luck ',
     ' a speeding east through the russian countryside the forest is gone replaced by factories and refineries a wasteland of rust and gray that seems to go on forever ',
     ' pamela knocking again nicky teddy and cronin behind her pamela open it cronin with a pass key teddy prepped and ',
     ' a pamela leading they enter stop short abbott at his desk calmly pointing a pistol at pamela abbott they go you stay she looks back cronin shakes his head no pamela yes now they reluctantly obey the door clicking shut behind them abbott sit down pamela id rather stand if its all the same to you abbott i dont exactly know what to say im sorry pamela why would be enough for me abbott im not a traitor ive served my country pamela and pocketed a fair amount of change while doing it abbott why not it was just money pamela and danny zorn what was that abbott had to be done pamela no good options left abbott shrugs in the end honestly its hubris simple hubris you reach a point in this game when the only satisfaction left is to see how clever you are pamela no you lost your way abbott well youre probably right i guess thats all that hubris is he raises the gun pamela presses her lips together closes her eyes boom she opens them and as cronin flies back through the door theres abbott dead at the desk hes shot himself also in a way with some help from bourne ',
     ' the train easing to a stop the platform busy with people waiting and passengers disembarking bourne among them unremarkable in the crowd and ',
     ' bourne on the move welcome to the whole mad moscow scene a jumble of faces and voices travellers arrivals and departures families beggars drunk war vets hawkers ',
     ' there in the plaza bourne hobbling across the street when suddenly a car horn he turns and look out a big black bmw speeding past followed by two more all three cars with blue lights strobing on the dashboards a convoy whipping by like they own the place and taxi driver os gangster bastards dont care what they do bourne turns a grizzled taxi driver right beside him bourne pulls a slip of paper from his pocket bourne his russian is basic you know this address the taxi driver squints finally grunts affirmative he motions to his cab as they get in and pull away ',
     ' lots of cars no people but someone running its kirill pulling his keys as he sprints past and ',
     ' bourne and the taxi driver looking over as three moscow police cars speed by sirens wailing taxi driver its always something right bourne just nods as we ',
     ' kirill at the wheel a guy in a hurry who knows what hes doing one more thing on the passenger seat two big automatic pistols ',
     ' moscow cops fanning through the crowd showing bournes interpol picture have you seen him ',
     ' moscow cops with the picture flashing it around until young cabby the moment he sees it he was just here they just left ',
     ' theyve stopped bourne flashes a fifty dollar bill bourne you wait you understand stay taxi driver happy to pocket the cash sure no problem i sit ',
     ' old moscow but not for long theres new construction metastasizing all around it bourne crosses the street and his pov an abandoned wooden house windows shattered and boarded up paint all but gone roof and gables all failing back to bourne crestfallen checking the address this is it ',
     ' more cops everything focused on another taxi driver whos making a call on a cell phone everybody waiting on it ',
     ' bourne off the sidewalk now peering around the side trying to see if theres anything around back and over there an old woman on the steps next door watching him bourne starts over finding the sweetest smile hes got ',
     ' the taxi driver still parked there his pov bourne and the old lady shes pointing like shes giving directions when suddenly the drivers cell phone rings taxi driverphone hello ',
     ' bourne and the old lady his russian is limited but shes charmed nonetheless bourne a pento writeone minute searching his pockets ',
     ' the taxi driver on the phone not so happy anymore taxi driver im looking at him american hes right here ',
     ' the old lady scribbling on a piece of paper bourne reacting as the taxi drops into gear pulls away bourne wait hey but the taxi only speeds up and ',
     ' moscow police cars tearing away and ',
     ' kirill driving reaching for his ringing phone and ',
     ' the black bmw a moment later slamming on the brakes fishtailing a uturn and ',
     ' bourne hustling past all the new construction glancing back as police sirens start rising behind him and ',
     ' kirill skidding around another corner and ',
     ' two police cars just stopped there cops the old lady pointing everyone turning as the red lexus speeds past them and ',
     ' bourne coming down as fast as he can just ahead theres a footpath beneath a four lane overpass a neighborhood on the other side he could disappear there ',
     ' kirill driving and scanning there as he passes it the overpass slamming on the brakes and ',
     ' bourne hobbling out in the open twenty yards to go ',
     ' kirill jumping out of the lexus with a pistol in hand and ',
     ' bourne no clue bang his shoulder hes hit he throws himself forward and ',
     ' kirill shifting for a better second shot and ',
     ' bourne hes diving rolling pure instinct back under the embankment and ',
     ' kirill with no shot suddenly leaning over the rail just as the two moscow police cars come screaming up moscow cops jumping out with guns drawn and ',
     ' bourne hes up hes bleeding hes moving and ',
     ' chaos kirill with his hands in the air moscow cops coming toward him everyone screaming moscow cops mockbourne up hands up keep im kgb assholes them up drop the gun were chasing the same guy drop it hes getting away they let kirill go he looks back at the footpath bourne is gone as ',
     ' a gretkov strolls along suddenly two black sedans pull up and he is arrested ',
     ' a bourne hurriedly makes his way to the other end a few beats later kirill on the hunt ',
     ' a labyrinth of stalls food hardware clothes and crowded even this hardtoimpress crowd noticing bourne hobbling through nothing like a limping madman with a fresh gunshot wound to get attention people back off pull their kids out of the way some woman starts screaming and ',
     ' a security guard hears the commotion jogs out and ',
     ' kirill running toward the market five moscow cops behind him cant keep up and ',
     ' the security guard coming up fast behind bourne security guard hey hey you stop bourne turns the security guard right behind him and bourne no warning his good arm smash right into the security guards face and bourne takes his pistol and the crowd they jump holy shit ',
     ' crazy kirill sprinting through where did bourne go ',
     ' bourne back on the march except now hes shopping grabbing a bundle of tube socks and ',
     ' kirill sprinting out toward the stalls and ',
     ' bourne there a roll of duct tape and a bottle of vodka and ',
     ' kirill fighting his way through the fleeing crowd ',
     ' pt bourne leaving the market taking a swig of vodka and continues knows there are two new cops on his ass ',
     ' pt another cab stand cabbie by a yellow cab looks up to see bourne coming toward him and also the two cops as bourne nears the cabbie shakes his head bourne pivots casually like he doesnt know theyre coming until he spits vodka into one of the cops face blinded as bourne takes him and his partner out the cabbie raises his hands in surrender steps aside as bourne takes his car ',
     ' pt bourne in the yellow cab starting the engine peeling away careening into the street and kirill sprinting into the parking lot just in time to see ',
     ' pt bourne concentrating away the pain trying to drive ',
     ' two ladies ducked behind a big black gwagon freaked out as kirill grabs their keys and ',
     ' the cab speeding across a boulevard into an older neighborhood of rising narrow streets and two moscow police cars pulling uturns on the boulevard whipping around to give chase and the gwagon in full pursuit now and bourne driving up this curving little hill and the two moscow police cars starting to climb and kirill driving and hes on the hill now bourne bad hand on the wheel holding on trying to find something in passenger seat tube socks the two moscow police cars splitting up one on bournes ass the other cutting hard into a side street flanking him and bourne topping the hill two choices right or left right no wrong because down the hill theres a police car just about to angle in from the sidestreet and bourne no choice flooring it the cab its a whale slam knifing the front end of the police car and the police car spun back crashing against a building on the corner and kirill right behind that guy swerving onto the sidewalk sparks from the wall as he scrapes hanging in skidding into a turn down the hill and just missing the first police car bombing right past him bourne in pain as he packs his shoulder wound with the socks ahead the street banks downhill to left and there a boulevard wide ride lots of traffic and the cab rocketing into the flow and behind him police car with the gwagon right on his ass and bourne wrists flicking the wheel the cab screaming through the slower traffic and kirill totally on it pedal down passenger window open wind blowing hes got the pistol in his hand closing the gap and the black gwagon blowing past police car and bourne steering barely as he tears a few strips of duct tape to finish his triage blam blam the gwagon right beside him bourne reacting what the fuck thats not a cop but no time to clock kirill because kirill shit cant keep shooting into the oncoming lanes swinging wide a truck swerving again and the cab wavering again rallying and up ahead the boulevard opens into the river beltway big wide fast kremlin in the bg and four new police cars screaming down from red square and bourne skidding onto the beltway looking for room finding it open road kirill back in the hunt and the river beltway cab screaming past then one two three four police cars now the black gwagon and bourne both hands on the wheel hes already forgotten about his shoulder the beltway up ahead another choice right takes you up to the city left is a transit tunnel and bourne checking his rearview starting right and the two lead police cars right on his ass and bourne fake out veering left last second into the tunnel and the two lead police cars wrong and worse trying to change crash spinning and its not just them a third police car caught in the clutter not to mention the commuters crash the police are out of the race kirill not fooled threading the needle through the carnage and into ',
     ' four lanes two way and long theres the cab squibbing past slower cars and kirill on him move for move follow the leader and bourne checks the rearview hes lost them all but the gwagon who the hell is that the heavyweights world championship belt up for grabs kirill gaining nearly pulling level bourne nowhere to go thats never stopped him before he carves a path turns two lanes into three as sparks his way through a lane split the gwagon roaring after him bourne checks the mirror closer who the hell is that guy kirill gaining firing through his passenger window bourne brakes tunnel as the two vehicles scrape along each other kirill firing back odd angle bourne ducking for meager cover as bullets stitch through the roof tunnel the gwagon crushes the cab against the wall sparks showering the windshield finally the cab shoots ahead kirill in a controlled fury the suv jerking hard and right into the rear of the cab bourne trying to keep control spots a maintenance truck up ahead kirill banging away as his quarry straightens maintenance truck looming bourne a hard left tunnel the cab wrapping around the front of the suv wham pushing it to the right the cab continues spinning around the gwagon details front bumpers locking on rear fenders as tunnel the gwagon hurtling forward the cab ass end first locked together kirill firing into the cab really unloading now bourne down on the floor a tornado overhead kirill slaps in a new clip intense bourne gun against his door just below the window knob whumpwhumpwhump suv tire shredding kirill fights the wheel another truck looming large bourne looking between the seats out the rear window a lane dividing pillar ahead cab as bourne sits up jerks the wheel to the right tunnel the cars unlock spin away from each other kirill focused taking deadly aim bourne staring back at him calm i know something you dont know kirill frowns the truck swerves to reveal the pillar to kirills pov kirill eyes go wide whallop steel vs concrete concrete victorious a bone compressing truly horrendous impact bourne whipping the wheel cab spinning to a stop out of harms way door opening ',
     ' gun ready bourne heads over ahead spam in a can bourne crouches down looks in kirill bloody beattocrap barely alive but trapped entombed alive by the metal crushed around him bourne watches not here to help kirill looks over calms a moment as the two men consider each other bourne looks at him long and hard kirill dies and bourne stands and just walks away ',
     ' a snow swirls pamela disembarks from the g or us military plane she is met by russian officials ',
     ' huge awful sovietera housing towers fill the horizon a city bus grinds to a stop people trundle off working people at the end of their day tired cold a girl trudging a manmade wasteland twenty a proud little waif sad eyes home from some job irena ',
     ' grimmer up close rusted steel mesh over the windows drunk teenagers a haze of cigarette smoke irena pushing through doesnt want to talk to anyone ',
     ' irena climbing a junkie here flickering light there ',
     ' irena her key at the door domestic disturbance playing across the hall she opens up and ',
     ' its dark and shes barely through the door when irena jumps chokes back a cry bourne is standing there propped there actually behind her gun in hand motioning for her to be quiet bourne his shabby russian quiet silence okay irena nods scared gun in hand bourne pushes the door the last few inches so its fully closed irena i have no money no drugs is that what you want and now she can really see him hes a disaster shivering bloody eyes more hollow than hers are bourne sit can you trying to conjure the russian the chair have the chair irena accented i speak english bourne staring at her nods gestures for her to sit bourne please so she does and here they are bourne contd contd of all the people in the world youre the only one i have anything to offer hesitating thats why i came here irena shes terrified okay hes got something beside him something hes taken off the wall its the photograph the neski family same as the one that was in the hotel brecker mom dad and irena arms around each other in front of the house before it was abandoned happy smiling perfect bourne its nice a beat does this picture mean anything to you no answer hmm irena its nothing its just a picture bourne no its because you dont know how they died irena he couldnt understand no i do a change in bourne as he studies her measures her some moment of truth is here irena braces unsure bourne i would want to know beat i would want to know that my mother didnt kill my father i would want to know that she didnt kill herself irena what she really looks at him now fear overwhelmed by curiosity bourne i would grow up thinking that they didnt love me if they just left me like that irena making sure her eyes dont leave his they dont bourne contd contd it changes things that knowledge doesnt it irena wary yes bourne thats not what happened to your parents irena then what bourne i killed them body blows but he has her attention she wipes a tear bourne contd it was my job my first time your father was supposed to be alone but then your mother she came out of nowhere a little shrug i had to change my plan beat you understand me does she you dont have to live like that anymore thinking that irena you killed them bourne nods thats right bourne they loved you beat and i killed them irena howhow canhow can you be here and say this bourne i dont want you to forgive me she stands suddenly stands because if she doesnt shell burst into tears because she knows if she starts crying she wont be able to make sense of this irena for who he doesnt answer killed for who bourne pushes himself to his feet a real effort bourne it doesnt matter your life is hard enough irena youre a liar bourne you know im not irena youre a liar bourne look at me there they are two people standing in a room squared off and now she starts crying really crying and hes taking it irena i should kill youif its true you should diei should kill you now bourne i cant let you do that either irena because youre afraid bourne no starting for the door because you dont want to know how it feels she hesitates stunned hes leaving hes opening the door bourne contd i have to go now irena is this really happening bourne empty im sorry and she sags back into the chair as the photograph on the table the sound of the door closing and irena crying as ',
     ' bourne trudging along across the snow hes done it and he really cant take another step theres a bench he sits down out of gas he just might die here we slowly tilt up to the multi colored moscow tenements fade out ',
     ' bourne waking up sitting up where is he trying to get his bearings but its so bright white walls sheets sunshine through clean windows and pamela os hello david there she is standing at the foot of his bed bourne where am i pamela ramstein air base germany smiles before the wall fell you would have woken up in a russian prison hospital he looks around tries to move hammered by pain bourne oh shit pamela careful long moment hes taking it in trying to bourne why am i alive pamela are you disappointed they study each other a beat bourne i know who you are pamela nods very calm here no sudden movements pamela thank you for your gift im sorry about marie bourne whats that pamela do you think you can read are you well enough she has a folder a photograph bournes face stapled to the cover pamela contd its all in here treadstone a summary of your life all of it he waves it off bourne dont need it i remember everything pamela smiles again sounds like a threat bourne you didnt answer my question pamela why youre alive beat youre alive because youre special because she kept you alive she smiles because we want you back on our side bourne silent but hearing it pamela leaves the file pamela contd contd take a look at it well talk later bourne watching her back away as she exits into ',
     ' long sterile hallway cronin and nicky standing there with an air force sentry assigned to guard the room cronin and nicky trying to play it cool but now as they get some distance down the hallway pamela to the sentry lets give him half an hour nicky quietly so pamela felt promising its a start a chill in the air both of them going quiet because theres a nurse carrying a tray of food shes coming toward us theyre walking away staying with the nurse now coming up the hall the sentry smiles opens the door and she enters ',
     ' empty bed open window bourne is gone as the music starts pumping and we ',
     ' off he goes disappearing into thin air fade out the end ']
</pre>
</div>
<br>
<h4 id="2-bow-bag-of-words-벡터-생성"><a class="markdownIt-Anchor" href="#2-bow-bag-of-words-벡터-생성"></a> (2) BoW (Bag of Words) 벡터 생성</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter stop words</span></span><br><span class="line">vect = CountVectorizer(tokenizer=<span class="literal">None</span>, stop_words=<span class="string">'english'</span>, analyzer=<span class="string">'word'</span>).fit(corpus)</span><br><span class="line"><span class="comment"># tokenize: 문장을 단어로 나누는 기준; stop_words: 불용어 설정</span></span><br><span class="line"></span><br><span class="line">bow_vect = vect.fit_transform(corpus) <span class="comment"># BoW 벡터 생성</span></span><br><span class="line">word_list = vect.get_feature_names()</span><br><span class="line">count_list = bow_vect.toarray().sum(axis=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 등장한 단어 list</span></span><br><span class="line"></span><br><span class="line">word_list</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    ['aa',
     'ab',
     'abandoned',
     'abandons',
     'abbott',
     'abbottnow',
     'abbottphone',
     'abbotts',
     'abend',
     'able',
     'aboott',
     'aboutfaces',
     'absolutely',
     'abyss',
     'accelerating',
     'accented',
     'accepting',
     'accepts',
     'access',
     'accompanying',
     'accomplished',
     'account',
     'acknowledged',
     'act',
     'activity',
     'actually',
     'address',
     'adjust',
     'adrenaline',
     'affirmative',
     'afford',
     'afraid',
     'afternoon',
     'againi',
     'agencies',
     'agency',
     'agent',
     'agents',
     'agitated',
     'ago',
     'agreement',
     'agrees',
     'ah',
     'ahead',
     'aim',
     'aimed',
     'air',
     'airport',
     'alarm',
     'alert',
     'alexanderplatz',
     'alive',
     'alley',
     'alleys',
     'allocation',
     'allpoints',
     'alongside',
     'alps',
     'alright',
     'alrighti',
     'alrighttake',
     'american',
     'ammo',
     'amnesia',
     'amused',
     'anger',
     'angle',
     'ankle',
     'anonymous',
     'answer',
     'answering',
     'answers',
     'anymore',
     'anythings',
     'apology',
     'appealing',
     'appear',
     'appearing',
     'appears',
     'approached',
     'approaches',
     'approaching',
     'archive',
     'archives',
     'area',
     'arm',
     'armed',
     'arms',
     'army',
     'arrested',
     'arrivals',
     'arrived',
     'arrives',
     'arriving',
     'article',
     'asap',
     'ashes',
     'aside',
     'ask',
     'asked',
     'asking',
     'asks',
     'asleep',
     'ass',
     'assassinated',
     'assholes',
     'assigned',
     'assignment',
     'assistant',
     'associated',
     'attempt',
     'attention',
     'autobahn',
     'automatic',
     'available',
     'aware',
     'away',
     'awful',
     'awhile',
     'ba',
     'backhanding',
     'backing',
     'backpack',
     'backpacks',
     'backs',
     'backseat',
     'backyard',
     'bad',
     'bag',
     'bags',
     'bail',
     'bailing',
     'bakery',
     'balance',
     'ball',
     'balling',
     'band',
     'bang',
     'banging',
     'bank',
     'banking',
     'banks',
     'bar',
     'barely',
     'bargain',
     'barge',
     'barn',
     'base',
     'basement',
     'basic',
     'basically',
     'bastards',
     'bathroom',
     'battery',
     'bb',
     'bc',
     'beach',
     'bearing',
     'bearings',
     'beat',
     'beats',
     'beattocrap',
     'bed',
     'bedroom',
     'beep',
     'beeping',
     'beggars',
     'begging',
     'begin',
     'begins',
     'behavior',
     'behaviors',
     'believe',
     'believed',
     'belongings',
     'belt',
     'beltway',
     'bench',
     'bends',
     'beneath',
     'berlin',
     'better',
     'bg',
     'big',
     'bigger',
     'binders',
     'binocular',
     'birch',
     'bit',
     'bits',
     'black',
     'blade',
     'blades',
     'blam',
     'blaming',
     'blamm',
     'blank',
     'bleeding',
     'blending',
     'blinded',
     'blindsided',
     'blinking',
     'blinks',
     'block',
     'blocked',
     'blocking',
     'blocks',
     'blonde',
     'blood',
     'bloody',
     'blow',
     'blowing',
     'blown',
     'blows',
     'blue',
     'blueprint',
     'blur',
     'blurry',
     'bmw',
     'board',
     'boarded',
     'body',
     'bogus',
     'bomb',
     'bombing',
     'bone',
     'book',
     'boom',
     'booooomm',
     'booth',
     'border',
     'boss',
     'bothering',
     'bottle',
     'boulevard',
     'bouncing',
     'bound',
     'bourne',
     'bourneabbott',
     'bournephone',
     'bournes',
     'box',
     'boxed',
     'boxes',
     'braced',
     'braces',
     'bracing',
     'brakes',
     'brandenburg',
     'brass',
     'breakdown',
     'breaker',
     'breaking',
     'breaks',
     'breath',
     'breathe',
     'breathing',
     'breathless',
     'brecker',
     'bridge',
     'briefcase',
     'briefed',
     'briefing',
     'bright',
     'bring',
     'briskly',
     'bristles',
     'broadcoasting',
     'bruise',
     'budget',
     'building',
     'bulge',
     'bulging',
     'bulkhead',
     'bullet',
     'bulletin',
     'bullets',
     'bullpen',
     'bumpers',
     'bunch',
     'bundle',
     'burly',
     'burn',
     'burning',
     'burst',
     'bus',
     'business',
     'bust',
     'busted',
     'busy',
     'button',
     'buttoning',
     'buy',
     'buying',
     'buzzkill',
     'cab',
     'cabbie',
     'cabby',
     'cabin',
     'cabinet',
     'cable',
     'cabled',
     'caffeine',
     'calculated',
     'calendar',
     'caliber',
     'called',
     'calling',
     'calls',
     'calm',
     'calmly',
     'calms',
     'came',
     'camera',
     'cameras',
     'campground',
     'canhow',
     'canvas',
     'cap',
     'captain',
     'caption',
     'car',
     'carabinieri',
     'carabinieris',
     'card',
     'cards',
     'care',
     'careening',
     'careful',
     'carefully',
     'careless',
     'carnage',
     'carries',
     'carrying',
     'cars',
     'carves',
     'cascading',
     'case',
     'cash',
     'caspian',
     'caspiexpetroleum',
     'cast',
     'casual',
     'casually',
     'catches',
     'catching',
     'caught',
     'cause',
     'caution',
     'caves',
     'cd',
     'cell',
     'cellphone',
     'cement',
     'center',
     'ceo',
     'certainly',
     'chair',
     'chairs',
     'chalkboard',
     'championed',
     'championship',
     'chance',
     'change',
     'changed',
     'changes',
     'chaos',
     'charge',
     'charges',
     'charmed',
     'chase',
     'chasing',
     'chatter',
     'chatting',
     'check',
     'checked',
     'checking',
     'checkoff',
     'checks',
     'cherbourg',
     'childlike',
     'chill',
     'chilly',
     'chinese',
     'chirping',
     'choice',
     'choices',
     'chokehold',
     'chokes',
     'chop',
     'choreographed',
     'christ',
     'chucked',
     'chugging',
     'ci',
     'cia',
     'cigarette',
     'cigarettes',
     'cinch',
     'circles',
     'city',
     'civvies',
     'claimed',
     'clean',
     'cleaning',
     'clear',
     'clearance',
     'clearing',
     'clearly',
     'clears',
     'clenching',
     'clerk',
     'clerks',
     'clever',
     'click',
     'clicking',
     'clicks',
     'cliff',
     'climb',
     'climbing',
     'clip',
     'clipping',
     'clock',
     'clogging',
     'cloned',
     'close',
     'closed',
     'closequarter',
     'closer',
     'closes',
     'closing',
     'clothes',
     'club',
     'clubhouse',
     'clue',
     'cluster',
     'clutter',
     'cluttered',
     'coal',
     'coat',
     'code',
     'coding',
     'coffee',
     'cold',
     'colonial',
     'colored',
     'come',
     'comes',
     'comfortable',
     'coming',
     'comm',
     'command',
     'commanders',
     'common',
     'commotion',
     'communications',
     'commuters',
     'companies',
     'company',
     'comparison',
     'complaining',
     'compressing',
     'compulsive',
     'computer',
     'computers',
     'comrade',
     'concentrating',
     'concentric',
     'concerned',
     'concerning',
     'concierge',
     'concrete',
     'condition',
     'conditions',
     'conductors',
     'conferring',
     'confidentially',
     'confirm',
     'confusion',
     'conjunction',
     'conjure',
     'conklin',
     'conklins',
     'connections',
     'consider',
     'considering',
     'consist',
     'console',
     'construction',
     'consulate',
     'contact',
     'contd',
     'continents',
     'continues',
     'continuing',
     'contract',
     'control',
     'controlled',
     'converge',
     'conversation',
     'convinced',
     'convoy',
     'coo',
     'cool',
     'cooly',
     'coordinate',
     'cop',
     'cops',
     'corner',
     'corral',
     'corridor',
     'cots',
     'cottage',
     'coughing',
     'counter',
     'countering',
     'counterintelligence',
     'counting',
     'country',
     'countryside',
     'couple',
     'course',
     'courtesy',
     'cover',
     'covered',
     'covering',
     'coworkers',
     'cranking',
     'cranks',
     'crap',
     'crash',
     'crashes',
     'crashing',
     'crazy',
     'credentials',
     'credit',
     'creepy',
     'crestfallen',
     'crewcut',
     'crime',
     'crinkles',
     'crisp',
     'crissake',
     'cronin',
     'croninradio',
     'cross',
     'crosses',
     'crossing',
     'crouches',
     'crowd',
     'crowded',
     'cruising',
     'crush',
     'crushed',
     'crushes',
     'crying',
     'cuffed',
     'cuffs',
     'cup',
     'curb',
     'curiosity',
     'curious',
     'curtains',
     'curving',
     'customs',
     'cut',
     'cuts',
     'cutting',
     'cyrillic',
     'da',
     'dad',
     'damn',
     'dangerous',
     'dangle',
     'daniel',
     'danka',
     'danny',
     'dark',
     'darkened',
     'darkness',
     'dash',
     'dashboards',
     'data',
     'database',
     'date',
     'david',
     'day',
     'days',
     'dead',
     'deadly',
     'deal',
     'dealing',
     'death',
     'debrief',
     'debriefed',
     'decent',
     'decide',
     'decided',
     'decision',
     'decives',
     'deck',
     'deep',
     'defensive',
     'defiant',
     'definitely',
     'definitive',
     'delta',
     'deltas',
     'departure',
     'departures',
     'depression',
     'deputy',
     'descend',
     'deserted',
     'desk',
     'desolate',
     'desperation',
     'destiny',
     'destroy',
     'destroys',
     'detailed',
     'details',
     'detained',
     'determined',
     'detonation',
     'device',
     'diagnosis',
     'diagnostic',
     'dial',
     'dialed',
     'did',
     'didi',
     'didjason',
     'didnt',
     'die',
     'died',
     'diei',
     'dies',
     'different',
     'digital',
     'digs',
     'direct',
     'directions',
     'directly',
     'director',
     'disappear',
     'disappearing',
     'disappears',
     'disappointed',
     'disaster',
     'discreet',
     'discreetly',
     'disembark',
     'disembarking',
     'disembarks',
     'disgusted',
     'dishes',
     'disputing',
     'distance',
     'distinctive',
     'distribution',
     'disturbance',
     'ditch',
     'dividing',
     'diving',
     'dobermans',
     'doctor',
     'document',
     'dod',
     'dodging',
     'dods',
     'does',
     'doesnt',
     'doing',
     'dollar',
     'dollars',
     'domestic',
     'dominant',
     'dominates',
     'donnie',
     'dont',
     'door',
     'doorbell',
     'doorman',
     'doors',
     'doorway',
     'double',
     'doublecrossed',
     'doubt',
     'downhill',
     'downs',
     'dozens',
     'drab',
     'drawn',
     'dread',
     'dream',
     'dresser',
     'drifting',
     'drill',
     'drills',
     'drink',
     'drinks',
     'drive',
     'driver',
     'driverphone',
     'drivers',
     'drives',
     'driving',
     'drone',
     'drop',
     'dropping',
     'drops',
     'drugs',
     'drunk',
     'ducked',
     'ducking',
     'duct',
     'dude',
     'dudes',
     'duffel',
     'duffle',
     'dumping',
     'dunk',
     'ear',
     'earlier',
     'early',
     'earpiece',
     'ears',
     'easing',
     'east',
     'easy',
     'eat',
     'edge',
     'edges',
     'ef',
     'effective',
     'effort',
     'effortless',
     'electric',
     'electrical',
     'element',
     'elevator',
     'eluded',
     'embankment',
     'embarrassed',
     'emerge',
     'emergency',
     'emerges',
     'emerging',
     'emphatic',
     'emptied',
     'end',
     'ends',
     'energy',
     'engine',
     'engines',
     'english',
     'enjoy',
     'enter',
     'entering',
     'enters',
     'entombed',
     'entrance',
     'entrances',
     'equal',
     'equally',
     'escape',
     'escort',
     'ether',
     'europe',
     'european',
     'euros',
     'evac',
     'event',
     'everybody',
     'everyday',
     'evidence',
     'ex',
     'exactly',
     'exceptionally',
     'excited',
     'excuse',
     'exfil',
     'exit',
     'exiting',
     'exits',
     'exnavyseal',
     'expensive',
     'expert',
     'explosion',
     'explosive',
     'express',
     'extreme',
     'extremely',
     'eye',
     'eyes',
     'facade',
     'facades',
     'face',
     'faces',
     'fact',
     'factories',
     'factoring',
     'fade',
     'fading',
     'fail',
     'failed',
     'failing',
     'fair',
     'fake',
     'fakes',
     'faking',
     'fall',
     'fallen',
     'falling',
     'falls',
     'familiar',
     'families',
     'family',
     'fan',
     'fanning',
     'far',
     'fast',
     'faster',
     'father',
     'fatherly',
     'fault',
     'faux',
     'favorite',
     'fax',
     'fear',
     'feed',
     'feeding',
     'feel',
     'feels',
     'feet',
     'fell',
     'felt',
     'fender',
     'fenders',
     'fernsehturm',
     'ferry',
     'field',
     'fiftyeuro',
     'fighting',
     'fights',
     'figure',
     'file',
     'filei',
     'files',
     'fileyour',
     'filing',
     'filling',
     'fills',
     'final',
     'finally',
     'financial',
     'finding',
     'finds',
     'fine',
     'finger',
     'fingerprint',
     'fingers',
     'finish',
     'finished',
     'finishes',
     'finishing',
     'fired',
     'fires',
     'firing',
     'firmly',
     'fishing',
     'fishtailing',
     'fix',
     'fixed',
     'flag',
     'flames',
     'flanking',
     'flash',
     'flashback',
     'flashes',
     'flashing',
     'flat',
     'flatout',
     'fleeing',
     'flexcuffs',
     'flicker',
     'flickering',
     'flicking',
     'flies',
     'flight',
     'flights',
     'flimsy',
     'flips',
     'floated',
     'flood',
     'flooding',
     'floor',
     'flooring',
     'floors',
     'flow',
     'fly',
     'flying',
     'focused',
     'focusing',
     'foggy',
     'folder',
     'folding',
     'folks',
     'follow',
     'followed',
     'following',
     'follows',
     'food',
     'fooled',
     'foot',
     'footing',
     'footlocker',
     'footpath',
     'footstep',
     'footsteps',
     'force',
     'foreboding',
     'forehead',
     'forest',
     'forever',
     'forget',
     'forging',
     'forgive',
     'forgotten',
     'fork',
     'forlorn',
     'forties',
     'fortune',
     'forward',
     'fourgam',
     'fourth',
     'frantic',
     'freaked',
     'free',
     'freezes',
     'freezing',
     'frequency',
     'fresh',
     'fridge',
     'friendly',
     'friends',
     'frowns',
     'frozen',
     'frustration',
     'fry',
     'fuck',
     'fucking',
     'fully',
     'fumbling',
     'funky',
     'furious',
     'fury',
     'fusty',
     'futile',
     'gables',
     'gadgetry',
     'gaining',
     'game',
     'gangster',
     'gap',
     'gas',
     'gasolinestoked',
     'gasping',
     'gassoaked',
     'gate',
     'gathered',
     'gathering',
     'gauge',
     'gaze',
     'gear',
     'gears',
     'geneva',
     'genevai',
     'genoa',
     'gentlemen',
     'german',
     'germans',
     'germany',
     'gestures',
     'gets',
     'getting',
     'gift',
     'gimme',
     'girl',
     'girlfriend',
     'girls',
     'given',
     'gives',
     'giving',
     'glacial',
     'glance',
     'glanced',
     'glances',
     'glancing',
     ...]
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어의 씬별 등장 횟수</span></span><br><span class="line"></span><br><span class="line">bow_vect.toarray()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">bow_vect.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 2850)
</code></pre>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어의 총 등장 횟수 (모든 씬에서의 등장 횟수의 합)</span></span><br><span class="line"></span><br><span class="line">count_list  <span class="comment"># BoW array의 각 column에 대해서 모든 row의 합을 구하기</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([ 3,  3,  2, ...,  1, 42,  3], dtype=int64)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "단어" - "총 등장 횟수" Matching</span></span><br><span class="line"></span><br><span class="line">word_count_dict = dict(zip(word_list, count_list))</span><br><span class="line">word_count_dict</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    {'aa': 3,
     'ab': 3,
     'abandoned': 2,
     'abandons': 1,
     'abbott': 128,
     'abbottnow': 1,
     'abbottphone': 4,
     'abbotts': 3,
     'abend': 2,
     'able': 1,
     'aboott': 1,
     'aboutfaces': 1,
     'absolutely': 1,
     'abyss': 1,
     'accelerating': 1,
     'accented': 1,
     'accepting': 1,
     'accepts': 1,
     'access': 3,
     'accompanying': 1,
     'accomplished': 1,
     'account': 3,
     'acknowledged': 1,
     'act': 1,
     'activity': 2,
     'actually': 3,
     'address': 3,
     'adjust': 1,
     'adrenaline': 1,
     'affirmative': 1,
     'afford': 1,
     'afraid': 1,
     'afternoon': 1,
     'againi': 1,
     'agencies': 1,
     'agency': 5,
     'agent': 2,
     'agents': 2,
     'agitated': 1,
     'ago': 10,
     'agreement': 2,
     'agrees': 1,
     'ah': 1,
     'ahead': 17,
     'aim': 1,
     'aimed': 1,
     'air': 9,
     'airport': 2,
     'alarm': 3,
     'alert': 1,
     'alexanderplatz': 3,
     'alive': 9,
     'alley': 2,
     'alleys': 1,
     'allocation': 1,
     'allpoints': 1,
     'alongside': 1,
     'alps': 1,
     'alright': 2,
     'alrighti': 1,
     'alrighttake': 1,
     'american': 4,
     'ammo': 1,
     'amnesia': 5,
     'amused': 1,
     'anger': 1,
     'angle': 2,
     'ankle': 1,
     'anonymous': 3,
     'answer': 8,
     'answering': 1,
     'answers': 7,
     'anymore': 3,
     'anythings': 1,
     'apology': 2,
     'appealing': 1,
     'appear': 1,
     'appearing': 1,
     'appears': 1,
     'approached': 1,
     'approaches': 2,
     'approaching': 1,
     'archive': 1,
     'archives': 2,
     'area': 5,
     'arm': 2,
     'armed': 2,
     'arms': 3,
     'army': 1,
     'arrested': 1,
     'arrivals': 1,
     'arrived': 3,
     'arrives': 8,
     'arriving': 3,
     'article': 1,
     'asap': 1,
     'ashes': 1,
     'aside': 2,
     'ask': 1,
     'asked': 1,
     'asking': 2,
     'asks': 1,
     'asleep': 1,
     'ass': 7,
     'assassinated': 2,
     'assholes': 1,
     'assigned': 1,
     'assignment': 1,
     'assistant': 1,
     'associated': 1,
     'attempt': 1,
     'attention': 3,
     'autobahn': 1,
     'automatic': 3,
     'available': 1,
     'aware': 1,
     'away': 48,
     'awful': 3,
     'awhile': 2,
     'ba': 2,
     'backhanding': 1,
     'backing': 5,
     'backpack': 4,
     'backpacks': 2,
     'backs': 2,
     'backseat': 4,
     'backyard': 1,
     'bad': 5,
     'bag': 18,
     'bags': 2,
     'bail': 1,
     'bailing': 2,
     'bakery': 1,
     'balance': 2,
     'ball': 1,
     'balling': 1,
     'band': 1,
     'bang': 1,
     'banging': 1,
     'bank': 3,
     'banking': 1,
     'banks': 1,
     'bar': 1,
     'barely': 8,
     'bargain': 1,
     'barge': 9,
     'barn': 1,
     'base': 2,
     'basement': 2,
     'basic': 1,
     'basically': 1,
     'bastards': 1,
     'bathroom': 7,
     'battery': 1,
     'bb': 2,
     'bc': 1,
     'beach': 10,
     'bearing': 1,
     'bearings': 1,
     'beat': 22,
     'beats': 2,
     'beattocrap': 1,
     'bed': 9,
     'bedroom': 2,
     'beep': 2,
     'beeping': 2,
     'beggars': 1,
     'begging': 4,
     'begin': 2,
     'begins': 9,
     'behavior': 1,
     'behaviors': 1,
     'believe': 4,
     'believed': 6,
     'belongings': 1,
     'belt': 1,
     'beltway': 4,
     'bench': 1,
     'bends': 1,
     'beneath': 1,
     'berlin': 37,
     'better': 7,
     'bg': 1,
     'big': 17,
     'bigger': 3,
     'binders': 1,
     'binocular': 1,
     'birch': 1,
     'bit': 6,
     'bits': 1,
     'black': 15,
     'blade': 1,
     'blades': 1,
     'blam': 2,
     'blaming': 1,
     'blamm': 1,
     'blank': 2,
     'bleeding': 1,
     'blending': 1,
     'blinded': 1,
     'blindsided': 1,
     'blinking': 2,
     'blinks': 2,
     'block': 3,
     'blocked': 2,
     'blocking': 2,
     'blocks': 1,
     'blonde': 1,
     'blood': 6,
     'bloody': 2,
     'blow': 1,
     'blowing': 4,
     'blown': 3,
     'blows': 4,
     'blue': 3,
     'blueprint': 2,
     'blur': 3,
     'blurry': 1,
     'bmw': 4,
     'board': 2,
     'boarded': 1,
     'body': 9,
     'bogus': 1,
     'bomb': 1,
     'bombing': 1,
     'bone': 1,
     'book': 2,
     'boom': 1,
     'booooomm': 1,
     'booth': 3,
     'border': 2,
     'boss': 2,
     'bothering': 1,
     'bottle': 3,
     'boulevard': 4,
     'bouncing': 1,
     'bound': 1,
     'bourne': 455,
     'bourneabbott': 1,
     'bournephone': 5,
     'bournes': 29,
     'box': 5,
     'boxed': 1,
     'boxes': 1,
     'braced': 1,
     'braces': 1,
     'bracing': 2,
     'brakes': 3,
     'brandenburg': 1,
     'brass': 1,
     'breakdown': 1,
     'breaker': 1,
     'breaking': 1,
     'breaks': 1,
     'breath': 2,
     'breathe': 1,
     'breathing': 1,
     'breathless': 1,
     'brecker': 9,
     'bridge': 13,
     'briefcase': 8,
     'briefed': 1,
     'briefing': 1,
     'bright': 2,
     'bring': 2,
     'briskly': 2,
     'bristles': 1,
     'broadcoasting': 1,
     'bruise': 1,
     'budget': 1,
     'building': 20,
     'bulge': 1,
     'bulging': 1,
     'bulkhead': 2,
     'bullet': 1,
     'bulletin': 1,
     'bullets': 2,
     'bullpen': 5,
     'bumpers': 1,
     'bunch': 1,
     'bundle': 1,
     'burly': 1,
     'burn': 1,
     'burning': 2,
     'burst': 1,
     'bus': 3,
     'business': 3,
     'bust': 1,
     'busted': 1,
     'busy': 7,
     'button': 1,
     'buttoning': 1,
     'buy': 7,
     'buying': 2,
     'buzzkill': 1,
     'cab': 24,
     'cabbie': 3,
     'cabby': 1,
     'cabin': 1,
     'cabinet': 3,
     'cable': 1,
     'cabled': 1,
     'caffeine': 1,
     'calculated': 1,
     'calendar': 1,
     'caliber': 1,
     'called': 3,
     'calling': 1,
     'calls': 1,
     'calm': 4,
     'calmly': 2,
     'calms': 1,
     'came': 10,
     'camera': 3,
     'cameras': 1,
     'campground': 1,
     'canhow': 1,
     'canvas': 1,
     'cap': 1,
     'captain': 2,
     'caption': 1,
     'car': 51,
     'carabinieri': 5,
     'carabinieris': 1,
     'card': 1,
     'cards': 2,
     'care': 3,
     'careening': 1,
     'careful': 2,
     'carefully': 2,
     'careless': 1,
     'carnage': 1,
     'carries': 1,
     'carrying': 6,
     'cars': 20,
     'carves': 1,
     'cascading': 1,
     'case': 7,
     'cash': 6,
     'caspian': 1,
     'caspiexpetroleum': 1,
     'cast': 1,
     'casual': 2,
     'casually': 1,
     'catches': 1,
     'catching': 3,
     'caught': 2,
     'cause': 1,
     'caution': 1,
     'caves': 1,
     'cd': 1,
     'cell': 7,
     'cellphone': 2,
     'cement': 1,
     'center': 3,
     'ceo': 1,
     'certainly': 1,
     'chair': 9,
     'chairs': 1,
     'chalkboard': 1,
     'championed': 1,
     'championship': 1,
     'chance': 1,
     'change': 4,
     'changed': 3,
     'changes': 2,
     'chaos': 2,
     'charge': 7,
     'charges': 2,
     'charmed': 1,
     'chase': 2,
     'chasing': 1,
     'chatter': 1,
     'chatting': 1,
     'check': 6,
     'checked': 2,
     'checking': 13,
     'checkoff': 1,
     'checks': 12,
     'cherbourg': 1,
     'childlike': 1,
     'chill': 1,
     'chilly': 1,
     'chinese': 2,
     'chirping': 1,
     'choice': 5,
     'choices': 1,
     'chokehold': 1,
     'chokes': 1,
     'chop': 2,
     'choreographed': 1,
     'christ': 2,
     'chucked': 1,
     'chugging': 2,
     'ci': 2,
     'cia': 7,
     'cigarette': 1,
     'cigarettes': 1,
     'cinch': 1,
     'circles': 2,
     'city': 4,
     'civvies': 1,
     'claimed': 1,
     'clean': 7,
     'cleaning': 1,
     'clear': 9,
     'clearance': 1,
     'clearing': 1,
     'clearly': 5,
     'clears': 2,
     'clenching': 1,
     'clerk': 8,
     'clerks': 1,
     'clever': 1,
     'click': 6,
     'clicking': 1,
     'clicks': 1,
     'cliff': 1,
     'climb': 1,
     'climbing': 4,
     'clip': 3,
     'clipping': 1,
     'clock': 4,
     'clogging': 1,
     'cloned': 2,
     'close': 13,
     'closed': 3,
     'closequarter': 1,
     'closer': 4,
     'closes': 2,
     'closing': 3,
     'clothes': 7,
     'club': 3,
     'clubhouse': 1,
     'clue': 1,
     'cluster': 1,
     'clutter': 1,
     'cluttered': 1,
     'coal': 2,
     'coat': 7,
     'code': 2,
     'coding': 1,
     'coffee': 5,
     'cold': 4,
     'colonial': 1,
     'colored': 1,
     'come': 18,
     'comes': 10,
     'comfortable': 1,
     'coming': 30,
     'comm': 2,
     'command': 1,
     'commanders': 1,
     'common': 1,
     'commotion': 1,
     'communications': 2,
     'commuters': 1,
     'companies': 1,
     'company': 3,
     'comparison': 1,
     'complaining': 1,
     'compressing': 1,
     'compulsive': 1,
     'computer': 7,
     'computers': 2,
     'comrade': 1,
     'concentrating': 1,
     'concentric': 1,
     'concerned': 2,
     'concerning': 1,
     'concierge': 3,
     'concrete': 3,
     'condition': 1,
     'conditions': 1,
     'conductors': 1,
     'conferring': 2,
     'confidentially': 1,
     'confirm': 1,
     'confusion': 3,
     'conjunction': 1,
     'conjure': 1,
     'conklin': 29,
     'conklins': 4,
     'connections': 1,
     'consider': 1,
     'considering': 1,
     'consist': 1,
     'console': 1,
     'construction': 2,
     'consulate': 2,
     'contact': 3,
     'contd': 63,
     'continents': 1,
     'continues': 3,
     'continuing': 8,
     'contract': 1,
     'control': 2,
     'controlled': 1,
     'converge': 1,
     'conversation': 3,
     'convinced': 1,
     'convoy': 1,
     'coo': 1,
     'cool': 3,
     'cooly': 1,
     'coordinate': 1,
     'cop': 5,
     'cops': 22,
     'corner': 13,
     'corral': 1,
     'corridor': 1,
     'cots': 1,
     'cottage': 1,
     'coughing': 1,
     'counter': 2,
     'countering': 1,
     'counterintelligence': 2,
     'counting': 1,
     'country': 1,
     'countryside': 1,
     'couple': 4,
     'course': 1,
     'courtesy': 1,
     'cover': 9,
     'covered': 2,
     'covering': 1,
     'coworkers': 1,
     'cranking': 1,
     'cranks': 1,
     'crap': 2,
     'crash': 2,
     'crashes': 1,
     'crashing': 2,
     'crazy': 4,
     'credentials': 1,
     'credit': 1,
     'creepy': 1,
     'crestfallen': 1,
     'crewcut': 1,
     'crime': 2,
     'crinkles': 1,
     'crisp': 1,
     'crissake': 1,
     'cronin': 81,
     'croninradio': 1,
     'cross': 2,
     'crosses': 3,
     'crossing': 2,
     'crouches': 1,
     'crowd': 7,
     'crowded': 2,
     'cruising': 1,
     'crush': 1,
     'crushed': 1,
     'crushes': 1,
     'crying': 4,
     'cuffed': 2,
     'cuffs': 2,
     'cup': 2,
     'curb': 3,
     'curiosity': 1,
     'curious': 1,
     'curtains': 2,
     'curving': 1,
     'customs': 1,
     'cut': 2,
     'cuts': 2,
     'cutting': 3,
     'cyrillic': 2,
     'da': 1,
     'dad': 1,
     'damn': 2,
     'dangerous': 3,
     'dangle': 1,
     'daniel': 1,
     'danka': 1,
     'danny': 8,
     'dark': 16,
     'darkened': 1,
     'darkness': 2,
     'dash': 2,
     'dashboards': 1,
     'data': 3,
     'database': 1,
     'date': 2,
     'david': 1,
     'day': 4,
     'days': 2,
     'dead': 22,
     'deadly': 1,
     'deal': 3,
     'dealing': 1,
     'death': 4,
     'debrief': 2,
     'debriefed': 1,
     'decent': 1,
     'decide': 2,
     'decided': 1,
     'decision': 1,
     'decives': 1,
     'deck': 2,
     'deep': 2,
     'defensive': 2,
     'defiant': 1,
     'definitely': 1,
     'definitive': 3,
     'delta': 12,
     'deltas': 1,
     'departure': 2,
     'departures': 1,
     'depression': 1,
     'deputy': 2,
     'descend': 1,
     'deserted': 2,
     'desk': 17,
     'desolate': 2,
     'desperation': 2,
     'destiny': 1,
     'destroy': 1,
     'destroys': 1,
     'detailed': 1,
     'details': 2,
     'detained': 1,
     'determined': 1,
     'detonation': 1,
     'device': 2,
     'diagnosis': 1,
     'diagnostic': 1,
     'dial': 1,
     'dialed': 1,
     'did': 15,
     'didi': 1,
     'didjason': 1,
     'didnt': 11,
     'die': 1,
     'died': 3,
     'diei': 1,
     'dies': 1,
     'different': 2,
     'digital': 1,
     'digs': 1,
     'direct': 1,
     'directions': 1,
     'directly': 1,
     'director': 2,
     'disappear': 6,
     'disappearing': 1,
     'disappears': 3,
     'disappointed': 1,
     'disaster': 3,
     'discreet': 2,
     'discreetly': 2,
     'disembark': 1,
     'disembarking': 2,
     'disembarks': 1,
     'disgusted': 1,
     'dishes': 1,
     'disputing': 1,
     'distance': 4,
     'distinctive': 1,
     'distribution': 1,
     'disturbance': 1,
     'ditch': 1,
     'dividing': 1,
     'diving': 1,
     'dobermans': 2,
     'doctor': 1,
     'document': 1,
     'dod': 3,
     'dodging': 1,
     'dods': 1,
     'does': 9,
     'doesnt': 11,
     'doing': 20,
     'dollar': 2,
     'dollars': 4,
     'domestic': 1,
     'dominant': 1,
     'dominates': 1,
     'donnie': 1,
     'dont': 42,
     'door': 31,
     'doorbell': 1,
     'doorman': 2,
     'doors': 9,
     'doorway': 3,
     'double': 1,
     'doublecrossed': 1,
     'doubt': 1,
     'downhill': 1,
     'downs': 1,
     'dozens': 1,
     'drab': 1,
     'drawn': 4,
     'dread': 2,
     'dream': 4,
     'dresser': 1,
     'drifting': 2,
     'drill': 3,
     'drills': 2,
     'drink': 1,
     'drinks': 1,
     'drive': 3,
     'driver': 20,
     'driverphone': 1,
     'drivers': 3,
     'drives': 4,
     'driving': 12,
     'drone': 1,
     'drop': 4,
     'dropping': 3,
     'drops': 3,
     'drugs': 1,
     'drunk': 4,
     'ducked': 1,
     'ducking': 1,
     'duct': 2,
     'dude': 2,
     'dudes': 6,
     'duffel': 1,
     'duffle': 3,
     'dumping': 1,
     'dunk': 1,
     'ear': 1,
     'earlier': 1,
     'early': 5,
     'earpiece': 3,
     'ears': 1,
     'easing': 1,
     'east': 2,
     'easy': 2,
     'eat': 1,
     'edge': 2,
     'edges': 1,
     'ef': 1,
     'effective': 1,
     'effort': 1,
     'effortless': 1,
     'electric': 1,
     'electrical': 3,
     'element': 1,
     'elevator': 8,
     'eluded': 1,
     'embankment': 1,
     'embarrassed': 2,
     'emerge': 1,
     'emergency': 1,
     'emerges': 1,
     'emerging': 2,
     'emphatic': 1,
     'emptied': 1,
     'end': 10,
     'ends': 2,
     'energy': 1,
     'engine': 1,
     'engines': 1,
     'english': 2,
     'enjoy': 1,
     'enter': 2,
     'entering': 1,
     'enters': 10,
     'entombed': 1,
     'entrance': 2,
     'entrances': 1,
     'equal': 1,
     'equally': 1,
     'escape': 1,
     'escort': 3,
     'ether': 1,
     'europe': 2,
     'european': 1,
     'euros': 1,
     'evac': 2,
     'event': 1,
     'everybody': 3,
     'everyday': 1,
     'evidence': 1,
     'ex': 1,
     'exactly': 7,
     'exceptionally': 1,
     'excited': 2,
     'excuse': 1,
     'exfil': 6,
     'exit': 2,
     'exiting': 1,
     'exits': 3,
     'exnavyseal': 1,
     'expensive': 1,
     'expert': 1,
     'explosion': 1,
     'explosive': 3,
     'express': 1,
     'extreme': 1,
     'extremely': 2,
     'eye': 6,
     'eyes': 25,
     'facade': 2,
     'facades': 1,
     'face': 22,
     'faces': 6,
     'fact': 2,
     'factories': 1,
     'factoring': 1,
     'fade': 2,
     'fading': 1,
     'fail': 1,
     'failed': 1,
     'failing': 1,
     'fair': 1,
     'fake': 1,
     'fakes': 1,
     'faking': 1,
     'fall': 3,
     'fallen': 1,
     'falling': 2,
     'falls': 1,
     'familiar': 2,
     'families': 1,
     'family': 5,
     'fan': 1,
     'fanning': 1,
     'far': 7,
     'fast': 13,
     'faster': 1,
     'father': 3,
     'fatherly': 1,
     'fault': 1,
     'faux': 1,
     'favorite': 1,
     'fax': 2,
     'fear': 4,
     'feed': 2,
     'feeding': 1,
     'feel': 4,
     'feels': 1,
     'feet': 3,
     'fell': 3,
     'felt': 4,
     'fender': 1,
     'fenders': 1,
     'fernsehturm': 1,
     'ferry': 2,
     'field': 6,
     'fiftyeuro': 1,
     'fighting': 1,
     'fights': 1,
     'figure': 3,
     'file': 8,
     'filei': 1,
     'files': 11,
     'fileyour': 1,
     'filing': 1,
     'filling': 1,
     'fills': 1,
     'final': 5,
     'finally': 11,
     'financial': 2,
     'finding': 3,
     'finds': 1,
     'fine': 2,
     'finger': 4,
     'fingerprint': 3,
     'fingers': 1,
     'finish': 2,
     'finished': 1,
     'finishes': 1,
     'finishing': 1,
     'fired': 1,
     'fires': 1,
     'firing': 4,
     'firmly': 1,
     'fishing': 2,
     'fishtailing': 1,
     'fix': 2,
     'fixed': 3,
     'flag': 2,
     'flames': 1,
     'flanking': 1,
     'flash': 2,
     'flashback': 7,
     'flashes': 3,
     'flashing': 2,
     'flat': 2,
     'flatout': 1,
     'fleeing': 1,
     'flexcuffs': 2,
     'flicker': 3,
     'flickering': 1,
     'flicking': 1,
     'flies': 1,
     'flight': 1,
     'flights': 1,
     'flimsy': 1,
     'flips': 2,
     'floated': 1,
     'flood': 1,
     'flooding': 1,
     'floor': 10,
     'flooring': 1,
     'floors': 1,
     'flow': 1,
     'fly': 1,
     'flying': 2,
     'focused': 3,
     'focusing': 1,
     'foggy': 1,
     'folder': 1,
     'folding': 2,
     'folks': 1,
     'follow': 3,
     'followed': 1,
     'following': 2,
     'follows': 3,
     'food': 4,
     'fooled': 2,
     'foot': 4,
     'footing': 1,
     'footlocker': 2,
     'footpath': 2,
     'footstep': 1,
     'footsteps': 1,
     'force': 2,
     'foreboding': 1,
     'forehead': 1,
     'forest': 1,
     'forever': 1,
     'forget': 3,
     'forging': 1,
     'forgive': 1,
     'forgotten': 2,
     'fork': 2,
     'forlorn': 1,
     'forties': 1,
     'fortune': 1,
     'forward': 6,
     'fourgam': 1,
     'fourth': 1,
     'frantic': 1,
     'freaked': 3,
     'free': 4,
     'freezes': 1,
     'freezing': 2,
     'frequency': 1,
     'fresh': 4,
     'fridge': 1,
     'friendly': 1,
     'friends': 2,
     'frowns': 1,
     'frozen': 2,
     'frustration': 1,
     'fry': 1,
     'fuck': 7,
     'fucking': 1,
     'fully': 3,
     'fumbling': 1,
     'funky': 1,
     'furious': 1,
     'fury': 2,
     'fusty': 1,
     'futile': 1,
     'gables': 1,
     'gadgetry': 1,
     'gaining': 2,
     'game': 4,
     'gangster': 1,
     'gap': 1,
     'gas': 5,
     'gasolinestoked': 1,
     'gasping': 1,
     'gassoaked': 1,
     'gate': 1,
     'gathered': 2,
     'gathering': 1,
     'gauge': 1,
     'gaze': 2,
     'gear': 9,
     'gears': 1,
     'geneva': 1,
     'genevai': 1,
     'genoa': 1,
     'gentlemen': 1,
     'german': 7,
     'germans': 1,
     'germany': 2,
     'gestures': 3,
     'gets': 7,
     'getting': 16,
     'gift': 1,
     'gimme': 1,
     'girl': 6,
     'girlfriend': 1,
     'girls': 1,
     'given': 1,
     'gives': 4,
     'giving': 3,
     'glacial': 1,
     'glance': 1,
     'glanced': 1,
     'glances': 1,
     'glancing': 8,
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 등장 횟수 (count) 순으로 정렬</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line">sorted(word_count_dict.items(), key = operator.itemgetter(<span class="number">1</span>), reverse = <span class="literal">True</span>)[:<span class="number">5</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('bourne', 455),
 ('pamela', 199),
 ('abbott', 128),
 ('hes', 100),
 ('kirill', 93)]
</code></pre>
 <br> 
<h4 id="3-단어-분포-탐색"><a class="markdownIt-Anchor" href="#3-단어-분포-탐색"></a> (3) 단어 분포 탐색</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">plt.hist(list(word_count_dict.values()), bins=<span class="number">150</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-1/output_60_0.png" alt="output_60_0"></p>
<p>대부분의 단어가 0번~50번 사이에 등장했고, 일부 소수의 단어들이 100번 이상 등장한 것을 확인할 수 있습니다.</p>
  <br>
  <br>
<h2 id="4-택스트-마이닝"><a class="markdownIt-Anchor" href="#4-택스트-마이닝"></a> <strong>4. 택스트 마이닝</strong></h2>
<h3 id="4-1-단어별-빈도-분석-word-cloud"><a class="markdownIt-Anchor" href="#4-1-단어별-빈도-분석-word-cloud"></a> 4-1. 단어별 빈도 분석 (+ Word Cloud)</h3>
<h4 id="1-상위-빈도수-단어-출력"><a class="markdownIt-Anchor" href="#1-상위-빈도수-단어-출력"></a> (1) 상위 빈도수 단어 출력</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># word_count_dict중 상위 25 tags 확인해보기</span></span><br><span class="line"></span><br><span class="line">ranked_tags = Counter(word_count_dict).most_common(<span class="number">25</span>)</span><br><span class="line">ranked_tags</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('bourne', 455),
 ('pamela', 199),
 ('abbott', 128),
 ('hes', 100),
 ('kirill', 93),
 ('nicky', 90),
 ('cronin', 81),
 ('just', 80),
 ('marie', 67),
 ('contd', 63),
 ('know', 61),
 ('car', 51),
 ('away', 48),
 ('room', 44),
 ('jarda', 43),
 ('looks', 43),
 ('dont', 42),
 ('zorn', 42),
 ('phone', 40),
 ('right', 39),
 ('theres', 39),
 ('police', 38),
 ('want', 38),
 ('berlin', 37),
 ('teddy', 35)]
</code></pre>
  <br>
<h4 id="2-word-cloud-시각화"><a class="markdownIt-Anchor" href="#2-word-cloud-시각화"></a> (2) Word Cloud 시각화</h4>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">!pip install pytagcloud pygame simplejson</span><br></pre></td></tr></tbody></table></figure>
<pre><code>Collecting pytagcloud
  Downloading pytagcloud-0.3.5.tar.gz (754 kB)
Collecting pygame
  Downloading pygame-1.9.6-cp37-cp37m-win_amd64.whl (4.3 MB)
Collecting simplejson
  Downloading simplejson-3.17.2-cp37-cp37m-win_amd64.whl (73 kB)
Building wheels for collected packages: pytagcloud
  Building wheel for pytagcloud (setup.py): started
  Building wheel for pytagcloud (setup.py): finished with status 'done'
  Created wheel for pytagcloud: filename=pytagcloud-0.3.5-py3-none-any.whl size=759873 sha256=0c740b8c183f3dd04c6b6353e75f2307bdcc7855bb0ce66f4caa3ed352b6e8cc
  Stored in directory: c:\users\kimsu\appdata\local\pip\cache\wheels\fc\fd\aa\86956a295a7c9205bafd518ef4b6d489e51d2d476990c18238
Successfully built pytagcloud
Installing collected packages: pytagcloud, pygame, simplejson
Successfully installed pygame-1.9.6 pytagcloud-0.3.5 simplejson-3.17.2
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> pytagcloud</span><br><span class="line"><span class="keyword">import</span> webbrowser</span><br></pre></td></tr></tbody></table></figure>
<pre><code>pygame 1.9.6
Hello from the pygame community. https://www.pygame.org/contribute.html
</code></pre>
<br>
<p>내림순으로 상위 N개를 추출하는 두가지 방법:</p>
<ol>
<li>
<p>sorted(<em>dict</em> .items(), key = operator.itemgetter(<em>col_index</em>), reverse=True) [:N]</p>
</li>
<li>
<p>Counter(<em>dict</em> .most_common(N))</p>
<br>
</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Top 40 단어로 word cloud 생성하기</span></span><br><span class="line">taglist = pytagcloud.make_tags(sorted(word_count_dict.items(), key = operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)[:<span class="number">40</span>], maxsize=<span class="number">60</span>)  <span class="comment"># 빈도수(itemgetter(1)) 내림차순(reverse=True)으로 정렬, maxsize: 글자 크기</span></span><br><span class="line"><span class="comment"># taglist = pytagcloud.make_tages(Counter(word_count_dict).most_common(40), maxsize=60)</span></span><br><span class="line"></span><br><span class="line">pytagcloud.create_tag_image(taglist, <span class="string">'movie_wordcloud.jpg'</span>, rectangular=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line">Image(filename=<span class="string">'movie_wordcloud.jpg'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-1/output_74_0.jpg" alt="output_74_0"></p>
<p>​    <br></p>
<h3 id="4-2-장면별-중요-단어-시각화-tf-idf"><a class="markdownIt-Anchor" href="#4-2-장면별-중요-단어-시각화-tf-idf"></a> 4-2. 장면별 중요 단어 시각화 (TF-IDF)</h3>
<h4 id="1-tf-idf-변환"><a class="markdownIt-Anchor" href="#1-tf-idf-변환"></a> (1) TF-IDF 변환</h4>
<p>Bag of Words 벡터에 대해서 TF-IDF변환 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfTransformer</span><br><span class="line"></span><br><span class="line">tfidf_vectorizer = TfidfTransformer()</span><br><span class="line">tf_idf_vect = tfidf_vectorizer.fit_transform(bow_vect)</span><br><span class="line"></span><br><span class="line">print(tf_idf_vect.shape)  <span class="comment"># 320*2850 vector: 320 scenes, 2850 sentences</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 2850)
</code></pre>
<br>
<p>변환 후 320*2850 matrix가 출력됩니다. 여기서</p>
<ul>
<li>
<p>한 행(row)은 한 씬을 의미하고</p>
</li>
<li>
<p>한 열(column)은 한 단어를 의미합니다.</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 첫번째 행 출력 (0이 아닌것 만) -- 즉 첫 씬에서 모든 단어의 TF-IDF 값</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(320, 2850)
  (0, 2788)	0.19578974958217082
  (0, 2763)	0.27550455848587985
  (0, 2412)	0.1838379942679887
  (0, 2387)	0.3109660261831164
  (0, 1984)	0.2902223973596984
  (0, 1978)	0.3109660261831164
  (0, 1898)	0.27550455848587985
  (0, 1673)	0.2902223973596984
  (0, 1366)	0.21520447034992146
  (0, 1251)	0.19855583314180728
  (0, 1001)	0.2340173008390438
  (0, 974)	0.2902223973596984
  (0, 874)	0.27550455848587985
  (0, 798)	0.1906694714764746
  (0, 237)	0.08646242181596513
  (0, 125)	0.26408851574819875
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># (0을 포함한) 실제 vector의 모습 출력해보기</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray().shape)</span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1, 2850)
[[0. 0. 0. ... 0. 0. 0.]]
</code></pre>
<br>
<h4 id="2-벡터-단어-mapping"><a class="markdownIt-Anchor" href="#2-벡터-단어-mapping"></a> (2) “벡터” - “단어” mapping</h4>
<p>길이가 2850인 단어 벡터의 각 위치가 어떤 단어를 상징하는지를 알아내기 위해 단어 벡터에 대해서 “단어” - “index No.” Mapping 을 진행합니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">vect.vocabulary_</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    {'raining': 1898,
     'light': 1366,
     'strobes': 2387,
     'wet': 2763,
     'glass': 1001,
     'rhythmic': 1978,
     'pace': 1673,
     'suddenly': 2412,
     'window': 2788,
     'face': 798,
     'jason': 1251,
     'bourne': 237,
     'riding': 1984,
     'backseat': 125,
     'gaze': 974,
     'fixed': 874,
     'knee': 1297,
     'syringe': 2459,
     'gun': 1055,
     'eyes': 795,
     'driver': 703,
     'jarda': 1248,
     'watching': 2741,
     'bournes': 240,
     'pov': 1817,
     'passenger': 1710,
     'head': 1097,
     'cell': 351,
     'phone': 1747,
     'rings': 1990,
     'turns': 2626,
     'conklin': 481,
     'returns': 1971,
     'stare': 2332,
     'open': 1649,
     'panicked': 1693,
     'gasping': 968,
     'trying': 2615,
     'stay': 2347,
     'quiet': 1886,
     'marie': 1454,
     'sleeps': 2221,
     'moving': 1556,
     'medicine': 1482,
     'cabinet': 299,
     'digs': 640,
     'downs': 690,
     'specific': 2283,
     'minute': 1515,
     'later': 1333,
     'moves': 1555,
     'veranda': 2679,
     'pads': 1681,
     'moment': 1537,
     'concerned': 468,
     'clearly': 408,
     'time': 2542,
     'happened': 1082,
     'look': 1405,
     'different': 638,
     'saw': 2044,
     'hair': 1065,
     'longer': 1404,
     'shes': 2137,
     'blonde': 207,
     'hippie': 1138,
     'travelers': 2592,
     'cottage': 512,
     'humble': 1174,
     'sweet': 2445,
     'bedroom': 163,
     'opens': 1652,
     'beach': 156,
     'town': 2570,
     'just': 1272,
     'hill': 1135,
     'club': 432,
     'music': 1566,
     'night': 1602,
     'rave': 1909,
     'wafting': 2708,
     'far': 821,
     'distance': 658,
     'car': 321,
     'ill': 1193,
     'book': 226,
     'theres': 2513,
     'new': 1595,
     'youre': 2844,
     'sure': 2428,
     'nods': 1607,
     'write': 2823,
     'years': 2834,
     'scribbling': 2070,
     'notebook': 1615,
     'bad': 127,
     'bits': 189,
     'pieces': 1760,
     'gone': 1012,
     'think': 2521,
     'maybe': 1470,
     'making': 1442,
     'worse': 2816,
     'dont': 680,
     'wonder': 2800,
     'lays': 1337,
     'hands': 1077,
     'shoulders': 2157,
     'steadies': 2351,
     'sooner': 2268,
     'going': 1011,
     'remember': 1951,
     'good': 1014,
     'softens': 2260,
     'smiles': 2241,
     'kisses': 1293,
     'leads': 1342,
     'getting': 986,
     'bed': 162,
     'turning': 2625,
     'settled': 2110,
     'waiting': 2713,
     'pill': 1763,
     'kick': 1281,
     'im': 1194,
     'okay': 1641,
     'worry': 2815,
     'like': 1369,
     'nightmare': 1603,
     'mean': 1473,
     'try': 2614,
     'ignore': 1190,
     'hesitates': 1124,
     'gets': 985,
     'knows': 1310,
     'right': 1987,
     'opening': 1651,
     'hes': 1123,
     'letting': 1359,
     'resistance': 1963,
     'folding': 907,
     'childlike': 380,
     'gathering': 972,
     'contd': 491,
     'sleep': 2218,
     'better': 181,
     'memories': 1487,
     'dream': 695,
     'having': 1094,
     'ends': 752,
     'day': 586,
     'takes': 2464,
     'beat': 159,
     'make': 1440,
     'silence': 2182,
     'strokes': 2389,
     'gives': 993,
     'tenderness': 2499,
     'fading': 804,
     'waifs': 2710,
     'dark': 577,
     'running': 2022,
     'sun': 2418,
     'punishing': 1865,
     'sand': 2038,
     'strong': 2391,
     'effortless': 737,
     'deep': 601,
     'focused': 903,
     'stunning': 2400,
     'conjunction': 479,
     'scenery': 2055,
     'lost': 1414,
     'busy': 289,
     'market': 1457,
     'fishing': 871,
     'lots': 1416,
     'young': 2842,
     'western': 2761,
     'faces': 799,
     'rundown': 2021,
     'happening': 1083,
     'shopping': 2152,
     'filling': 852,
     'bag': 128,
     'local': 1391,
     'produce': 1841,
     'leaving': 1352,
     'putting': 1875,
     'groceries': 1040,
     'away': 116,
     'stops': 2369,
     'photograph': 1753,
     'windowsill': 2790,
     'snapshot': 2250,
     'arms': 87,
     'protector': 1853,
     'big': 183,
     'alive': 51,
     'love': 1419,
     'funky': 955,
     'colonial': 444,
     'facades': 797,
     'vivid': 2698,
     'subcontinental': 2404,
     'technicolor': 2483,
     'loud': 1417,
     'morning': 1545,
     'traffic': 2576,
     'camera': 313,
     'finds': 858,
     'coming': 449,
     'store': 2370,
     'bottle': 233,
     'water': 2742,
     'finished': 864,
     'run': 2020,
     'standing': 2329,
     'chugging': 393,
     'checking': 376,
     'scene': 2054,
     'catches': 344,
     'eye': 794,
     'street': 2380,
     'silver': 2188,
     'newish': 1596,
     'pulling': 1861,
     'block': 203,
     'quite': 1888,
     'whos': 2779,
     'driving': 707,
     'casual': 342,
     'passing': 1714,
     'notice': 1616,
     'alert': 49,
     'follows': 912,
     'foot': 915,
     'natural': 1575,
     'cruising': 551,
     'sidewalk': 2174,
     'blending': 198,
     'mix': 1525,
     'ahead': 43,
     'corner': 508,
     'slowing': 2233,
     'reaches': 1912,
     'parked': 1700,
     'guy': 1059,
     'welldressed': 2757,
     'physical': 1755,
     'sunglasses': 2420,
     'kirill': 1291,
     'heading': 1100,
     'building': 270,
     'telegraph': 2491,
     'office': 1632,
     'watch': 2739,
     'perimeter': 1739,
     'mr': 1557,
     'mohan': 1534,
     'desk': 614,
     'crisp': 541,
     'proper': 1849,
     'man': 1443,
     'handed': 1074,
     'old': 1642,
     'passport': 1715,
     'picture': 1758,
     'question': 1879,
     'sir': 2197,
     'sister': 2200,
     'death': 592,
     'family': 818,
     'place': 1772,
     'know': 1307,
     'called': 306,
     'note': 1614,
     'table': 2460,
     'come': 446,
     'read': 1917,
     'balling': 135,
     'quickly': 1884,
     'fact': 800,
     'bailing': 131,
     'fast': 822,
     'calm': 309,
     'methodical': 1501,
     'exfil': 782,
     'procedure': 1839,
     'honed': 1150,
     'choreographed': 390,
     'packing': 1678,
     'machine': 1432,
     'rapid': 1908,
     'cuts': 566,
     'backpacks': 123,
     'thrown': 2534,
     'house': 1163,
     'cash': 338,
     'pulled': 1860,
     'lamp': 1318,
     'base': 147,
     'credit': 535,
     'cards': 325,
     'taped': 2470,
     'counter': 514,
     'bank': 139,
     'mission': 1521,
     'accomplished': 20,
     'starting': 2338,
     'glancing': 999,
     'nice': 1599,
     'easy': 730,
     'cool': 503,
     'gear': 975,
     'makes': 1441,
     'slow': 2231,
     'pass': 1707,
     'marketplace': 1458,
     'stripped': 2384,
     'thing': 2519,
     'shit': 2143,
     'missed': 1519,
     'looking': 1406,
     'earlier': 724,
     'jamming': 1246,
     'pocket': 1793,
     'begins': 169,
     'sweep': 2444,
     'jogging': 1259,
     'keeping': 1273,
     'low': 1422,
     'neighborhood': 1587,
     'alleys': 53,
     'random': 1905,
     'worked': 2807,
     'crowded': 550,
     'tourists': 2566,
     'sunbathers': 2419,
     'favorite': 828,
     'spot': 2298,
     'talking': 2467,
     'women': 2799,
     'laughing': 1335,
     'happy': 1085,
     'burly': 281,
     'jeep': 1252,
     'comes': 447,
     'roaring': 2003,
     'spots': 2300,
     'parks': 1702,
     'end': 751,
     'methodically': 1502,
     'way': 2746,
     'blue': 214,
     'tent': 2503,
     'towel': 2567,
     'opposite': 1657,
     'arrives': 92,
     'looks': 1407,
     'sees': 2089,
     'yards': 2831,
     'hard': 1086,
     'bends': 178,
     'gotta': 1018,
     'tone': 2552,
     'voice': 2702,
     'grabs': 1020,
     'quick': 1883,
     'goodbye': 1015,
     'friends': 946,
     'hurry': 1177,
     'uses': 2667,
     'cover': 523,
     'retreats': 1969,
     'reach': 1911,
     'drill': 698,
     'tossed': 2559,
     'pulls': 1862,
     'blown': 212,
     'ago': 39,
     'fine': 859,
     'careful': 328,
     'pushed': 1871,
     'got': 1017,
     'lazy': 1338,
     'following': 911,
     'main': 1437,
     'blocked': 204,
     'huge': 1172,
     'automatic': 113,
     'pistol': 1768,
     'travel': 2591,
     'narrow': 1573,
     'little': 1385,
     'passageway': 1708,
     'windshield': 2791,
     'packed': 1677,
     'liking': 1370,
     'decide': 596,
     'campground': 315,
     'yesterday': 2838,
     'wrong': 2827,
     'rental': 1953,
     'dollar': 674,
     'sneakers': 2251,
     'pull': 1859,
     'thats': 2511,
     'crazy': 533,
     'real': 1921,
     'throwing': 2533,
     'reverse': 1974,
     'hyundai': 1183,
     'trapped': 2589,
     'gridlock': 1036,
     'freezing': 941,
     'alley': 52,
     'disappear': 645,
     'backing': 121,
     'came': 312,
     'blowing': 211,
     'horn': 1156,
     'van': 2672,
     'blocks': 206,
     'leaning': 1344,
     'theyve': 2517,
     'wait': 2712,
     'want': 2726,
     'againi': 33,
     'clear': 405,
     'shack': 2117,
     'safe': 2031,
     'hang': 1078,
     'awhile': 118,
     'check': 374,
     'wheres': 2773,
     'left': 1353,
     'places': 1774,
     'afford': 30,
     'possessed': 1809,
     'familiar': 816,
     'tactical': 2462,
     'patience': 1720,
     'doesnt': 672,
     'sense': 2098,
     'checks': 378,
     'rearview': 1927,
     'fuck': 951,
     'taking': 2465,
     'hell': 1117,
     'forward': 934,
     'blocking': 205,
     'drive': 702,
     'squeezing': 2313,
     'switch': 2455,
     'bridge': 259,
     'scrambling': 2061,
     'seat': 2078,
     'squirts': 2316,
     'wheel': 2771,
     'adrenaline': 28,
     'pumping': 1864,
     'thirty': 2524,
     'skidding': 2208,
     'turn': 2624,
     'clipping': 421,
     'vehicle': 2677,
     'mirror': 1517,
     'shattering': 2130,
     'speeding': 2285,
     'scanning': 2050,
     'veering': 2676,
     'oncoming': 1645,
     'bus': 285,
     'jesus': 1256,
     'yeah': 2832,
     'ready': 1920,
     'bearing': 157,
     'smile': 2240,
     'knowing': 1308,
     'stopping': 2368,
     'short': 2153,
     'rise': 1995,
     'bit': 188,
     'view': 2692,
     'half': 1067,
     'headed': 1099,
     'gonna': 1013,
     'lose': 1412,
     'kirills': 1292,
     'mind': 1513,
     'racing': 1890,
     'duffle': 720,
     'abandons': 3,
     'preps': 1825,
     'meet': 1484,
     'hour': 1161,
     'bail': 130,
     'follow': 909,
     'crosses': 546,
     'warned': 2731,
     'told': 2551,
     'leave': 1350,
     'thisit': 2526,
     'wont': 2801,
     'choice': 385,
     'concrete': 471,
     'slams': 2216,
     'precise': 1819,
     'sniper': 2252,
     'rifle': 1985,
     'hand': 1073,
     'spare': 2276,
     'clip': 420,
     'roll': 2007,
     'tell': 2496,
     'scope': 2059,
     'rumbling': 2019,
     'target': 2472,
     'drivers': 705,
     'headrest': 1103,
     'finger': 860,
     'firing': 869,
     'jerking': 1254,
     'fender': 838,
     'tearing': 2480,
     'guard': 1045,
     'rail': 1895,
     'cement': 353,
     'shards': 2126,
     'air': 46,
     'reaching': 1913,
     'late': 1332,
     'finally': 855,
     'crashes': 531,
     'flimsy': 892,
     'guardrail': 1046,
     'plummets': 1791,
     'splashes': 2295,
     'sink': 2194,
     'sight': 2177,
     'lowers': 1425,
     'basically': 150,
     'unnoticed': 2646,
     'nook': 1611,
     'silenced': 2183,
     'people': 1737,
     'rushing': 2026,
     'woman': 2797,
     'directly': 643,
     'doorway': 685,
     'indian': 1211,
     'goa': 1006,
     'drills': 699,
     'sinks': 2195,
     'inside': 1215,
     'swallowed': 2439,
     'scans': 2051,
     'surface': 2429,
     'river': 2000,
     'mud': 1559,
     'plumes': 1790,
     'settles': 2111,
     'tries': 2599,
     'urge': 2661,
     'killers': 1287,
     'unbroken': 2634,
     'woodwork': 2803,
     'breaks': 253,
     'moments': 1538,
     'goes': 1010,
     'held': 1116,
     'jeeps': 1253,
     'canvas': 317,
     'gulp': 1054,
     'frantic': 937,
     'unclip': 2636,
     'seatbelt': 2079,
     'jammed': 1245,
     'chucked': 392,
     'drifting': 697,
     'disappears': 647,
     'red': 1935,
     'halo': 1071,
     'growing': 1043,
     'bigger': 184,
     'blood': 208,
     'pauses': 1723,
     'maries': 1455,
     'blank': 196,
     'dead': 588,
     'realizing': 1924,
     'pick': 1756,
     'briefcase': 260,
     'telephoto': 2492,
     'lens': 1356,
     'teddyradio': 2486,
     'vo': 2700,
     'seller': 2093,
     'arrived': 91,
     'berlin': 180,
     'chinese': 383,
     'restaurant': 1966,
     'squarely': 2312,
     'seen': 2088,
     'enters': 760,
     'stark': 2335,
     'men': 1489,
     'cross': 545,
     'square': 2310,
     'vic': 2686,
     'steelass': 2354,
     'intel': 1220,
     'operator': 1655,
     'carries': 332,
     'large': 1330,
     'samples': 2037,
     'case': 337,
     'mike': 1509,
     'younger': 2843,
     'exnavyseal': 786,
     'hub': 1169,
     'secure': 2083,
     'anonymous': 68,
     'space': 2274,
     'city': 400,
     'shades': 2118,
     'drawn': 693,
     'cabled': 301,
     'stale': 2325,
     'improvised': 1203,
     'feel': 833,
     'temporary': 2498,
     'outpost': 1664,
     'room': 2014,
     'pamela': 1687,
     'landy': 1322,
     'senior': 2097,
     'cia': 395,
     'counterintelligence': 516,
     'officer': 1633,
     'hovering': 1165,
     'communications': 455,
     'console': 487,
     'cronin': 543,
     'pamelas': 1689,
     'early': 725,
     'forties': 932,
     'stonecold': 2365,
     'facade': 796,
     'quarterbacking': 1878,
     'operation': 1653,
     'radio': 1893,
     'kurt': 1312,
     'kim': 1289,
     'techs': 2484,
     'headphones': 1101,
     'ruggedized': 2017,
     'laptops': 1329,
     'comm': 450,
     'spread': 2301,
     'survey': 2434,
     'teddy': 2485,
     'military': 1511,
     'rig': 1986,
     'mobile': 1527,
     'motion': 1548,
     'shake': 2121,
     'tired': 2549,
     'coworkers': 526,
     'parting': 1704,
     'ways': 2747,
     'walking': 2720,
     'entering': 759,
     'doors': 684,
     'smiling': 2242,
     'approached': 79,
     'shift': 2139,
     'security': 2085,
     'hear': 1107,
     'mikeradio': 1510,
     'sleeve': 2222,
     'earpiece': 726,
     'escort': 767,
     'command': 451,
     'post': 1812,
     'works': 2811,
     'board': 219,
     'teams': 2478,
     'listen': 1381,
     'final': 854,
     'green': 1031,
     'listening': 1382,
     'word': 2804,
     'raises': 1901,
     'langley': 1326,
     'patched': 1718,
     'surprised': 2431,
     'martin': 1461,
     'mandarins': 1448,
     'sit': 2201,
     'round': 2016,
     'marshall': 1460,
     'deputy': 611,
     'vicedirector': 2687,
     'charge': 367,
     'tense': 2501,
     'donnie': 679,
     'jack': 1241,
     'weller': 2758,
     'understand': 2638,
     'using': 2668,
     'allocation': 54,
     'buy': 292,
     'lot': 1415,
     'money': 1540,
     'pam': 1686,
     'raw': 1910,
     'unprocessed': 2649,
     'kgb': 1280,
     'files': 849,
     'comparison': 459,
     'shop': 2151,
     'thief': 2518,
     'mole': 1535,
     'vetted': 2683,
     'source': 2272,
     'marty': 1462,
     'does': 671,
     'list': 1380,
     'suspects': 2436,
     'bargain': 144,
     'times': 2544,
     'price': 1829,
     'mandarin': 1447,
     'quality': 1876,
     'issue': 1236,
     'yes': 2837,
     'total': 2562,
     'agreement': 40,
     'theyre': 2516,
     'fakes': 810,
     'expensive': 787,
     'furious': 956,
     'impatient': 1200,
     'gentlemen': 980,
     'ive': 1240,
     'site': 2202,
     'play': 1784,
     'honestly': 1151,
     'talk': 2466,
     'mandarians': 1446,
     'convinced': 500,
     'opportunity': 1656,
     'wash': 2736,
     'game': 963,
     'puts': 1874,
     'nodding': 1606,
     'croninradio': 544,
     'repeat': 1957,
     'passed': 1709,
     'muster': 1567,
     'elevator': 741,
     'vicradio': 2688,
     'waits': 2714,
     'small': 2237,
     'wiring': 2794,
     'infrastructure': 1214,
     'lit': 1384,
     'glare': 1000,
     'someones': 2264,
     'maglight': 1436,
     'gloved': 1005,
     'racks': 1892,
     'electrical': 739,
     'risers': 1997,
     'carefully': 329,
     'explosive': 790,
     'device': 625,
     'pack': 1675,
     'cigarettes': 397,
     'riser': 1996,
     'second': 2081,
     'ones': 1646,
     'special': 2282,
     'taken': 2463,
     'plastic': 1781,
     'mounted': 1551,
     'floor': 897,
     'subpanel': 2406,
     'hold': 1143,
     'piece': 1759,
     'tape': 2469,
     'transferring': 2583,
     'pressing': 1827,
     'button': 290,
     'close': 425,
     'rises': 1998,
     'bracing': 246,
     'door': 681,
     'ivan': 1238,
     'russian': 2027,
     'outside': 1665,
     'darkened': 578,
     'hallway': 1070,
     'holding': 1144,
     'flips': 893,
     'million': 1512,
     'dollars': 675,
     'suite': 2416,
     'offices': 1634,
     'clean': 403,
     'caspiexpetroleum': 340,
     'cherbourg': 379,
     'moscow': 1546,
     'rome': 2009,
     'tehran': 2490,
     'curtains': 562,
     'lights': 1368,
     'sitting': 2204,
     'counting': 517,
     'poring': 1806,
     'document': 667,
     'dozens': 691,
     'sheets': 2134,
     'financial': 856,
     'data': 582,
     'incomprehensibly': 1208,
     'cyrillic': 568,
     'marked': 1456,
     'judging': 1265,
     'seals': 2074,
     'clearance': 406,
     'sign': 2178,
     'offs': 1637,
     'topsecret': 2557,
     'tinny': 2546,
     'pop': 1805,
     'tune': 2620,
     'started': 2337,
     'playing': 1786,
     'hall': 1069,
     'said': 2033,
     'doublecrossed': 687,
     'ankle': 67,
     'shut': 2170,
     'freaked': 938,
     'feet': 835,
     'pushing': 1873,
     'rushes': 2025,
     'past': 1716,
     'sample': 2036,
     'spilling': 2290,
     'snapph': 2248,
     'suppressed': 2427,
     'caliber': 305,
     'shots': 2155,
     'falls': 815,
     'crashing': 532,
     'bullets': 276,
     'tear': 2479,
     'hit': 1139,
     'unscrewing': 2652,
     'silencer': 2184,
     'tucking': 2619,
     'weapon': 2748,
     'whats': 2770,
     'climbing': 419,
     'duffel': 719,
     'stuffing': 2398,
     'ivans': 1239,
     'file': 847,
     'backpack': 122,
     'remove': 1952,
     'single': 2193,
     'sheet': 2133,
     'paper': 1694,
     'exactly': 778,
     'stuff': 2397,
     'tucked': 2618,
     'page': 1682,
     'blur': 216,
     'slipping': 2229,
     'underneath': 2637,
     'tossing': 2561,
     'fell': 836,
     'struggle': 2392,
     'detonation': 624,
     'decives': 599,
     'blows': 213,
     'tidy': 2538,
     'selfcontained': 2091,
     'explosion': 789,
     'flicker': 886,
     'fail': 805,
     'cast': 341,
     'darkness': 579,
     'sudden': 2411,
     'urgent': 2662,
     'power': 1818,
     'went': 2759,
     'whiff': 2774,
     'dread': 694,
     'location': 1392,
     'voices': 2703,
     'piling': 1762,
     'confusion': 478,
     'cascading': 336,
     'ab': 1,
     'drone': 708,
     'barn': 146,
     'stepping': 2357,
     'carrying': 333,
     'gretkov': 1033,
     'professional': 1842,
     'trim': 2601,
     'polished': 1802,
     'dominant': 677,
     'complaining': 460,
     'bring': 264,
     'tosses': 2560,
     'photocopy': 1752,
     'doing': 673,
     'stripping': 2385,
     'shower': 2164,
     'long': 1403,
     'plane': 1779,
     'dumping': 721,
     'sheds': 2132,
     'clothes': 431,
     'workmen': 2810,
     'cluster': 435,
     'cable': 300,
     'winches': 2786,
     'raised': 1900,
     'pours': 1816,
     'crime': 539,
     'police': 1801,
     'workers': 2808,
     'media': 1479,
     'vans': 2673,
     'clogging': 423,
     'mood': 1543,
     'black': 190,
     'ashes': 96,
     'need': 1582,
     'working': 2809,
     'stands': 2330,
     'silent': 2186,
     'staring': 2334,
     'disaster': 649,
     'heartbroken': 1112,
     'footlocker': 917,
     'stash': 2340,
     'setting': 2108,
     'aside': 97,
     'work': 2806,
     'things': 2520,
     'needs': 1586,
     'separate': 2103,
     'pile': 1761,
     'phony': 1750,
     'student': 2394,
     'ids': 1188,
     'loose': 1411,
     'photos': 1754,
     'hairdos': 1066,
     'vacuumpacked': 2671,
     'bags': 129,
     'shoes': 2147,
     'gasolinestoked': 967,
     'burning': 283,
     'rocklined': 2006,
     'pit': 1770,
     'feeding': 832,
     'papers': 1695,
     'belongings': 174,
     'crinkles': 540,
     'reveal': 1973,
     'photo': 1751,
     'burn': 282,
     'gassoaked': 969,
     'holds': 1145,
     'flames': 876,
     'rules': 2018,
     'say': 2045,
     'drop': 709,
     'sticks': 2360,
     'hefting': 1115,
     'strides': 2382,
     'covered': 524,
     'xeroxed': 2829,
     'paperwork': 1696,
     'showandtell': 2162,
     'charges': 368,
     'placed': 1773,
     'lines': 1376,
     'failed': 806,
     'fingerprint': 861,
     'didnt': 633,
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># Mapping: 단어 &lt;-&gt; 벡터안의 index no. </span></span><br><span class="line">invert_index_vectorizer = {v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vect.vocabulary_.items()}  <span class="comment"># value : key</span></span><br><span class="line">print(str(invert_index_vectorizer)[:<span class="number">100</span>]+<span class="string">'...'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{1898: 'raining', 1366: 'light', 2387: 'strobes', 2763: 'wet', 1001: 'glass', 1978: 'rhythmic', 1673...
</code></pre>
<br>
<h4 id="3-중요-단어-추출-top-3-tf-idf"><a class="markdownIt-Anchor" href="#3-중요-단어-추출-top-3-tf-idf"></a> (3) 중요 단어 추출 - Top 3 TF-IDF</h4>
<p>먼저 TF-IDF Matrix 첫번째 행 (첫 씬)의 Top 3 단어의 index을 출력해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(tf_idf_vect[<span class="number">0</span>].toarray())[<span class="number">0</span>][<span class="number">-3</span>:]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([1984, 2387, 1978], dtype=int64)
</code></pre>
<p>즉 단어 벡터중의 1984번(0.2902), 2387번(0.3109), 1978번째(0.3109) 단어가 첫 씬에서 제일 중요한 단어로 뽑혔습니다.</p>
  <br>
<p>이제 전체 TF-IDF matrix 에 적용해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.argsort(tf_idf_vect.toarray())[:, <span class="number">-3</span>:]</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:scroll">
<pre>    array([[1984, 2387, 1978],
           [1297, 1971, 1097],
           [1693, 2221,  968],
           [ 690,  299, 1482],
           [2823, 1951, 1454],
           [2218, 2815, 1454],
           [2038,  737, 2418],
           [ 852, 2761, 2570],
           [2022,  156, 1352],
           [2250, 2241, 1454],
           [ 342,  321, 2188],
           [ 614, 1557, 1534],
           [ 535, 1884, 1614],
           [2188,  139,   20],
           [ 503,  730, 1458],
           [2790, 2384,  724],
           [ 169,  915, 2444],
           [1905, 1259,   53],
           [2566, 1335,  828],
           [2300,  281, 1702],
           [2503, 1502, 2567],
           [ 794, 1454, 1018],
           [ 698, 2559, 1252],
           [1871,  237, 1454],
           [ 204,  911, 2591],
           [ 237,  596, 1454],
           [  52,  941, 1036],
           [ 211, 1156,  206],
           [1193, 2712, 1454],
           [  52, 1809, 2462],
           [ 237, 1454,  702],
           [2130,  237, 1454],
           [1995, 1890,  321],
           [1011,  259, 1454],
           [1985, 2216, 1819],
           [ 420, 2276, 1454],
           [2019, 1103, 2059],
           [2177,  353, 1252],
           [1642, 1291, 2797],
           [1454, 1012, 2439],
           [2000, 2429, 2051],
           [2111, 1559, 2661],
           [1737, 1291, 2429],
           [1116, 2079,   46],
           [2634,  697,  392],
           [1723, 1015, 1071],
           [1443, 2700, 2486],
           [ 332, 2354,  786],
           [1165,  543,  975],
           [1169, 2434, 1986],
           [1509, 2486, 2335],
           [1001, 2686, 1509],
           [1289,  854,  219],
           [2758, 1687, 1460],
           [ 544, 1031,  854],
           [2686,  741,  726],
           [ 790,  625, 2794],
           [ 955,  367, 2583],
           [ 337, 1238, 2686],
           [ 340, 1634, 2490],
           [1238, 2248, 2686],
           [ 624,  789, 2538],
           [ 579,  341,  805],
           [ 543,  270,  577],
           [  68,  146,  708],
           [1291, 1100, 1069],
           [ 162, 1291, 1033],
           [ 300, 2786, 1900],
           [ 543, 1687, 2380],
           [ 431,  782,  917],
           [2006,  128, 1751],
           [1687,  543, 2485],
           [ 552, 1866,  235],
           [2695,  762, 1102],
           [ 265, 2641,   56],
           [ 612, 1691,  441],
           [1654,  692, 1363],
           [2136,  243, 1688],
           [   7, 2848,    6],
           [2596, 1687,    4],
           [2635, 1483,  841],
           [ 653, 2650, 1882],
           [1687,  481,    4],
           [1715, 1198, 1633],
           [2219, 2482,  169],
           [1541, 2423,  538],
           [ 322, 1633, 1198],
           [1460,    4,  414],
           [1307,  270, 1593],
           [1407, 1687,  543],
           [ 237,  491, 1593],
           [ 792,  348, 2665],
           [1055, 1747, 1593],
           [2010, 1868, 1403],
           [  80, 2415, 2611],
           [2361, 1747, 1593],
           [1687, 1594, 1688],
           [1310, 1593,  143],
           [2825, 1688, 1594],
           [1460,    4, 1687],
           [   4,  508, 2848],
           [1745,  983, 1612],
           [ 180,  491, 1690],
           [1496,  132, 1600],
           [1687, 1105, 1600],
           [2849, 2211, 2378],
           [ 173, 1687, 1600],
           [1757, 2379,  652],
           [2368, 2086, 1609],
           [   4, 1312, 1572],
           [1725, 1863, 1418],
           [1873, 1274,  270],
           [1291, 2718,  683],
           [ 108, 1033, 2421],
           [1104,  650,  382],
           [ 491,  237, 1248],
           [2768, 1561, 1247],
           [ 939,  237, 1248],
           [1561, 2008, 1721],
           [ 883,  623, 1248],
           [ 944, 1561, 1246],
           [ 855, 1248, 1055],
           [ 458, 1914, 1250],
           [ 930,  966, 2550],
           [2380, 2516, 2625],
           [ 670,  228,   81],
           [2660, 1780,  902],
           [2371, 2553, 2515],
           [1716,  706,   93],
           [ 926,  780, 2848],
           [1585,  659, 1118],
           [1967, 1180,  208],
           [1992,  268, 2741],
           [ 237, 1521, 2377],
           [2178, 2003, 1296],
           [ 608, 2504,  970],
           [2849,  237,  706],
           [1655, 1049, 2700],
           [1160, 1322, 2197],
           [2375, 2223, 1776],
           [2475,  725, 2381],
           [ 703,  258,  481],
           [2646, 2229,  467],
           [ 237, 1059, 2067],
           [1828, 1669, 2112],
           [ 741, 1390,  783],
           [1562, 2407,  543],
           [ 295, 1269, 1906],
           [2437,  771,  703],
           [1291, 2245,  260],
           [2368, 2008, 2437],
           [ 891, 1400, 1960],
           [  62, 2185, 1676],
           [1465,  919,  241],
           [2658, 1358, 1582],
           [1091,  595, 1002],
           [ 738, 1424, 1600],
           [2726, 1600, 1687],
           [2451, 2787,  273],
           [   4,  680, 1687],
           [ 755,  401,  155],
           [1593,    4, 1413],
           [ 607, 1600, 1817],
           [2329, 1144,  254],
           [  80, 1601, 2582],
           [ 606, 1600, 2582],
           [1434,  630, 1381],
           [2551, 1350,  173],
           [ 727, 2137, 2702],
           [1931, 1600, 1307],
           [1692,  372, 1893],
           [1830,  237, 1600],
           [ 504, 2344,  606],
           [2408,  819,  763],
           [2623, 1342, 1228],
           [1033, 1319,  890],
           [ 521,  481,  293],
           [  10,  826, 2586],
           [ 167,  237, 1600],
           [2014, 1687, 2137],
           [1700,  218, 2120],
           [1225, 2750,  942],
           [ 442, 2848,    4],
           [ 981,  258, 1918],
           [2323, 2355, 2848],
           [ 221,    4, 2848],
           [   1,    0, 1160],
           [   8, 2014,  411],
           [1984,  694, 1552],
           [1775, 2133,  829],
           [1441, 2053, 2205],
           [  55,  275,  267],
           [1647, 1306, 2014],
           [2415, 2416,  878],
           [2780,  650, 1171],
           [2329,  673,  256],
           [ 833, 1111, 1813],
           [ 366,  543, 2485],
           [1896, 2495, 1196],
           [2604,  651, 1389],
           [1344, 1272,  882],
           [1558, 1517, 1590],
           [1697, 1661, 2192],
           [1444,  319, 2507],
           [2615, 2318,  255],
           [2746, 2477, 2441],
           [1730, 2014, 1988],
           [ 124,  133, 2435],
           [1439, 1712, 1700],
           [1282, 1137,  896],
           [2788, 1548,  152],
           [1659, 1340, 2015],
           [1486, 2441, 2011],
           [1555, 2767,  349],
           [ 204,  762,  784],
           [1894,  407, 2014],
           [ 796,   88, 2077],
           [2728, 2323, 2659],
           [1291, 2011, 1110],
           [ 577,  374, 2485],
           [2300, 1830,   11],
           [1160, 2485,    4],
           [1147, 2777,  954],
           [2284,  973,  823],
           [ 116, 1548, 2480],
           [2235,  334, 1721],
           [2207, 1801, 2000],
           [ 684, 1895, 2582],
           [2149, 1321, 1354],
           [1056,  580,   45],
           [2424, 1346,  145],
           [2159,  145, 2582],
           [ 752,  498, 2246],
           [2014, 1687,  543],
           [1687, 1590,  543],
           [1193, 1033,    4],
           [1333, 2234, 2082],
           [2230, 1291, 1033],
           [ 238,  870,    4],
           [ 543, 1687, 2485],
           [1372,  493,   91],
           [1396, 1970, 2341],
           [1301,  318, 2236],
           [1506,  791, 2577],
           [1687, 2460, 2485],
           [ 615,  230, 1800],
           [2537,  474, 2696],
           [1490, 1312,  543],
           [ 357,  237, 1454],
           [ 187, 2244, 2597],
           [ 543, 1687,    4],
           [ 741, 1999, 1201],
           [1685, 1747, 1033],
           [2588,  543, 1747],
           [1305, 1033,    4],
           [1938,  925,  924],
           [1305,  543, 2485],
           [1170, 1687,    4],
           [ 653,  728, 1782],
           [1266,   90,  817],
           [2626,  703, 2475],
           [1416, 1279, 2305],
           [2711,  703, 2475],
           [ 113, 1177, 1769],
           [1225, 2166,  820],
           [1272,  881,  297],
           [2638,  880,  674],
           [2129,  960, 1500],
           [ 351,  903,  774],
           [1731, 2240, 2446],
           [ 642, 2137, 2475],
           [2076, 1371,  369],
           [  72,  703, 2475],
           [1915, 2070, 2475],
           [1546,  334, 2480],
           [ 707, 1913, 1989],
           [2215,  872, 2669],
           [1999,  488, 1182],
           [1291,  508, 2208],
           [2367, 1361, 2286],
           [ 918, 1670,  179],
           [2215, 1713, 1670],
           [1649, 2831, 1142],
           [1768, 1268, 1361],
           [ 434,  137, 2535],
           [2081,  181, 2140],
           [1867,  664, 1219],
           [1344, 1056, 1546],
           [1556,  197, 1123],
           [1077, 1546,  709],
           [2086, 2390,   89],
           [1175,  160, 1176],
           [1057, 1315, 1088],
           [1110, 1260,  454],
           [1546, 2022, 1457],
           [1127, 1045, 2085],
           [ 630, 2304,  533],
           [1019,  280, 1453],
           [1291, 2304, 2327],
           [2469,  716,  233],
           [ 549,  884,  844],
           [2701,  493, 2449],
           [ 237,  295,  296],
           [ 754,  327, 1729],
           [1683,  702,  466],
           [1061, 1316,  714],
           [ 334, 1987, 1801],
           [2622, 1291,  295],
           [ 237, 1407,   51],
           [ 654, 1636, 2453],
           [1155, 2569, 1737],
           [1037, 1494, 2488],
           [ 419,  887, 1271],
           [1277,  676,  661],
           [ 555,  237, 1232],
           [ 445,  177, 1560],
           [ 237,   51, 1687],
           [1600, 1621, 2102],
           [ 162, 1566, 1864],
           [  46,  803,  646]], dtype=int64)
</pre>
</div>
<br>
<p>이를 변수로 저장해서 원본 데이터셋에 추가하면 다음와 같습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">top_3_words = np.argsort(tf_idf_vect.toarray())[:, <span class="number">-3</span>:]</span><br><span class="line">df[<span class="string">'important_word_index'</span>] = pd.Series(top_3_words.tolist())</span><br><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
      <th>processed_text</th>
      <th>important_word_index</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
      <td>its raining light strobes across the wet glas...</td>
      <td>[1984, 2387, 1978]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
      <td>a on his knee a syringe and a gun the eyes of...</td>
      <td>[1297, 1971, 1097]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
      <td>bournes eyes open panicked gasping trying to ...</td>
      <td>[1693, 2221, 968]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
      <td>a bourne moving for the medicine cabinet digs...</td>
      <td>[690, 299, 1482]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
      <td>one minute later bourne moves out onto the ve...</td>
      <td>[2823, 1951, 1454]</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p>하지만 지금 중요한 단어의 index만 표시 되고, 과연 어떤 단어인지를 모릅니다. 그래서 우리는 방금 추출한 “벡터”-“단어” Mapping 결과를 이용해 index에 해당하는 단어들을 추출하여 데이터셋에 저장하겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># index -&gt; word 변환함수 만들기</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_to_word</span><span class="params">(x)</span>:</span></span><br><span class="line">    word_list = []</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> x:</span><br><span class="line">        word_list.append(invert_index_vectorizer[index])</span><br><span class="line">    <span class="keyword">return</span> word_list</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'important_words'</span>] = df[<span class="string">'important_word_index'</span>].apply(<span class="keyword">lambda</span> x: convert_to_word(x))</span><br><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>page_no</th>
      <th>scene_title</th>
      <th>text</th>
      <th>processed_text</th>
      <th>important_word_index</th>
      <th>important_words</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1         EXT. MERCEDES WINDSHIELD -- DUSK</td>
      <td>1                It's raining...             ...</td>
      <td>its raining light strobes across the wet glas...</td>
      <td>[1984, 2387, 1978]</td>
      <td>[riding, strobes, rhythmic]</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>A1        INT. MERCEDES -- NIGHT</td>
      <td>A1                On his knee -- a syringe an...</td>
      <td>a on his knee a syringe and a gun the eyes of...</td>
      <td>[1297, 1971, 1097]</td>
      <td>[knee, returns, head]</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>2         INT. COTTAGE BEDROOM -- NIGHT</td>
      <td>2                BOURNE'S EYES OPEN! -- panic...</td>
      <td>bournes eyes open panicked gasping trying to ...</td>
      <td>[1693, 2221, 968]</td>
      <td>[panicked, sleeps, gasping]</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>A2        INT. COTTAGE LIVING AREA/BATHROOM ...</td>
      <td>A2                BOURNE moving for the medic...</td>
      <td>a bourne moving for the medicine cabinet digs...</td>
      <td>[690, 299, 1482]</td>
      <td>[downs, cabinet, medicine]</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>3         INT./EXT. COTTAGE LIVING ROOM/VERA...</td>
      <td>3                One minute later.  BOURNE mo...</td>
      <td>one minute later bourne moves out onto the ve...</td>
      <td>[2823, 1951, 1454]</td>
      <td>[write, remember, marie]</td>
    </tr>
  </tbody>
</table>
</div>
 <br> 
<p>이제 장면별 중요한 단어 Top 3가 모두 출력됐습니다.</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Exercise】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Text Mining</tag>
      </tags>
  </entry>
  <entry>
    <title>Python &gt;&gt; 텍스트 마이닝 (Text Mining) 소개</title>
    <url>/2020/08/19/S-Python-TextMining1/</url>
    <content><![CDATA[<h1 id="텍스트-마이닝-text-mining-소개"><a class="markdownIt-Anchor" href="#텍스트-마이닝-text-mining-소개"></a> 텍스트 마이닝 (Text Mining) 소개</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#1-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%A7%88%EC%9D%B4%EB%8B%9D%EC%9D%98-%EA%B0%9C%EB%85%90"><strong>1. 텍스트 마이닝의 개념</strong></a></li>
<li><a href="#2-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%A7%88%EC%9D%B4%EB%8B%9D-%EC%9D%91%EC%9A%A9%EB%B6%84%EC%95%BC"><strong>2. 텍스트 마이닝 응용분야</strong></a></li>
<li><a href="#3-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%B2%98%EB%A6%AC-%EB%B0%A9%EB%B2%95"><strong>3. 텍스트 데이터의 처리 방법</strong></a>
<ul>
<li><a href="#3-1-bow-bag-of-words">3-1. BoW (Bag of Words)</a></li>
<li><a href="#3-2-%EB%AC%B8%EC%84%9C-%EB%8B%A8%EC%96%B4-%ED%96%89%EB%A0%AC-document-term-matrix-dtm">3-2. 문서 단어 행렬 (Document-Term Matrix, DTM)</a></li>
<li><a href="#3-3-%EB%8B%A8%EC%96%B4%EC%9D%98-%EC%A4%91%EC%9A%94%EB%8F%84%EB%A5%BC-%EA%B3%84%EC%82%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-tf-idf">3-3. 단어의 중요도를 계산하는 방법 (TF-IDF)</a></li>
</ul>
</li>
</ul>
<p></p>
<br>
<h2 id="1-텍스트-마이닝의-개념"><a class="markdownIt-Anchor" href="#1-텍스트-마이닝의-개념"></a> <strong>1. 텍스트 마이닝의 개념</strong></h2>
<p>텍스트 마이닝은 비정형 및 반정형 텍스트 데이터에 대하여 자연어 처리(Natural Langrage Precessing) 기술과 문서 처리 기술을 적용하여 가치와 의미가 있는 정보를 찾아내는(Mining) 기술입니다.</p>
  <br>
<h2 id="2-텍스트-마이닝-응용분야"><a class="markdownIt-Anchor" href="#2-텍스트-마이닝-응용분야"></a> <strong>2. 텍스트 마이닝 응용분야</strong></h2>
<p><strong>단어의 빈도수 기반</strong></p>
<ul>
<li>Word Cloud: 텍스트 데이터에서의 단어 등장 빈도수 시각화</li>
<li>문서 분류: 감성 분류</li>
<li>Topic Modeling: 텍스트 데이터를 분석하여 여러 Topic으로 Clustering 하는 직업</li>
</ul>
<p><strong>단어의 의미 기반</strong></p>
<ul>
<li>
<p>Semantic Analysis: 사람처럼 자연어를 이해하기</p>
<br>
</li>
</ul>
<h2 id="3-텍스트-데이터의-처리-방법"><a class="markdownIt-Anchor" href="#3-텍스트-데이터의-처리-방법"></a> <strong>3. 텍스트 데이터의 처리 방법</strong></h2>
<h3 id="3-1-bow-bag-of-words"><a class="markdownIt-Anchor" href="#3-1-bow-bag-of-words"></a> 3-1. BoW (Bag of Words)</h3>
<p><strong>단어 가방(Bag of Words) 모델</strong>은 문장의 문법 및 단어 순서를 무시하고 텍스트 문서를 "단어"로 변환한 후 다양한 측정 값을 계산할 수 있도록 "가방"형식으로 저장해놓는 겁니다.</p>
<p>단어 가방 모델에서 계산 된 가장 일반적인 유형의 특성 또는 기능은 <strong>용어 빈도</strong>, 즉 용어가 텍스트에 나타나는 횟수입니다.</p>
  <br>
<p>《기생충》중의 한 대사로 예를 들어 볼게요.</p>
<img src="https://s1.ax1x.com/2020/08/19/dloE0P.png" width="60%," height="60%">
<p>이 문장에서 “그”, “을”, "듯"와 같이 실질적인 의미가 없는 "불용어"를 제외하고 의미 있는 “형태소” 단어와 해당 형태소의 등장 횟수을 추출합니다.</p>
<p>그럼 다음과 같은 표로 요약할 수 있겠습니다.</p>
<img src="https://s1.ax1x.com/2020/08/19/dl7CqI.png" width="60%," height="60%">
<p>이것이 바로 "Bag of Words 모델"입니다.</p>
  <br>
<h3 id="3-2-문서-단어-행렬-document-term-matrix-dtm"><a class="markdownIt-Anchor" href="#3-2-문서-단어-행렬-document-term-matrix-dtm"></a> 3-2. 문서 단어 행렬 (Document-Term Matrix, DTM)</h3>
<p>위에 설명드린 Bag of Words는 한 문장에 대해 적용하는 것이고, 문장이 여러 개가 있을 때는 (DataFrame 형태) <strong>문서 단어 행렬 (Document-Term Matrix)</strong> 로 표현됩니다.</p>
<p>똑같이 《기생충》중의 대사들로 예를 들어 볼게요.</p>
<img src="https://s1.ax1x.com/2020/08/19/d1SKaQ.png" width="70%," height="70%">
<img src="https://s1.ax1x.com/2020/08/19/d1pLX6.png" width="90%," height="90%">
<p>이처럼 여러 문장의 경우에 "문서 단어 행렬"은 위와 같이 표현 됩니다.</p>
  <br>
<h3 id="3-3-단어의-중요도를-계산하는-방법-tf-idf"><a class="markdownIt-Anchor" href="#3-3-단어의-중요도를-계산하는-방법-tf-idf"></a> 3-3. 단어의 중요도를 계산하는 방법 (TF-IDF)</h3>
<p>문서 단어 행렬은 그저 단어의 등장 횟수를 단순히 세는 겁니다. 각 문장에서 어떤 단어가 중요한지 알 수 없습니다.<br>
이를 알아내기 위해 우리는 “TF-IDF (Term Frequency-Inverse Document Frequency)” 라는 지표를 사용합니다.</p>
  <br>
<ul>
<li>
<p><strong>TF (Term Frequency):</strong> 특정 문서에서 특정 단어의 등장 횟수</p>
</li>
<li>
<p><strong>DF (Document Frequency):</strong> 특정 단어가 등장한 문서의 수</p>
</li>
<li>
<p><strong>IDF (Inverse Document Frequency):</strong> DF와 반비례 값을 가지는 수식<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>d</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mi>n</mi><mrow><mn>1</mn><mo>+</mo><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">IDF(d,t) = \ln ( \frac{n}{1+DF(t)} )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.27em;vertical-align:-0.52em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><strong>TF-IDF (Term Frequency-Inverse Document Frequency):</strong> TF와 IDF를 곱한 값</p>
<br>
</li>
</ul>
<p><strong>TF-IDF로 특정 문서 안의 특정 단어의 중요도를 나타나는 원리는:</strong></p>
<p>특정 문서에서는 많이 등장했으면서 다른 문서에서 잘 등장하지 않은 단어가 결국 이 문서에서 가장 중요한 단어가 될것이다라는 가설입니다.</p>
  <br>
<p><strong>[예]</strong> 문서1에서 "아들"와 “계획” 이 두 단어의 TF-IDF를 한번 계산해봅시다.</p>
<img src="https://s1.ax1x.com/2020/08/19/d1u2eH.png" width="90%," height="90%">
<ul>
<li><strong>Step 1. TF</strong><br>
A: 1<br>
B: 1</li>
<li><strong>Step 2. DF</strong><br>
A: 1<br>
B: 3</li>
<li><strong>Step 3. IDF</strong><br>
A: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mrow><mn>1</mn><mo>+</mo><mn>1</mn></mrow></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mn>2</mn><mo>≈</mo><mn>0.6931</mn></mrow><annotation encoding="application/x-tex">\ln( \frac{4}{1+1} ) = \ln 2 \approx 0.6931</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">9</span><span class="mord">3</span><span class="mord">1</span></span></span></span><br>
B: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mn>4</mn><mrow><mn>1</mn><mo>+</mo><mn>3</mn></mrow></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\ln( \frac{4}{1+3} ) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
<li><strong>Step 4. TF-IDF</strong><br>
A: 1 * 0.6931 = 0.6931<br>
B: 1 * 0 = 0</li>
</ul>
<br>  
<p><strong>혜석:</strong></p>
<p>"계획"이라는 단어가 《기생충》의 문장들에서 너무 많이 등장해서 문서1에서 특별히 중요한 단어라고 볼 수 없다.</p>
<p>하지만 "아들"이라는 단어가 다른 문장에서 한번도 나타나지 않았기 때문에 문장1에서는 매우 중요하다고 볼 수 있다</p>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Study】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Text Mining</tag>
      </tags>
  </entry>
  <entry>
    <title>【실습】 Python &gt;&gt; Text Mining -- 호텔 리뷰</title>
    <url>/2020/08/29/E-Python-TextMining-2/</url>
    <content><![CDATA[<h1 id="text-mining-실습-호텔-리뷰-데이터-감성-분류-긍정부정-키워드-분석"><a class="markdownIt-Anchor" href="#text-mining-실습-호텔-리뷰-데이터-감성-분류-긍정부정-키워드-분석"></a> 【Text Mining 실습】 – 호텔 리뷰 데이터: 감성 분류 &amp;  긍정/부정 키워드 분석</h1>
<p></p><ul class="markdownIt-TOC">
<li><a href="#0-%EA%B0%9C%EC%9A%94"><strong>0. 개요</strong></a></li>
<li><a href="#1-library-data-import"><strong>1. Library &amp; Data Import</strong></a></li>
<li><a href="#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0"><strong>2. 데이터셋 살펴보기</strong></a></li>
<li><a href="#3-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%B2%98%EB%A6%AC"><strong>3. 한국어 텍스트 데이터 전처리</strong></a>
<ul>
<li><a href="#3-0-konlpy-%EC%84%A4%EC%B9%98">3-0. konlpy 설치</a></li>
<li><a href="#3-1-%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%A0%81%EC%9A%A9">3-1. 정규 표현식 적용</a></li>
<li><a href="#3-2-%ED%95%9C%EA%B5%AD%EC%96%B4-%ED%98%95%ED%83%9C%EC%86%8C-%EB%B6%84%EC%84%9D-%EB%AA%85%EC%82%AC-%EB%8B%A8%EC%9C%84">3-2. 한국어 형태소 분석 - 명사 단위</a></li>
<li><a href="#3-3-%EB%B6%88%EC%9A%A9%EC%96%B4-%EC%82%AC%EC%A0%84">3-3. 불용어 사전</a></li>
<li><a href="#3-4-word-count">3-4. Word Count</a></li>
<li><a href="#3-5-tf-idf-%EC%A0%81%EC%9A%A9">3-5. TF-IDF 적용</a></li>
</ul>
</li>
<li><a href="#4-%EA%B0%90%EC%84%B1-%EB%B6%84%EB%A5%98-logistic-regression"><strong>4. 감성 분류 – Logistic Regression</strong></a>
<ul>
<li><a href="#4-1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%83%9D%EC%84%B1">4-1. 데이터셋 생성</a></li>
<li><a href="#4-2-training-set-test-set-%EB%82%98%EB%88%84%EA%B8%B0">4-2. Training set / Test set 나누기</a></li>
<li><a href="#4-3-%EB%AA%A8%EB%8D%B8-%ED%95%99%EC%8A%B5">4-3. 모델 학습</a></li>
<li><a href="#4-4-%EC%83%98%ED%94%8C%EB%A7%81-%EC%9E%AC%EC%A1%B0%EC%A0%95">4-4. 샘플링 재조정</a></li>
<li><a href="#4-5-%EB%AA%A8%EB%8D%B8-%EC%9E%AC%ED%95%99%EC%8A%B5">4-5. 모델 재학습</a></li>
</ul>
</li>
<li><a href="#5-%EA%B8%8D%EC%A0%95-%EB%B6%80%EC%A0%95-%ED%82%A4%EC%9B%8C%EB%93%9C-%EB%B6%84%EC%84%9D"><strong>5. 긍정 / 부정 키워드 분석</strong></a></li>
</ul>
<p></p>
<br>
<h2 id="0-개요"><a class="markdownIt-Anchor" href="#0-개요"></a> <strong>0. 개요</strong></h2>
<p>제주 호텔의 리뷰 데이터(평가 점수 + 평가 내용)을 활용해 다음 2가지 분석을 진행합니다:</p>
<ol>
<li>
<p>리뷰속에 담긴 사람의 긍정 / 부정 감성을 파악하여 분류할 수 있는 감성 분류 예측 모델을 만든다</p>
</li>
<li>
<p>만든 모델을 활용해 긍정 / 부정 키워드를 출력해, 이용객들이 느낀 제주 호텔의 장,단점을 파악한다</p>
</li>
</ol>
  <br> 
<h2 id="1-library-data-import"><a class="markdownIt-Anchor" href="#1-library-data-import"></a> <strong>1. Library &amp; Data Import</strong></h2>
<p><strong>&gt;&gt; 사용할 Library</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>  
<p><strong>&gt;&gt; 사용할 데이터셋</strong></p>
<p><a href="https://www.tripadvisor.co.kr/" target="_blank" rel="noopener">Tripadvisor</a> 여행사이트에서 "제주 호텔"로 검색해서 나온 리뷰들을 활용합니다. (평점 &amp; 평가 내용 포함)</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/tripadviser_review.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>4</td>
      <td>여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 ...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>2일 이상 연박시 침대, 이불, 베게등 침구류 교체 및 어메니티 보강이 필요해 보입...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4</td>
      <td>지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 ...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>5</td>
      <td>방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요!...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버...</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<p><strong>&gt;&gt; Feature Description</strong></p>
<ul>
<li>
<p>rating: 이용자 리뷰의 평가 점수 (1~5)</p>
</li>
<li>
<p>text: 이용자 리뷰 평가 내용</p>
<br>
<br>
</li>
</ul>
<h2 id="2-데이터셋-살펴보기"><a class="markdownIt-Anchor" href="#2-데이터셋-살펴보기"></a> <strong>2. 데이터셋 살펴보기</strong></h2>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># dimension</span></span><br><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1001, 2)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 결측치</span></span><br><span class="line">df.isnull().sum()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>rating    0
text      0
dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># information</span></span><br><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 1001 entries, 0 to 1000
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   rating  1001 non-null   int64 
 1   text    1001 non-null   object
dtypes: int64(1), object(1)
memory usage: 15.8+ KB
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># text 변수 확인</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다.'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'text'</span>][<span class="number">100</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'올 봄에 벚꽃기간에 방문, 협재를 바라보는 바다뷰가 좋고 대로변이라 렌트해서 가기도 좋음. 조식은 이용안했는데 근처 옹포밥집까지 아침 산책겸 걸어가서 하고옴. 루프탑 수영장과 바가 있었는데 내가 갔을때는 밤에 비바람이 너무 불어서 이용못하고옴 ㅠㅠ  단점으로는 모 유명 여행블로거 리뷰처럼 화장실 물떄가... 그거빼곤 다 만족'
</code></pre>
 <br> 
<p>“text” 내용을 확인해보면, 소량의 "특수 문자"와 "모음"이 존재하는 경우가 있습니다. 이들은 Text Mining을 적용할 의미가 없기 때문에 정규표현식을 이용해서 제거해보도록 할게요.</p>
<p><br> <br></p>
<h2 id="3-한국어-텍스트-데이터-전처리"><a class="markdownIt-Anchor" href="#3-한국어-텍스트-데이터-전처리"></a> <strong>3. 한국어 텍스트 데이터 전처리</strong></h2>
<p>기계가 텍스트 형식으로 되어 있는 리뷰 데이터를 이해하려면, 텍스트 데이터를 단어 단위로 분리하는 전처리 괴정이 필요합니다. 여기서 분리된 단어들은 Bag of Words로 Count 기반으로 나타날 수도 있고, TF-IDF를 통해서 점수로 나타날 수도 있습니다.</p>
<p>먼저 리뷰의 평가 내용을 단어화해서 형태소를 추출하고, 그 다음 Bag of Words를 생성하여 TF-IDF 변환을 진행하겠습니다.</p>
<br>
<h3 id="3-0-konlpy-설치"><a class="markdownIt-Anchor" href="#3-0-konlpy-설치"></a> 3-0. konlpy 설치</h3>
<p>영문이 아닌 한글을 처리해야 하기 때문에 "konlpy"이라는 library를 사용합니다.</p>
<blockquote>
<p>참고 자료:</p>
<ol>
<li><a href="https://ellun.tistory.com/46" target="_blank" rel="noopener">파이썬 한글 형태소 분석기 KoNLPy 설치방법 및 에러해결</a></li>
<li><a href="https://konlpy-ko.readthedocs.io/ko/v0.4.3/install/#id2" target="_blank" rel="noopener">KoNLPy 홈메이지 – 설치하기</a></li>
<li><a href="https://data-scientist-brian-kim.tistory.com/54" target="_blank" rel="noopener">[Anaconda에서 KoNLPy 설치하기] 삽질은 이제 그만~</a></li>
</ol>
</blockquote>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">!pip install konlpy==<span class="number">0.5</span><span class="number">.2</span> jpype1 Jpype1-py3</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    Requirement already satisfied: konlpy==0.5.2 in d:\anaconda\lib\site-packages (0.5.2)
    Requirement already satisfied: jpype1 in d:\anaconda\lib\site-packages (1.0.2)
    Requirement already satisfied: Jpype1-py3 in d:\anaconda\lib\site-packages (0.5.5.4)
    Requirement already satisfied: tweepy&gt;=3.7.0 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (3.9.0)
    Requirement already satisfied: lxml&gt;=4.1.0 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (4.5.0)
    Requirement already satisfied: colorama in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (0.4.3)
    Requirement already satisfied: numpy&gt;=1.6 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (1.18.1)
    Requirement already satisfied: beautifulsoup4==4.6.0 in d:\anaconda\lib\site-packages (from konlpy==0.5.2) (4.6.0)
    Requirement already satisfied: typing-extensions; python_version &lt; "3.8" in d:\anaconda\lib\site-packages (from jpype1) (3.7.4.1)
    Requirement already satisfied: requests[socks]&gt;=2.11.1 in d:\anaconda\lib\site-packages (from tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (2.23.0)
    Requirement already satisfied: requests-oauthlib&gt;=0.7.0 in d:\anaconda\lib\site-packages (from tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.3.0)
    Requirement already satisfied: six&gt;=1.10.0 in d:\anaconda\lib\site-packages (from tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.14.0)
    Requirement already satisfied: chardet&lt;4,&gt;=3.0.2 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (3.0.4)
    Requirement already satisfied: certifi&gt;=2017.4.17 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (2020.6.20)
    Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.25.8)
    Requirement already satisfied: idna&lt;3,&gt;=2.5 in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (2.9)
    Requirement already satisfied: PySocks!=1.5.7,&gt;=1.5.6; extra == "socks" in d:\anaconda\lib\site-packages (from requests[socks]&gt;=2.11.1-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (1.7.1)
    Requirement already satisfied: oauthlib&gt;=3.0.0 in d:\anaconda\lib\site-packages (from requests-oauthlib&gt;=0.7.0-&gt;tweepy&gt;=3.7.0-&gt;konlpy==0.5.2) (3.1.0)
</pre>
</div>
<br>
<h3 id="3-1-정규-표현식-적용"><a class="markdownIt-Anchor" href="#3-1-정규-표현식-적용"></a> 3-1. 정규 표현식 적용</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 함수 정의</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_regular_expression</span><span class="params">(text)</span>:</span></span><br><span class="line">    hangul = re.compile(<span class="string">'[^ ㄱ-ㅣ 가-힣]'</span>)  <span class="comment"># 한글 추출 규칙: 띄어 쓰기(1 개)를 포함한 한글</span></span><br><span class="line">    result = hangul.sub(<span class="string">''</span>, text)  <span class="comment"># 위에 설정한 "hangul"규칙을 "text"에 적용(.sub)시킴</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>만들어 놓은 정규 표현식을 "text"의 첫 행에 적용해서 결과 한번 확인해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'text'</span>][<span class="number">0</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다.'
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다'
</code></pre>
  <br>
<p>정규 표현식을 적용한 후 특수 문자가 잘 제거된 것을 확인할 수 있습니다.</p>
  <br>
<h3 id="3-2-한국어-형태소-분석-명사-단위"><a class="markdownIt-Anchor" href="#3-2-한국어-형태소-분석-명사-단위"></a> 3-2. 한국어 형태소 분석 - 명사 단위</h3>
<p><strong>&gt;&gt; 명사 형태소 추출</strong></p>
<blockquote>
<p>참고 자료: <a href="https://konlpy.org/ko/v0.5.2/api/konlpy.tag/" target="_blank" rel="noopener">konlpy.tag 패키지 Documentation</a></p>
</blockquote>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> konlpy.tag <span class="keyword">import</span> Okt</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p>명사 형태소 추출 함수 <code>Okt()</code> 를 이용하여 정규표현식을 적용한 “text” 첫 행 내용의 형태소를 추출해 보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>'여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다'
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">okt = Okt()  <span class="comment"># 명사 형태소 추출 함수</span></span><br><span class="line">nouns = okt.nouns(apply_regular_expression(df[<span class="string">'text'</span>][<span class="number">0</span>]))</span><br><span class="line">nouns</span><br></pre></td></tr></tbody></table></figure>
<pre><code>['여행', '집중', '휴식', '제공', '호텔', '위치', '선정', '또한', '청소', '청결', '상태']
</code></pre>
<br>
<p>이제 이를 전체 말뭉치(corpus)에 적용해서 명사 형태소를 추출해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 말뭉치 생성</span></span><br><span class="line">corpus = <span class="string">""</span>.join(df[<span class="string">'text'</span>].tolist())</span><br><span class="line">corpus</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow-x: scroll; overflow-y: scroll;">
    '여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다.2일 이상 연박시 침대, 이불, 베게등 침구류 교체 및 어메니티 보강이 필요해 보입니다. 베스트 웨스턴 회원의 경우 객실 뷰와 층수 요청에 적극적으로 반영해 주시길 바랍니다.지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 알고오시면 좋을거같아요 (세면도구와  잠옷은필수로챙기셔야해용) 그것만챙겨오시면 잘쉬었다가실수있답니당방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요!! 다음에도 제주도 오면 꼭 여기서 지낼겁니다ㅎㅎ 1박만 머문다는게 너무 아쉽네요ㅠㅠ저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버스정류이 있어서 너무 좋았습니다. 12시에 도착해서 가방 맡기려 했는데 일찍 정비된방이 있다며 바로 입실하고 룸도 업그레이드 해주셔서 직원분이 친절해 정말 좋았어요^^바다전망이라해서 기대했는데 영아니네요.. 전일 함덕대명콘도에서 1박했는데 그곳이 실내 분위기랑 바다전망이 훨 좋아요..손님이 없는 날이라고 가장 바다가 이쁘게 보이는 방으로 배치해 주셨다. 불편함에 대해 바로 대응 써비스 해주었고 조식도 사소한 부분까지 신경써서 아주 맛있었다. 특급 호텔은 아니지만 트랜디하고 즐거운 다양함에 대해 고민한 흔적이 였보인다. 여름에 꼭와서 수영장을 사용해 보고 싶다 ~ !엄마와 둘이 여행왔다가 가격대비 좋다고 하여 다녀왔어요 ㅎㅎ 듣던대로 깔끔했고 위치도 너무 좋았어요 주위 마트 식당들 동문시장도 가까워서 좋았고 앞에 바다가 있어서 더 좋았습니다 ㅎㅎ 또 방문의사 있어요 ~딸 둘과의 4일동안의 제주여행줌 2박 숙소로 정해진 제주 휘슬락 호텔~ 처음엔 공항과 가까운 곳으로만 생각했으나 시설도 넘 깨끗하고 직원분들도 모두 친절모드로 제주여행의 마지막을 넘넘 좋게 마무리하고 돌아가네요~~^^ 테라스에서 보이는 전경도 넘 멋지네요♡ 인근 동문재래시장도 가까워 야시장 이용도하고 너무너무 잘다녀왔어요. 다음에 또 이용할께요.제주여행 2일차!!! 호텔 휘슬락에 체크인 ㄱㄱㄱ. 뷰 기가막힙니다... 깨끗하고요~~ 주변에 갈데 많습니다. 여친과 잊지못할 추억 만들어봅니다^^ 좋은 가성비에 분위기 나쁘지않네요 추천 드립니다. 후회없으실듯!!!예전에 그랜드 호텔일 때 저희 아이 돌잔치를 여기 삼다정에서 했었더랬죠. 제주도에서는 아주 전통있는 호텔입니다. 그 후로 메종 글래드로 업그레이드 되었는데, 위치, 시설, 서비스에 비해 매우 합리적인 가격대의 만족스러운 호텔입니다. 그래서 저희는 명절에 제주도 내려오면 늘 글래드에 숙박해요. 특히 1층에 아티제와 백미당이 있어서, 여기 커피와 베이커리를 좋아하는 저희 가족에게는 플러스예요.지금까지 제주여행을 다니면서 여러호텔을 이용해보았지만, 메종 글래드에서 가장 만족스러웠습니다. 우선 공항의 접근성과 쇼핑의 편리함 그리고 조식의만족도가 최고이며 무엇보다 직원분들의 친절함이 기억에 남습니다. 앞으로 우리가족은 제주에 갈땐 메종을 찾기로했답니다.엄마랑 첫 제주도 여행인데 침구가 너무 좋았고, 직원분들도 친절하셔서 편안하게 쉬고 왔습니다. 교통도 편해서 짧은 여행이었지만 알차게 볼 수 있었도요. 3층에서 이틀 묵었었는데 정원 같은 곳이 바로 보여서 이뻤어요. 거기 돌아다니니까 수영장도 2개 있었는데 겨울이라 못써서 아쉬웠습니다 ㅠㅠ 여름에 꼭 여기 오려구요!! ㅎㅎㅎ 추천합니다~~친구가 제주도에 놀러와서 투숙을 하였는데 객실이 깔끔하고 뷰도 좋았어요. 야외 수영장이 보이는 방향이었는데 야간에는 조명을 켜서 너무 예쁘더라구요. 체크인하러 가는 그 순간조차도 벨맨에게 대접을 받았습니다. 왠만하면 실명을 거론하지 않는데 프론트에 문J.. 이름이 기억이 안나지만 체크인이 너무 친절해서 기분이 좋았습니다. 웃는 모습이 너무 선하고 밝아서 여행 첫날부터 스타트가 좋았네요. 다음에 투숙을 할 경우가 생긴다면 또 다시 이용할거에요~!!차를 좋아하는 아이들에게는 최고의 선물~~ 카운터에서 친절하게 안내해주셔서 편하게 이용하고 왔어요~~ 삼다정 디너 최고입니다. 기회가 되면 여름에 또 오고 싶네요~~직원분들은 눈만 마주쳐도 도와주려고 할 정도로 엄청 친절. 미니바 무료도 굿. 시설은 최근 지어진거라 당연 청결. 주변에 관광지도 가까운곳이 많음. 제주여행숙고소 강추~~ 내가 숙은 위치에서 찍은 야경뷰조식조타하여 일부러 저녁 많이 안 먹고 일찍 일어나서 동네 한바퀴 돌아주고 씻고 나서 2층가서 먹방 했네요. 신라호텔보다 퀄리티 좋음신제주에 위치한 매우 깨끗한 호텔입니다. 특히 조식을 추천 드립니다.   구제주에 오래된 호텔에 비할 수 없는 기분 좋은 호텔이였습니다.모녀 여행 중 제주시 1박을 위해 선택한 호텔입니다. 우선 공항에서 가깝고 오픈한 지 얼만 안 된 것 같아 예약했습니다.  호텔은 대로변에 있어 접근성이 좋고 (호텔은 5~10분거리), 더군다나 공항까지 셔틀버스 운행합니다. 데스크 직원분들 매우 친절하시고 주차안내분도 친절하셔서 첫 인상이 좋았습니다. 룸은 트윈으로 했는데 생각보다 큰 방에 퀸 사이즈가 2개여서  ㅋㅋㅋㅋ 대만족이었습니다. 스타일러가 있어서 여행 중 입었던 옷 다 돌렸습니다. 조식은 가짓수가 많지는 않으나 있어야 될 것은 다 있는 느낌?   근데 화장실이 조명이 너무 어둡고 내부인테리어도 어두워서 ㅋㅋㅋ 그 외의 호텔 분위기와 매우 이질적입니다. (이건 개인적인 취향인 것 같네요) 어메니티도 구비되어 있는데 향이 독특합니다. ㅋㅋㅋ 실망한 부분은 여행 시 산 과일을 먹으려고 나이프와 포크 부탁했는데 서비스가 안되더라고요..그리고 차와 커피 준비된 부분이 빈약합니다. (어느 부분은 특급호텔 표방인 것 같고 어떤 부분은 모텔인 것 같은 )  하지만 결론적으로 가성비  훌륭, 접근성 훌륭, 청결도 훌륭해서 엄마와 함께 쾌적한 시간을 보냈습니다. 감사합니다.슈페리어킹룸에 하루 숙박한 후기입니다.  제주여행의 마지막날 숙박했는데요 지은지 얼마 안 된 느낌의 새 건물 이었습니다. 건물 안 인테리어는 약간 유럽 스타일이었구요 그림이나 조각들이 생각보다 많아서 놀랐어요 복도랑 객실도 그림이 전시되어 있고 전부 카펫으로 되어 있었습니다. 객실은 비슷한 등급의 다른 호텔들보다 큰 편이었고 침대는 두 명이서 자기에 충분할 정도로 정말 컸습니다. 비가 오는 날이라 비를 조금 맞았는데 객실 내에 LG 스타일러가 있어서 외투를 돌렸더니 뽀송뽀송해져서 완전 만족 합니다!! 진짜 스타일러 강추!!!! 그리고 무료셔틀 이용했는데 공항까지 한 7분 정도 걸렸습니당! 셔틀은 운행하는 시간이 정해져 있는데 미리 예약 하셔야 이용 하실 수 있어요~~  다음에 제주도 온다면 또 이용하고 싶은 호텔이네요~^^시티뷰이지만 오름도 볼 수 있고 무엇보다도 교통이 훌륭하였다 다만 바로 도로가인 관계로 밤에 차량 소리가 다소 신경쓰였다급하게 방문했는데 방도 깔끔하고 직원분들 모두 친절하셔서 좋았습니다~  1층 편의점도 있어서 좋았어요~ 칫솔은 챙겨야합니다 ㅎㅎ 재방문 의사 있습니다동계훈련을 신제주로 오게 되었는데̄̈,  훈련 하는동안 라마다호텔에서 편하게 잘 쉬었다̆̎ 갑니다̆̎!  가족과 연인과 함께 와도 좋을 것 같아요̆̈!  조식도 괜찮고 전체적으로 깔끔하고 편리하게 되어있네요̆̈ ◡̈⋆  사진이 너무 많아 첨부하진 못했지만, 엘리베이터 가는̆̈ 곳 쪽에 빔으로 실시간 비행기 시간을 알려줘서 너무 편하고 신기했어요̆̈! 👍공항까지 택시10분 7000원미만의 택시비로 이동가능. 침구 및 룸상태 최상. 허나 욕실 슬리퍼없어 위생상태 염려. 카펫도 염려..많이 불편했음.  설날 조식에 떡국이 빠져있어 당황함. 간단히 떡국먹고 공항가려고 현장결재하며 들어갔는데, 넘나 당황스려운..ㅠ 중국인들 먹는 만두는 종류별로 있더구만요. 현장결재 조식 비추. 먹을게 없고, 365일 똑같은 메뉴라는 답변들음. 첫 도착. 제일 첫 번째 주차 걱정 아닐까요? 친절한 할아버지들 안심시켜주시고 깔끔한 객실 컨디션 최고. 적당하고 짜지 않은 조식. 문어상 처리도 친절하고 깔끔하고 최고입니닺회사 출장차 다녀왔는데, 시설도 너무 좋고 직원들도 너무 친절해서 서울갈때마다 이용할거 같아요!! 다음에 또 들릴거 같아요프론트도친절하시고 방도깔끔하고 간혹 이벤트성 업그레이드?도 해주시고ㅎㅎ수영장도 및 부대시설도 최고입니다.그래서 항상 제주도갈때마다 롯데만갑니다롯데시티호텔 제주는 비지니스 호텔이지만 가족여행객이 머무르기 손색이 없습니다. 깨끗하고 쾌적한 객실과 넓은 욕조가 겸비 되어 있고 사계절 온수풀로 무료 이용가능한 6층 야외 수영장까지 있어 중문 표선등 원거리 여행지 복귀후에도 밤 10시까지 수영장 이용이 가능합니다. 또한 시내에 있어 유명 식당 등을 방문하기 아주 편리합니다일단 공항에서 5-10분 정도 가까운 위치에 있어 너무 편리했어요 ~ 주차장도 지하 4층까지 공간이 넉넉해 주차도  편하게 할 수 있었습니다 ! 체크인할때도 직원분들이 친절히 응대해줘서 기분좋게 체크인할 수 있었어요 다른 문의사항이 없으신지 물어봐주시는 친절함에 감동했습니당 객실도 역시 롯데라는 생각이 들 정도로 깔끔하고 편안했어요ㅎㅎ 풀장도 따뜻하게 이용할 수 있어서 더 좋았구요 옆에 락타룸,샤워장이 마련되어있고 코인세탁실이있어서 정말 편리하게 이용했습니다 ! 오션뷰가 멀리 보이는 바다였지만 ㅠㅠ 야경이 끝내주네요 ~ 남자친구랑 첫 여행이였는데 덕분에 편안하고 행복한 여행이였습니당 감사합니다 ^^ 다음에도 제주를 온다면 꼭 방문하고 싶습니다 !!! ❤이번 제주도 여행때 롯데시티제주에 2박 숙박했습니다. 체크인때 프런트 직원이 좋은 객실로 배정해 주셔서 공항에 비행기 이착륙이 보이는 객실을 받았습니다. 객실 클리닝도 깔끔하고 인테리어도 만족했습니다. 호텔에 숙박하면서 근무하시는 분들, 청소 아주머니들도 마주치면 밝게 인사 해주셔서 기분이 좋았습니다! 다음번에도 재방문 하겠습니다.코로나 사태로 조심스러운 투숙이었지만 직원분들 친절하고 투숙도 만족스러웠습니다. 다만 객실내 노화된 곳이 보여서 아쉬웠습니다. 벽지도 주름지고 욕실 타일도 깨져있고 가구 코너도 곳곳이 까져 있네요. 주변 중국 관광객이 항상 많은 곳에 위치해 있어서인지 사람들이 늘 북적이는 감이 없지 않습니다 전반적으로 객실 관리 상태 및 청소 상태는 뛰어난 편이며 직원들의 피드백 역시 좋은편입니다   도시 내부 관광 특화 지역에 위치해 있다보니 전반적으로 근처 카페 및 식당 가기에는 편리하지만 전반적으로 호텔 및 위치가 제주만의 고유 특색이 잘 들어나지 않는 것이 아쉽습니다 하루 이틀 제주 도시를 스테이시에는 좋은 선택이 될듯합니다짧게 다녀온 제주로 선택하게된 스테이였는데, 위치나 뭐나 매우 만족스럽고, 신라스테이는 어딜가도 동일하게 느낌이 비슷해서 더 좋은 것 같아요. 후기에서 많이 봤던 스타벅스가 없어졌다고 하셔서 가장 아쉬웠고, 번화가라 시끄럽다고 하셨지만 전 못느꼈는데 ㅠㅠㅠㅠ 아침에 청소 소리가 너무 커서 방음이 너무 아쉬웠습니다. 공항과 가깝고 시설또한 좋습니다  프론트 직원분 들도 넘 친절하시구요  주변에 먹거리도 많구요  단점이라면 주차장이 부족한 것 같아요  ㅠㅠ 늦게 오심 이중주차  하셔야 합니다역시 미리미리 예약을 안해두면 꼭 트윈이다. 항상 혼자지만 침대는두개.그래도 불편한건없다. 깔끔하고 방음도 겐찮은듯. 조식을 늦게일어나 놓쳤다.그래도,일층 에서 커피와함께빵도먹었다.돈주고ㅠ.중국인관광객들이 괘 있는듯.공항과 가깝고 무료 셔틀 타고 편하게 호텔까지 왔습니다.객실에서 눈앞에 펼쳐지는 바다가 너무 멋져서 다른 관광지에 가지 않아도 힐링이 됩니다.호텔 시설도 훌륭하고, 낡은 부분이 있지만 객실도 깔끔합니다.조용하고 편안한 휴식이 필요했는데  테라스에서 바로 보이는 바다와 바다가 보이는 식당에서의 맛있는 조식까지 만족스런 시간이었어요. 오래되었지만 깨끗한 룸도 넓은 욕실도 좋았고요. 연수물인 듯 물도 부드러웠어요. 어메니티는 조금 아쉬웠지만  조식과 수영장 피트니스 패키지로 이용해 잘 쉬고 왔습니다.  위치도 좋았고 전망도 좋았습니다 가족이 함께이용하였는데  좁지 않고 공간이  넓어 답답하지 않았습니다 화장실공간이  넓어 좋았으나 미닫이라 조금불편했네요로비를 비롯해 모든 직원분들이 친절하고 수영장을 비롯한 각종 부대시설이 좋았다 잊고 온 물건을 사는데도 편리하고 좋았음. 아침식사를 할때 바다뷰도 훌륭해서 밥맛이 더 좋음!! 로비 피아노 연주도 좋음!!아이들이 2층침대를 아주 좋아했어요. 방도 쾌적하고 직원분들도 친절했습니다. 수영장도 편하게 이용했어요. 시내에서 가까운것도 좋았습니다. 로비 피아노연주도 색달랐어요. 즐거운 여행했습니다.룸타입은 기억이 안나요.. 패밀리 양실인거 같은데... 거실에 침대가 있고, 방은 한실인가봐요. 방에 침대가 있는게 나을거 같다라는 생각을 했어요. 바다 뷰라서 너무너무 예뻤어요. 동문시장도 가깝고, 서부두수산시장도 가까워서 새벽에 경매하는거 구경하기도 좋았어요. 조식도 추가 해서 먹었는데, 나쁘지는 않았어요.. 아침은 어차피 배부르게는 안먹으니까요...현재 호텔 묵고 있다 인터넷 예약할때 뷰지정할 수 없다고 돼있었는데 와보니 지정할수 있는데 안해서 오션뷰 못준단다 ㅎ  프런터에 문의하면 된다고 하는것이 없다 usb에 담아온 영화 보려고 하니깐 안되어서 문의하니 시스템상 안된단다  티브이 채널도 몇개 안된다 콘센트 플러그도 몇개 안되어서 와이프 폰 충전하는 것 빼고 내것 충전했다 결정적으로 낼 아침 콜택시 불러 달라는 것도 지금 안되고 낼 아침 다시 전화하란다 처음 경험하는 호텔이다 문의하면 된다고 하는 것이 없다 방이 널찍한 거 빼고 전 혀 장점 없는 인생 최악의 호텔이다전통시장 및 시내 중심가에 가까워 주변 관광이 편리하고 바닷가에 위치하여 전망이 우수한 호텔입니다. 지어진지는 된 되었지만 비교적 시설이 깨끗하고 직원들도 친절한 편임제주공항에서 가깝고 1박을 하였는데 방도 깨끗하고 직원의 친절도 좋았습니다. 특히 방이 따뜻하여 다음에 한번더 가볼 예정입니다.여름휴가때 가족들과 함께 코너스위트룸에 묶었습니다~ 공항 근처이고 동문시장이 가까워서 좋았어요~ 오션뷰가 너무 좋았는데 유리창은 엄청 깨끗하지 않았어요 ㅜㅜ 그래도 불편함 없이 지냈습니다~! 코너스위트는 캠핑 패키지로 캠핑 테이블세트, 작은 텐트가 있었는데요~ 아이들이 좋아할 것 같더라구요! 저희는 4식구였는데 침대 방은 에어컨이 구비되어 있었는데 작은방에는 에어컨이 없어서 거실 텐트에서 잤습니다~ 매트도 깔려있고 시원해서 더 좋았어요~ 조식도 맛있었습니다~! 바다뷰 자리에서 조식 드시려면 조금 일찍 가셔야 할 것 같아요~ 저희가 갔을 때에는 옆에 탑동공원? 쪽에 프리마켓과 공연이 매일 저녁 열려서 이틀동안 재미있게 구경했어요~^^ 동문시장에 가서 식사나  쇼핑 등을 하려면 이 호텔을 이용하면 좋다. 관덕정 정문 앞에 위치하며 시장은 도보로 5-10분 소요된다. 호텔 뒷편으로 해장국집을 이용할 수 있다.가격대비에  엄청깨끗하고 시설도 좋아요 !!! 조용해서 좋네요! 직원분도 친절하구요 공항에서도  가깝고 동문시장에서도 가까워서 좋아요!시설은 좀 오래 되었지만 동문시장, 서문시장 도보 10분거리이고 공항에서도 가깝습니다. 제주 목관아 맞은편에 위치하고 있어서 슬슬 마실삼아 다녀오심도 좋을듯해요.우선 호텔 위치가 공항에서 가깝고요   방도 업그레이드 해줬습니다. 별관에서 본관으로 .  관덕정 바로 맞은편 앞에 위치 하고요 .  동문시장 걸어서 갈수도있습니다.  건물은 조금 그렇지만 안에는 최신시설이고 깔끔합니다.  그리고 그린환경(?) 그런것때문인거 같은데  욕실 어메니티는 없습니다. 별도로 준비해야 하고요 .  조식도 갠찮았습니다.공항에서 10분정도의 대중교통으로 이동이 가능한곳으로 근처에 동문시장등 재래시장이 있어서 저렴하게 싱싱한 회를 구매할수 있네요 호텔은 심플하고 깔끔하며 직원분들은 매우 친절하지만 욕실비품은 별도로 구매해야하고 트윈침대밖에 없네요스탠다드 트윈에 묵었고 10층 높이와 욕조가 있는 점이 좋았다. 한라산 다녀와서 욕조에 노곤노곤 몸 담그기 좋았고, 시장이나 버스 터미널과도 가깝다저렴하고 깔끔합니다. 직원들도 친절하고 좋았습니다. 온돌룸이 있어서 좋았습니다. 공항에서 가까워서 늦은저녁 차를 렌트하고 가기에 좋았습니다.깔끔하고 친절함  유일한 단점은 세면대 물이 잘 안빠지는 것과 치약 칫솔은 제공되지 않는 것임  생수 2병 무료제공됨  다음에 재방문 의사있음 ^^ 공항에서 환승없이 곧바로 올 수 있습니다. \'동광양\'정류장에서 내리자마자 호텔입니다. 번화가인 시청 근처에 있어 편리하고 객실도 깔끔했습니다. 비지니스급인데 작지만 객실에 욕조가 있어서 지친 몸을 풀어줄 수 있었습니다. 운 좋게도 바다가 보이는 객실에 투숙했는데 여기서 바다가 보일 줄은 기대하고 있지 않던 터라 좋았습니다.제주시청 근처에 위치해서 교통이 이용하기 쉽고, 뷰가 너무 좋았다 객실도 깨끗하고 스텝들도 친절했다. 다시 이용하고싶은곳이다. 위치 좋고 시설 좋습니다 주차장이 조금 협소하지만 나쁘지 않구요 하지만 세면도구를 준다고 해서 칫솔을 두고갔는데 정말 \'세면\'도구만 줍니다 칫솔 치약 샀습니다. 샤워할때 거품타월도 없네요1. 화장대가 있는 호텔 거울도 크고 호텔에서 화장대를 본 곳은 많지 않다. 2. 객실에 있는 쇼파는 최고의 조합 3. 조식이 금액대비 아주 좋다. 4. 호텔 내 주차공간이 많지는 않으나 바로 옆 공터가 있다태풍중에 숙박하였는데, 직원분들도 친절하고 룸컨디션도 깨끗하고 좋았습니다. 지하주차장 공간은 1개층이라서 조금 부족한듯 합니다.  약간 아쉬운 점이라면, 호텔 주변에 딱히 놀거리나 먹을거리는 부족한듯 합니다.마지막 날 오후 한시 비행기라서 공항 근처 호텔 알아보다가 사진 보고 예약했는데 결론적으로는 가성비 짱! 가격도 저렴하고 공항도 가깝고 동문시장과도 가깝고 주차도 넓고 좋아요. 무엇보다 사우나가 짱부모님과 할머니를 모시고 제주도에 갔습니다  계획은 1박 2일로 잡아서 시간이 좀 빠듯해서 숙소를 어디로 정할지 고민을 했습니다 그런데 많은 리뷰를 보고 이 호텔로 선택하게 되었습니다 우선 공항과 가까웠고 큰 길가에 자리하고 있어 찾기 쉬웠습니다 하지만 차를 주차하려면 골목길로 돌아 들어가는 점이 조금 불편했습니다 하지만 숙소로 들어갔을 때는 생각보다 넓었고 물론 뷰는 비행기가 이륙하고 착륙하는 모습만 보이고 그냥 일반적인 시내 모습이 보입니다  그리고 대욕장과 헬스장 등의 부대시설이 만족스러웠습니다 물론 무료는 아니었지만 가격대비 나쁘지 않았습니다 저희 부모님들과 할머니들은 만족스러워했습니다 다시 제주도에 가면 숙소로 고려해볼 생각입니다이 정도면 위치도 좋고 충분히 괜찮았습니다. 공항도 가깝고 주위에 편의점, 식당 등도 엄청 많습니다. 다음에도 기회가 되면 다시 선택할 수 있을 정도위치는 공항에서 렌터카로 5분정도 거리여서 가까웠다. 주차장은 건물 입구 반대쪽에 있고 suv차량은 주차위치가 한정되어 있다. 단체손님이 많이 이용하는 것 같아 체크인 시 혼잡함이 있었다..12층에서 4인이 묵었는데  더블침대 2개였고 침대를 제외한 여유 공간은 많지 않다. 전망은 길 반대편에 다른 호텔 건물이 있어서 한라산이 보이지는 않는다. 도심임에도 불구하고 방에서 소음은 거의 없었다.그리고 주변에 식당이 많은 점은 괜찮았다.세명이서 묵을수 있는 트리플룸이였다. 도착할때 로비에 중국인 완전 많아서 단점이다. 숙박전날 저녁에 예약했는데 방이 남아서 예약할수 있었다.솔직히 잘 모르겠다. 지은지 별로 안된 듯해서 깨끗해 보이긴 한데... 투숙 자체를 계획을 가지고 한 게 아니라 아는 지인이 해준거라. 그것도 바로 당일날. 어떠한 정보도 없이 이틀을 잔 거라 모르겠다. 조식은안했다. 아이랑 둘이만 간 거라 아침엔 그냥 햇반과 지인이 싸준 장조림을 아이에게 줬다. 근데... 전자 레인지가 식당에 가야만 있다. 직원에게 부탁해서 데워달라고 해야함. 뭐 그럴수도... 주변은 별로다 특히 주차는 헬이다. 어떻게 이렇게 지하주차장을 만들었나 싶은.... 적당한 중급 가격인지라 적당히 중국인도 많다. 또 세미나나 이런 걸로 온 한국인도... 말 그대로 잠만 잤다. 그래도 근처가 나름 제주의 번화가라 유명 제과점이 있어 편했다. 공항도 가깝고. 버스로... 4정거장인가 그렇단다. 물론 택시를 탔지만.비지니스 출장차 현재 1박 투숙중입니다. 모기가 너무나도많습니다 제가잡은것만해도 20마리가량. 방안에 에프킬라가 비치되어있어 계속뿌리고 잡고하는데에도.. 방안 찬장 화장실 천장 곳곳에 모기가 너무나도 많습니다... 호텔측은 벌레 관리는 별도로 신경쓰지 않는지요?...제주 공항에서 기본 요금 거리에 있고 큰 도로가에 있어서 쉽게 찾을 수 있는 호텔이다. 주차장은 호텔 앞 큰 도로를 건너편에 있는데 체크인 할 때 차 번호를 불러주면 무료 주차할 수 있다. 객실은 아주 깔끔하게 청소해놓았다. 조식은 샐러드와 간단한 음식들로 구성되어있는데 전복죽은 정말 맛있었다.직원분들 우선 정말 친절하세요~저번에 머물렀을 때 핸드폰 충전기도 안가져 갔는데 빌려주시고 빠른 대응도 훌륭하구요 제주 올 일이 많아 11월부터 지금까지 4번째 방문입니다~~부모님도 너무 좋아하세요 강추합니다비지니스 출장. 공항에서 가깝지만, 교통은 다소불편. 피트니스센터는 공사중. 숙면할수있는 편안한 침대. 다소좁은 감은 있지만, 가성비 갑. 조식도 무난합니다.친절한 직원분들, 삶에서 노력과 지불한 비용보다 더 좋은 것을 얻기는 힘들지만, 충분히 그보다 좋다고 느낄 수 있었던 몇 안되는 경험 ^^  스위트룸에서 경험한 깨끗하고 넓은 공간. 로맨틱한 분위기의 독립된 북유럽풍 욕조와 욕실룸 (통유리로 커튼이 바깥에서 여닫게 되있어 묘한 느낌의 제일 좋았던 공간) 또 다른 공간에 설치된 모던 유럽풍의 세면대와 입식 샤워룸 &amp; 깔끔한 비데가 있는.... 그리고 넓은 공간을 효율적으로 나누어 편안한 쇼파에서도 안락하고 폭 잠기는 따뜻한 침대에서 볼 수 있는 커다란 60인치 삼성 LED TV.   다음날 눈내린 제주를 만끽할 수 있도록 편안함을 제공한 호텔.  다음 제주 여정에도 꼭 들릴 예정입니다.일단 시설이 굉장히 깨끗하구 직원분들 모두가 다 친절하세요^^ 조식도 저렴한데 퀄리티가 좋더라구요 저희는 어린아가 둘이랑 와서 바닥이 카펫인게 좀 불편했지만 비지니스목적이나 커플끼리는 딱입니다~제주공항에서 쭉 직진 운전만 하다보면 나오는 숙소입니다. 주차장은 협소하지만 인근 공영주차장 같은 곳에 주차하면 되니 괜찮습니다. 소음은 잘 잡아줍니다. 옆에 애기가 있는 투숙객이 있었는데 소음이 들리지 않아서 좋았어요. 무선인터넷도 되구요, 근처에 편의점도 있어서 필요한 것이 있으면 추가로 구매하기도 좋습니다.제주도가족여행을갑자기떠나게되서전날 항공예약하고 급숙소정하다가 첫날은 저녁비행기9시도착이라공항가까운곳자리있는데우연히찾다가급결제했는데알고보니 우리가족이자기좁은방을예약해버린상황이었는데도우리상황을아시고룸도업시켜주시고트원침대도붙여서같이잘수있게도와주시고생각지도않게너무고맙고감사한호텔 직원들의세심함이감사함 호텔도화장실도좋고생각한것보다맘에들고편했음 아침제공시에도 어린애들이있는데잘챙겨주시고 괜찮았음 시작이좋아서 계속좋은추억만들고왔습니다가는비행기가 7시비행기여서 잠만자려고 묵었는데 생각보다 괜찮았구요 공항하고 엄청가까워서 좋습니다~!! 그리고 이벤트해서 맥주2잔 무료쿠폰도받고 네일도있더군요~~!!다좋았는데 화장실이 너무추워서 혼났습니다ㅠㅠ그래도괜찮았습니다~~~공항근처에 있어서 비행기 시간과 맞추기 정말 편리했고 4성급 호텔이었으나 직원분들의 친절함과 호텔의 전체적인 분위기는 5성급 못지않게 아름다웠습니다. 객실의 크기와 룸서비스 , 직원분들의 서비스 정신 모두 만족스러우며 좋은 추억을 남기고 와서 즐거웠습니다.공항과 가까워 비행기 시간에 맞추어 이동하기가 아주 편했다. 시설도 4성 이라는 평가가 아깝지 않다는 생각을 했다. 아쉬운점은 호텔에 편의 시설이 많이 부족하다는 점이었다. 요즘호텔은 숙박뿐만아니라  여러 편의 시설을 가지고 있는데 이 호텔은 그런 시설이 부족했다. 그래도 직언 분들이 많이 친절하였기에 개인적으로는 좋았다.스탠다드 패밀리 더블룸 예약했는데 도착해서 보니 변기에 이물질이 그대로 있어서 얘기하니 직원이 수건으로 닦고가서 환불했습니다12월31일 오션뷰 방향의 패밀리트윈을 이용함.저렴한 숙박료와 공항에서 멀지않은 거리에 있는 숙소로 아담한 공간이나 모든것이 깨끗하고 커튼만 열면 푸른바다가 바로 눈앞에 펼치며 창을 열면 파도소리가 철썩거리며 다가오는 공간이었습니다.  아침 해뜨는 풍경을 밖을 나가지 않고도 방안에서 볼수 있으며 바로 옆의 많은 생선회 식당들은 바다의 추억을 기억하기에 너무 좋은 장소였습니다.생각보다 괜찮습니다. 놀이공원 때문에 걱정하고 갔는데 늦게까지 시끄럽지는 않아요. 디너 메뉴가 저렴한 가격에 맛도 좋고 양도 많습니다. 흑돼지 전골이나 매운탕 밖에서 드시지 마시고 여기서 드세요. 다만 조식은 형편없습니다. 제주 시내 좋은 브런치 카페 많으니 거기서 드세요.가성비가 정말 좋은 호텔이에요. 위치도 좋고 시설도 좋고 친절하구요. 호텔 뒤쪽으로가면 맛집들이 쭈욱 있어 식사하기에도 좋고 앞으론 바다가 있어 뷰도 참 좋아요. 수영장도 작지만 이정도면 만족스럽고 객실도 깔끔하니 좋습니다.깔끔한 객실 친절한직원 좋은 위치 등 가성비 갑인 호텔이였다. 주차장 이 잘되어있어 렌트하기 좋았으며..호텔 뒤쪽으로 는 제주 올드타운 지역이라 먹거리 쇼핑 등이 용이하며 100m 안에 있는 방파제 의 횟집타운 은 싱싱한 해산물이 가득하며  제주에서 가장규모가 큰 재래시장 동문시장이 가까이에 있다. 조용하고 깔끔한 바다전망 호텔입니다. 가격대비 매우 만족스러운 곳입니다.  인근 회센터에서 회떠다가 객실에서 바다 보면서 먹는 맛이 좋았습니다. 공항이랑도 가깝습니다. 재방문의사 있습니다.제주시 인근에 위치하고 있으나 오션뷰 룸인 경우 탁 트인 전망을 즐길 수 있습니다. 아침 조식도 꼭 필요한 메뉴로 어르신들도 좋아할 수 있게 구성되어 있습니다.공항에서 멀지 않으면서 조용한 곳에 머무르고 싶으시다면 추천드려요. 시설도 깨끗하고 뷰도 아주 좋았어요. 가격대비 훌륭합니다.깨끗하고 좋았음 오션뷰가 좋음  화장실도 깨끗.  생각보다 조식이 맛있음. 주차도 밤에자리없으면 직원이 대신해주고  편했음.  단점은. . 수영장이 작고  8시 까지만 수영할 수있어서  아쉬움. 체크인도 편리하고, 무엇보다 방이 엄청 커서 침대가 3개라서 4인 가족이 묵기 충분했습니다. 야외 수영장도 조그맣게 있는데, 물은 소독약을 덜 써서 그런건지 조금 탁하지만 아이들하고 놀기엔 충분했스비다.휴가와 힐링을 위해 홀로 제주도 구경도 하고 한라산 등정후 제주칼호텔에 하루 숙박을 하였습니다 여행 마지막 날이어서 호텔에서 푹쉬면서 수영장 헬스장도 이용할 계획을 갖고 서울에서 부터 준비해서 갔습니다 아침조식을 먹고 혹시 필요한 것이 있는가 확인차 구내전화를 통해 휘트니스에 전화 하였습니다 헬스장에 운동복이 혹시 있는지 수영모가 필요한지 등이었습니다 그런데 제가 수영모를 두고오는 바람에 다시전화를 하여 혹시 수영모 대여나 구매가 가능한지를 물었습니다 그러자 여직원 분이 귀찮다는듯이 무시하는 말투로 제가 물어보지도 않았는데 여기는 원래 회원제로 운영되는 곳입니다 일반인은 입장이 불가합니다 그리고 그분들(회원분들)은 모두다 수영모를 갖고오셔서 없다고 하였습니다 투숙객은 이용가능하다고 해놓고는 일반인은 원래 입장이 불가능하는데 너네투숙객에게 선심으로 서비스하는거라는 말투로 할필요도 없는 말을 하시니 그순간 무안해지고 무시당한 기분에 바로 전화를 끊어버렸네요 원래 여기 오기전에 회원제인거 알고있었습니다 하지만 투숙객이니 추가 비용내고 이용할수있어서 이용하려고 했던것 뿐입니다 근데 대뜸 물어보지도 않은 말을 하면서 일반인 투숙객 무시를 하시니  매우 화가났습니다 그래서 바로 칼호텔 고객의 소리에도 컴플레인을 올리고 더이상 있고 싶지않아서 9시경에 바로 체크 아웃해버렸네요 서울에 신라호텔 하야트 메리어트 이런데등 특급호텔 여럿 이용해 보았지만 회원제여도 일반 투숙객 무시를 하지 않습니다 낡은 칼호텔 5성급이어도 가격이 싸길래 이용해 봤더니 직원 수준이 딱 가격 수준이군요 매우 실망이고 하루종일준 5성급 호텔에 서비스나 리셉션 컨시어지 태도, 룸 컨디션 정말 최악이었습니다.  1.체크인  고객이 체크인 시 리셉션에서 알려줄 것이 룸 안에 어느 것이 무료이고 유료인지 밖에 없나요? 사고 칠 학생 걱정하는 선생님 같더군요. 헬스장이 어딘지, 사우나 이용을 어떻게 할 수 있는 지, 이런 것들은 기본적으로 알려주셔야 살 사항 아닌가요? 고객이 무슨 거지입니까?   2. 룸  Executive Suite 라니.. 리빙룸이 없는 방도 Suite 라고 하나요? 트윈룸 두 개를 이어 붙인 방을 무려 Executive Suite 라고 부르다니, 그리고 게재하신 사진과 실물방 차이 실화인가요? 파우더룸 벽의 곰팡이 자국, 작동하지 않는 ‘골드스타’ 냉장고... 이런 방을 무려 Suite 로 명명하여 예약을 받다니요. 이런 컨디션이었으면 절대 예약 안했을겁니다.  3. 전반적인 직원 태도  조식 레스토랑 직원들은 왜 그렇게 자꾸 정색을 합니까? 커피 어디서 먹을 수 있는 지 물어봤는데 정색은 왜 합니까? 그리고 물을 바닥에 살짝 쏟아 닦아주시는 서버 분 휙 하고 데리고 가신 다른 서버분, 뭐하는 짓입니까? 나머지 물기는 손님이 직접 닦아야 해요? 체계도 룰도 없는 그야말로 엉망인 손님 응대. 5성급이요? 요즘엔 소규모 호텔에서도 이런 태도는 안 보입니다.   다시 갈 일 없지만, 예약하시는 분들 저처럼 속는 분 없으시기를 바라는 마음에서 적어 봤습니다. 위치가 좋은 것도 아니고 가격이 매리트 있는 것도 아니고, 이름과 5성급에 걸맞는 서비스 1도 없습니다. 여행 출장 수백번 다녔지만 이런 기본도 안공항이랑 거리는 괜찮았고 객실도 생각보다 넓어서 좋았습니다.  주위도 조용하고, 마지막날 묵었던 방이라..그냥 가벼운 마음으로 보냈는데 조식은 기대에는 미치지 못했고, 실내수영장은 가볍게 수영 할 정도..수온이 따뜻한건 좋았습니다. 아무튼 마음비우고 하루 묵어가기엔 괜찮은거 같아요스위트에 묵었는데 비수기라 상대적으로 가격은 저렴하나 객실이 약간은 노후되었음. 조식은 괜찮았고, 위치는 공항에서 아주 멀리 떨어져 있지는 않습니다. 정가로는 무리나 할인행사 정도면 가능. 참고로 2이누조식포함해서 27000마일리지로 다녀옴남는 대한항공 마일리지로 스위트룸에서 하룻밤 잤는데 확실이 연식이 있어서 요즘 호텔에 비해 시설은 부족한 느낌임. 스위트룸 인데도 요즘 고급 호텔 일반 룸보다 많이 좋다고는 못할거같음. 하지만 5성급 호텔이라 그런지 서비스랑 음식은 확실히 좋았음. 원가로는 조금 비싸고 할인이나 특가 떴을때면 추천함.오션뷰로 8층에 숙박했습니다. 함덕서우해수욕장이 한눈에 들어와서 이쁩니다. 하지만 창문이 더러워 창문열지않는이상 좋은 뷰는 힘듭니다. 그리고 겨울철에는 아무래도 통유리에기때문에 춥습니다. 온도를 올리기 위해 난방기 작동시 온풍방식이라 건조합니다. 그리고 대략 1도정도 차이납니다. 숙소 화장실은 깔끔합니다. 하지만 샤워부스는 다소 작습니다. 방음은 잘 안됩니다. 옆방 티비소리가 엄청 잘 들립니다. 빠른 취침을 위해 누웠지만 옆방 티비소리에 티비가 끝난 후 잠들 수 있었습니다.초등학생 아이와 3박 4일 머물렀습니다. 청소상태 양호하고요. 위치도 좋아서 전반적으로 만족했어요. 다만, 조식은 가짓수가 너무 적어서 아쉬웠습니다. 첫날 일찍 도착해서 근처에 있는 한식당에서 아침을 사먹었는데, 가격에 비해 맛도 없고 양도 적더라고요.  호텔 조식이 별로이긴 하지만, 근처 한식당에서 아침 먹는 것보다는 차라리 호텔 조식이 괜찮았어요.시설 깔끔하고 무엇보다 바다 뷰가 정말 최고예요!! 이 호텔에 묵는다면 반드시 꼭 바다가 보이는 객실로 묵으세요~ 다만 방은은 조금 안되는 편이라 옆방 쿵쿵 거리는 소리나 밖에 문 쾅 닫으면 좀 크게 들려요 1층에 씨유 편의점 있고 주변에 델문도 카페나 맛집 많아서 좋아요함덕해수욕장 바로 앞에 위치하여 해수욕을 즐기기에 최적의 위치입니다. 객실은 디럭스 시티뷰, 오션뷰 디럭스 다 묵어봤는데 시티뷰는 발코니가 있어서 좋았고 오션뷰는 함덕의 예쁜 바다가 보여서 좋았습니다. 룸은 큰 편이 아니지만 친절한 직원과 최적의 위치, 깨끗한 객실 좋은 전망. 여러모로 추천합니다.4층 오션뷰 트윈룸입니다 선착순 업그레이드 해서 오션뷰 받았구요  객실상태,어메니티,청결도 모두 만족했어요 무엇보다 뷰가 예술 ㅎㅎ  직원들도 친절하게 응대해서 기분 좋았습니다 호텔 로비에 샤워시설 되어있어 물놀이후 모래 씻고 들어갈수 있구요  1층에 부대시설로 카페,레스토랑 음식 다 괜찮고 편의점 있어서 편했어요  가족,친구,커플여행 모두 추천합니다  피크시즌 살짝 비켜간 9월 첫째주 였는데 호텔주변 조용하고 날씨도 적단히 선선하고 물놀이하기에 수온도 적당했어요  좋은 위치.친절한 직원. 근래 리뷰보고 걱정 했는데.. 괜한 걱정이였다 ㅎ 건물 자체는 오래 된 느낌이나. 청소 상태는 좋다 침대 상태도 좋았다 주차편리 하며 걸어 갈수 있는 맛집 많아  좋았다   코르나사태,비수기지만 가성비 짱2015년에 갔을때 괜찮아서 다시 방문했지만 객실상태가 좋지 않았아요. 커튼에 곰팡이가 펴서 교체를 요청했고 방을 바꿔주겠다고 했지만 우리가 원하는 뷰가 아니어서 사양했던 적이 있습니다.호텔 주체가 2개로 나뉨. 에벤에셀인가? 교회에서 절반 정도를 인수한 듯 보임. 방마다 더 아트스테이인지 에벤에셀인지 이름이 적혀 있음. 우리는 더아트스테이 것으로 추정되는 방에 머무름. 꾸준히 잘 이용했던 곳이었는데... 최악. 시설에 비해 직원들이 너무나 프로페셔널해 보였음. 아까운 인력이었음. 태어나서 아무리 저렴한 호텔이어도 그런 매트 처음 봄. 매트리스가 그냥 나무판 같았음. 허리 아파 죽는 줄. 다시는 안감. 아무리 싸도 안감.객실은 깔끔하고 무난해요 함덕해변이 워낙예뻐서 가시면 좋으실듯 함덕쪽에 호텔이 많은데 가격대비 저렴해서 이용하기 좋아요제주도를 처음 방문하여 다른 곳과 비교는 어렵지만, 주말임을 고려하면 한국의 다른 지역에 비해 가성비가 나쁘지 않다. 바다 바로 옆에 붙어있고, 1층에는 24시간 운영하는 편의점이 있으면 주변에 유명한 맛집이 있는지는 모르겠으나 식사를 이용할 수 있는 곳들이 많다.올 봄에 벚꽃기간에 방문, 협재를 바라보는 바다뷰가 좋고 대로변이라 렌트해서 가기도 좋음. 조식은 이용안했는데 근처 옹포밥집까지 아침 산책겸 걸어가서 하고옴. 루프탑 수영장과 바가 있었는데 내가 갔을때는 밤에 비바람이 너무 불어서 이용못하고옴 ㅠㅠ  단점으로는 모 유명 여행블로거 리뷰처럼 화장실 물떄가... 그거빼곤 다 만족10월에 제주도를 다녀온 탓에 온수풀 수영장을 위주로 찾았음. 제주 온수풀이 가능한 호텔은 다들 너무 비싸서 고민중에 가성비 좋은 아길라 호텔을 찾았는데 완전 온수라기 보다는 미온수에 가까워서 어린 아이들에게는 다소 추울수 있음. 하지만 미온수풀 바로 옆에 자쿠지를 운영하고 있어서 잠깐씩 들어갔다 나오면서 충분히 즐길 수 있는 수준의 미온수였고 수영장 자체가 인피니트수영장으로 환상적인 바다를 즐길 수 있어 수영장 하나만으로도 강력히 추천함 그 외 스페 In 제주 식당에서의 인생 치킨과 빠에야까지 즐길 수 있음협재 바다를 바라보는 뷰가 매우 좋음  스파룸이었고 2층이었지만 그래도 뷰는 좋았음(호텔 구조를 봐서는 스파룸은 모두 2층 인듯~) 루프탑 수영장이 있으므로 더 높은 곳에서도 바라볼수있음  루프탑 이용 시간은 am10:00-pm9:00까지라고 했던거 같음(끝나는 시간은 확실한대 시작시간이 기억이 잘 안나네요^^)  수영장과 자쿠지는 이용을 하지 않아서 맥주 무료 이용권을 줘서 저녁에 테이블에서 맥주를 마셨는대 시원한 바람을 느낄 수 있음 밤바다 바라보며 먹으니 좋음 룸에 기본적인 어메니티는 다 있고 연박을 하니 부족한 것은 계속 채워줌 방청소는 12-4시 사이에 이루어지는 거 같고 시트는 교체 없이 정리만 이루어짐  삼다수 2병과 네스프레소 캡슐 2개가 계속 채워짐  스파 욕조는 생각보다 커서 여자 분들은 누워 있기에는 힘들듯~~그래도 피로가 풀리고 좋음  스페인제주가 영업 종료해서 룸서비스는 이용이 불가능하고 조식은 가능함 조식은 어떤지 이용을 안해서 모르겠음  호텔 바로 앞에 droptop과 협재 버거가 있고 호텔 오른쪽에 횟집과 마담나탈리가 있음 마담 나탈리에서 음악이 계속 나오는대 호텔에서도 들림 전체적으로 규모는 크지 않지만 깔끔한 호텔 ^^ 필터링 1. 해변가 2. 실외수영장 3. 조식 으로 검색해서 나온 호텔 중 전 객실 협재해변 뷰에 옥상에 수영장이 있으며 룸서비스가 가능한 아길라로 선택하였고 결과는 대만족!  대형호텔에 비해 가격은 저렴하지만 방은 크고 객실이 적은 만큼 수영장이나 룸서비스 등을 누리는데 사람이 많아 번잡하지 않았으며 주차장도 바로 앞에 있고 미니바에 개수대가 있어 편리하였음 그리고 바로 옆과 5분거리 내에 유명 식당들이 있음  모든것이 만족스러움  같은돈으로 대형호텔가면 룸은 너무 작고 수영장 식당 주차장 사람많고 힘듦  여기 룸서비스 음식도 저렴한데 맛도 양도 괜찮음 조식은 선택 안해서 모르지만 룸서비스맛으로 볼 때 괜찮을 듯호텔이 모든 곳에서 떨어져 있다는 것을 읽을 때 믿으십시오. 호텔 인근에는 아침 10시 30 분 이전에는 아무 것도 열리지 않습니다. 룸 서비스 음식은 괜찮지 만 매일 매우 제한된 선택이 아닙니다. 시설은 더 좋은 날을 보내고 빌린 시간에 살고 있습니다. 객실은 근사하며 바다의 경치는 이웃 섬의 환상적인 일몰과 함께 아름답습니다. Aguila는 실제보다 훨씬 더 큰 리조트임을 홍보하는 가격으로 시설과 일맥 상통합니다.이 호텔은 화산 바위 해변을 따라 자리 잡은 정상적인 호텔입니다. 사용 된 그림은 지금 사라진 날들의 사진입니다.제주에서 여행하는 기점으로 버스터미널이 옆에 있어서 이동하기에 아주 좋은 위치이며, 스템들의 적극적인 응대와 친절은 편안함을 제공한다. 시설 또한 청결하게 관리되어 편안한 잠자리와 휴계 공간도 제공되고 있었다. 기타 편의 시설도 다양하게 부족함이 없이 제공되고 있었다. 제주에서는 이곳을 알게된 후로는 이곳만 이용하고 있다.다소 찾기 어려운 위치에 있고 들어가는 길이 밤에는 상당히 어두웠지만 짧은 거리라서 다행이었습니다. 리셉션에서 근무하는 직원은 중국어나 영어를 할 줄 알아서 많은 도움이 되었고, 필요한 것이 있으면 해결해주었습니다. 리셉션 직원이 택시를 불러서 목적지까지 갈 수 있었습니다. 밤의 해피 아워에는 무료 음료가 나오는데, 맥주, 사이다, 과일 주스가 포함됩니다. 빵, 달걀, 치즈가 아침 식사로 나왔고 직접 준비하는 것도 재미있었습니다.||방이 깨끗하고 실내 히터도 잘 작동했습니다. 수건은 다소 작습니다. 엘리베이터가 없어서 3층까지 짐을 들고 가야 했습니다. ||전체적으로는 머물기 좋습니다! 제주도가 처음이라면 예하 버스 투어를 강력히 추천합니다.제주도에 머물면서 지내기 좋은 호스텔입니다. 편리한 위치에 있고 쉽게 대중교통을 타고 어디든 갈 수 있습니다. 공항까지 잠깐 택시를 타면 됩니다(5,000원 미만/ 5 USD). 직원들은 매우 친절하고 질문에 잘 답해주었습니다. 객실은 매우 좋고 깨끗했습니다. 손님에게 예하 투어를 할인해주는 상품이 있어서 3번을 다녀왔는데 모두 좋았습니다. 제주도에 다시 온다면 이 호스텔에 다시 묵을 것입니다.제주도 혼자 여행중에 마지막 날에 들렸는데,  접근성에서는 좋았는데, 과거 경험한 게스트하우스가 너무 좋았던건지,  비교를 하기엔 너무 미안하네요. 그냥 딱 잠만자고 오기 좋은 저렴한 곳입니다. 오래전에 경험 했던 일이라, 지금은 많이 발전 했을거라 예상해봅니다.음~좋은점은 공항 가까이 있고 저렴하다는것~ 친구랑 2인실 썼는데 방은 뭐 싼곳이니 그러려니~했어요 아침은 토스터에 잼 줍니다 화장실 1개 욕실겸 화장실 1개 있는데 꽤 기다려서 씻음 10시 이후에는 전체소등하는데 작은불키고 조용조용 얘기하는건 괜찮음  방키를 따로 주고여자숙소랑 남자숙소 입구가 달라서 안전은 괜찮을듯공항과 정말 가까워요, 차로 20분 이내 도착한 것 같아요. 전반적인 서비스는 나쁘지 않았어요. 겨울에 가서 그런지 루프탑은 추웠고, 수영장은 이용할 수 없었어요. 그리고 루프탑을 이용하려면 추가 금액이 붙어요! 저녁 뷔페와 아침 조식도 맛있었지만 조식 이용하는 식당이 넓지는 않았어요.  그래도 방에서 보이는 오션뷰가 꽤 괜찮았답니다~ ^^ 다음에도 이용할 것 같아요.전반적으로 여느 호텔과 다름없이 똑같음.. 아침에 바다가 보이는 뷰가 예술. 공항에서도 멀지않고 호텔 앞 롯데리아, 양 옆으로 편의점이 있으며 야외주차장에 넉넉함까지 다만, 제가 묵은 방만 그런건지 샤워기 고정 안되고 계속 흘러내림...기본 적인게;;무궁화 5개 호텔. 가성비가 좋음. 욕실 및 실내공간 넓음. 주차장은 야외에 넓은 편. 여름에는 루프탑수영장 이용 가능하다고 함. 1층에 뷔페식당있음루프탑 바와 수영장이 있어서 사용가능하고 깨끗하고 친절하셔서 좋은곳이었습니다. 다만... 조명이 전체적으로 어두컴컴해서 눈이 좀 아프네요 ㅠ제주 시내에 볼 일이 있어 숙박호텔을 찾는데, 여름 휴가철 성수기라 가격도 “극성수기”라는 이름으로 사악한 수준인 상황에서 선택한 호텔이었습니다. 호텔 할인 사이트 보다 직접 호텔 홈페이지에서 예약하는게 더 저렴하였고, 시내와 공항에서 멀지 않아 일 마치고 바로 움직일 수 있는 좋은 위치여서 선택했습니다.  가격에 비해 무척 좋은 시설이었고, 주변에 주차공간도 여유가 있어 좋았으며 전기차를 렌트하였는데 길 건너 롯데리아에 급속 충전소가 있어서 더 좋았습니다. 다른 분들 후기처럼 주변에 별 것 없어요. 편의점 두 곳과 조금 걸어가면 있는 카페 뿐. 호텔 뒤로는 유치원과 주택가 뿐인 그런 곳이네요. 차량을 가지고 있는 분이 선택하는게 좋을 것 같습니다.  직원들 친절하고, 시설도 깔끔하고 다 좋아요. 부정적인 점이라면 객실 내부에 전기 플러그가 너무 적어요. 책상 위에 있는 것 두 개, 욕실에 전기면도기용 한 개가 전부입니다. 시내뷰라고 하는데 5층이었습니다. 창문 밖으로 주택가 내려다 보입니다. 너무 가까이 붙은 집은 사람끼리 서로 눈 맞을 수도 있는 가까운 거리에요. 차량 가지고 이동 하시거나 공항/시내,가까우면서 가성비 좋은 호텔을 찾으신다면 추천할 수 있을 것 같아요.용두엄에서 가까운 곳에 위치하고 있고 엘배 없습니다.  주차공간 약간 있구요. 룸에는 사물함과 침대만 있고 파우더룸 화장살 욕실은 분리되어 복도끝에 있습니다. 3층에 공용 휴게공간이 하나있고 2층에 음삭을 넉을수 있는 공간이 있습니다. 침구는 깨끗한 편이나 침댜에 커튼이 없어 옆사람을 마주봐야하는 불편함이 있었어요. 조식은 에그 샌드위치를 직접 만들어 먹을수 있는 구조였고 맛은 괜찮았고 커피와 쥬스가 제공됩니다.  용두암에서 가까운 숙소. 날씨가 맑으면 한라산을 볼 수 있다. 저녁/밤에 공항에 내린다면 종달리보다 가까워서 대안이 될 수 있을 듯, 무난하고 깨끗한 숙소.공항과도 접근성이 좋고 시설도 깨끗해요 조용하기도 하구요 4인실이라서 상대적으로 더 좋더라구요 추천드려요3월에 그곳에서 1박을 보낼 기회가 있었는데, 방금 도착했거나 곧 떠나고 싶거나, 제주 시내에 머물고 싶다면 매우 편리한 곳입니다. 제조 국제 공항에서 택시로 10분밖에 안 걸렸습니다.|||건물이 독특합니다. 멋진 테라스가 있어서 아름다운 전망을 볼 수 있고 바다와도 매우 가깝습니다. 언덕을 5분 정도 내려가면 도착할 겁니다!|||아침 식사는 간단하지만 맛이 좋았습니다. 다만 객실에 창문이 적어서 안타까웠습니다. 마치 요새 같은 느낌입니다. 원래 그런 의도로 꾸몄을 수도 있습니다. 건물 위에 휴식 공간이 있고 인터넷도 굉장히 빨랐으며, 전반적으로 매우 깨끗했습니다.|||또한, 주인인 피터도 매우 친절하고 많이 도와 주었습니다. 정말 집과 같은 편안함을 느끼실 수 있습니다.|||여기에 머무는 동안 정말 즐거웠습니다.||꼭 다시 오고 싶습니다!미르 게스트하우스는 특징이 있는 독특한 건물로, 독특한 건축양식과 주인인 피터의 성격이 그대로 드러납니다. 건물 디자인은 제주도를 상징하는 근처 용두암과 화강암에 영감을 받았습니다. 저는 중앙 뜰의 해먹에 누워 네 개의 검은 벽으로 둘러싸인 하늘을 올려다 보는 것을 즐겼습니다. 아침 식사에 나오는 에그 샌드위치가 좋았습니다. 또한, 피터와 이야기를 나누는 것도 즐거웠는데 그는 매우 친절하게 환대해주었고 영어를 잘했습니다.||||방은 다소 작은 편이었습니다. 그리고 11시 전에 샤워를 마치고 불을 끄려고 노력해야 했습니다.완전깔끔하고좋았어요ㅠㅠ 만족해요 주차장도 주차타워 넉넉하고 바로 앞 거리가 중심부라 어디든갈수있어 편했어요 앞으로도 애용할것같아요 요즘같은 코로나19같은 시국에 셀프체크인이라는점도 아주 만족했습니다일단 위치가 정말 좋았던 곳이었어요 주변에 먹을 곳도 많고 공항근처여서 그다음 아침 비행기였는데 8분도 안걸려서 택시로 갔어요 전체적으로 깔끔하고 편안했어요 객실내에 청소기도 있었고 세탁기도 있었고 식기구도 잘 마련되어있어서 이용하면서 풀편한 점이 하나도 없었어요 ㅠㅠ 넘 좋았어요공항이랑도 가깝고, 번화가라 교통,먹거리 문제 없었구요..무엇보다 깨끗해서 너무 좋았어용! 저희는 단기였지만, 장기나 한달살기하면 참 좋을것같아요.1. 깔끔합니다. 생긴지 얼마 되지 않아서 그런건지, 엄청 깔끔하고 좋습니다. 2. 가깝습니다. 공항과 약 3km도 채 떨어지지 않은 거리. 가까워서 아침 비행기를 타고 가야 하는 상황이었지만 부담이 되지 않았습니다. 3. 주차걱정이 없었습니다. 건물 내에 기계식 주차장도 있지만, 바로 앞에 공영주차장도 있어서 주차를 하는데 엄청 편했습니다.  4. 시내에 위치해 있어 편의점이나 음식점을 이용하는데 아주 편리했습니다.  5. 객실 내에 있을 건 모두 있어서 이곳에서 묵는 동안 불편함이 없었습니다.  6. 개인적으로 이곳 옥상! 너무 좋습니다. 앞으로 바다가, 뒤로는 산이 보이는 이 전망은 정말... 여름이었으면 한참을 머물었다가 내려오고 싶다는 생각이 절로 드는 곳이었습니다.ㅎㅎ 하루 잠시 머물다 갔지만 오래계실 분들에게 최적화 되있고 지은지 얼마 안된듯 깔끔햇어용! ㅎㅎ 청소기며 세탁기며 다 구비되 있음!저층인데다 공조기 벽이 가로 막구 있어서. 창밖엔 공조기 벽만 보였고 . 화장실은 페인트가 군데군데 벗겨서 있었음.  더럽지는 않았으나 . 세면대엔 곰팡이가 있어서.  전체적으로 곰팡이 냄새가 심했음. 공항이 가깝고 근처 이마트나 . 마트로 , 식당가가 가까워 입지적인 면은 좋았음. 로비는 좋은데 방은  좀. 별로 였음. 트윈룸은 더블 + 싱글인데 더블에선 둘이 잘수 없음. 퀸도 아니고 더블 사이즈 임.   더블룸은 어떤지 침대가 어떨지모르겠음.  중국인들 정말 많음.  로비가 중국사람들이 좋아할 취향인듯  카지노 때문인지도 ..공항과 매우가깝고 시설또한 건너편 라마다에 비해도 나쁜게없었습니다 호텔은 조금작지만 가격대비 좋았습니다 단 물수압이 조금 약한듯합니다 공항이랑 가깝고, 제주도에 있다는 기분을 즐기고 싶어 그나마 바다랑 가까운 숙소를 찾다가 묵었습니다. 좀 오래된거 같으나  웅장하고 방은 깔끔하고 좋았습니다. 다음에도 묵을 의사가 있어요!더블룸인데 트윈침대를 2개 붙여준 것이 오히려 다 넓고 좋았다! 시설은 옛날 호텔같지만 깔끔해서 괜찮았는데 날이 후리니 화장실에서 냄새가 좀 심하게 올라와서 그건 별로였다 카지노는 외국인 전용이라 어차피 해당사항 없음 밤늦게 도착해서 공항근처 숙소를 찾아 예약했습니다.  저는 프론트도 친절했고  가격대비 넓은 룸 ,침대도 편안했어요. 룸이 조금 차긴했는데 침구가 따듯해서 저는 딱 적당했습니다! 오션뷰도 바다 가 보여 앞에 잘보여서 이용하기 좋아보였구요  바로앞에이마트있고 옆에 편의점있어서 맥주사기 좋습니다 주차 또한 편해서 저는 매우 만족입니다.가성비 좋아요!패키지로묶으니까 정말 싸더라구요 1박밖에없엇지만 다음엔 좀 길게 오게요 오션뷰도 짱짱이었습니다 ㅎㅎ 커플끼리오기 최고인듯패키지로 묶으니까 엄청 저렴해지더라구요~ 2박3일동안 힐링하고 가는기분이라서 너무 행복했었네요... 제주도최애 호텔입니다!!!전망이 최고최고 ㅎㅎ골프치는걸 좋아해서 자주옵니다. 오션뷰가 최고에요 정말,, 직원분들도 친절하시고 내부도 깔끔해서 너무 맘에 들었어요 커플끼리 여행오면 좋을곳이에요!!!골프패키지로 오니 저렴하게 즐길수있었어요. 방이랑 같이예약하니까 되게 저렴저렴. 오션뷰도 최고인듯 제주도 올때마다 예약하게되는 제 최애 숙소입니당 ㅋㅋㅋ커플끼리 놀러가기 좋은곳인것같아요!!오션뷰도 최고였습니당 골프치고 놀기에 딱 좋은곳인것같아요 ㅎㅎ제주도오면 다음에또 여기 숙박할게요!이 작은 호텔은 멋진 디자인에 깊은 인상을 주었으며 어떤면에서는 목표를 달성했습니다. 호텔은 일종의 힙 스터, 모던 한 분위기를 자아냅니다. 프론트 오피스 직원은 정중하고 도움이되며, 충분한 주차 공간이 있으며 (대리 주차 서비스 이용 가능) 옥상 바는 휴식을 취하기에 좋은 곳입니다. 위치는 환상적이며 상점과 식당, 공항과도 가깝습니다. 그러나 문제는 방에 있으며, 디자이너는 현대주의 테마를 너무 멀리 가져 갔을 것입니다. 가장 눈에 띄는 문제는 샤워 커튼이 없다는 것입니다. 우리가 샤워를 할 때마다 싱크대 지역의 절반이 실제로 젖었습니다. 이는 또한 세면 도구를 넣을 공간이 반으로 줄었다는 것을 의미합니다. 싱크대 영역의 수도꼭지가 싱크대까지 충분히 확장되지 않아 상당한 역류가 발생합니다. 다른 문제는 손님의 안락함보다는 호텔 운영과 관련이 있습니다. 예를 들어, 욕조와 벽 사이에 좁은 간격이 나타났습니다. 하우스 키핑은 어떻게 그 지역의 은색을 청소합니까? 또한 호텔은 바닥재로 베이지 색 다다미를 선택했습니다. 얼룩이 보입니다. 더 어두운 카펫 바닥이 더 잘 작동하지 않습니까? 나는 호텔이 마음에 들지만 더 좋게 만들기 위해 이러한 요소를 개선해야합니다.글쎄, 어떻게 차를 사용할 때 전화 번호는 화장품 회사의 것입니다. 몇 번의 시도 끝에 도로를 목적지로 설정하고 전화 번호를 다른 참조로 사용하기로 결정했습니다. 그 길에서 가장 높은 건물이므로 놓칠 수 없습니다.  호텔은 새롭고 방이 너무 크지 않으며 아침 식사는 직원이 친절합니다. 호텔 건물 내에는 기계식 주차 공간이 있지만 호텔 옆에 개방 된 주차장이 있으며, 투숙객은 개방 된 주차장에 주차하게됩니다.  아, 화장실에 칫솔이 있어요.  위치는 신라 면세점에서 약 500m입니다. 삼 . 공항에서 3km.  다시 제주에 도착하면 돌아올 것이다.이 장소에는 무료 주차 대행이 있으므로 꽤 좋았으며 공항과 매우 가깝습니다. 샤워 공간에 욕조가 없습니다 (그러나 멋진 비데가 있습니다). 나는 방이 미국 호텔 표준에 의해 평균 크기라고 말하고 싶다. 모든 것이 깨끗하고 깔끔했고 그들은 각각의 더블 침대마다 얼굴 마스크를 주었다. 방에서 식사를 삼가라는 표시가있었습니다. 책상의 직원은 최소한의 영어를 구사했습니다 (일부 직원은 다른 사람보다 낫습니다). 나는 많은 관광객들이 호텔을 아직 사용하지 않는 것처럼 보일 것이라고 언급 할 것입니다-나는 엽서를 프론트 데스크 (스탬프와 함께)에줬고 그것을 거부하고 우체국으로 가져 가라고 말했습니다.침구 와 어메니티 조식 모두 가격대비 가성비는 최고입니다. 조식은 안드시면 후회하십니다.  루프탑 이 통유리라 전망과 뷰가 훌륭합니다.  호텔치고는 가격도 착한편이구요. 주차장도 훌륭합니다. 제주시내 호텔중에서 이렇게 주차장 넓은 곳은 본적이 없네요. 발렛도 무료로 해주시네요.. ^^ 친절하고 조식도 좋고 무엇보다 침구가 너무좋아 꿀잠을 잡니다 강추 ^^ 주차장도 넓어서 너무 편하고 발렛 써비스에 또한번 감동 입니다 굿굿패밀리룸 예약했는데 운이 좋게 스위트로 업그레이드 받았습니다.  더블 2개 들어가있고 전망도 좋고 티비도 두 대입니다. 작게 거실, 방으로 분리되어 있어서 가족 어른들께서 밤에 시간 보내기 좋았어요. 조식도 죽 종류와 서양식 음식이 많아 어르신 입맛에 적당했습니다. 다만 욕실이 샤워 부스가 분리되어 있다면 좋을텐데 그러지 않아 아쉽습니다 ㅠㅠ전체적으로 깔끔한 호텔이다.금액을보면 모텔 가격으로  생각되지만 객실을 보면 선택을 잘 했다는 생각이 든다. 직원들 또한 친절하다. 저렴한 가격에 깔끔한 객실과 침구류..추천  조식은 사람마다 다르겠지만 나가서 사먹는게 좋을것 같다.하지만 전복죽은 맛있다제주에 사는 현지인이 추천해서 간 호텔이었는데 ... 그 전에 호텔을 알아 보고 있던 여러 호텔에 비해 가격이 싸서 예약은 했지만 좀 걱정을 헸더랬습니다. 그런데 가서 보고 너무 만족했습니다. 왠만한 호텔 저리가라 할 정도로 좋았습니다. 위치도 좋아서 걸어서 제주 시내 관광이 가능합니다.방도 깨끗하고 수압도 좋아요~ 조식도 간단한 뷔페식(가지수는 많아요~)이라 먹을것도 많고 맛있고! 추천합니다~제주공항에서 10분 거리에 있는 "더원호텔" 지은지 2년되어 깨끗하고 룸컨디션 좋습니다. 호텔 옥상 하늘정원도 잘 꾸며져 있습니다. 제주 늦은 도착이나 가볍게 머물기는 최상의 선택인거 같습니다.편히 쉬다가요 직원분들도 친절하고 청소 상태 괜찮아요 단점은 주차가 좀 그래요 비지니스로 온다면 다음에도 이용할생각입니다.2박3일 일때문에 제주도에서 머물게 됐는데 위치도 나쁘지 않고 직원분들 모두 친절하게 대해주셨어요. 침구도 깔끔하고 카피 드라이어 등 다 있어요숙소의 깔끔한 시설이 좋았습니다. 위치도 노형오거리 근처라 좋고, 제주도청이나 신제주 인근 출장 오시는분들께 추천드립니다.제주도 엠버호텔 센트럴! 대박 좋음!~ 숙소도 너무 편안하고 직원분들도 너무 친절한 호텔!~ 다음에 제주도 방문시에 또 오고 싶네요^^깨끗하고 좋아요~ 추천하려면 하고 다음에도 또 올꺼고  옆에 진짜 맛있는 해장국집도 있음 아주 마음에 드는 여행이 될꺼 같아요친절하고 도움이되는 직원! ! !  위치는 제주 시외 버스 터미널에서 도보로 2 분 거리입니다. 대중 교통으로 특히 버스로 쉽게 접근하고 여행 할 수 있습니다.  그들은 (무슬림을 위해) 먹을 곳, 해변에가는 법, 한라산을 하이킹하는 법, 현지 시장에가는 법 등 좋은 정보를 제공했습니다. . .  나는 다시 여기에있을 것이다!I loved this place so much. Since I stayed in the shared female dorm, I made many friends from all over (South Koreans, China, Thailand and Polish). The main reason for choosing this guesthouse was the close proximity to Jeju City Bus Terminal which is a 2-minute walk and only 10-minute drive to the airport. At the next block to the gueshouse is a sauna. If you don\'t mind walking, there is a cinema about 15-minutes walk away plus you can take the bus to most of the sights and even to Seogwipo. Although of you plan to visit places in Seogwipo it\'s best to stay there for a few days instead of travelling there from Jeju City by bus.  The staff are wonderful, kind and helpful. Lounge area is clean with free drinks, and has a TV and a fridge (you can keep your kimchi in the fridge외국인 친구가 한국 방문 기간에 G마켓에서 물품을 주문해 배달 받기를 원해서 게스트하우스 주인에게 이메일을 보냈어요. 주인은 마음 편히 주문 하라고 허락을 한 상황이었고요... g마켓에서는 수령인 전화 번호가 꼭 있어야 하는데 핸드폰 번호 밖에 입력이 안되서 게스트하우스로 전화 해 가용한 핸드폰 번호를 문의 했습니다. 제 번호로 입력 해도 되지만 실제 수령을 받는 게스트 하우스 번호를 받는게 더 낫겠다 생각이 들어 전화 했죠... 근데...  계속 추궁 하듯 누가 어디서 오고 언제 오고 이름이 뭐고 다 확인 하고나서... 수령인 핸드폰 번호 알려달라고 하니 개인정보 알려주기 싫다고 하는 개념 상실한 직원의 반응에 어이 없어서 글 남깁니다... 정신 교육 좀 시켜 주세요... 장난 하는 것도 아니고...  내용은 대충 아래와 같습니다.  직원 왈: 저희는 물건 대신 못 받아줘요... (까칠하게)  나: 사장님과 이미 이야기가 되었어요... 직원: 그러면 계시는 동안에만 주문 해서 받아가세요... 나: 당연한 거 아닌가요? 수령인 핸드폰 번호가 필요 한데 폰번호 하나만 주시겠어요? 유선 전화로는 입력이 안되게 되어 있어요... 직원: 저도 g마켓 쓰는데 유선번호 써도 되요...  나: ... 저 지금 g마켓 보고 있는데 010,011,019,018,017 밖에 못 쓰게 되었어요... 직원: 개인정보라 드리기 싫은대요... 나: ...   이런 식으로 실랑이를 벌이다가 직원이라는 걸 알고 주인 언제 오냐고 물으니까 제대로 알려주려고 하지도 않고... 정말 손님을 받으려고 하는 태도인지 뭔제주터미널 바로 옆 위치 정말 좋은 GH~ 터미널 바로 옆이라 버스 이용에 굉장히 좋습니다. 또한 예전 여관을 리모델한듯 2인실로 개별욕실 있어서 저렴한 가격에 편하게 이용했습니다. 조식 시간 없으면 초코파이 간단 음료 비닐팩에 넣어수셔서 한라산 갈때 요긴하게 간식 먹었습니다. 버스여행자에게 추천합니다.침대가 조금 불편하고 주차장이 객수에 비해 부족한지 주차장이 협소하긴 했지만 새로 생긴 호텔답게 깨끗하고  뷰도 좋았습니다 난타 공연을 보기 위해서 이틀을 머물렀던 호텔이에요. 저녁비행기로 와서 렌트하고 도착했더니 저녁 9시 20분이었는데 룸서비스가 9시 반에 끝난다고 해서 리셉션에서 전화해주셔서 간신히 후라이드치킨을 먹을 수 있었어요. 침대도 편하고 욕조도 크고 산에 있어서 조용해요. 조식도 나쁘진 않았어요. 식당에서 먹었던 메뉴중에서는 전복해물뚝배기랑 LA갈비가 맛있었네요. 난타공연을 투숙객에게 60% 할인해줘서 가까이에서 재미있게 봤어요. 제주에 가면 항상 잡는 숙소가 나보 호텔 난타...  난타 공연도 볼 수 잇는 곳이지만, 시간이 안되어서 난타 공연은 보지 못한 아쉬움이 있습니다.  호텔난타에서 한라산, 돌문화공원, 사려니숩길, 절물휴양림 등이 가깝습니다.  공항에서도 가까운편이며,   주변에 호텔 난타와 공연장 외에는 없어서 조용한 편입니다.  침대도 편합니다.  1층에 GS편의점이 있어서 필요한 물품은 구매를 하면 됩니다.  객실에 치약과 칫솔이 없다는 것이 약간 아쉬운 점입니다.난타 상설공연장과 함께 있는 호텔입니다. 객실이 깨끗하고 비즈니스호텔 급으로 잘 갖추어져 있습니다. 다만 시내에서 많이 떨어져 있어서 택시를 불러도 잘 안 올 때가 있어서, 차가 없으면 움직이기 불편합니다.객실도 넓고 조식도 괜찮아요. 난타 공연도 넘 재밌고 즐거운 시간 보냈습니다. 산 중턱에 있어서인지 밤이 되니 시원하고 좋은 공기를 마실수 있었어요. 너무 잘 쉬었습니다.1. 위치 : 규모가 큰 호텔이 별로 없는 애월에서 비교적 큰 규모의 호텔로서 푸른 바다가 바로 앞에 있으며 저녁 석양 무렵이 아름답습니다 2. 직원 : 직원들이 친절한 편입니다 3. 룸 : 바다 전망이 보이는 욕실이 좋았으나, 방에 전체적으로 비릿한 냄새가 나는 단점이 있었습니다. 4. 조식 : 전체적으로 괜찮았습니다만 가성비까지는... 5. 기타 : 바다가 한 눈에 보이며 사시사철 수영이 가능한 루프탑 수영장이 아주 멋있었습니다2박했는데  다시 가고싶진않아요 가격할인해서 가도 아까웠습니다. 야밤에 디제이...시끄러워 짜증났구요  ...권하고싶지않아요 여러모로...수준이 그닥...1. 실내 환기팬 및 에어컨 소음 -  침대와 객실 외부 유리창 사이에 스파가 있는 객실에 묵었습니다. 이 스파 위쪽에 상시 작동되는 팬이 있는데 현관에 룸키를 꽂으면 마스터 전원이 들어오면서 저속으로 작동하고, 화장실 팬을 작동하면 고속으로 작동하는 시스템 같았습니다. 일단 룸 키를 꽂으면 이 스파 위쪽 팬을 끌 수 있는 스위치가 없었고 저는 이 팬의 소음이 수면에 방해가 될 정도로 매우 거슬렸습니다. 결국 관리직원이 오셔서 환기팬의 전원선을 분리했고 직원 분 말씀이 전에도 유사한 컴플레인을 받은 적이 있다고 하시더군요.  또 천정에 삼성시스템 에어컨이 설치되어 있는데, 설치의 문제인지 기종의 문제인지 모르겠으나 소음이 상당합니다. 저같은 경우는 밤에는 에어컨 없이도 잘 수 있을 정도의 날씨여서 사용하지 않았지만 예민하신 분들은 충분히 문제가 될만한 수준의 소음이어서 한 여름에 투숙하시는 분들은 고민해보셔야 할 듯 합니다. 관리하시는 직원 분은 에어컨 소음은 방법이 없어서 숙박을 포기하고 다른 호텔로 가신 고객도 봤다는 말씀을 하셨습니다.  2. 객실 내부 청결도 및 하우스 키핑 문제  - 제 경우 객실 청소를 실제로 담당하시는 분 한테서는 이 정도 가격을 받는 호텔에서는 기대하기 어려운 수준의 응대를 받았습니다. 관련해서 그 분과는 대화를 더 나누기가 싫어서 프런트에 관련된 컴플레인을 했었고, 프런트는 친절하게 해결해 주려고 노력하는 것 같았습니다. 다만 호텔 직원에게 필요한 서비스 마인드 교육이 하우스키핑 하시는 분들 까지는 제대로 되어 있지 않다는 느낌을 강하게 받았네요.  3.가족들과 잘묵다가 갑니다 이국적인 분위기인 애월에 잘어울리는 호텔이었습니다.  그나저나 밑에 여자분 정황상 반입금지인 강아지 데리고들어가놓고 걸리니까 괜히 적반하장 화내는게 웃기네요 ㅋㅋㅋㅋ 우리가족들한텐 친절만하던데 ^^ 저런게 바로 갑질이 아닌가요? 글보시면 부끄러운줄아시고 정신차리세요!가족들과 여행 중 우리가 관광 간 사이에 호텔 직원들이 무단으로 아무런 허락 없이 객실 난입하여 온 방을 헤집고 나간것. 우선 이게 팩트입니다. 이유인즉슨 메이드가 청소 중 애완용품이 있었다는 것. 그래서 우리 허락 없이 객실 내부에 있는 물건 사진을 찍어 몰래 직원들 단체방에 유포했다고 하네요. 그래서 호텔 총지배인 및 직원들이 사실 확인차 4명이서 그것을 확인하러 우리 객실에 무단으로 들어간 것이라고 하네요. 관광을 다녀오자 총지배인이라는 사람이 나와 우리를 보자마자 하는 말. 자기들이 객실에 들어가서 직접 물건을 확인했으니 벌금을 내라는 것. 정말 말이 안나올 정도로 황당했습니다. 실물 강아지가 있었던 것도 아니고 그로 인해 민원이 들어온 것도 아니고 하물며 CCTV 및 명백한 증거도 없이 추정 물건으로 호텔 관계자가 4명이나 무단으로 객실에 출입해도 되는건가요? 이게 대한민국 호텔에서 일어날 수 있는 일일까요? 물건으로 추정컨데 강아지가 있는것으로 보이니 스위트룸 1박 더 내라고 하네요 객실이 못팔릴수도 있다고.. 그래서 뒤에 있을 컴플레인 및 모든것은 내가 책임지겠다 하지만 직원들이 우리객실 무단으로 출입한것은 어떻게 책임질거냐 하니 1박치 돈 안낼거면 경찰 불러서 객실 수색하겠다네요 계속 올라가서 확인하자고 협박 및 강압적인 말로 우리에게 모욕감을 조성했습니다. 그 누가 부모님과 가족들 쉬고 있는 공간을 직원들이 수색하도록 동의를 하나요 혹여나 그 안에서 호텔 규율을 어긴 담배를 피었거나 고기를 구워먹었던 흔적이 있다고 해도 그 누구도 우리 허락 없이 우리가 점유하는 객실을가격 컨디션 서비스 위치 등 빠질게 없다. 제주여행시 제주시에서 머문다면 무조건 이곳에서 다시 묵을 예정이다. 나홀로, 커플, 가족 상관없이 가능하다.2013년 4월 22일부터 24일까지 남자친구와 함께 제주도 늘송 파크텔에서 이틀을 머물렀습니다.  전체적으로 머물기에 편안한 곳이었습니다. 편안하고 저렴한 여행을 위해 숙박 장소의 위치는 정말 중요한 문제인데 늘송 파크텔의 위치는 아주 좋고 편리했습니다. 제주 국제 공항에서 가까운 곳에 위치한데다 공항에서부터 숙소까지 무료로 차편을 제공해 주었습니다. 늘송 파크텔의 주인인 미스터 박이 우리를 공항에서 호텔까지 데려다 주었습니다.   객실(공주2호)은 아주 만족스러웠습니다. 객실에는 티브이, 와이파이 되는 컴퓨터, 미니 소독기, 식수 음용대, 에어컨디션 등이 비치되어 있었고 아주 훌륭했습니다! 게다가, 객실과 화장실이 정말 청결했습니다.  이 리뷰가 제주도를 방문하려는 다른 여행객들이 숙소를 선택하는데 도움이 되었으면 좋겠네요.  고맙습니다.이 호텔에 대한 저희 첫인상은 매우 낡았다는 것이었어요. (직원들도 마찬가지로) 그런데 이 호텔에서 뭐가 좋았느냐고요? -방과 침대 시트가 깨끗해요. (방에 공기 청정기가 있어요)  -무료 와이파이 -많은 티비 채널 (성인물 채널도 포함해서요! 충격이었어요)  -도움을 많이 주는 직원들 -변기 커버가 데워져 있어요!! 아침에 당신은 이 따뜻한 변기 커버에 감사하게 될 거예요! -이 호텔 바로 맞은 편에 맛있는 흑돼지와 전복죽을 파는 패밀리 레스토랑이 있어요. (가격도 적당했어요) -식당들이 걸어서 갈 수 있는 거리에 있어요. (한국 음식점이건 패스트푸드점이건) -공항까지 대략 15분 거리  조언: -제주도에서 차를 빌리세요. (말레이시아인이라면, 꼭 국제 면허증을 신청하세요) -수건을 직접 가져오세요, 왜냐하면 제공되는 수건이 몇 장 안 되거든요.방은 널찍하고 깔끔하고요, 시설이 잘 갖춰져 있습니다. 방에는 42인치 평면 TV, 컴퓨터, 공기 청정기, 미니 냉장고, 정수기가 마련되어 있어요. 공항과는 차를 타고 약 10분 정도 걸리고, 여러 레스토랑과 편의점이 인근에 있습니다. 직원이 영어를 잘 하지 못하지만, 아주 친절합니다. 저희는 전체적으로 불만 없이, 잘 지내다 왔습니다.*제주 공항에 가깝고(10분 내외 거리), 편의점과 맥도날드가 근처에 있으며, 맛있는 식당(흑돼지 바비큐)이 바로 길 건너에 있습니다. 그리고 24시간 코인 세탁소가 가까이 있어요. *크고 깨끗한 방(무료 무선 인터넷 사용 가능), 깨끗하고 쾌적한 화장실 *마지막으로 주인이 무척 상냥하고 친절해요. 24시간 코인 세탁소를 찾으려 저희랑 같이 걸어 다녀 주었답니다. 그리고 그분은 인도네시아어도 무척 잘 해요.  더 이상 바랄 것이 없을 정도의 숙소입니다. 제주도에서 매우 추천하고 싶은 호텔이에요.최근에 지어진 것 같아 인테리어가 세련되고, 주인도 친절합니다. 온돌식 난방이 있고, 객실 내 와이파이가 무료입니다. 방은 어제 묵었던 관광호텔보다 훨씬 깔끔합니다.위치가 괜찮고, 조용하게 지낼 수 있는 숙소였습니다. 바다전망 객실을 배정 받아 전망도 매우 좋은 편이었지만, 욕실이 매우 오래된 듯한 느낌을 받았고, 테라스와 같은 곳은 청결도 부분에서 신경을 써야할 필요가 있어보였습니다.저렴하지만..베란다 환경이 좀...ㅜㅠ 바닷가 근처이고 날벌레 가 많을 수 밖에 없는 환경일 듯은 합니다만, 3층에 투숙했는데 테라스에 날벌레 나 바퀴벌레 류가 너무 많습니다. 에어컨 실외기가 창문 여는 부위 방쪽에 붙어 있어서 창문을 열기 어렵고, 청소도 좀 더 신경써야 할 듯 합니다. 샴푸나 바디크렌저를 용기에 표기 된 브랜드 제품이 아닌 최저가품으로 채워 놨더군요 ㅎㅎ깔끔하고 군더더기 없는 숙소입니다. 다음날 성산일출봉/우도 계획하고 있어서 저렴하게 잡았는데 (1박 7만원) 가격대비 굿입니다. 주차장도 널찍하고 바다 앞이고요. 주변에 아무것도 없지만 숙박만 하실 계획이라면 만족스러운곳이라고 생각되요.애초에 성산 근처에 숙소를 잡으려고 생각했기 때문에 별 고민없이 선택한 숙소. 성산에 숙소를 잡으려했던 건 용눈이오름, 성산일출봉, 돌문화공원등등 애월이나 서귀포의 번잡함을 피해서 조용한 제주를 느끼고 싶어서.  숙소 자체는 깨끗하고 조용해서 아주 만족했습니다. 창을 열면 우도가 완전히 눈앞을 가득 메우는 광경도 나쁘지 않음.깔끔하고 분위기 좋은 호텔. 공항서 가깝고 가격대비 가성비 최고에요. 설비도 잘 되어있고 사장님을 뵈었는데 친절하셔서 즐겁게 지내다 왔네요. 한라 수목원에서 차로 10분이면 가서 오전에 드라이브하기 편했네요.  다음 제주도 가면 또 들리게 될 호텔.방이 깨끗하고 위치가 너무 좋아요~~그리고 호텔 리셉션에 있는 직원 분이 참 친절했습니다 ~~!! ^_^다음번에도 꼭 갤러리 호텔 비로 가야죠 ~호텔은 너무 좋아요. 방이 깨끗하고 스태프가 친절해요. 동네에 재미있는 식당이랑 술집이 많아요. 다음번에도 이 호텔에 묵을거에요.제주 시내의 비지니스 호텔을 찾다가 이용하게 되었는데 접근성도 좋고 가성비도 좋고 깔끔하고 좋았네요. 강력 추천합니다!제주도로 출장이 갑작스레 잡혀서 급히 예약한 호텔이었는데 위치적으로도 너무 좋고 사진보다 훨씬 깔끔해서 매우 만족스럽게 지내다 왔습니다. 직원분들도 매우 친절하고 가격대비 룸컨디션도 굿굿굿!!!! 업무차 오는게 아니라 여행으로 온다고해도 이곳을 다시 방문할 예정입니다.因隣近機場,會聽到飛機起落,約11時開始會安靜起來.坐計程車約15分鐘內便到機場,早機離開的話可以睡到最後一刻, 老闆熱心 最後一天還載我們趴趴走 住宿環境很好 提供早餐跟外賣服務 還會給我們很多旅遊方面的指引 是個很溫暖很熱心的民宿主人房間也很舒適乾淨。下次還會再來!그래서 서귀포에있는 미도 호스텔에서 이사를하면서 여행을 시작했습니다. . 중앙 로터리 버스 정류장에서 454 번 버스를 타고 제주 시외 버스 터미널로 가십시오. 그런 다음 444 번 버스를 타고 Dodu Coastal Road 버스 정류장으로갑니다. 그러나 버스 번호 444는 거의 오지 않습니다 (그 당시 우리는 2 시간을 기다려야했습니다) 우리가 숙소에가는 방법을 혼동하는 동안 소녀는 우리가 어디로 갈 것인지 물었고 택시 요금을 확인하는 데 도움을 주었고 앱에서 7, 800 원을 지불 한 다음 택시를 탔습니다 (실제 비용은 8, 800 원이었습니다) 길리 메 앞에 안전하게 도착했습니다. 어쨌든 우리는 T-Money 카드로 택시 요금을 지불했습니다 (매우 편리했습니다)  좋아, 내 검토는 다음에서 시작됩니다.  첫인상은 편안하고 친절하며 신선하고 깨끗하며 환영합니다. 길림 펜션은 여행하는 동안 내가 가진 최고의 숙박 시설이며 주인 인 강은 정말 친절합니다. 그는 우리 짐을 도와주었습니다. 버스 노선을 숙소와 숙소로 설명하고 우리가 길을 잃었을 때 위치를 공유하기 위해 wechat을 추가했으며 언제든지 전화하여 도움을 요청할 수 있습니다. 그는 택시 운전사 나 버스 운전사에게 보여 주어 돌아가는 방법을 모르는 경우 도움이 될 명함을 우리에게주었습니다.  쉐어 하우스에는 모든 것이 있습니다. . 주방, 세탁기, 헤어 드라이어, 비누, 샴푸, 컨디셔너, 온수, 빵, 계란, 커피 머신, 매일 새로운 수건, 우리가 자유롭게 사용할 수있는 모든 주방 도구.  숙박 시설은 정말 귀엽고 사진 자료입니다.완전깨끗 가격착함 사장님친절♡♡ 다시또오고프당^^ 제주공항에서가깝고 바다는걸어서5분정도 가격착하고 완전깨끗^^ 압력밥솥 전자레인지 토스트기 커피포트기까지 기본 조미료도완비ㅋ 아두아주맘에마음에듬♡그는 우리를 위해 모든 것을 설명 해주시며 친절하고 호의적인 정보를 알려주는 섬, 스파이크 를 신은 영어가 감사합니다.  냉장고 정리해 시며 펜션 은 계란, 얇게 썬 빵, 오렌지 주스와 추가.  5분 정도 걸으면 올 수 있는 레스토랑과 7/11 수 있습니다.民宿老闆人很好，一開始大家誤會了付款方式，他仔細向我們解釋。另外入住安排也有彈性，我們加住客人數都沒有問題。離開的時間我們坐早上７時的班機，天還未光老闆已經起來載我們到機場。家庭房價錢超值，下次會再入住。4일간 묵었습니다. 나는 You&amp;I 게스트 하우스에서 좋은 경험을 했어요. ||우선 버스를 통해 공항에서 쉽게 접근할 수 있습니다. 나는 게스트 하우스 바로 앞에 있는 버스 정류장에서 현지 버스를 타고 제주를 여행했습니다. 교통을 걱정할 필요가 없습니다. ||둘째, 주변에 마을에서 가장 저렴한 훌륭한 레스토랑이 많습니다(특히 구운 흑돼지). ||마지막으로 방은 멋진 라운지와 주방이 있는 편안한 공간. 또한 큰 미소와 인사말, 이 곳을 강력히 추천합니다. 이 호스텔에는 몇 가지 사항이 있습니다. 주인은 매우 친절하고 그 지역에 대해 잘 압니다. 제가 가보고 싶었던 특정 음식이 있는 레스토랑이 영업하는지 확인하도록 전화를 도와주었고, 그래서 지도를 그려주었습니다. 나는 쉽게 찾을 수 있었습니다. 라운지 룸은 커요. 무료 아침 식사 제공(재료 제공), 공항에서 가까운 좋은 장소, 시외 버스 정류장에 위치하고 있으며 많은 레스토랑/바, 한라산에서 30분 거리.||||호스텔의 객실은 괜찮았지만 특별한 건 없었어요. 에어컨과 샴푸 및 바디 워시가 있는 욕실이 있는 방에서 6명 투숙. 사물함은 약간 작아서 가방 전체가 아니라 귀중품을 넣고 잠글 수 있습니다. 전체 크기 수건이 아니라 손 닦는 수건을 제공합니다.||||꼭 다시 이용하고 싶어요!첫 번째 제주도 여행, You&amp;I에서 지내는 동안 좋았습니다. 전혀 불평할 것이 없습니다. 깨끗한 방, 세면 도구가 포함된 깨끗한 화장실과 매일 새 타월 제공, 무제한 토스트, 계란, 우유, 커피, 주스가 있어 자유롭게 아침식사 조리 가능, 붐비지 않는 시간에 요리 가능(점심 식사와 저녁 식사!)||||차를 빌리면 밤새 무료 주차장을 제공하는 시청 맞은 편의 완벽한 위치. 다양한 바가 있는 술집 지구 인근에 식당들이 있습니다. ||||리셉션에서 직원들은 굉장히 모든 도움을 많이 주었습니다. 심지어 영어로 나오지 않는 차 GPS에 한국어를 입력하는 것을 도왔습니다. ||||전체적으로 꼭 추천합니다. 우리는 온다면 꼭 다시 묵을 것입니다.멋진 제주 섬을 발견하기 위해 5박을 거기에서 보냈다. 이 게스트 하우스는 도시의 “번화가” 부분에 위치하고 있으며 섬의 거의 모든 명소로 가는 많은 버스가 거기에서 출발합니다(섬의 남쪽, 동쪽 또는 서쪽으로 갈 때 대략 1시간을 계산할 수 있음). ||게스트하우스에서 사람들은 정말 친절하고 섬의 모든 곳에 도달하는 가장 좋은 방법을 항상 알고 있습니다. ||게스트하우스는 깨끗하고 필요할 수도 있는 모든 것을 제공합니다. (샴푸, 헤어 드라이어, 수건 등.. )||나는 강력히 추천합니다.제주시청근처 교통이 좋아 버스로 제주여행을 한다면 좋은 선택. 너무 시내에 위치하다보니 저녁엔 시끄럽다는게 단점. 하지만 친절한 주인분들때문에 그런건 별다른 문제가 되지 않음.무계획으로 숙소만 잡고 왔다가 오자마자 롱보드도 타보고 사람들도 좋고 편안한 분위기에 여기저기 잘 다니고 푹 잘 쉬다 갑니다:) 전체적으로 깔끔하고 심플한 분위기라 선택했는데 굳초이스였네요ㅎㅎㅎ 힙한 음악 핫도그도 맛있고 술도 맛있어요ㅋㅋ 무엇보다 1층에 바가 있어  음악 좋아하시면 혼자와도 안심심하고 좋아요!:-) 운좋으면 공짜술도 많이 마실 수 있어요 히히 굳럭택시타고 내리자마자 "아 제주도구나!" 하는 도로 뒷편에 엄청 힙한.. BED RADIO로고와 1층 라운지를 보자마자 저도 모르는 엔돌핀이 솟아 올랐어요. 1층에서 울려퍼지는 음악 소리가 너무 좋아 허겁저겁 체크인을 하고 바에 들어가 사장님들과 매니저님들과 노래를 크게 틀어놓고 어색할것도 없이 맥주와 칵테일 한두잔에 금새 친해졌네요! (로컬, 외국인들분도 자주 오시나봐요) 신축이라 깔끔하고 청결한 방에 운이 좋게 제 방에는 테라스까지 있어 밤과 아침에 어메이징한 뷰를 선사해주세요. (이가격에 이걸 즐겨도 되나 싶은.....) 제공되는 조식을 먹고, 근처에 러닝을 하고 왔는데 이런 힐링이 따로 없네요. 서귀포쪽에서만 머물다가 제주공항에서 우연찮게 머물렸는데, 이런 좋은 곳을 발견하니 ㅎㅎ 감사할다름!! 또 올께요!! 사장님1층은 바, 커페로 운영되고 그 위로는 다 호스텔 객실인데 바/카페, 객실 모두 전망이 너무 좋아요! 특히나 맨 윗층 조식실에서 보이는 원도심 풍경은 엄지척!! 직원분들도 친절하시고 좋았어요 다음에 제주 오게 되면 무조건 다시 올 거 같아요! 저렴하면서 깔끔한 숙소 찾고 있었는데 딱 여기였어요!! 너무 아늑하고 친절한 서비스 덕분에 잘 머물다 가요~ 아래층에 분위기도 좋고 가격 저렴한 라운지가 있어서 밤에 혼자 맥주마시기 진짜 굿이었어요! 진짜 다른분들에게 완전 추천합니다!!!!조식 먹으러 올라갔는데 뷰가 아주... 산지천, 한라산, 제주항까지. 다보여서 너무 좋았습니다. 도미토리 객실에서도 같은 뷰더라구요. 최고. 공항근처에서 숙소 찾는다면 그냥 여기서 묵으면 될듯. 저는 도미토리에서 잤는데 매트리스가 좋은지 엄청 꿀잠 잤어요.   호스트분들도 너무 친절하시고  1층 bar가 새벽 1시까지 해서 한참 수다떨다가 올라가서 잤습니다.   다음에 제주를 다시 찾는다면 또 올 예정!나무를 포인트로 인테리어 하셔서 방 분위기도 너무 좋았고 예뻤습니다! 사장님 감각이 너무 좋으신 듯해요🤗 다른 비지니스호텔들의 하얀 호텔만 보다가 이런 방을 만나서 너무 새롭고 너무 좋았어요~ 다음번에 갈 일이 생기면 또 이곳에서 지내고 싶네요ㅋㅋ 사장님도 너무 친절하시고 정원도 예뻐서 편하게 있다가 왔습니다웨딩스냅차 제주 방문하면서 평점이 높은 정원카페 느낌인 이곳에 방문했습니다. 친절한 주인과 기대이상으로 깔끔하고 편안한 시설과 서비스 만족스럽네요. 갈수록 흥할듯^^♥일부러 찾아갈만한 멋진 분위기와 친절한 외국인 사장님 무엇보다 합리적 가격 숙박을 하지 않았어도 레스토랑 때문에라도 가고 싶은 곳애월항 근처 한적한곳에 있음 전체적으로 룸컨디션 좋고 실내 집기류도 잘 갖추어져있음 정원이 크고 소중히 가꾸는 느낌 산책로 따라 걷기 좋고 뒤쪽에는 작은 연못도 있음객실이 깨끗하고 쾌적해요.. 아침마다 신선한 조식을 만날수 있구요. 사장님 내외분이 너무 친절하셔서 기분좋게 지낼수 있는곳입니다^^주차장이 지하1,2층이고, 지하2층은 엘리베이터가없어요 식당, 편의점도 근처라서 저렴한가격에 잘 이용했어요 공차도 근처에있고 유리네식당, 세븐편의점도 있어요공항에서 10분거리에 위치하여 이동하기 편리하다.  투숙 장점: 가격이 굉장히 저렴한데 그 가격이라는 것을 감안했을때 전혀 실망스럽지 않다.  객실과 욕실이 크다. 도로변에 있어서 소음 걱정을 했지만, 기우였다.( 도로가 좁아서 통행량이 많지 않다.)  투숙 단점: 이틀 투숙하기때문에 체크아웃 때까지 분명히 재실정비 하지 말아달라고 요청해 놓았는데 이튿날 외출하고 돌아오니 깨끗히 정비 해 놓으셨다.  정비 해준 것은 고맙지만, 소통이 원할 하지 않다는 것을 느꼈다.  원래 어느 숙박 시설이든 금연이 기본인데 처음 배정 받은 객실이 담배 냄새로 쩔어 있었다. 그렇지만 직원이 바로 깨끗한 방으로 변경 해주셨다.  제발 please~~!  숙박하는 곳에서 금연 해주기를 바랍니다.   흡연자들이 항상 술 마시고 나쁜짓 하는 사람들은 봤어도 담배 피우고 나쁜 짓 하는 사람들은 못봤다고 하는데...나참 나 어이가 없네...  총평: 가격대비 훌륭하다^^우리는 일요일 오후에 체크인을 해서 수요일 묵으려고. 우리는 방 2개를, 그해의 담배에 냄새가) - 연기, 우리는 방을 바꿀 수 있었다. 우리 방은 넓고, 욕실도 더러웠어요.  거울 더럽고, 세면대, 샤워와 화장실도 더러웠습니다. 마치 마른 천으로.  전체 호텔은 잠시 씻고 좋아하지 않는 것 같았습니다.  이 것보다 다른 공손하고 친절했고요. 하지만 영어를 거의 우리는 애플리케이션을 사용하여 찾을 수 있습니다.  이 더러운 욕실 및 전반적으로 아주 허름합니다 아니었다면 높은 등급 것이라고!제주도 패키지 여행 중 묶었던 호텔이였구요, 2박 스위트룸 6인~8인 실 사용했습니다. 스위트룸은 기다란 거실, 화장실, 그리고 침대가 2개 있는 방이 하나 딸려있었구요. 별로 일거라고 예상하고 갔었는데 생각했던 것보다는 숙소가 좋았어요. 다만 아쉬운 점이 있었다면, 호텔에서 제공해준 이불이 깨끗하지 않았다는 거였네요. 조식 서비스도 이용했었는데, 한식 으로 제공되었구요. 반찬은 4~5가지 정도나오고 국도 나오는데 맛은 있진 않지만 그럭저럭 먹을만 했습니다. 아, 그리고 신제주 (번화된 시내) 에 있어서 주변에 식당이나 까페, 술집, 나이트 등이 엄청 많아요. 거의 유흥 거리라고 해도 과언이 아닙니다.Being on a short tour with my Abba tribute band we are on the beautiful Jeju Island.   The hotel is really well located, just about 10 minutes from the airport, with an abundance of restaurants, night-clubs, taxi\'s and transport all very close by.  On entry to the hotel a fabulous chandelier hangs from the big reception area, sadly the rest goes a bit downhill from here in my opinion!  The hotel allows smoking in the rooms which is sadly very evident as you enter the room! (Non-smokers and with vocalist\'s!)   The bathroom (room 605) needing a really good clean! The glasses to drink out are dirty, as is the general appearance of the room.  On the plus side a very comfortable bed, really good Wi-Fi. Due to the cleanliness of the room, we did not go for our free breakfast situated 가족들과 휴가로 숙박 잡았는데 침대도 올드하고 가장 충격적이었던건 바퀴벌레..!! 물론 벌레 신경안쓰시는 분은 괜찮겠지만 태어나 처음 본 저는 진짜 충격이였어요. 처음엔 어머니께서 화장실에서 잡으셨는데 그때까진 참았습니다. 그런데 방에서도 한마리 더 발견되었습니다. 화가 나서 안내데스크에 연락했더니 원래 바퀴벌레랑 지네 등등이 나온다는 답변만 받았습니다. 남는 방이 없어 방도 못 바꿔준다며 수건이라도 바꿔줄까요? 라고 묻는데 진짜 어이가 없었습니다. 짐에 한마리라도 딸려오면 집에 퍼지는건 순식간이라 짐풀었났던것도 정리해서 테이블에 다 올려두고 신경쓰여 잠도 잘 못 잤네요.. 다른숙소 갈날만 기다렸습니다. 최악의 호텔 절대 안갈것같습니다.. 직원의 대처도 불만이었고요.지인이 몇년전 다녀와서 좋다고 추천하길래 제주도 여행의 첫날 숙소롤 잡은 곳 위치가 좀 외지고 객실상태도 좀 미흡, 조식은 정말 별로였어요1. 소음 2. 호텔 측 대처 3. 서비스   모텔 보다 못함. 디럭스 2박 숙박.  천장에서 물 소리가 새벽 내내 나서 데스크에 문의(새벽4시)  호텔측 우린 그런 컴플레인 받은 적 없다. 내일 시설팀 확인해 보겠다함. 다음날 시설 팀 확인했으며 괜찮을 것이다. 하여 그 다음날도 같은 방 숙박.  여전히 나는 소음 그로인해 2일 내내 새벽 4-5시까지 못잠.  ps. 소음 녹음까지 해서 들려줬는데도 불구하고 디럭스 풀북이라나????  디럭스 숙박하실거면 거르세요 제발. 트립어드바이저가 업뎃 되어서 녹음기능 추가 할 수 있게 되면 평생 간직 후 소음 업뎃 할 것임. 정말 이 호텔 모텔 보다 못함!!!!  아참 아스크림 먹어야해서 숟가락 좀 빌려달라고 하니 데스크에선 그런 권한이 없다함.( 조식도 운영 중인 호텔) 말 끝.  모텔도 이것보단 서비스 좋을 걸??????  그동안 다녔던 호텔들 중 정말 다시는 오기 싫은 베스트 최악의 호텔.  본관 3층 객실에서 지냈는데 바로 앞이 바다라 뷰가 좋았다. 객실도 깔끔하고 객실내에 에어컨, 제습기, 빨래건조기, 작은사이즈의 주방이 있어 편리하게 사용함. 로비에서 물과 맥주는 판매하공있으나 호텔입구에 편의점이 있으니 그 곳에서 구매하길 추천함.  공항에서 대략 30분정도 소요됨 위치도 공항하고 가까운 편. 다만 호텔 시설관리면에서 약간 부족해 보임. 방충망에 구멍이나있는 곳도 있었고 벽돌도 군데군데 깨진곳이 보임 전체적으로 만족스러운 호텔. ...... 우리 방만 이랬던걸까요? 청결하지 못해서 불쾌했어요.. 이불에 구멍이라니.. 하나도 아니고.. 으..........걸어서 몇분 거리에 해변가 맛집들 많고 자리도 편하고 좋아요~ 제주 갈때마다 묵고 있는데 매번 불만없이 잘 갔다 옵니다~ 추천해요- 룸, 레스토랑 깔끔함 - 직원 친절함 - 함덕 해변은 걸어서 5분, 주변맛집 꽤 있음 - 공항까지 승용차로 약 40분쯤 (차 막안막히는 시간) - 공항가는 버스 있음함덕 해변 바로 앞이고, 5만원에 슈페리어트윈룸이라 2인 사용 시 넓고 좋습니다. 객실도 깨끗해서 아주 만족스러웠습니다. 다만 객실수에 비해 주차장이 조금 협소한 것 같네요~라마다 치고는 저렴하고  환경은 Good  바다도 가깝고..  접근성 용이  조식이 비싸다는 단점이..  암튼 good조용하고 주변에 함덕해수욕장이 있어서 밤새 놀기 아주 좋음. 걸어서 10분정도 위치하고 있음. 제가 갔을 땐 사람이 없어서 그런지 이용이 굉장히 편리했어요. 오래된 곳 같지만 청소를 열심히 하는 지 깨끗해요. 샴푸, 린스, 바디워시, 치약에 폼클렌징도 있어서 참 좋았습니다. 빨래 무료이구요, 여자방에 드라이기 뿐만 아니라 빗, 화장솜, 면봉도 있어요. 근처에 동문시장이 가깝고 공항까지 버스로 넉넉하게 20분이면 갈 수 있어요. 마스코트 락심이가 정말 귀엽지만 밖이랑 안을 구분없이 돌아다녀서 위생에 민감하신 분은 주의하셔야 될 것 같아요. 조식은 계란, 식빵, 밥, 미역국, 씨리얼, 우유, 쥬스, 쨈이 나와요^^동문시장 가까이 있어서 걸어서 갈 수 있어요. 관덕정도 가깝고, 도미토리 묵었는데 1층에 씻는곳&amp;화장실 겸용 하나라 좀 기다려야 해서 불편했어요. 사람들이랑 거실에서 도란도란 서로 정보공유하기는 좋아요제주도 갈때 종종 가던 게하인데....위치는 시내쪽에 있어요... 다른곳보다 좀더 친근하고 조식도 좋구 ㅎㅎ 주인언니도 친절하시네요... 가끔 저녁에 파티도 하는데..좋은분들도 많고...저렴하게 제주여행할때 들르기 좋아요..가격이 다소 저렴한 편이고 제주 시내에 있어서 공항 근처에서 주무시고 아침 이른 비행기를 타야 하는 분에게 괜찮을 것 같은 곳입니다. 건물이 오래되어 개조를 했다 해도 시설이 다소 낙후되어 보이는 것은 감안해야 할 듯 합니다.제주시내에 있는 게스트하우스를 찾다가 가게 된 곳이에요. 가격이 좀 저렴한 대신 건물이 낡은 편이라 제가 묵었던 방은 창문이 잘 닫히지 않아서 모기가 들어왔던.. 화장실도 약간 낙후된 느낌이에요. 주인분이 리모델링을 하셔서 페인트칠이 알록달록하게 되어 있고 아기자기한 느낌이 나며, 아침 조식은 메뉴는 게스트하우스의 일반적인 메뉴지만 잘 준비되어 있었고 분위기가 화기애애해서 거실에서 담소가 많이 나눠지고 있더군요.친구들이랑 놀러왔는데 뷰가 너무 이뻐요🤘🤘 눈이 펑펑 내려서 못올라가면 어쩌나 했는데 올라오는데 큰 무리없이 왔어요 ㅎㅎ 방도 크고 깨끗하고 잘 쉬다갑니다 다음엔 가족들이랑 함께 올게요!!!  엠버리조트 번창하세요~~ 날씨도 좋고 잘쉬다 가네요 웬만한 호텔보다 편히 쉬는곳으로 짱인듯  ....그리구 바베큐파티 짱입니다.나중에 설매장 오픈하면 달립니다친구랑 제주여행. 카라반에 숙박 꼭 해보고 싶었는데~ 아늑하고 좋아어요. 여기 리뷰 보고 선택한 곳 인데 .. 선택 잘 했다 싶었어요. 직원분들도 친절했구요. 객실청소도 깔끔했어요. 리조트 프론트에  스낵코너 가 있어요. 종류가 많은건 아니지만 아쉬운대로 맥주캔에 스낵 구매해서 먹을수 있어 좋았담니다.조용하게 가족과 함께 쉴수있는곳 찾다가 다음날 한라산 등반계획도 있고 해서 결정한 엠버 리조트 . 생각 외로 너무너무 괜찮았어요. 경치는 두 말 할것도없고요.  객실 청결도 좋았구요. 도시에 소음속에 살다 조용한 곳에서 쉴수 있어서 행복했습니다 사진 업데이트가 잘 안 된 것 같아요.  실제로 방문했을때 사진보다 훨씬 좋았고 기대 이상이었어요. 외부 느낌보다 내부 인테리어에 신경을 많이 쓰신것 같았고 리클라이너 소파나 커피머신같은 세심한 부분도 좋았고 조경?이랄까 여러가지로 공을 들인 느낌이었습니다. 한라산쪽이라 시내보다는 좀 쌀쌀하긴 했는데 난방 잘 되고 뜨거운 물도 잘 나와서 편안하게 힐링하고 갑니다. 참 조식도 괜찮더라구요~ 좋은 가격에 좋은 숙소였어요.자주 방문하는 제주인데 이번엔 함덕에서 숙박하려고 예약했습니다. 저렴한 가격에 파셜 오션뷰를 제공한다 하기에 예약했는데 서드 파티에서 본 것과는 다르게 테라스가 없는 것입니다. 그래서 내가 본 것과는 다르다 했더니 일단은 흔쾌히 룸 체인지를 하고 다른 방으로 옮겼습니다. 그러나 이... 객실이 도대체 무엇인가요? 침대는 매우 좁고 싸구려 침대인게 딱 티나는 덜컹덜컹 거림에 세면대와 화장실이 아예 분리되어 있습니다. 동선이 이런 호텔은 생전 처음입니다. 다른 분들이 말씀하신 곰팡이 문제는 없는데 좁은 객실에 억지로 이것저것 욱여넣은 느낌이 강해 지내는데 너무 불편합니다. TV는 나오지도 않고 나름 전망은 좋은 편이나 화장실엔 고작 욕조 하나만 들어갈 수 있는 수준에 문 마저 고장난건지 씻는데 매우 불편합니다.  두 번 다시 오고 싶지 않습니다. 여러모로 최악의 호텔 중 하나입니다.코너 바다뷰? 를 묵엇는데 바다손톱만큼 보엿네요ㅎㅎㅎ;;;;;;;; 원래는 함덕앞에 다른호텔 이용 했다가 여기가 저렴해서 이번엔 여기호텔에서 묵엇습니다~~~~가자마자 식당수도관 파열로 레스토랑 천장이 내려앉아서 맥주무한리필도 안되고 조식도 도시락을 대체 예정이라함  방에 올라가자마자 화장실 곰팡내 오짐 그리고 겁나 좁음 세면대 물도 안내려가고 샴푸도 코딱지만한거 줌 콘센트도 다 구멍 한개짜리라서 한명빼고 다들 보조배터리에 연결하고 잠. 침대 머리맡 콘센트도 구멍한개짜리 ^^ 방에 구비되어있던 슬리퍼도 누가신어도 열번은 넘게 신은듯한 슬리퍼고 3명 자는 방인데 물 두병에 수건도 4장만 줌 ㅋㅋㅋㅋ 아침에 7시부터 조식이라서 내려갔는데 카운터에 직원없고, 도시락 얼른 받아서 우도가려고했는데 직원 겁나 늦게옴. 객실 점검중이라는 안내팻말보고 얌전히 기다렸는데 객실은 커녕 천장꺼진 레스토랑쪽에서 나오고 담배냄새 오지게 풍기면서 옴. 조식 달라니까 도시락이 안왔다고함. 그때 시간 7시 20분이었음. 조식 7시부터 아니냐고 하니까 맞는데 업체가 늦게 갔다줘가지고 지금 직원이 받으러 갔다고함. 걍 됏다고 하고 옴 승질내서 뭐하냐 호텔 방 상태보면 답나오는데 걍 안가는게 최선이지딱 그 금액대의 호텔이다. 비치에서 놀고 정신없이 자기 딱 좋은숙소. 다른걸 바라면 안된다. 금액이 착하니깐. 때로는 함덕바다도 살짝 보일때 기분이 좋아지는 정도이다.나가자마자 해변이고, 메인 해변까지는 걸어서 5분거리입니다. 위치, 방 크기, 인테리어는 가격을 생각하면 가성비 괜찮은편이라고 생각합니다. 저는 제일 작은방 (바다 측면뷰) 에 묵었는데, 이 방 구조가 세면대와 샤워실이 따로 있어서 동선이 좀 불편했습니다.시설이 깨끗하고 친절하다 위치는 바닷가 근처라 산책하기좋고 맥파이 근처라 더욱 좋음 근데 버스로 접근성은 떨어지고 택시를 주로 이용해야함 요새 중국관광객들 많았음위치 자체는 시장이나 마트도 가깝고 먹을데도 많아서 좋은 편. 다만 앞에 놀이기구가 있어서 문 닫기 전까지는 시끄러운 편이다. 전망은 앞쪽에 다른 호텔에 가려서 특별히 볼만한건 없다.  방 넓이나 상태는 무난한 편이고 필요한 일회용품도 넉넉하게 챙겨주는 점이 좋았다. 꼭대기 층에 바가 있고 체크인시 생맥주 쿠폰을 주니 간단하게 한잔 하기도 좋다.아마도 오래된 모텔을 리모델링 한 것 같습니다.  예전 흔적이 느껴지는 부분도 있지만 전반적으로 깨끗하게 관리되고 있습니다.(침대 시트 등) 제주에 늦게 도착했을때 지내기엔 가성비가 아주 좋습니다. 주변에 올댓제주 등 유명 맛집도 있구요. 탑층에 바가 오픈했다며 생맥주 2잔 무료 쿠폰도 주니 호감도 급상승!주변공사소음이 거슬렸지만 가격을 생각하면 시설도 깨끗하고 만족스러움.  불편한 점은 얘기하면 처리해줌. 바닷가도 조금 보여서 좋았음.공항 근처에서 하루 지내려고 예약했어요. 세면할 때 필요한 일회용품도 챙겨주고, 객실이 깔끔해서 좋았어요. 택시 타면 공항까지 차가 밀려도 10분정도 소요되는 곳이에요.그것은 쉬기 좋은 시간이었습니다. 이 리조트는 해변 바로 옆에 있기 때문에 멋진 전망을 제공합니다. 클린 룸과 편안한 침대. 리조트 승무원은 매우 친절합니다. 내가 다시 제주를 방문한다면 나는이 리조트에 다시 머물 것이다. 제주도 아름다워.위치가 바로 해변 근처라, 룸에서 보이는 뷰가 너무 좋습니다. 세화해변 자체가 조용한 곳이라 그런지, 우리 가족만 조용히 지내다 갈수 있었습니다. 근처에 이쁜 카페도 많고 제주해녀박물관이 근처에 있어요. 성산일출봉까지 15분 정도 걸리구요. 이 근처 여행하시는 분들께 추천합니다.제주도 출장때문에 방문하게되었지만 다음 휴가때 다시 방문하고 싶은 숙소 입니다. 바다가 바로 앞에 펼쳐져 있으며, 조식으로는 프라이와 베이컨, 샐러드, 빵 등 간단하게 먹을 수 있습니다. 청소상태도 깔끔하고 친절한 직원분들 때문에 더 만족스럽게 머물다 갈 수 있었네요. 룸과 카페에서 바라보는 바다뷰 때문에 밖에 안나가게 된다는 단점이 있습니다:)태교여행으로 2박 머물렀던 MJ리조트. 바다 바로 앞에 위치해있고 너무 조용해서 참 좋았네요. 조식은 달걀프라이, 베이컨, 샐러드를 직접 준비해주시고, 토스트와 버터, 쨈, 씨리얼, 황도, 오렌지주스가 마련되어서 든든하게 먹을 수 있어요. 직원분들 모두 친절하셨고, 리조트 내에 카페가 너무 세련되고 이뻤어요. 카페에서도 역시나 바다 경치가 참 좋았고, 객실 침대에서 바라보는 바다는 정말 멋졌네요. 제대로된 힐링여행 잘 하고 왔어요. 룸컨디션도 너무 좋았어요. 제주도 동쪽 여행을 준비한다면 MJ리조트는 무조건 또 가려고 합니다!!!Stayed 4 nights in MJ, booked a seaside view room and was not disappointed. Very clean room and well equipped for a getaway type of vacation. Staff are very quick in their service be it during breakfast or in the reception. Self drive will find this location quite and beautiful seaside beaches as eateries &amp; shops are 2Km+ away. Nearly by wet market ( cook &amp; uncook food) only open on Sunday ......   will  come back and stay again in Spring. 딱 잠만 자고 오자면, 그럭저럭 가성비 일 듯~ 3박4일 여행 갔다가 하루 더 체류하는 바람에 급히 저렴한 것 찾아 간 곳인데... 공간이 너무 좁아 답답했고, 아침 식사때 한국인은 저희 가족 뿐인듯 했습니다(지금은 중국 관광객이 없을 듯 합니다만..ㅎ)저렴한 가격에 공항 근처에서 하루 묵기에 추천합니다. 공항까지 택시비가 6000원 정도 나오네요.제주공항에 저녁에 도착한다거나 근처로 잡고 싶다면 거리도 가까운 포시즌 호텔 추천 다만 방은 그리 넓지 않으니 이런거 상관없다면 괜찮고 좋음 !!집으로 돌아가는 비행기 시간이 이른 아침이나 새벽때라면, 제주공항 근처 숙소에 머무는것이 좋은데, 이 곳은 공항 인근의 중저가 호텔중 하나입니다. 숙소가 다소 비좁긴 하지만, 시설은 깨끗한 편입니다. 시내에 위치하고 있어 인근 지역으로 관광하기 좋습니다.그것은 좋은 위치와 예산 호텔입니다! 어디든지 걸어 갈 수 있습니다 - 7 Eleven, 제과점, 신라 면세점까지 약 200 m 거리에 있습니다! 도로 건너편에있는 아이들을위한 놀이터가 있습니다 (뒷문을 사용하십시오). 그것은 제 딸들에게 즐거움이었습니다. 방은 넓고 깨끗했습니다. 욕실도 좋은 크기였습니다. 매트리스는 나에게 힘들었지 만 너무 비싸지 않았다. 직원도 도움이되었고 친절했습니다.신제주, 공항에서 가깝고, 도심 한가운데 있어서 접근성이 좋음. 건물은 너무나 오래 되서 1980년대 시간이 멈춘듯한 건물외형 및 내부. 건물 로비에 들어서면 쾌쾌한 습한 냄세....아침 조식은 가격에 맞춘 딱 그 가격에 밥.  전체적으로 거두절미하고 저렴한 숙박료만 생각한다면 아주 훌륭한 호텔이고, 혹시나 저렴한 가격을 망각하고 이런저런 수준을 기대한다면 그것은 고객이 도둑심보....그냥 도심에 있는 아주 오래된 시설에 저렴한 가격의 숙박시설이라 보시면 됨.아침 조식이 뷔페로 나와서 좋았고 방도 넓고 깨끗해서 좋았습니다.하지만 몇 개의 방은 리모델링이 덜 되었으며 길가에 신호등이 없어서 불편했습니다.하지만 큰 길가에 위치해 택시 잡기에는 편했습니다.좋은 호텔, 깨끗하고 너무 멀어서, 나는 운 좋게도 발코니가 딸린 방이 있어서 나는 행복 해요. 물 필요 없음, 각 객실에는 작은 용기. 수건 이지만 작은 호텔. 또한 욕실 발매트는 안 합니다.  아침 식사는 보통 수준 입니다.이 호텔이 중국 단체 관광객들을 위한 건물이 조용한 여행지. 라스베가스 스트립에 있는 2 star 호텔이 조용한 이 곳이 21 년 세가지 drunking. 방은 더러웠고, 침대 시트와 싶었던 손님의 머리카락이 있었어요. 여행객들을 위해 특별한 한 많은 모기를 살 수 있는 시푸드 바베큐. 침대는 딱딱했다. 위치는 도시 중심부에서 멀리 떨어져 있습니다.   친구, 여기에 묵지 마세요! 제주도 최고의 호텔이 지, 가격 대비 가치가 있지만, 위치는 중심, 시설은 나쁘지 않지만, 방은 깨끗하고, 매우 빠른 와이파이는... 나는 이 호텔이 최고의 관광지와 잠을 자는 것 뿐... 5성급 럭셔리 호텔이 있지 공항에서 호텔로 오는 버스노선이 다양할 뿐만 아니라 근처에 다양한 식당이 있어서 편리합니다. 또한 동문시장에서 가까워 걸어서 왕복이 가능합니다.  방은 깨끗하고 방음도 잘 되어있습니다. 화장실은 청결하며 냄새도 나지않습니다. 냉난방도 개인이 조절할 수 있어서 본인에 맞춰서 키고 끌수있습니다.  다음번에도 제주도에 방문한다면 또 머무르고 싶습니다연말마다 매년 제주에 오는데 그때마다 이용하는곳이며 주변객실 소음도 없고 서비스 친절 청결 모두 만족하는곳입니다  제주도에서는 이곳보다 비싼곳도 여기보다 좋은곳을 찾기힘듭니다제주에서 묵었던 숙소 중에 가장 깨끗하고 좋았어요. 규모는 작지만 곰팡이 하나 없이 청결했고 침구도 너무 깨끗해서 잠을 진짜 푹잤어요ㅎ  재방문의사 100프로예요^^ 좋은 참고가 되셨음 좋겠어요~~공항에서 택시로 15분정도 걸리는 거리에 있었습니다 저와 친구들 모두 정말 만족하구요 다음에도 오고 싶을만큼! 깨끗하고 조식 또한 맛있었습니다  여긴저기 다니기 좋을 위치고 수건도 넉넉히 챙겨주시고 청소도 해주셔서 정말 좋았습니다 바다전망이라 확트여 좋았구요 ! 추천합니다조식포함 공항근처인데도 가격이 합리적이였습니다. 이불, 베게, 매트리스까지 다 커버를 사용하는게 맘에 들었어요.  조식도 심플하면서도 종류별로 제공되서 맘에 들었어요!! 주차공간이 다소 부족하기는 했는데 그래도 이 가격대비 만족이예요!출장 때문에 제주도에 오게 됐습니다. 가성비가 좋고 전체적으로 깨끗했습니다. 난방이 가능하여 방이 따뜻하고 아주 좋았습니다. 또한, 옆에 편의점이 있어 더 좋았습니다. 제주에 출장때문에 자주가는데 주로 모텔에서만 숙박을하다가 비슷한가격에 제주스테이호텔을 예약하였는데 시설이 뛰어나거나 그렇지는 않지만 직원들의 서비스마인드도 좋았고, 조식까지 무료로 이용할수 있게해줬어요.사진은 괜찮아 보이지만 방은 꽤 오래되었습니다. 봄철에는 에어컨이 없으므로 창문을 열어야합니다. 청결은 아주 가난하다. 그러나 로비에있는 직원은 매우 도움이되며 승강기가 없으므로 객실 바닥에 짐을 실을 수 있도록 도와줍니다.  다시 여기 머 무르지 않을거야.방은 너무 작았습니다. 겨울에는 에어컨이 없습니다. 창문을 열어야 해. 예약 사이트의 사진은 물고기 눈 렌즈로 찍은 것처럼 오해의 소지가있었습니다. 다시 여기 머물러 있지 않을거야. 까다 롭지 않은 여행자에게 좋습니다.이 호텔은 로비에서 친절한 스태프들이 있는 현대적이고 환경 우리를 편안하게 묵을 수 있는 곳 같습니다. 레스토랑은 좋은 쾌적한 서비스를 Woth.  이 호텔은 근처에 시장과 액세스할 수 있습니다.  훌륭한우리가 제주를 여행했을 때 우리는 몇 밤을 여기에 머물렀고 우리의 렌트카에 앉아있는 탐색 장치는 찾기가 매우 쉬웠습니다. 공항에서 약 20 분. 우리 아파트에는 발코니가있는 바다와 아름다운 거실과 주방이 있으며 기본 요리 도구가 있습니다. 아파트의 지시 사항은 영어로되어 있지 않지만 모든 경고문을 읽고 특히 밖으로 나가면 동시에 발코니 문 2 개를 닫지 않는 것에 대한 번역 앱을 사용하십시오. 또한 아파트에는 거실 패널과 장소의 조명을 제어하는 리모콘이 있습니다. 셀프 세탁 시설은 없지만 공항으로 돌아가는 것처럼 차로 10 분 거리에있는 저렴한 24 시간 코인 세탁소가 있습니다. 제주에 돌아올 때 좋은 가치의 기반이므로 다시 예약해야합니다.널찍하고 깨끗한 방. 나는 그 지역이 새롭고 개발되고 있다고 생각하지만 그것은 매우 조용합니다. 바다를 바라 보면서 발코니에서 멋진 전망을 즐기실 수 있습니다. 친절한 직원이지만 영어는별로하지 않습니다. 우리는 에어 컨디셔너 문제에 관해 그들에게 말했고 우리는 통제를 이해할 수 없었다. 다음 날, 그들은 우리에게 제어판이 훨씬 더 조용한 광고를 영어로 녹음했습니다. 우리는 공항에 오전 5시 택시를 요청했다. 비록 사소한 문제가 있었지만 직원은 우리를 위해 또 다른 택시를 불렀고, 우리가 택시를 얻었다라고 확신하게했다. 우리가 그들과 대화를 나누기를 바랍니다. 그들은 아주 좋은 사람들입니다. 다음 번에는 분명히 거기에 머물러있을 것입니다. 공항에서 15 분 거리에 교통 정체가없고 11 달러에 들기 때문에 매우 합리적인 요금입니다.시설이 그냥 일반 모텔급이었으며 분명 실내 흡연이 금지되어 있는데 객실에 들어가니 담배 쩐내가 났음 그냥저냥 1박하기엔 좋지만 그 이상 그 이하도 아니었음연동의 입구에 위치한 리모델링 완료 호텔 객실은 깨끗하고, 위치도 좋왔으며, 친절한 직원들의 환대로 좋왔다. 혼자 쓴 3개의 침대방이 부담이 되긴했지만~ 내가 이용한 방으 ㄴ8~9층에 있던  프린세스 코스의 방으로 이벤트성의 방이였다.9층 프린세스룸에 묵었는데 바다가 보입니다. 방도 넓은편이고 욕조도 넓습니다. 복도끝에 스모킹 라운지가 있고 엘리베이터도 2개가 있습니다.  조식은 1만원인데 가격대비 훌륭합니다. 제주공항과 가까워서 버스나 택시로 바로가면 10분도 안걸리고 택시도 잘잡힙니다. 번화가에 위치해 쇼핑하거나 커피를 마시거나 술한잔 하기도 좋습니다. 호텔의 상태도 좋고 서비스도 마음에 들었습니다. 적극 추천할 거고 다음에 갈 예정입니다. 공항도 가깝고 먹거리도 많은 곳이었습니다.완전 시내중심에있는 스카이파크! 객실도너무깔끔하고 일반비지니스호텔생각해서 잠만자야지..싶었는데 너무좋았네요^^ 바오젠거리에일정이있어서 예약하게됐는데 좋았어요 주차장은좁았지만 특별히문제될껀없었어요 지하1층에 세탁실이있어서 제주여행에서는 이만한곳이 또있을까싶어요 좋아요!비행기가 못뜨게되는 바람에 급하게 예약하고 묵었어요. 공항에서 가깝고 저렴하고 평이 좋아 예약했는데 , 정말 깨끗하고 시설이 새거여서 좋았어요. 직원분들도 친절하시고..... 어쩔수 없이 발이 묶여서 당황스러웠는데 친절하시고 주변에 식당 추천까지해주셨어요. 감동입니다! 추천해요!!!가장 저렴한 방을 이용했습니다. 나쁘진 않으나 객실에 침대 두개를 넣어 좀 좁아 보이는 듯한 느낌이 있었습니다. 하지만 지내보니 딱히 좁다는 생각은 안 들었고 충분히 넓었습니다. 화장실은 문이 없으며 안쪽에 변기와 샤워대가 유리로 나눠져 있고 각각 문이 있습니다. 수건은 총 4장이었으며 tv와 냉장고, 와이파이가 있습니다.이 호텔에 2박을 묵, 공항에서 버스를 타고 정류장만 3만, 이 호텔은 걸어서 갈 수 있습니다.   근처에 위치해 쇼핑과 식사 공간, 그리고 작은 마켓.   호텔은 깨끗하고 직원들을 만날 수 있는 간단한 작은 엘리베이터가 1 만. 그는 우리가 체크 인 에서 아침식사를 제공하고 있습니다.   객실 및 시설은 아주 좋았습니다. 욕실에 문이 없 (별도의 화장실 및 샤워실)   아침 식사는 표준 및 커피나 차를 선택할 수 있습니다 (의 시스템).   공항까지 가는 버스 안에서 버스 역에서 100 만최상의 위치, distric 쇼핑 근처 레스토랑, 버스 정류장. 공항에서 가깝고(15분 3 정거장 만 해당).  깨끗하고 편안함. 그들은 1 만? 아침 식사는 기본적이었지만 괜찮습니다.  단점: 화장실 문 없는 방 온도를 조절할 방법을 알고 하지 마십시오좋은 호텔이었고, 위치는 모든 곳에 가깝고, 깨끗했어요. 히터 의 온도 이 없거나 ac 변경 밤에 잠을 자는 게 저는 저 작은 창 열기 권한이 있는. 또한 욕실 문을 사진 에 해당 할 것이 없었습니다.저렴한 가격에 편안하고 깨끗한 숙소입니다.  무엇보다도 주인의 친절함이 감동적이었습니다.  무료 아침밥도 다양하게 준비되어 배불리 먹었어요.  다시 오고싶은 리조트입니다.멋진, 깨끗하고, 친절하고 - 편리한 해안이 모두 아이씨씨. 좋은 가치, 강력 추천합니다. 한가지 단점은 독서용 램프, 하지만 쉽게 극복 이다. 오아시스 같은 곳이다. 특히 좋아 보일 수 있는 정원...소리 체재 회의 (약 11분 도보) 근처에 국제 컨벤션 센터. 근처에 대포해안 주상절리 절벽. 천제연 폭포, 제주 여미지 식물원 및 짧은 드라이브 거리에 떨어져 있는 사찰 yakcheonsa.   우리가 묵은 2개가 있는 아파트 (5 명) 5일. 편안하고 합리적으로 잘 갖추어 져 있는 주방 시설(그릇, 밥솥, 가스레인지). 매우 합리적인 가격들이 간단한 요리를 맛볼 수 있는 가족 여행을 하면 피곤하다 한국 음식.   간단한 아침 식사가 제공되는 몇 가지 메뉴 역상인.   컨시어지는 아주 아름다운 사람은 영어를 잘 하지 못하지만 아주 친절하고 협조적이며 체크인을 할 때도 밤에 약 23:40 사용할 수 있습니다. 이 곳에 작은 공원이 있지만 작은 차가 거리에 가득 차면 해당 수도 있습니다. 리셉션이 24시간 을 사용하고 있었어요.  서귀포에 있는 30분 거리 떨어져 있고 많은 좋은 레스토랑, 쇼핑 센터 등이 있다. 있습니다. 차를 여행 제주 그룹에 있는 경우에 유용합니다.  같이 다니는 사람들에게 이 곳을 강력 추천합니다 아파트호텔 회의 아이씨씨. 또한 적절한 가족 휴가를 더 먹을 수 있지만 주위에 모르겠네요.저는 그냥 이 날 bowoohill 강력히 추천합니다. 좋은 곳에 묵고 싶다면 훌륭한 숙박시설 아닌 제주의 컨퍼런스 센터도 있다. 아침 식사는 제공하여, 그들은 영어를 잘 하지 않지만, 매우 도움이 되었습니다. 심지어 관리를 해야 하는 공항 택시 투어는 4 시간. 환상적인. 객실에 있는 무선 인터넷, 깨끗하고 편안한, 바다 전망을 즐기실 수 있습니다!ICC에서 걸어서 10분 정도 걸리는 위치에 있다. 생긴지 얼마 안되어서 그런지 전체적으로 매우 깨끗하고 쾌적하며 온수도 잘나오고 난방도 잘 됨. 다만 조식은 기대하지 않는 편이 좋을 것 같다.함덕해수욕장 바로 앞에 위치하고 있으며,신축건물은 아니나 개보수로 인하여 방컨디션도 나쁘지 않습니다.제주에서 날씨 좋을 때 빛나는 해수욕장이 함덕과,협재,금능인데 1순위로 칠 만큼 에메랄드 색이 예쁩니다.신관 클린룸과 구관 씨뷰 두군데서 숙박하였는데. 아무래도 신관은 깨끗한 대신 조식이나 굿앤굿스마트를 이용하기가 불편함. 구관 씨뷰는 제일 작은 패밀리룸에서도 바다 뷰가 잘 보이는대신 아무래도 노후된 시설들이 좀  ..  그래도 아름다운 함덕 해변에 가깝다는게 제일 좋은 장점인거 같음.우선 프론트에 계셨던 직원 모두 친절하고 상냥해서 좋았습니다. 원래는 패밀리룸으로 예약하고 갔지만 +오션뷰 +럭셔리룸으로 추가했더니 기존 금액의 오만원 남짓 더 냈지만 후회없었어요. 체크인 시간보다 조금 일찍 갔더니..정리가 아직 안돼 짐만 놓을 수 있도록 얼리체크인해주셨네요^^2박 3일로 스위트 (취사 가능) 에 투숙. 체크인 아웃 직원 친절합니다.  함덕 해수욕장과 매우 가깝고 근처에 갈 만한 곳 많아 좋습니다.  모던 하지는 않지만 깨끗하게 관리되어 있고 사우나는 투숙객에게도 유료 입니다. ㅠㅠ가족여행으로 숙박했고 취사가능한 구관에 묵었다. 함덕해수욕장 뷰를 볼 수 있어 좋았고, 오래되어서 내부시설은 별로 좋지 못하다.업무 출장이라 공항서 가까운 연동사거리라 위치 굿, 신축 건물인듯 깨끗하고 냄새 전혀 나지 않아 쾌적 더블침대+ 싱글 침대 스타일 객실로 넓고 욕실도 넓은, 로비에는 식사 메뉴 있는 카페도 있음.가격은 1박 당 약 55 usd, 직원들은 영어가 갖춰져, 같은 작은 섬이지만 제주도, 허용 범위 및 가격 값이 될 것이다. 침대는 좋았고, 화장실 이 좋은, 하지만. 적절한 크기의 수건들이 나를 포기하지 않았다 해 하지 않았다. 싫든. 도착했을 때, 리셉션에서 아무도, 자고 있는 방에 직원들은 카운터 뒤. 저도 절전 가 겨울이라 생각합니다. 위치는 어디에나 드라이브 음식들은 중요하지 않았다. 그러나 많지 않기 때문에 주변에서 주의 할 점!이 호텔에서 하룻밤을 묵었습니다. 방은 넓고 잘 꾸며져. 이곳은 꽤 깨끗하고 화장실은 제외하고. 제주 시의 중심부에 있는 쇼핑 지역과 가깝습니다. 주차 공간은 다소 제한적. 직원들은 친절하고 전문적 이지만. 있는 곳과 편의점이 근처에 있습니다.동문시장 바로 앞에 있어 시자에서 맛있는 먹거리 사먹고 식사하며 저녁시간을 보낼 수 있는 장점이 있습니다. 호텔은오랫동안 사용한 가구들이 부모님이 어린 나를 데리고 여행할 때 묵었을 법한 분위기를 만들어 줍니다. 오랫동안 정갈하게 잘 사용한 물건 들이 정겹습니다. 오래된 것들에 애저이 있는 분이라면 꼭 한 번 머물러 보시기르 추천합니다. 깨끗하고 직원들이 친절합니다. 1층의 갤러리 옆 쉼터(?)에서 차 한잔 하며 여유를 즐기기에도 좋습니다. 아침식사가 없으나 시장에 가서 아침식사를 할 수 있어 불편하지는 않습니다. 전 트리플룸에 묵었었는데, 가격대비 정말 괜찮았어요. 트윈룸이나 다른 리뷰들에선 좁다거나 시끄럽단 글도 보고 갔었는데 그런건 전혀 없었구요,(뷰가 좋은건 아니었지만 7만원짜리 트리플룸에서 뷰를 따질순 없죠) 겨울이었는데 방도 뜨끈뜨끈하고, 엄청 깔끔하고 좋았어요  단점을 굳이 뽑자면 조식이 없다는 점과 방과 달리 화장실은 춥다는거? 하지만 다른 점들(위치도) 좋았어서 재방문의사도 있습니다더블 침대가있는 객실을 예약했으며 객실이 매우 넓고 침대 / 옷장 공간과 침실 사이에 칸막이가 있음에 놀랐습니다. 방은 매우 청결하며 오래된 건물의 마모 흔적이 보이더라도 잘 유지되었습니다. 그러나, 나는 칸막이가없는 쪽의 모든 방을 통해 연결된 거대한 발코니가있는 3 층 방에 배치되었습니다. 차가운 공기를 들어올 리도록 슬라이더 도어를 열 때 날씨가 완벽했을 텐데, 스크린 도어에 슬라이더 도어를 열지 않고 불편 함과 안전을 느끼지 못했습니다. 아마 관리인 또는 주인이었던 프론트의 여성은 매우 수용하고 있었고, 그들이 여름 동안 단지 통상 작용할 것 인 에어 컨디셔너 통제를 나에게 제공했다. 욕실 욕조에는 샤워 커튼이 없으므로 샤워를 할 때 욕실 절반이 젖었습니다. 그것 이외에 그것은 큰 호텔이었고, 제주의 한가운데에 전략적으로 위치했던 나의 체재를 정말로 즐겼다, 지하의 쇼핑 센터의 출구 1의 뒤에 그리고 Black Pork Street로부터 약간의 단계. 이 지역에는 많은 쇼핑 및 레스토랑이있어 호텔에서 아침 식사를 제공하지 않더라도 선택의 폭이 넓습니다. 또한 호텔에서 몇 걸음 떨어진 곳에 버스 정류장이있어서 도시 루프 투어를 이용할 수 있습니다. 지하철 쇼핑몰이 도시 내의 대부분의 중요한 지역과 연결되어 있지만 시간이 없으니 후회합니다.우리는 공항과 시장과 가까운 곳에서 뭔가를 찾고 있었고 이것이 좋은 선택이었습니다. 그것은 오래된 호텔이지만 잘 관리되고 깨끗하고 훌륭한 직원입니다. 동문 시장은 길 건너편이며 지하 상가 입구는 약 25m입니다. 방은 정말로 따뜻하고 편안하다, 우리를위한 베개는 평평했다. 그러나 여분의 2 점을 받았던 것에 관한 어떤 문제도 없었다. 가까운 곳에 수많은 식당이있다. 스타 벅스가 길을 따라 간다. 어느 날 밤 우리가 저녁을 먹었다. 바다쪽으로 곧장 내려 앉는다. 한국어 바베큐와 서양인들과 함께 준비하는 직원들. 우리는 또한 버스 정류장에서 제주시 관광 버스를 타고, 일일 패스를 사용하여 주변을 둘러 보았습니다. 우리는 제주에서의 숙박과이 호텔에서의 숙박을 즐겼습니다. 시장을 가로 질러가는 사진.좋은 위치. 검은 돼지 거리와 가까운, 동문 마켓도 걸어서, 신문사상대 지하 상가. 방과 욕실은 괜찮았다 저렴한 가격을 고려하면. 그들은 매일 제공되는 무료 광천수를 제공합니다. 우리는 2박을 전통적인 객실에서 묵었는데 즐겁게 묵었다.두번째 방문함. 최근에 리모델링을 한 건지 별관이 지어진 지 얼마 안되는건 지 새 집 같은 인테리어에 구석구석 신경 쓴 흔적.(빨래건조대까지 구비되어 있음 +.+) 가성비 최고. 협재해수욕장과 한림공원이 매우 가까워 위치적으로는 매우 좋으나 난방이 살짝 아쉬웠음. 방은 2개로 나뉘어 있어 좋았으나 내부가 매우 좋거나 그런건 아님. 그냥 가성비 괜찮은 정도..위치가 협재해변 도보 5분 거리에 있어서 위치가 매우 좋구요..  수영장도 있어서 여름에 놀기 딱 좋습니다.  제주도에서 이만한 위치에 이정도 시설을 갖추고도 가격 경쟁력이 있는 숙소는 거의 없을 것 같습니다.  재방문 의사 100%입니다.새벽2시까지 시끄럽고 새벽7시부터 공사시작. 사전에 통보도 없었다. 객실 바닥 청소상태 불량. 맨발로 걸어다니니 무척 불쾌하다.  화장실에 핸드워시에 물을 섞어놓았다.  서비스가 모텔만 못함.체크 인과 체크 아웃도 아주 빠른. 그냥 통과해 예약을 접수 및 증거 를 볼 수 있는 체크 아웃 룸 키를 카운터 이 다 전송할 수 있습니다.   이 호텔은 좋은 전망이 협재 해변이 가까운 곳에 위치. 호텔에서 걸어서 약 3분 정도만 이 협재 해변.두번째 방문함. 최근에 리모델링을 한 건지 별관이 지어진 지 얼마 안되는건 지 새 집 같은 인테리어에 구석구석 신경 쓴 흔적.(빨래건조대까지 구비되어 있음 +.+) 가성비 최고. 협재해수욕장과 한림공원이 매우 가까워 위치적으로는 매우 좋으나 난방이 살짝 아쉬웠음. 방은 2개로 나뉘어 있어 좋았으나 내부가 매우 좋거나 그런건 아님. 그냥 가성비 괜찮은 정도..위치가 협재해변 도보 5분 거리에 있어서 위치가 매우 좋구요..  수영장도 있어서 여름에 놀기 딱 좋습니다.  제주도에서 이만한 위치에 이정도 시설을 갖추고도 가격 경쟁력이 있는 숙소는 거의 없을 것 같습니다.  재방문 의사 100%입니다.새벽2시까지 시끄럽고 새벽7시부터 공사시작. 사전에 통보도 없었다. 객실 바닥 청소상태 불량. 맨발로 걸어다니니 무척 불쾌하다.  화장실에 핸드워시에 물을 섞어놓았다.  서비스가 모텔만 못함.체크 인과 체크 아웃도 아주 빠른. 그냥 통과해 예약을 접수 및 증거 를 볼 수 있는 체크 아웃 룸 키를 카운터 이 다 전송할 수 있습니다.   이 호텔은 좋은 전망이 협재 해변이 가까운 곳에 위치. 호텔에서 걸어서 약 3분 정도만 이 협재 해변.2개 집을 합쳐 놓은 듯 합니다. 위치, 객실 및 수영장 등 시설 모두 훌륭합니다. 다만 일하는 직원 분 수가 충분하지 못합니다. 참소로 중국인 투숙객 분이 내국인 보다 많아 보입니다.신제주 중심지역인 노형오거리에서 차로 5 km 정도 밖에 떨어져 있지 않으면서도 중산간 지역으로 올라가기 때문에 아주 조용하고 경관도 좋습니다. 2017년에 신축된 호텔/리조트입니다. 시설이 매우 깔끔하고 좋네요. 저는 호텔 객실에 투숙했는데, 객실이 일단 좀 넓어요. 좁고 답답한 비니지스 호텔급과는 다릅니다. 욕실은 너무 넓어서 어색할 정도에요. 욕조라도 하나 놔 줬으면 좋았을법 합니다. 생수 2병, 1회용 슬리퍼 2개가 무료 제공됩니다. 1회용 칫솔/치약은 없고 세면용품은 제공됩니다. 침대는 푹신한 느낌이 매우 좋았습니다. 주변에 아무것도 없기 때문에 조용하기는 정말 이루말할데가 없어서 좋았구요.  호텔에서 대부분 비치되어 있는 구둣주걱이나 구두닦이용 천이 없어서 조금 의아했습니다. 그리고 실내 수영장이 너무 작고, 사우나에 샤워시설만 있지 탕이 없어서 아쉬웠습니다.아름다운 리조트 무료 조식 뷔페 우리는 주 건물에서 떨어져있는 별개의 가족 스위트에 머물렀다. 아주 아주 깨끗하고 아주 새로운 조용한 주방, 거실, 분리 된 욕실 및 침실 한 마리의 고양이 만 별도로 주차 할 수 있습니다. 스위트 룸에는 수영장이 없습니다. 2 박 동안 머물렀다 아무도 어느 날 밤에 방을 청소하지 않았다.마치 해외에 있는 기분이 들정도로 여유롭고 새들이 지저귀고 정원의 꽃들도 너무 아름다웠습니다 새소리에 깨보긴 처음이네요ㅋ 객실.스파도 너무 좋구요 인테리어 하나하나 세심하게 신경쓴 흔적이 보입니다 우리나라에서 보기드문 리조트라고 감히 말할수 있겠습니다 조식도 너무훌륭했고 뷰.서비스 모두 모두 좋았어요 관광지면 사람들로북적이고 제대로 쉬는거 같지도않은데 고급스럽고 해외에 온 기분으로 너무좋않습니다 매년 다녀오는 곳이예요 요즘엔 좀 낡은 모습이 곳곳에 보이긴 하지만 아침식사는 꽤 만족스러운 편입니다 스탭들도 매우 친절해요네식구가 머물기에 넓고 인테리어도 무척 이뻐 좋았어요. 다만 전에 비해 부대시설이 축소되서 저녁도 다른곳에 나가 먹어야해서 불편했어요. 수영장에서 아이들은 놀기 좋았지만 그외엔 아무것도 할것이 없어 아쉬웠어요.넓은 실내, 월풀, 2-3분 이내바닷가, 해변은 아니지만 벤치가 있어요. 아침도 맛있었어요. 출장으로 왔는데 나중에 가족과 다시한번 오고 싶네요.더운 여름 멀리 보이는 제주바다와 함께 야외풀에서 가족들과 즐거운 시간을 보냈습니다. 제주의 전통적인 형태와 지중해의 양식을 가져다 놓은 듯한 고급스러움이 지내는 내내 좋았고, 특히 조식으로 제공되는 뷔페는 아이들도 어른인 저와 아내도 무척 좋았습니다.말그대로 전형적인 게스트하우스라 좋았는데. 문제는 방이 너무 추웠어요. 한겨울인데, 이불두개 덥고 잤어도 추워서 계속 잠에서 깨었어요. 가격저렴해서 혼자여행하는사람에게 좋은데. 난방안되고 방음이 약해서 you get what you for pay 네요.처음 들어갔을때 외국인들이 많아 놀랐습니다. 그런데 깨끗하고 친절한 분위기에 금방 적응할 수 있었고... 저녁에 외국에서 온 분들과 맥주도 마시고 이야기도 할 수 있어 좋았습니다. 인상좋은 대표님과 친절한 메이씨, 싱가폴에서 오신 미스터 장... 모두 오랫동안 기억하겠습니다...  ^___^사업 일정상 방문한 제주 여행에서 즐거운 기억을 많이 만들어주신 호스텔 코리아측에 감사드립니다. 저는 이마트 앞에 있는 곳과 시장 앞 쪽 두 군데를 다 자 보았는데 신기하게도 한 분께서 두 군데를 관리하시더군요. ㅎㅎ   첫날은 저녁에 이마트 맞은 편에 갔는데 키크고 건강한 여자분께서 웃으며 반갑게 맞이해주셨습니다. 밤에는 라운지에 불러모아서 맥주도 사 주시고, 유쾌하게 웃어주셔서 같이 여행오신 분들이 모두 좋아했네요.    둘째 날은 아침에 일보고, 낮에 동문시장 쪽을 갔다가 똑같은 호스텔 코리아를 발견하고 "요시!" 들어갔어요. 지점인가 보더라구요. 그런데 이게 왠일. 어제 밤에 반겨주시던 분이 또 거기서 일하고 계시더라구요. 이름이 타샤 인가? 나타샤 인가? 그랬던 것 같은데, 망치를 들고 작업하다가, 환하게 반겨주시던 모습이 아직도 기억에 나네요. 확실히 제주도 여자분들은 뭐든 다 하실듯. ㅎㅎ 친절하시고, 경쾌한 성격의 분신술을 쓰는 직원분께 다시 감사드립니다. ㅋㅋㅋ  여관이나 펜션에 비해 가격도 저렴하고, 훨씬 깨끗한 시설을 이용할 수 있어서 좋았습니다. 공항까지의 거리도 기본요금 정도 나오니, 저에겐 최적의 숙박장소입니다.  호스텔 코리아, 화이팅입니다. 다음에는 여행 일정으로 방문할께요. ^^방도 깨끗하고 청소나 관리도 잘 됐습니다. 다만 화장실 휴지에도 요금이 부과되고 수건을 주지 않는 점은 유의하세요! 그 점만 빼면, 직원들은 아주 친절하고 다정했습니다. 어떤 직원은 아침 식사를 할만한 근사한 식당까지 직접 운전해서 우리를 데려다 주기도 했습니다. 위치도 중심가에 있어서 다음에도 숙박할 생각입니다.6월 중순에 묵었는데, 제가 가본 호스텔 중에 최악이었습니다. 에어컨이 너무 낡아서 시끄러웠기 때문에 밤에 끄지 않고는 잠을 잘 수가 없었죠. (그러면 방이 아주 후텁지근해집니다.) 방충망에는 구멍이 송송 뚫려있고, 또 구멍이 없다고 해도 창문이 꽉 닫히지 않아 모기가 방으로 들어오는 데 아무런 문제가 없습니다. 밤 시간의 절반 정도는 모기를 잡느라 시간을 허비했죠. (15마리 잡는 건 일도 아닙니다.) 그뿐 아니라, 아주 시끄러운 레스토랑(술집?)이 창문 바로 밑에 있는데 새벽 2시까지 영업을 합니다. 아주 끔찍한 밤이죠.  접수처의 직원은 괜찮아 보였고 호스텔 자체는 그렇게 나쁘지는 않습니다. 객실도 널찍하고 욕실도 괜찮았어요. 겨울에는 다시 갈 수도 있을 것 같지만, 여름에는 절대 가지 않을 겁니다.제주시에서 가까운 부띠끄 호텔이에요 모던한 인테리어로 꾸며져 있고 전체적으로 어두운편이지만 고급스럽습니다 자동으로 물내려가는 변기와 강력한 수압이 인상적이었어요가격 대비해서 시설이 깔끔하고 좋습니다 주변에 바다가 가까이 있어서 편합니다 다만 바다가 잘 보이지는 않습니다 무난합니다이 호텔은 꽤 오래되었지만 동남 아시아에 비해 매우 깨끗합니다. 마을의 측면에 자리 잡고 있지만 매우 안전하고 거리의 레스토랑과 편의점이 인접 해 있습니다. 가을에는 매우 바람이 부풀어 오릅니다.시내의 외곽에 위치한 환경. 깨끗하고 만족스러운 서비스와 좋은 객실이었지만 정말, 호텔에서 할 일이 많지 않습니다. 결정하기 전에 활동을 한다고 생각하고. 어쩌면 저는 느낌. 다음에 방문할 것을 시도해 봅니다 다.최근에 오픈한 호텔 입니다. 좋은 가치. 깨끗하고. 좋은 슈퍼마켓 20미터 떨어져 있습니다. 버스 정류장이 가까운 호텔 입니다.  아주 나쁜 디자인 공간 (호텔 이 표준 - 짐을 넣어 준, 안전 금고 및 변경다른 많은 없음). 부주의 한 직원. " 관광지 장소 " 수 없습니다 (하드 먹을 곳을 찾기 위해). 편안한 침대 (매트리스와 베개가 아주 부드러운 커다란) 수 없습니다.만약 그 안에서 힐링하고 많이 돌아다니고 잠만 잘게 아니고 경관도 즐기고 충분한 시간을 보내실거면 너무너무 좋아요!  고양이도 너무 귀엽고 알파카 두마리도 사람 무서워하지만 독특한 경험이었어요  근데 저희는 안타깝게도 잠만 자서... 그 점을 고려한다면 위치가 좋지는 않았어요 ㅠㅠ 만약 진짜 관광하느라 바빠서 잠만 잘 용도라면 도심 안에 머무는게 조아용..  부부주인 분들 다 너무 친절하셨어요! 로그 파크 리조트는 시골에서 주말을 보낼 수있는 환상적인 장소입니다. 로그 파크에 머물기 정말 즐거웠습니다. 지역은 평화로 웠고, 산의 놀랄만한 전망을했다. 그리고 직원은 상당히 친했고 도움이되었다. 이 곳은 지역에 머무르고 그 지역을 돌아 다니고 싶다면 훌륭한 장소입니다. 제주를 여행하며 잠잘 곳이 필요한 경우 추천하지 않습니다.  아이들을 데리고 오면 즐거운 시간을 보내고 야생 동물을 놀 수 있습니다. 우리가 첫번째로 우리 오두막에 체크인하기 위해 끌어 올렸을 때 우리는 2 개의 알파카에 의해 만나게되었다. 로그 파크 (Log Park)와 함께 위치한 작은 애완 동물 농장도 있습니다. 우리는 아침 산책을 위해 일찍 일어나서 농부가 돼지, 사슴, 염소, 닭에게 먹이를주는 것을 지켜 보았다. 아이들은 그것을 좋아할 것입니다.  이 장소를 즐겁게하는 다른 사면도 있습니다. 매일 밤 2200까지 캠프 파이어가 있습니다. BBQ를 원하면 소유자가 사용할 수있는 장비가 있습니다. 그들은 구매를 위해 메인 통나무 집에서 음식, 물, 맥주를 구입할 수 있습니다.  좋은 장소. 나는 주말 동안 친구 그룹과 여기에 오기를 원합니다.Gps를 호텔 찾기 어렵지 않습니다. 이곳은 한라산은 자연이 만든 국립 공원이 근처에 계획을 가는 사람들에게 좋은 선택이 될 것 또는 돌아왔습니다. 집은 새롭고 깨끗합니다. 있다 있는 요리할 수 있는 작은 주방. 6때 가격대비 하우스. It 제주에서 꼭 묵을 합니다! 전용 교통을 가진 여행객에게 적합합니다.우선 가격대비 좋았습니다. 복층을 사용하였는데 2층에는 더블침대하나, 싱글침대 하나가 있었구요. 1층에는 더블침대 하나 있었습니다. 매일매일 조금씩 청소해주시고, 수건도 새걸로 갈아주십니다. 다만 아쉬웠던점은 화장실이였습니다. 실리콘에 물때가 좀 있었고, 수압도 아침에 매우 약했습니다(다른시간에는 괜찮았음). 어두울때 길 들어가기 매우 어두우니 조심해서 들어가세요. 그거 외에는 친구랑 묶기 최고의 장소였습니다.(말 그대로) 할 수 있는 이 곳은 신선한 공기. 우리는 당나귀들, braying, 본 꿩 의 잔디밭, 산책을 즐깁니다. 자기 수용할 수 있는 주방은, 일행을 이용하여 근처에 편의점은 없었다. 난방 시설도 있고, 나오지 않는 차는 있지만. 자신의 교통 수단에 있을 때 필요 바랍니다.바오젠거리 바로 가까이 있기 때문에 식사하러 다니기도 편하고 쇼핑하기 매우 좋았어요. 예전에는 시내에서 좀 먼 호텔에 투숙했더니 꼭 차를 가지고 식사를 해야만해서 음주운전의 부담이 항상 있었거든요.제주신시가지에 위치에 있으며, 공항하고도 택시로 10여분안의 거리에 있음. 접근성의 좋음과 주위의 인프라가 잘 되어 있어 이곳에만 가도 걱정 할 것이 없음 숙소시설 또한 위생적이며, 편안한 시설이 되어 있어 적극추천함~바오젠거리에 위치해있고, 공항에서는 택시타고 올 수 있는 거리입니다. 반대로 호텔 나와서 큰 길 건너 신라스테이 앞에서 버스타면 공항까지 금방 갑니다. 일반 스탠다드 룸 이용했는데 방이 엄청 넓습니다. 청소 해주시는 분도 친절하게 인사해주셔서 기분 좋았습니다. 다만 리셉션 직원분들은 좀 더 친절해야할 것 같습니다. 너무 무관심한 태도에 기분이 좋지는 않았습니다.공항에서 택시타고 올 수 있는 부담없는 거리에 위치해있어 좋습니다. 더블베드와 싱글베드가 같이 있는 트윈룸을 이용했는데 생각보다 훨씬 넓어서 여러명이 투숙하는데 전혀 불편함 없었습니다.   다음에도 저녁비행으로 제주도에 늦게 도착하면 다시 이용할 생각이 들 정도로 굉장히 만족하고 돌아갑니다.저희는 이곳에 3박 4일 동안 묵었었어요. 위치는 정말로 끝내주고 저희는 공항까지 오고 가는 픽업 서비스에 각각 대략 4,000원 정도를 냈습니다. 로비의 안내 데스크는 체크인과 체크아웃을 위한 곳이에요. 그런데 이상하게도, 그들은 체크인 때 저희의 여권을 요구하지 않았고 Agoda 확인 용지만 요구했었어요. 체크인은 신속하게 진행됐습니다. 또한, 저희가 빨리 도착하기도 했고 이곳에 손님이 별로 없어서 저희는 본래 체크인 시간인 오후 12시 전에 방에 들어갈 수 있도록 허락받았어요. 와이파이 신호가 로비에서만 잡혔지만, 방에 무선 인터넷이 깔린 컴퓨터가 있었습니다. 로비의 안내 데스크는 저희의 여행 일정에 맞춰 택시 투어 서비스를 제공해줬어요. 중국말을 할 수 있는 운전기사는 130,000원이었고 영어를 할 수 있는 운전기사는 150,000원이었어요.   방은 아주 컸었고 벽에 걸린 텔레비전의 크기 또한 엄청나게 컸어요. 방을 뛰어다닐 수 있을 정도로 많은 공간이 있었지만, 옷장은 너무 작았고 옷걸이도 몇 개 없었어요. 소파는 오직 두 사람만 앉을 수 있었고 방의 크기와는 전혀 맞지 않을 정도로 너무 작았어요. 각 방에 미네랄 워터와 주스가 배치 돼 있었습니다.   이 호텔의 위치는 아주 좋아요, 왜냐하면 카페, 선술집, 식당, 편의점, 옷 가게와 화장품 가게가 모두 가까이 있기 때문이지요.조용한 지역에있는 작은 게스트 하우스. 공항, 버스 터미널 및 도심에 적당한 곳에 있습니다. 넓고 편안하고 합리적인 아침 식사를 제공하는 객실. 장소는 3 일간 머물러야 만했던 것과 같았습니다.La casa cuesta un poco encontrarla pero el mismo dueño te envía su ubicación por whatapp. Habitaciones amplias con baño y todo muy limpio. El desayuno lo haces tú mismo con los elementos que te ponen a tu disposición. Hay huevos , tostadas, mermeladas , ensaladas y zumo. El propietario es muy atento y el sitio es confortable우리 체재를 여기에서 즐겼다. 게스트 하우스는 조용하고 깨끗하며 한국인에게는 편안한 침대가 있습니다. 공항과 가깝고 버스 정류장에서 2 정거장 떨어져 있습니다. 아침 식사는 훌륭하고 일찍 가능합니다. 트레킹이 너무 많아서 좋습니다! 주인은 또한 공항에서 영빈관에 도착하는 모든 방법에 대한 세부 정보를주었습니다. 여기에는 한국의 택시 기사가 포함되어 있습니다.shinjeju, 프로에 위치 : 공항, 쇼핑 \u200b\u200b장소 및 레스토랑 (바오 첸 스트리트)과 제주 버스 터미널, 친절하고 영어로 말할 수있는 직원 (공항에서 아침에 택시를 찾는데 도움이되는 곳), 클린 룸, 직원들이 매일 방을 청소합니다. 아침 식사는 괜찮 았습니다. 단점 : 버스 터미널까지 직진하는 버스 경로가 없습니다.Fantastic location, decent sized rooms, clean, excellent wi-fi, friendly English speaking staff. Just a delight to stay in. Would return easily to this extremely impressive budget hotel. I have to say that for less than half the price, Major Hotel 2 was better than a 4 star property we stayed in in Seoul. Much better.Das Hotel ist ziemlich neu und gepflegt, das Personal ist sehr freundlich und hilfsbereit. Die Zimmer sind sehr sauber und mit allem was man so braucht ausgestattet. Das Hotel liegt in der Nähe von der Fußgänger Zonen, wo genug Bars, Restaurants und verschiedene kleine und große Läden sich befinden. 저는 호텔에서 2일 밤을 가족과 함께.  위치도 좋고, 근처에 있는 명소들 (거리, 2 분).  새 호텔, 좋은 매우 편안했어요.  친절한 직원들의 멋진 여행을.제주도의 중간에 위치해 접근성이 좋을 것으로 예상하여 예약했다. 한라산을 가는 것이 아니라면 굳이 한라산근처에 숙소를 정할 필요는 없을 것같다. 고층을 원했으나 공실이 없어 배정 받지 못했다 숙소는 일반적인 아파트의 구조와 비슷하다. 밤 늦은 시간에 바늘이 필요한 일이 있어서 요청했으나 없다고 한다. 호텔에서는 바늘을 요청하면 주기도 하는데 아쉽다. 이외에 불편한 점은 없었고 부대시설이 많아 편리하다.친절해요. 방 2개 거실 신청했는데..  체크인 때 욕조가 있다고 해서 방1개 거실+ 욕조로 바꿨어요 아기랑 지내기는 좋아요.  주변에 암것도 암것도 없어요. 골프 하는거 아니면... .ㅜㅜ 조식도 별로에요. 일단 관리가 잘되서 깨끗한 느낌이 듭니다. 위치는 설악산 쪽이라 이 쪽에 관광하신 분들에겐 최적의 리조트이지만 아니신 분들은 이동시간이 오래 걸리니 미리 확인 하세요.  아침 조식은 좋았고 산책로가 있어서 여유롭게 쉬기 좋습니다.창문도크고 발코니가있어서 편하더라구요. 화장실도깨끗하고 수압도 쎄고 좋았습니다. 아침에 산책로가있는데 좋더라구요! 조식은아주크진않지만 좋았어요! 저녁디너도 한번먹었는데 가격은비싸지만 반찬도 간이세지않고 좋더라구요! 안에는 편의점도있고 스파도있고 동끼리 연결되는 통로가있어서 편했어요!시설은 오래되었지만 아침에 산책로가 너무 좋아서 마음에 듭니다. 가족들과 같이 가기에 좋은 것 같습니다.제주도 출장차 방문했습니다. 일단 로비는 특급호텔 못지않은 깔끔함에 놀랐네요.공용 pc가있어 업무에 도움이 되었구요, 제주 관광책자도 많이 비치되어 있어서 커피한잔 하면서 정보를 많이 얻었네요. 객실은 필요한것들은 다 비치되어있구요, 침구류 가구 깔끔했습니다.더블침대와 함께 싱글침대도 있어서 두명이서 여유롭게 지내다가 왔습니다. 다음날 아침에 식사도 괜찮았어요. 공항으로 가는길도 가깝고 한 15분정도 걸리네요. 전체적으로 5만원대 가격으로 이정도 시설, 서비스면 대 만족합니다.room : 깨끗하고 넓으며 2 인용으로 충분합니다. 그러나 두 침대가 더블 침대이고 더블과 싱글 침대가 아닌 경우 더 좋습니다. location : 전략적 위치, 편의점 근처, 커피 숍 편의 시설 : 깨끗하고 괜찮은 욕실. 채식 및 해산물 옵션이 포함 된 무료 일일 아침 식사. 수프를 아주 좋아합니다. 그리고 coz, 김치. 김치를 놓치지 않았다. 손님 용 주차장이 있습니다.  가능한 경우 : 다리미를 제공하십시오.우리는이 호텔에 6 박 이상 머물 렀으며 서비스는 1 일부터 끔찍했습니다. 우리는 도착했고 주인이 거기에있었습니다. 우리는 12시에 호텔에 도착했습니다. 00. 청소 때문에 오후 3시에 방이 준비 될 것이라고 들었습니다.  우리는 매우 피곤해서 일찍 체크인을 요청했고, 그 방은 마술처럼 20000 원에 이용할 수있게되었습니다. 청소 때문에 사용할 수 없었습니까? ? 현금이 없었기 때문에 나중에 지불하도록 요청했습니다.  \xa02 일째, 호텔을 떠났을 때, 우리는 멋진 "PAY NOW"로 환영 받았다. 안녕하세요, 좋은 아침, 제발, 좋은 무례한 PAY NOW. . . . 고객을 더 잘 돌봐야합니다. 인보이스를 요청한 후 나중에 수령하라는 지시를 받았습니다. 그는 5 일 후에 우리에게 그것을 주었고, 우리는 리셉션에서 10 분을 기다리게했다. (그들은 준비하는데 5 일이 걸렸다!)  비가 많이 올 때 우리는 우산을 요청했고 그는 임대료로 10000 원을 요구했습니다. . . . . 실례합니다. 새로운 것이 8000입니다!  리셉션에서 종이컵을 원한다면 지불해야하며 무료는 없습니다.  호텔을 떠날 때 그들은“bye”라고만 말했다. 다시 한 번, 400 달러를 거의 지출 한 후에는 냉담한 "안녕"이라고 감사합니다.  나는 멋지려고 노력했지만 분명히 효과가 없었습니다. 우리가 한국에서 일반적으로했던 것처럼 끔찍한 봉사는 거기에서 돈을 쓰지 않습니다.나는 제주에서의 나의 지난 밤 동안 공항 근처에서 가장 적당하고보기 흉하지 않은 호텔 이었기 때문에 여기에 머물렀다.  방 : 저는 우리 셋이 트윈 룸을 예약했습니다. 더블 침대 1 개와 싱글 침대 1 개로 구성되어 있습니다. 객실과 욕실은 깨끗하고 편안하며 매우 넓습니다. 그들은 모든 세면 용품 (치약, 샤워 젤, 샴푸, 수건 등)을 제공 했으므로 걱정할 필요가 없습니다. 그리고 그들은 미니 냉장고와 주전자를 가지고 있습니다.  주차 : 호텔 앞과 지하에 주차가 제공됩니다 (실수하지 않은 경우).  근처 : 호텔은 주요 도로 인근에 있습니다 (도보 1 분). 따라서 택시가 필요하면 문제 없습니다. 또한 호텔 근처에 버스 정류장이 있습니다. 공항까지는 택시로 7 - 10 분이 소요됩니다. 인근에있는 편리한 상점.  제주 공항 인근의 호텔을 찾으시는 분들에게 추천합니다.여기에서 두 번 머물 렀습니다. 처음에는 제주에서 만났을 때 (싱가포르에서 두 번 비행 한 후) 택시로 5 - 7 분, 5, 200 krw로 매우 저렴했습니다. 그러나 호텔의 주소를 한국어로 표시해야하며 운전 기사는 GPS의 호텔 주소를 입력해야합니다. 그렇지 않으면 Hotel Ellui를 찾기가 어렵습니다. 두 번째 머물은 우리가 서울에서 아침 출발하기 전날 밤이었습니다.  두 번 모두 트윈 룸에는 더블 침대와 싱글 침대가 있습니다 (602, 603 호). 방은 새롭고, 좋은 크기이며, 모기장이있는 이중창 또는 3 중 유리창, 샤워기가있는 욕실 만 있습니다. 주전자가 있고, 칫솔 / 치약이 없어도 안전하고, 커피 / 차는 없습니다 (일본 호텔과는 달리).  침대는 열심히 tad이었다. 그러나 나를 위해 다행히도, 우리는 2 개의 트윈 방에서 3의 그룹이었다. 그래서 예비 침대의 위안자를 사용하여 침대 위에 눕히고 나에게는 훨씬 부드럽습니다. 그리고 우리 모두는 위대한 창문으로 너무 조용하기 때문에 여기에서 꽤 잘 잤습니다.  포함되었던 자유로운 아침 식사는 대부분 단순한 한국 스타일이었다. 그러나 우리가 지불했던 가격을 위해, 불평하는 아무것도 정말로, 정말로. 제주 서귀포의 다음 호텔 인 데이즈 호텔은 더 비쌌지만 아침 식사는 낮에 포함되지 않았습니다! 매일 요리에 약간의 변화가있었습니다.  호텔의 위치는 좋은 편이며 많은 레스토랑과 인근에 2 개 이상의 슈퍼마켓이 있습니다. 인터 시티 버스 인터체인지는이 호텔에서 매우 도보 가능합니다. 그러나 서문 시장과 동문 시장은 버스로 짧은장점 : 공항과 가깝다  단점 : 청소를 안한다. 한겨울인데 모기가 방에 20마리정도 있었다. 잡아도 계속 나와서 잠을 잘 수가 없었다. 벽에는 모기를 잡은 흔적들이 많다. 침대 베게에서 냄새가 난다.제주 2박3일 여행 중 하루는 중문, 하루는 오렌지트리에서 숙박했는데요  가격이 저렴한거에 비해 시설은 그럭저럭 괜찮았는데 .. 주변 소음이 좀 심했어요 제가 묵었던 그 날만 그랬던건지는 알 수 없지만요 쉬러 간 휴식처에서 잠을 편히 못잔거 같아 여행끝이 불편했습니다 ㅠ ㅠ우리는이 호텔에서 3 박을 묵었습니다. 호텔은 좋은 위치에 있지만 더 좋은 점은 없습니다. 침대는 매우 단단했고 베개는 작고 단단했습니다. 방은 나이가 들었고 약간 거칠지 만 나이가 들었습니다. 우리 화장실은 기능적이었다. 그리고 아침 식사는 적당했지만 최소한이었다. 의 사무실은 대부분 압력, 청소, 쿼리에 응답 및 예약 안팎에서 압력을 받고 있었다. 서두르지 않지만 우리가 있다면 위치는 매력이 될 것입니다.제주도를 여행하면서 나는 하룻밤 머물렀다. 이 호텔은 예하 투어를 통해 예약 한 패키지의 일부였습니다. 내가 나의 첫날 여행 후 체크인하는 것에 도착했을 때 내가 예하 투어에서 구입했던 꾸러미에서 벌써 지불 받았지만 응접에서의 사람은 나에게 지불하게하려고 노력하고 있었다. 어쨌든, 그것은 빨리 분류되었습니다. 그 남자는 그가 거기 새로 왔다고 그래서 나는 그에게 휴식을 줄 것이다. 이 호텔은 구시가의 훌륭한 위치에 있습니다. 옛 도심에있는 동문 시장과 지하 쇼핑몰은 단 몇 분 거리에 있습니다. 호텔은 나이가 들었지만 기본이지만 조용하고 깨끗합니다. 침대는 매우 단단했습니다. 방은 약간의 연기 냄새가 있었지만 나쁘지 않았습니다. 전반적으로이 장소는 예산에있는 사람들을 위해 짧은 체류를 위해 좋았습니다.제주시 역사적인 구시가지 아늑한 곳입니다. 할 수 있습니다 모든(편의점, 레스토랑, 카페, 술집, 쇼핑, 교회, 박물관 등). 대부분 거리 잘 작동되었어요 걸어서 갈 내에서 길에서 바로 걸어나와서 또는 호텔 리셉션 한 전화를 필요한 경우 풍부하다. 객실은 에어컨/난방, 시설이 깨끗한 욕실이 있습니다. 물 히터 사용할 수 있습니다. 무료 아침식사는 간단해요. 커피 커피숍이 판매를 위한. 짐을 유물들은 또한 무료로 사용할 수 있습니다. 15분 차로. 편안한 침대와 깨끗한 침구, 침구류. 나는 다음에 묵을 곳이 이 아름다운 섬을 다시 방문할 기회가 필요한 경우 다시 묵을 것이다.싸고 좋은. . . 표준 트윈에서 표준 트리플로 업그레이드되었습니다. . . 큰 방과 욕실. . . . 매우 빠른 와이파이 연결. 쇼핑 거리 근처에, 내가 가까이에 말했을 때, 말 그대로 근처에. 한 블록 떨어진 곳. 나는 위치가 우리에게 매우 편리하다고 기대하지 않았다. 그래서 나는 매우 행복하다. Tho, 그것은 무료 아침 식사가 없다, 당신은 coz 편의점, resto, 카페가 구석을 돌면 서 걱정할 필요가 없습니다. 그들은 당신의 당일 치기 여행을위한 교통편을 제공합니다. 투어 택시 요금은 하루 140,000 원입니다.  전반적인 경험은 매우 좋습니다. 매일 좋은 밤을 잘 수있었습니다.장점: 넓은 객실과 욕실, (버스 정류장 근처에 있는) 좋은 위치, 조용한 호텔, 저렴한 가격, 빠른 무료 무선 인터넷 단점: 큰 수건도 레스토랑,/ 카페가 없고, 호텔 직원들은 영어를 잘 구사하지, 하우스 키핑 있지 않으며 기본 (요청해야 합니다)갑작스런 출장으로 인하여 급하게 알아보게 되었는데 직원분께서 친절하게 안내해 주셔서 감사했어요 같이간 직원들도 맘에 들어 하더군요 낮에는 일때문에 정신없었지만 저녁에는 푹쉬고 휴가 온 기분으로 잼나게 놀다가요 담에는 가족들이랑 같이 오는걸로ㅋㅋ원하는숙소 예약안되 걱정했는데 내부시설보고 결정 가격도저렴하고 부대시설도 저렴하고 협재해변이 가까워서 나름괜찮아서 다음에 와이프랑 다시오기로~~~협제해변인근에 부동산 문제로 제주에 갑자기 가게되었다. 혼자이고 조용히 하루 보내고 싶어 우연히 찾았던 더제주리조트 성수기가 아직 아니라 그런지 정상요금이 아닌듯 저렴했다. 건물은 지어진지 좀 되어 보였으나 올라가보니 조명도, 복도에 들어서는 느낌도 깔끔했다. 해변에서의 거리는 차로 약 5분이 안걸리는 정도, 뒷마당에는 수영장도 보인다. 잔디밭에 잠시 누워서 하늘을 보고 있던 시간이 내겐 참 좋았다. 여름이 본격적으로 시작되면 사람들이 많아 이렇게 조용히 쉴 수는 없었겠지? 온수도 잘나오고 가격대비 이렇게 편한곳은 없겠다 싶다. 뭐, 다른곳을 다 가보진 않았지만, 아주 만족스러웠다. 5성급 고급호텔을 찾는게 아니라면 조용히 쉬고 싶을 때 가족과 함께 와도 좋겠다. 펜션 혹은 콘도 급의 큰방도 있다고 하니 가족단위도 가능한 실속만점의 숙소였다.There\'s a bug inside the room. :( 바퀴벌레 3마리 나왔어요.. 낮에 물놀이 하고 갔을땐 없었는데 밤에 11시쯤되니까 발코니에 2마리가 있더라구요. 그래서 문 다 닫고 방안에는 없나 살펴보니 1마리가 나왔어요..ㅡㅡ 그래서 컵같은거로 엎어두고 간신히 잤고요.  아침일찍 체크아웃했는데 카운터에계신분께 말하니 한달에 2번 방역하고 주변에 산이 많아 그렇대요. 한적하고 조용한 호텔을 원했지만 바퀴와 함께했어요..  바퀴와 함께 자고싶으신분들 추천!한림에서 다소 외곽에 위치 하고 있지만   한적한 제주의 정취를 느끼시고 싶다면  베니키아 더 제주를 추천해드리고 싶네요  친철한 데스크 직원들이 있구요  조경이 무척 잘되 있어요  비지니스 단체 여행을 원하시면  대형 세미나실과 체력단련실 그리고 수영장등의  부대 시설이 잘되 있어 편안한 시간을 보낼수 있을듯 싶네요  주의 사항 흡연자 분들은 구내 매점에서 담배를 판매 하지 않으니  꼭 구매후 체크인 하시길.....^^:한림에 위치도 좋고 깨끗하고 좋았어요. 다 좋았는데 특히 샴푸 바디워시랑 드라이기가 호텔드라이기 치고 쎄서 좋았습니다.좋은 숙소 예약해서 여행하는 내내 너무 기분 좋았습니다. 가격이 저렴해서 기대 하나도 안하고갔는데 너무 깨끗하고 바닷가랑도 가까웠어요. 뷰도 너무 좋고 노을지는건 정말 좋았어요. 직원분들도 너무 친절하시고 좋았습니다. 감사합니다.신축이라 깨끗한 건물과  객실이 너무 마음에 들었습니다. 5층이라 바다도 잘 보이고 전망도 좋았어요. 저렴한 가격에 너무 좋은 숙소였어요.주인 분이 매우매우 친절하시다.. 버스 잔돈이 없어 걱정했는데 그런 문제까지 해결해주시려고 도와주셨고.. 룸컨디션도 매우 깨끗했으며 방이 온돌이라서 뜨근뜨근 잘 있을 수 잇었다. 뷰도 훌륭해서 제주도의 진풍경을 느낄 수 있었다. 매우 만족!최근 리모델링을 한건지 건물이 새로지어졌는지 굉장히 깨끗했어요. 조식도 5천원뿐이 안하는가격에 가볍게 먹을수 있어 괜찮았습니다. 사장님도 너무 친절하시고 이것저것 많이 도와주셔서 너무 감사했습니다. 다음에도 방만 있다면 이쪽으로 이용할 예정입니다.애월 바다 바로 앞에 있는 오션뷰 숙소를 예약하고 싶어서 찾아보다가 괜찮아보여서 예약하고 다녀왔는데 위치도 좋고 바다가 보이는 루프탑 풀빌라 따뜻한 온수풀 역시 너무 맘에 들었어요~!!이번 제주 여행에서 숙소를 고르는데 뷰를 제일 우선적으로 따져서 예약하고 다녀 왔습니다~ 뷰도 만족하고 스파도 따뜻하게 하고 와서 좋았어요~청결하고 깨끗해서 좋았어요. 내부 인테리어가 예쁘고 내집처럼 편안하고 안락한 분위기였고 바다가 보이는 따뜻한 온수풀 최고입니다.애월 바다 바로 앞에 있어서 위치가 좋고 전망도 굳ㅎㅎㅎ  바다가 보이는 스파 스위트 따뜻한 온수풀 너무 좋았던 호텔~♡ 완벽해요!!완전 럭셔리한 호텔입니다!ㅎㅎ제주에도 워낙 숙박시설이 많아 고민을 하던 참에 지인통해서 숙박했습니다~ 깔끔하니 럭셔리한게 저한테는 만족했어요!^^차 없이도 올 수 있는 바닷가 앞 호텔이에요. 주변에 아침 운동 하기도 좋구요. 호텔 앞에 카페도 많아서 멀리 가지 않고 호텔 주변에서 할 수 있는게 많았어요.  밥도 맛있고 객실도 편안해서 다시 와서 쉬고 싶어요. 직원분들도 친절하고 호텔 내 특산품 매장 사장님 특히 넘 좋아요. 꼭 가보세요.단체관광객이 많은 곳입니다. 아침에도 시끄럽고 밤에도 시끄러웠어요. 리조트형이라 소음이 다 울립니다. 방의 청결상태는 좋지 않았습니다. 깔끔한 호텔을 원하시는 분은 다른 곳이 좋겠습니다.시설은 조금 오래됐지만 도로에서 떨어져 있어 조용하고 따뜻하고 편안한 호텔이었습니다. 직원도 친절하고요. 새 시설을 원하신분은 다른 호텔을 이용하시고 조용하고  편안한 호텔을 원하신다면 이 호텔도  좋은것 같습니다.9박 10일의 제주 올래와  오름투어 일정중 5박을 하였다.  대중교통이용시 10분정도의 거리에 위치하여  조금먼듯하였으나, 올래 16코스에 위치하여  렌트를 하지않코도 대중교통이용으로 올래길 탐방을 할수있어 좋았고, 2인 올래 게스트 하우스 이용시 보다 저렴했으며 모든면에서 가격대비 괜찬았다.깔끔하고 가격대비 좋습니다. 관광지랑 접근성 좋구요 단지 주차장만 좁아요 참. 직원분들이 너무친절합니다. 잘 쉬다갑니다~^^지은지 좀 되었지만 저렴한 가격에 깨끗하고 모텔급보다 시설에 거부감이 없어 가족과 함께 하기 좋다.  공항에서 랜트카나 택시로 10분정도며  주변에 편의점 및 맛집들도 꽤 많아  여행을 시작하기에 좋은 장소 이다.  모든 객실이 오션뷰이며 작지만 아늑한 맛이 있다.  주차시설에는 자리가 많진 않지만  건물 뒷편에 주차시설이 있으며 호텔내  편의시설로는 맛사지 에스테틱과 사우나가 있다.  여행의 피로를 사우나로 푸는것도 좋은 방법이겠다.   꼭 들려서 숙박해야할 특별한 특색은 없었지만 괜찮은 가격과 깨끗한 시설이 장점이겠다. 출장으로 왔는데, 건물외관과 복도 카페트등은 낡았지만 방 시설은 나쁘지 않습니다. 가격도 많이 비싸진 않고요. 주변에 편의점이나 빵집등이 있고, 해안도로 산책할 수 있어서 괜찮습니다.위치는 호텔에서 10-15분 걸리는 위치라 좋음. 주위환경도 반대편에 이마트있고, 카페 식당 다있어서 좋음 다만 룸컨디션이 낡았으며, 잠자는 윗방 화장실 물내려가는 소리가 계속 들려서 숙면을 취할수 없었다. 가격은 저렴하여 만족하였음...한국식 온돌 바닥이 있는 방에서 자 보니 이 객실이 정말 좋더라고요. 이 곳에서 기분좋게, 깨끗하게, 안락하게 그리고 편안하게 머물렀어요. 카지노가 아주 가까이 있어요 - 굉장히 많은 가게가 있는 길을 따라 10분 정도 걸어가면 돼요. 위치가 아주 좋은 점이 많은 곳이예요.우리는 이 호텔이서 이틀밤을 있었는데 우리 단체 관광에서 짜준 대로 였다. 하지만 위치나 가격에서 보면 추천하지 않을 것이다.  말했듯이 대부분 잘 돌아갔다. 또 TA 유저들이 말했 듯이, 아시아를 기준으로도 작은 방에, 화장실도 제대로 갖춰지지 않았다. (어떤 사람은 방에 화장실이 있는 것을 선호 할 듯), 방이나 복도에 뜨거운 물도 없었고, 방에 있는 히터는 그럭저럭 괜찮았고 잠도 그런대로 잘 잘 수 있었다.  여기에 한 사람이 \'끔찍함, 최악의 호텔\' 이라고 했는데 그 말은 이 호텔을 제대로 설명해 주지 못한다. 그 사람은 침대에 이가 있었던 것 같은데 우리는 그런 것은 없었다.바로 앞(1분거리) 버스정류장이 있고 함덕과 김녕해변으로 뚜벅이 여행자, 렌트카 여행자 모두에게 편리한 곳! 친구들과 함께 여행하며 조용히 여유롭게 지낼 수도, 즐겁게 담소를 나누기에도 적합한 곳이었어요:) 인도풍 인테리어와 사장님이 매일 청소해주시는 덕분에 깨끗한 상태를 유지한 곳입니다! 돌담지나서 예쁜 제주집 한채. 정성들인 집안과 방안. 그리고 마당까지. 음악과 좋은 향으로 포근하게 맞이해주는 따뜻한 공간이였어요. 소란스런 월정리와 함덕사이에 자리잡은 동복리인지라 더 평화롭고 아름다운곳이였어요.  아침식사도 맛있었어요. 따뜻한 봄날에 다시 가고싶어요. 너무너무좋았어요 엄청 반갑게ㅡ맞아주는 부부들 너무 기분좋았구요 시설또한 새롭게 리모델링한 내부에 따뜻하게 잘지내다 갑니당 🌲인도스타일 인테리어도 너무 맘에 들었구요 그리고 마스코트 윈디도 너무 기여웠어요 다시다시 또올려구여 고마웠어요 샨티샨티 💋💋마지막여행밤이라게스트하우스에오래있지못했지만 시골집에 온듯한포근함과 편안함으로 하루를 보냈음숙소를 예약하지 않아 우연히 묵게된 곳인데 제가 사전에 검색해서 간 다른 숙소들보다 훨씬 좋았어요! 다만 네이버 같은 검색 엔진에 잘 나오지 않아 찾기 어려웠을 뿐 ㅜㅜ 밤늦게 가서 그 동네를 살펴보지 못한 것이 아쉬웠지만 게스트하우스의 전체적인 따뜻한 분위기, 그 분위기를 만드신 사장님의 미소, 깔끔한 시설, 조명, 향내음 모든 것이 좋았습니다! 제가 지냈던 7일을 제주 중 가장 편안한 밤이였어요. 조식으로 상큼한 샐러드와 따뜻한 삶은 계란까지.. 강력 추천입니당 ^_^ 저도 음주가무를 좋아하지만 진정한 힐링은 술이 아니라 숙면을 취하게 해주는 분위기에서 온다는 것을..!바다 바로앞이라 좋아요. 호텔 뒷쪽길에는 식당, 3개의 마트,까페.펍등이 많아서 저녁에도 산책하고 즐길거리가 많아요. 올리브영  매장도 있어요. 맘스터치,7번가피자,생돈까스 등 배달가능한 음식점들도 많아서 편합니다. 바다앞 잔디밭에서 저녁산책하기도 정말좋아요. 2번째 방문인데 건의사항이 있다면,  객실 전등을 형광등색으로 밝게 했으면 좋겠어요. 스탠드가 3개있는데 전구색  불빛이라 다소 어둡게 느껴져요. 함덕해수욕장이 바로 앞이라 아이들 놀기 정말좋아요. 다시 방문할 의사가 있습니다.  근처에는 현재는 공사중인 닭머르 해안길,스위스마을,돌문화박물관,산굼부리,에코랜드 등이 있고 세화쪽의 해녀박물관도 있어요. 호텔뒷쪽으로 합리적가격대의 식당이  많습니다.굳이 맛집 써치안하고 가셔도 되요. 주택가사이에 덕림사 라는 사찰이 있어서 아주 흥미로웠어요.오션뷰 방을 예약하신다면 만족스러운 뷰를 얻을 수 있습니다. 직원들은 모두 친절하고 청결도도 나쁘지 않았지만, 기기가 좀 연식이 되서 그런지 에어콘에서 소리가 많이 나서 자다 많이 깼네요.가족들과 함께 방문했습니다. 4인이 같이 묶을 방이 없어서 2인 씩 나눠서 묶었습니다. 객실은 유럽식 설계인 것 같은데, 옛날 건물이 되서 그런지 시설이 전반적으로 낡았고, 유럽식 설계가 오히려 불편하게 다가왔습니다. 호텔 위치가 제주시에서 꽤 가야 하는 점이 안좋았지만, 객식 경치가 좋았고 근처 바닷가 접근성이 좋았습니다.오션뷰로 가장 좋은 최적의 호텔입니다. 바로 앞이 함덕해수욕장입니다. 요즘 유명한 델문도 카페도 바로 오분거리에 있습니다.함덕 해수욕장에 위치한 곳으로 좀 오래되었지만 가성비 좋고, 비치 뷰가 좋은 호텔이에요. 밤에는 어선의 불빛도 보이고 멋져요.우리는 8시에 다음날 타야 할 비행기가 이 호텔을 예약했습니다. 이 호텔은 제주 국제 공항에서 10분 거리입니다.  체크인할 때, 영어로 이야기를 나눌 수 있었고, 공손했습니다. 그는 그래서 우리가 샤워 우리에게 드라이브를 Jimjjilbang 일할 온수기 좋았음. 한국에 처음, Jimjjilbang 없었습니다. 우리에게는 눈이 뜨이며, 우리는 열린 마음으로 가서.  방은 크고 전망도 좋았습니다. 1층에 있는 스타벅스 보너스입니다.저와 제 가족 단위의 한 가운데에서 하룻밤을 머무르지 suite b 3rd 수준기. 우리 방은 (301) 의 바로 위에 있는 \'호텔 화이트 하우스\' 표지판 앞에서.  호텔 위치: 이 호텔에 도착, 키 코드 gps 7123200. 기본적으로, 이 호텔을 선택하기 때문에  (1) 약 10분 \' 드라이브를 제주공항 (시에 출발 했는데 다음 날 아침에 10am), (2) 위의 스타벅스가 우리의 아침식사와 스낵이 처리되어 있어 (3) 또한 많은 레스토랑과 식당을 함께 할 수 있는 서해안 - 댐핑할 호텔이 위치한 곳이 오른쪽에 있습니다. (4) 이 곳에서 3.5 km 용두암 록 명소 (호텔에서 오른쪽으로) (5) 할 수 있는 유일한 비치 호텔 앞에 검은 바위 (6) 주차는 무료로 제공합니다. 같이 주차장, 드라이브에 입장 하지 마십시오; 대신 길을 호텔 뒤쪽에 있는 (고객만 해당). 그 후, 짐을 가지고 엘리베이터 로비와 통로로 엘리베이터를 타고 2층 체크인 카운터는 어디에. 예, 2nd 수준에 있기 때문에 스타벅스가 있는 로비는 1st 수준기.   호텔 직원들: 호텔 프런트 직원은 친절한; 그는 유창한 중국어(중국) 은 영어를 거의 못합니다 하기도 했습니다.  호텔 방: 제가 묵었던 첫 번째 호텔이 매우 높은 천장, 수직 공간이 주는 방 과장. 수평적으로, 침실은 너무 큰. 화이트 컬러의 인상은 문서에 의해 및 벽과 천장. 퀸 사이즈 침대 2개, 큰 나무 테이블, 소파, 앤티크 나무로 된 의자가 2, 화장대 의 거울 및 헤어 드라이기, 작은 냉장고, 주전자와 4 쌍의 슬리퍼가 마련되어 있습니다.  체크인 12호실이었는데 마지막 밤이 독특한 호텔이다. 체크인 데스크 바로 옆 방은 말 그대로, 이라고 생각하는 한, 하지만 이었기 때문에 할 수 없이 9pm ㅆ기 때문에 우리는 수 없고, 우리는 그것을.  이 호텔을 예약한 물가 풍경을 뽐내 고 있는 - 우리가 잡은 모든 벽이 아름다운 파란색 공사 (사진과 같이). 우리의 창이 있어서 스타벅스 드라이브를 통해, 사람들이 불안 하기 때문에 실제로 보면 방에 커피를 기다리다 할 수 있습니다.  한 저녁. 나는 방에서 담배 냄새가 나는 것이 있다고 프런트 데스크에 대해 (이 호텔 / 금연실). 그는 나에게 이야기를 해 주었다 febreeze 창을 열 수, 희망 의 나를 진정시키면서 다. 하지만 창을 열고 에 분사 하고, 그 냄새가 남아있; 우리는 그 연기 냄새가 화장실에서 나온다는 것을 알고 문.  물론 그가 받은 화장실, 아주 역겨운 내부 이었다. 프론트 데스크에 전화를 하는 그 사람을 다시 볼 수 있었다 (나?) 자신에게 (말 그대로 문 앞에서 해 문을 열고). 그 위로 하는, 어깨를 으쓱, 저에게 말하지 않고 냄새가 나는 그렇게 나쁘지 않았지만 그는 우리를 위해 팬이 될 것이다. : 요청한 다른 방을 이동할 수 있는 /, 정확하게 계산을 했기 때문에 이전 했지만, 직원들이 전체 다.   앞으로 7am 에 도착했을 때 이 사랑스러운 소리에 잠을 깨는 소형의 착암기. 직원들은 저희에게 통보 하지 않은 것을 우리에게 경고하는 것이 공사현장 또는 / 시작 작업 항질염성. 탄식 하다.  전반적으로, 호텔 시설도 깨끗하고 위치가 좋고, 무관심한우리가 묵었던 바다 한 가운데에 있는 3rd suite b 있었습니다. 전망은 그냥 아름다운 벽을 통해 windows. 일층에 스타벅스가 있는 매우 편리합니다. 우리의 방은 매우 깨끗하고 꽤 큰. 공항 옆에 위치해 편리한 호텔이라 아침 일찍 비행기. 약간의 소음이 있을 수 있지만 모든 약 2200 - 0700 뜨고 조용했습니다. 여러 식사 옵션도 있었습니다.  몇 가지 단점이 있다. 아무것도 없는 영어로. 체크인 시에 도착했을 때에 1900, 사막화 이었다. 가 없고, 사람들도, 명령이 읽을 수 없습니다. 몇 번에 전화하여 "helloooo" 하였습니다. 나는 10분은 기다렸다. 아무 것도 없습니다. 전화 번호가 있어서 그 후 체크인 카운터를 하나. 나는 그 소리를 듣는 방 링잉을 직원 및 바로 뒤에 있다. 이 모든 것이 좀 거슬렸다. 어쨌든, 체크인을 할 수 없어 어떻게든 에어컨 버튼들이 모두 한글. 빨간색 또는 파란색 기호 또는 받아들이지 않습니다. 그리고 멋진 방 문을 열고 있는 창. 그런 다음 온 침대. 박스 스프링 매트리스 없이 같았지요. 의 두 번째 밤, 매트 로 침대 위에 패딩 을 대단히 도움. 이해하고 특이한 비판이 아니라 전형적인 한국 호텔을 한국 호텔, 그냥 조심 하지 않을 경우 언어 통역 문제가 있을 수 있습니다. 다시 여기에 묵을 것이 아쉽지만, 요청하기 위한 몇 가지 질문을 하고 카드를 준비하게 했다.골프장과 함께 있는 라온 호텔은 주차나 내부시설이 좋았습니다. 밤늦게 제주에 도착해서 자고 사우나하면 다음날 시작하기가 좋습니다. 애월이나 협제와 가까워서 새벽에 수우동 예약하러 가기도 편했습니다. 이번에는 라온 호텔&amp;리조트로 숙소를 정했습니다 리조트 B type 으로 예약 하여 사용 중인데, 최대 8명 사용 가능한 크기에 4명 사용하니 공간도 여유롭고 주방 시설/화장실 시설도 잘 되어 있어 아주 편하고 즐겁게 지내고 있습니다   한라산이나 애월해변, 한림공원 등 인기 있는 관광 명소들로의 접근성도 좋고, 호텔 건물에 있는 사우나 시설도 훌륭하여 가족들도 모두 만족스러운 곳 이라며 좋아 합니다   대가족이나 6명 이상 여행 시 추천할 만한 숙소라 생각 됩니다  친구들과 번개골프투어를 위해 라온호텔을 이용했습니다. 골프텔은 클럽하우스 가기전에 위치해있고 중간에 편의점과 수영장도 갖춰있네요. 저희가 이용한곳은 I동인데 방2개에 침대4개에 화장실도 방마다있어 불편하지않았어요. 거실도 넓어서 올레시장에서 사온 싱싱한 회와 마늘치킨에 한라산소주를 곁들여 즐겼습니다. 아침에 클럽하우스에 가시면 조식세트를 즐길수있는데 예전에 타이거우즈가 방문하였다고하여 타이거우즈세트가 있네요. 그외 성게미역국, 우거지해장국 등도 있으니 취향대로 즐기시고 란딩하시면 되겠어요. 여름에 다시한번 와보고 싶네요.협재&amp;금능해수욕장을 걸어서 갈 수 있고, 방에서 비양도(?) 를 볼 수 있어요.  뷰가 좋고 수영장 수질이 깨끗하게 관리되고 있다는 느낌을 받아서 너무 좋았습니다. 차없이 호텔에서 제공하는 공항 무료 셔틀 버스를 타고 다녀왔는데 편하게 푹 쉬다 왔어요.  친구랑 bbq도 시켜먹을 수 있어서 좋았습니다.  아마 가족끼리 여름에 피서겸 오시면 좋을 것 같아요.  다만, 호텔 1층 식당은 정말 비추해요. 맛없습니다. 조식 별로에요.리조트내 시설은 너무 상태가 좋고  골프를 함께 할 수 있으며 숙박자에겐 사우나와 물놀이 시설을 저렴하게 이용 가능. 금늘 해수욕장과 가까이 있어 여름을 즐기기엔 너무 합당함 공항ㅇ에서 셔틀 운행 함.제주시 구도심 중심에 있고, 공항하고 정말 가깝습니다. 건물은 리모델링해서 너무 깨끗했어요. 숙박비는 3만원이 못되게 저렴한데 두사람 아침식사도 간단하게 제공됩니다. 너무 너무 좋아요. 담에도 꼭 이용할 겁니다.호텔 객실은 심플하고, 깨끗해서 사용하기 불편함 없었습니다. 직원분들도 친절했어요. :) 조식도 깔끔하니 좋았습니다! 주차장은 호텔 맞은편 무료주차장 이용 가능합니다. 호텔 앞에 안내 표지판이 있으면 더 좋을것 같네요~ 참고로 인도에서 온 관광객들이 많은것 같습니다. 공항근처라서 예약했는데 직원분들 친절했지만 예약자명단에서 누락되고 당황스러웠네요. 다행히 빈방이 하나 남아있어서 들어갔지만 ... 찻길이 옆에있어서 소리에 민감한저는 잠을 제대로 못잤습니다. 하루정도 급하게 묵기에는 괜찮습니다. 가격도 저렴하고 친절하고요우리가 그룹으로 여행했을 때 체크인은 원활했습니다. 우리 방은 3 층에 있습니다. 기본 시설. 기본 아침. 방은 꽤 넓고 외부에서 긴 하루를 보낸 후 침대가 편안합니다. 겨울은 방에있을 때 문제가되지 않습니다.우리가 본 방과 그 밖의 모든 것이 깨끗했습니다. 접수는 때때로 결석 했습니다만, 약간의 소음을 내고 잠시 후에 뛸 것입니다.  이 장소에서 재료와 색상 선택은 ... 이상합니다. 호텔에서 기대할 수있는 것은 세련되고 아늑하거나 다른 것입니다. 1950 년대 사무실에있는 호텔 영화 (?)에 맞도록 무작위로 "디자인 된"느낌. 그리고 "품질 관리"스티커는 여전히 대부분의 벽과 천장 패널에 부착되어있었습니다 (?  음식 : 설명을 철저히 읽으십시오. 포함 된 아침 식사 "뷔페"는 실제로 많은 빵과 원하는 계란을 먹을 수 있음을 의미합니다. 물 외에는 아무것도 없습니다 (+ 차 / 커피). 아, 그리고 스프. 경영진이 작성한 통지의 첨부 사진을 참조하십시오. "조식은 토스트, 수프, 계란 튀김 및 기타 몇 가지입니다."  당신이 무슬림이 아니라면, Qiblat이라는 단어와 그것을 향한 화살표를 렌트 룸의 천장에 페인트 / 고정해야 할 필요가 있습니다. 나는 한국의 다른 호텔 (또는 다른 곳)에서는 그것을 보지 못했습니다.  인터넷은 자유로웠다. 그것은 일종의 것이었지만 한 번에 약 20 초 이상 작동하지 않았습니다. 한 번에 하나의 장치로 제한되어있는 것으로 보임 (?) 제주도는 많은 공공 장소에서 무료 Wi-Fi를 제공합니다. 모든 SSID에서 동일한 동작. 이런 이유로 "No wifi"상자를 체크하십시오.저렴한 가격이라고는 믿기지 않을 정도로 좋은 시설이였습니다. 난방이 11시부터 들어와서 이전에는 별도의 난방 장치를 틀어야 한다고 전달 받았지만 별도의 난방 장치 없이도 지낼 수 있었습니다. 굉장히 청결한 편이며 호스텔의 가격과 제주 전체의 가격을 생각한다면 굉장히 저렴한 가격에 가성비 최강의 숙소입니다. 아침 식사를 하기에 적합한 식당들도 몇 있기 때문에 아침을 나가서 먹어도 됩니다. 그리고 바로 앞에 편의점이 있기에 필요한 것이 있다면 언제든지 나가서 사올 수 있는 환경입니다. 여행지와의 거리는 약간 있고 주차가 약간 불편하지만 호스텔의 가격과 다른 서비스를 생각한다면 불편할 것은 아닐 정도로 좋은 서비스와 숙소의 퀄리티였습니다. 다른 분들이 무료 조식이라고 되어 있는데 조식은 1일 당 2천원을 받습니다. 저는 신청하지 않았지만 아침에 나가면서 봤는데 2천원 이상의 퀄리티를 제공하기 때문에 조식이 필요하시거나 근처 식당을 가기 싫으신 분들은 제공하는 조식을 이용해도 될 것 같습니다.위치도 나쁘지 않고 조용했고 시설도 괜찮았습니다. 저렴한 가격 생각하면 안에 티비도 있고 샴푸린스바스 드라이어 등등 필요한거 다 있는게 너무 다행이고 좋았네요. 와이파이도 잘 터지고요. 사장님도 굉장히 친절하셔서 기분좋게 묵을 수 있었습니다. 딱 잠깐 묵기 적절한 가성비 좋은 숙소였습니다. 추천합니다.친구랑 둘이서 트윈룸에 묵었는데 2박에 8만원도 안 하는 가격에 조식도 포함이고 객실도 청결하고 따뜻하니 좋았어요 너무나 만족했어요 1층 카페도 분위기가 너무 좋았구요. 가격이 저렴해서 가성비가 짱인 호텔이예요- 친구여행이나 커플여행이나 모두 추천해요화장실이 딸려있는 1인실에서 묵었습니다. 일단 가성비가 좋습니다.  일하시는분 사장님으로 보이시는 분 다들 친절하십니다. 조식이 셀프라 토스트랑 계란후라이는 직접하셔야됩니다. 약간의 셀러드가 있고, 우유랑 콘후레이크가 있어요. 가격 생각하면 장말 괜찮은 조식입니다. 1층이 카페 같은 식으로 되있어서 차를 마시거나, 저녁때 맥주 마시기도 좋습니다. 바로 앞에 편의점도 있고요. 다만, 좀 오래된 건물이라 그런지 방이랑 욕실이 깨끗해 보이진 않습니다.  그래도 TV, 드라이기, 냉장고 있을껀 다 있습니다. 욕실엔 샴푸 바디워시, 비누가 있고, 칫솔,치약은 준비해 오셔야 됩니다. (카운터에서 칫솔,치약이 있냐고 묻는걸 봐선 판매 하는거 같기도 합니다.)  약간에 단점도 분명있지만, 가격대비 생각하면 정말 괜찮은 호스텔이라고 생각합니다.1박에 36400원으로 친구와 둘이서 2인실에 묵었는데 가격도 정말 저렴하고 시설도 깔끔해서 좋았어요. 그리고 세면도구들이 다 비치 되어 있었고, 체크인 시 칫솔, 치약도 주어서 편리했어요. 또, 방에 와이파이 라우터가 있어 와이파이가 잘 터져서 좋았어요. 거기다 아침에 조식도 간단하게 먹을 수 있어 하루의 시작을 든든히 할 수 있었어요. 호스텔 바로 앞에 편의점이 있어 간단한 간식거리를 사들고 갈 수 있었어요. 또 호스텔 바로 앞 큰 길에 버스정거장이 있어서 버스로 여행하기 편리했어요. 단, 엘리베이터가 없어 짐을 들고 올라가기 조금 불편하다는 것과 객실의 방음이 잘 안되는게 조금 아쉬웠어요.We travelled to this hotel for our son\'s wedding.  We had never been to Korea before, and didn\'t know what to expect.  The hotel was lovely, the rooms are fabulous with everything you could want in them, a lovely big bedroom/lounge area, bathroom with shower and whirlpool bath in the room, together with a kitchen area if you wanted to prepare food yourself and everything was spotlessly clean.  The rooms had huge windows across the entire wall of the room, which gave you a fantastic view of the sea and surrounding area.  The hotel was well situated, being 5 minutes from the beach and 5 minutes walk the other way to the town with lots of restaurants.  There is a small supermarket next door selling almost everything, and a nice bar selling bar food was also next door.   You could공항하고도 가깝고 위치적인 면이나 호텔은 깨끗하고 좋습니다 월풀욕조도 있고 단 층고가 낮으면 기대하는 뷰는 나오지 안않아요 그런점이 좀 아쉬웠습니다사진으로 본 것만큼 깔끔하고 건물 외관, 내부 잘 정돈되어있더라구요 침구류도 푹신하고 좋고  위치도 공항에서 10분이내,  바다도 3분이내 거리라서 너무 좋았어요~  마지막날이라 일찍 나오게됐지만 기회가 된다면 또 가서 쉬고싶네요!  사장님도 친절하시고 좋았어요 ^^가족 여행을 제주도로가서 숙박했었는데, 바닷가에 붙어있어서 뷰가 정말 훌륭했습니다. 그리고 신축건물로 디자인을 고려하여 시설이 깔끔하고 좋습니다. 다시 한번 방문하고 싶네요제주 여행 마지막날 체크인을 하게 되었는데, 위치, 뷰가 너무 좋았다.  첫째 예약 하자마자 호텔측에서 연락이 와서 예약확인과 스페셜 한 것들을 물어본다. 예약부터 신경 쓰는게 느껴진다.  둘째 사진처럼 깨끗하고 큰 리조트 이다. 따뜻한 분위기에 직원들은 정말 너무 친절하다.  셋째 결혼식 끝나고 오는거라 신혼여행이라 이야기를 했더니 방으로 와인을 배달해 주셨다.   하나하나 세세하게 신경써주시는 직원들에게 감동 그자체!! 추워서 수영장에서 놀생각은 못했지만, 아이포함 가족여행으로 오면 너무 좋을 것 같다.  젤 중요한 깔끔 그자체! 너무 좋다 완전 만족! 뭐하니 어긋나는게 없다! 제주도 애월쪽 강력추천!!!패밀리룸 바다 전망으로 넓은 침실이 있는 객실1개와 작은방,  화장실 2개 그리고 맛있는 것을 해 먹을수 있는 인덕션이있는 주방과 쇼파가 있는 거실~  가장좋은건~~창문열고 바라보면 제주바다가 보이고 아기자기한 정원이 리조트의 매력이다! 특급수준으로 관리되고 있지는 않지만 가격을 생각한다면 준수합니다. 특히 침대. 넓은 공간. 가족형 수영장이 좋구요. 다만 여기저기 세심한 보수가 필요해 보이네요.굉장히 싼 가격에 다녀왔는데 방 상태 좋은데 화장실 샤워기에 물때가.... 청소에 좀 신경쓰셨으면 합니다. 수영장은 넓고 물도 깊은데 사람도 별로 없어서 수영하기 정말 좋았습니다. 근데 라커룸은 왜 그렇게 관리를 안하시는지? 곰팡내 무지막지 합니다. 하지만 가격이 싸서 모두 용서가 됐습니다. 이제는 수영장 폐장했기 때문에 아주 가격이 싸지 않으면 굳이 갈 필요가 없다고 생각합니다.리조트가 아닌 마레보 비치 호텔 이용 애월에 있는 거의 유일한 호텔로 깔끔하고 예쁜 인테리어가 인상적인 호텔 단, 해변가와 가까워 늦은 저녁 주변 파티 게스트하우스에서의 소음이 조금 있음 내부 시설은 깔끔하고 침구류도 좋음우리는 이곳에 하룻밤 머물렀는데 공항 근처로 원하는 것을 했어요. 택시를 타고 10분이 라 공항에서 약 5, 000원. 우리가 묵었던 방은 좀 어둡고 칙칙한, 하지만 침대는 편안하고 했다. 샤워실/화장실 / 세면대의 팬 이 아닌 조합 (샤워실이 구분되지 않은 파티션, 젖어서 모든 것); 하지만 나는 이 호텔에서 기대할 수 있어 파악할 수 있습니다. 전체적으로 평균적인 호텔, 하지만 다시 오고 싶지 않아요.이 아름다운 호텔에서 3일 밤을 묵었는데. 공항에서 매우 가깝다. 약 $15 - 20분 버스. 주요 쇼핑 거리는 5분 거리에 있는 호텔. 한 시간 이상은 아니었지만 호텔에서 차를 타고 매우 비싼 택시를 타고 화산. 방은 매우 깨끗하고 깔끔했고 매우 컸어요. 우리는 우리의 방에 있는 화장실.다양한 음식과 음료를 걸어갈 수 있는 곳. 저녁 식사는 늦은 밤에 음식을 찾는 문제 도 아니다. 편의점이 걸어서 갈 수 있다. 하지만 공항에서 멀긴 하지만 운전은 제주도 여행에 추천 합니다. 따라서, 문제 거리가 되지 않았습니다.처음 한국을 여행하는 한, 우리가 묵었던 7일 한국 (제주 3, 강남 4). 우리가 묵었던 2 호텔 중,이 최고입니다. 이 객실에는 문자, 넓고, 깨끗하고 최신식이었어요. 프론트 데스크의 직원들은 아주 좋은 사람이나. 문제 은행 카드를 가지고 갔을 때 제 여자 친구를 불러 국제적으로 로컬 취출된, 직원은 무료 서비스 주장 이, 주장 했지만 우리 방이 청구됩니다.이 호텔은 쇼핑 지역 근처에 위치해 있는 젠 충돌시에 바오 거리 쇼핑 거리에서 바로 코 앞의 많은 레스토랑, 카페 그리고 식당 철손과!   직원들은 매우 친절하고 정직한. 그들이 원하는 곳을 갈 수 있길. 또한, 그들은 남아 있어 핸드폰 이나 에게 돌아와 다시 돌아갔을 때는 수집 및 보상 충성 스럽 게 거절!사진은 좀 엉망으로 찍었지만 매우 가격대 성능비 좋은 호텔입니다. 실용적인 분들에게 추천합니다. 방도 넓고 특히 더블과 싱글침대가 같이 있는 방이었는데 혼자 묶었습니다.  아침 식사도 한식과 토스트로 간단하게 나오고요. 모텔가서 자느니 여기 강추합니다.공항에서 가깝고 내부도 깔끔한 편입니다..조식도 그런대로 먹을 만 했구요.. 중국손님들이 맣은 걸 보니 중국단체여행 숙소로 많이 활용되는 듯합니다싱글침대 2개가 나란히 있는데, 방이 넓어서 시원시원하니 넓었어요. 관광호텔이라 고급스럽거나 하진 않지만, 하룻밤 쉬고 오는데는 괜찮았어요. 시내에 있어서 교통편리객실은 매우 좋은 크기이며 무료 수건 (너무 작음), 주전자, 냉장고 및 헤어 드라이어가 제공됩니다. 깨끗한 수건과 함께 매일 한 병의 물이 방으로 배달되었습니다. 아침 식사는 오전 7 시부 터 아침 8 시까 지 가능했습니다. 일찍 시도 했으므로 한 번만 시도했습니다. 음식은 너무 매운, 버터가없는 빵과 일종의 두부, 국수. 우리가 이웃의 편의점에 가서 매일 아침 식사를 제공해야했기 때문에 역 겹다. 좋은 점은 무료 Wi-Fi 뿐이었고 버스 터미널은 길 아래에있었습니다. 편안한 숙박과 품격있는 아침 식사를 원하신다면 업그레이드하십시오. 다시 여기 머물러 들지 않을거야.호텔은 괜찮았지만, 리셉션 직원은 영어를 몰라요, 우리를 통신하도록 아주 딱딱했습니다. 아침 식사는 짧아서 환경 좋은 않았습니다. 호텔 내 기대에 못 미쳤습니다.이 호텔을 예약했는데. com은 우리 가 보는 사진처럼 온라인, 해서 하기 때문에 정확히 알고. 이와 함께 한 더블 침대, 깨끗한 욕실과 큰 욕조가 있고 (YAY). 하는 우리 자신의 미니 냉장고가 있습니다.   이 곳에서 걸어서 3분 정도 바다는 는 실제 해변. 창문에서 바다를 볼 수 있다.   유일한 단점으로 구성됩니다 있고, 침대는 꽤 딱딱하고.비치 스토리 호텔에서 묵은 하룻밤에 처음 도착했을 때 제주도. 좋은 위치의 깨끗한 호텔에서 가까운 바다. 전형적인 한국인이 현지 스타일로 중간 가격대 호텔 -- 예를 들어, ., 욕실, 리넨, 베드 커버, 등이 있습니다. 객실은 따뜻하고. 와이파이는 잘 작동합니다. 제 생각에는, 약간 비싼 시즌 오프.  괜찮은 레스토랑, 식료품점, 그리고 해변이 있습니다. 한국어로 된 안내판이 있어 찾기가 약간 어려울 뿐. 더 그랜드 호텔 건너편에 있는 해변 (찾기 쉽습니다).제주공항 근처에 위치하고있어서 밤늦게 도착하시는 분들 하루 묵기 좋은듯해요! 가격대비 룸컨디션 깔끔하고 좋아요. 중국인이 많이 있습니다지은지얼마안돼어깔끔합니다. 옥상에올라가면 제주공항도보이고 시내가 한눈에들어와요. 화장실과샤워실세면대가 각각분리돼어있어 친구들끼리 가서 사용하기 편리하나 볼일보고 바로샤워해야하는 남편은 좀 불편하대요. 침대매트리스가 다른호텔에비해 안좋았어요. 자다 뒤척여도 옆에사람깨고 침대끝에앉으면 다른사람도 기우뚱하게될정도로 침대별로에요. 조식은 종류는 많지 않지만 음식 하나하나가 정말 맛있었어요. 제대로 조리한느낌이었어요. 대체적으로만족합니다.사전결제예약하면서 산 전망있는방으로 예약됬는데 체크인할때완전 전망꽉막힌 방줬음~  기분완전나쁨 예약과 완전 다름출장으로 묵었는데 깔끔하고 시내 중심가에 위치하여 편합니다. 책상 위에 콘센트가 있어 노트북으로 작업하기도 좋았고, 침대도 푹신하여 잘 잤습니다. 화장실과 샤워 공간이 분리되어 있어 2인 이상 이용하기 좋습니다. 저렴한 가격에 매우매우 좋은 호텔이다 위치도 매우 좋으며 화장실과 객실 모두 좋다 주차타워도 있어서 주차걱정도 안해도 된다. 다만 조식이 조금 아쉽다.방은 넓고 5 - 6명. 깨끗하고 편안했어요. 투썸 카페가 바로 옆의 길을 따라 쇼핑 거리. 아주 좋은 위치. 공항 근처. 쉽게 택시를 얻을 수 있는 호텔입니다. 공항에 가는 택시밖에 3600krw.位于济州市，比较靠近机场。其实如果包车旅行，不需要住西归浦，因为德士司机都住济州市，所以住济州市反而方便他们载送。房间尚可。공항에서 멀지 않은 호텔입니다. 저렴한 가격 대비 성능이 좋아서 만족스러웠습니다. 걸어서 갈 수 있는 거리에 흑돼지, 고기국수 등의 알려진 맛집들이 있어서 편리했습니다.공항에서 가까운 위치라는 장점이 있습니다. 제주도에 오후에 도착해서 빨리 쉽게 찾아가서 쉴 수 있어서 좋았습니다. 소셜커머스를 통해 저렴하게 예약할 수 있었고, 체크인할 때 무료로 룸을 업그레이드해 주셔서 좋았습니다. 룸 컨디션은 꽤 괜찮았는데, 다만 샤워를 하고 나니 욕실에서 냄새가 조금 올라왔습니다. 하지만 합리적인 가격에 비하면 훌륭한 시설을 갖추고 있다고 볼 수 있을 것 같습니다.담배냄새가 너무 심함 호텔이 아닌 모텔이라 그런지 환기가 전혀 되지 않음 침구랑 방 전체에 담배냄새 베어있어서 정말 있는 내내 더러워지는 기분이었음공항에서 택시로 5-10분 거리에 위치해있는 비지니스 스타일 호텔입니다. 체크인시 보니 프론트에 외국인이 많은걸 로봐서 외국인 응대또한 좋아보였습니다. 시설은 정말 나쁘지도 좋지도 않은 무난한 수준이었고 청결도는 좋았습니다. 제가 방문했을때는 앞에 건물 공사가 있어서 인지 아침부터 중장비와 기계소음이 거슬리긴 했습니다. 저녁에는 신제주 시내까지 걸어서 5분정도여서 식사해결하기에도 괜찮았습니다. 호텔 바로 옆에는 조그만 슈퍼마켓이 있습니다.이번 제주 여행-- 미국에서 아들만 보낸 상황이라 무엇보다 안전이 중요했습니다. 제 아들에게 환전 문제, 분실 문제가 발생했는데, 호텔의 박과장님 이하 여러분의 도움으로 잘 해결이 되었습니다. 손님을 가족처럼 돌봐주신 앳눈 호텔 직원 여러분이 얼마나 감사한지요. 무조건 별 다섯개 입니다.이 호텔은 쇼핑지역과 가까이 위치해 있다. 디자인은 상당히 현대적이다. 직원들은 우리가 요청하는 것은 다 들어주고 영어로 의사소통도 할 수 있다. 직원들은 정말 친절하다. 왜냐하면 택시 운전사와 의사소통하는데 어려움이 있었고, 요청도 안했는데 직원분이 우리를 도와주었다. 단지 조금 이상한 점은 세면대가 화장실이 아니라 침대 옆에 있다는 것이다. 그리고 베개가 너무 물렁거리고, 평평하다. 아마도, 방안에서 와이파이를 무료로 쓸 수 있는것 같지만 웹페이지가 한국말로 되어 있어서 어떻게 비밀번호를 넣고 사용하는지 모르겠다. 하지만 만약 직원에게 물어 보면 흔쾌히 도와줄 것이다. 하지만 우리는 직원한테 묻지 않았다. 왜냐하면 제주에서 머무는 동안 인터넷 할 필요가 없기 때문이다.남편과 나는 제주 불축제동안 이곳에 머물렀다. 하룻밤에 60달러 요금을 냈는데, 그 요금은 괜찮은 가격이었다. 방은 널찍하고, 깨끗하고, 현대적이었다. 직원들은 항상 친절했다. 호텔에 도착한 후 아침에 자동차를 렌트하기로 결정했고, 호텔 직원은 자동차 랜트 회사에 전화를 하고, 세세한 것까지 준비해 주었다. 그리고 택시를 불러 주어서 자동차 랜트하는 곳까지 갈 수 있게 해 주었다. 호텔은 공항에서 10분정도면 갈 수 있고, 도심에서 3블럭 정도 가면 나온다. 도심은 몇개의 나이트 클럽이 있는 거리 하나가 전부다(만약 재미있는 꺼리를 찾는다면 둥근지붕 건물이 무엇인지 확인해봐라. 호텔에서 5분만 걸으면 나온다).나는 5 박 동안 여기에 머물렀다. 나는 방의 아늑함을 좋아합니다. 너무 깨끗합니다. 제주 시내에 위치하고있어 낮과 밤을 자유롭게 돌아 다닐 수 있습니다. 밤에 배가 고플 때 먹을 것을 잡을 수있는 11시 가까이.  직원들은 매우 도움이되고 친절했습니다. 특히 요리사와 팀. 나는 여기에 머무르는 것을 좋아하고 다시 제주에 가면 여기에 머무르는 것을 고려할 것입니다.  아름다운.정말 좋은 시설, 내가 이 선택했습니다 공항 이유는 매우 가깝습니다. 그러나 조금 비싸요. 6 침대 기숙사 객실은. 하나는 침대 4개, 침대 2개. 1. 방 안에 TV. . . 물론 모든 설비가 갖추어져 있습니다. 거실 가지고 공용 공간이 있습니다.  제주 여행 동안 개인 추구할 경우 꽤 좋은 곳. 여성 및 남성 객실을 구분됩니다. 2층에 여자 남자 1 1층까지 사용됩니다.  나는 인당 20, 000원. 16달러 하룻밤 예약했습니다. . . 조금 직접 예약 훨씬 싼 온라인 예약. . . 다른 아이러니야! ! ! 나는 여행. . . 다른 유럽 여행을.  매우 깨끗하고, 아침 식사도 좋음. 그리고 침대에 전기담요도(시트) 플러스. . 그래서 따뜻한. . . 한국, 당신이 익숙하지 않습니다. . .나는 이틀 전에 여기를 방문하십시오. 정말 좋은 시간이었고, 모든 직원들은 아주 친절하며 괜찮은 곳 도 추천해 드립니다.   더, 바비큐 파티가 가장 흥미로운 이벤트, 꼭 해야 할 때 거기에   (,.  ,    . )   cf) 시설이 정말 깨끗하고 좋은, 모두 나무로 만들어진 침대, 좋은 화장실 깨끗하고.저는 투어 그룹에 클레어 는 따뜻하게 환영 받았고, 케니, 그리고 다른 직원들. 객실은 깨끗하고 편안했어요. 있는 작은 카페가 있는 호스텔 바로 앞에 위치한 흑돼지 전문점에서 햄버거, 감자튀김, 커피, 맥주. 훌륭한 점심 식사. 직원들은 손님들이 저녁에도 게임에 참가하여 경쟁하는 재미있는 체험! 이 호스텔은 매우 가깝고 서귀포에서 두 개의 주요 폭포, 항구에 있는, 음식 거리, 및.이 게스트 하우스는 제주 공항에 매우 가깝다. 대중 버스로 갈 수 있는 게스트하우스 근처에 있는 500 검사기,인텔 있어.  - 관리자가 기본 작동할 수 있는 영어. 매우 협조적이고, 많은 정보가 어떻게 갈 수 있는, 갈 곳.  - 주인은 밤에, 그는 정보도 아주 친절합니다.  -방과 화장실에 매일 청소 한다. 깨끗하고 깔끔한 곳입니다.  하지만, 욕실은 남녀가 있습니다. 하지만 나에게 문제가 발생하지 않았다.정말 편안한 호스텔은 친절한 주인. 나는 가능한 한 더 positiv 곳입니다, 그러나 나는 운이 좀 짜증나는 혼합 기숙사 룸메이트. (잠을 잘 수 있어서 매우).이 집과 유충 돌을 둘러싼 밀초가있는 집처럼 느껴집니다. 매우 깨끗한 실내 및 실외. 집주인이 주방에서 제공하는 3 대의 자전거를 이용할 수 있습니다. . 세탁기도.  호텔 매트리스와 비교할 수없는 두꺼운 매트리스가 있지만 괜찮습니다. 가장 가까운 식료품 점까지 도보 거리.  택시를 집주인에게 알려야합니다. 제주 최대 속도가 70km / h n이므로 아무도 타지 않을 것입니다.레프트핸더 게스트하우스는 제주의 시골 교외 지역에 있습니다. 차가 있다면 정말 추천할만 하지만 서귀포와 제주시에서 오는 버스를 탈 수 있는 정류장이 근처에 있어서 차가 없어도 이용하는 데 무리가 없습니다. 게스트하우스 근처에 일출봉(성산 일출봉)과 피닉스 아일랜드가 있습니다.   이곳은 건물로 둘러싸인 서귀포나 제주시 지역과는 다른 예스러운 맛이 있습니다. 원하면 게스트하우스 사장님과 함께 무료로 오름을 오르는 체험을 할 수 있습니다. 저희는 시간이 없어서 하지 못해 아쉬웠습니다. 사장님은 지역에 관해 잘 알고 있어서 서귀포와 제주시로 가는 방법이나 주변의 멋진 경관들에 대한 정보를 많이 주셨습니다.   날씨가 좋은 날에는 근처의 바닷가로 내려가거나 해녀(제주의 여성 잠수부)를 기리는 해녀 박물관을 둘러보는 것도 좋습니다. 이곳은 시골이기 때문에 버스 정류장 근처의 편의점을 제외하고는 레스토랑이나 상점이 많지 않습니다. 게스트하우스에서의 저녁을 위해 먹을 것들을 가져오거나 아니면 호스텔 사장님과 저녁을 함께할 수도 있습니다(무료로).  전반적으로 즐겁게 지냈고, 잠시 도시를 떠나 있기에 정말 좋았습니다.패밀리 스위트 룸에 묵었는데 3박 4일을 제주도 여행을 위한 북동부 쪽. 훌륭한 서비스 중 에서 저녁 식사를 즐길 수 있는 주인에게 요리의 마지막 밤을.   식당과 걸어서 갈 수 있는 가치있는 합리적인 가격에 가까운 곳에 박물관에 체크 아웃 하네요.   이 게스트하우스를 추천하고 싶네요. 깔끔하고, 깨끗하고 정돈되어 있다. 통풍이 잘 되면 더 나은 개선 되어야 할 경우 주방 거실 절곡된 절곡부가.안녕하세요. 내가 마지막으로 2015 frien 을 봄. 8pm 에 도착 하다. 이 게스트하우스의 주인은 꽤 늦은 저녁이나 지 않는 이미 우리에게 물었다 (그에게 할 수 있어서 매우). 물론 우리는 포기하지 않았다. 그런 다음 몇 가집니다 활용하는 몇 가지 레스토랑이 제공하지 않은 돼지고기는 여기 있다. 그는 또한 우리를 차로 레스토랑 (너무 감사합니다! ). 음식이 너무 맛있어서 다 먹어 볼 수 있는 것입니다.   우리가 있는 방. 정말 편안하고, 깨끗하고 편안했어요. 우리는 함께 여행 (?) 해 몇 가지 크레이터스 게스트 하우스. 그 후에, 우리는 차를 몰고 가버 bijarim 을 (가장 마음이 숲), 동굴 manjangul, 김녕 미로 공원, 해변, 바다는 차가운 바람이 많이 불어서 따라 운전 freakingly.  전반적으로. 나는 별을 10/10 2 호의를 드립니다.  P/s: 죄송합니다 늦게 리뷰.이곳에서 정말 즐거웠어요. 깨끗하고 친절한 직원. 마치 집을 좋은 빵 치즈 있습니다. 러브 hangingout 여기 벤치 에 앉아 밤에 집앞. 사람들에게 추천하고 싶은 생각을 가지고 매일 등산 성산 ilchilbong. 강추!서울로 가기 전에 성산일출봉, 해녀 박물관 등 주요 관광지를 둘러보고 싶어서 이 호텔에서 2박 묵었습니다. 위치는 도심지로 근처에 이마트와 현지 음식점이 여럿 있습니다. 객실은 깨끗하고 냉온수 정수기, 와이파이 인터넷, 슬리퍼 등 비치품이 완벽히 갖춰져 있습니다. 체크 인도 아무 문제 없었습니다.방은 매우 큰 두 명. 욕실도 매우 컸고, 욕조가 있는 샤워실 및 화장실과 별도 세면대 앞에 추가. 객실에는 바닥 난방 시설이 충분히 따뜻하지 않지만 (요청 할 수 있을 바닥 따뜻한 프론트 데스크). 더블 침대 매트리스도 작은. 이 방은 방음이 되지 않을 수 있기 때문에 아침에 조금 시끄러움. 유일한 단점은 아침 식사를 할 수 있는 맥도날드 가서 주변에 레스토랑은 없고. 좋았던 점은 호텔은 제주 국제 공항에서 매우 가깝다.위치적으로 보면, 전략이라는 하지 않고 걸어서 일어나는 지안 바오 거리가 좀 있습니다. 호텔 근처에 위치한 이마트 근처에 맥도날드도 있다. 방이 크고 가격을 지불합니다. 하지만 직원들은 매우 협조적이지 않은 영어. 그들은 한 사람이 라고 하고 전화를 주는 먹고 쇼핑 장소 근처에 있습니다.호텔은 많은 식당에 가까운 편리한 위치, 다양한 백화점을 걸어서 갈 수 있을 뿐만 아니라. 편의점도 있 24/7 분 정도 떨어진 곳에 위치한. 저는 재미 에 씁니다 라면 먹고 편한 방의 수 있습니다.  욕실은 큰 욕조, 침실은 공간이 많은 곳도 없을 정도의 짐을 실행할 수 있습니다. 와이드 tv, 빠른 인터넷, 기본적으로 필요한 모든 것, 심지어 펜 데스크.  직원들은 매우 친절하고 도움이 되었습니다. 또한 달콤한 귤 이 바구니 (제주의 서명 제품) 접수 데스크에서 무료로 먹을 수 있는).  정말 즐거웠어요. 동정 을 하지 않고 내가 요청하는 핑크 룸이 다음에 이곳에.방은 크고 깨끗했습니다. 욕실도 너무 큰. 우리의 방은 매일 전체 지속 시간 내에 체크인 시. 호텔 방을 예약을 하라. 직원들은 영어를 할 수 없습니다. 중국어를 구사하는 직원 들의 아침. 운이 좋게도 우리는 몇가지 기본적인 중국어를 할 수있게 이해할 수 있습니다. 호텔은 신라 면세점 과 시내 거리 산책 15mins. 직원들이 주장하는 제주도 여행 관광지를 가고 싶어하 했을때 시티 투어 버스. 방법을 안내해 주고 버스까지 작성한 관광명소를 누구에게 하는 한국어로 합니다. ビジネスで1泊しました。ホテルは市内繁華街に近く、外に出るには便利な立地です。部屋も1人で使うには充分すぎる広さ。シャンプーや歯ブラシなど韓国では珍しく消耗品アメニティも揃ってます（済州島が観光地だからかな？）。フリーWi-fiが自由に使えるのも旅行者には必須ですね。朝食はレストランビュッフェで、悪くありません。難を言えばエレベータの動きが少しおかしいのと、済州島は本土からの団体トレッキング客が多いので、かなり酔っぱらった人々が大勢で騒いでいるのに遭遇することぐらいでしょうか。でもこれはホテル側の責任ではなく、たぶんどこもそうなのでしょうね。部屋に入ればいたって静かで快適です。Мне понравилось.Кстати есть русское т.в. Ужин включон в стоиость номера.2 минуты от центра. Говорят на русском.англиском кор.и китайских языках. За эти деньги мы были доволные. Да у них есть русс.гооряшие гиды. После ремонта очень хорошо .比国内同价位的宾馆好多了，干净，整洁.如果在国内，这个价格绝对租不到。而且济州岛本身不大，所以去哪里都很放方便，不用担心。싼 가격과 좋은 위치를 자랑한다. 그러나 객실이 세련되지는 않았고 넓지도 않다. 그러나 화장실은 상당히 쾌적하여 만족스럽다. 한편 주위에서 식당을 찾기 위해 상당히 걸었다.제주도에 위치한 이 오래된 호텔이라고 생각 한다. 뷔페식 아침 식사가. 이곳에서 이틀 밤을 지냈다. 호텔은 강한 wifi 연결. 직원들은 영어를 그렇게 좋지 않아요. 우리가 머물렀던 침대 두 개 층.첫 번째 호텔이 + / - 7 플러스 2시간의 비행 끝에, 우리는 좋은 호텔 이라고 하는 중에, 아무것도 기대. 이곳은 우리가 선택한 패키지 투어.   내 속도, 이 다리는 2 star 호텔 입니다.  매우 청결함을 허용하는 한 알의, 그 이  방 크기는 충분히 큰 더블 침대 (호텔의 아들)  많은 기대를 한 여행 준비. 더 아무것도우리는 우리의 여행사를 통해 예약해서 이곳에서. 인상적인 호텔에 대해서 아무것도, 정말 아무것도 불평할 수도. 모든 기본적인 요구 사항 충족. 방은 넓고 비교적 깨끗했습니다. 침대도 충분히 편안했습니다. 쇼핑을 하고 (호텔 뒤에 있고). 편의점이 바로 옆에 있고, 늦은 밤 간식 은 (라면!). 아침 식사는 그저 그랬다.이 호텔은 공항과 가장 가까운 위치해 관광, 쇼핑, 레스토랑. 호텔 로비는 넓지 었습니다, 좋은 직원, 좋은 방. 방에는 모든 스위치는 하나의 제어 보드 조명, 에어컨, 차/커피를 만들 수 있는 난방 없이 물 주전자 자재품. 방이 넓지 었습니다, 욕실은 깨끗하고 넓지 었습니다 펀관과. 거리의 소음이 없고 호텔에 기본 높이에서 조금 떨어진 길. 호텔 프런트는 나무 대표하는 원괴체. 나는 이 호텔을 추천합니다주인 분이 매우 친절하고 매우 곧 출시 미스터 파크 및 호스트 및 제주에서 추천하는 가볼 곳, 그리고 좋은 한 곳 입니다. 그들은 또한 수 수도 &amp; - 좋은 경험을 하게 되어. 해안도로 에 위치하고 있어, 일어날 수 있는 아름다운 바다가 보이는 전망. 또한 여러 음식점들이 걸어갈 만한 거리, 스타벅스도 있고 (취하기 좋은). 방은 예쁘고, 기상 은 따뜻한 아침 식사 준비 및 몇 가지.바다가 보이는 해안도로 바로앞에 위치해있어서 어느방, 어느곳에서도 바다가 잘보이고 바닷소리를 들을 수 있었어요, 사장님 부부분들이 아기자기하게 꾸며놓으신 방과 복도등 인상깊었습니다. 방도 참따뜻하고, 온수도 잘나오고 특히 조식이 너무너무 인상깊었습니다. 직접 아침마다 구워주시는 빵과 각종야채, 과일들 ! 같이 여행한 싱가폴친구도 너무나 만족하고, 또오고싶다고 말한 숙소였습니다 다음에 제주도 방문하면 꼭~ 꼭다시들릴게요!이 게스트 하우스는 매우 전략적인 위치에 있으며, 바다를 볼 수, 주변의 많은 레스토랑과 카페들이 있습니다. 호스트, 미스터 파크, 영어를 아주 잘 하고, 매우 친절하고. 그는 우리에게 방문할 수 있는 곳이 많은 우리의 짧은 숙박에 - 할 뷰. 게스트 하우스 6 가지의 방, 지하에 있는 조식이 제공되는 아늑하고 멋지게 장식 되어 있다. 우리는 다른 손님들과 함께 호스트 및 공유할 수. 또한 우리가 방에 있는 호스트 정도까지 꼭다발과 에게 매우 친절했고. 추천하는 곳, 그리고 꼭 다음에 방문한 제주 -.제주에 막 도착해 차를 빌려  출발전 핸폰 문지로 받은 안내대로 제주란에 좀 일찍 도착하니, 대표께서는 막 출타중 이셨다  손님이 오신 다 하여 방에 꽃을 놓아드리려고 꽃꺽으러 가셨어요. . ..  헉 손수 꽃준비 하러. .   그사이 집주위를 차근 차근 둘러 봤다.  차로 오는 경우 지나치지 말라고 입구에 세운 팻말. .  건물 바로 앞 바다를 바로보게 놓은 벤치.. 빤듯하게 거 놓은 주차선 화가의 손씨가 풍겨나는 그림의 방문. .  손님들의 휴식처이자 아침식사 공간인 반지하의 리빙룸, 창앞쪽을 둥그렇게 파 햇볕이 잘 들어 오고 밖도 잘보여 지하라는 느낌이 없는 공간. . ..  그리고 무었보다 방에 들어와 커든을 열으니 . .   바다가 품으로 안겨왔다 !!!  자상하신 대표님,, 꼼꼼하신 사모님 의 숨결이 느껴지는 집안 곳곳의 여유로움.  아침을 맞이하고,  창밖의 바다는 더 포근했다.찾아가기도 힘듦. 버스도 타고 택시도 타고 현지 사람들 도움도 받았지만 찾기 힘듦. 이미 약속되어 있는 것임에도 욕실이 없는 방을 제공받았음. 할인에 대해 협상을 했고 다음 날 방을 옮길 수 있었음. 주인은 영어 못함. 첫날 이후로 본 적이 없음.우리는 길 건너에 있는 다른 호텔에서 숙박을 연장하지 못했기 때문에 2박을 머물기 위해 모나코 호텔로 이동했어요. 바깥에서 보면, 호텔은 괜찮아 보였습니다. 외견상으론 낡지 않았어요. 조금 어두워 보이긴 했지만요(우리가 보러 갔을 땐 괜찮았습니다). 아마 어두운색의 타일을 쓰기로 선택했기 때문이 아닐까 싶어요. 내부는, 필요한 편의 시설도 갖춰져 있고 괜찮습니다. 난방 시스템, 온수 공급, 적당한 침대와 안정적인 와이파이 연결까지 가능해요. 우리는 간단한 영어로 프런트 직원과 대화할 수 있었습니다. 그는 우리의 이틀째 여정이었던 섬 여행을 갈 때 택시 기사와의 연락을 도와주었어요. 직원이 우리를 다른 택시 기사(혹은 그가 의도한)에게 태우려고 하지 않았다는 점과 우리가 공항으로 떠날 준비가 되었을 때 즉시 택시를 잡아준 점에 대해 고맙게 생각했어요. 방은 꽤 넓었고 모든 기본적인 편의 시설이 이용 가능했습니다. 장식이 조금 오래된 스타일이긴 하지만 주요 문제는 아니에요. 음식과 쇼핑에는 문제가 없었는데 반대쪽 호텔도 있었고 거리 하나만 지나가면 됐기 때문입니다. 우리가 낸 돈을 보면, 제주시의 내의 다른 선택에 한 표를 던지겠습니다(제주시에 대한 저의 다른 리뷰도 보길 바랍니다).호텔이 꽤 낡은 스타일임에도 방은 컸습니다. 컴퓨터나 인터넷은 없지만 라운지에 커피머신이 있어요. 위치는 아주 좋습니다. 버스 정류장도 가까워요. 대도시를 연결하는 제주시의 버스 터미널로 향하는 버스와 중문으로 향하는 공항 버스도 있습니다. 그랜드 호텔(카지노)과도 가까워요. 주변에 식당도 많습니다. 공항과도 가깝고요. 택시 요금은 3000~4000정도입니다(여행 시간에 따라 다름). 간단한 영어로 대화할 수 있습니다. 하지만 그가 이해하지 못한다 해도 그리 큰 문제는 아닙니다. 한국은 정말 좋은 여행자 서비스를 갖추고 있거든요. 그가 핫라인에 전화를 걸면 누군가가 통역을 해줍니다.(2016.07.14) C1  나는 이 호텔에 1일, 그리고 모든 수직 도, 비 도, 나쁘지 않았다. 하지만 가격이 아주 좋아. 방은 생각보다 큽니다 레스토랑, 근처에 있는 좋은 위치에 있기 때문에 많은 지역. 시내에 머문다면, 가격과 위치가 좋습니다. 것 같아요.에서 모나코 에 위치 도 정말 좋 아요, 월, 몇 단계 편의점, 그리고 작 은 포장 마차 가 하나 나타나 아주 저렴 하 고 좋 은 국수 와 kimbap 바로 오른쪽에 모텔 나가 ㄹ 때. 기본 적 으로, 이 모텔 은 주변 음식점, 모든 종류의 함께 찾 은 도보 거리. 이 사용자가 알아 두어야 하는 소유자인 수 없는 방 에서 신발 을 착용, 슬리퍼 제공 하 고 묻 어 구두 방 밖 에서, 저 도 이 었다. 공항 에서 매우 가깝 고 주위 에 비용 만 사용하고 3500krw motel 캐브. 다음 여행 에도 꼭 이 호텔 을 선택 하 ㅂ니다 다시 제주도!이번주 금토일 2박을 묵었습니다. 일단 합리적인 가격에 오션뷰를 느낄 수 있어서 좋았고, 무료 조식 역시 어지간한 한식 조식과 맞먹을 정도로 괜찮았습니다. 사장님께서 매우 친절하신 편이며, 방 역시 깔끔하고 좋습니다.I got to stay at The Stay Century Hotel in Jeju because it was included in the local package i booked via Andy Tour Jeju. The rooms are GREAT! Very huge &amp; very clean. We had a twin room as well as a gachi room. The gachi room comes with 2 double beds and a bunk bed! it also comes with a balcony which was so lovely. The sea view from the rooms are lovely as well.   Breakfast was limited but sufficient for us. There\'s a convenience store nearby and a large supermarket across the road at the crosswalk. There is a restaurant opposite the hotel (on the same side of the supermarket) called Lee Hwa Su that serves very good yukgaejang (spicy beef soup).   We only stayed 2 nights, wished we had more time here as we haven\'t explored very much!숙박 예정인 호텔을 찾을 수 없기 때문에 밤을 머물렀고 현지인도 그것을 찾을 수 없습니다. 이 호텔은 바다, 해변과 매우 가깝습니다. 저녁은 시원합니다. 공항까지 택시로 15 분. 콘은이 지역이 주위에 식사를 많이 할 필요가 없다. 그리고 방의 스위치는 그것이 자동적으로 모든 빛 / 에어컨의 안에서 자르는 것에 따라 밤에 매우 잘 움직이지 않고있는 것처럼 보인다. 그리고 u는 그것에 자기 자신 (때때로) 하지만 여전히 나에게 평균결혼한언니들가족3팀까지합하여 온가족이같이갔던여행지로선택했던호텔입니다  사실더 등급높은곳으로찾던중에 차이점을보니 5성급은 수영장과주변시설들인데 날씨가조금추웠던만큼 우리가족은수영장은필요없을꺼같았고  계속가족일정있었기때문에 실내숙박과조식만을 보고 선택하게되었습니다 정말무척깨끗하더라고요 조식은가짓수가많은건아니었지만 먹을수있는깔끔한음식들이정갈하게놓여있었고 그렇다고 음식이적은것도아니었어요 과일.한식.고기채소 등등 정말99점입니다 딱하나아쉬운점이 조식먹을때커피가따로없었는데 그건 로비에가보니 따로미니커피숍이있었어요~부모님도무척좋아하셨고 조카가3살이었는데 방안이 맨발로다닐수있어서  다들좋아했어요~만족하고추천합니다트윈베드를 사용했는데 편했고, 깔끔하고 조식도 괜찮은편이었다.  다만 아쉬운점은 베개가 약간 높고 수영장이없다.  하지만 가격대비 가성비가 높아 매우만족한다^^客房內： 1.床大也舒適，整體環境整潔 2.電視螢幕大，看起來感覺很好 館內： 1.飯店內就有韓式炸雞店，如果不想出去買也可以吃的到 2.頂樓有酒吧，雖然晚上看不太到風景而且關的也滿早的 飯店附近： 1.離超商很近，便利商店、大賣場都有 2.步行約10分鐘可以找到有名的橋村炸雞(真的比飯店內的好吃......) 缺點：有請導遊問櫃台是否有橋村炸雞的外送，卻回覆附近沒有橋村炸雞的分店。但事後自己走路找到以後請炸雞店外送到飯店卻可以，會讓人覺得是否想A國外觀光客的錢。일몰을 기대하고 갔지만 사실 호텔 위치에서 일몰은 베란다 밖으로 몸을 내밀어야 보여요. 그래도 온수욕조와 베란다, 넓은 객실은 기대 이상이었습니다. 조식이 안되는 대신 고봉민 김밥이 2층에 있어요. 제주도에서 다시 묵고싶은 숙소였습니다.좋은 위치에 있는 이 호텔! 호텔은 아주 바다로 닫혀 있어서 파도 소리를 들을 수 있습니다. 보다 편안하고 편안한! 호텔 직원들은 매우 친절하고 많은 도움을 주었습니다. 나는 제주도에 오는 경우 이 호텔은 매우 추천합니다! !우리는 서울에 며칠간 머문 후 SeaStay에 도착했습니다. 버스가 convinient하지 않았기 때문에 호텔에 택시를 가져 갔다. 내 추천은 제주에 계신다면 차를 빌리는 것입니다. 어쨌든 Sea Stay Hotel을 곧장 지나갈 수 있습니다. 공항 / 자동차 이용시 20 분 거리에 공항에서 멀리 떨어져 있지 않은 해변 / 해상 및 위치 근처에서 숙박 요금이 나쁘지 않다고 생각하면 만족할 것입니다. 내가 가장 dissapoint하는 것은 호텔이 표준을 만납니다, 접수가 전혀 도움이되지 않았다는 것입니다. 영어 사용자는 잊어 버려 정보를 얻는 것은 매우 어려웠습니다. 또한, 방에는 난로, 냉장고 등이 있습니다. 그러나기구, 포크, 나이프가 없으므로 처음부터 조리 영역을 포함 할 필요가 없습니다. 저 쿠지는이 장소와 같은 최소한 나를위한 나의 유일한 마음에 드는 사람이었다. 그러나 저 쿠지를위한 조용한 거품은 그렇게 강하지 않았다. 시간이 지켜지지 않았다. 위치 현명한 것은 다른 명소가 아닌 호텔 근처에 있습니다.  Theres는 더 많이 설명하기 위해 더 많이 그러나 어떻게해서든지 나는 그것을 평가할 매우 친절 할 것이다 3 / 5. 내가 돌아갈 기회가 있다면 나는 롯데 호텔, 하얏트 리젠시, 신라 등의 고급 호텔로 갈 것입니다. 당신이 일찌기 예약하는 경우에 가격은 바다 체재와 다름이별로 없, 아마 30 % 여분 그러나 확실하게 그것의 값이있는. 바다의 머무름은 대단한 바다 체재 경험이 아니 었습니다.넓은 객실을 갖춘 멋진 호텔, 우리는 작은 간이 주방과 함께 트윈 룸, 더블 침대 및 싱글 침대를 선택했습니다. 나는 청결 함으로 그들을 단정 지을 수 없었고, 리셉션에서 영어로 말할 수있는 직원들과 함께 서비스가 훌륭했습니다. 한국에서는보기 드문 곳입니다. 그들은 택시 등으로 가장 도움이되었습니다! 또한 호텔 내에 레스토랑이 있습니다.바다 바로 앞이라 전망은 좋지만.... 바다에 해조류 썩은게... 너무 많아서 파리가 우글우글.... 방충망을 절대 열면 안되요.......ㅠㅠ 날 좋을때가서 스파도 하고 싶어요..! 방은 진짜 넓고 좋습니다!! 파리만 아니면....부들부들횟집거리 바로 앞 흑돼지거리에 위치해있습니다. 앞에 놀이기구가 하나 있어 약간 소음은 감안해야할 듯합니다. 시설은 모던한 모텔급 이상 수준이며 가격대비 훌륭한 수준이라 할 수 있습니다. 맞은편에 큰 슈퍼마켓이 있어서 물건 구입할 때도 편했던것 같습니다. 객실내에는 PC와 대형 TV가 있어서 엔터테인먼트를 즐기기에도 부족함은 없었습니다.우리가 묵었던 방은 컸고 방에 있는 컴퓨터도 있었습니다. 스마트 티비 꾸며져 있는. 가까운 거리에 있지만 그 창문 근처에 여행, 소음이 거의 없음. 무료 세면용품들을 접수 창구 에 있는 기부는 환영 이. 위치가 정말 편리한 곳에 가 있다, 바로 뒤! 우리는 즐겁게 묵. 이 호텔을 추천합니다!좋은! 보다 더 많은 기대 이상이었습니다. 객실은 매우 높은 기술, 센트럴 거였어요. 해변과 가까운 레스토랑. 그리 크지도 않지만 멋진 깨끗하고, 첨단 기술, 조개. 공항에 가까워서, 약 4 - 5 km.   아침 식사는 없다. :)전체적으로 깨끗하고 편리한 위치에 있는 다른 음식점들 중에서 선택할 수 있습니다. 이마트 쇼핑 거리에 위치하고 있고. 단점은 방이 큰 수건이 부족한 중, 저희는 더블 베드룸 1만 제공하는 것이 작은 문제에도 불구하고 에어컨, 모두 몇 초 안에 호출을 통해 해결할 수 있는 청소. 이 호텔은 제가 만난 중 최고의 시설을 갖추고 있는 다른 호텔. 할 수 있는 55" hdr 티비, 헤어 드라이어는 무거운 게임, tv 리모콘은 구글 검색 옵션, 중간 방에 냉장고, 에어컨이 있는 멋진 및 구축합니다. 전체적으로 방은 기대한 것보다 남아 있는 것이다. 또한 2종류의 빗, 헤어 스프레이 n n 직선 및 스타일의 곱슬 겔상. 부분적인 바다 전망이 있는 방에서. 6층에 객실은 저밀도 만 볼 수 있는 메인 도로 다. 이 길에서 멀리 떨어져 있다 jz 20steps, 또한 동문 시장 근처에 아주. 호텔 건너편에 있는 맥도날드, 물론 해산물 거리가 있어 편리합니다.  이 호텔은 대체, 공사 진행 중인 작업을 동시에 2 가집니다. 하나 하나에 맞은 편. 그들은 아리마를 8am 시작할 수 있습니다. 또한 놀이공원 의 맞은편에 있고, it 10pm 닫힙니다. 여행하는 경우 r 일찍 관광을 위하기 에 너무 늦은 밤, 소음은 상관하지 않는다. 나는 이 호텔을 다시 선택 할 것이고 다음에.Location is great - staff is grumpy, yet I was allowed to Check in early but don’t ask them any question - the coffee place next to it is great rooms are clean and ok for the price bad WiFi  Good place for shopping and eating 우리는 이 호텔에 묵었는데 트레비 (그룹 3) 4일 동안. 방은 매우 크고, 깨끗하고 넓은 공간에 다 있다.  호텔의 위치는 아주 좋았습니다. 하는 대중 교통이 근처에 있는 좋은 레스토랑이나 즐길 수 있는 곳은 저녁에 맥주 &amp; 커피.  특별히 감사 하고, 그 도움을 주어, 우리의 모든 문제 :)Ótima localização, limpo e preço justo. Bom lugar para ficar, bem no centro de Jeju. Funcionários prestativos, com limpeza e organização.  Infelizmente não falam inglês, mas como muita vontade de entender o que é pedido.커플스파룸에 묵었는데 방도 생각보다 넓고 시설도 좋았어요. 입욕제도 무료로 제공해주셨고 조식도 간단하지만 나쁘지 않았어요. 스파있는 숙소치곤 가격이 비싸지도 않아 너무 잘 지내다 왔네요. 추천합니다. 지리적으로는 애월에 위치합니다.숙소의 위치가 애월 중간이라.. 애월쪽을 둘러보기에 좋지만 ..  주변에 편의시설이 많지는 않습니다.   서비스도 좋고.. 자쿠지가 있어 편히 쉬다 왔습니다.  우선 뷰가 매우 좋아서 풍경을 보기에 아주 좋았습니다.  가격이 저렴하지 않은데... 거의 펜션과 같이 일회용품을 구매해서 써야 한다는 점이..  조금 ...... 불편했습니다.  그래도 조식이나.. 시설면에선 아주 좋았습니다.  수건이나 침구에 검정색으로 뭍어있는 이물질이 있어... 꼭 체크해보시고 잠에 드시는 편이 좋습니다.Sono venuto qui per urgenza di lavoro e non ne sapevo neanche l esistenza di questa isola invece è molto bella. L hotel bello e molto tecnologico. Pulito e spaziosa la stanza però non hanno l armadio. Questo hotel non offre la colazione ma appena fuori si può scegliere ciò che si vuole anche se sempre rimanendo nella cucina coreana. Il costo è giusto , il personale molto cordiale e lo consiglio a tutti quelli che capitano qui.호텔 (협상을) 가격도 저렴했고, 아주 깨끗하고, 편리하게 서부 제주 관광명소 (해변, 공원, 차 농장 등), 제주도는 작지만. 의 주요 도시. 근처에 있는 지역 시장 들. 직원들은 친절하고, 영어, 제한된 오프 거리 주차. 나는 내 옷을 세탁 하는 세탁 시설 및 무료 관광 - 일반적으로 그들은 그들이 지. 그들은 영어를 하지 못하는 한국의 장점이 지. 모든 좋은 음식 에도 시장이 많은 곳이었습니다. 매우 멋진 큰 공덕 시장에서 한국식 돼지 고기 너 클. 주인이 나에게 준 무료 한국 위스키.첨단 기술 어느하나는 컨트롤러로 제어할 수 있어서 굉장히 놀라 조명, 에어컨 &amp; tv가 있었습니다. 방은 꽤 넓고 두 번 + 싱글 베드. 깨끗한 화장실과 샤워실, 수압이 좀 낮지만. 포트 및 포트 주변의 여러 레스토랑. 하지만 제한된 주차, 전용 주차장 함께 2( 즉.. 4 베이) 에 속하는 호텔. 때문에 저희는 밤에 에어컨이 바닥 난방 시스템이 있고, 밤에 철퍼덕 소리가 있다. 체크인 했을 때는 무료 세면 용품 제공: 칫솔, 면도기, 등이 있습니다.그것은 4 개의 객실과 더불어 작은 오두막집이었다. 그러나 침대 호텔보다 매우 좋았다. 장소의 주인은 매우 상세한 사람이었다. 그리고 그는 장소를 위해 많은 것을 많이했다. 나는 이른 겨울에 있었는데, 따뜻 했든 (나는 서울 출신 이었든) 전형적인 제주 경치와 바람을 즐길 수 있었다.제주여행 중 2일을 묵었던 곳입니다. 친절한 사장님 덕분에 길을 잃고 헤메다 차를 얻어타고 숙소로 돌아오기도 하고, 밤늦게 들어올때도 픽업해주셔서 편히 돌아올 수 있었습니다! 깔끔하고 조용해서 더더 좋았던 곳입니다.애견동반이어서 선택한 곳인데, 주인분도 너무 친절하시고 좋았음. 세세하게 챙겨주셔서 감동받았다. 방도 괜찮고 경치도 너무 예쁜곳. 재방문 의사 있음!야경이 너무 예뻣던 곳.. 방에서 바다도 보이고 고깃배 불빛이 너무 좋음 제주다운 정경과 깨끗한 시설이 마음에 듭니다.그것은 바다의 경치와 함께 머물 수있는 편안하고 깨끗한 호텔이었습니다. 비치 &amp; 레드 &amp; 화이트 말 모양의 등대가 근처에 있으며 동문 시장에서 택시 (8500 krw)로 약 10 분 거리에 있습니다.조용한 지역에서 더 오래 머 무르려면 Harmony Resort가 좋은 곳입니다. 일과 여행 후에 휴식을 취할 수있는 소파와 커피 테이블과 멋진 침대가 있습니다. 내가 머물렀던 스튜디오에는 요리 할 수있는 기회가 있으며 큰 냉장고가 있습니다. 광범위한 요리 또는 바비큐를 위해 요리 및 웍룸이 설치되었으며 저녁에 가족 및 친구와 함께 보낼 수있는 야외 테이블이 여러 개 있습니다. 하모니 리조트는 아이들을 환영합니다. 전망대, 그네 및 놀이를 위해 예약 된 다양한 장소가 있습니다. 작은 태양열 온수 수영장도 있습니다. 야외 의류를 세탁 할 수있는 공용 세탁기가 제공됩니다. 전기 자동차의 충전 대가 있습니다. 소유자와 그의 아내는 매우 도움이되고 서비스 지향적입니다.우리는이 장소를 절대적으로 좋아했다. 대도시 생활의 번잡함에서 그러한 변화가 필요합니다. 객실은 넓고 잘 관리되어 있습니다. 소유자와 그의 가족은 최고입니다. 멋진 가족. 우리는이 보석을 발견하게되어 기뻤습니다. 우리는 돌아 오기를 기다릴 수 없다.회사를 통해서 간거라 큰 기대는 안했지만 방도 넓~고 리조트도 작지만 잘 꾸며져있어 부족함없이 푹 쉬고 왔어요! 한 겨울에 갔었는데 창이 두꺼워서 인지 춥지도 않고 잘 지냈구요~  리조트가 큰길가에 있는건 아니라 주변에 걸어서 갈만한 곳은 없지만 차를 렌트해서 다녀서 불편함은 없었구요.  체크아웃하는 날 폭설이 내려서 비행기가 결항되고 난리도 아니였는데.. 리조트 사장님께서 아침엔 차에 쌓인 눈도 같이 치워주시고, 오후엔 공항까진 안전히 잘 갔는지 확인전화도 주셔서 진짜 감동받아서 눈물날뻔 했네요 ㅠ_ㅠ  폭설로 생고생을 해서 당분간은 제주도는 쳐다보기도 싫지만...ㅋㅋ 하모니 리조트는 정말 좋았어요! ㅎㅎ룸 가구들이 연식이 있어보이긴하나 청소상태가 매우 깔끔해서 불편함없이 편히 묵고갑니다 아침에 일어나서 오션뷰가 너무 멋있어요 한림읍에 위치해서 주변관광지 가깝구요 프런트직원분들이 매우 친절하셔서 좋은인상을 가지고 여행마무리합니다^^ 한림에 위치해 있어서 서쪽 바다를 보기에 좋습니다. 해변 바로 옆은 아니지만, 호텔에서 해변이 보입니다.  풍력 발전기가 서 있는 뷰가 멋집니다.  객실 컨디션은 썩 좋지는 않습니다.  침대도 편안하지는 않았고, 화장실도 그냥 가정집 화장실 같았어요.일단 방음시설도 좋고 이동하기 편한 곳에 위치해 있음. 호텔에는 수영장도 있었지만 애기들이 너무 많아 이용이 어려웠음. 시설은 깨끗했음. 공항이랑 가까워서 좋음해안뷰로 하면 전망이 참 좋습니다. 하지만 침대 스프링이 오래되었는지 허리아픈스프링이랄까.. 그것만 빼면 전망도 좋고 물도 잘 나오고 가격대비괜찮은 편입니다.서해 바다가 가까이에 있어서 바다로 가기 좋아요. 하지만 프론트 남직원의 친절도는 바닥입니다. 고객 대하는 CS 교육이 제대로 되지 않은것 같아요. 인터넷도 안되고 와이파이도 안되어서 말했더니 어쩔수 없다는 답변만.... 참 어이가 없더군요.개인수영장이 딸린 고급 풀빌라라 가격대는 있지만 외국 풀빌라에 뒤지지 않았어요 개인 정원에서 바베큐도 할수있고 가구 하나하나 모던스타일로 신경쓴 흔적이 보였어요 기념일에 가면 로맨틱한 곳2박3일로 4명 가족 여행을 갔습니다. 출발하기 전날 숙소를 internet으로 루온토를 찾아서 출발 전날 오후에 예약을 했습니다 가격은 조금 비싼 편이나 전체적인 service로 보면 적절하다고 생각됩니다. 특히 남자 staff의 친절에 큰 감동을 했습니다. 아침 식사, 간식, 특히 barbeque ,회는 밖에 있는 식당보다 더 청결하고 맛있어 씁니다.    수영장을 매일 cleaning 하여서 주야간 즐겁게 사용할 수 있었습니다.  전체적으로 제주도에 있는 pool villa중 에서 최고의 서비스와 시설을 가지고 있습니다الموقع جيد وتسجيل الدخول كان سهل جداً .. منظر البحر جميل والطاقم العامل لاباس به .. اقمت فيه ليلتين واستمتعت بالمسبح ، اضافة انه يوجد بعض الحشرات الا انهم يحاولون التنظيف بشكل مستمر .. انصح بزيارته للجميع在濟州的第一晚入住，真的非常滿意，是我喜歡的設計風格！房間有很多窗戶感覺跟周圍環景融入覺得非常好，望出去就是景點月汀里海灘了。有人說私隱度不夠，可是明明所有窗戶都是有窗簾，隔音也很好！要讚一下他們有微波爐可以加熱我去東門市場買的小吃和hobong吐司。記住入住前一天留意email，會告訴你房號跟密碼。車可以隨便停，裡面很多車位。早餐本來不期待，雖然還是稀飯可是很好吃阿！有問題可直接發email，回得十分快。雖然今次去陰天又飄雪沒能看到放晴美景有點可惜，但還是很滿足。下次想夏天去濟州時住住看。월정리 해수욕장까지 도보로 10분이면 이동 가능합니다. 비치뷰 룸이라 좋고 독립적이라 편했지만 통유리라 밖에서 너무 잘보여서 블라인드 올리고 있기가 힘들어요 이거 말고는 모든게 만족스러운 호텔이었습니다~정말 저렴한 풀빌라라 큰기대는 안했는데 너무 좋았습니다.  엄청 크거나 그렇지는 않지만.  깔끔하고 있을건 다 있어요 눅눅하다는 평이 많아서 걱정했는데 제가 방문했을때는 괜찮았습니다.  풀장은 둘이 이용하기 좋았고, 깊었으며, 튜브를 빌렸는데 튜브가 귀여웠습니다.  추워서..물놀이를 많이 못해 아쉬웠고요.... 또 자전거를  빌릴수가 있는데.. 처음에 빌려줄때 보증금&lt; 이라고 말해서 돌려주는건줄 알았는데  그냥 내고 빌리는거였고요.. 빌리는 금액은 한개당 5천원 정도였어요..  비싸다면 비싸고 싸다면 싸고... 빌리면 하루종일이니.. 꼭 가자마자 빌리세요 ㅋㅋ  자전거 타면 금방 월정리 카페거리까지 갈수 있습니다. 반대쪽으로 가면 등대가있는 조용한곳도 나오고요 위치도 적당했어요.. 시끄럽지 않고..이번에 10월에 남편이랑 제주여행가면서 처음가봤는데, 먼저 가봤던 언니가 추천해줘서 가게됐어요. 월정리 해변 바로 주변이라서 저녁엔 걸어서도 월정리쪽가서 카페를 가도되는 그런 거린데, 각각 개인 방 마다 pool이 배정되어있어서 애기들이랑 같이 가도 너무 좋을것 같아요. 다만 오픈형이라 밖이 보이는 pool이라는점만 참조하심 될것 같아요. 아침도 맛있는 죽을주시고, 무인형이라 언제든지 예약하고 원하는 시간에 들어가실수도있어요. 완전 추천합니다. 진짜 이뻐요.출장중에 많이 이용하는 호텔로 깨끗하고, 서비스가 좋와서 계속이용 중입니다. 무료와이파이, 무료 주차등의 서비스와 위치의 적합성 때문에 공항과 맛집을 다니는대도 좋음.로비는 작고 앉을 곳이 비좁긴 하지만 리셉션의 지배인이 매우 친절하게 안내해 주었음 객실은 청소상태가 매우 좋고, 바닥과 욕실, 침구 전부 깔끔하여 불편함이 없었음 잘 관리되는 객실을 보는 느낌이었음 다시 방문할 의사 있음 객실마다 무료 와이파이가 있는데 매우 빠름체크인 및 체크 아웃 시에 나는 10월 23일 2016 10월 25일 2016. 그들은 엘리베이터를 이용할 때는 큰 짐이 있을 때. 엘리베이터는 작은 로비. 첫 번째 방이 너무 작은 것. 내가 틀리지 었다. 방은 넓고 사용하는 순간부터 단계입니다. 침대는 깨끗하고 했습니다. 화장실은 좀 오래 되지 않은 깨끗한 새. 청결함은 괜찮은 호텔. 나는 보이지 않는 것이 아침 식사 제공. 본 모든 것들은 로비에서 커피나 차를 직접 언제든지 수 있습니다. 로비에 있는 / 차가운 물은 필터링할 수 있습니다. 나는 많은 밤을 숙박 하지 않기 때문에, 저는 그래도 편안했습니다.장점: (1) 호텔은 찾기 쉽고 잘 알려진 택시 기사; (2) 직원들은 친절하고 도움이 되었다; (3) 방이 매우 큰 (제가 예약한 더블 룸), 매우 깨끗하고, 편안한 숙박에 필요한 모든 건지; (4) 와이파이 신호도 훌륭한 곳; (5) 호텔이 위치한 곳에 위치한 레스토랑, 바, 카페, 굶주리고있다 이 때 도움이 많이 되었습니다!; (6) 저는 스쿠터를 빌려 공원을 무료로!; (7) 공항에서 매우 가깝고!  단점: (1) 직원들의 영어 수준이 심각하게 듭니다; (2) 호텔에서 멀리 떨어져 있는 섬의 주요 관광, 스쿠터를 빌릴 수 있지만 이 방법은 제가 방문한 섬 (제가 강력하게 추천합니다)그랜드풀빌라는 아이들과 함께 가기에 최고의 풀빌라였어요. 중앙수영장도 매우 넓었고, 10명이 한 객실에 들어갈 수 있는 숙소 찾기가 어려웠는데 아주 넉넉하게 잘 수 있었어요.게다가 스파와 수영장이 함께 있어 하루종일 수영하다 추우면 스파에서 쉬다가..아이들이 너무 좋아했어요.그리고 세탁기와 건조기까지 함께 있어 수영복도 바로 세탁해서 말릴 수 있고, 세탁기가 객실내에 있는 리조트는 처음봐요~진짜 대박! 게다가 오픈한지 얼마 안되어 엄청 깨끗해서 더 좋았네요.재방문의사 100%% 완전 추천해요~^^성산일출봉 인근 스파빌. 1층 객실을 이용했는데, 1층은 야외 월풀이 있는 프라이빗한 리조트.(2층은 월풀과 개인풀이 있다고 함) 메인 풀은 5월부터 이용가능하다도 해서 이용하지 못했지만 2층짜리가 한 동으로 구성되어 있어서 각층 1개의 객실 있음. 객실도 아주깨끗하고 테라스에 티테이블과 야외월풀이 있는데 24시간 이용할 수 있어서 매우 좋음. 더블베드가 두개 있고 창밖으로 보이는 풍경도 너무 예뻐서 좋았음  단, 야외월풀을 작동시키면 물이 돌면서 안에 부유물들 나와서 월풀내부 청소관리가 잘 안되는 것 같았음.  주차공간 넓음. 근처에 해안도로가 있어서 산책하기 좋음  Arts Spa &amp; Pool Villa는 10 월 초에 대중에게 문을 열었습니다. 성산 일출봉까지 단 몇 분 만에 유명한 관광 명소와 가깝습니다. 또한 제주 동부의 매우 뜨거운 장소 인 세화 해수욕장까지 해안선을 따라 짧은 운전 거리를 즐기기에 가장 좋은 곳입니다.  매우 새롭기 때문에 항해에서 쉽게 발견되지 않았지만 직원들은 매우 친절했으며 우리에게 리조트를 찾는데 문제가 없었습니다.  아름답게 디자인되어 마치 리조트 구역으로 걸어 들어갈 때 발리 섬 어딘가에있는 것처럼 느낍니다. 그것은 아주 작지만 필요한 모든 것을 갖추고 있습니다. . . 편안한 분위기, 깨끗한 공기 및 일부 녹지, 평화로운. . .  빌라는 매우 단순하고 현대적인 디자인으로 라운지 및 객실 주변에 개인적인 손길이 가미되어 있습니다. 그것은 넓고 모든 것이 새롭고 양질입니다. 야외 스파와 함께 멋진 발코니 공간. 우리는 그것을 사용할 기회가 없었지만 태양, 바람 및 와인 한 잔을 편안하게 즐기고 즐길 수있는 독특한 독특하고 멋진 지역을 사용했습니다.  음식은 의외로 좋았다! 그것은 좋은 프리젠 테이션과 좋은 취향을 가지고있었습니다. 한국 스타일과 서양 요리에 매일 다른 세트 메뉴가있었습니다. 나는 보통의 한국 식당처럼 반찬을 더 주문할 수 있을지 몰랐다. 실제로 당신은 더 많은 것을 요구할 수 있습니다. 나는이 리조트에서 일하는 전체 직원이 매우 친절하며 보살 피는 것을 보았습니다.  근처에 많은 레스토랑이 있습니다. 리조트는 다른 주제로 매달 수업을 계획하고있었습니다. . . 추가 요금이나 빌라 손님에게는 무료이지만 룸 테라스에서 바라보는 이국적인 경치의 호텔 조경과 가을에도 편안하게 즐길수 있는 수영장시설 및 옥상 인피니티풀의 매력이 너무 좋은 호텔.  중문단지에 위치해 있어 근처 볼거리와 맛집이 많아 딸의 생일 여행으로 너무나 좋은 시간을 보낼수 있었내요.바다앞에있어 전망은 좋으나 시설이 너무 노후화되었고 주변에 먹을거리가없어 차로 움직여야하는 단점시설은 노후화되었고  복도 곳곳에서 곰팡이냄새가 남 객실은 그럭저럭  해변 근처라서 조용히 산책하기 좋음 리조트 시설은 좋았지만 난방에 문제가 있었음ㆍ 다른 객실로 바꿔 주지는 않았지만 소형 이동식 온풍기는 가져다 주었음.  바다가 바로 보여 경치는 좋았지만 위락시설이 없어 별로였음.객실은 깨끗해서 마음에 들었구요  다만 아쉬운게 있다면 공항이랑 리조트까지 거리가 좀 있어서 가는데까지 시간이 조금 걸렸습니다한라산 등반 후 호텔 체크인하고 수영장에 들어가니 피로가 풀리네요. 10월이라 쌀쌀했지만 수영장은 29도로 유지하며 이용 가능하도록 운영하더군요. 가성비가 아주 좋았습니다.넓은 객실에, 취사 가능합니다. 거기다 가격까지 매우 저렴하네요. 호텔 중앙에는 실외 온수풀이 있어 수영도 가능합니다. 저렴하고 괜찮은 호텔을 찾으시면 추천드려요. 단점은 바다 근처이긴 하지만 바다는 잘 보이지 않고 차가 없으면 접근하기 힘들다는 점이겠네요.근처에 살고 있기 때문에 이 호텔을 선택하는 매우 중요한 요인이 있는 해변으로 수영장의 존재. 호텔은 버스 정류장에서 멀지 않은 좋았지만. 여태껏 내가 묵어야 하는 차가 있어서 하지 않은 정보는 버스 정류장에서 10분 정도. 이 호텔은 도착해서 공항에서 찾기 어려운 가운데에 있는 작은 주거지역이라 적당한 사람들에게 이 호텔은 섬에 도착했을 때 차. 호텔은 깨끗하고, 욕실, 침구는 깨끗했고 aslo. 방에는 작은 부엌, 아침 식사도 좋았습니다. 차가운 수영장 물도 가끔, 주말, 따뜻한 물이 있을 때 손님들이 었습니다.저는 이곳에 별 3개 있기 때문에  더러운 신발은 대부분 서양인들이 사용한 비누가 샤워를 해야 할 바에, 한국에 살 지원하지만, 이 신발을 비누 및 특정 장소에 예상 공유할 수 있습니다. 딱딱한 침대가 전형적인 한국식으로 딱딱한. 하지만 우리는 우리 자신의 샤워 한 신발을 신고, 딱딱한 침대에 비누 한국 호텔에 기대했던 것. 방은 깨끗하고, 넓고 주방은 놀라울 정도로 좋았습니다. 이 포크 가 필요, 대부분이 서양인들이 생각하지 않습니다 아래 을찾을필요성이. 수건은 수건 크기, 뿐만 아니라 아시아 평벅.  길은 매우 좁고 스 캐리. 이 무서운 진입로, 간판을 신발이 라고 평가하는 비누 없지. 그보다, 이 자 들이 할 수 있는 텐 4. 거실. 우리는 두 개의 침실 4 베드. 우리 일행 중 5 집에서 느껴졌다. 할 수 있는 좋은 크기의 냉장고, 스토브 탑 전자레인지, 전기 주전자는 물 (인스턴트 커피를 가지고), 2 tv, 수영장, 국가 전망을 즐기실 수 있습니다. 내 어머니 마음 놓여 있었습니다. 내 아이들은 큰 거실. 남편과 저 의 개인 정보가 별도의 침실. 저희는 제 3층 계단 액세스, 주차할 수 있지만 쉽게 가깝습니다. 이는 5분 드라이브 씨, 20 - 25분 에서 40분 제주 시내 쪽 관광명소. 전반적으로. 한 가족인 느낌이 아주 좋습니다. 깨끗하고 깔끔했습니다. 제주 여행 시 이용하면 좋을 것 같아요. 식사도 괜찮고 직원도 친절해서 정말 좋아요. 전망도 한라산과 해변을 다 볼 수 있어서 너무 좋았습니다. 다만 서귀포 쪽과 많이 멀어서 해당 지역 방문시 이동시간이 꽤 걸립니다.아들 친구 생일날이라고 여러 가족들이 다같이 모여서 잤던 곳이네요. 생일의 주인공 가족은 수영장이 딸린 풀빌라를 빌렸고 저는 제일 일반적인 객실을 빌려서 묵었습니다. 수영장이 커서인지 풀빌라 크기에 비해 실내는 약간 작았지만 여러 가족들이 지내기에는 충분한 크기였습니다. 야외에서 바베큐 파티를 하면서 넓은 식탁이 놓여져 있어 재미있게 놀다온 것 같습니다. 약간 큰길에서 안쪽으로 들어와 있어서 잘 눈에 띄는 곳은 아니지만 차로 접근하는데 어려움이 없었고 오히려 주변에 건물들이 없어 아늑하게 지낼 수 있었던 곳이네요. 1층에 편의점이 있고 지하에 오락시설들이 갖추어져 있어 가족들끼리 친구들끼리 놀러와서 지내기에도 불편함이 없었습니다. 늦게 일어나 다음날 조식은 먹어보지 못했지만 조식도 제공되기 때문에 다음에 오더라도 편하게 묵을 수 있을 것 같습니다. 프론트 직원들도 친절합니다. 체크인과 체크아웃 모두 편하게 했습니다.깨끗하고 깔끔했습니다. 가족여행 시 이용하면 좋을 것 같아요. 식사도 괜찮고 직원도 친절해서 정말 좋아요.  전망도 한라산과 곽지해변을 다 볼 수 있어서 너무 좋았습니다. 특히 리조트 입구로 들어가는 길에서 제주의 향기를 물씬 느낄 수 있어서 좋았어요. 호텔 방은 크고 넓고 깨끗합니다. 욕실은 크고 깨끗하고 샤워시설도 잘 작동합니다. 무더위 에 에어컨이 있다. 미국의 작은 방에서 좋은 전망을 즐길 수 있어 옷을 수 있습니다. 다만 한 가지는 열이 매우 눈에 띄는 현지 농장 비료 는 냄새가 났다. 베란다 문 열자마자 걷다 보면, 냄새가 나면 순간. 전반적으로 좋은 경험이었습니다!제주도에 한 기본적인 호텔. 방은 괜찮았지만, 수리가 필요하지만 조금. 우리는 먼저 제안함 에도 예약할 수 있는 발코니 없는 방이 있었습니다. 그들이 우리 방에 발코니가 있는 하루 밤 보낸 후 하나의.  바베큐 식당은 아주 좋습니다. 시설과 대형 수영장과 가족 활동 때문.호스텔: 목조 주택. 너무 아름다워. 그것은 사랑스러운 분위기가 있습니다. 나는 그 집을 너무 아름다워서 한 밤 더 머물렀다. 깨끗합니다. 충분히 큰 기숙사. 수건은 매일 바뀌 었습니다. 손님에게 충분한 샤워. 아침 식사는 기본이지만 괜찮습니다. 사랑스러운 정원이 있습니다. 호스트와 그의 어머니는 정말 좋았어. 나는 유일한 외국인 손님이었다. 한국인도이 영빈관을 좋아하는 것 같습니다. 위치 : 근사하지만 좋은 곳은 아닙니다. 더 많은 서쪽에 위치하여 일부 agencys는 호스텔이 픽업하기에는 너무 멀기 때문에 동쪽 코스 투어에 참가하는 것을 허용하지 않습니다. 글쎄, 나는 픽업 지점에 가서 괜찮 았어. 시내까지 버스로 30 분 이상 걸립니다. 더 나은 차를 타십시오. 싸다. 국제 운전 면허증이 필요해.비수기엔 특가가 많이 나오길래 저렴하게 선택했는데  가성비가 짱입니다.  넓고 난방잘되고 온수/수압좋고 와이파이 빵빵하고.. 기본적으로 있을 것들은 다 있고 잘 되어 있습니다.  위치도 관덕정 정류장에서 300m, 동문시장에서 600m 정도인데 주변에 식당, 편의점도 많고 메가박스도 있네요.. 이 정도 가격에 최상인 듯..  단점은 침대 메트리스.. 저는 예비이불하나 더 깔고 잤습니다. 제주국제공항 근처의 시내 호텔로 객실내 크기가 넓직하고 깔끔하나 욕실은 욕조가 없고 작은 편이라 좀 아쉽네요 호텔 근처에 시장도 있고 현지 맛집들도 있어 관광하기 편리한 위치에 있는 호텔이랍니다방이 생각보다 넓었고 시설도 깨끗한 편입니다. 다만 외부 벽이 하나라 외부소음이 들릴수 있고 TV가 작은게 좀 아쉽습니다. 그리고 주기적으로 돌아가는 냉장고 소음이 배치된 위치때문인지 방 전체를 울려서 처음엔 공사소음인줄 알고 잠을 설쳤습니다. 이런 사소한 부분빼면 위치도 괜찮고 전체적으로 만족스러웠습니다.시설이 으리으리하진 않지만 깔끔하고 방이 넓었고 취사시설도 있어서 편했어요 탑동 근처라 구제주쪽 맛집가기도 편했고 공항도 가까웠습니다 늦은 비행기 잠깐 자고 갈 비지니스호텔입니다. 룸바닥이 매우 미끄럽습니다. 조심~ 제주공항에서 택시비 4,000원 아침으로 유명해장국집이 5분거리에 있습니다. 저녁때 한잔먹을 술집도 근처에 있어 좋습니다. 룸안에 조리시설은 있으나 그릇  수저 젓가락 등은 없어요.사드세요.Aewol에 머무르는 최고의 장소. 위치는 숨 막히다. 그것의 자신의 연금에서 바다를 마주보고 있습니다. 연금은 넓고 4 인분으로 충분합니다. 이 건물에서는 요리가 허용되지만, 연금 지역 밖에있는 지정된 지역에 쓰레기와 쓰레기를 버려야한다는 사실을 일깨워줍니다. Aewol에서 가장 좋은 바다 경치와 함께 추천합니다.출발 전 - 예약을 통해 5 박 동안 예약했습니다. co.kr에서 여행 3 개월 전에 도착하기 전에 일정 금액을 입금해야했습니다. 그러나 제공되는 계정 세부 정보는 충분하지 않았으며 언어 장벽으로 인해 프로세스가 크게 방해되었지만 결국 체크인을 한 후에는 전체 비용을 지불 할 수있었습니다 ().  체크인 - 위치는 공항에서 약 15km 떨어진 곳에 위치하고 있으며 연금에는 멋진 바다 전경이 있습니다. 연금에가는 도중에, 일부 식료품 쇼핑을위한 주요 도로에 위치한 지역 슈퍼마켓이있었습니다. 체크인 절차는 순조 롭지 만 사무실이 실제로 지하에 있었기 때문에 처음에는 사무실을 찾을 수 없었습니다 (강한 바람으로부터 자신을 보호 할 수있는 좋은 장소). 도로에 몇 개의 주차장이 있었고, 모든 손님에게 충분한 도로가있었습니다. 우리 연금은 101 명의 방이 었는데 성인 2 명과 10 살과 7 살의 어린이 2 명을위한 최고의 장소였습니다. 그들은 우리가 요리하는데 필요한 모든 것을 가지고있었습니다. 주방 용품, 밥솥 등을 제외하고는 DAISO 근처의 산토 리니 연금 (Santorini Pension)에서 약 3km 거리에있는 인근 24 시간 동전 세탁기를 쉽게 사용할 수있는 세탁기와 건조기를 제외합니다.  그러나 우리에게는 약간의 결함이있었습니다. 우리 제 3의 밤에, 우리는 자동 자물쇠 열쇠가 기능적이 아 녔던 것을 알기 위해 집으로 돌아갔다. 그리고 기술자가 마침내 화장실 창문을 통하여 등을 발로 열기 전에 약 30 분 밖에 기다려야했다, 여전히 작동하지 않습니다. 그들은 우리의 소풍 도중 그금능해수욕장에 편의점이 이 펜션 1층밖에 없어요! 금능해수욕장에서 제일 가깝기도 하구요~  방도 넓긴 하지만, 오래된 펜션이라 감안하고 성수기에 비해 저렴한 가격에 묵었네요!  주인분들 친절한 편이고, 수건 교체도 바로 원하는만큼 해주시고, 1층에 세탁기 이용도 가능했어요! 최고의 호스텔이나 저렴한 한국에서 12일 장변이. 제주도에 있는 아주 짧은 기간 동안, 우리 차를 가지고 있어 후에 공항에서 내려서, 운전을 하는 곳입니다. 할 거라고 생각하지 않는 도시에서 멀리 떨어져 어, 약 한 시간 반 에서 야간 드라이브 낮은 가시성, 바다가 보이는 것은 사실이긴 하지만, 아침에 신선한 바람을 상상할 수 있는 아름다운, 그 새를 축하 곡, 일부 시걸즈 아마, 즉시 취할 수 있는 이미 느낄 수 있었다. 그 어떤 휴가 합니다!   우리는 너무 나쁜 하나의 짧은 밤을 묵었습니다.  하지만 직원들은 말 그대로 영어 (아주) 가난한, 한 신체 언어 인치자를. 이 때 여행을 한다면 재미있는 부분이 지?Остановились здесь, так как недалеко пляж Хепчдже. Номер очень большой, чистый. В номере есть кухня, очень удобно приготовить, например, завтрак. Персонал доброжелательный и услужливый, правда не говорит по английски, но это не стало большой помехой. Есть небольшой магазинчик. В пяти минутах парк Халлим.Great and clean room. Ondol floor is ready when we are checking in making us feel very warm from the cold weather outside. The corner room in the Suite able to view 2 different types of awesome beach/sea view. The beautiful sound of wave making me do not wish to close the window at this cold weather. There also a car park for the vehicle behind the hotel. The convenient store is just at the ground floor of the hotel, it is very convenient to everything. However, the owner cannot understand English, if you do not have any request, you may consider this hotel. The restaurant along the main road are close very early. It may hard to find the food after 9pm.위치는 좋지만 룸컨디션은 별로예요. 구석구석 먼지도 많도, 리뷰보고 이용했는데 사진과 다른 룸에 매우 실망했습니디. 직원들은 사무적이고 별로 친절하지 않습니디. 다시 이용할 일은 없을 듯 합니다곽지 해수욕장 바로 앞이라 뷰가 정말 좋습니다.  편의점, 맛집 등 가깝고 여행하기 좋은 곳입니다.  1층 로비에 오픈된 공간에서 바다보며 맥주 한잔 하는 것도 좋습니다. 룸도 청결했습니다.  재방문 의사 있습니다. 씨뷰만 훌륭한 호텔. 4월초 바닷가 앞이라 썰렁할 때인데 중앙난방 방식이라면서, 난방을 끄고 에어컨을 켰다고 했음. 그래서 밤에 많이 추웠음. 난방 불가라고 함.  룸 바닥의 카펫은 청소가 안되는지 남편과 아이가 계속 재체기 하고 2박째에는 콧물나기 시작했음. 3명 예약했는데 모든 애머니티(수건,슬리퍼,칫솔등)는 2명꺼만 준비 되어있음.가격대비 인테리어가 멋진 숙소입니다 지어짅 얼마 안되어 매우 깨끗하고.. 그렇게 넓은 편은 아니지만 바닥도 나무재질이고 짙은 색상의 모던한 인테리어가 인상깊었습니다 호텔에서 5분 거리에 바로 아이들이 놀기좋다는 곽지해수욕장이 있었느나 아쉽게도 태풍시즌이라 모래바람 사이에서 사진한장 겨우 건져왔습니다 룸서비스는 없었고 조식만 가능하나 건너편에 쌀국수 잘하는 집이 있어서 거기로 갔습니다5만원 안쪽에 특급호텔 시설을 바라는 분들이 꽤 많네요. 비수기라 저렴하게 이용했고 곽지과물해변과 가까워서 좋았습니다. 조금만 걸어가면 해변과 식당이 있어서 괜찮았어요. 다만 내부가 깔끔하게 정돈된 느낌은 아니라 청결에 신경썼음 더 좋았을 것 같아요.왼쪽으로나가서 오른쪽으로 가면 3분안에 번화가가 나오는데 호텔위치는 정말 신기하게 조용합니다. 밤에 뭐먹으러 가기도 좋고 교통도 편하다는게 가장장점이였네요 ㅎㅎㅎ 조식은 늦게와서 못먹었다는게 함정 ㅠㅠ제주도에 갔을 때 여기에 머물렀는데 방이 깨끗하고 넓어서 좋았어요!! 조식도 맛있게 나오는 편이구요ㅎㅎ 한식이랑 양식이 다 있어서 좋았어요!!깨끗,,깔끔 ,,친절해요 너무 좋은 선택이었어요  직원들이 정말 친절해요  공항과 가깝고 교통 행정 쇼핑의 최상의 위치에 있네요. 주차장과 로비가 좀 작지만 직원들의 친절과 배려에 안전하게 마음놓고 쉬다갑니다.비수기라 그런지 가격이 싸네요 조식도 먹을것만있어 알차고 커피가 대박 케냐커피든가 싱글오리진 합리적인 선택이었네요 5일동안 제주여행에서 가성비최강이네요 공항인근이라 추천합니다가성비굳! 새로오픈한호텔이여서 깨끗하고 편안하다 공항이랑도가깝고  편의시설도 주변에있고 조식도  맛있었다!공항에서 25분 거리에 대도로변에 위치하고 있어서 밤에 도착했는데도 한눈에 보여서 쉽게 찾았어요. 리조트인데 거의 호텔급 침구로 너무 깨끗했구요 아기랑 왔는데 전동차에 수상자전거 놀이터 즐길게 너무 많아서 결국 퇴실하고 한시간을 넘게 놀았네요. 다음에 와도 여기 올거 같아요 리조트 안에 놀거리가 너무 많아서 좋아요객실도 깨끗하고 넓고 직원도 친절함 장난감차 타는 아이들이 많이 좋아라함  딱히 불편한점도 없음. 실내 바비큐장은 고기집 같아  식당에서 먹는 거 같이 좋았음.Ubytování ve vlastním domě s oddělenými pokoji pro muže a ženy. S manželkou jsme pro sebe dostali malý pokojíček s palandou Veškeré vybavení je k dispozici a dle libosti si můžete dát čaj, kávu atd. Pan majitel je velmi mílý a moc ochotný, mluví anglicky a ráno udělá snídani. V přízemí má společenskou místnost  s pianem, tahací harmonikou, kde se smí pít alkohol.조용한 숙소와 편한 잠자리~ 아침에 사장님의 멋진 토스트와 사과!! 제주도의 가을은 여기서 제대로 정리했습니다우리가 예약한 트윈 룸, 트리플 룸 이지만 호스트에서 우리를 보자. 방은 크고 만족하는 방에서 자유롭게 이동할 수 있습니다. 위치는 정말 행복했고 로컬 주거 지역 내 동생 " 블렌드는 주민들은 " 한; ) 전반적으로 깨끗함이 좋은 곳에 있었고, 매일 청소가 되긴 하지만. 저와 제 동생은 그가 따뜻하게 인사 하고 도움이 되었습니다. 그 를 보자 우리의 옷 도 한 천으로 랙 건조한 방. 그는 한국어를 잘 도 주인이 하는 말, 중국어 및 일본어, 영어를 조금 만. 하지만, 그의 영어 실력도 꽤 좋은 문제가 없습니다. 제주도에 다시 온다면 미래. 이 호텔에 올 다시 오 설명하겠습니다. 좋은 작업을 계속 하십시오.We took standards twin - which located at the second floor. the room is huge with plenty space to put luggage. large bathroom also. Air-cond/ heater, water heater, jug kettle is provided. No lift in the buildings, so if you have big and heavy bags its quite hassle to carry in steep and narrow staircase.  the staff were friendly and very helpful for all your needs and complaints.We stayed here overnight after arriving late to Jeju by plane. It cost about ￦8,000 to take a taxi here. The room is a standard one room apartment with no kitchen, refrigerator, and wet bath. It was a good place to stay, but there aren\'t many attractions nearby.Molto scenografica la piscina in camera con vista mare, camera pulita ma per il prezzo forse mi sarei aspettata di non trovare dei dettagli fuori posto tipo, mattonella mancante nel bordo piscina, pavimento con dei rattoppi in un angolo e fili della corrente penzolanti nel comodino. a parte questi dettagli la struttura ha un alto potenziale!狭才海水浴場を利用するために3泊4日で滞在しました。お部屋はシービュールームを予約したのですが、最上階のお部屋で窓一面に海が広がる素晴らしい景色が見れました。天候が悪い日もあったのですが、この景色のおかげで旅行気分が楽しめました。 お部屋は広々としていて快適です。バスルームがコンパクトですが、この眺めがあるので許容できました。ホテルの施設はルーフトップにある景色が見えるベンチのみですが、建物内にはコンビニとカフェがあるのでちょっとした飲食や必要なものの買い物には困りません。日本語が話せるスタッフがいるのは助かりました。英語は殆ど通じません。 向かいがすぐに海水浴場なので、いつでもふらりと海水浴を楽しんだり、海辺を散策したりとビーチを存分に楽しむことができました。Hyeopjae Beach 맞은 편에 위치하여 멋진 전망을 제공합니다. 호텔 근처에서 식사 장소가 있습니다. 직원도 친절합니다. 내가 예약 한 방에는 커다란 창문이있는 해변을 향한 방 안에 거대한 "욕조"가있다. 너무 실용적이지는 않지만 아들은 그것을 좋아합니다. 그렇게 실용적이지 않은 한 가지는 샤워 공간입니다. 샤워 후에 화장실 바닥이 젖어 있습니다. 내가 머물렀던 방에는 마모의 흔적이있다. 호텔 바로 맞은 편에 무료 주차장이 있습니다. 우리가 단지 1 박 동안 머물렀던 것에 따라 총체적으로 그것은 멋진 체재 다.직원 분들도 친절하고, 숙소도 깨끗했고, 조식도 좋았습니다. 바다도 가깝고 서우봉 산책도 걸어서 할 수 있는 거리어서 좋았어요. 루프탑 수영장도 가족들과 놀기 좋았습니다.This place was fine, however the pictures were a bit misleading. A little more run down and more like a backpacker motel. The beds were uncomfortable and the room was musty with the floor peeling in spots.  The manager was very nice with great English and lots of recommendations. It was very easy to get around by bus and was the starting point of an awesome East Jeju Nature tour bus line, the 810. This island is beautiful and the stay here was fine, just different than expected.Мы жили неделю в этом отеле, нам понравилось. Номер был в корейском стиле: деревянные стены и потолок, низко повешенное зеркало в комнате. Но с кроватью, точнее с двумя сдвинутыми, очень удобными. Спать в таком номере прекрасно: тихо и очень комфортно. Как на даче в пригороде. Хозяин англоговорящий, очень приятный молодой человек, каждый день общался с нами, помогал с выбором мест для ужина и пр. Отдельно хочу похвалить прачечную: за 2 часа постирают и высушат огромную кипу одежды, пользовались 2 раза, перед отъездом нам даже всё сложили вплоть до носков по методу Кон Мари. Территория отеля зеленая, вокруг лес. Мы арендовывали машину, что оптимально на острове, но автобусные остановки тоже рядом были. В отеле есть небольшой магазинчик с едой и прочими вещами первой우리는 신혼 여행으로 제주도를 방문했습니다. 이 호텔은 숙박을 해변 근처에, 조용하고 편리한. 그들은 객실 내부에서 스스로 요리할 수 있습니다. 우리는 아주 편안했고 좋았다. 가격이 적당하다. 그러나 아침 식사가 형편 없었습니다. 우리는 적극 이 호텔을 추천합니다!호스트는 아주 친절하고 도움이 되었습니다. 그는 우리를 픽업해서 근처에 있는 동안 애월 버스 정류장에서 길을 잃었다. 이른 체크인을 할 때까지 우리는 9 편입니다. 방은 깨끗하고, 아름답게 꾸며져 있는 쾌적한 작은 부엌 이다. 자신을 요리할 수 있다면 그 이상의 여가시간! 또한, 이 곳은 아주 아름다운 주변 환경. 평화로운 바다를 걸어서 갈 뿐, 좋은 식당 GS25. 이 위치는 버스 정류장 (20 분 거리에 있는) 을 타고, 그리고 제주시. 할 수 있는 아주 좋은 대중 교통 수단이 없고. 차를 렌트 한다면 강력 추천합니다!По состоянию номеров,видно что отель достаточно новый. Но наше знакомство с ним началось не очень хорошо! Наш семейный номер на 4 человек включал только 2 кровати (1 двуспальная и 1 односпальная),спросили как спать 4 человеку,предложили спать на полу! После не долгой дискуссии,в номер принесли ещё одну кровать. При бронировании отеля,выбрали вариант с завтраками. Что сказать,если вы любите хлеб с соком,вам сюда. Кофе машина сломалась,к хлебу предложили джем и ореховую пасту,не густо,так сказать. Мы остались крайне недовольны этим,при этом мы не самые дотошные гости. Рядом с отелем есть магазин GS 25,и кафе с не самыми демократичными ценами!  Правда ,вид из окна немного сгладил ситуацию,берег в 300 метрах(не пляж). Бассейн заливается ледяной водой,что тоже не очень.25000원에 일박하였습니다. 공항에서 그렇게 멀지 않으므로 늦은시간 도착해서 렌터가 있는 사람은 하루 묵으면 좋을 듯.. 네이버 검색결과 안좋은 리뷰가 있긴 한데 그정도는 아니라 봅니다. 다만 시설이 열악한건 사실임. 그치만 방 넓고 온수 따뜻하게 나오고 크게 불만 없었습니다.We stayed at the new wing of the hotel, at another building on the 3rd floor. We had a balcony facing the ocean. Room was true to picture. All basic amenities was provided even a little hair tie. Floor was heated too.  Aircon worked well. All adjustable. (Unlike some places with presets.)  There\'s a starbucks in front of the hotel with a good view. A few cafes nearby. Nice area 10 mins drive from aewol. Regret not staying there longer. Would love to come back again.늦은 휴가겸 태교여행으로 선택한 제주.. 8월의 마지막 날이지만 숙박비를 포함한 모든 여행자 물가가 의외로 비쌌어요.. 아기도 함께하는 여행이라 숙박업체 선택이 제일 신경쓰였어요.. 1급 호텔을 가고싶었지만 너무 비싼 요금때문에..ㅎㅎ  폭풍검색 끝에 신규로 오픈한 호텔 몇군데 찾았는데.. 예약이 가능한 객실이 있는곳이 별로없었어요.. 리치호텔... 아무리 검색해도 후기가 없어서 고민 많이했는데.. 규모가 크진 않지만 저렴한 가격에 애월바다가 보이는 월풀 욕조가 있는 깔끔한 호텔이예요~ 가성비 좋은 제주 숙박업체예요~ 강추합니다^  ^신축건물이고 모던한 방 디자인 인테리어 스파실 침실 모두 좋아요. 펜션처럼 음식해먹을 수 있는 인덕션도 있더군요. 그런데 그릇은 없었어요.방에서 보이는 사진 좋네요. 위치 보기, 성산일출봉과 가까운 곳에, 이 방은 꽤 비싼 이유는. 성산 일출봉 은 여러 해산물 식당을 찾을 수 있다. 흥미로운 아무것도 할 수 있는 지역을. 마트와 레스토랑이 있지만 호텔 앞에 있다. 저는 이 호텔을 추천하지 않을 경우 오랜 시간을 보낼 곳을 찾는다면 실내. 저는 전혀 생각 하지 않은 방 청소도 있기 때문에 나는 냉장고에서 유리 됩니다 사용할 수 있습니다. 저와 제 남편은 갑자기 일어나 새벽 2시까지 잠을 잘 수 있기 때문에 침대는 편안하지 않고 갑자기 4 문에 노크. 를 선택하지 않은 때 에 전화.가고 싶은 것을 사면, 아마도 제 남편이 한국, 우리에게 비싼 마트 직원들의 청원 을 하다. 뭐? 이렇게 보면 가난한? 나는 한국 문화를 이해하지. 아마 그들은 외국인만 열면? 어쨌든 저는 캄보디아, 같은 말을 하지 않는 태도.its location is perfect if you want to visit Seongsan Ilchulbong or Udo. It takes less than  15 minutes to get there by taxi. The room was clean and the service was good but there was nothing much nearby. We had to walk for about 15~20 minutes to any restaurant. The area is very quiet though.   The hotel itself is quite far from the airport but we were able to get there by bus.여름 성수기에 방문했는데 가격적으로 괜찮았습니다. 리모델링을 했는지 신축을 했지는 건물, 시설물은 위생적이고 깨끗한 편이었으나 제주의 습한 기후 탓인지 벽지 등에 곰팡이가 슬어 제습기를 가동하고 있었으며, 곰팡이를 지운 흔적이 남아 있어 조금 불쾌했었습니다. 한여름 이외에 방문을 권장합니다.성산일출봉 또는 우도가실분은 전날 여기서 숙박하시면 될듯합니다. 객실룸 상태는 가격대비 좋습니다. 다만 금연객실로 달라고 했음에도 불구하고 담배냄새가 나서 그 부분만 별로였습니다. 하지만 가격대비 룸상태는 훌륭한 편이라 관광일정이 빼곡히 있어 호텔이용을 안하는 날에는 이곳을 이용하면 가성비가 좋을듯 합니다.일단 해안도로 근처라 주변 산책 하기 좋았구요 딱히 주변 시설을 이용할건 없었지만 펍이나 편의점이 있어서 아니면  차 타고 조금만 가면 노형 시내가 나오니 그렇게 문제가 될건 없다고 생각합니다  제가 머문 곳은 신관 룸이였는데 싱글베드1개와 더블베드1개가 있는 방이였습니다(아마 신관에 있는 룸이 다 호텔식 방만 있는 곳 같고 구관이 주방이 있는 펜션식 룸인거 같습니다)   룸컨디션이 정말 좋아 이 정도는 아닌데 그냥 겉보기에 괜찮을 정도였어요 한 가지 계속 눈에 띄는것은  방 아래쪽 벽지들이 다 긁혀있었는데 복도의 벽지들도 다 아래쪽 벽지들이 긁혀서 튿어져 있더라구요 여튼 이러 저러한 보수들은 신경 안 쓰시는거 같더라구요 사람 손때가 너무 묻어있는 그런 느낌이 많았습니다 군데군  데 오염이 있는 부분이 있었습니다 규모가 크진 않지만 편의점 바베큐 수영장 등 편의시설이 잘 되어있어요 세탁시설도 있구요 바로 앞에 도두봉이 있어 아름다운 전경도 볼수있어요 해안도로에 있어 오션뷰 객실 전망이 멋집니다공항에서 10분정도 거리에 위치해있습니다. 해안도로 바로 옆이라 전망이 좋고 1층과 도보 5분거리에 까페, 편의점, 약국 등 편의시설이 고루 갖춰있습니다. 리조트 본관 이용했는데 사진과 동일하게 욕실 주방 침대 등 굉장히 깔끔합니다. 크진 않지만 풀장도 관리가 잘 되고 있고요 바베큐장도 무료로 이용가능해요. 야자나무 조경이 굉장히 잘 되어있어서 제주시 근처인데도 휴양지 느낌이 많이 납니다. 자전거도 대여해준다고 하는데 이용은 못해봤구요 바로 앞에 도두봉이 있어 산책코스도 잘 되어있습니다.공항에서 필드 1km 10분 택시로.  80k 최저 2박을 예약했는데 작업하는 TV 및 에어컨 시설이 있습니다.  인터넷 및 갔습니다.  꽤 딱딱한 침대.  타피에이의 개선이 필요한 - 유지 보수가 부족함, 자신의 시설(Co 세도 er, 칫솔)  공항을 예 들릴 수 있습니다.  전반적으로 괜찮았어요.공항에서 가까움. 우리는 특별한 $110.00 온라인을 통해. 있어 보이는 (하). 깨끗하고 좋습니다. 우리의 가격은 있어. 예약시 4 사람 많은 조금 실망했습니다. 에어컨은 약하고 일반적인 불만 이다. 요금 조심하세요. 와이파이 무료 및 확인.세탁기, 다리미 등 사소한것까지 갖추어져있어 묵기에 쾌적하고 편리했습니다. 바로 앞에는 바다가 보여 창밖으로 보이는 뷰가 탁트이고 좋았구요. 사장님 두분께서 친절히 맞이해주시고 꼼꼼히 신경 써 주셔서 굉장히 감사했습니다! 소수의 인원도, 여러명도 편리하게 이용 할 수 있을만한 구조라서  커플도, 다수의 인원이 있는 그룹도 쾌적하게 묵으실 수 있을 것 같다는 생각이 들었습니다. 좋은 숙소에 묵어서 더욱 즐거운 여행이 되었던 것  같아요. 강추! 2박 묵었어요~ 우선 공항에서 가까워서 좋았어요. 숙소가 바다 앞에 있었는데도 깨끗한 바다냄새만 나고, 생선 비린 냄새는 나지 않았어요. 주변도 주택가다 보니 조용합니다. 숙소 초입에 동네 마트랑 약국, 편의점도 있어서 편했습니다.  사장님 두분도 너무 친절하세요!!! 숙소앞에서도 마주쳐도 부담없었어요...엄청 잘해주세요ㅎㅎㅎ 숙소 주변에 마트 있는지 여쭤봤는데 일일이 위치 다 알려주시고, 놀러나가는데 어디에서 뭘 먹으라고 추천도 해주세요ㅎㅎㅎ 첫날 밤에 바닥도 차갑고 화장실에도 찬물밖에 안나와서 죄송함을 무릅쓰고 늦은 시간에 연락드렸는데도 사장님 두분 오셔서 확인해주시고 비어있는 따뜻한 방에서 잘 수 있도록 신경써 주셨어요ㅠㅠ 화장실에도 샴푸나 샤워용품 다 구비되어 있고요. 수건도 넉넉하게 바구니에 챙겨주셨어요. 토스트 먹을 수 있게 식빵과 초콜렛도 준비해주셨구요! 잼하고 버터도 냉장고에 준비해주셨더라고요. 아침에 잘 먹었어요ㅎㅎㅎ 침대가 생각보다 높아서 좀 딱딱하겠다..생각했는데 전혀 아니였어요!!! 베개도 폭신폭신하고 매트리스도 폭신폭신합니다. 그리고 여분 침구류도 챙겨주셔서 편하게 사용할 수 있었어요. 전체적으로 너무너무 만족했고요, 정말 다시 방문하고 싶은 숙소입니다. 사장님 두 분도 다음에 또 뵐 수 있었으면 좋겠어요~시설들이 좀 노후가 되어 있어요.  넓지만 딱히 좋은건 없거 단체로 오면 괜찮겠다는 생각은 들더라구요!  진짜 한 15명 정도?! 콘도형 정도로 생각하시면 될거 같아요. 가끔 거름냄새 올러올때 있어요.  넓긴넓어서 여러가족 여행왔을때는 좋겠지만.. 또는 친구들 여러명 왔을 때도 좋을거 같은데 연인끼리는 비추  그리고 제가 갔을 때 근처 축사에서 작업을 해서 소똥냄새가 어마어마 했어요 가족여행으로 갔었어요~ 식구가 대식구라 좁으면 어쩌나 걱정했었는데 숙소도 넓고 넘 예뻤어요~ 아빠가 장애가 있으셔서 휠체어 사용을 하셔야 했는데 그것만 빼곤 넘 좋았어요~행사차 십여명이 두 채를 빌려 묵었습니다.  집 구조가 방 3개에 거실과 주방 등이 있는 형태지만, 2 베드의 방은 독채식으로 분리할 수 있어 편리합니다.  안방격인 트윈베드가 단체로 오긴 좀 아쉬운 점이 있지만, 3개의 화장실과 2군데의 주방시설이 소규모 단체 숙박엔 편리한 구조라 봅니다. TV는 거실과 독채에 각각 있고, 인터넷 잘 터집니다. 아쉬운 점은 5월임에도 주변 숲때문인지 파리 모기가 있고, 전자렌지가 없으며 냉장고가 작다는 정도를 들 수 있습니다. 암튼 가성비로 볼 때 탁월한 선택이 될 수 있다고 봅니다.이거 생각보다 힘들어 하는 곳이었고 6명 제주의 보석. 저는 책 였는데 SGD 257.94 (USD 204.29) 아고다를 통해. 살펴보기, 너무 좋아서 사실.  프로: 이곳은 거대한, 우리 2 퀸스 사이즈 침대, 싱글 침대 2, 3 식 객실, 2 부엌, 티비 2, 발코니 2, 거실 1, 심지어는 화장대 1 시청 방법. 퀸 사이즈 침대도 폭신하고 정말 편안하게. 무료 와이파이도 아주 좋았습니다. 서비스는 꽤 순물질, 중국어 및 영어 전혀 문제만 이야기. 우리 체크인 및 관리하는 사람에게 봉사하는 여자들은 친절하고 신속한 저녁 식사. 경치가 좋은, 이곳은 꽤 조용한, 우리는 아주 잘 잤다.   단점: 차가 필요하기에, 아주 원격 및 리뷰 읽었는데, 심지어 택시가 길을 잃다. 다음, 체크 인 시간은 꽤 늦게 4pm, 우리가 돌아보고 영겨에 였지만 친절하게도 2pm 의 짐을 맡길 수 있는 우리 방은 준비와 통화. 싱글 침대의 베개는 모든 플랫 기다리기보다는 힘들어. 다음, 사용할 수 있지만 핸드 타올 보다 요청 시. 이 하드 를 받은 방은 코딱지 하나, 개미가 득시글한 및 전원 포트. 다른 방에는 침대 옆의 램프가 까다로운.  또한 예약된 저녁에 각 30 싱가폴 달러 $무제한 바베 큐 돼지고기가, 스프와 측부를 모두 맛있어요. 나는 다시 돌아왔는데 모오이데 걸리더라도 전반적인 숙박.실내 인테리어가 화려하진 않지만 새것들이라서 근본적으로 깨끗함. 엘리베이터 등 기본시설에 문제 없으며, 주차는 앞쪽이 아닌 옆골목 쪽에만 하면, 밤낮으로 문제 없었음. 큰길가 이었음에도 차소리에 불편함 없었으며, 가격대비 적극 추천하고 싶은 곳임. 터미널 옆이라서, 음식점도 많고 특히 24시간 하는 식당(순두부집) 도 있었음이른휴가로 친구들 4명과 제주 다인리조트의 카라반에 3박묵었습니다. 두달 정도 전에 예약하여 카라반치고는 상대적으로 저렴한 가격에 이용할 수 있었다는 것은 큰 장점이었습니다. 위치도 제주공항에서 그리 멀지않은 애월해변근처에 위치하여 접근성도 용이합니다. 카라반은 4명이상 들어가도 될정도로 아늑하고 깔끔하여 마음에 들었습니다. 카라반객실은 일반객실과 다르게 매일청소는 제공해주지않는다는 것이 단점이었습니다. 기본 제공되어있는 어메니티(휴지,치약,비누,수건)정도만 교체되었고 에어컨을 오래가동 시 물이 떨어지는 상황이 있긴하였습니다. 카라반에 딸린 바베큐시설을 이용할 수 있다는것이 메리트입니다. 카라반이라는 특별한 공간에서의 추억으로 좋은 곳이라고 생각됩니다.겉은 조금 허름해보이지만 내부는 것보다는 훨씬 깔끔해요  비지니스 호텔 같은 느낌 공항에서 정말 가까워서 일찍 출발하는 사람들에게 좋을 것 같아요어른2, 중학생1, 초3 1 이렇게 네가족이 연휴 마지막날 묵었습니다 새벽 비행기라 일부러 공항 앞에서 찾았고, 저렴한 가격에 온돌룸으로 예약을 했습니다  방은 따뜻했고 리모델링을 해서 침구류와 욕실 포함 전체적으로 깨끗한 느낌이었습니다  장점 1. 공항 차로 5분 2. 호텔 1층에 24시간 코인빨래방 (주중 낮동안은 빨래를 맡기면 건조 후 찾아갈 수 있는 서비스를 제공) 3. 4인 예약시 1인침구 4개(온돌방기준), 물 4병, 수건 넉넉하게 제공  단점 1. 옷장이 협소(옷걸이 2개) 2. 욕실 문이 변기 바로 앞이라 문을 열면 무릎이 닿게 됨  다음에 기회가 된다면 조식과 렌트카 서비스도 받아보고 싶네요 지난 10월에 두 차례 1박씩 ,총 2박을 했어요. 우선 호텔 시설은 오래되어 큰 기대는 안하시는게 좋아요. 하지만 오래되었어도 정리정돈된 상태라던지 필요한 것들은 다 갖춰져 있어요. 트윈룸에서 숙박을 했는데 침대도 적당히 편안하고 하루이틀 묵기에는 괜찮아요.  처음에 6층에서 숙박했는데, 객실에서 제주공항이 보여요. 비행기가 뜨고 내리는 장면들이 보이는데, 특히 좀 어둑어둑해지는 무렵에는 정말 멋있었어요. 게다가 공항에서 가장 가까이에 있는 호텔인 것으로 알고 있고, 제주도청과도 걸어서 5분 정도 거리에 있어서 번화가나 연동, 바오젠 거리 등으로 나가는데도 괜찮은 것 같아요.  고층에 공항 전망의 객실을 받을 수 있다면 가성비가 훌륭한 호텔이 되겠죠.방은 나름 깔끔한 느낌 예전에는 베니키아가 아니었는데 인수를 하면서 리모델링 했나바요  외관도 조금 손보면 괜찮지 않을까 싶네요 ㅋ베니키아 호텔을 보통 엄청 좋은 부띠끄 호텔 클래스는 아니지만, 충분히 행복하게 여행을 계속할수 있도록 하는 호텔입니다! 한마디로 추천합니다 ㅋㅋㅋ 깨끗해요!다음날 새벽 비행기라 공항 근처 숙박을 잡은거였음. 근데 가격대비 매우 좋음. 미리 말하면, 다음날 새벽에도 호텔에서 셔틀로 데려다 줌. 관광호텔이라 그런지 매우 넓었음. 나는 둘이서 썼지만, 4인가족도 충분히 묵을 수 있을만한 사이즈였음. 렌터카 빌린곳과 가까워서 더 좋기도 했고, 무튼 가격대비 정말 괜찮은 호텔임. 직원들도 매우 친절.안경을 쓴 직원은 좋지 않습니다. 호텔은 실수를 저에게 사과하지 않았다. 그는 추가 비용을 지불하도록 요청했습니다. 그리고 침대에는 머리카락이 있었고 거울에는 모기 시체가있었습니다. 여행의 마지막 날 이었지만 다시 제주도로 가고 싶지 않습니다. . .우리가이 호텔에 머물기로 결정한 두 가지 이유는 (1) 무료 공항 교통편을 제공했고 (2) 자전거 두 대를 가지고 여행 중이었고 대형 호텔 이었기 때문에 우리는 자전거 상자를 계속해서 가지고있을 수 있기를 바랬습니다. 며칠 동안 우리는 제주를 자전거 타기를하고있었습니다. 우리가 호텔에서 체크 아웃하기 전에, 우리는 보관을 위해 그들과 함께 두 개의 상자를 남겨 두는 것이 좋을 것이라고 우리에게 물어 보았다. 그러나 우리가 호텔에 돌아 왔을 때 아무도 상자에 대해 알지 못했습니다. 우리가 체크인 한 날에 직원에게 점원에게 확인하라고 직원에게 요청했을 때, 우리는 상자가 버려 졌다고 들었습니다. 이것은 매우 실망 스러웠습니다. 마음이 상한 사과와 설명이 없었으며 상황을 해결하려는 시도가 없었습니다. 말할 것도없이, 우리는 그 밖의 곳에 머물기로 결정했다. 호텔 자체는 괜찮았다. 무료 공항 교통편은 좋았습니다. 그것은 공항에 가까웠지만 호텔 인근에는별로 없었습니다. 우리는 아침 식사로 각각 15,000 원을 지불했지만 그만한 가치는 없었습니다. 차라리 그 중 일부를 소비하고 편의점에서 커피와 샌드위치를 구입할 것입니다.제주 공항에 가까워 고객 서비스가 우수하여 3 박의 새로운 제주 노블레스에 머물 렀습니다.  경영 지원팀 리더 인 테드 에이 김 (Ted E Kim)은 제주에서 우리를 편안하고 편하게 느끼도록하기 위해 나섰습니다. 그는 30 년 이상 경험이 풍부한 VIP 택시에서 박희경 (Park Hee Kyung, 064 - 746 - 8879)과 120,000 원으로 1 일 동안 개인 자동차를 준비하고 업무에 열정적이었습니다. 그는 영어를 많이하지 않지만 Google 번역을 사용하여 대화를 나누고 제주에 관해 이야기합니다.  우리 체재는 아침 식사를 포함했고 음식은 신선한 날마다 준비된다. 주로 한국 음식, 야채, 매운 볶음, 쌀과 달걀입니다. 수프, 과일 2 종 (파인애플 및 바나나 컷), 시리얼 및 빵도 있습니다.  호텔은 무료 주차가 가능하며 인근 지역을 걷기는 가능하지만 아직 관광을 위해 개발되지 않았기 때문에 자동차를 소지하고 있거나 여행을 준비하는 것이 가장 좋습니다.공항15분 거리쯤 되고 서쪽 여행으로는 위치는 최고 밤문화 즐길수 있는 시내이고 오분거리에 이호해변가두 있어 탁월한 선택이였음友達が予約してくれたのですが、 清潔で良かったです。 近くにミカン畑もあり、 静かで夜もぐっすり寝むれました。Искали место, где можно остановиться непосредственно рядом с пляжем. Это было основным фактором выбора данного места. Очень удобно после плескания в море подняться в номер, помыться, передохнуть и двигаться дальше на осмотр достоинств Чеджу. Выбрали номер с видом на пляж на 5 этаже,  очень красивый вид. Мебель без изысков, все очень простенько, но чисто.  Расположение является самым огромным плюсом данного места. 위치:  이 펜션은 협재 해변의 하얀 모래사장이 있는 중심가에 위치하고, 많은 상점과 레스토랑이 주변에 있다.   펜션 에서 숙박을 하지 않았다, 하지만 우리는 해변에서의 하루를 보낼 후 택시를 찾을 수 없기 때문에 호텔로 돌아와서 바쁜 주말. 우리는 우리를 도움 요청 여부에 아, 주인 이 펜션이 만나는 클라라 관리자 /. 그녀는 우리에게 매우 좋은, 문제에 대한 여러 택시 회사가 마지막으로 우리를 발견 한 때까지 호출을 하게 해 주소를 다시 설명해 드라이버, 완전히 해 있었습니다. 다음에도 올 것이기 때문에 아주 좋은 위치의 멋진 펜션 이.여름에오면 협재해수욕장 바로앞이라 좋을거같아요~~ 1층엔 카페베네가 있고요 최근에 지어진거같진 않아요  5층 뷰도 멋져요!!!As this pension is placed just at Hyeopjae Beach the pension is the place to stay if you are looking for a room with a great seaview. Our room was equipped with a large flat screen television, bathroom, aircon and a small kitchen where you could cook. The room was nothing special, the pension is to be chosen because of location and view. The disadvantages were, however, that the room had not been cleaned before our arrival (check-in time was 2 p.m. and check-out time was 2 p.m. which could make some explanation and may cause some difficulties for the cleaning personnel), kitchen utensils were dirty, there was no cleaning during our three nights stay (maybe because of the place\'s status as a pension?) and the staff showed to be tired of tourists after a long season. There were우도랑 성산일출봉 근처 숙소 찾다가 깔끔해보여 예약하게 된 욜로 펜션입니다. 조용한 곳에 위치하고 있구요. 주변에도 주택 몇 채만 보이고 아무것도 없다고 보시면 됩니다.   사장님 너무 친절하셨구요. 저희가 방문 예상시간 말씀드렸는데, 생각보다 너무 늦게 도착했어요. 그런데 사장님이 너무 일찍 부터 에어컨을 켜 놓으셔서 8월달 한 여름 인데도 추울 정도로 방이 시원했어요. ^^; 죄송하기도 하고 감사하기도 했습니다. ㅎㅎ   저희는 바베큐 신청 안해서 조리도구나 다른건 사용 안했는데, 방은 깨끗하고 깔끔했어요.   다음 날 출발할 때도 저희가 사장님이 운영하는 카페에서 와플하고 음료를 주문 했는데, 커피는 그냥 주셨어요. 정말 맛있게 잘 먹었습니다. :) 아, 그리고 카페 앞에 핀 해바라기 꽃이 빨간색 컨테이너 박스 모습의 욜로 펜션과 잘 어울렸어요.저는 지난 주에 yolo 펜션 - 끝.  이러한 놀라운 숙박.  자주 비즈니스나 레저 여행객. 저는 이 환상적인 부부를 환영 했다.  여기서 집에서 느낄 것이다.  많은 팁을 배정해줄 제주 (짧은 방법 한라산 여행, 좋은 곳에 사우나, 좋은 해변 등)  위치는 좋은 곳에 잘 연결되지 있는 버스 701 제주.  공공 체육 시설을 즐길 수 있는 50 미터 yolo 펜션. 헬스장은 외부에 완전히 비어 가든이 있고. 아침에 해변을 따라 달리 papiolani 짧은 체육관에서 운동 및 마무리, 환상적인 아침 식사를 즐길 수 있는 좋은 방법.  전에 나의 일. 물과 커피를 무료로 받는 일을 즐길 것. 매우 친절함!   저는 펜션 을 강력 추천합니다나는이 호텔을 강하게 추천한다! ! ! . 처음에 나는 제주에 도착했을 때 내가 나의 나라에서 예약했던 나의 이전의 숙소를 본다. 그것은 끔찍한 일이어서 취소하고 제주를 떠났다. 마침내 나는 이것을 발견했다! ! ! ! ! ! Ajumma는 매우 친절했다. 그녀는 우리에게 할인을 주었다. 이 호텔에는 큰 방이있었습니다. 1 박당 가격은 80,000 원이지만 6 인의 숙박이 가능합니다! ! ! ! ! 그녀는 주차장, 엘리베이터, 수건, 헤어 드라이어, 비누, 샴푸, 차, 커피를 가지고 있었지만 아침은 먹지 않았습니다. 위치가 아주 좋습니다! ! 여기에 밤 생활을 보낼 수 있습니다! ! ! 레스토랑, 쇼핑 거리 및 바 많이 있습니다.새 건물이고  깨끗한 침구, 욕실도 깨끗하고 냉장고는 소음이 없으며 생수 두병과 음료2캔 있습니다. 에어컨도 잘됩니다. 넓은 tv도 있어요.그리고 치약.. 면도기도 줍니다 그러나 방이 작어요. 침구를 제외하면 매우 협소하며 슬리퍼도 없고 의자도 없어 불편했어요. 주차장은 3대정도.. 그러나 호텔급은 아니지만 모텔로는 괜찮은 편입니다. 40 객실을 갖춘, 평범한 서비스는 평범한 호텔입니다.   서비스: 제가 예약한 호텔과. com, 및 도착했을 때, 리셉션 직원이, 다소 제한적이지만 영어로, 제가 지적한 이들과 함께 했습니다. 우리의 예약을 찾는 유일한 분에 대해. 다른 시간. 나는 나의 여행 파트너인 욕실에서 나를 기다리는 밤에 로비에 나갔다. 나 한테 와서 내 확인을 요청하는 방 키를! 제가 느낀 기분을 상하게 하고. 한 옷을 입고 간 것은 관광 (한국 인 들 있지 않을 다운 재킷 도 주위에 때 9\' c 었다!), 나의 어떤 점을 확인? 의심도 했고, 그들은 할 수 있는 방법이 훨씬 더 불쾌 하다. 그러나 가장 제한적이기 때문에 그의 영어...  가격: 주변에 다른 호텔들 보다 저렴한 가격, 하지만 꼭 싼 호스텔 들도, 이 모든 것을 원하는 경우.   객실: 제가 머물렀던 방은 전체적으로 깨끗합니다. 그러나, 이 작은! 한국에서 여러 호텔에서 묵었는데, 저는 제주도에서 작은 호텔 방 생각하지 않을 수 있는 서울보다 (에서 sieoso 호텔 서울, 하는 부티크 호텔로)! 더블 침대가 방의 대부분을 차지, 정말 많은 공간이 움직이지 않았다. 이화 열 받고... 이 상상할 수 있습니다.   욕실: 욕실의 없는 없습니다. 나는 이해할 수 없는, 하지만 많은 한국의 호텔들을 샤워부스와 화장실 + 파티션 / 한커튼 세면대. 물론 이같은 사례 cj 호텔. 파티션 / 커튼을 하지 않고, 욕실은 샤워를 하고 축축하고 눅눅한 곳에 젖은 후, 그 불편한 화장실이 업로드됩니다. 하고 싶지 않은 욕실이 마련되어 있습니다.   편의 시설: 잘Very large room, lucrative price for what you get.  New and high quality shower.  I have no bad words was overwhelming and fun  היה מצויין !! מלון נהדר מחיר פגז , החדר ענקי המיטה נוחה והחדר הקי , המקלחת חדשה ונקיה מים חמים תמיד יש wifi תמיד וקרוב להכל יש תחנה אוטובוס מטר מהמלון אני ממש ממליצה נהננו 이 호텔은 제주 공항에서 자동차로 약 30 분 거리에 있습니다. 우리는 바다 전망의 방을 가진 디럭스를 임대했다. 그리고보기는 정말로 훌륭했다. 객실에는 주방 용품이 제공됩니다. 호텔 바로 옆에 7/11이 있습니다. 머무르는 것이 평화로 웠고 우리는 정말 제주의 아름다움을 감상 할 수있었습니다.하도해수욕장과 해맞이해안로의 중간에 위치한 지미스테이 (Jimi Stay). 태풍 때문에 날씨가 좋지 않았지만, 혼자 숙박시설을 독점해서 쓰는 재미가 쏠쏠했다.  정말 조용한 곳에서 힐링이 가능한 공간이고, 지미카페도 분위기가 좋았다. 단점은 태풍이 불면 조금 외진 곳이라 대리기사를 구하기 어렵다는 점이다.  건물도 소박하지만 아름답고, 내부시설 관리도 잘 되어 있으며, 직원들은 친절했다. 다음에 기회가 있다면 꼭 다시 들르고 싶은 곳이다.  PS: 주차하기엔 아주 편리한 커다란 주차장이 있다.이 호텔의 위치는 환상적입니다! 방문해야 할 거대한 현지 시장이 매우 가깝습니다. 방은 작았지만 2 박 충분했습니다. 우리는 큰 욕실을 가지고 있었기 때문에 편안했습니다. 나는 방, 욕실 및 주방이 매우 깨끗하다는 것을 강조하고 싶습니다. 저예산 호스텔이지만 가격과의 관계 품질은 균형을 이룹니다. 직원은 훌륭하지만 영어는 유창하지 않았습니다. 그럼에도 불구하고 그들은 정말로 도움이 되려고 노력했습니다. 10 월 18 일I loved the Location for this hostel. It was in the old town of Jeju but the bus stop (the City Tour bus stops here and also the same bus stop for a bus 316 to/from the airport) is located just 2minutes walk and so is the night food market (which is within the famous Fish Market Dongmun Market). This part of Jeju is pretty quite and you don\'t really see that many tourist here, in comparative to the new town. But I enjoyed that. Its really easy to find as well and the three storey Diaso is also located opposite, next to Dongmun entrance. The hostel itself is small, there is no elevator and you have to walk up the stairs for each floor. Breakfast which includes bread, jam, porridge/soup, coffee/tea is on the 5th floor. Some people were complaining that milk and butter are not공항이랑 가까워서 혼자 하루정도 묵기 좋아요 조식도 주는데 아무도 안먹드라구요 위치가 좋아요나는 그것을 사랑했다! 이것은 Aewol에서 나의 제 3의 체재이었다. 그것은 해변에 따른 아름다운 해변과 멋진 레스토랑을 가지고있다. 그러나 도시에 가까운. 그리고이 Aewol bada Townhouse가 최고였습니다. 나는 거기로 다시 돌아갈 생각이다.  바다를 마주보고있는 Aewol starbuck 옆에 있으며, 모든면에서 주인, 위치, 시설 및 경치의 환대가 가장 좋습니다! 그리고 그 가격은 품질면에서 상대적으로 저렴합니다. 손님은 2 층 건물을 사용할 수 있으며 각 층은 매우 독립적으로 사용할 수 있습니다. 나는 강력하게 부부와 가족 모두에게 그것을 권장합니다!  최전선에서 바다를 조망할 수있는 것을 골라라. 그러면 최고로 즐길 수있다!Very convenient. Opposite the shilla duty free. Every morning see people Q to go in for shopping. Free carparking. Walking distance to shopping area. Breakfast is good with reasonable price. Comfortable beds.立地が良く、フロントスタッフの感じも良く、部屋は新しくて清潔。値段を考えるとかなりおすすめできる。 ただ、ベッドルームの頭がある真裏の壁から、信じられないくらいの大きさの排水の音が…隣の部屋なのか、ただ頻度的にはそういうレベルじゃなかったので、ちょうどそういう設備が通っていたのだと思います。頭の後ろに小川が流れてるような感じ笑 また、通路を歩く人や近隣の部屋の声も聞こえたので、総じて防音性は低い造りだと思われます。 幸い耳栓を持ってたので難なしでしたが、なかったら寝れませんでした。あとはエレベーター待ちが長い(19階建でかなり客室あって2基しかない)こと、多分レアケースでしょうけど、リンスにもシャンプーが入ってて困ったこと笑 がマイナス点Отель не новый, но критических замечаний не было. Очень вежливый и дружелюбный персонал. Бесплатно повысили нам категорию номера. Были в несезон, поэтому людей было очень мало - тишина и спокойствие. Из окна был вид на море. Понравилось местонахождение - рядом с морем, в тихом море.  До аэропорта 20 минут. При этом местность вокруг очень тихая, в отличает от шумного юга. Пляжа рядом нет, надо ехать минут 5 на машине, но зато на камнях можно самостоятельно пособирать и сварить моллюсков:)일단 주변에 유흥주점밖에 없어요. 그래서 여자들끼리 오면 진짜 무섭고 또 환풍이 잘 안되고 담배냄새 진짜 토나옵니다. 금연이라 되어있고 리뷰도 다 좋아서 싼맛에 예약했는데 진짜 담배냄새가 상상초월해요. 건물공사가 진짜 대충되었는지 담배냄새가 화장실에 겹겹히쌓이면서 그렇게 예민하지 않았던 저조차 진짜 구역질 나올듯 한 경험이었습니다. 그냥 밤 샜어요 친구랑.. 정말 죄송한데 모텔용으로 와도 되지만 여행오셨다면 싼가격인데도 비추할게요.. 진짜,,여행 최악의 경험입니다오라 스테이 호텔 (Ora Stay Hotel)은 여관과 같은 호텔입니다. 그들은 손님을 위해 빠른 체크인을하는 정말로 단순한 리셉션을 가지고 있습니다. 객실에는 위성 채널을 시청할 수있는 평면 TV, 냉장고 및 무료 Wi-Fi가 있습니다. 전용 대형 욕실에는 샤워 시설이 있으며 제한된 무료 세면 도구와 헤어 드라이어가 있습니다. . 여행자를위한 기본적인 필요성. 지하 쇼핑은 단지 100m 거리에 있으며, 동문 시장은 불과 650m 떨어져 있습니다. Drangon Head Rock과 Tapdong Square와 같은 관광 명소는 도보로 쉽게 도달 할 수 있습니다. 환전정 파빌리온 버스 (Gwandeokjeong Pavilionbus) 버스 정류장에서 시내 관광 버스 (Hop on and Off city tour bus)를 이용할 수도 있습니다. 주변은 전혀 시끄럽지 않습니다. 호텔 옆에있는 프라이드 치킨과 맥주 하우스와 2 개의 문이있는 해산물 레스토랑도 있습니다. 플러스 호텔 바로 맞은 편에 미니 마트가 있습니다. 총체적으로, 나의 2 개의 날 체재는 멋졌다. 그들은 리셉션에 자주 없기 때문에 직원에 대해 말할 것도없고 매일 방을 청소합니다.애월 해안도로에 있는 전망 좋은 숙소임...신축이라 숙소 내 집기들의 상태들이  아주 좋았고 2층 건물이라 공간이 넓었다 . 1,2층 모두 침실,욕실 거실이 다 있었고 같이 간 아이들이 2층 공간을 너무 좋아했다 . 개인적으로 테라스가 마음에 들었음 ...넓고 시원하게 바다를 볼수 있어 지내는 동안  자주 테라스에 나가 있었다 . 청소 상태도 아주 청결했고 집주인도 친절하고 상냥했다 . 다음 제주여행에도 다시 가보고 싶은 숙소임..6~7명이 자도 문제 없을거 같음나는 여기에서 매우 편안했다. 로비에는 무료 만다린이있었습니다. 합리적인 가격 (1 대당 40,000 원)과 모든 것이 잘 작동했습니다. 생선 시장 근처의 도시에 매우 중앙에 위치해 있습니다.도착 시 바다가 보이는 방을 달라고 합니다. 우리는 한 보기 10/10. 이 해변 도로 바로 옆에 있지만 트래픽은 사람들에게는 방해가 되진 않을 최소한의. Gs25및 식당 지역 검은 돼지고기, 해산물과 함께 전체 계속 옆에 있습니다.  방 자체는 꽤 평균, 특별한. 깨끗하고 필요한 모든 것이 갖추어져 있습니다. 수건도 갈아준다.  1층에 있는 커피숍.  조심하세요, 침대가 돌처럼, 개인적으로 마음에 내 파트너 않았다.숙소 엄철 깔끔합니다. 내부 인테리어도 아주 좋습니다. 중문에 렌트해서 방문한다면 어디든 가기 편리한 숙소입니다. 추천할만합니다.직장에서 장기근속휴가를 받아 9월 17일부터 23일까지 일주일간 도미토리에서 머물렀습니다.   게스트하우스 &lt;바다와 자전거&gt;는 자전거를 빌릴 수 있고, 저렴한 도미토리와 커플과 가족을 위한 룸이 있으며, 커피가 맛있고, 조식이 포함입니다. 혹시 낚시를 좋아하시면 포구 앞이나 배를 빌려서 가능합니다.(저는 낚시를 좋아하지 않아서 잘 모릅니다. 사장님께 문의바랍니다.)   고내포구 바로 앞이라 통유리로 바다가 보이는 뷰가 환상적이고 호스트가 깔끔하셔서 호텔식 수건에 베게까지 정말 나무랄 곳이 없습니다. 아침식사에 맛있는 커피(저는 커피가 너무 맛있어서 사장님께 원두 문의를 했더니 원가로 한봉지 주셨습니다.)와 간단한 볶음밥, 토스트 등은 포함이고 사장님께 자전거를 빌려서 협재까지 달려보는 것도 좋습니다. 참고로 자전거길 이름이 “제주도 환상의 자전거길”입니다. 자전거 길을 달리다 보면 중간에 &lt;바다와 술책&gt;이라는 특이한 서점카페가 있습니다.    근처에 &lt;마틸다&gt;라는 LP판 틀어주는 바가 있는데 &lt;바다와 자전거&gt;에 숙박하실 예정이시면 좋아하는 팝이나 예전 가요를 생각하고 가셨다가 바에 가셔서 음악 신청하시고 술한잔 하시면 “아! 이곳이 천국이구나!” 하실 겁니다.(저녁 7시부터 새벽 2시까지 영업, 화요일 휴무)    &lt;마틸다&gt;안쪽으로 5분만 가시면 &lt;애월도서관&gt;이 있습니다. (매주 금요일이 휴관)   게스트하우스 바로 옆건물에 24시간 영업하는 CU가 있어서 일단 최저 생활을 걱정 안하셔도 됩니다. 그리고 반대쪽 옆에 &lt;고내횟집&gt;도 맛있습니다.   고내리 정류장에서 202번 버스를 타고공항에서 굉장히 가깝고 1층에 편의점 까페 레스토랑이 있어 편했어요 테라스도 잘 되어있고 화장실이 마루바닥으로 된 점이 좋았구요 저렴한 편인데 가성비 좋은 곳입니다제주시에 있는 호텔로 깔끔한 편이었고 나름 전망도 괜찮았습니다. 주차장은 주차타워에만 해야 하는 게 좀 불편한 점이었습니다. 조식 시간은 7시 부터 인데 단체손님들이 많아서 8시 부터 하는 것을 권하였는 데 비행 시간 때문에 일찍 했는 데 단체 손님들이 많기는 많았습니다. 조식은 간단한 편인데 먹을만 했습니다.싸롱은 마을에 있는 제주 전통 가옥으로 깨끗하고 꾸밈없이 소박합니다  5분거리에 있는 세화해변이 끝내주게 아름답고 편의점, 버스정류장이 가까이 있고 특히 예쁜카페와 맛집이 꽤 있더라구요. 며칠 묵으면서 마실 다니기 좋아요. 진짜 지역 주민이 된듯합니다 주말엔 세화민속오일장에서 플리마켓도 열리니 구경거리도 있네요  쿠팡에서 좋은 가격으로 구매해서 간곳인데 기대보다 너무 좋았어요. 공항 바로 옆이라서 비행기 이착륙 소리 들리지만 그다지 거슬리진 않았어요. 공항 활주로 끝자락의 잔디 부분이 마치 작은 오름처럼 보이고 해안도로를 따라서 펼쳐진 전망이 좋았어요. 단 하룻밤만 묵었고 날씨가 안좋아서 해안도로 산책을 못했지만 다음에도 꼭 다시 가보고 싶어요. 조식도 간단하지만 나오는데 큰 기대 안하시면 가격대비 괜찮아요. 미역국에 밥 말아서 김치에만 먹어도 여행지에선 만족하는 저로썬 닭볶음까지 맛나서 더 좋았어요. 조언을 드리자면 탕수육은 메뉴에서 없애실것을 추천 드립니다, 아침 메뉴도 아니지만 눅눅하고 먹을수가 없었어요 소스도 아니였고요. 차라리 장아찌나 나물이나 가능하면 생선구이가 더 나을듯 합니다. 서양식 조식으론 토스트와 커피 밖에 먹을게 없던데 삶은 달걀도 있음 좋을것 같아요. (한식에 있던 스크램블 에그는 영 한식도 양식도 아닌게 에매하고 맛도 없었어요)  저흰 그래도 만족하면서 감사하게 커피랑 티랑 잘 마시고 돌아왔어요. 직원분들도 다들 친절하시고 특히 청소나 관리 하시던 분도 투숙객들에게 반갑게 인사 하시던 모습은 특급 호텔에서나 경험 가능한 서비스라서 인상 깊었어요. 다음엔 시간을 넉넉히 잡아서 몇일 머물고 싶어요.이번 여행에서 숙소선택기준은 공항과의 거리, 주변환경, 혼자여행이기에 편리성이 우선시였는데, 3가지 모두 만족스러웠습니다.   숙소는 공항에서 택시로 15~20분(5~6천원) 정도의 거리에 있으며, 한번은 공항-호텔 걸어봤는데 쉬엄쉬엄 1시간 30여분 소요되더군요. 용담해안도로와 공항올레길을 이어서 걸을 수 있는 코스라 마지막날이나 첫 날. 도보여행을 계획하시는 분들은 한번쯤 걸어보는것도 좋을 것 같습니다.   주변은 바로 옆에 편의점, 카페, 식당 모두 위치해 있습니다. 그렇다고 번잡하거나 지저분하지 않고 딱 있을 만큼만 있어서 대체적으로 조용합니다.  숙소가 위치한 곳이 어영마을이라는 곳이고, 숙소 바로앞에 공원이 있습니다. 침대 누워 있으면 바다와 일몰을 볼 수 있습니다.   트윈룸이었는데, 성인 3명정도는 불편함 이용할 수 있을 사이즈구요. 기본 욕실용품이 비치되어 있는데 칫솔은 없었네요.   조식은 크게 기대하지 않는게 좋을 것 같습니다. 그렇다고 너무 부실한건 아니고 그냥 일반 아침가정식? 정도라고 생각되어 집니다.   2박 3일 편하게 잘 이용하고 왔습니다.마루바닥에 깨끗하고 나름 씨뷰네요. 공항 근처 하루 묵기 괜찮았습니다. 조식은 무조건 포함이던데.. 가격대비 괜찮았어요. 사진은 스위트룸입니다.이틀 동안 머물렀다. 객실은 2 인용으로 일반 한국 호텔 객실보다 컸습니다. 객실 편의 시설은 잘 작동하며 문제는 없습니다.  그러나 두 가지 점이있었습니다. \xa01 . 욕실에는 목욕 타월이 없으며 호텔은 핸드 타월 만 제공했습니다. 방에 목욕 타올을 추가하십시오. \xa02. 아침 식사 스프레드는 매우 좋지만 아침 식사 이름이 부족합니다. 나는 회교도이므로 음식에 돼지 고기가 들어 있는지 여부를 결정하기가 매우 어려웠습니다. 음식의 이름은 매우 유용 할 것입니다.  위치는 공항과 도심 근처에있었습니다. 결국, 그것은 단지 평범한 호텔이었습니다. 단체 여행객 만 이용할 수 있으며 호텔을 수면 전용으로 만 사용해야합니다.Stayed in this hotel for 4 nights with group tour.  The hotel exterior looks good and grand but that was the only good thing.  Despite this looked like a new hotel, overall was badly managed.  - bed was too lousy and too bouncy. Many of us had back pain sleeping on it.  - 2nd night saw cockroach running around couldn\'t kill it as it crawl in the wall crack.  Then a creepy insect was on the wall (picture) when we woke up the next day.  - Wallpaper peeled off, uneven laminated floor at corridor, tiles cracked, ceiling with obscene water stain (as per picture). - moved the bed a bit and shocked by chicken bones and piles of used tissue under the bed.  - there was balcony/ smoking area but never cleaned. Noted rubbish beer can on the floor since first night and remained there when i距離機場不遠，乘坐的士大概7000韓元，7美金吧。 自己駕車的話也很好找，停車場空曠，易停。 開去市中心需要10分鐘左右。 隔音超級好，因爲入住當天遇上了跆拳道大會，好多中小學生，但半點噪音也沒有聽到。 櫃檯的工作人員會幫忙叫車去機場， 好方便的酒店。這裏的房間十分寬敞，陳設簡單但是乾淨大方，工作人員回應需求的速度迅速而且親切。與訂房價格對照，是一家性價比很高的飯店。唯一的缺點是周圍無處可逛。2017년 1719일 이틀 묵었습니다. 솔직히 이 여행사에서 예약을 이 호텔을 선택하지 않습니다.  기본적으로, 이 호텔은 아무것도 꽤 주변 내에서 훨씬 찾아냈습니다. 호텔 외관은 기반으로 새 것처럼 보입니다.  체크인도 빨랐어요.. 방은 깨끗하고, 넓고 심플한 디자인입니다. 욕실은 깨끗하고 넓고, 필요한 세면도구가(칫솔 제외) 갖추어져 있었습니다. 방에서는 Wifi가 좋았습니다.  편의점이 1층에 위치한(프론트 데스크 카운터 기본적으로 옆에. 이 정말로 근처에 아무것도 많이 합니다.  아침 2일간 같은 다양한 평균.  전반적으로 "목적 잠을 수행하는 여전히 만족스럽습니다.호텔은 공항과 매우 가까우며 로비에 7 개의 11 개가있어 편리합니다. 그러나 서비스는 그리 친절하지 않습니다. 수하물을 도와주는 벨보이는 없습니다. 영어로 의사 소통을 할 수없는 unsmiling 프론트 데스크 접수. 아침 뷔페는 거의 매일 동일합니다. 엘리베이터가 느립니다. 객실은 넓고 기본적인 세면 도구를 제공합니다. 그리고 위치는 대부분의 관광 사이트의 중심입니다. 나는 다음에 다른 호텔과 함께 예약하는 것을 선호합니다.공항이랑 매우 가깝지만...대로변이라시끄럽고.. 곰팡이 냄새로인해  창문을 닫을수없는데... 문열며 시끄럽고... 에어컨은 바로 침대위에 있어 너무 직방이고... 화장실 문도 너무불편...It\'s an average hotel, close to the airport, around 10-15 min drive   However for those who want  to spend quality time in Jeju, it\'s quite far from main sightseeing places, like seashore, beaches and other attractions. Because if you are traveling alone and have no international driving license, it will be hard to get around the island   Little shops and cafes around this area.   Cons : no safe to leave documents etc ..at the beginning of October, 2018, My friends and i lived in this hotel, we found a strange thing that the lights inside the toilet was automatically switched off after 3-5 minutes, it was very inconvenient and unacceptable especially when we were doing shower, how can we take shower with lights suddenly switched off, then shouted outside to ask my friend to try press the switch again, (although we did this action, the lights still switched off every 5 minutes). when enquiring from the front desk on the second day, he replied us it was due to unstable electricity supply after typhoon, at first we accepted his explanation.  however, this awful situation continued for four days which we lived in.  yesterday, i saw from facebook other people who lived in last week also complaining긴 밤낮으로 잠을 자지 않고도 깨끗하고 편안한 호텔 방을 확인해 주셔서 감사드립니다. 우리를 매우 행복하게 만드는 모든 필수품이 제공되었습니다. 잘 자거야. 제공되는 아침 식사도 매우 맛있었습니다.3인실이 준비되어 있다. 주변은 신제주 시내라서 먹거리 찾기 나쁘지 않음. 스킨로션 류의 어매니티가 없으니 이것들은 챙겨야 함.조금 교통이 불편하고 골목길이기는 하지만 그.렇.게. 나쁜건 아니에요 그리고 제가 묵은곳은 별로 어둡지도 않았고. 스파?비슷한것도 있고 칫솔.치약세트도 있어요방이 굉장히 어둡다. 너무 어둡다고 프런트에 말하니 스탠드 하나 가져다 주었지만 차이가 없었다. 화장실도 유리벽이라 내부가 다 보인다. 누군가와 함께 왔으면 큰일 날 뻔 했다. 호텔의 안락함이 전혀 없었다. 외관도 깨끗하고 좋습니다. 다만 리모델링 호텔이라 그런지 옛것의 흔적이 좀 있어요...조명도 좀 많이 어둡고,,,하지만 공항 접근성에 좋아 하루 묵기 딱 좋은 곳입니다.김포공항에서 8시에 출발하는 비행기라 공항과 가까운 곳인 컬리넌 호텔에서 숙박했습니다. 실제로 공항에서 70번, 500번 버스를 타고 10분정도면 내리는 곳에서 호텔이 약 3-4분 정도 걸어서 도착할수 있어요. 예약했던 방에서 무료로 업그레이드가 되어서 더 쾌적하게 이용했고, 이용했던 비즈니스 호텔중에서 제일 좋았던 것 같습니다. 샴푸, 바디클렌저, 생수 2병, 드라이기가 구비되어 있었고, 욕조가 있어서 반신욕을 하고 푹 쉬었습니다. 가격대도 소셜 및 각종 루트를 통해 예약하면 1박에 저렴하겐 4만원대도 가능할 것 같아요. 다음에도 제주도에 들릴 일이 있다면 다시 이용할 예정입니다.나는 정원과 바다 사진 때문에 GH를 선택했다. 이건 정말이야. 보기를 정말로 즐겼다. 내가 머물렀을 때 20 세 이상의 한국 젊은이들이 거주하고 있었기 때문에 실제로 백패커 장소는 아닙니다. 시설은 공용 구역과 기숙사 사이에 \'청각 적\'분리가 없으므로 모든 사람이 잠들 때까지 중간에있는 것처럼 느껴질 것으로 기대하십시오. 또한 원래 개인 주택이므로 욕실의 수와 위치는 현재 사용량에 맞게 최적화되지 않았습니다.房间很大 装潢很赞 想拥有的温馨 \'小屋 \'  但 让人留恋的 依依不舍的 是在这相遇 像我们一样 在流浪 在漂泊 在旅行 在休息 的旅人们  人会相遇 总因有缘 所以在这 我们遇见 相识相知 知道或许不会再见 依然摊开心胸  人们来去匆匆 筵席总归会散 想延续的回忆 无法再次继续 记忆却会永存  팁: 1. Super Seaview 더블! 2. 집 선라이즈 포인트 근처의 정말 좋습니다. 3. 소유자 서핑 클래스 참가하여 묻고 다른 방법으로 제주 즐기세요!제주에서 바다를 볼 수있는 적당한 곳을 찾기 위해 나에게 많은 검색이 필요했습니다. 나는 숙소에가는 데 익숙지 않지만 여기에 머물러있는 것이 좋았다. 호스트는 매우 환영하고 있었고, 분위기는 컸고, 매우 뒤로 물러 섰다. 그리고 내가 원하면 저녁 식사에 참여할 수있는 대부분의 밤. 4 박 동안 여기에 머물렀고, 정말로 그것을 많이 좋아했다!처음 아라를 방문했을 때, 집 주인은 멋진 언덕에 아름다운 저택을 짓게했습니다. 두 번째 팀은이 아라 스테이에서 제주도의 멋진 경치를 보았습니다. 주인은 와인 교수 였고 영어와 프랑스어가 유창했습니다. 그와 그의 집에는 아무런 문제가 없었습니다 거대한 삼성 냉장고 + 새롭고 파워 에어콘 + 매우 빠른 wifi + 위대한 세탁기 + 놀라운 케이블 채널 + 슈퍼 super blighted 화장실 (ensuit) + 환상적인 산 halla의 멋진 LCD TV jeju ocean + 매우 편안한 침대 + 거대한 소파 침대. 제주 시청에서 버스 정류장에서 가까운 곳에 제주도의 어느 곳 으로든 이동할 수있는 훌륭한 방법이 있습니다. 에어 버스에서 찾았 어.월령항 바로 앞에 있는 펜션입니다. 방도 깨끗하고 침대도 푹신해서 잘 쉬다 가요. 주인아주머니가 너무 친절하셔서 기분좋게 놀수 있었습니다.풀도 좋고 자쿠지도 좋고  인테리어도 깔끔하고 종업원도 친절해요. 주변에는 풍력발전기가 있는게 다이지만 저희는 비수기에 가서 신나게 놀고 왔어요친구들이랑 봄에 놀러갔었는데 생각이상으로 시설이 좋았고 바다경치와 더불어 리조트가 정말 이뻣다 나중에 시간이 되면 다시한번 좋은 추억 만들고싶다 ㅎㅎ바다전망은 무엇보다 환상적이였습니다. 제주시 라마다 프라자 호텔이 한눈에 보이더라구요. 비즈니스로 이용했는데 객실은 깨끗하고 너무나 관리를 잘해서 다음에 가족들과 다시 가고싶네요. 무엇보다 직원들이 너무나 친절해서 인상적이였습니다.사진과 많이 다르게 낡았네요. 직원들도 친절함이 별로 없이 무뜩뚝한 편이고... 비행기 소음은 감안해야할듯..작은 분실물이 있어서 우편으로 보내달라고 했더니.... 우편비에 세금이 나오는 문제 등등으로 별로 안보내 주고 싶어해서.... 버리라고 했습니다. 전반적으로... 우리는 공항에 더 가까운 여행을 끝내기 위해이 호텔에 어제 도착했다. 명백하게, 그것은 닫기 (55 분 버스 버스와 아마 택시로 45)가 아니다.  그러나 특히 가족을위한 장소는 매우 좋습니다. 우리는 가족 방을 가져 갔다 (우리가 함께 밀었던 2 개의 싱글 침대와 함께 1 개의 방 + 4 개의 이중의 futons와 더불어 2 개의 방 + 2 개의 욕실 + 식당과 라운지에서 열린 부엌). ? 이것은 바로 가족이 원하는 것입니다.  우리는 해변에서 도보로 2km 떨어져 있습니다 (택시로 15 분 또는 5 시간).  우리도 해변을 매우 즐겼습니다. . .객실마다 스파가있어서 피로를 풀기적합하며 호텔이 아닌 리조트라 객실 안에서 간단한 취사가 가능하다.  객실 바로앞이 해변가가 아니라 아쉽지만 도보로 1분거리도 채 안돼 해안도로가 있으며 객실 내에서 바다를 볼 수 있어 좋았다.2016年7月末に利用しました。空港の北側の海岸線に位置するホテルです。市街地からは距離は少しありますが、旧済州市までタクシーで１０分以内、5000won程度で行けますので不便さは感じませんでした。施設については、玄関前に小さめのひょうたん型のプールがあります。深さは勾配が取ってあり、100cm～180cmくらいだったでしょうか。室内はレトロな木製家具で統一されておりリゾート感を味わう事が出来ました。私が一番気に入ったのは、手足を大きく延ばせる大浴槽です。こちらはマジックミラーの窓が海側を向いているので解放感のなか入浴を楽しむ事が出来ます。 \u3000朝食は隣のオスロホテルのB1で食べます。系列ホテルでしょうか。内容は普通の朝直という感じなので、朝食UPを抑えて予約されても良いかと思います。最後に、部屋は５階を指定されるのが良いかと思います。ちなみに私は３階に宿泊しました。  それでは、Have a nice trip☆한라산 등산할 때 왕복 셔틀 이용가능하구요. 등산스틱, 점심도시락 미리주문 가능해요. 프런트 직원들도 친절해요. 등산할 때 든든하라고 조식을 한식으로 든든하게 챙겨주십니다. 등산할 때는 여기가 딱인듯해요.이 근처에 위치한 해변. 이 호텔로 이동할 수 있는 차. 아주 조용한 주변 환경. 평화롭고 편안하게 쉴 수 있어서 이 호텔. 아침 식사를 제공하는 빵과 계란. 계란 요리를 직접 있습니다. 스타일 있는 것 같은. 셀프 서비스 이다.리뷰보고 기대했는데 호텔이라기 보단 모텔이나 펜션 느낌이네요 생긴지 얼마 안된걸로 아는데 화장실 청소 상태도 별로에요 문에 이물질 묻어있고 예약한거 후회됐어요,, 가격대비 더 좋은 곳이 많은거 같아요,,지은지 얼마안되서 너무 깨끗하고 깔끔하고 저녁늦게도착했는데 미리 전화해서 주위에 편의점없다고 알려주시고, 가격도 너무 저렴한 호텔.새로 생긴 호텔이라 깨끗하고 객실이 세명 잘수 있게 더블베드 하나 싱글베드 하나 놓여있음. 가구는 심플하고 단촐하나 모자라지는 않음. 화장실에 욕조는 없으나 넓은 편임 난방은 개별로 온도를 맞출 수 있어 추운 1월 겨울밤 따뜻하게 잘 수 있었으나 방이 데워지는데 약간의 시간이 걸리므로 체크인 하자마자 온도부터 맞추는 것 추천 이불은 두툼한 솜이불. 좀 무겁지만 무지 따뜻함 2층에 야외 온수풀이 있다고 하였으나 내가 방문시에는 추워서인지 비닐덮어놓고 폐쇄중이었음. 좀 기대했었는데 아쉬움... 조식은 부폐식...만원 좀 넘는가격. 음식맛과 종류는 그럭저럭 괜찮음.   렌터카로 운전해 오는 길도 어렵지 않고 위치가 애월이라 좋음 다시와도 괜찮을 거 같음.  이곳을 택한 이유는 객실내 스파와 동물원 때문입니다. 스파는 시설이 좋고 따뜻하고 만족합니다. 동물원에 말과 돼지 앵무새 토끼 등 많은 동물이 있어서 애들이 3일내내 밖에서 동물과 지냈습니다...돼지는 그냥 마당에 막 돌아다녀요. 마트까지 차를 몰고가야하지만 동물과 스파가 모든 불편을 해소해 줍니다. 아침은 포함인에 간단한 한식과 토스트가 나옵니다. 근처에 걸어서 갈수 있는 마트는 없습니다.我們應該8:00 才到達酒店的, 但就算到達了, 都不知那間就是我訂的酒店啊! 整間酒店都關燈了, 四周很黑, 酒店的招牌又小, 我們真的不知道如何是好! 摸黑入了RECEPTION, RECEPTION又沒有人, 好像都下班了! 餐廳的燈都關了! 很可憐的感覺! 真想不到會有酒店是沒有人值班的! 好不容易自己行入RECEPTION, 找到類似留給我的鎖匙, 有張小小的MEMO寫了我的姓氏, 就是這樣! 還好, 終於可以進房間了! 房間很新, 不過本人實在不太喜歡這種超COOL沒人氣的感覺!아침에 일어나면 커텐을 쳐보시면 깜짝 놀라운 광경입니다. 너무 멋진 해변가... 주차공간은 호텔 옆에 있구요 건너편에 주차하셔도 됩니다방 깔끔하고요. 주인아저씨 친절하게 이것저것 잘 알려주시고 안내해주세요. 앞에 바다도 훤히 잘 보이고, 가까워서 나가 놀기도 좋고요. 충분히 만족스런 곳이에요.พนักงานบริการประทับใจ  โรงแรมสะอาด เครื่องอำนวยความสะดวกครบครัน สามารถติดต่อเรียกรถแท๊กซี่ให้ได้  อยู่ใกล้สถานที่ช้อปปิ้ง abc mart etude house innisfree .etc. สามารถเดินถึงโดยที่ไม่ต้องนั่งรถ โดยใช้ระยะเวลาการเดินทางเพียง 10 นาที優點 장점 1. 離機場近. 공항에서 2가깝습니다. 附近有 7 - 11 및 麥當勞. 7 - 11 및 맥도널드 근처에(5 - 10분) 3. 不算貴. 비교적 저렴한  缺點 단점 1. 房間小. 兩人有點擠. 四人非常擠. 臥室大小約 4. 2米 x 3. 5米. 대략적인 4작은 방. 2 x 3. 2 5m 싸서 4명이 매우 붐볐다. 2. 早餐沒什麼變化. 아침 식사는 매우 작은 변경. 음식은 대부분 매일 반복되는. 3. 房間內的快煮壺不乾淨. 방은 주전자가(물 피치) 전혀 깨끗하지 않을 수 있습니다. 4. 別期待這個價位會像 4星 5星旅館乾淨. 我入住時把整個房間都擦過一次. 4 - 5성급 호텔로 깨끗하고 기대하지 마세요. 체크인을 할 때 나는 모든 모서리 닦습니다. 5. 來自附近國家的廉價團客多. 使用共同區域時要多包涵. 有時候很吵, 甚至半夜. 이웃 국가에서 많은 저렴한 투어. 관광객이 공공장소는 무례한 정렬할 수 있습니다. 언젠가 그 시끄러웠습니다 자정에. 6. 半夜櫃檯就沒人了. 중간 밤에 프론트 데스크의 직원들도. 7. 櫃台服務人員只說韓語, 但是很客氣很有禮貌. 프론트 데스크 단지 한국어 구사. 프론트 데스크 직원들은 매우 친절했다.제목대로 이름만 호텔이고 내부 시설은 모텔보다 못함. 그다지 저렴하지도 않음. 제주공항에서 도보로 약 20분정도 거리라 접근성은 좋음. 침대 매트리스가 아주 저렴해 보이고 누울 때마다 무너지지 않을까 하는 생각이 들었음Отель удобен тем, что находится рядом с аэропортом, такси будет стоить в пределах 3 долларов, ехать 5 минут. Из плюсов: большие (в отличие от других корейских отелей) номера. Замечательная звукоизоляция. Из минусов отеля: нехватка персонала, от этого очередь на стойке регистрации, также в первый день неприятно удивили грязные и и накуренные коридоры. Очень много китайских туристов, которые каждое утро, когда садятся в экскурсионные автобусы, громко галдят под окнами.숙소를 찾다가 우연히 선택하게된 곳임. 1박에 8만원에 선택했는데 방에 아주 큰 욕조가가 같이 있고 조식이 포함되어 있음. 조식은 아메리칸 스타일인데 주인이 직접 만들어 줌. 방은 매우 깔끔하게 리모델링이 되어 있어 매우 깨끗함. 단 숙소로 들어가는 길이 좁은 골목으로 되어 있고 리조트 겉 모양이 매우 낡아서 첫인상은 매우 실망할 수 있음. 그렇지만 매일 욕조에 몸을 담구고 바다를 바라볼 수 있음. 가격을 고려하면 나쁜 선택을 아니라고 판단됨.제주 조이 랜드는 약 20 개의 분리 된 잘 지어진 목조 2 층짜리 주택으로 구성되어 있으며 부엌과 식당 시설 (한국식)을 갖춘 독립형 아파트입니다. 바다를 바라 보는 언덕 위에 부분적으로 위치한 제주 서부에서 자동차로 약 30 분 거리입니다. 경내에는 많은 과일 나무가 있습니다. 회의실과 컨퍼런스 시설도 있습니다. 한국인들에게 인기가있는 것 같습니다. 200m 떨어진 대형 슈퍼마켓이 있습니다. 제주도 주변의 주요 도로에서 약 300m 떨어져 있습니다. 집은 큰 소나무 통나무로 만들어져 있고 침실은 2 층이고 거실은 낮은 층입니다. 주방에는 스토브, 싱크대 및 냉장고가 있습니다. 직원은 영어를 할 수 없지만 가능한 한 도움이되었습니다.위치는 모든 버스가 출발하는 버스 정류장에 가까웠다. 공항 버스도 여기에서 멈 춥니 다. 이 모텔은 가족이 운영하는 사업입니다. 직원들은 보너스 인 좋은 영어를 말할 수 있습니다. 그것은 돈을 위해 아주 좋은 가치입니다. 많은 현지 레스토랑과 미니 마트도 근처에 있습니다. 이 호텔은 약간 날짜가 있지만 일부 객실은 새롭게 개조되었습니다.+ A good value for money: a double room with private bathroom for the price of a dorm. The owner was friendly, seemed to really care about our comfort and well-being, and even gave us a discount.  - This hotel saw better days...a long time ago. The area isn\'t much interesting, but well-connected with the rest if the island. Noise isolation isn\'t the best, so your comfort could also depend on other guests. Nothing too bad though.이것은 AirBnB 집이었고 우리는 3 박 동안 거기에 머물렀다. 우리는 주 집을 떠나 있던 방에 머물렀다. 이 방과 집은 깨끗하고 잘 보관되어 있습니다. 부엌은 매우 잘 갖추어져 있습니다. Vaze를 사용하면 집을 찾기가 어렵지 않습니다. 그러나 한국의 모든 것과 마찬가지로 커뮤니케이션에도 어려움이 있습니다. 예를 들면 우리 방에 히터가 있었고 모든 지시 사항은 한국어로되어 있었고 주인은 사용 방법을 설명하지 않았습니다. 전반적으로이 곳을 추천합니다.방은 크고, 위치는 매력적입니다.  그러나, 리셉션과 건물은 개략적 인 것으로 보이며 대대적 인 개조가 필요합니다.  그러나 친절한 직원은 영어로 의사 소통하기가 매우 어렵습니다.  주차 공간이 제공되지 않으며 공용 주차 공간을 사용해야합니다.Karena namanya mirip noblesse aku malah di bawa ke hotel yg satu nya lagi.. mana malem2 pula haha Kalo pilih hotel ini jgn lupa pastiin alamat dan namanya Karena ada hotel noblesse dan hotel noblesse jeju.. lokasi cukup jauh beda Overall hotel bagus.. nyaman.. staff ramah이 호텔은 멋진 풍력 터빈 전망이있는 해변 근처에 위치하고 있습니다.  장점 - 깨끗하고 친근하며 도움이되는 소유자이며 모든 것이 완벽합니다.  단점 - 게스트 하우스에 작은 도로 입구. 나머지는 완벽합니다.제주도를 방문해서 여러 호텔이나 펜션등을 이용해 보았는데 언제나 한가지 아쉬움이 있었다. 좋은 시설이 문제가 아니라 편안한 느낌을 느낄 수 있는 안락함이였다. 이곳은 친절한 주인과 깔끔한 숙소가 여행객에게 편안함을 주어 여행의 여유를 즐길 수 있게 해 준다.세화해변 근처에 위치한 와락 게스트하우스. 주말에 묵는다면 세화에서 여는 프리마켓을 구경했을텐데 열지않는 날이라 아쉬웠다. 해변가가 바로옆에 있고 게스트하우스 내에 잔디밭같이 야외정원이 있어서 바람쐬며 쉬기 좋았다. 사장님도 친절하시고 다락방 같이 2층에 만화책 오락기가 있어서 혼자여행왔지만 다른 여행객과도 수다떨면서 즐겁게 보낼 수 있었다.위치가 시내에서 떨어져 있는, 공항 근처의 해변에서 약 500m iho tewoo. 객실은 넓고, 깨끗하고 잘 갖춰진 부엌과 함께 제공됩니다. 방은 매일 청소 한다. 국제적인 기준에 의해 준비된 수건은 손수건 것으로 간주됩니다. 식료품 가게에는 동 떨어져 있고 시내에서 10분 거리에 있는 세계적인 마트가 2. 식사를 위한 메뉴는 인접한 레스토랑이 있는 요리. 호텔에서는 식사 제공 및 제공할 수 있는 선택 메뉴. 호텔 주인 주문 데 도움이 스테이징될 것입니다.  비행기가 이륙하는 소리도 볼 수 있지만 우리의 숙박을 하지 않은 감소하는 0600 - 2100 공항간. 밤에 조용하고 아침에 일어나서 매일 아침 지저귀는 새와 수탉의 울음.  빨강과 하얀 해변을 향해 걸어 볼 말 모양의 등대, 여성에게는 집 보기, 해변을 즐길 수 있는 사람들, 개 산책, 조깅, 건조 시 야채, 야영 검토자를. 마을을 향해 걸어. 둘러보시기. 일하는 여성들을. 걷는 (저 언산) dodu - 봉이 조감도 의 제주시, 공항과 바다.새 호텔이고 현대적인 장비. 룸은 좋은 사이즈의 발코니가 있어 바다를 볼 수 있습니다. 제공된 수건은 매우 작고, 라기 보다 손수건 같아요. 아침 식사는 포함되어 있고 레스토랑이 호텔 근처 수 있습니다. 꽤 비싸고 좋지 않다. 태국 음식이 맛이 없으면 다 같은 태국 음식에이 가격표. 나는 이번엔 매우 표준 thougt 하나. 나는 얼마나 놀라 봤을 때 객실, 이것은, 많은 시설과 욕실에는 샤워기 및 욕조. 아 아래층 커피숍. 가격 대비!이벤트로 온호텔 최악 물도없고 응대 형편 없으며 시끄러운거에 대한 사과도 없고 객실은 빨대 찌꺼기 같은게 나옴 그냥 만원 더내고  호텔 갈껄 돈이 너무 아깝내요  아 목말라 ... 냉장고에는 종이컵만 있다 ㅜㅜ공항이랑 가까워서  늦은 밤 도착이나 오전 일찍 출발시 좋음  비행기 이륙도 볼수 있어 아이들이 좋아했음  잠깐이지만공항 근처 호텔입니다. 실내 수영장과 커피숍, 마사지샵이 있어서 리조트 같았고,  객실은 모텔 정도의 규모와 시설입니다. 2015년에 신설한 곳이라 시설은 엄청 깨끗해요  저희 갔을때 오픈 이벤트로 한건지 모든 숙박객에게 계속 서비스 제공하는것인지는 모르겠지만, 1시간 정도의 안마의자 이용 또는 족욕 서비스 받을수 있어서 좋았습니다.   수영장도 놀기 적당한 정도의 규모였습니다.   저희는 떠나기 전날 밤에 머물렀었는데, 렌트카 반납하는곳과 멀지 않았고,  태풍이와서 비행기 딜레이 됐을때도 공항근처라 일정 조정하는데 편했어요좋은 호텔 (방과 욕실)이지만 자동차가 필요합니다. 호텔 로비는 약간 죽었고 (겨울) 식당은 문을 열지 않았습니다. (열려면 미리 예약해야한다고 생각합니다). 금릉 항이나 협재 해수욕장 호텔은 여행자들을위한 더 많은 식당과 카페로 더 좋을 것이다.서비스가 좋고 매우 따듯한 호텔이었습니다. 난방이 매우 잘되서 따듯하게 잘 보냈습니다. 저는 호텔에 머물렀어요 ~   그런데 숙소가 다소 노후되어있습니다 ㅠ  천장등이 없어서 전체적으로 방이 어둡고 관리가 안된 부분들이 보여서 ㅠ 아쉬웠습니다.  화장실 타일 사이에 곰팡이가 슬어있는 점과.. 2층뿐이지만... 엘레베이터가 없다는점 ..  짐이 많은 커플들은 ... 머무르는데 힘든부분이 좀 있습니다.  근처에 편의점이 없어요.. 들어가기전에 보이는 편의점에서  간식은 꼭 사서들어가시길..기대많이하고간곳. 프라이베이트 풀장 빌라는 비수기에도 50~60만원 이라.기본룸으로예약. 엘베없는 2층까지 기본방과 3층은 루프트탑수영장.이위치. 2박동안 즐겁게 수영하고 놀았다. 일단 이 호텔을 예약하게 된 이유는 굳이 비싼 풀빌라가 아니어도 루프탑에있는 풀장을 이용할 수 있다는 장점때문에 예약을 하게 되었습니다.   저녁을 먹으로 가는 중 이용 시간에 대해 물어보려고 리셉션에 전화를 했는데, 청소가 안되서 불가능하며 그런 정보를 어디서 보셨냐며 따지듯이 묻는 직원.   총지배인으로 보이는 여직원의 무례한 말투와 \'소셜에서 구매한 손님\' 이란 표현에 정말 억장이 무너지는 순간이었습니다.   호텔 어플 및 포털 사이트에는 공개 되지 않은 정보라며 루프탑온수풀 이용이 불가능하다고 말하질 않나. 어디서 본 정보냐며 따져묻더군요.. 마치 가르치듯이 얘기하는 직원 태도에 당황했습니다.   호텔 로비 리플렛엔 버젓이 루프탑 사계절 온수풀 영화상영이라고 써있더군요. 요즘 손님들의 선택이 얼마나 다양한 정보에 의해 진행되는지 전혀 이해하지 못하는 듯한 어이없는 상황이었습니다. 직접 제가 어디서 얻은 정보인지를 증명하기위해 동영상까지 첨부해보내는 일까지 손님인 제가 해야하나요?    나중에 서비스라며 가져다놓은 병맥주 2병 잘마셨네요..   풀빌라는 이용안해봤지만 나머지 호텔이라고 써놓은 리셉션 윗층의 룸은 가격대비 정말 별로였어요.. 나중에 여러명이 오더라고 여기 풀빌라는 직원의 불친절했던 기억때문에  절대 이용하고싶지않네요제주공항에서 택시타고 10분정도소요 !! 택시기사가 잘모름 !! 현지주소를 불러줘야 네비로해서 감 외관은 굉장히 괜찮은데에 비해 내부는 그렇지는 못함 !! 그래도 로얄호텔보다는 가격대비 훨씬 좋음공항이나 시내에서 떨어져있으나 셔틀로 이동가능하며 골프장이 있어 사우나도 무료 이용 가능한.  식당음식이 별로이고 매점은 없어서 밤에 피자를 시킬 수 밖에 없었던  것이 아쉬우나. 룸이나 욕실 상탲가 편하고 깨끗해서 여행객도 편히 쉴 수 있었음We stayed at this hotel for a couple of days during our visit to the awesome Jeju Island.  The room has a wardrobe which was used by the hotel  to keep a comforter and a bedding.  You can\'t hang your clothes in the wardrobe.  There is a long vertical wooden coat hanger which looks like a tree with branches placed just outside the wardrobe.    It was quite a pain for us to hang up our winter jackets since the "branches" are so close to one another.  The mattress is placed on a wooden frame which juts out.   My husband and I had a few knocks on it.  The hotel provides a hair dryer, a small fridge and a kettle with no cups provided.  There is no table in the room but there is a wooden ledge under the TV as well as near to the wardrobe. You cant put much stuff there as they areСложно выделить какой-либо пункт, который мотивирует на заселение в этом отеле. Это не пляжный отдых, так как хоть море в шаговой доступности, но оно не для купания. Здесь вулканические камни и пирс. Это не шоппинг, так как в округе нет больших магазинов. Но этот отель стал удачной находкой для размещения нашей семьи из 4 человек. Когда нужно было срочно в сезон найти просторный номер с удобной транспортной доступностью.  Отель уверенные 2*, не больше. Достаточно чисто, вполне современно. Питание оценить не смогли, завтрак не посещали.  Заселение оставило двоякое впечатление. У нас был номер на 3 человека (взрослых), дети любого возраста на имеющихся кроватях по инфо с booking проживают бесплатно. Однако, при заселении с нас хотели взять дополнительные деньги за ребенка. Когда수영장도 있고 다좋은데 입퇴실시간이 3시입실11시 퇴실이라 다소 불편함 이것만 빼고는 괜찮음 그냥보통의 그저그런 숙소 가족끼리가야 맞는곳インターネットのサイトでチェジュのホテルを探すと値段が高いところがほとんどですが、ここはツインで６万ウォンでした。でも、予約サイトにはこのホテルはあまり紹介されていない思います。自分たちも現地で飛び込みで宿泊をお願いしました。ホテルのHPがあるのですが、韓国語なのでわかりずらいと思います。場所は繁華街にあり、歩いてカジノにも行けます。ホテルはコンビニ・セブンイレブンと隣接しており、困ることはありません。 お部屋は広々としています。お風呂には浴槽はなく、シャワーだけなのが残念です。夏場などはシャワーだけで十分という方にはいいのではないでしょうか。공항 도착 시간이 늦기 때문에 공항 인근, 그리고 바다와 가까운 곳으로 숙소 잡으려 했고 이곳을 찾음. 일반적인 제주의 도미토리 2인 숙박 가격으로 이곳의 개인실 잡을 수 있어 좋았음. 늦은 체크인 가능. 주인분도 친절하시고 근처에 편의점과 식당들 있음.직원들이 숙박하고 있습니다. 그들은 거의 영어로 말할 수 없다. 그러나 그들의 빠른 인터넷 접속의 덕택으로 우리는 google translate를 통하여 대화 할 수 있었다. 위치는 공항 근처에 있으며 객실은 넓습니다. 그들은 무료 아침 식사를 제공하지 않으므로 가장 가까운 레스토랑 / 카페까지 5 분 이상 걸어 가야합니다.이 호텔은 좋은 사람들을 위한 저렴한 제주도 여행을 누가 적 이고 편안한 곳에서 묵을 수 있는 밤. 방 자체는 깨끗하고 좋은 확실하지 않은 이틀 동안 잠을 푹 자지.   장점:  무료 주차장 호텔 외부 넓은 객실 에어컨도 좋았다  호텔은 조용하기 때문에 쉽게 잠을 잘  단점:  청결도 개선 되어야 할, 많은 더럽고 침대에는 얼룩이 서피스 그들은 영어를 하지 않는 우리에게 하는 것이 좋지만 우리가 머무는 동안 더욱 어려운 경우 질문을 찾기 어렵다 - 어떤 이유로 이 호텔의 위치는 구글 맵 navs 에 앉아 차를 렌트해서 찾기가 불가능하고, 우리는 결국 하여 많은 사람들에게 있어서 캐리어를 지적해 주는 사람  전체적으로 이 호텔은 완벽한 곳이 제주에서 들을 저렴한 가격, 하지만 럭셔리 하고 다른 곳을 찾고 있는 것을.위치도 좋고 하여, 공항에서 가깝다. 우리는 늦게 도착한 이 호텔은 합리적인 가격. 나중에 한 건 다음 날 아침에 매우 가까운 호텔 북부 관광명소 (같은 길을 따라 머리를 바위와 해산물 벨트 용). 직원들이 영어는 잘 못하지만 나는 여전히 볼 수 있었지만 그들은 약간의 손상의 전원 어댑터 하나, 아직 작동하는. 그러나, 어떤 것은 위험한 금속 이 기 때문에 신중하게 선택되는 경우 중 하나입니다. 방은 깨끗하고 충분한 편이지만 전체적으로. 일부 테이블 서피스 및 기름진 머리. 전체적으로, 허용하여 우린 짧은 잠을 잘 잤다.제주의 작은 항구 옆 조용한 지역의 멋진 게스트 하우스. 주인은 매우 도움이되었습니다. 우리는 제 3의 마루에 큰 방을 가지고 있었다, 그것은 멋졌고 아주 깨끗했다. 그것은 ca. 10 분. 다음 음식점에 가기. 합리적인 방을 찾고 있다면 그 곳으로 갈 것입니다.在離開濟洲前一晚用亞洲萬里通換到這住處，這裏環境清靜，房間清潔，附近也有些景點。但接待處經常沒人及不能提早check in。第二天早上在酒店旁碰到當地一女士，她熱情邀請我們到她住處及摘了很多水果我們品嚐，看各位是否有緣遇到此韓國女士태풍으로 겨우도착해서 첵인하니. 크나큰방으로주시고. 배고픈 우리의 요구에 아침식사도 척척 제공해주시고. 편안하게 해주신 곳. 평대리에간다면 이곳에서 머무세요. 비수기엔 더더좋은것같아요. 하늘이이쁘고.좋았던시간입니다 밥도맛나요.집밥같은메뉴인테리어나 청소상태 모두 양호합니다. 애월 바닷가에서 다소 떨어져있으나 렌트카로 이동하기에는 편리한 곳입니다.  공항에 늦게 도착하여 애월쪽 숙소 찾는다면 괜찮은 숙소입니다. 무엇보다 가격이 엄청 저렴합니다.일본식 비즈니스 호텔에 익숙하다면이 곳도 비슷합니다. 객실에는 수하물을 여는 공간이 없지만 휴식이 필요한 곳이라면 이곳이 당신을위한 곳입니다. 호텔 예약시 지정한 주소를 사용하는 Google지도에 없습니다. co.kr 사이트를 사용하여 Apple Maps를 사용하여 위치를 정확히 파악했지만 절반 정도 떨어져있었습니다. 버스 정류장에서 도보로 몇 분 걸리는 메인 스트리트에 있습니다. 그것은 버스 터미널에서 도보 약 12 \u200b\u200b분입니다. 내가 호텔을 예약했을 때 나는 단지 1 명이 필요할지라도 침대 2 개가있는 남성용 기숙사라고 말했다. 나는 그것이 숙소 또는 무엇인가이다라고 생각했다. 그러나 그것이 의미하는 것이 당신이 방에 커플을 가질 수 없다라고 생각한다, 단지 같은 성의 사람이 방에 머무를 수있다. 호텔은 깨끗하고 현대적입니다. 객실은 겨울철 난방을 제공합니다. 나의 유일한 불만은 짐을 열 수있는 공간이 없다는 것입니다. 나는 다른 비즈니스 호텔에 묵었고 도쿄의 비즈니스 호텔과 거의 같습니다. wifi는 나의 방에서 다소 천천히 또는 때때로 매우 dodgy했다. 호텔은 영화관 및 레스토랑 구역에서 도보로 약 7 분 거리에 있습니다. 거기의 레스토랑의 대부분은 내가 보았던 2 개의 레스토랑 (서양식 음식을 내었다)을 제외하고 어떤 영국식 메뉴도 가지지 않고있다. 그것은 버스 터미널과 공항에 가깝기 때문에 머무를 수있는 좋은 곳입니다. 그것은 정말로 쌌다, 약 20, 000 원의 밤. 나는 다시 여기있을거야.이 장소는 나의 친구에 의해 추천되었다. 그리고 우리는 주인 (Su)이 공항에서 우리를 가져 오기를 기대하지 않았다. 장소는 다른 침실과 식당, 부엌, 방문객을위한 거실이있는 집과 같습니다. 주인이 서울을 방문해야했기 때문에 우리는 3 박 동안 여기에 머물렀고 지난 밤에는 홀로 남았습니다. 쇼핑 거리가 단 몇 걸음 거리에 있으며, 방 파울도 인근에 있으며 편리한 상점들이 많기 때문에 나는이 호스텔의 위치를 \u200b\u200b좋아합니다. 제주시의 고급 위치를 찾고 있다면이 곳을 적극 추천합니다.이 곳이 바로 옆에 있는 쇼핑 거리가 있다. 또한 공항 근처.   깨끗하고 따뜻한. 수많은 게스트 하우스를 한 적이 있는, 이는 아직 베스트.Bien ubicado, si la intención es estar cerca del aeropuerto de Jeju City. Nosotros estuvimos la noche previa a la partida del vuelo y fue útil en este sentido. Sin embargo se trata de un hostal o b&amp;b bastante básico y algo "relajado". Uno se hospeda literalmente en la casa de "Su", una mujer coreana de unos 55 años aproximadamente, que nos recibió con una sonrisa, y sin mucho mas se fue a su clase de tango (si de tango en Corea), dejándonos solos en la casa sin saber si debíamos dejar la puerta de entrada abierta o cerrarla, o donde estaban por ejemplo las almohadas de nuestras camas! La verdad nos resulto simpática la situación, pero entiendo que esto puede ser molesto para algunos viajeros. Igualmente la higiene en la habitación y el baño era buena. También el precio por noche우리가 예약한 더블룸을 통해 호텔이었습니다. com. 우리가 도착했을 때 주인이 하는 말이 한 게스트 하우스. 그녀 전화번호는 예약을 하고 있다는 사실을 보여주고 간 그녀는 완전히 걱정 하지 않았다. 그녀는 그녀의 문제가 아니고 우리 호텔 사이에 있었습니다. com. 그리고 그녀는 그녀의 사무실로 갔다 라고 했는데 예약 취소 및 환불을 해 주는 것. 할 수 없다고 하자 그녀는 다시 그 돈을 다시 생각하는 있을 것이다. com, 환불 거부 하자. 이 호텔을 예약했는데 처음부터. com 이며 마지막. 주인이 라고 우리가 다른 호텔들이 모두 예약해서 주말에 사용하는 마을.비젼 게스트 하우스는 한 호스트 수는 느낌. 우선, 공항에서 픽업/드롭 오프 일 때. 또한 계획을 도와주었고 우리는 하루 여행 제주도. 가장 좋았떤 점은 위치의 비전 하우스. 유명한 검은 돼지고기가 바로 옆에 있어서 걸어서 약 10mins. 너 처럼 레스토랑에는 전부 동일한 물건들을 팔고 너무 늦게 닫습니다.  제가 실망이 네 책이 있다. 비록 그들은 나에게 더 비싼 방을 예약하는 경우 장치 한 그 시간 동안은 안 나에게 그냥 없이 변경될 수 있습니다. 인테리어는 조금 낡았습니다. 심지어 이곳은 민박, 호텔에 너무 많은 없고, 그냥 빵만 할 토스트, 잼과 버터 그리고 자신을 위해. 커피 또는 오렌지 주스. 그녀는 그녀가 곧 내년에 따라 일부 내부 혁신.  저에게는. 저는 우선 서비스를 받았다. 심지어 좀 실망은, 이것은 우리의 여행을 상상할 수 있는 어떤 나머지 이다.   전체 일은 아주 좋은 사람. 이틀째 밤 동안 대부분의 실속은 문을 닫았고 우리는 다시 흑 돼지바비큐를 먹고 싶지 않습니다. 우리의 모습을 찾아 \'이 이후, 그는 약 9 플러스. 곧바로 그녀가 되어 빨리 나가서 찾는 곳이 었다면 기도어가 가져다주 됬어요. 우리는 굉장히 감동을 했다. \' 배려 고맙다.제주도에 위치한 호텔은 시티 센터와 불편한 위치. 수산 시장과 버스 정류장에서 도보 거리.   호텔은 넓은 짐을 넣을 수 있는 두 개의 중간 크기. 24시간 하는 식당 1층에 있습니다.지금 찾기 힘든 저렴한 숙박시설과 제주도. 몇 가지 좋은 후기를 읽고 나서. 아고다를 통해 예약한 후 일부 지원하지만 정말 나쁜 경험의 예약을 취소하고 있었고. 기뻤지만. 이윽고 우리는 이 새로운 호텔.  이곳은 조용한 지역에 - 즉, 가까운 바다. 호텔은 아주 인기가 중국 여행. 하지만 또한 게스트 하우스 바로 호텔.  우리는 게스트 하우스에 방지하려면 투어, 또한 새. 우리 방은 널찍하고 아주 깨끗합니다. 우리는 $60 (조식 불포함) 지급.위치는 좋지만 룸컨디션은 별로예요. 구석구석 먼지도 많도, 리뷰보고 이용했는데 사진과 다른 룸에 매우 실망했습니디. 직원들은 사무적이고 별로 친절하지 않습니디. 다시 이용할 일은 없을 듯 합니다곽지 해수욕장 바로 앞이라 뷰가 정말 좋습니다.  편의점, 맛집 등 가깝고 여행하기 좋은 곳입니다.  1층 로비에 오픈된 공간에서 바다보며 맥주 한잔 하는 것도 좋습니다. 룸도 청결했습니다.  재방문 의사 있습니다. 씨뷰만 훌륭한 호텔. 4월초 바닷가 앞이라 썰렁할 때인데 중앙난방 방식이라면서, 난방을 끄고 에어컨을 켰다고 했음. 그래서 밤에 많이 추웠음. 난방 불가라고 함.  룸 바닥의 카펫은 청소가 안되는지 남편과 아이가 계속 재체기 하고 2박째에는 콧물나기 시작했음. 3명 예약했는데 모든 애머니티(수건,슬리퍼,칫솔등)는 2명꺼만 준비 되어있음.가격대비 인테리어가 멋진 숙소입니다 지어짅 얼마 안되어 매우 깨끗하고.. 그렇게 넓은 편은 아니지만 바닥도 나무재질이고 짙은 색상의 모던한 인테리어가 인상깊었습니다 호텔에서 5분 거리에 바로 아이들이 놀기좋다는 곽지해수욕장이 있었느나 아쉽게도 태풍시즌이라 모래바람 사이에서 사진한장 겨우 건져왔습니다 룸서비스는 없었고 조식만 가능하나 건너편에 쌀국수 잘하는 집이 있어서 거기로 갔습니다5만원 안쪽에 특급호텔 시설을 바라는 분들이 꽤 많네요. 비수기라 저렴하게 이용했고 곽지과물해변과 가까워서 좋았습니다. 조금만 걸어가면 해변과 식당이 있어서 괜찮았어요. 다만 내부가 깔끔하게 정돈된 느낌은 아니라 청결에 신경썼음 더 좋았을 것 같아요.1. 위치 : 규모가 큰 호텔이 별로 없는 애월에서 비교적 큰 규모의 호텔로서 푸른 바다가 바로 앞에 있으며 저녁 석양 무렵이 아름답습니다 2. 직원 : 직원들이 친절한 편입니다 3. 룸 : 바다 전망이 보이는 욕실이 좋았으나, 방에 전체적으로 비릿한 냄새가 나는 단점이 있었습니다. 4. 조식 : 전체적으로 괜찮았습니다만 가성비까지는... 5. 기타 : 바다가 한 눈에 보이며 사시사철 수영이 가능한 루프탑 수영장이 아주 멋있었습니다2박했는데  다시 가고싶진않아요 가격할인해서 가도 아까웠습니다. 야밤에 디제이...시끄러워 짜증났구요  ...권하고싶지않아요 여러모로...수준이 그닥...1. 실내 환기팬 및 에어컨 소음 -  침대와 객실 외부 유리창 사이에 스파가 있는 객실에 묵었습니다. 이 스파 위쪽에 상시 작동되는 팬이 있는데 현관에 룸키를 꽂으면 마스터 전원이 들어오면서 저속으로 작동하고, 화장실 팬을 작동하면 고속으로 작동하는 시스템 같았습니다. 일단 룸 키를 꽂으면 이 스파 위쪽 팬을 끌 수 있는 스위치가 없었고 저는 이 팬의 소음이 수면에 방해가 될 정도로 매우 거슬렸습니다. 결국 관리직원이 오셔서 환기팬의 전원선을 분리했고 직원 분 말씀이 전에도 유사한 컴플레인을 받은 적이 있다고 하시더군요.  또 천정에 삼성시스템 에어컨이 설치되어 있는데, 설치의 문제인지 기종의 문제인지 모르겠으나 소음이 상당합니다. 저같은 경우는 밤에는 에어컨 없이도 잘 수 있을 정도의 날씨여서 사용하지 않았지만 예민하신 분들은 충분히 문제가 될만한 수준의 소음이어서 한 여름에 투숙하시는 분들은 고민해보셔야 할 듯 합니다. 관리하시는 직원 분은 에어컨 소음은 방법이 없어서 숙박을 포기하고 다른 호텔로 가신 고객도 봤다는 말씀을 하셨습니다.  2. 객실 내부 청결도 및 하우스 키핑 문제  - 제 경우 객실 청소를 실제로 담당하시는 분 한테서는 이 정도 가격을 받는 호텔에서는 기대하기 어려운 수준의 응대를 받았습니다. 관련해서 그 분과는 대화를 더 나누기가 싫어서 프런트에 관련된 컴플레인을 했었고, 프런트는 친절하게 해결해 주려고 노력하는 것 같았습니다. 다만 호텔 직원에게 필요한 서비스 마인드 교육이 하우스키핑 하시는 분들 까지는 제대로 되어 있지 않다는 느낌을 강하게 받았네요.  3.가족들과 잘묵다가 갑니다 이국적인 분위기인 애월에 잘어울리는 호텔이었습니다.  그나저나 밑에 여자분 정황상 반입금지인 강아지 데리고들어가놓고 걸리니까 괜히 적반하장 화내는게 웃기네요 ㅋㅋㅋㅋ 우리가족들한텐 친절만하던데 ^^ 저런게 바로 갑질이 아닌가요? 글보시면 부끄러운줄아시고 정신차리세요!가족들과 여행 중 우리가 관광 간 사이에 호텔 직원들이 무단으로 아무런 허락 없이 객실 난입하여 온 방을 헤집고 나간것. 우선 이게 팩트입니다. 이유인즉슨 메이드가 청소 중 애완용품이 있었다는 것. 그래서 우리 허락 없이 객실 내부에 있는 물건 사진을 찍어 몰래 직원들 단체방에 유포했다고 하네요. 그래서 호텔 총지배인 및 직원들이 사실 확인차 4명이서 그것을 확인하러 우리 객실에 무단으로 들어간 것이라고 하네요. 관광을 다녀오자 총지배인이라는 사람이 나와 우리를 보자마자 하는 말. 자기들이 객실에 들어가서 직접 물건을 확인했으니 벌금을 내라는 것. 정말 말이 안나올 정도로 황당했습니다. 실물 강아지가 있었던 것도 아니고 그로 인해 민원이 들어온 것도 아니고 하물며 CCTV 및 명백한 증거도 없이 추정 물건으로 호텔 관계자가 4명이나 무단으로 객실에 출입해도 되는건가요? 이게 대한민국 호텔에서 일어날 수 있는 일일까요? 물건으로 추정컨데 강아지가 있는것으로 보이니 스위트룸 1박 더 내라고 하네요 객실이 못팔릴수도 있다고.. 그래서 뒤에 있을 컴플레인 및 모든것은 내가 책임지겠다 하지만 직원들이 우리객실 무단으로 출입한것은 어떻게 책임질거냐 하니 1박치 돈 안낼거면 경찰 불러서 객실 수색하겠다네요 계속 올라가서 확인하자고 협박 및 강압적인 말로 우리에게 모욕감을 조성했습니다. 그 누가 부모님과 가족들 쉬고 있는 공간을 직원들이 수색하도록 동의를 하나요 혹여나 그 안에서 호텔 규율을 어긴 담배를 피었거나 고기를 구워먹었던 흔적이 있다고 해도 그 누구도 우리 허락 없이 우리가 점유하는 객실을나는 그것을 사랑했다! 이것은 Aewol에서 나의 제 3의 체재이었다. 그것은 해변에 따른 아름다운 해변과 멋진 레스토랑을 가지고있다. 그러나 도시에 가까운. 그리고이 Aewol bada Townhouse가 최고였습니다. 나는 거기로 다시 돌아갈 생각이다.  바다를 마주보고있는 Aewol starbuck 옆에 있으며, 모든면에서 주인, 위치, 시설 및 경치의 환대가 가장 좋습니다! 그리고 그 가격은 품질면에서 상대적으로 저렴합니다. 손님은 2 층 건물을 사용할 수 있으며 각 층은 매우 독립적으로 사용할 수 있습니다. 나는 강력하게 부부와 가족 모두에게 그것을 권장합니다!  최전선에서 바다를 조망할 수있는 것을 골라라. 그러면 최고로 즐길 수있다!이틀 동안 머물렀다. 객실은 2 인용으로 일반 한국 호텔 객실보다 컸습니다. 객실 편의 시설은 잘 작동하며 문제는 없습니다.  그러나 두 가지 점이있었습니다. \xa01 . 욕실에는 목욕 타월이 없으며 호텔은 핸드 타월 만 제공했습니다. 방에 목욕 타올을 추가하십시오. \xa02. 아침 식사 스프레드는 매우 좋지만 아침 식사 이름이 부족합니다. 나는 회교도이므로 음식에 돼지 고기가 들어 있는지 여부를 결정하기가 매우 어려웠습니다. 음식의 이름은 매우 유용 할 것입니다.  위치는 공항과 도심 근처에있었습니다. 결국, 그것은 단지 평범한 호텔이었습니다. 단체 여행객 만 이용할 수 있으며 호텔을 수면 전용으로 만 사용해야합니다.Stayed in this hotel for 4 nights with group tour.  The hotel exterior looks good and grand but that was the only good thing.  Despite this looked like a new hotel, overall was badly managed.  - bed was too lousy and too bouncy. Many of us had back pain sleeping on it.  - 2nd night saw cockroach running around couldn\'t kill it as it crawl in the wall crack.  Then a creepy insect was on the wall (picture) when we woke up the next day.  - Wallpaper peeled off, uneven laminated floor at corridor, tiles cracked, ceiling with obscene water stain (as per picture). - moved the bed a bit and shocked by chicken bones and piles of used tissue under the bed.  - there was balcony/ smoking area but never cleaned. Noted rubbish beer can on the floor since first night and remained there when i距離機場不遠，乘坐的士大概7000韓元，7美金吧。 自己駕車的話也很好找，停車場空曠，易停。 開去市中心需要10分鐘左右。 隔音超級好，因爲入住當天遇上了跆拳道大會，好多中小學生，但半點噪音也沒有聽到。 櫃檯的工作人員會幫忙叫車去機場， 好方便的酒店。這裏的房間十分寬敞，陳設簡單但是乾淨大方，工作人員回應需求的速度迅速而且親切。與訂房價格對照，是一家性價比很高的飯店。唯一的缺點是周圍無處可逛。2017년 1719일 이틀 묵었습니다. 솔직히 이 여행사에서 예약을 이 호텔을 선택하지 않습니다.  기본적으로, 이 호텔은 아무것도 꽤 주변 내에서 훨씬 찾아냈습니다. 호텔 외관은 기반으로 새 것처럼 보입니다.  체크인도 빨랐어요.. 방은 깨끗하고, 넓고 심플한 디자인입니다. 욕실은 깨끗하고 넓고, 필요한 세면도구가(칫솔 제외) 갖추어져 있었습니다. 방에서는 Wifi가 좋았습니다.  편의점이 1층에 위치한(프론트 데스크 카운터 기본적으로 옆에. 이 정말로 근처에 아무것도 많이 합니다.  아침 2일간 같은 다양한 평균.  전반적으로 "목적 잠을 수행하는 여전히 만족스럽습니다.일단 주변에 유흥주점밖에 없어요. 그래서 여자들끼리 오면 진짜 무섭고 또 환풍이 잘 안되고 담배냄새 진짜 토나옵니다. 금연이라 되어있고 리뷰도 다 좋아서 싼맛에 예약했는데 진짜 담배냄새가 상상초월해요. 건물공사가 진짜 대충되었는지 담배냄새가 화장실에 겹겹히쌓이면서 그렇게 예민하지 않았던 저조차 진짜 구역질 나올듯 한 경험이었습니다. 그냥 밤 샜어요 친구랑.. 정말 죄송한데 모텔용으로 와도 되지만 여행오셨다면 싼가격인데도 비추할게요.. 진짜,,여행 최악의 경험입니다오라 스테이 호텔 (Ora Stay Hotel)은 여관과 같은 호텔입니다. 그들은 손님을 위해 빠른 체크인을하는 정말로 단순한 리셉션을 가지고 있습니다. 객실에는 위성 채널을 시청할 수있는 평면 TV, 냉장고 및 무료 Wi-Fi가 있습니다. 전용 대형 욕실에는 샤워 시설이 있으며 제한된 무료 세면 도구와 헤어 드라이어가 있습니다. . 여행자를위한 기본적인 필요성. 지하 쇼핑은 단지 100m 거리에 있으며, 동문 시장은 불과 650m 떨어져 있습니다. Drangon Head Rock과 Tapdong Square와 같은 관광 명소는 도보로 쉽게 도달 할 수 있습니다. 환전정 파빌리온 버스 (Gwandeokjeong Pavilionbus) 버스 정류장에서 시내 관광 버스 (Hop on and Off city tour bus)를 이용할 수도 있습니다. 주변은 전혀 시끄럽지 않습니다. 호텔 옆에있는 프라이드 치킨과 맥주 하우스와 2 개의 문이있는 해산물 레스토랑도 있습니다. 플러스 호텔 바로 맞은 편에 미니 마트가 있습니다. 총체적으로, 나의 2 개의 날 체재는 멋졌다. 그들은 리셉션에 자주 없기 때문에 직원에 대해 말할 것도없고 매일 방을 청소합니다.호텔은 공항과 매우 가까우며 로비에 7 개의 11 개가있어 편리합니다. 그러나 서비스는 그리 친절하지 않습니다. 수하물을 도와주는 벨보이는 없습니다. 영어로 의사 소통을 할 수없는 unsmiling 프론트 데스크 접수. 아침 뷔페는 거의 매일 동일합니다. 엘리베이터가 느립니다. 객실은 넓고 기본적인 세면 도구를 제공합니다. 그리고 위치는 대부분의 관광 사이트의 중심입니다. 나는 다음에 다른 호텔과 함께 예약하는 것을 선호합니다.공항이랑 매우 가깝지만...대로변이라시끄럽고.. 곰팡이 냄새로인해  창문을 닫을수없는데... 문열며 시끄럽고... 에어컨은 바로 침대위에 있어 너무 직방이고... 화장실 문도 너무불편...It\'s an average hotel, close to the airport, around 10-15 min drive   However for those who want  to spend quality time in Jeju, it\'s quite far from main sightseeing places, like seashore, beaches and other attractions. Because if you are traveling alone and have no international driving license, it will be hard to get around the island   Little shops and cafes around this area.   Cons : no safe to leave documents etc ..at the beginning of October, 2018, My friends and i lived in this hotel, we found a strange thing that the lights inside the toilet was automatically switched off after 3-5 minutes, it was very inconvenient and unacceptable especially when we were doing shower, how can we take shower with lights suddenly switched off, then shouted outside to ask my friend to try press the switch again, (although we did this action, the lights still switched off every 5 minutes). when enquiring from the front desk on the second day, he replied us it was due to unstable electricity supply after typhoon, at first we accepted his explanation.  however, this awful situation continued for four days which we lived in.  yesterday, i saw from facebook other people who lived in last week also complaining긴 밤낮으로 잠을 자지 않고도 깨끗하고 편안한 호텔 방을 확인해 주셔서 감사드립니다. 우리를 매우 행복하게 만드는 모든 필수품이 제공되었습니다. 잘 자거야. 제공되는 아침 식사도 매우 맛있었습니다.• 공항, 페리 부두, 버스 터미널에서 10 분에서 20 분 거리. • 작은 거리 안에 호텔, 그레이스 호텔 (꽤 유명하고 버스 정류장도 이름을 그레이스 호텔을 사용) 또는 주요 도로에서 레오 호텔 (비교 높은)을 발견하는 것이 좋습니다 다음 검색 호텔 jaja (이름이 잘못 될 수 있습니다) 단지 2 그레이스 (Grace) 또는 레오 (Leo)에서 도보로 3 분, • 좋은 위치, 대중 교통 (버스), 레스토랑 및 편의점에서 도보로 1 ~ 3 분 거리, • 호텔은 오래되었고, 방은 작습니다. • 매일 하우스 키핑과 수건 교체, • 직원 / 소유자가 도움이됩니다, 근무 교대 근무 직원은 영어를, 야간 직원은 중국어, 그는 중국어와 영어를 모두 알고 있습니다. • 1 층에 뜨거운 물과 시원한 물을 사용할 수 있으며, • 공기 컨디션 및 온수 샤워 상태 양호, 헤어 드라이어, 샴푸, 목욕 젤 ... 이용 가능, \xa0- - - - - - - - - - - - - - - - - - - - - - • 목포에서왔다면 목포에 2 개의 부두가 있음을 유의하십시오. 제주에 간다면 큰 것이 아니라 작은 것이됩니다. • 온라인 예약 JeJu 페리는 한국 발급 신용 카드 만 수락하며, 한국 신용 카드가 아닌 다른 나라의 신용 카드로만 예약을하고 페리 회사 이슈 티켓과 은행 통보를 받지만 마침내 사용할 수 없습니다위치도 매우 좋고, 근처에 있는 쇼핑센터, 레스토랑, 카지노도. 방은 좀 좁고, 침대가 2 주문한 공간이 남아 거의 필요하지 않습니다. 이 이상한 타월을 제공할 수 없고, 또한 화장실도 매우 의 mordern. Tv는 굉장히 새롭고, 그동안 찾아돌아다니다 컴퓨터 고장 났어요. 안전금고도 없었다. 해 말할 수 있는 좋은 조건이 아니기 때문에. 또한 대부분의 시간을 receiption 하듯 아무 누구도 없었고, 그는 그 곳에 그녀는 자신이나 / 숨기기 /. 어쨌든, 전원 어댑터 중 하나 달라고 해서 잡은, 그는 판매만 하는...이 호텔은 중앙에 위치한 버스 정류장에서 아주 가깝고 (3 분). 직원들은 영어를 유창하게 구사할 수 및 위치가 당신을 구성할 수 있습니다.   이 호텔은 거의 모든 서비스: 7 eleven 편의점, 클럽, 좋은 한국식 바베큐, 과 세탁 및 보행자 전용 거리.   다시 오고 싶네요.   우리는 5층, 객실 508 과 하루의 일을 제 4 욕실도 작동하지 않았다. 나는 그의 이야기는 국 이나 바닥에 바로 3rd 프런트 데스크 및 변경할 수 있습니다.   아주 좋은 숙박 시작하려면, 우리는 여행에서 렌트카. 제한된 주차는 호텔은 일도 2 분거 리. 체크 검토 디셈버 호텔. 위치도 매우 좋은 음식과 주요 도로 근처. 쇼핑도. 간단한 트리플 룸. 넓은 옷장이 없어서, 그냥 당신의 코트 후크. 이 호텔은 그중에서 놈 연인끼리 제주도 중문 통나무 펜션 는 의상 여긴아니에요. 스튜디오 로프트. 프런트 데스크는 음식 거리였지만 기대는 대환영 또는 서비스. 단순한 지붕에 머리의 저렴한 호텔. 좋은 가치.저는 가격비교사이트에서 가장 저렴한 가격에 올라온걸로 예약을 했는데, 취소해달라고 왔네요. 그가격에는 안된다면서요. 그러면서 부x닷x 잘못이라고 하시면서 도리어 저에게 성을 내시네요. 네이버나 다른 인터넷에서 찾아봐도 비슷한 가격인데, 만원이상 비싸게 말씀하시며 취소해라. 예약사이트하고 얘기해라 라는데, 근처도 가기싫습니다. 고객은 어디까지나 예약사이트를 통해 정보를 확인했는데 호텔 주인이라는 분이 왜 저에게 화를 내시죠? 상황만 잘 설명하시면 이해될껄. 가는말이 고아야 오는말도 고운겁니다.Hemos pasado tres días fantásticos. El personal del hotel es muy amable. La habitación amplia, todo muy limpio. Los jardines y piscinas geniales. Muchas tumbonas. La luminosidad del hotel por dentro y esa vegetación lo hacen todavía más encantador. Si eres de comer y beber, tienes todo el día para reponer fuerzas después de los baños. Nada más cruzar la cancela trasera del hotel está la playa, con un servicio de tumbonas y sombrillas gratuitas del hotel. Todo para pasar unos días inolvidables.전날 다른 카라반에서 침대가 불편하고 히터 켜지고 꺼지는 소리가 너무 시끄러워서 못잤어요. 그래서 걱정했는데 여기 카라반이 커서 침실과 거실 사이에 있는 문을 닫으면 첨 아늑했어요. 침실에는 양키캔들등이 있어서 등밝기는 조절이 가능했고 제일 좋았던 것은 온수매트가 침대에 깔려 있어서 정말 따뜻하게 푹 잘 수 있었어요. 다른 일행은 텔레비전 보고 싶어 했는데 부엌쪽에 텔레비전이 있어서 각자 하고 싶은 거 할 수 있어서 좋았습니다. 샤워실은 작지만 온수가 잘 나왔고 부엌도 넓고 좋았어요. 후기가 나빠 걱정했는데 괜찮았어요. 여행을 좋아하고, 출장도 많아서 국내 및 해외 다양한 숙박시설에 숙박예약 및 숙박경험이 많은데,  항상 업무가 바빠서 후기를 잘 못 남기는 편이었는데.....이번에 내 생에 최악의 경험을 하여, 다른 여행자들을 위해서라도 후기를 남기니 꼭 참고하세요. (첫날과 특히, 둘째날 각각 어이없는 경험을 하였네요...이곳 절대 이용 안하시기를.....) 예약사이트에 캐러반 A 및 캐러반 B로 구별되어 예약하도록 되어 있고, 사진상, 내부구조상 주방이 일자로 짧은 구조(A형) 및 주방이 디귿자(U자)형으로 넓은 구조(B형)이 있어, 요리좋아하는 아내와 상의하여  "캐러반 B"로 예약하였습니다. (아마도, 이것 없었으면, 다른 숙소로 예약했었을 것입니다.) 낮일정 마치고 저녁7시30분경 숙소로 가서 체크인을 하고 안내해준 캐러반 안에 들어가 보니, 예약한 B형이 아니고, 주방이 아주 좁은 A형이어서, 예약한 방과 다르다 했더니, 여사장인듯한 아주머니가 말하기를 "예약한 대로 방을 주는 것이 아니고, 우리가 정해주는 대로 받는 것이다" 라며 가르치듯 말씀하시기에, 예약사이트를 보여주며, 우리가 예약한 "캐러반 B"는 사진상 분명히 주방이 U자형인데, 이방은 일자형으로 짧아서 우리가 지금 장 봐온 요리를 할수가 없다 하니, "사이트에는 딸이 사진을 올려놓아서 나는 모른다. 다른 사람들은 그동안 불만 없었는데, 왜 이렇게 까다롭게 구느냐" 하더군요. 이런 실랑이를 하고 있다가...아내도 서운해 하고...장봐온 해산물은 어차피 요리못하게 되었고..기분이 너무 나빠, "시간이 늦었으니 오늘은 그냥 자고,내일은성수기 때 42평 복층에 묵었지만.. 우선 청소도 제대로 되어 있지 않은상태에서 입실시키고, 실외 수영장 역시 그리 깨끗하지 않습니다. 더불어 조식 시 나온 빵은 오래된듯한 느낌을 받았습니다. 말은 리조트인테 시설 역시 그리 좋지 않는 모텔보다 못한 시설입니다. 그리고 주차장 역시 협소하여 주차시 문제가 많이 있습니다. 손님한테 물어보지않고 숙박 키 및 자동차 키를 마치 강제로 줘야하는듯한 느낌이 들어 많이 기분이 상했네요. 이제껏 제주도를 몇번 가봤지만 이 모텔보다 못한 숙소때문에 다시는 가고 싶지 않는다는 생각하게 되었습니다.6월의 마지막을 보내며 가족과의 힐링여행~~ 네번 제주여행에서 처음으로 자유와 여유로운 여행을 다녀올 수 있어 힐링이라는 것을 느끼게 되어 흐뭇한 여행이였다. 비가 오는 덕분에 계획된 곳을 모두 돌아 보지는 못했지만~~ 무엇 보다 오픈한지 얼마 되지 않은 "물뜰에 쉼팡"  펜션의 2박은 아이에게나 우리 부부에게 즐거움을 안겨주어 감사하다. 예정했던 \'에코랜드\'에서의 범퍼보트를 날싸관계로 운영하지 않아 아쉬웠는데 펜션 수영장에서  수상자전거와 투명 카약을 할 수 있어 비용 절감의 효과를 누리게 되어 감사~~ 초등아이를 동반한 가족여행이라면 꼭 제주 항공 우주 박물관을 가시길 추천함.장점: 저렴한 가격, 넓은 방, 친절한 자연의 단점:   - 침대 시트, 이불과 베개는 강한 곰팡이 냄새가 나  - 모기 등 벌레가 너무 많은, 거미, 싶다면, 등으로 다양한 크기의 거대한 작지. 우리는, 나와 내 아내는, 방을 세 번 하는 버그 때문에 너무 많은 분이 단지 내 방에 들어가자. 하지만 네 번째 방에 벌레 등이 다. 아무것도 할 수 있는 호스텔이 있어.   - 매니저가 너무 바빠서 처리 문제는 듯. 예, 등 많은 문제들이 잘못 - 예약.이 호스텔은 깨끗하고 좋습니다. 다시 즐길 수 있는 뷰를 즐길 수 있는 호스텔 입니다. 적당한 사람들을 위한 별도의 개인 정보 보호는 휴가 중. 우리가 머무는 동안에, 우리는 방을 구할 수 있는 벽에서 벽 등반 은 우리 방, 저는 cooool 있습니다!   머물고 즐길 수 있는 지. 직원들은 매우 친절하고 도움이 되었습니다. 열심히 하였고 예하 투어를 위해서 갈 수 있는 방법에 대한 도움말. 그는 버스 정류장을 기꺼이 보냈습니다. 정말 치료 해 손님이 준비되어 있습니다. 제주 에 다시 가게 된다면. 저는 이 호텔을 두 번 다시 생각 하지 않습니다. 저렴한 가격에 좋은 곳이기 때문입니다 라고 말하고 싶어요. 8 표 중 10. :)    - 그리고 말레이시아-정말 저렴한 가격에 이 호텔을 예약 하는 다른 여행 사이트에서 7/10 에 위치합니다. Active 여행자, 아주 넓은 방이 있는 유일한 장점이라면 주인은 매우 협조적이고, 할 수 있다 단점: 1. (택시를 타고 45분) 시내에서 너무 멀리 떨어져 있을 때 가 밤에 시내를 돌아다니지 않을 수 없어 나도 구매 (참나! , 너무 멀리 떨어져 있는 버스 정류장에서 2 . (주인은 우리에게 필요한 드라이브에 있는 버스 정류장에서 택시를 타고 시내에 가 비용을 20 k! , 택시 기사들이 호텔을 3. 찾을 수 없는 탐색 (필요한 호출하고 소유자 방향) 이 한 의사 교환이 하기에 영어를 이해하고 매우 diffucult.   4. 나으실 수 있는 유일한 세입자 하는 불편한 호텔, 이웃 이나 소주를 마시는 주인이 훨씬 냄새가 나 ㅆ다.   저는 오히려 더 높은 가격 대비 그냥 작은 방에 있는 트레이드 호텔은 안전하다는 느낌이 있다.버스 역에서 길을 건너 geoumun 오름 (단면을 볼 수 있는 버스 정류장에서) 길을 건넌 후, (있다면 무거운 짐이 추천하지 않는 것, 하고 싶지 않다면) 그냥 걸어갈 수 있는 약 2 km マイクロ. 이 호텔은 큰 오렌지 왼쪽 벽. 때입니다. 주인은 영어를 잘 하지 못했지만 친절하고 매우 도움이 되었고, 그는 그가 우리의 기본적인 요구는 할 수 있도록 GS25, 패스트 푸드 등이 있다. 이 곳의 모든 것을 최고의: 더 나은 서비스와 시설을 하지 않을 것을 내야 하는 기숙사 방을 볼 수 있는 싱글 침대 200k idr 의 2층 침대, 싱글 침대가 있는 방에서 4 편안했어요. 반면에 친구와 저는 점유 공간 (그냥 우리 두 딸 들). 필요한 모든 것을 얻을 수 있는 방에, 평면 tv, 개인 욕실, 미니 냉장고, 헤어 드라이기... 저는 정말 행복한, 이 평화롭고 좋은 분위기... 6월 7월에 오는 것이 호텔 근처에서 하이킹이나 mt 거문도 oerum. (미리 예약하면). 또 다른 가장 좋은 점은, 버스 정류장이 바로 앞에 버스가 하루에 몇 번 있긴 하지만. 또한 저는 그 분 2사람이 와서 제안 그룹, 친구들과 함께 더욱 즐거운 시간이 와서, 이 곳도 있을 것이라고 생각합니다. Very bad hotel and bad service,normally check in time is 15:00,but hotel have vacancy room ,they will tell you must be waiting for room until 16:01 ,although 15:59,u must be waiting for one min. I won’t come again ,very stupid hotel . No one is recommended anyone stay here  非常非常烂的服务，所有的网站下午15:00办理入住，到达酒店告知必须16:00，少一分钟都不让办理，态度恶劣，再也不会来了，垃圾酒店，垃圾服务，不推荐任何人住在这里。Hotel meraviglioso ottima posizione personale ci anno lasciato la camera sino alle 17 gratuitamente e la nostra camera era bellissima con idromassaggio poltrona massaggi e pigiama e altri acessori pulitissima comodissima spazziosa favolosa이곳에서 3박을 머물렀습니다. 이 투어를 예약으로, 예약할 수 있지 않나. 체크인, 두 명 당 한 번에 하나의 키만 할당된 공유할 수 있습니다. 변경다른 사용자가 이 허용되지 않았다! 입구에서 방으로, 얼마나 비좁은 첫인상이 었습니다. 바닥 난방이 좋은 것이었습니다. 이 갖춰져 있었다, 헤어 드라이어, 냉장고, 전기가 충분하지 않고 모두 사용할 수 있습니다. 전선이 엉망이고, 어디서나. 아침 식사는 최악. 차나 커피도 없습니다. 물론, 이 수건, 가지고 있는! 그들은 오직 손 닦는 수건, 목욕 수건 제공할 수 없습니다.The service is very worst and the sever\'s attitude is vary bad!!!! The room is old.The breakfast is extreme bad. 사진보다는 내부가 좀 낡은 편이에요. 입구에 당나귀, 토끼, 개, 닭이 있어서 동물 좋아하시는 분은 좋을 거 같아요. 화장실에 욕조가 있는데 온수 제한이 있어서 공용사워실에서 사워하는 게 편할 거라고 이야기는 들었는데 밤에 가려니 어디 있는지 잘 보이지가 않았어요. ㅜㅜ 다른 건 그래도 다 괜찮은데 내부가 낡아서 오래된 나무 냄새나는 거랑 침대가 아주 딱딱해요...ㅜㅜ 잠을 잘 잘 수 있을지 모르겠어요. 매트릭스가 거의 안 느껴진다고 보심 돼요..ㅜㅜDirty environment, bad feeling, facility not complete - not provide bath towel, unable to communicate with the staff over the counter, receptionist cannot understand what we want. They are not friendly ask well.이 호텔은 상대적으로 새로운 곳입니다. 130 세의 밤 3 시부 터 밤에 한 가족 룸에서 밤에 세부 사항이 실망 스럽습니다. 체크인 할 때 목욕 수건이 없었기 때문에 프런트에서 수거해야했습니다. 수건은 오래되고 힘들었습니다. 그들은 컵과 주전자를 가지고 있었지만 티백이나 커피는 제공하지 않았습니다. 최악의 부분은 침대 시트에 곰팡내 나 습한 냄새가 있었기 때문에 마지막 체크 아웃 후에 세탁되었는지 궁금했습니다.  체크 아웃에서 나는 모든 것이 ok인지 물었다. 나는 그 여성에게 냄새 나는 침대 시트에 대해 이야기했다. 그녀는 "미안하다."라고 대답했다.방에 들어가자마자 냄새가 났습니다. 침구를 바꿨는데도 불쾌했습니다. 침대 시트를 들어보니 곰팡이가 엄청났습니다. 그래서 두개 있는 침대중 하나를 포기할 수 밖에 없었습니다.  이런곳에서 외국인이 잠을 잔다면 국가적 망신이라고 생각합니다. 들어가자마자 다른방을 알아보았지만 주말이어서 방이 없었습니다. 있었다면 돈을 포기하고 다른 숙박업체에서 잤을것입니다 씻으려고 나오는 물조차도 느낌이 좋지 않은것 같았습니다. 꼭...다른 곳을 가세요.제주 시내에 있는 호텔이었습니다 주차장은 조금 떨어져 있지만 이용하기 문제는 없었구요 시설이 조금 낙후되었지만 저렴한 가격에 저희는 문제 없이 하루밤 잘 묵었습니다내 인생 최악의 호텔. 호텔이라는 말 조차도 아깝다. 우리 일행 중 한명은 들어가서 5분도 지나지 않아 피부에 이상증상(가려움과 붉은 반점 동반)호소. 내가 묵은 객실에 비치된 요 3세트 모두에 정체모를 다양한 크기의 얼룩들이 빠짐없이 있었다. 돈 내고 간다면 말리고 싶은 호텔. 숙박을 포기하고, 다른 호텔로 옮기려고 나오는 길에 초등학생이 있는 가족을 만났는데, 초등학생 3`4학년 정도 되어보이는 아이가 "엄마, 여기 무서워요" 라고 말함.. 격하게 공감. 어른인 나도 너무 무섭고 더럽고 싫었음.너무 낡았어요 자다가 유리가 떨어지는 공포 체험 .... 침대 위치가 조금 애매했으면 응급실 갈뻔 했어요위치가 좋은 것 빼고는 (공항에서 가까움) 좋은 점이 전혀 없음 로비는 크지만 관리되지 않아 매우 지저분하고 리셉션은 불친절함 온돌방을 받았는데 침대가 있었고, 시트가 깨끗해 보이지 않았음 욕실은 더럽지는 않았지만 결코 깨끗하지도 않음 재방문의사 없음우리가 제주를 여행했을 때 우리는 몇 밤을 여기에 머물렀고 우리의 렌트카에 앉아있는 탐색 장치는 찾기가 매우 쉬웠습니다. 공항에서 약 20 분. 우리 아파트에는 발코니가있는 바다와 아름다운 거실과 주방이 있으며 기본 요리 도구가 있습니다. 아파트의 지시 사항은 영어로되어 있지 않지만 모든 경고문을 읽고 특히 밖으로 나가면 동시에 발코니 문 2 개를 닫지 않는 것에 대한 번역 앱을 사용하십시오. 또한 아파트에는 거실 패널과 장소의 조명을 제어하는 리모콘이 있습니다. 셀프 세탁 시설은 없지만 공항으로 돌아가는 것처럼 차로 10 분 거리에있는 저렴한 24 시간 코인 세탁소가 있습니다. 제주에 돌아올 때 좋은 가치의 기반이므로 다시 예약해야합니다.널찍하고 깨끗한 방. 나는 그 지역이 새롭고 개발되고 있다고 생각하지만 그것은 매우 조용합니다. 바다를 바라 보면서 발코니에서 멋진 전망을 즐기실 수 있습니다. 친절한 직원이지만 영어는별로하지 않습니다. 우리는 에어 컨디셔너 문제에 관해 그들에게 말했고 우리는 통제를 이해할 수 없었다. 다음 날, 그들은 우리에게 제어판이 훨씬 더 조용한 광고를 영어로 녹음했습니다. 우리는 공항에 오전 5시 택시를 요청했다. 비록 사소한 문제가 있었지만 직원은 우리를 위해 또 다른 택시를 불렀고, 우리가 택시를 얻었다라고 확신하게했다. 우리가 그들과 대화를 나누기를 바랍니다. 그들은 아주 좋은 사람들입니다. 다음 번에는 분명히 거기에 머물러있을 것입니다. 공항에서 15 분 거리에 교통 정체가없고 11 달러에 들기 때문에 매우 합리적인 요금입니다.1. 대부분의 직원들은 친절하나 정말 말도 안되는 서비스(?)를 제공하는 직원이 있음. 차량을 가지고 3박을 숙박하면서 낮에는 업무를 처리하고 같은 장소에 차를 세워뒀더니 방치 차량이라고 차량에 붙어 있는 스티커를 보고 회사에 전화를 해서 차량 방치 했다고 말함. (출장 복귀 후 엄청 깨짐...제주도에 놀라 갔냐고...쉣) 심지어 차에는 연락처가 붙어 있었고, 체크인 시 차량번호도 기입하였으나 회사로 전화해 내 연락처를 알아내고, 호텔 객실로 전화해서 차량을 방치 하면 어떡하냐고 따지고 어렵게 연락처 알아 냈다며 마치 대견한 짓을 한 것 처럼 객실로 전화함, 너무 황당해서 프론트로 가서 따지니 호텔 시스템의 부재는 자기는 모르는 일이고 자기는 잘못한게 없다고 큰소리 침...거참 나 호텔밥 10년 먹었고, 호텔경영학박사데 기가차서 그냥 키 던지고 나옴... 2. 주변에 편의점을 갈려면 걸어서 10분 정도 걸어가야하나 로비에 작은 슈퍼같은게 있긴 함 3. 차량이 있다면 공항과 가까워서 편리하나 항공기 이착륙 소리가 많이 심함. 4. 룸 컨디션은 나쁘지 않으나 침대는 허리가 아픔 5. 조식 포함이나 토스트 정도 먹을 생각이면 나쁘지 않음 6. 시설에 대해서는 가격대비 결정해야 할 부분이고, 나름 씨뷰라 가성비는 상당히 좋음 6. 저 직원만 찌르면 나름 괜찮은 호텔임...나머지 직원들은 모두 친절했음(사장 아들이면 모르지만 그거 아니면 제발 교육을 시키든 짜르든 하심이 회사 발전에 도움이 될 듯)4인에 조식까지 준대서 싸다 했는데 다 이유가 있어요...공항 바로 앞이라 진짜 시끄럽고요...렌트하면 좀 나은데 대중교통 접근성이 떨어져요..조식은...먹을거 진짜 없고요..직원 친절, 숙소 청결도 우수, 뷰도 아주 만족한 숙박이었음. 조용한 시설이었으며 공항에서 가까워서 너무나 편했다. 또한 조식도 단체 때문에 나름 훌륭한 조식을 먹게되었다. 가격에 비해서 좋다는 뜻이다.친절도 잘모르겠고 별로 늦게 가진않았지만 밑에 슈퍼도 닫혀있고 룸컨디션도 별로네요 바닥에 얼룩도 많고 냄새도 심하고 화장실 청소를 한건지 안한건지 변기에 머리카락도 그대로 있고요 들어가자마자 기분 나빴습니다 오션뷰 아닌 쪽이였고 비행기 소음 진짜 시끄럽고 신경 쓰이네요온돌방 82000원에 예약. 예약하자마자 취소 하려고 하니 취소수수료 50%. 방.시설도 기대 이하고..침구류가 별로 여서 잠자리가.편치 않았네요..ㅡㅡ.가격대비 별로 였음.. 공항 가까운것 빼곤 나머진 별로 였어요 저 가격 아니었으면 그나마 나을지도..모르겠지만요내가 그것을 좋아하게했던 해안 옆의 재산은 옳았다. 나는 항상 파도가 부서지는 소리에 일어났다. 주변에 몇 가지 편리한 상점이있어서 내 경험을 훌륭하게 만들었습니다. 이 호텔은 버스 정류장을 걸어서 약 10 분 거리에 있으며 제주 국제 공항과 심지어 최재해 해변으로 향합니다. Hagwi 초등학교 버스 정류장에서 도보로 약 25 분 또는 도보로 18 분 거리 인 Hana mart라는 대형 슈퍼마켓도 있습니다. 이 호텔은 유명한 애월 해안 도로와도 멀지 않습니다. 직원들은 좋았고 영어를 말했고 버스와 식당을 어디에서 얻을 수 있는지에 대한 몇 가지 질문으로 기꺼이 도와 드리겠습니다. 나는 또한 매일 무료 물병과 수건 교체를 받았다. 나는이 호텔을 제주도의 멋진 해안 전망을 가진 호텔을 찾는 사람에게 추천 할 것입니다Just stayed at the Sydney Hotel in Jeju. It\'s between the airport and Hallim on the northwest coast. Great location along the scenic shore road for those looking to drive their way counterclockwise around the island.   The staff were very helpful and there\'s a family atmosphere here. They offered pamphlets and information about sights on the island.   Once you head to your room it\'s amazingly peaceful. Only the sound of waves on the rocks can be heard.  We had a room with a little closed balcony and a big window that opened up to a view of the water.  We slept well thanks to the refreshing sea breeze. The bed was top notch.  There\'s also a little store conveniently located across the street.   The breakfast was affordable and decent, Korean style with plenty of food to fill you더블 하나 싱글하나 베드 있고 방 넓고 뷰도 좋아서 그냥 잡았어요 7만원 1박 ... 관광지에서 저렴한 요금이다 싶었고 차 댈데가 많아 그냥 잡은게 화근이 되었네요.. 침대불편 침구(베개 이불)와 수건에선 알수없는 고약한 냄새.  겉보기엔 깔끔한듯했으나.. 남편이 일어나더니 빨리 나가자고 난리네요 ㅋ좋은 숙소란  깔끔하고 친절하고 따듯한 쾌적한방이라고 한다면모두 충족시켜주네요^^    친구추천으로 엄마랑 동생과 묵었는데 가족모두 흡족해하여 편안한 여행이 되었네요^^         창밖으로 바로 바다가 보여  쉬는동안에도 재주를 느낄수있고요~~ 수압이 너~ 무 좋아서  여독을 풀어주고 침대도 2개가 들어가면서도 넓찍한 방이 전혀 답답하지 않아요    저렴한 가격에 이정도의 조건~ 너무 좋았네요 참~ 조식도 나와요^^由於行程很趕，所以訂了這間綱上資料顯示距離濟洲機場只有一公里的平價酒店。當我們怱忙地把大型行理存倉後，由機場步行往酒店時才發現受騙，行了20分鐘，GPS顯示仍然有漫漫長路，結果要改乘的士。根據兩程的士計算，酒店距離機場最少5公里！我們硏究了地圖，由機場劃一條直線到酒店就真的是一公里！  上了的士，司機只search倒Miracle Hotel, 沒有Viewtower Resort，由於言語不通，司機很不耐煩的把我們送到Miracle Hotel，然後趕我們落車。天色已晚，當我們正在蹴躇之際，迎面走來一位男士，問了我們的booking後就帶我們入了Miracle Hotel，之後發現對面不遠處就是Viewtower Resort！  另外，我們住的房間晚上居然有蚊！整晚被蚊叮及在耳邊飛。平價酒店裝修殘舊設備一般都合理，但有蚊叮人就不能接受（窗戶都裝了防蚊紗網，顯然是日久失修）。힐파크 다녀왔는데요, 제주도심 한복판에 있어서 근처 면세점을 가거나 근처 맛집등을 가기에 딱 좋아요~*을 더한* 친절하고 호의적 인 한국인 가족 소유 호텔 뉴타운의 매우 좋은 위치 무료 식수 무료 와이파이 액세스 엘리베이터  *마이너스 더블 침대와 싱글 침대를 구비하고 있습니다. 14 m 2 및 그 이하의 공간 잠글 수있는 수하물 보관소가 없다.3일 밤을 묵었는데 하이트 호텔. 리셉션 직원이 영어를 못했다. 이 호텔은 시청 근처에 있는 레스토랑이 많습니다. 위치는 공항에서 가까움 (버스 번호를 여기에 500). 우리 방은 괜찮았습니다. 아침 식사는 괜찮았어요 김치, 쌀과 빵. 특별한 것은, 수 많은 기대할 수 없지만 이 가격이면. 저렴한 여행자의 경우, 이 날 수도 있습니다. 와이파이는 빠르고. 제가 마음에 들지 않는 화장실의 냄새.나는 이 호텔에서 1박을 할 수 있지만 저는 없습니다. 저는 사람을 제외하고는 모두를 볼 수 있고 리셉션에 2. 도로 옆에 있어서 만큼은 정말 향잡음을. 방은 깨끗하지만 욕실은 완전히 젖은 데 최대 30 분 전에 들어갈 때는 사람처럼. 바디 워시 비누, 바디로션, 을 사용할 수 있지만 큰 병 반 빈 /. 하지만 시장은 먹을 수 있는 아주 가까운 곳에 위치해서 걸어서 사용할 수 있습니다.Was a decent hotel. Close to the airport. Close to the city hall where there are a number of places to eat.  Man at the reception spoke no English. Corridors smelt of smoke. Luckily the bedroom did not.   The interior of the room was clean according to my girlfriends high standards. The bathroom had a high tech shower installation with nozzles and rain shower top - but of course it was broken! Luckily they had some other hand held shower head that was hung too low for me to stand under.  Breakfast was in the next door restaurant and was your usual white bread and jam assortment. However it was also possible to take some cold rice porridge thing. There was also coffee that was pre-sweetenedThe price is good and it\'s close to the airport. But if aesthetics are important this isn\'t the place for you. This hotel I would call a clean dive. Clean sheets but old wallpaper and no pictures anywhere. Typical with most Korean bathrooms the showerhead is next to the sink.  The location of the hotel is close to the airport but Jeju city isn\'t a good tourist destination. There are no sand beach in the area저렴한 호텔로 조식까지 먹을수 있어 좋아요. 공항도 15분이면 도착을 하고 주위에 유흥시설이 없어 조용해요.무료 조식이 있는건 좋은데...  렌트카 있는 분들은 몰라도 뚜벅이 여행자에겐 비추인 호텔 입니다  버스로 이동시 환승 필수이고, 버스도 배차 간격이 길어서 불편해요  그리고...청결 상태가 안좋아요~ 이불과 바닥에 머리카락이...ㅡ.,ㅡ;;;Tento hotel je opravdu pro batůžkáře. Po příjezdu do hotelu jsem se nahlásil na recepci, nikdo ani slovo anglicky! Na kus papíru napíší částku, která odpovídala ceně, ale účet z nich za 3 noci pobytu nedostanete. Na pokoji nebyla ani židle, musel jsem si o ni na recepci říci a dostal jsem trojnožku. Koupelna sice uklizená, ale když tam najdete zbytek zubní pasty po předchůdci a použité toaletní mýdlo, dělá se vám zle. Úklid jen povrchní. No hnus. Klima funguje prazvláštním způsobem. Byl to jeden velký omyl.住了一天，感覺比較差。泳池(夏天)没有開放，電子匙卡常常開不了門，走廊没有冷氣亦没有窗。。。 半夜往樓梯口取水喝，回房時開不了門，試了很多次都不成功。。。去找職員又不在，只留下手機號碼，但半夜何來手機在身。。。 已嘗試到附近的房間找，但最後都是找不到職員。 最終又回到房間門口再試，最後終於打開門，但全身已濕透(走廊很焗)。。。 好是位置很静，亦有海景，停車位亦足夠。 另外早餐和晚餐都沒有在酒店進食，自駕遊出外食都很方便。 我们是旅游公司的指定酒店，酒店设施蛮好的。干净整洁，设施齐备。 楼下有个小超市很方便的。附近出去买东西也是分方便的。酒店里面没有什么特别的活动和服务安排，几乎也没有看到服务员的到来，也许我们旅游在外面，也没有太多对酒店的依赖。哈哈，住宿还是不错的，很安静的。그닥 기대는 하지 마시구 ㅎㅎ 가격이 싸긴 하니까.... 딱 여관수준이에요. 방도 그렇고 방음도 그렇고 ㅡ 그낭 모텔이 나을거 같기두 합니다.....친절한 주인 분이 너무 좋았습니다. 시설은 아주 신식은 아니지만 청결도가 웬만한 호텔보다 좋았습니다. 침구는 물론이고 방 구석구석까지 깨끗하게 신경쓰신 것 같은 흔적이 느껴져서 좋았습니다. 와이파이도 무료였고, 공항에서도 가까웠으며 주차 공간도 아주 빠듯하지 않았습니다. 맛집 동도원, 카페(어머니빵집 등)와도 가까워서 걸어가서 다음 날 아침을 사 와서 더욱 좋았습니다.싼가격에 투숙하려고 왔는데 역시 싼게 비지떡이네요. 방음도 잘안되고 객실도 좁고 다음에 오면 다시 투숙하는 것에 대해서 생각을 해봐야 될것 같아요중국인들이 개별여행을 와서 길을 묻는데 제가 묵고 있는 디셈버 호텔이더라고요. 그래서 친절하게 같이 버스를 타고 내려서 사이좋게 호텔로 왔습니다. 신화의 거리에서도 가깝고 올래국수에서 직선으로 내려와 길만 건너면 호텔이 있어요. 객실은 깔끔한 편이고 넓었어요.친절한 주인, 깨끗한 방, 푹신한 침대, 욕실깨끗..깨끗한 냉장고. 뭐 흠잡을게 없네요.. 단.  냉장고 소음이 심하더군요. 잠잘때 좀 힘들었네요.폭설이 내려서 비행가가 결항되었을 때 이곳을 우연히 알게 되었습니다. 호텔 직원 분이 매우 친절하셨고 침대,화장실 등도 나쁘지 않았어요.친구와 2인실 이용했는데 옛날 모텔을  개조한듯합니다. 깔끔하고 좋았어요. 아쉬운점은 중국인 단체숙박장소라 그런가 너무 시끄러웠구요.. 조식포함이지만 큰기대는 마시길...위치 좋고(제주공항 근처) 직원분 매우 친절하십니다 무엇보다 가성비가 매우 좋습니다 39000원에 더블룸 잡았는데 생각보다 괜찮아서 좋았습니다, 조식 아주 좋았습니다, 자전거대여와 노래방 이용 가능합니다(노래방 1시간에 5천원이였던걸로 기억합니다) 로비에 간단한 놀거리도 있습니다위치는 시터와 공항과 가까워 이동하기에 매우 편리합ㅂ니다.   보안도 매우 잘되어 있고 조식도 매우 좋았습니다.제주시외버스터미널에서 한 정거장 거리에 위치해 있었구요. 근처에 약국, 병원, 작은 까페, 편의점이 있었습니다. 외관 및 내부시설이 깨끗했고, 실내에 엘리베이터가 설치되어 있었습니다. 전 6층 10인실 도미토리에서 1박 2일 지냈었구요. 방 안에 화장실이 두 개가 있어서 편리했어요!아쉽게도 수영장은 이용하지 못했지만 공항에서 택시 이용시 기본료에서 +2~300원정도 추가되는 거리입니다. 숙소 아래에서는 편의점이 근처에 있고 걸어서 5분거리에 맥도날드도 있습니다. 방은 스텐다드트윈베드룸에서 숙박했는데 룸컨디션은 나쁘지않았습니다. 다만 취침 후 새벽쯤 화장실 사용시 하수구 냄새가 올라와서 다소 아쉬웠습니다. 아침 조식은 정말 좋습니다. 전복죽을 주는데 퀄이 괜찮습니다. 제주 조식주는 호텔 몇군데 이용해봤지만 상당한 퀄입니다.실내 수영장 있는 호텔 잘 없는거 같은데  여긴 있네요  이용권 줘요  근데 이용 못함 ㅠㅠㅋㅋ 깔끔하고 지내기 괜찮아요   좀 좁은감이 있나?! 그래요  침대빼면 있을곳이 좀 좁은?- 침대가 넓은 편이고 아늑했음.  - 욕실도 넓고 깨끗한 편. 세면도구도 구비되어 있음. 수압은 세지도 약하지도 않고 적당한 편.  - 실내가 건조한 편인데 11월이라 그런가 에어컨이 안 나와서 아쉬웠음. - 지하 주차공간은 넉넉하진 않지만 1층 외부에도 공간이 있어서 다행이었음.깨끗한 객실 친절한 직원들이 인상적이며 호텔에서 택시타고 10분이내로 맛집들이 즐비 해 있음 공항과도 가까워서 위치로 굿임 재방문의사 100제주공항에 늦게 도착했을 때 숙박하기 좋은 호텔! 공항에서 택시타고 5-10분 정도이고 스탠다드 타입에서 숙박했지만 생각보다 널찍하고 가장 좋았던게 침대가 넓었다. 못해도 킹사이즈 정도 되는 듯했다. 룸 컨디션도 깔끔하고 시설도 깔끔해서 만족!제주에 출장을 자주 가는 편인데 . 그동안 숙박했던 곳 말고 다른곳을 찾다가 발견한곳 . 주변에 잠깐나가서 한잔할 곳도 많고  일단 공항가까워서 너무 좋았어요.  직원들도 너무 친절하고. 조식은 기대 안했는데 정말 좋았습니다. 출장 올때마다 고민 안하고 엠버에 투숙할 예정입니다. 편하게 잘 있다 왔어요. 출장으로 공항주변 호텔을 검색하다 투숙하게 된 호텔인데요 .. 번화가 먹자거리 보행10분거리 입니다 . 조식당 음식 좋았어요 . 객실내에 커피머싱 잘이용하고 갑니다 .아이가 잇어서 요구햇던 사항 다 들어주셔서 고마웠고 무엇보다 방음이 너무 잘됏고 조용히 잘 잇다올수 잇엇습니다?。ㅎㅎ 너무 친절하셨어요 조식은 한번만 이용햇는데 음식도 전반적으로 맛잇엇어요집처럼 너무 편안하게 지낼수 있어 너무 좋았어요。아침 식사가 생각에 좀 못 미쳤지만 그외 모든것은 다 만족합니다. 다음에도 또 방문하고 싶네요^^공항주변이라 공항과 렌탈업체와 가까워서 좋았습니다.공항에서 버스로도 이동가능했습니다. 시내 중심이라 먹을것들과 편의점이 등등이 가까워서 편했습니다. 주변에도 맛집들이 있어서 저녁에 호텔에 주차후 걸어서 다녀왔어요.한라산 등산을 위해 묵었던 숙소예요. 공항 근처이기도 했고, 바로 앞에 시외버스터미널이 있어서 한라산까지 가는 버스도 잘 이용했어요 ~ 저녁에 치킨 파티도 좋았어요 ~ 잘 묵고 갑니다.밤비행기로 도착할때 이용하면 좋습니다. 저녁비헹기라 근처서 밥먹고 숙소에서 잠만자고 다음날 아침에 일찍 출발했어요.자동차 또는 스쿠터 렌트를 안하신다면 시외버스로 여행하실분들은 좋을거같습니다 다만 가성비가 좋긴하지만 퀄리티자체가 엄청좋다고는 못하겠네요 서율에서제주까지항공편요긐도저렴하고거리각가까워서이영하기가편리하다미일리지도적립이가능해서이용하기ㄱ시설도 깨끗하고, 공항에서 가까워용~ 방에는 각자 락커가 있어서 짐 보관에 용이하구요. 주차공간은 따로 없어서 골목에 주차해야 해요 ㅜㅡㅜ 다음에 가도 또 묵고 싶은 곳입니다. 조식도 나오구용~급하게 예약한거라 생각보다 괜찮았어요 테라스도 크고 방도 넓고 전체적인 만족. 저녁 식사후 산책하면서 구경할 수 있는 풍경이 최고였음어이가 있다면 가격대비 그닥(욕조없음) 비슷한 가격이라면 체인 호텔이 나을듯. 룸컨디션 좋고 직원친절하지만. 왠지 음슴한 느낌??. ㅋㅋ아침에 눈뜨고 물안개가 잠깐 밀려오는데  너무설렜어요 겨울바다에 안개가 밀려오다니...가슴이벅착요~ 대박나세요!!!  직원들도 너무친절했고 잊을수가 없어요~   여름에 다시 찾을거예요!나홀로 여행 왔다가 우연히 시일 묵었는데  너무 잘쉬다가 갑니다 가격,위치,너무나 마음에 들었습니다. 또한 아주 깨끗하네요 특히 직원분들 귀엽네요 ㅋㅋ 한번쯤 가격부담 가지지 마시고 쉬시는게 좋을듯 싶어요해수욕장과도 멀지 안고, 산책로, 조용한 객실 ,테라스에서 바다를 바라보면서 커피한잔 너무 좋았습니다 ..   정말 머리 복잡하고 많이 힘들었는데 ..  많이 도움이 된것 같습니다 ..위치도 좋고 해서 몇 번 이용 했었는데 룸컨디션도 괜찮고 전체적으로 깔끔. 베딩이나 청소상태도 좋았어요  청소하시는 메이드분들이 엄청 하시나봐요:::  이번에 가보니 리뉴얼 되어서 피트니스,사우나랑 기프트샵도 생겼더라구요.  기프트샵이 크지는 않아서 많은 종류가 있는 건 아니었지만 초코렛이나 디퓨저,엽서등 선물로 살 만한 것들은 많았어요  호텔이라 가격이 비싸겠지..했는데 생각보다 괜찮았어요. 초코렛이랑 치약등 선물로 많이 구입했네요.ㅎㅎ 호텔 위치상 선물사서 공항 바로 가기도 좋더라구요. 지하에는 피트니스랑 사우나도 있었는데 사진은 못 찍었지만 가볍게 운동하고 씻기좋았어요. 안쪽으로 사우나가 있는데 크기가 작긴 해도 나무향도 은은하게 나고 온도도 적당한 게 만족스러웠어요.1월 둘째 주 가족여행때 투숙했던 제주썬호텔 ~   2박을 예약하고 이용했는데 너무 좋았어요.  레노베이션 되어서 객실도 넘 깨끗하고 침구류도 뽀숑 뽀숑~~  주변 맛집과 관광지 문의 했는데 친절하게 안내해 주신 직원분들 때문에 이틀 동안 넘 즐겁게 구경했네요^^  담에  제주에 오면  숙소는  썬호텔~~ 방이 깔끔하고 뷰도 좋아요 ㅋㅋ 청소하시는 분들 너무 친절하시고 요청 했던 거 즉각 해결 해주셔서 너무 감사했어요~ 바쁘실텐데 미소로 응답해주셔서 감동 😍다음 제주도 놀러올 때 또 묵으러 올게요 ㅎㅎ친구들과 제주도를 여행하며 잠깐 지냈던 곳이였는데 시설도 좋고 직원들 서비스도 되게 좋았어요! 그리고 이클립스 스포츠바가 있는데 영상도 보고 당구도 즐기면서 저렴한 가격으로 생맥주 한잘 할 수 있어서 좋았어요!지난주 가족들과 썬호텔 2박3일 숙박을 하였습니다~~ 가격도저렴하면서 깨끗한호텔을 찾다가 썬호텔로 정하였는데..  너무만족하여 기분이 좋아요., 일단 제가운동을좋아하는데 썬호텔은 헬스장이 있더라구요~~ 헬스기구들도 많아서 넘 좋았어요., 또한 사우나시설도 깨끗하고 아침조식도 맛있고 직원들의 친절해요., 담에 또방문하고싶네요~~~Hotel Haru의 위치는 제주도의 쇼핑 지역 근처이고 비교적 공항에 가깝습니다. 호텔에서 공항까지 차로 5-10분 정도, 쇼핑 지역까지는 도보로 5분 정도 걸립니다. 근처에 먹을 만한 곳이 많은데 저는 호텔과 가까운 곳에 위치한 BHC 치킨을 추천합니다! 편의점이 호텔 바로 옆에 있어서 아침 식사를 하거나 생수를 구할 수 있습니다. 객실 내부는 훌륭하고 비록 약간 작지만 필요한 모든 것을 갖추고 있었습니다. 침대는 약간 흔들렸지만 4일 동안 편히 잘 수 있을 정도로 괜찮았습니다. 제공된 목욕 수건은 조금 작았기 때문에 직접 가져온 더 큰 수건을 써야 할 수도 있습니다. 접수처 직원들은 친절하고 협조적이며 도착한 첫 날에 근처에 대한 정보를 제공해 주었습니다. 그들은 영어 실력이 상당했고 도움이 필요한 경우에는 그들과 대화를 나눌 수 있었습니다. 전반적으로 Hotel Haru에서 즐거운 시간을 보냈고 다음에 제주도를 방문하게 되면 꼭 이곳을 선택할 것입니다. 저는 꼭대기 층의 스위트 룸을 빌렸습니다. 그런데 불행히도 엘리베이터가 1층에만 머물러 있는 것이었습니다. 그래서 저와 제 부모님은 에어컨이 없는 비상 계단을 통해 큰 짐을 옮겨야 했습니다. 직원들이 우리를 도와주었습니다. 하지만 여전히 불편하기는 마찬가지였습니다. ||감사하게도 객실은 너무나 완벽한 곳이었어요. 넓고 편안하고 깨끗합니다. 욕실 밖에 놓인 욕조는 무슨 의미인지 정말 알 수 없었습니다. 기본 침대는 분리할 수 없었습니다. 커플을 위한 객실은 아닙니다. 그래서 정말 당황스러웠습니다.||영어를 정말 잘하는 직원은 한 명뿐이었고 그녀가 자리를 비웠을 때는 관광 목적지에 대한 질문을 받거나 택시를 부를 때조차 적절한 대화를 나누기가 너무 어려웠습니다. 그러나 그들은 정말 좋았고 영어 실력이 부족해서 소용없었지만 그래도 우리를 도와주려고 했습니다.내 가족과 나는 Haru 호텔에서 3일 밤을 보냈습니다. 전체적으로, 옆방과 위층 중국 관광객들을 제외하고는 좋았습니다. 그들은 자정에 끔찍할 정도의 소음을 내고 큰 소리로 떠들었습니다. 또한, 위층에서 걷는 소리가 엄청나게 크게 들렸습니다. 방음이 충분하지 않습니다. ||||소음을 내는 관광객들을 제외하면 프론트 데스크 직원들은 항상 친절하고 상냥합니다. 아름다운 젊은 여직원 덕분에 가족과 함께 가까운 식당에서 한국 전통 갈비탕을 즐길 수 있었습니다. I맛있었어요! ||||교통이 편리합니다, 여직원이 전통 시장과 공항 픽업 차량을 준비해 주었습니다. 그녀의 친절에 감사합니다.카운터의 젊은 여직원이 훌륭하고 친절합니다. 그녀는 호텔 밖 주차장으로 우리를 안내했고 BHC 치킨과 해물탕처럼 맛있는 음식점을 추천했습니다. ||호텔 조식은 제공하지 않지만 호텔 바로 옆에 편의점이 있습니다.||방은 아주 어둡고, 전원 플러그가 정말 충분하지 않습니다. 샤워실은 널찍했고, 모든 한국의 호스텔은 작은 수건만 제공하기 때문에 개인 수건을 꼭 챙겨가세요. ||좋은 위치, 주요 쇼핑 거리와 가까움, 우리는 매일 밤 걸어서 다녔는데 정말 끝내줍니다.좋은 리뷰들을 abt 호텔 Haru 읽고 흥분을 전체 우리의 숙박을 예약했습니다. 호텔 로비에 도착하자마자 나는 로비 이렇게 기대하지 않았습니다. 호텔 만약 거의 눈에 띈다. 확인. 체크인 스태프들이 친절했습니다. 객실 크기는 기대. 그러나 청결 정격 위에 꼭. 먼지 같은 수영장이 4박 내내 커피 테이블. 우리는 베드시트 변경 요청, 둘 중 어느 하나 일어나지 않았다. 호텔 수건을 매우 작은 크기를 제공합니다. 위치. . . 걸어서 밤에 많은 식당과. 아침 식사는 없습니다. 즉 한국의 일반적인 문제를 것 같다. 호텔 레스토랑은 대부분의 시간을 GS25옆에 아침 풀릴까 있을 필요는 없습니다. JaJa 호텔과 12월 호텔은 같은 길을 아마 50단계. 유일한 신용 호텔은 공항과 가까이 있습니다. 그러나 너무 많은 호텔들이 있습니다. 내가 제주도에 다시 오게 되면 이 호텔에 다시 올 것 같지는 않습니다.양 염소 말 토끼 거위 오리 사슴 닭 백봉오골계도.. 그저 밥주기 체험이다  동물별로 공간을 분리해서 놔뒀을 뿐 정말 아무런 관리도 하지 않나보다 애들이 얼마나 더러운지 ......진짜 양털은 합성수지 불태운듯 바스락 거리고....  무엇보다 사슴 몸에 파리인지...모기인지 백마리정도 붙어있는 건 충격적..  입장료 5천원에 기본 사료 주고 천원추가에 당근 줍니다... 당근은 먹이기 편하고 사료는 손바닥에 침 묻힐 각오하고 먹여야합니다..아이들과 급박하게 예약하게 되었어요. 운좋게 한분 예약취소가 나서 갈수 있게 되었죠 아침 저녁으로 애들은 토끼 양 말 오리 칠면조 산양 꽃사슴 염소 돼지등등 의 동물들의 먹이를 줄수 있구요 산양 젖짜기 체험도 가능합니다 똑똑한 양치기 개랑 원반던지기도 하구요  숙소는 조금 낡긴했지만 관리는 깔끔하게 잘해주셔서 묵는데 불편함은 없었어요 통나무로 튼튼히 이쁘게 지으셨더라구요.  사장님부부도 너무 친절하시고 좋았습니다 아이들 있으심 최고의 경험 되실꺼예요객식은 단정하고 아이들은 동물들과 어울려 즐거워했습니다 다음에 제주도에 가면 또 숙박하게 될거 같습니다뜨내기 손님 받는 곳 손님에 대한 생각이 전혀 없는 곳 립서비스만 존재 비수기라 푸대접 받으니 성수기엔 더 푸대접 받을 듯 제주 망신시키는 곳 모슬포 2박 여기 2박 너무 비교됩니다 양떼는 대관령에 가지 왜 여기 왔나 싶네요이 유형의 호텔은 시골 지역에서만 찾을 수 있다고 생각합니다. 밤에는 휴식을 취하거나 파티를 할 수 있습니다 (주위는 정말 조용합니다. 큰 소리로 걱정하지 마십시오). 다음날 아침, 아침 식사를 마친 후 목장에서 말과 그 친구에게 먹이를주십시오.공항에서 가까운 호텔 찾다가 투숙했는데. 가격대비 깨끗해서 놀랐습니다~ 화장실도 깨끗하고 좋았습니다 ㅜㅜ. 가성비 짱입니다.깔끔하긴 한데 그닥 호텔 스럽지는 않아요 가성비는 괜찮고 공항근처에서 호텔 찾는다면 나쁘지 않아요 카지노가 있는 썬호텔 맞은편에 위치해 있습니다. 주차가 약간 불편한데 직원분이 주차하는것을 봐주셔서 편하게 주차했구요 객실이 아주 깔끔하고 인테리어나 침구류가 중간급 이상은 됩니다. 가격 대비 상당히 만족스러웠구요 제주시에서 1박할일이 있으면 재방문의사가 있을만큼 만족스러웠습니다.급하게 당일 예약해서 이용했었습니다 사진과 많이 다를까봐 걱정했는데  새로생긴 호텔이라 깔끔하고 쾌적했습니다 관광 일정이 빠듯하다면 잠만자고가기에 가격대비 괜찮았습니다    다만 직원들 서비스마인드가 좀 부족하다느껴졌습니다 프런트직원에게 새벽이라 공항가는 콜택시불러달라 했었는데 이시간에 배차안된다며 나가 직접잡으라해서 좀 당황했었네요나름 지어진지 얼마 안된 호텔이라 그런지 호텔 자체에서 새 냄새가 너무 많이나서 복도에 지나갈때마다 괴로웠습니다. 그러나 스태프는 친절했고, 룸상태는 깔끔하며, 어매니티또한 머리고무줄까지 준비되어있을 정도로 섬세한면이 있었습니다. 평일에 묶어서 그런지 룸 업그레이드되어 싱글+더블침대룸에서 하룻밤묶었던 점은 좋았습니다. 어매니티는 평범한 편이고 무슨 브랜드는 아니었던 것 같습니다. 공항근처에서 있어서 이동하기가 편리했으나 같은 가격이라면 몇만원 더 내서 신라스테이에 갈 것 같습니다. 번화가와 조금 떨어져 있는 편이라 한적한 것을 좋아하는 분에게는 좋은 선택이 될 것 같으나 너무 중국인밀집지대에 있다보니 그점은 조금 걱정이 되네요. 와이파이는 빵빵합니다.Avec une amie, nous avons passé 4 jours à WellBeing et ce fut de loin le meilleur endroit où j\'ai pu séjourner. Je suis tombée sous le charme de la maison, de l\'hôte et ses animaux. Elle est incroyablement gentille, les petits-déjeuners étaient juste tellement bons. On avait l\'impression d\'avoir retrouvé une maman avec qui nous avons partagé des moments très agréables et drôles. C\'est un vrai coup de coeur pour moi et ce fut un déchirement que de quitter un tel cocon. Il est certain que si je peux retourner à Jeju je retournerai chez elle juste pour pouvoir la revoir ❤What a great place! From the very beginning we were charmed by the person who runs the place! made us have wonderful memories because she has a tradition of taking pictures of the guest in traditional Korean costumes! what an experience! Very Very nice person making this place not only possible but need to recommend !!! Being on her, be sure to live there!Pas si facile à trouver aux premiers abords, cette petite guest est à la hauteur de sa réputation. Même si ce n\'est pas flambant neuf, il y règne une atmosphère de joie de vivre. La patronne, aux petits soins permanents et au sourire sincère, contribue énormément à la note de 5/5. Ce n\'est pas une maitresse de maison qui vous accueille mais une mère !!! 2 exemples me viennent à l\'esprit lors de mon passage là bas: - Un soir, j\'étais seul dans ma chambre : elle a réussi à parler avec d\'autres convives pour m\'emmener manger avec eux en ville avec leur voiture. - Le matin de mon départ, à 6h30, elle s\'est levée à 6h00 pour me préparer un petit dej copieux et soigné. Franchement, même si c\'est un peu excentré (avec les bus 102 et 202 tout est finalement très simple...), c\'est une空港から路線バスでも行けます。バス停安南洞から降りて5分でした。 2017年からオープンしたゲストハウスで、名前の通り（Well-being）健康に気を使っているとのこと。ホストが家庭菜園で栽培した無農薬野菜などの材料も朝食にでます。屋上もあってパーティーもできます。5部屋しかないアットホームなゲストハウスですがシャワー・トイレは2か所ありました。ホストは日本語公認ガイドさんで日本語は完璧で色々アドバイスもらえました。제주에서 저렴한 가격으로 편히 쉬었어요. 근처에 시장이 있어서 저녁에 쇼핑도 편하고 맛집도 많아서 좋았어요우리는 공항에서 버스를 타고 시청 맞은편에 내렸습니다.  이 배낭여행 호스텔은 메인 도로를 벗어난 골목에 위치해 있습니다. 우리는 처음 이곳을 찾을 때 약간 어려움이 있어 현지인에게 길을 물어봤답니다. 방 자체는 적당히 작았고 매트가 바닥에 있었어요. 그래도 편안하고 우리의 조건에 적당했어요. 에어컨은 좋았습니다. 수건과 세면도구, 온수 샤워가 제공되는 욕실과 화장실이 바로 우리 방 밖에 있었으며 수압도 좋았습니다. 욕실 옆에 무료로 사용 가능한 세탁기가 있었고, 무료 와이파이는 빨랐으며 수신 상태가 좋았어요. 무료 아침 식사는 아주 맛있었고, 건강식이었습니다. 홈메이드 통밀 빵, 잼, 요거트, 과일 주스가 제공됩니다. 커피, 차 및 생수도 있었어요. 또한 시나몬이 뿌려진 구운 허브 계란도 있었습니다. 주인은 영어도 잘 해요. 위치는 대중 교통 버스가 많이 다니는 곳이어서 버스를 타고 움직이기가 쉬웠습니다.저와 제 아내는 booking.com을 통해서 1월 1-3일을 이 호텔에 묵었습니다. 호텔은 거의 흠잡을 점이 없습니다!! 우리는 April을 통해 더블 베드룸을 예약했습니다. 주인 Changee는 훌륭하고 꼼꼼한 남자였습니다. 그는 버스를 이용할 수 있는 제주 명소들과, 제주 공항에서 호텔까지 가는 교통편에 대한 모든 필요한 정보를 보내주었어요. 나를 믿고 그의 충고를 따른다면 여러분은 대중 버스로 편리하고 저렴하게 제주도 전체를 여행할 수 있습니다. 7월 1일에 제주 공항에 도착한 후 동쪽 코스 여행을 했습니다. 여행이 끝나고 기사가 Backpackers로 우리를 데려다줬어요. 6시였고 우리는 여행 중에 아무 음식도 먹지 않아 배고팠어요. 호텔에 들어갈 때, 정문 밖에 Changee가 환영 메시지 벽으로 세워둔 걸 보고 깜짝 놀랐습니다. 그는 냉장고에서 음식을 꺼내주었습니다. ||방은 좋았어요. 바닥에 부드러운 침대가 있었고요. 욕실도 좋고 넓었습니다. 아침 식사도 좋았습니다. 아침 식사는 패킷으로 오전 5시 30분부터 11시까지 제공됩니다. 리셉션 데스크에 마련되어 있습니다. 패킷에서 이름을 찾아야 합니다. 좋은 시스템. 게다가 이 지역은 모든 종류의 교통 시설과 연결이 잘 되어있습니다.||우린 여행 이튿날 원화가 부족했습니다. 그는 10만원을 주는 것으로 우리에게 도움을 제공하며 우리가 시간이 있을 때 언제든 은행에서 환전한 다음 돌려달라고 했어요. 그는 정말 좋았어요.||우리는 현지 문화에 대한 주제로 많은 것을 교환했습니다. ||그곳에 가세요. 나는 당신이 그곳에 머무는 것을제 친구와 저는 이 멋진 곳에서 3박4일 묵었습니다!! 쉽게 갈 수 많은 상점이 가까이 있습니다. 이 호스텔은 아주 아늑했습니다. 안으로 한 걸음 들어서자 멋진 시나몬 냄새가 너무 편안하고 마음을 진정시켰습니다. 주인인 김씨는 훌륭했습니다. 그는 영어를 유창하게 잘 하고 제주도 여행에 대한 조언을 해주었습니다. 심지어 손님들에게 우산도 제공합니다. 가정식 빵, 요거트, 잼 그리고 한국의 유명한 구운 계란으로 단순하고 건강한 아침식사가 좋았습니다. 머무르기 편안하고 좋은 곳입니다. 깜빡 잊고 있었는데, 심지어 주인이 오랫동안 걸은 후 근육통이 생기는 손님들에게 발 마사지기를 제공하는 것이 감동스러웠어요. 꼭 다시 올 겁니다!!봄 제주여행에서 3박 동인 잘 묵었습니다. 숙소의 위치가 상당히 좋습니다.  버스 터미널과 가까워 섬의 어느 곳이든 원하는 곳을 방문할 수 있어요.  숙소에서 직접 만든 아침은 환상적이었습니다.  신선한 요거트, 빵 그리고 잼은 커피와 잘 어우려 졌어요.  방은 적정한 사이즈에 커다란 침대 그리고 욕실이 딸려 있습니다. 모든 부분이 깨끗하였고 잘 정돈되어 있었습니다. 여기에서 정말 잘 머물렀고 이번 달 다시 머물 예정입니다. 숙소가 함덕해수욕장의 서우봉 건너편에 있는데 조용하고 좋습니다. 주변에 아무 것도 없지만, 조용한 곳을 찾으시는 분은 좋으실 듯합니다. 그리고 호텔 바로 앞 바다 경치가 훌륭합니다. 호텔은 오래 되었습니다. 그러나 아주 깨끗하게 관리가 잘되어 있습니다. 앞에서 낚시도 하네요. 서우봉 산책 가능하고 함덕해수욕장으로 연결됩니다. 가격대비 강추~함덕에서 가까운 숙소로 바닷가 바로 코 앞에 위치한 오래된 숙소 이지만 정말 정갈하고 깔끔하게 관리 잘 해놓으셨고 서비스도 너무 친절하신 사장님 ! 조용하게 우리만의 힐링타임을 가질 수 있는 제주도 다운 숙소밤 늦게 도착했는데도 환하게 웃으면서 맞아주시고 짐도 옮겨주셨습니다. 바로 앞에 바다가 펼쳐집니다. 방도 넓고 바닥이 따뜻해서 푹 쉴 수 있었습니다. 특히 체크 아웃 때 따뜻하게 커피를 내려주셔서 공항으로 가기 전 산책도 하고 참 좋았습니다. 바다 바로 앞에 위치하였고 모든 객실이 바다를 향해 있습니다. 호텔이라기보다는 한국형 펜션에 가깝습니다. 객실이 많이 깔끔하거나 최신 시설을 갖추고 있지는 않지만 넓고 안락합니다. 친절한 주인과 깨끗한 제주도 바다를 즐길 수 있는 멋진 곳입니다. 비교적 한적한 곳에 위치해 있어 편하게 쉬기에 좋습니다. 저는 이곳에서 웨딩촬영을 하였는데 아주 예쁜 사진이 나왔습니다.Park Beach Hotel에서 가장 환상적인 숙박을했습니다. 제 친구와 제가받은 봉사는 누구에게도 뒤지지 않았습니다. 객실은 매우 편안하고 깨끗했습니다. 위치는 조용하고 바다의 아름다운 전망을 가지고 있습니다. 긴장을 풀 수있는 완벽한 장소.Marvillrick. 스파&amp;Poolvilla 정말 아름다웠어요. 우리는 6일을 이 호텔에서 지냈어요. 깨끗하고, 조용하고 훌륭한 가족적인 분위기. 침대는 매우 편안했고, 샤워 시설도 좋고, 욕조, 작은 수영장과 10살짜리 아들 작은 트램펄린. 해안 및 커피숍들이 도보 거리에! 직원들은 정말 좋았습니다. 멋진 경험!바다전망의 객실을 이용했습니다. 10명의 대가족이라 1,2층 독채로 빌렸는데 전망이 아주 끝내줍니다. 풀빌라여서 개인수영장이 있었는데 온수사용하여 아이들과 재밌게 놀았어요. 1층 거실이 워낙 넓어서 10명이 모이기에 부족함이 없었고, 특히 침대가 예술입니다. 정말편해요. 강추!!! 야외에는 메인 수영장도 있는데 4월이라 운영을 안하더라구요. 보기에는 이뻤습니다. 다른 가족들 모두 만족하는 숙소였어요.저 바다를 보며 아이들과 조식을 먹었답니다. 직원분들도 친절하셨고 숙소도 괜찮았습니다.바다랑 숙소랑 붙어있으니 애들 풀어놓고 놀기 너무 맘이 편했습니다.  일단협재바다색상이 너무좋고요 그모래사장위에  위치한게스트하우스 입니다 1층에서 휴식을 하는데  외국  안부럽네요 ^^ 무조건강추입니다사장님도 너무친절하시고 뷰가 너무 멋있어요 조식도 맛있었고 무료 석식파티까지 가성비좋은게스트하우스 꼭 추천! 드려요파리이빗 비치처럼 문을 열고 나서면 바로 바닷가로 이어져 있고 모든 방 안에서 비치를 볼 수 있어요ㅡ 해거름을 방 창을 통해 볼 수 있었어요. 저녁에는 무료 식사 타임이 있었고. 조식도 꽤 든든한 편이에요. 컵라면도 았고 카레에 미역국도 있어요. 씨리얼고 있구요. 전기장판도 필요하면 가져다 쓸수 있고 각 방에 도어락과 욕실이 따로 붙어있어 좋았어요.최고의 위치로 바로 바다가 보입니다.  언제든지 나가서 물에 들어갈 수 있습니다. 직원들이 친절하지만 손님들에 대한 통제가 약해 잠을 자기가 조금은 힘들었습니다 제주공항에서 가깝고, 좋은 시설을 바라지 않는다면 저렴한 비용으로 머물다 갈 수 있는 곳입니다. (냉장고 있고 생수 2개 제공합니다.)소셜에서 저렴하게 구매해서 숙박했습니다. 위치는 칼 호텔바로 앞ㅋㅋ중국 관광객이 많더군요.가끔 주말에는 결혼식도 하는듯!! 시설은 오래 되서 엘리베이터 있지만 그냥 계단으로 걸어 다녔어요ㅋㅋ 침대가 정말 오래 된듯했어요 쿠션이 없더군요 자는내내 불안하던군요ㅋㅋ 방은 넓은데..여관에서 자는 느낌을 받았네요.. 가격이 저렴하기에 하루만 참고 잘수 있었던듯ㅋㅋ  아..주차장은 매우 넓습니다.1박만 해결하면 되었기 때문에 가격이 저렴한 이 호텔을 선택했습니다. 건물 자체는 낡았지만 특별히 불편한 점도 없었고 딱 가격만큼의 레벨인 호텔이었습니다.한국의 김길방 밖에서 많은 욕조를 발견하지 못할 것입니다. 값싼 호텔에서 우연히 발견되는 것은 생명의 은인입니다.  이 곳은 시청에서 밤을 보낼 수있는 완벽한 장소입니다. 객실은 항상 가격 대비 충분한 공간을 갖추고 있으며 깨끗합니다.Просторный номер,нормальных размеров санузел с ванной.Уборка номера каждый день.Из минусов - молодые парни на ресепшен совсем не сильны в английском.Завтраки не брали,они стоят 9 тысяч вон на одного.При отеле бесплатная парковка.Расположение-отличное,вокруг много заведений,где поесть,за углом начинается бутиковая улица,если идти от отеля вниз,то недалеко до пешеходной улицы.호텔은 멋진 동네에 위치해 있습니다. 고속도로에서 가깝습니다.  정면 장교는 매우 적응하고있었습니다. 그는 아트리움에서 공연을 보러 가야하기 때문에 조기 체크인을 요청했습니다.  매우 합리적인 가격으로 도시 전망 유닛을 구할 수 있습니다. 방은 매우 넓고 깨끗했고, 전혀 불평 할 수 없습니다.  매일 아침 맛있는 조식 뷔페가 제공됩니다.  이른 아침 항공편을 타야 할 경우에 대비하여 공항과 가까운 호텔이 필요하면 좋은 위치입니다.공항에서 가깝고 깔끔한 편 입니다. 화장실도 깨끗해서 좋았어요 가성비 좋아요! 추천합니다!!호텔은 그랜드 보이지만 실내는 그다지 의 외부 모습. 제공하지 않습니다 목욕 수건, 커피나 차를 가진 기본적인 세면도구 사셰의. 그러나, 이 7 - 11 근처의 카페 거리와 많은 맞은 편.Jeju 섬에서 4 일째되는 주제와 같이 Jeju 공항에서 터치 다운 이후로 이동 한 3 번째 호텔 / 게스트 하우스입니다. 위치는 나쁘지 않지만 택시와 같은 교통 수단으로 도처에서 여행해야합니다! ! ! ! , 아무도 bcos를 비난하지 마라. 그 여행자가 제주의 대부분이 한국인이 영어를 해석하지 않기 때문에 말하는 방법을 모르고 있지 않는 한, 여기의 택시는 정말로 비싸다. 나는 정말로 단순한 영어 만이 그들에게 좋다고 믿는다. 하지만이 호텔은 저축 또는 심지어 예산에 대한 계획을 ppl 위해 저렴합니다, 그리고 이것은 하나를 선택할 것입니다숙소 앞 바다의 풍경이 너무 좋고 한산하고 조용하여 연인이나 나혼자 여행에도 적합할듯. 대부분 필요한 용품이 구비되어 있어서 편리함. 다만 매트리스가 너무 안좋아서인지 숙면하기 어렵고 허리가 아팟으며 실내 공기도 안좋아서 불편했음.해변에서 가깝지만 바로 앞이 아니라 복잡하지 않고 주변이 조용함. 객실에서 바라보는 비양도 전망이 좋았고 객실에 취사시설 되어있었음.콘도식 부엌 전망도 훌륭합니다. 조용한 동네에 협재 해수욕장. 가격에 비해 좋은 가격, 친절한 직원들. 또한 고유의 convininience 점 지하에 노래방 과 로비. 그들은 또한 마무리 공사는 야외 수영장. 저는 이 리조트를 강력 추천한다.호텔위치가 짱이네요 .조금만 걸어나가면 번화가가 있어서 너무편해요 .맛집도 많은거 같아요 .무엇보다 객실이 깨끗하고 편해서 너무좋아었어요 ^^제주시에위치해서 위치적으로도 이동하기 좋구요, 객실이나 욕실도 굉장히 깔끔하고 청결하게 되어있어서 만족하게 묵고갑니다~객실이 크고 욕조가 있어서 마음에 들어요  그리고 근처에 바오젠이라는 번화가있는데 거기 고기집이 많더라구요 다음에 기회가 있으면 또올께요~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~제가 제주도 출장을 자주 오는 편인데 엠버시티호텔이 가장 마음에 드네요. 방도 깨끗하고 화장실 청소 상태도 매우 좋습니다. 추천합니다.방도 깨끗하고 화장실도 마음에 듭니다. 직원분들도 많이 친절해서 너무좋네요. 저는 5일간 투숙해 있었는데 너무 좋았습니다.더블침대 하나와 싱글침대 하나가 있는 방을 예약했는데 너무 좋았습니다. 따로 테이블도 있어서 좋았구요 침대를 제외한 공간이 넓어서 편했습니다.사업차...제주에 갔습니다. 시내에 위치해 있어 편리하고, 새로 리뉴되어 깔끔하고 너무 좋은 호텔였습니다. 체크인할때 사장님도 만났는데 항상 웃으시며 맞아주시고~ 따뜻한 호텔이구나...느낌이 좋았네요. 공항근처라 비행기 타기도 쉽고, 사업차 자주 제주도 가는데... 또 이용할께요~^^ 2월에 단체 관광을 가서 이틀 밤을 지냈는데, 제주에서의 첫 호텔이었다. 전체적으로 나쁘지 않았고 방은 깨끗하며 따뜻했지만, 가장 큰 단점은 크기였다. 내가 가 본 호텔 중 방 크기가 가장 작았는데, 제주는 섬이기 때문에 큰 기대는 하지 않았다. 방에서 인터넷을 할 수는 없지만 로비에서 무료 와이파이를 이용할 수 있다. 위치가 좋은데, 조금만 걸어나가면 산책로가 있고, 거리를 따라 식당과 술집, 상점 등 밤에 즐길 만한 것들이 많다.스탠다드 미니는 충분히 크고 깨끗했습니다. 우리는 욕실을 매우 좋아합니다. 매우 현대적이고 넓으며 필요한 세면 도구가 잘 갖추어져 있습니다. 방에 커다란 TV도있었습니다. 아침 식사가 좋다라고 들었다. 그러나 우리는 didnt한다 빠른 체크 아웃 때문에 시험 할 시간이있다.나는 수용체의 6 월에 의해 제공된 봉사에 매우 감명 받았습니다. . 그녀는 참을성 있고 예의 바릅니다. 우리에게 제주의지도를주는 것 외에, 그녀는 호텔과 버스 정류장을 값 비싼 호텔 근처에 스케치하기 위해 많은 고통을 겪었고, 버스와 도시 간 버스를 타면된다. 아침 식사는 매우 실망 스러웠습니다. 별로 선택의 여지가 없다. 방은 2에 충분할 정도로 크고 나의 luggages를위한 어떤 공간도 없다. 나는 구석에 그것을 척해야한다. 그러나 그것은 정말로 싸다. . 아마 나는 더 좋은 호텔을 위해 더 많이 지불해야했다. . 운이 좋았던 나의 체재는 pnly 2 개의 밤이었다.첫 번째. 저는 이 호텔에 무료 공항 셔틀 버스 정류장. 호텔에 도착했을 때는 셔틀 버스들이 없고, 앞쪽에 위치한 호텔이었는데 파킹된. 방은 매우 작고 지저분한 곳. 벽에는 얼룩과 침대 시트에 구멍이 있어서. 가격이 저렴한 호텔도 있는 것도 아니다.골프는 치지않고 가족여행으로 가서 숙박을 했는데, 조용하고 한적해서 가족들이 가서 쉬기에 아주 좋았고, 방도 넓고 독채여서(물론 2층이 있긴하다) 좋았고, 숙소앞에 산책로가 잘되어 있어서 좋음. 그리고 차량 진입을 못하게 하여서 아이들 안전에도 좋음. 다만 고양이들이 많아서 시끄러움시내와 위치가 조금 멀기는 하지만, 우선 방이 넓직해서 너무 좋습니다. 골프텔도 조금 커서 움직일 경우에는 프론트에 픽업 요청해야합니다. 골프장안에 편의점도 있고 여러모로 볼 치기에는 적합한 곳입니다.한적하고 여유롭습니다.  조금 오픈한지 오래된곳이지만 필드뷰가 참 좋아요. 조용하고 엘지  기업소유의 리조트입니다. 인테리어도 자연친화적이고 좋아요.골프장이 있는 호스텔이다 방은 어머어마하게 크다 사람이 많은 우리일행들에겐 적합한 방이었고 수영장이 있어 심심할시간이없었다 밤에는 바베큐파티를할수있고 소소한 시간을 보낼수잇었다시내가 아니라 조용합니다. 친구끼리 와도 좋지만 특히 가족끼리 오면 더 좋을 것 같네요. 독채 식이라 거실 하나에 방 2개 구조인데 방마다 화장실이 따로 있어서 편했습니다. 조리시설도 잘 되어 있고, 냉장고 냉동실도 커서 여유있습니다. 거실도 커서 근처 시장에서 회 사서 먹기 괜찮구요. 특히 마음에 들었던 건 아침에 커튼 걷고 밖으로 보이는 잔디밭, 나무들 풍경이었습니다. 굉장히 아름답고 절로 힐링되는 풍경이에요. 숙소 따라서 한바퀴 산책하기도 좋구요. 굳이 골프를 치지 않더라도 숙박만 하기에도 정말 좋은 곳이라 생각합니다. 위치가 시내가 아니라 불편하지 않을까 생각했는데 이틀 묵으면서 전혀 위치에 따른 불편함은 없었습니다. 여름에는 야외 수영장도 운영한다고 하네요. 수영장 크기가 그리 크지는 않았는데 아이들 잠깐 물놀이 시키기에는 괜찮을 것 같아요. 한가지 아쉬웠던거.. 에어컨 필터는 청소 좀 하셔야 할 듯...투어 패키지에 중에 하룻밤 묵었어요. 호텔은 탑동거리시장에서 걸어서 약 15-20분 안에 갈 수 있는 거리에요. 말할 필요도 없지만 편의점에서 필요한 것을 다 살 수 있어요. 7-11은 길 건너 오른쪽에 있어요. 방에는 정수기가 없어요. 정수기는 방 밖에 공용으로 있어요. 식당은 호텔 지하에 있어요. 호텔 복도는 카펫이 깔려있고 방 안도 마찬가지인데 낡아 보여요. 에어컨을 켜고 끄는 것 말고는 괜찮았어요. 직원들은 영어를 거의 하지 못 해요.관광 패키지에 포함되어 있어 이 곳에서 묵게 되었습니다. 호텔이 꽤 오래된 편임을 로비에 들어서자마자 느끼실 수 있을 겁니다. 메인 로비에 있는 소파가 연식을 말해줍니다. 방들은 편안했고 큰 편이었습니다. 바다를 바라볼 수 있는 발코니가 있었고 가까운 곳에 편의점과 길 건너에 세븐일레븐이 있습니다. 생각했던 것 보다 나쁘지 않았습니다.이 곳에서 하루를 묵었는데 괜찮았습니다. 침대가 큰 편이고 편안했습니다. 방에서 여러가지 텔레비전 프로그램들을 볼 수 있었고 방에서 보이는 경치 또한 좋았습니다. 발코니에서 바다를 볼 수는 없었습니다. 교통 정체가 아주 심각했고 주변에서 30분 동안 택시를 잡을 수 없었습니다.바로 앞에 이마트가 있고 편의점도 옆에 있어 쾌적했습니다. 새로운 호텔은 아니지만 무난하고 쾌적하게 지낼 수 있었습니다. 어른 여자 3명이서 숙박했는데 보조침대가 아니라 제대로된 침대가 3대 있어서 쾌적했습니다. 동문 시장까지 걸어갔는데 못 걸을 정도는 아니지만 시간이 좀 걸렸습니다. 15분 정도 걸렸던 것 같습니다. 공항까지는 택시를 탔는데 15분 정도로 도착했습니다.바다에서는 좀 떨어져 있지만 걷는게 엄청 싫지 않다면 문제 없는 호텔입니다. 시장과 번화가, 해변의 해산물 요리 레스토랑 등에는 좀 걸어야 하지만  도보권내에 있습니다. 방도 청결했고 넓지는 않아도 조용해서 편안하게 쉴 수 있었습니다. 가격대비 훌륭한 호텔이었습니다.가격이 우선 싸요. 공항에서 가깝고... 근처 이호우테우 해변있어서 좋아요. 시설은 그럭저럭인데.. 조식이 맛이 없어요 저렴해서 좋긴한데요... 호텔 보다는 모텔에 가까운 느낌이구요. 이호테우 해변에서 도보 10분이긴한데.. 큰 도로를 따라 걸어야해서.. 걸어가기 쉽지 않아요. 늦은 밤. 이른 아침. 잠깐 이용하면 좋을듯 가격이 무엇보다 엄청 저렴해요  호텔은 동남아 분들이 왔다갔다 하고  야간 데스크도 동남아 분이 보시던데 호텔 일층에 매점도 있고 방마다 작은 테라스도 있고 암튼 방도 깔끔하고 정말 괜찮음 주변에 뭐가 없긴하지만! 티몬에서 특가로 잡아서 가족여행 갔었어요~ 호텔 깨끗하고 공항에서 가깝습니다. 가격도 합리적이라 다시 이용하고 싶네요.근처에 관광지는 없지만 공항이랑 가깝구요 가격에 비해서 깨끗합니다. 지은지 얼마 안된거 같구요. 주차공간이 좀 빡빡하긴 합니다;;;제주시에서 머물러야해서 하루 홀로 예약한 숙소였어요, 늦은 체크인에도 불구하고 너무 친절하게 안내해주셨어요, 신식 건물이라 방도 너무 깔끔하고 룸 컨디션이 너무 좋았어요, 책을 읽을 수 있는 휴게 공간이 있어서 좋았고 특히 조식이 너무 맛있어서 ..성게미역국은 정말 감동이였어요, 여쭤보니 주방장님이 호텔쉐프 출신이시라구 역시ㅋㅋ 다음에 오게 되면 또 머물 의사 100프러입니다!독립방입니다 깔끔하고 좋다 인근에 있는 한라수목원에 있고 푸드트럭 있어서 좋다 한번 와보세요 주변에 볼거리있지만 볼만하다시설 매우 훌륭합니다. 가격 매우 훌륭합니다. 주차 매우 가능합니다. 저녁에 도착하여서 공항 근처에서 머무셔야하거나 아침 일찍 출발하시는 분들께 정말 강추합니다.  스태프들도 월급 잘 챙겨주시며 제주 여행도 하라고 유류지원도 해주시는 걸로 알고있습니다.  제주도에 가면 또다시 꼭 들를 곳중 하나에요!깨끗함. 편안함. 그리고 아늑함. 너븐팡게스트하우스를 이용한 후기를 3단어로 표현하자면 이렇습니다. 무엇보다 인상 깊었던것은 호텔만큼 깨끗한 느낌이었습니다. 또한 도미토리형식임에도 불구하고 블라인드공간으로 혼자만의 휴식을 취할 수 있는 형태여서 굉장히 편안했습니다. 지하 커뮤니티공간은 여느 게스트하우스에서 찾아볼 수 없는 독특하지만 아늑한 공간이었습니다. 책과 음악이 있고 여유가 있는 공간이었습니다. 혼자만의 시간이 필요한 사람들에게..  혼자만의 사색이 필요한 사람들에게.. 또는 누군가와 함께할 수 있는 공간이 필요한 사람들에게.. 그런 사람들에게 적합한 공간이 되지 않을까 싶습니다. 2월말과 3월초 두번이나 숙박을 하게 되었는데 두번 모두 매우 만족스러웠고 너븐팡 게스트하우스에서 먹고 자는 것 조차 여행의 한 스케쥴이 된 것 같은 느낌이었습니다. 다음 제주 여행 스케쥴에도 너븐팡은 고정입니다!! 다른 게스트하우스와 비교했을 때 장점 :  제주시 시내에 위치 2만5천원 가격대비 시설이 새거라서 최고급 침대에 개인 스탠드있음 침대에 노트북 놓을 수 있는 받침대 있음 전자식 개인 사물함 있음 조식이 한식으로 든든함 지하에 있는 모임공간이 매우 쾌적하고 같이 놀기 좋음 체크인 때 물 한병씩 주는게 매우 사려깊음 도미토리마다 화장실 딸려있음 매니저 잘생김  무튼 내가 제주에서 묵은 게하 중엔 최고였음.  재방문 의사 : ☆☆☆☆☆ 공항과 가깝고 저렴한 가격에 대중교통을 이용할 수 있는 위치에 있음. 시설도 꽤 깔끔한 편이지만 크거나 화려한 곳은 아니며 고급시설은 아님.공항에서 가깝고 청결상태도 좋은 호텔입니다. 약간 골목에 위치해 있어 처음 갈 때 찾기 어려웠지만 공항까지의 거리로 보나 숙소 상태로 보나 여러모로 만족스러운 호텔이었습니다! 제주공항에 밤에 도착했기에 공항인근에서 하룻밤 묵을 숙소로 이곳을 선택했습니다. 제주에는 최근에 4만원에서 6만원으로도 하루밤 지낼 수 있는 숙소가 굉장히 많더군요 그 많은 곳에서 이곳을 선택한 이유는  욕실 컵을 전기소독한다는 내용과 사회적 기업이란 것을 보고 이곳을 선택했네요 왠지 좀더 청결하게 관리하리란 믿음이 들어서요  스탠다드 더블룸이었는데  거의 9시가 다 되어서 체크인했는데 배정받은 층에는 우리룸외에도 모두 다 숙박객이 있더군요. 그럼에도 다른 객실 소음은 별로 들리지 않았네요.  욕실과 침구류는 꽤 청결해서 거슬린다는 느낌이 없었구요 자신들의 광고대로 욕실컵도 굉장히 뽀송하더군요 사실 욕실컵을 잘 이용하지는 않지만 자신들의 광고대로 하는지가 궁금했어요 화장대겸 책상의 거울도 있어 이용하기 좋았구요 작은 옷장도 있어 옷걸기에 편했어요  가장 좋았던 점은... 전 호텔이든 펜션이든 게스트하우스든  침대 이외에 쓸모있는 쇼파나 데이베드가 있는것을 선택에 있어 중요하게 여깁니다. 침대만 딸랑 있는 곳이거나 장식용에 가까운 쇼파는 사실 침대이외에 앉을때가 잘 없더라구요. 여행하다보면 일정을 정리하거나 약간의 사무를 처리해야 될때도 있어 탁자나 쇼파를 굉장히 중요시 합니다. 근데 저렴한 호텔이나 펜션 게하등에는 이런 탁자나 의자가 없거나 있더라도 불편한 경우가 굉장히 많거든요  엘린호텔은 침대 옆에 작은 탁자와 쓸모있어보이는 의자 2개가 있는 게 굉장히 맘에 들어 선택 하였죠 역시나 저녁에 늦게 도착해서 과일과 맥주한잔 하고 자기에도 딱 좋았구요 남편이 메일을 보고 쓰고 하기에도 굉장히위치는 공항에서 택시로 불과 10 분 거리입니다. 프론트 직원이 도움이되었습니다. 방은 기본적이고 괜찮습니다. 매우 넓지는 않지만 방에 필요한 모든 것을 얻었습니다. 다음 날 아침 일찍 비행기를 타야 할 경우 권장됩니다.나는 3 y를 가지고 거기에 갔다. 아이, 유모차와 그 짐을 밀고 눈이 내리는 날 저녁에 도착했습니다. 직원들이 정말 도움이되었습니다. 처음에 유모차를 계단을 통해 들어 올리려고했지만 직원이 휠체어 전용 엘리베이터를 열고 들어 오게했습니다. 객실은 깨끗하고 히터도 작동합니다. 위치는 훌륭했습니다. 공항과 버스 정류장에서 가깝습니다. 우리가 서귀포에 가고 싶을 때 공항에서 600 번 버스를 타거나 버스에 타기 만하면됩니다. 이 호텔 근처에 많은 맛있는 레스토랑이 있으며 바 오젠 (Baozen) 거리까지 걸어 갈 수있는 거리에 있습니다. 편의점은 도보로 1 분 거리에 있습니다.중국관광객들이 좀 많은 편입니다. 시설 가격대비 괜찮구요 조식도 나름 먹을만합니다.  수영장도 잘 되어있는 편이에요 제주도 비수기때  잘 이용하시면 저렴하게 숙박하실수있어요. 호텔 근처에 뭐 편의 시설은 없구요  편의점 있습니다. 주차장은 야외주자장이구요 제주도 렌트해서 이동시 괜찮은 위치에 있어서 편합니다. 규모에 비해 저렴한 편인거 같아요  추천합니다. 좋은 곳이에요제주시에서 동쪽으로 가는 길목에 위치하고 있어 위치가 좋습니다. 호텔 층수가 높진 않지만 아침에 바라보는 바다가 멋있었고 조식도 괜찮았습니다. 주차장도 여유있는 편이라 밤늦게 주차하는데에도 불편함은 없었습니다.모처럼의 연휴를 맞아 아내와 함께 제주에 있는 호텔을 검색하던 중 함덕에서 동북리로 들어가는 길목에 있는 메이더호텔로 4박을 예약을 하고 첫날 도착시 느낌은 꽤 아담하다는 느낌을 받았는데 호텔방에 들어서는 느낌은 우리가 우려했던 것과는 달리 확트인 공간과 펼쳐진 전망은 마음을 휠씐 더 행복하게 만들었다. 잘 정돈 된 방과 구조는 머무는시간 내내 행복함 그 자체였다.앞은 바다 뒤는 산이 있어 산과 바다의 멋진 풍경을 감상할수 있고 야외수영장도 있습니다 룸컨디션은 깨끗하지만 좀 올드하고 욕실이 잘 되있는점이 좋았어요 외관에서 보면 너무 이쁜곳이에요...하지만 왜 그런지 내부관리는 잘 안 되고 있는 듯해요. 중국관광객들도 좀 오는듯하고요.,..위치가 뭐 잠만 자기는 괜찮지만 주변에 뭐 별게 없어서요,,,일부러 갈만한 곳은 아닌거 같아요..관리만 잘 해도 좋겠구만요워크숍으로 여러 동료들과 같이 묶었던 곳이었는데, 화장실 부족인것 외에는 대체적으로 만족스러웠습니다. 밖의 휴식공간도 예뻐서 동료분들이 사진을 많이 찍었답니다.관리 잘된 야자수들이 반겨주는 제주풍 리조트에요 콘도형 독채형 통나무형이 있어서 여행 인원에 맞게 선택할 수 있어 좋았고 가정집 같아서 아늑했습니다 가족여행에 좋은곳우리는 이곳에서 2주를 2 년의 오래 된 아기. 이 평화롭고, 편안하고, 평화로운 호텔, 위치도 좋고, 근처 hamdock, 그리고 멋진 공원이 있습니다. 산책을 한 뒤에 리조트. 많은 사람들이 영어를 구사하기 때문에. 적극 추천합니다.저렴한 가격 대비 성능이 좋아서 만족스러웠습니다. 하지만 주위에 아무런 편의시설이 없다는 단점이 있습니다. 객실 크기에 비해 욕실 크기가 큰 편이었는데, 욕실에 샤워부스나 욕조가 따로 없는 점이 좀 아쉬웠습니다.외진 곳에 위치해 있어서, 관광지 위주의 여행을 하시는 분이라면 동선상 좋은 위치는 아닐지도 모릅니다. 하지만 가성비가 좋은 숙소라고 생각합니다. 특히 소셜커머스를 통해 저렴하게 예약할 수 있어서 좋았습니다. 리조트가 큰 편인데, 관리실이 따로 있어서, 직원 분으로부터 룸 위치를 친절하게 안내 받을 수 있었습니다. 합리적인 가격에 비해 룸 컨디션은 꽤 괜찮았고, 마음에 들었습니다.第一次到濟洲旅行，這間酒店令我對濟洲留下美好印象。酒店為單棟式木屋，附近環境美麗，房間布置簡單但令人有舒適的感覺。酒店主人態度非常友善，早上會提供簡單烤蛋糕及咖啡為早餐。這裡很適合放鬆心情，是渡假的好地方。제주도에 처음 묵는 이 펜션 주인이 정말 사랑하는 나무 집, 켈빈 에게 매우 친절하고, 협조적이고 푹신한 강아지 이름 joyvious 함께 pama.   자기는 - 제주도에서 운전, 우리가 우리의 gps 에 입력한 업로드에 케빈. 주변의 좋은 펜션, 평화로운 집에 있는 것 같은 느낌. 저는 이곳을 추천하지만 제가 조언을 자 - 드라이브 및 gps 의 도움을 쉽게 찾을 수 이 펜션. 다시 이곳에 올 것이다. 가까운 곳을 원한다면 자연과 도시에서 멀리 떨어져, 펜션 하우스는 최고의 선택입니다. 가격 이상의 가치가 있다. 저렴한 가격에 차를 빌리는 좋은 강력추천합니다, 우리를 빌릴 수 있는 라이센스의 경우 만료하고 협박 하지 않았다. 필요한 모든 것을 도와주는 주인인 케빈. 불러 주는 택시를 타고 우리를 돕는 이 여정에서, 음식을 주문하고, 할 수 있도록 하여 현지 음식을 가져다 주었습니다. 분실 했을 때, 그는 전화를 하나만 떨어져 있어 택시를 타고 통신할 수 있습니다. 방은 깨끗하고 주방 용품 및 완벽한 (주전자 밥솥, 가스렌지, 등등 microvewave) 또한 구운 빵 으로 아침 식사를 제공. 정말 그의 서비스는 우리의 여행을 제주에서 기억에 남는 때문에. 저는 제 친구들과 꼭 다시 갈 펜션을 추천 합니다.저렴하다고해서 더럽거나 그러지 않았어요 ~~ 다만 세면용품은 주지않으니 참고하시길 ㅎㅎ 시설은 깔끔한데 입실했을때 씻고 나온 목욕탕 냄새가 아주 살짝 났습니다공항과 가까운 편이나 걸어서 이동하기엔 무리가 있습니다. 골목에 있어서 찾기 어려울수 있으며 시설은 가격대비 양호한 편입니다. 다만 침구류에서 락스 냄새인지 좀 강한 냄새때문에 머리가 아프고 냉장고의 모터 소리가 수면을 방해합니다. 공항 근처에서 짧게 머무르기엔 괜찮습니다.저렴한가격에 합리적인 시설입니다. 위치가 너무나도 좋았습니다. 1분정도 걸어나가면 대도로변이 나오네요. 서귀포 출장시 버스를타고 다니기가 너무나도 좋았습니다.이곳에서 4박을 묵었습니다. 방 크기는 좋았어요. 새로운 현대식 호텔은 아니었지만 좋은 호텔입니다. 용도에 맞게. 냉장고, 치약 함께 제공되는 영화 채널(영어),! 내가 좋아하는 건 샴푸와 샤워 폼 냄새가 정말 좋았습니다. Cu, GS25, 세븐일레븐 편의점이 걸어서 갈 수 있습니다. 또한 롯데 면세점 몰까지 도보로 이동할 수 있습니다.  예, Amberscha 언급했듯이, 3주차장을 사용할 수 있지만 주차하고 강 수 근처에 있습니다. 도로 좁은 편입니다.바닥 난방기가있는 방을 정말 좋아해서 더 많은 정보를 요구할 수 없어서이 호텔에서 머물렀다. 우리는 Ondol Room이라는 방의 컨셉을 좋아했습니다. 잠에서 깨어나기를 거의 원치 않으므로 매우 편안합니다. 전반적으로,이 장소는 매우 좋습니다 직원이 정말 도움이되고, 위치는 수많은 레스토랑과 편의점에 가까이 있으므로 아무것도 걱정할 필요가 없습니다.우리는 2 개의 밤 동안 여기에서 머물렀다. 그리고 나는 장소를 소유하고있는 것처럼 느꼈다! 멋지게 꾸며졌고, 작은 주방에서 무엇이든 요리 할 수 \u200b\u200b있습니다. 밥솥, 난로, 후드, 전자 레인지, 가정용 식기류를 갖추고 있습니다. 집은 해변과 공항과 매우 가깝습니다. 걱정하지 마라, 우리가 잘 잤던 것에 따라 소리는 당신의 잠을 방해하지 않을 것이다 (두꺼운 커튼 덕택에!). 우리는 장소 근처의 해변을 따라 많은 해산물 레스토랑이 있다는 것을 알았지 만, 그 중 하나를 시도 할 수 없었다. 호스트는 매우 유용하며 잘 의사 소통 할 수 있습니다. 이 곳을 전적으로 추천합니다! 가치있는 모든 원! 하하하26 / 2 / 18에 하룻밤을 머물렀다. 장소를 돌보는 부부는 친절하고 도움이되었습니다. 좋고 깨끗한 곳. 우리는 냉장고와 요리 시설을 갖춘 4 인승의 사람을 위해 임대 한 사람입니다. 당신이 운전하는 경우 연금의 infront 공원에 있습니다. 도보 거리에있는 편리한 상점과 식당.함덕해변에서 조금 떨어진곳에 위치하고 있어서 조용해서 좋았음. 내부는 깔끔하며 프런트 직원도 친절하였음.  다만 객실 방음이 잘안되는 편은 단점. 가격대비 훌륭함!가족 여행으로 떠난 제주 여행~ 아이들이 있어서 함께 즐길수 있는 해수욕장인 함덕 해수욕장으로 결정하고 인근 호텔을 검색하던 중 베스트원 호텔을 알게 되었습니다. 오픈한지 정말 얼마안된 (아마... 2달 이내인듯^^) 그래서 더 깨끗한 이미지의 호텔 이였습니다.  직원분들의 친절함은 5성급 호텔 저리가라였죠!!!  인근 놀거리 먹거리도 많고 호텔에서 보이는 오션뷰도 너무 좋구요 두루두루 가성비 최고 최고 인것 같습니다  깨끗하고 친절한 직원들이 있는 호텔에 머물면서 즐거운 가족여행을 하고 왔습니다~  참!! 직원분들에게 물어보면 숨겨진 맛집도 안내해 주신답니다^^가족들과  간만의  제주도 여행  아이들도 좋아하고  서우봉과 함덕해수욕장이 가까워  스노쿨링도 하고  바베큐장이 있어 고기도 구워먹고 즐거운 여름휴가 였다  호텔 직원들의 친절과 서비스도 좋구 암튼 가을이나 겨울에 한번 더 와야겠다주변이 조용하고 차도 많이 안다녀서 숙박하기 최적이었습니다. 화장실도 방마다 있고 방도 깨끗했고 무엇보다 사장님이 넘 친절하셨습니다 조식도 정갈하게 나오고 바다보면서 먹는 조식과 조용한 분위기는 잊지 못할 것 같습니다공항에서 멀지 않은 저렴한 호스텔입니다. 방은 깨끗하고 넓었습니다. 그룹여행 제주도 추천합니다. 근처에 있는 맛있는 음식과 저렴한 한국 음식점. 이 조용한 지역에 걸쳐 여름에 아이들의 바다. 많은 곳을 방문한다면 차나 택시 예약 권장; 더 나은 사용할 수 있을 경우 (사용 가능한 주차 공간) 이다.다섯 명이 묵을 수 있다는 점이 좋았습니다. 2층침대 2개에 일반 싱글 침대 하나 제공됩니다. 하지만 떠들고 놀기에는 방음이 전혀 되지 않고, 11시밖에 되지 않았음에도, 시끄럽다고 제지를 받았습니다. 방은 깨끗한 편이고 조식도 좋았습니다. 조식과 함께 과일이 제공되는점은 아주 좋았습니다. 방값은 아주 저렴한 편이고 무료 와이파이는 제공되지만 자주 끊겨 사용이 힘듭니다. 위치는 약간 불편한 편이었던것 같습니다.非常適合渡假，房間面對著海，坐在陽台曬曬太陽，走出去就是風景區「龍頭岩」,房間內有廚房，去「東門市場」買鮑魚回來水煮，螃蟹煮粥，還有烤魚，真是悠閒自在，下次來濟州島一定要住這裏。마레카펜션 사장님 정말 유쾌하십니다. 5개의 동이 나란히 있어요. 조용한 바닷마을에 자리 잡은 펜션. 아늑한 잠자리에요. 추천!금능리 마을 안쪽에 위치한 펜션이에요. 주인 아저씨가 친절해서 기분 좋은 하룻밤 보냈어요! 펜션은 총 5동, 아담한 크기지만 있을 건 다 있어요. 겨울에 다녀왔는데 난방 시설 좋네요. 방 따듯해요.숙소도 너무 깔끔하고 이쁘고~ 안에 인테리어,소품,생필품 등이 정말 깨끗하고 퀄리티 있어요~ 진짜 힐링되는 숙소에요~ 사장님도 너무 좋으시고 조식이 짱입니다!Просторный номер,нормальных размеров санузел с ванной.Уборка номера каждый день.Из минусов - молодые парни на ресепшен совсем не сильны в английском.Завтраки не брали,они стоят 9 тысяч вон на одного.При отеле бесплатная парковка.Расположение-отличное,вокруг много заведений,где поесть,за углом начинается бутиковая улица,если идти от отеля вниз,то недалеко до пешеходной улицы.호텔은 멋진 동네에 위치해 있습니다. 고속도로에서 가깝습니다.  정면 장교는 매우 적응하고있었습니다. 그는 아트리움에서 공연을 보러 가야하기 때문에 조기 체크인을 요청했습니다.  매우 합리적인 가격으로 도시 전망 유닛을 구할 수 있습니다. 방은 매우 넓고 깨끗했고, 전혀 불평 할 수 없습니다.  매일 아침 맛있는 조식 뷔페가 제공됩니다.  이른 아침 항공편을 타야 할 경우에 대비하여 공항과 가까운 호텔이 필요하면 좋은 위치입니다.공항에서 가깝고 깔끔한 편 입니다. 화장실도 깨끗해서 좋았어요 가성비 좋아요! 추천합니다!!호텔은 그랜드 보이지만 실내는 그다지 의 외부 모습. 제공하지 않습니다 목욕 수건, 커피나 차를 가진 기본적인 세면도구 사셰의. 그러나, 이 7 - 11 근처의 카페 거리와 많은 맞은 편.우리는 2 개의 밤 동안 여기에서 머물렀다. 그리고 나는 장소를 소유하고있는 것처럼 느꼈다! 멋지게 꾸며졌고, 작은 주방에서 무엇이든 요리 할 수 \u200b\u200b있습니다. 밥솥, 난로, 후드, 전자 레인지, 가정용 식기류를 갖추고 있습니다. 집은 해변과 공항과 매우 가깝습니다. 걱정하지 마라, 우리가 잘 잤던 것에 따라 소리는 당신의 잠을 방해하지 않을 것이다 (두꺼운 커튼 덕택에!). 우리는 장소 근처의 해변을 따라 많은 해산물 레스토랑이 있다는 것을 알았지 만, 그 중 하나를 시도 할 수 없었다. 호스트는 매우 유용하며 잘 의사 소통 할 수 있습니다. 이 곳을 전적으로 추천합니다! 가치있는 모든 원! 하하하26 / 2 / 18에 하룻밤을 머물렀다. 장소를 돌보는 부부는 친절하고 도움이되었습니다. 좋고 깨끗한 곳. 우리는 냉장고와 요리 시설을 갖춘 4 인승의 사람을 위해 임대 한 사람입니다. 당신이 운전하는 경우 연금의 infront 공원에 있습니다. 도보 거리에있는 편리한 상점과 식당.나는 그것이 수영장을 가지고 있기 때문에 여기에서 예약했다. 그러나 수영장에 물이 없습니다. 방은 깨끗합니다. 그러나 그 가격으로 나는 해변에 가까운 다른 장소를 찾을 수 있습니다. 객실에는 간이 주방이 있지만 옷장은 없습니다. Bedsheet는 깨끗하게 보였지만, 작은 비트는 냄새 나는데, 내가 체크인하기 전에 바뀌 었는지 확실하지 않습니다.생긴지 얼마 안됬는지 아주 깨끗하고 방도 넓고 가구도 고급지고 만족스런 숙소였네요 1박만 한게 아쉽고 부엌도 있어서 다음엔 여유롭게 오래 머물러보고 싶어요 숙소에서 1분 거리에 올레길이 있어서 산책하기 좋고 함덕해수욕장까지 천천히 걸어 15분정도 걸려요방은 침대를 포함하여 깨끗하고 크고 편안했습니다. 욕실은 괜찮 았어. 총 2 인의 넓은 객실. 공항 근처에있는 것을 제외하고는 쇼핑을 원할 경우 위치가 좋지 않습니다. 우리가 개인 투어에 있었기 때문에, 우리는 우리 자신의 밴을 돌아 다니도록했다. 이 지역을 돌아 다니는 중에 호텔에 확인하고 싶을 수도 있습니다. 아침 식사는 놀랍게도 아주 맛있었습니다. 전복 죽은 좋았어!5층에 있는 커넥티드 룸을 썼는데 방 두 개가 하나로 이어져 있으니 참 좋더라구요. 인테리어도 꽤 깔끔하고 괜찮았습니다. 비슷한 가격에 훨씬 안좋은 숙소를 경험한 터라 꽤 만족했습니다. 공항과도 정말 가깝습니다. 비행기소리가 들리기는 하는데 저는 거슬리지는 않았어요.  다만 주차장이 2층에 있어서 바로 호텔로 들어올 수 없는 점은 불편합니다. 2층에 출입구가 있지만 막혀있어요. 비가 엄청 오는데 눈 앞에 있는 입구를 못쓰니 좀 화가 나더군요. 큰 짐이 있어서 들고다닐 수가 없어서 어쩔 수 없이 1층 로비 겸 카페 앞에 차를 대고 짐부터 옮기고 다시 차는 주차하러 가야 했습니다. 날씨가 좋아도 이동거리가 긴 편이라 불편한데 안좋기까지 하니 더 거슬렸던 기억이 있네요.Saya datang kemari bersama rombongan tour. Dilihat sekilas, hotel ini nampaknya tempat menginap berbagai group tour dari berbagai negara. Tempat parkirnya luas. Hotel ditata dengan gaya minimalis dan moderen.   Kamar hotelnya cukup luas, nyaman, dan bersih. Heater ruangan berfungsi dengan baik. Untuk sarapan, menu yang disajikan secara prasmanan dan cukup terbatas. Bagi turis muslim, hati-hati dengan makanan yang disajikan. Ada beberapa menu yang mengandung daging babi juga disajikan sebagai menu sarapan.친절한 서비스를 제공하십시오. 호텔의 위치는 약간 치마입니다. 오르막 호텔 입구까지 자신의 수하물을 옮기거나 끌 필요가 있습니다. 제한된 조식 뷔페. 버터없이 흰 빵을 제공하십시오. 샤워 룸의 벽은 화장실의 작은 칸막이에있는 것 외에도 매우 더럽습니다.놀랍겠지만 특2급이다. 나름 제주시쪽에 있어서 공항에서 가깝다. 다만 저녁식사를 위해서는 렌터카나 혹은 택시가 필요하다. 동급 깨끗하다부엌과 아늑한 객실, 해변까지 걸어서 갈 수있는 거리, 1 층에있는 편리한 상점, 친절한 프론트 목적지와 돈 가치.  도시 지역 / 공항까지 택시 또는 버스를 타기 쉽습니다.  valur는 돈을 위해, 추천 할 것이다.직원들이 놀라울 정도로 좋은, 그들은 친절하고 도움이 되었습니다. 가격이 매우 좋은 방을 보기, 해변도 가깝고, 바로 길 건너에 있어요.  모든 시설이 깨끗하고, 당구 테이블 및 탁구 테이블에는 활동 실. (단, 어디에, 안 심각하게 고려 하는 차를 렌트해서 섬을 효과적으로 .)   이 리조트를 추천 합니다.좋은 점:  방은 괜찮은. 이었고 대부분이 깨끗했습니다. 작은 부엌이 있었지만 공급이 가능한 모든 접시, 컵, 포크, 칼, 냄비와 팬.   해변은 정말 아름다웠다. 이 호텔에 대해 제도가 있지만.   나쁜 점:  할 수 없고 고객 서비스! 직원들은 매우 무례한 것이 우리를 체크 했습니다. 그들은 우리에게 인사도 하지 않았다. 같은 느낌이 드는 돈을 내는 투숙객에게 더 부담을 줄일 수 있습니다.   또한, 우리의 침대 시트와 욕실이 변경되지 않았습니다, 하지만 우리는 여러 날. 수건은 매일 만 추가할 수 있습니다.   입구 문은 매우 지저분 했습니다! 호텔 밖에서 본 우중충하고 더러워서. 더 나은 사람들이 보면 가끔 청소 해 주어.   전반적으로, 호텔은 너무 차가운 느낌. 불친절하고. 온라인으로 사진을 거 하지 마세요! 아무도 우리를, 우리는 미소도 안았습니다. 솔직하게 남겨 두고 기다릴 수 없어 할 수 있습니다. 이 호텔은 고급스럽고 아무것도 없습니다. 가치가 있지.  나는 결코 사소한 정보를 한 호텔, 하지만 가격이 얼마나 끔찍한 일을 할 수 없어 집 dohera 호텔. 나는 슬픈 때는 우리의 돈을 낭비할 수 있는 제주의 진정한 보석과 같은 호텔에 묵었습니다.이에 관련된 것을 생각하지 않습니다 호텔 이름을 제외한 초콜릿. 큰 객실, 단정하고 깨끗합니다. 샤워 시설이 좋다.  좋은 가격. 근처에 많은 상점들이 하나의 버스를 타고 약 10 - 15min 공항. 객실에서 흡연할 수 있습니다. 방이 준비가 되어 있지만 자신의 데스크톱에 한국인! 직원들은 영어를 잘 하지 않은, 나는 밤 늦게 도착했지만 체크 아웃을 하시는 분이었죠.초콜릿 호텔은 꽤 신식 이 개인적으로 생각하는 숨겨진 값이 マイクロ 호텔. F&amp;b 합쳐저셔 에 위치해 많은 소매 상점. 충분한 주차장에서 호텔이 있고, 객실은 깨끗하고 넓은 한국 표준 것이 좋습니다.  수건는 제공된 일부 부정적인 포인트가 부족 thuo 호텔 게스트는 초콜릿 호텔 간판이 아니, 오히려 이곳이 한 해 동안 한글 은 호텔 찾을 수 있습니다. 주인에게 영어를 이해하지 못하는 프론트 데스크 &amp; 만다린.  전반적으로 이 호텔은 아주 잘 관리하지 않을 사람들에게 제주시 아침 식사도 고급스럽거나 ㅋ ㅋ ㅋ. 제주도 시내와는 조금 멀지만 한적하고 숙소 바로 앞 해변도로가 너무 좋습니다. 주인분도 너무 좋으시고 특히 침구류에서 락스 냄새가 나지 않는 점이 정말 좋았습니다. 로비에서 간단한 인터넷 이용이 가능하고 객실에서의 바다 풍경이 너무 좋습니다! 가격 대비 좋은 숙소입니다협재해수욕장이랑 차로 1분 거리에 있었구요  바다도 보이고 정원이 특히 이뻣어요 조용하구요  바베큐장도 객실마다 있더라구요 가격도 저렴하고 잘쉬다 왔어요이것은 통증이 게스트 하우스 제주도, 특히 의 처음 제주에서 지원되지 않으며 분이 한국 언어. 더 나빴던 것, 여기가 여러 이름 - 리베라 호텔, 리베라 호텔, 호텔 riveira, 리베로 호텔... 거의 모든 불행 의 게스트 하우스, 하지만, 결국 제가 체크 인된.  하나, 그것은 모든 시설을 깜짝 제 방에서, 예컨대 엘이디를 티비, 컴퓨터는 기능 (웹 브라우저가 설치되어 있지만 의양성의 도), 미니 바, 온수 보일러, 는 정수기 (예, 바로 읽는 해당) 및 무료 와이파이. 꼭 기대도 안 한 가격에 이 정도의 방 두 110,000원 하룻밤! 또한. 나는 질 좋은 침대와 베개를 허용.  화장실은 괜찮아요, 이 욕조에 커튼이 없어서. 또한. 을 사용하여 화장실 문; 넣어서 내 체력 테스트.  을 접수, 영어 유창하지 않은 저를 화나게 합니다. 그래도, 갈 때마다 한, 그들은 나에게 최고의 골퍼 피가공물과. 예를 들어, 를 요청했을 때는 주변에 여기서 을 디너, 잘 지적, 의 지도, 근처에 레스토랑이 몇 군데 있습니다.  위치로 말할 것 같으면, 이 게스트 하우스는 위치는 유명한 쇼핑 거리로부터 멀리 킬로미터 이상 제주도, 마누카꿀을 늦은 밤 쇼핑을 코스메틱 제품, 식료품과 편리함 등. 또한 10분 거리에 있어 단지 제주 공항, 제주 국제 공항. 또한, 임대 자동차 는 차고 있다. 조식, 그러나, 제공되지 않습니다.  결론적으로, 이곳의 매력은 가격과 위치. 만약 휴가를 원하는 것이 저렴한 곳이었어요, 이 게스트 하우스에서 있습니다.건축한지 오래되지 않아 콘도와 기타 시설들이 깨끗하고 좋다. 중국 관광객을 대상으로 만든 시설이라 고급자재를 썼다는 얘기도 있다.제주도 골프장은 겨울이 피크라고 많은 골퍼들이 찾았다고하네요.. 페어웨이 상태가 많이 안좋네요.. 디봇, 모래, 수리지. 이쁜 골프장이었는데ㅋ 캐디언냐의 넘치는 에너지는 좋았구요. 5,6월되면 좋아지려나.. 다른 근무자들 전반적으로 불친절.애월 해변과 발코니에서 바로 바다볼 수 있습니다. 1분 정도 걸으면 해변입니다. 멋진 커피와 디저트에 있는 건물 앞에 있는 펜션. 오징어 배 불빛 에서 보고 나오 시 놀라운 은 밤. 넓은 방, 부엌과 주차. 전체적으로 좋았지만. 불리한 점은 이 오래된 건물도 잘 되어 있습니다. 바닥은 더럽고 욕실 바닥은 욕조 및 windows 시피강 에 잔류 전기를 방전시킵니다. 이상하게도 이 장식되어 있다.  주인은 매일 깨끗한 수건을 준. 나는 사람들은 영어를 생각하지 않습니다.  가격이 저렴한 해변가에 대해. 하지만 같은 캠핑 장. 다시 머물지 않을 것이다. 우리는 서양식 콘도에 머물 렀는데, 퀸 침대 1 개와 이불 2 개가있는 방 2 개가있었습니다. 바다 전망을 감상 할 수있는 멋진 안뜰이 있습니다. 전체적인 편의 시설은 현대적이지 않지만 수용 가능합니다. 이 펜션 호텔은 1입니다. 성산 일출봉까지 자동차로 5 시간, 마운트 산까지 자동차로 20 분 한라산 관음사 트레일 헤드. 우리가 예약 한 가격으로, 나는 그만한 가치가 있다고 생각합니다.애월해안도로 가는길 구암에 위치해있어요 직원들은 친절한편인데 시설은 좀 오래되어서 좀 그래요 1층에 편의점이 있어 편리했어요 커플여행으로는 좀 별로구 남자끼리 여행에는 저렴한가격에 좋아보여요~~원격 시골에 위치. 조용하고 평범한 객실의 편안함 만이 장점. 아침 식사는 호텔 비용에 포함되지 않는 jar 파일에 있는 프로비저닝 빵과 잼. 화장실 시설은 별로. 사실, 우리 방에 에어컨이 작동하지 않는, 직원들이 수정을 거절했다. 나는 내 친구들이 이 펜션이 호텔을 추천하지 않습니다.Бронировали дом для отдыха почти за год до отпуска! Тщательно и долго выбирали. Понравилось предложение от Sol Beige Pension. Однако, за месяц до заезда отель поднял цену в 1,5 раза. Этот факт значительно изменил бюджет отпуска и планы отдыха. К сожалению, впечатления об этом доме для отдыха сложились отрицательные.센트럴 시티 호텔을 예약해야되는데 센트럴 호텔을 예약했습니다 ... 1시간밖에 안지났는데 취소가 안되서 묵게됨...(왜 취소 안해주세요) 가격에 맞는 숙박시설입니다. 지내기 부담없어요!- 직원들은 불친절하고 영어를 잘 하지 않는 (그는 저에게 왜 나는 불평하지 않는 한 중국... 미친) - 방이 구식이고 - 사진을 인터넷이 아닌 - 에어컨이 없는 경우 이고 침대에 직접  객실 청소와 수건 - 없음호텔이아니라 그냥 모텔인데 인테리어 공사한정도 이네요 가자마자 변기 고장에 방사이즈에 부족한 벽걸이 에어컨 하나가 전부입니다 그리고 4명 가는데 일회용품 2개에 수건2개가 다네요 그리고 예약할필요 없으니 현장에서 하든가 딴데가는게 나아요  2 암버 호텔에, 이는 일명 이비사 호텔이지만 호텔은 말 그대로 2 암버 중앙에서 10분 거리에 위치하고 있어서 이렇게 서로 혼합 하다. 또한 이 덜 알려진 중 하나인 것 같습니다. 세면도구와 수건도 없었고 차 안 했지만, 주전자와 컵 4주 (2성급 호텔이). 방은 넓고, 침대는 편안했습니다 (베개와 이불이 푹신하), 방은 깨끗하고, 직원들은 매우 도움이 되고, 큰 슈퍼마켓과 호텔 건너편에 편의점이 바로 5/10 분 거리에 있다. 아침 식사는 숙박비에 포함되었는데 가격대비 다양하고 강력한 에어컨은 조용하다. 모든 것이 만족스러운 숙박이었습니다.그냥 러브 모텔입니다. 객실에서는 유쾌하지 않은 냄새가 납니다.  공항에서 가까운 점은 장점이기는 하나 다시 여기에 숙박은 안 할 것 같습니다.몸도 지지고 풀겸 찜질방가서 자려다 그냥 호텔나우에서 당일예약하고 지냈습니다. 주차공간 말도안되게 적구요  그냥 세워놓고 키맡기고올라왔는데 차 이동시키시고 문도 안잠가주셨더라구요. 일부로 월풀욕조있는 객실예약했는데 월풀청소를 안하시는건지 청소를 안하시는건지 검은물에 녹물이 난리도 아니네요  샤워기 거는건 망가져있고 세면대 물도 안내려가고  객실 비품 구색맞춘다고 이것저것 갖춰는 놓으셨는데 다 오래되고 정체불명 브랜드라 쓸수도 없었네요.I booked a room here as we had a flight from Jeju to Seoul at 9pm and continuing on to singapore on the red eye. We would spend our last day seeing JeJu downtown and the coastal area. (we stayed at the Shilla before this). We had low expectations, we were not staying the night and just wanted a place to put our bags, do some sightseeing/ shopping and come back, take a shower before taking our jjourney home. For US$60, we knew it would be basic but thought it would at least be neat and clean looking at photos from agoda. The photos were really misleading, a dirty armchair just outside the hotel door, box of tools lying around near entryway, Stairway piled with empty boxes and garbage. 2 Chairs had the pleather peeling off. Used soap bars were left behind, expecting it to be제주도 관광의 특성상 투숙객 대부분이 연박으로 오는데 그 중 반수는 첫날이후 다음날 예약을 취소합니다. 하지만 물론 환불은 되지 않습니다. 다수가 돈버려가면서 굳이 취소하는데는 많은 사유가 있습니다. 가장 최악인건 시설입니다. 시설이 극악이구요 정말 아프리카에서 자는거같은 기분을 느낄수있습니다. 또한 이 게하의 가장 큰 장점이 게하 내에서 술을 계속 마실수 있고 소등시간이 없다는 점이었는데 그게 불가능해지고 타 게하처럼 소등시간이 생겼습니다. 시설과 파티 모두 별로입니다. 또한 직원이 사장 포함 세명이나 상주중인데 정리나 설거지를 투숙객에게 시킵니다. 다시말하지만 다른데 가세요First impression was horror- in the middle of nowhere- took 25mins by taxi from the airport to get there and was in a dark secluded area with nothing around for miles. Taxi ride cost 15300 won. Walked in and saw a large raised platform with about 6 mattresses on it and a loft/ attic area also with about 5 mattresses. Was really worried that\'s where we\'d be put- with no privacy at all. Thankfully we were in a two person room, as opposed to the 6 bed dorm. In the middle of the rooms was another bed- also no privacy! There\'s a little courtyard outside where you can sit and socialise. Inside the main building there is also a small table, kitchen and office area- however it was very uncomfortable being in there in the mornings as people were sleeping in that area so you felt guilty정말 술을 좋아하고 술잘 마시는 사람이라면 추천할만합니다  화장실이 불편하고 방이 좀 춥습니다 근데 파티에는 최적화네요처음 가니 방은 없고, 잠은 평상에서 잘 거라고 하시더군요. 뭔 해괴한 소리인가 했지만, 뭐 이렇게 자는 것도 나름 낭만일거라 생각했습니다. 낮에 게스트 하우스에서 바라보는 바다 풍경이 워낙 좋았거든요.  그러나 밤이 되니, 낭만은 개뿔. 평상 주변에 테이블 올려놓고 한 30명이 막걸리로 술파티 벌이더군요. 퍽이나 좋은 스타일이긴 한데, 낮 일정에 지치고 피곤한 사람은 어디서 쉬라는건지. 평상에 자라면서 평상 주변에서 술파티 벌이면 어쩌라는거죠? ㅋㅋ 억지로 같이 술먹으면서 밤새라 그건가요?  네, 여긴 그냥 낮은 수준의 유흥업소입니다. 누울 수 있고, 씻을 수 있고, 돈 주면 테이블에 술도 차려주고 간단히 안주도 줍니다. 전국에서 온 젊은 남자도 많고 젊은 여자도 많네요. 즐기시면 되겠습니다.  자세히보니 아예 대놓고 노리고 이 게하를 찾는 사람도 많아보이더라구요. 놀러왔으니 엔조이하면 되는거죠 그런거죠~  다만 게하 주인장님이 부킹을 해주시진 않습니다. 주인장님은 그냥 사파리 구경하듯 구경만 하시는걸 좋아하시더라구요. 그래서 매칭성공률은 장담못하겠네요.  그렇지만, 도심 속의 즉석만남이 지겨우시다면 강추드립니다. 화이팅!정말 아프리카의 느낌이 나는 곳입니다. 촌장님도 자연인이시고.. 거기에 머무르시는 분들이 굉장히 프리한 마음을 가진 분들이 많더라구요. 그래서 인지 저희 일행들도 함께 흐트러질 수 있던 시간이었습니다. 청결은 약속드릴 수 없어요. 하지만  한번정도는 좋은 추억이 되지 않을까 싶습니다.2 개의 바다 관경을 예약했지만, 체크인시 객실 1 개가 바다보기가되지 않습니다. 예약이 완료된 이유를 주인이 알려줍니다.  방은 사진처럼 보이지 않았고, 낡은 것, 마루망, 모든 가구 (침대, 냉장고, 의자, 테이블, 심지어 TV)가 10 년 이상 사용되었습니다. 화장실 바닥은 어두운 얼룩이 많습니다.  우리가 밤에 체크인 할 때 바다 전망이 얼마나 좋은지 몰랐고 방을 만족하지 못하기 때문에 현장에서 취소하고 주인과 협상을하지만 50 % 만 회수 할 수 있습니다. 환불금. 우리는 끝에 다른 호텔을 위해 예약했다.  또한 주차 공간이 아주 작아서 약 6-8 대의 차를 주차 할 수 있습니다.  커플 여행이나 신혼 여행에는 추천하지 않습니다. 잠자는 곳을 찾고 있다면 공항 활주로가 옆에있어 소리가 단단하지 않을 수도 있습니다.이것은 뼈없는 연금입니다. 그것에 대해 호화로운 것은 없습니다. 발코니에서 바다의 전경이 보입니다. 그것은 매우 편리 공항에 매우 가깝지만, 가벼운 침목에 대해 조금 시끄러운 수 있습니다. 작은 예산으로 휴가를 보내려한다면 현명한 선택이 될 수 있습니다.후회스러운곳. 어둡고 더럽고 무섭기까지했음. 공항가까와도 가기는 매우 어려움. 뒷골목 러브모텔단체패키지 숙소치곤 가격대비 깨끗ᆢ조용하고 괜찮았음ㆍ 다만 엘리베이터와 복도에 싸구려향수를 잔뜩뿌려 속이 울렁거림ᆢ조식은 최악ᆢ 간단히 먹을 반찬류 준비하여 그곳에서 밥만 가져다먹을것 추천ㆍ룸컨디션은 가격대비 괜찮다. 하지만 중국인들이 많고 복도에서 새벽까지 5시간동안 떠들어서 잠을 못잤다. 다신 안갈듯절대 가지마세요 서비스 완전 최악인건 둘째치고 총지배인인가몬가 완전 최악  예약건을 직원 실수인지 몬지로 동의도 없이 취소해놓고 30분 넘게 아무말없이 그냥 기다려라 기다려라 해놓고   얌전히 기다리고 있었더니 객실이 취소되었으니 딴데로가라? 더이상 여행기분 망치기 싫어서 잠깐 인터넷 검색 한 5분쯤하고 아무 안내없이 조용히 다른 호텔을 이용했습니다.  그런데 약속한 환불건도 처리해주지 않고 2주를 기다리다 전화했더니 죄송하다는 말은 한마디도 없고 할만큼 했는데 왜 또 이러냐는 식 ㅡㅡ   서비스직에서 고객이 불편함을 겪으면 일단 죄송하다는 말, 불편을 겪게 해서 죄송하다는 말이 먼저인줄로 압니다만  서비스의 기본이 안되있는 총지배인이 있는 이 호텔에서 교욱받은 직원들이 얼마나 좋은 서비스를 제공하겠습니까  절대 가지마세요제주공항에서 5분도 안걸리는 호텔이에요! 가격도 저렴한 편이고, 방도 깔끔해요. 오피스텔을 개조해서 만든 호텔이라 방안에 싱크대와 인덕션이 있는데 조리도구가 없어 사용은 못하고, 대신 조식이 5천원이라 부담없이 먹기 좋아요. (조식은 토요코인 스타일~!) 단점으로는 대로변에 위치해있어서 차량 소음이 조금 있습니다.아무리 저렴한 호텔이라 하더라도 가구들(장롱, 탁자)이 너무 많이 훼손되어 있고 커튼도 청결하지 못하고 침대주변에 콘센트도 없습니다. 이건 손님에 대한 예의가 아니라고 봅니다. 잠만 주무실 분은 괜찮으실지도 모릅니다.  II 상태가 난처했습니다. 이 거리가 멀다. 나는 보았던 사진과 기대 꼭 다른 매우 혼란스러운 만든다. 나는 제주도에 첫 날 거기에 있었다면 다른 호텔을 선택했을 것입니다.이것은 이름의 호텔입니다 - 제가 호텔에 머물러 있기로되어 있었기 때문에 제가 여기에서 끝났습니다. 제가 북한에 간 적이 있다는 것을 알았고 나를 수용하기를 거부했습니다. 그래서 나는 내 여행 3 주 전에 머무를 곳이없이 남겨 두었고, 나의 휴가를 망치지 않기 위해 가능한 한 가까운 Hyopjae 해변이었던 어딘가를 선택해야만했다.  7 박 숙박을위한이 \'호텔\'은 약 600 % 인 것으로 밝혀졌습니다. 이는 청구해야하는 것보다 약 1000 % 정도 더 큰 수치입니다. 그것은 이름의 호텔입니다.  본질적으로 당신은 70 초 밖에 안 보이는 거친 발코니에서 매우 피곤한 방을 치르고 있습니다. 내가 거기에 있었던 주 동안, 방이 비어있는 것 이외의 청소를하지 않고 있었다 - 그들은 침대를 만들거나 욕실을 깨끗하게하지 않았다. 그것은 꽤 진절머리 나. 매일 해변으로 가고있을 때, 모래가 방으로 들어가서 침대에 들어가서 하나의 거대한 모래 구덩이에 살고있는 것과 같았습니다. 침대에 관해서는, 내가 뒤에서 매듭을 정리하기 위해 영국에서 돌아온 이래로 두 번의 깊은 티슈 마사지를 받아야한다는 것은 너무 불편했습니다.  호텔에는 시설이 거의 없습니다. 리셉션에 간신히 유인합니다. 도착시 공항 교통편을 제공 받기를 거절하고, 공항까지가는 길에 마지 못해 택시를 타게되고, 식사를하거나 마시고 싶을 때도 있습니다. 아침 식사를위한 무엇이라도 그 다음 Hyopjae에 카페에 10 분을 걸어야한다 (나는 머무르고있을 예정였던 장소의 역설적이었다.  나는 호텔에 나의 체재를 파멸시키지 않으려 고 노력했다 -이런 종류의 사건을 경험 한 적이 없어서 어디서부터 시작해야할지 모르겠습니다.  나는 기대했던 것보다 일찍 도착했고, LK 호텔에 도착했다.  \xa01) 로비 또는 프론트 데스크에 아무도 없습니다. 그래서 호텔에 전화를 걸었고 약 10 회 재판을 마친 후 전화로 누군가를 얻습니다.  \xa02) 즉시 그의 반응은 매우 무례하고 위협적입니다. 그의 태도는 "왜 나를 새벽 10시에 부르니?" 그는 "오전 10시에 호텔에 몸가짐이 없다"고 말합니다. 나는 그러한 예기치 않은 발언에 대답 할 수 없었다.  \xa03) 일찍 체크인 할 수 있는지 물었다. 그의 반응은 더 이상의 논평없이 매우 간단했다. 나는 그에게 내가 일찍 방을 얻을 수 있는지에 관해 물었다. 그리고 나는 그것을 지불하게 행복하다. 그의 반응은 다시 "아니오"였다. 나는 내 가방을 버릴 수 있는지 물었다. 그의 반응은 로비에 남겨 두었습니다. 나는 호텔 프론트 데스크에 아무도 없을 때 로비에 내 가방을 어떻게 두어도되는지 물었다. 그의 반응은 "침묵"이었다. 서핑을하기 위해 친구들을 만나기로되어 있었기 때문에 나는 그에게 내가 갈 곳이 있는지 물었다. 그의 대답은 "아니오"였다. 그 다음 나는 그에게 내가 당신의 옷을 갈아 입을 수있는 욕실이 없다고 물었다. 그의 반응은 - 왜 나에게 이것을 묻고있는거야? 당신은 내가 당신의 "얼굴"을보고 싶을 때 로비에서 기다립니다.  \xa04) 그 다음 그는 정말로 큰 또 다른 사람과 로비에 온다. 그 사람이 바로 그 지역 갱스터라고 말할 수 있습니다. 그는 술 냄새를 맡고 담배를 피우며 "왜 당신은 그런이 호텔은 그 중에서 서쪽으로 협재 극다적인 에 위치 때문에 좋은 비치. 가장 인기 있는 부분만 5 - 10분 걸으면 해변.  이 호텔의 좋은 점: - 바로 에 있는 해변으로 가는 길 (정말 좋은 위치) -직원은 친절하고 도움이 됩니다 요 - 에 편의점이 나란히 호텔 발코니에서는 오른 편으로 매우 - 해변의 전망이 매우 좋은 샤워실도 좋고 (수압도 좋습니다) -  나쁜 점: 호텔은 오래된 (2 호텔을 시작) - - 침대와 베개는 나쁜 - Tv도 아주 오래된이 장소는 경영이 어려웠고 관리가 부족했습니다. 마루는 끈적 거리고 더러웠다. 문이 잠겨 있지 않았습니다. 머물러 있기가 너무 불편했습니다. 무료 아침 식사가 제공되지 않았습니다. 유일한 좋은 점은 대중 교통에 가깝습니다.내 인생의 더 나쁜 밤! ! ! ! 모든 것이 잘못되었습니다. 화장실 냄새가 좋지 않습니다. 심지어 객실의 냄새가 좋지 않습니다. 더러운 부엌과 객실, 불친절한 주인과 직원, 오전 4 시까 지 밤에 야간에 노이 스를 만드는 사람들! ! ! ! 발을 안에 넣지 마십시오! ! ! 운영! !내 평생 동안 최악의 숙박. 방은 더러웠다. 그리고 나는 영빈관의 나머지에 대해 말하지 않는다. . . 인도 사람들은 밤새도록 이야기하고 음악을 퍼팅했습니다. 악몽 이었어! ! ! ! ! ! 모기 어디서나 방에. 주인은 전혀 친절하지 않았습니다.  ! ! ! ! ! ! ! 이 장소를 피해 라! ! ! ! ! ! ! !나는 그냥 낮은 가격과 위치(공항 근처) 이곳을 선택했어요. 가격이 조금 더 여러 가지를 고려해 낮춰 한다고 생각합니다. 침대는 단단히, 설치되지 않았습니다 더 소음 (6 침대 기숙사. 화장실과 충분히 자주 더러움, 냄새가. 나는 팬 작동 안 확인했습니다. 전체적으로 시설이 잘 관리되는 오래되어 보였어요. 시설. 관리자 또는 소유자가 전문적인. 그들은 음료와 함께 일부 대화, 친구(또는 손님들은) 늦은 밤 만든 하드 때문에 밤에 잠을. 락커 없습니다. 좋은 점. 전체적인 분위기는 편안하고 엄격한 규칙이 없습니다. 마사지 기계(무료). 버스를 타고 공항에서 취하고 편리한 위치. 아이러니하게도 좋은 고객들은 이곳에서 만났습니다. 매우 친절하고 재미있는 손님이. . . 나를 이곳에 다시 요청할 경우 그렇지 않습니다. 차라리 대안을 추가 1 또는 2달러를 지불합니다.이 호스텔은 매우 싸고 좋은 위치에 있지만, 내가 내부를 보았을 때, 그것은 단지 작았습니다. . . 내가 본 것 중 아주 작은 호스텔. 나쁜 냄새, 나쁜 화장실, 주차장 없음. 괜찮으 시다면 여기 머물 수 있습니다.
</div>
<br>
<br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 정규 표현식 적용</span></span><br><span class="line">apply_regular_expression(corpus)</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow: scroll;">
    '여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다 위치선정 또한 적당한 편이었고 청소나 청결상태도 좋았습니다일 이상 연박시 침대 이불 베게등 침구류 교체 및 어메니티 보강이 필요해 보입니다 베스트 웨스턴 회원의 경우 객실 뷰와 층수 요청에 적극적으로 반영해 주시길 바랍니다지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 알고오시면 좋을거같아요 세면도구와  잠옷은필수로챙기셔야해용 그것만챙겨오시면 잘쉬었다가실수있답니당방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요 다음에도 제주도 오면 꼭 여기서 지낼겁니다ㅎㅎ 박만 머문다는게 너무 아쉽네요ㅠㅠ저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버스정류이 있어서 너무 좋았습니다 시에 도착해서 가방 맡기려 했는데 일찍 정비된방이 있다며 바로 입실하고 룸도 업그레이드 해주셔서 직원분이 친절해 정말 좋았어요바다전망이라해서 기대했는데 영아니네요 전일 함덕대명콘도에서 박했는데 그곳이 실내 분위기랑 바다전망이 훨 좋아요손님이 없는 날이라고 가장 바다가 이쁘게 보이는 방으로 배치해 주셨다 불편함에 대해 바로 대응 써비스 해주었고 조식도 사소한 부분까지 신경써서 아주 맛있었다 특급 호텔은 아니지만 트랜디하고 즐거운 다양함에 대해 고민한 흔적이 였보인다 여름에 꼭와서 수영장을 사용해 보고 싶다  엄마와 둘이 여행왔다가 가격대비 좋다고 하여 다녀왔어요 ㅎㅎ 듣던대로 깔끔했고 위치도 너무 좋았어요 주위 마트 식당들 동문시장도 가까워서 좋았고 앞에 바다가 있어서 더 좋았습니다 ㅎㅎ 또 방문의사 있어요 딸 둘과의 일동안의 제주여행줌 박 숙소로 정해진 제주 휘슬락 호텔 처음엔 공항과 가까운 곳으로만 생각했으나 시설도 넘 깨끗하고 직원분들도 모두 친절모드로 제주여행의 마지막을 넘넘 좋게 마무리하고 돌아가네요 테라스에서 보이는 전경도 넘 멋지네요 인근 동문재래시장도 가까워 야시장 이용도하고 너무너무 잘다녀왔어요 다음에 또 이용할께요제주여행 일차 호텔 휘슬락에 체크인 ㄱㄱㄱ 뷰 기가막힙니다 깨끗하고요 주변에 갈데 많습니다 여친과 잊지못할 추억 만들어봅니다 좋은 가성비에 분위기 나쁘지않네요 추천 드립니다 후회없으실듯예전에 그랜드 호텔일 때 저희 아이 돌잔치를 여기 삼다정에서 했었더랬죠 제주도에서는 아주 전통있는 호텔입니다 그 후로 메종 글래드로 업그레이드 되었는데 위치 시설 서비스에 비해 매우 합리적인 가격대의 만족스러운 호텔입니다 그래서 저희는 명절에 제주도 내려오면 늘 글래드에 숙박해요 특히 층에 아티제와 백미당이 있어서 여기 커피와 베이커리를 좋아하는 저희 가족에게는 플러스예요지금까지 제주여행을 다니면서 여러호텔을 이용해보았지만 메종 글래드에서 가장 만족스러웠습니다 우선 공항의 접근성과 쇼핑의 편리함 그리고 조식의만족도가 최고이며 무엇보다 직원분들의 친절함이 기억에 남습니다 앞으로 우리가족은 제주에 갈땐 메종을 찾기로했답니다엄마랑 첫 제주도 여행인데 침구가 너무 좋았고 직원분들도 친절하셔서 편안하게 쉬고 왔습니다 교통도 편해서 짧은 여행이었지만 알차게 볼 수 있었도요 층에서 이틀 묵었었는데 정원 같은 곳이 바로 보여서 이뻤어요 거기 돌아다니니까 수영장도 개 있었는데 겨울이라 못써서 아쉬웠습니다 ㅠㅠ 여름에 꼭 여기 오려구요 ㅎㅎㅎ 추천합니다친구가 제주도에 놀러와서 투숙을 하였는데 객실이 깔끔하고 뷰도 좋았어요 야외 수영장이 보이는 방향이었는데 야간에는 조명을 켜서 너무 예쁘더라구요 체크인하러 가는 그 순간조차도 벨맨에게 대접을 받았습니다 왠만하면 실명을 거론하지 않는데 프론트에 문 이름이 기억이 안나지만 체크인이 너무 친절해서 기분이 좋았습니다 웃는 모습이 너무 선하고 밝아서 여행 첫날부터 스타트가 좋았네요 다음에 투숙을 할 경우가 생긴다면 또 다시 이용할거에요차를 좋아하는 아이들에게는 최고의 선물 카운터에서 친절하게 안내해주셔서 편하게 이용하고 왔어요 삼다정 디너 최고입니다 기회가 되면 여름에 또 오고 싶네요직원분들은 눈만 마주쳐도 도와주려고 할 정도로 엄청 친절 미니바 무료도 굿 시설은 최근 지어진거라 당연 청결 주변에 관광지도 가까운곳이 많음 제주여행숙고소 강추 내가 숙은 위치에서 찍은 야경뷰조식조타하여 일부러 저녁 많이 안 먹고 일찍 일어나서 동네 한바퀴 돌아주고 씻고 나서 층가서 먹방 했네요 신라호텔보다 퀄리티 좋음신제주에 위치한 매우 깨끗한 호텔입니다 특히 조식을 추천 드립니다   구제주에 오래된 호텔에 비할 수 없는 기분 좋은 호텔이였습니다모녀 여행 중 제주시 박을 위해 선택한 호텔입니다 우선 공항에서 가깝고 오픈한 지 얼만 안 된 것 같아 예약했습니다  호텔은 대로변에 있어 접근성이 좋고 호텔은 분거리 더군다나 공항까지 셔틀버스 운행합니다 데스크 직원분들 매우 친절하시고 주차안내분도 친절하셔서 첫 인상이 좋았습니다 룸은 트윈으로 했는데 생각보다 큰 방에 퀸 사이즈가 개여서  ㅋㅋㅋㅋ 대만족이었습니다 스타일러가 있어서 여행 중 입었던 옷 다 돌렸습니다 조식은 가짓수가 많지는 않으나 있어야 될 것은 다 있는 느낌   근데 화장실이 조명이 너무 어둡고 내부인테리어도 어두워서 ㅋㅋㅋ 그 외의 호텔 분위기와 매우 이질적입니다 이건 개인적인 취향인 것 같네요 어메니티도 구비되어 있는데 향이 독특합니다 ㅋㅋㅋ 실망한 부분은 여행 시 산 과일을 먹으려고 나이프와 포크 부탁했는데 서비스가 안되더라고요그리고 차와 커피 준비된 부분이 빈약합니다 어느 부분은 특급호텔 표방인 것 같고 어떤 부분은 모텔인 것 같은   하지만 결론적으로 가성비  훌륭 접근성 훌륭 청결도 훌륭해서 엄마와 함께 쾌적한 시간을 보냈습니다 감사합니다슈페리어킹룸에 하루 숙박한 후기입니다  제주여행의 마지막날 숙박했는데요 지은지 얼마 안 된 느낌의 새 건물 이었습니다 건물 안 인테리어는 약간 유럽 스타일이었구요 그림이나 조각들이 생각보다 많아서 놀랐어요 복도랑 객실도 그림이 전시되어 있고 전부 카펫으로 되어 있었습니다 객실은 비슷한 등급의 다른 호텔들보다 큰 편이었고 침대는 두 명이서 자기에 충분할 정도로 정말 컸습니다 비가 오는 날이라 비를 조금 맞았는데 객실 내에  스타일러가 있어서 외투를 돌렸더니 뽀송뽀송해져서 완전 만족 합니다 진짜 스타일러 강추 그리고 무료셔틀 이용했는데 공항까지 한 분 정도 걸렸습니당 셔틀은 운행하는 시간이 정해져 있는데 미리 예약 하셔야 이용 하실 수 있어요  다음에 제주도 온다면 또 이용하고 싶은 호텔이네요시티뷰이지만 오름도 볼 수 있고 무엇보다도 교통이 훌륭하였다 다만 바로 도로가인 관계로 밤에 차량 소리가 다소 신경쓰였다급하게 방문했는데 방도 깔끔하고 직원분들 모두 친절하셔서 좋았습니다  층 편의점도 있어서 좋았어요 칫솔은 챙겨야합니다 ㅎㅎ 재방문 의사 있습니다동계훈련을 신제주로 오게 되었는데  훈련 하는동안 라마다호텔에서 편하게 잘 쉬었다 갑니다  가족과 연인과 함께 와도 좋을 것 같아요  조식도 괜찮고 전체적으로 깔끔하고 편리하게 되어있네요   사진이 너무 많아 첨부하진 못했지만 엘리베이터 가는 곳 쪽에 빔으로 실시간 비행기 시간을 알려줘서 너무 편하고 신기했어요 공항까지 택시분 원미만의 택시비로 이동가능 침구 및 룸상태 최상 허나 욕실 슬리퍼없어 위생상태 염려 카펫도 염려많이 불편했음  설날 조식에 떡국이 빠져있어 당황함 간단히 떡국먹고 공항가려고 현장결재하며 들어갔는데 넘나 당황스려운ㅠ 중국인들 먹는 만두는 종류별로 있더구만요 현장결재 조식 비추 먹을게 없고 일 똑같은 메뉴라는 답변들음 첫 도착 제일 첫 번째 주차 걱정 아닐까요 친절한 할아버지들 안심시켜주시고 깔끔한 객실 컨디션 최고 적당하고 짜지 않은 조식 문어상 처리도 친절하고 깔끔하고 최고입니닺회사 출장차 다녀왔는데 시설도 너무 좋고 직원들도 너무 친절해서 서울갈때마다 이용할거 같아요 다음에 또 들릴거 같아요프론트도친절하시고 방도깔끔하고 간혹 이벤트성 업그레이드도 해주시고ㅎㅎ수영장도 및 부대시설도 최고입니다그래서 항상 제주도갈때마다 롯데만갑니다롯데시티호텔 제주는 비지니스 호텔이지만 가족여행객이 머무르기 손색이 없습니다 깨끗하고 쾌적한 객실과 넓은 욕조가 겸비 되어 있고 사계절 온수풀로 무료 이용가능한 층 야외 수영장까지 있어 중문 표선등 원거리 여행지 복귀후에도 밤 시까지 수영장 이용이 가능합니다 또한 시내에 있어 유명 식당 등을 방문하기 아주 편리합니다일단 공항에서 분 정도 가까운 위치에 있어 너무 편리했어요  주차장도 지하 층까지 공간이 넉넉해 주차도  편하게 할 수 있었습니다  체크인할때도 직원분들이 친절히 응대해줘서 기분좋게 체크인할 수 있었어요 다른 문의사항이 없으신지 물어봐주시는 친절함에 감동했습니당 객실도 역시 롯데라는 생각이 들 정도로 깔끔하고 편안했어요ㅎㅎ 풀장도 따뜻하게 이용할 수 있어서 더 좋았구요 옆에 락타룸샤워장이 마련되어있고 코인세탁실이있어서 정말 편리하게 이용했습니다  오션뷰가 멀리 보이는 바다였지만 ㅠㅠ 야경이 끝내주네요  남자친구랑 첫 여행이였는데 덕분에 편안하고 행복한 여행이였습니당 감사합니다  다음에도 제주를 온다면 꼭 방문하고 싶습니다  이번 제주도 여행때 롯데시티제주에 박 숙박했습니다 체크인때 프런트 직원이 좋은 객실로 배정해 주셔서 공항에 비행기 이착륙이 보이는 객실을 받았습니다 객실 클리닝도 깔끔하고 인테리어도 만족했습니다 호텔에 숙박하면서 근무하시는 분들 청소 아주머니들도 마주치면 밝게 인사 해주셔서 기분이 좋았습니다 다음번에도 재방문 하겠습니다코로나 사태로 조심스러운 투숙이었지만 직원분들 친절하고 투숙도 만족스러웠습니다 다만 객실내 노화된 곳이 보여서 아쉬웠습니다 벽지도 주름지고 욕실 타일도 깨져있고 가구 코너도 곳곳이 까져 있네요 주변 중국 관광객이 항상 많은 곳에 위치해 있어서인지 사람들이 늘 북적이는 감이 없지 않습니다 전반적으로 객실 관리 상태 및 청소 상태는 뛰어난 편이며 직원들의 피드백 역시 좋은편입니다   도시 내부 관광 특화 지역에 위치해 있다보니 전반적으로 근처 카페 및 식당 가기에는 편리하지만 전반적으로 호텔 및 위치가 제주만의 고유 특색이 잘 들어나지 않는 것이 아쉽습니다 하루 이틀 제주 도시를 스테이시에는 좋은 선택이 될듯합니다짧게 다녀온 제주로 선택하게된 스테이였는데 위치나 뭐나 매우 만족스럽고 신라스테이는 어딜가도 동일하게 느낌이 비슷해서 더 좋은 것 같아요 후기에서 많이 봤던 스타벅스가 없어졌다고 하셔서 가장 아쉬웠고 번화가라 시끄럽다고 하셨지만 전 못느꼈는데 ㅠㅠㅠㅠ 아침에 청소 소리가 너무 커서 방음이 너무 아쉬웠습니다 공항과 가깝고 시설또한 좋습니다  프론트 직원분 들도 넘 친절하시구요  주변에 먹거리도 많구요  단점이라면 주차장이 부족한 것 같아요  ㅠㅠ 늦게 오심 이중주차  하셔야 합니다역시 미리미리 예약을 안해두면 꼭 트윈이다 항상 혼자지만 침대는두개그래도 불편한건없다 깔끔하고 방음도 겐찮은듯 조식을 늦게일어나 놓쳤다그래도일층 에서 커피와함께빵도먹었다돈주고ㅠ중국인관광객들이 괘 있는듯공항과 가깝고 무료 셔틀 타고 편하게 호텔까지 왔습니다객실에서 눈앞에 펼쳐지는 바다가 너무 멋져서 다른 관광지에 가지 않아도 힐링이 됩니다호텔 시설도 훌륭하고 낡은 부분이 있지만 객실도 깔끔합니다조용하고 편안한 휴식이 필요했는데  테라스에서 바로 보이는 바다와 바다가 보이는 식당에서의 맛있는 조식까지 만족스런 시간이었어요 오래되었지만 깨끗한 룸도 넓은 욕실도 좋았고요 연수물인 듯 물도 부드러웠어요 어메니티는 조금 아쉬웠지만  조식과 수영장 피트니스 패키지로 이용해 잘 쉬고 왔습니다  위치도 좋았고 전망도 좋았습니다 가족이 함께이용하였는데  좁지 않고 공간이  넓어 답답하지 않았습니다 화장실공간이  넓어 좋았으나 미닫이라 조금불편했네요로비를 비롯해 모든 직원분들이 친절하고 수영장을 비롯한 각종 부대시설이 좋았다 잊고 온 물건을 사는데도 편리하고 좋았음 아침식사를 할때 바다뷰도 훌륭해서 밥맛이 더 좋음 로비 피아노 연주도 좋음아이들이 층침대를 아주 좋아했어요 방도 쾌적하고 직원분들도 친절했습니다 수영장도 편하게 이용했어요 시내에서 가까운것도 좋았습니다 로비 피아노연주도 색달랐어요 즐거운 여행했습니다룸타입은 기억이 안나요 패밀리 양실인거 같은데 거실에 침대가 있고 방은 한실인가봐요 방에 침대가 있는게 나을거 같다라는 생각을 했어요 바다 뷰라서 너무너무 예뻤어요 동문시장도 가깝고 서부두수산시장도 가까워서 새벽에 경매하는거 구경하기도 좋았어요 조식도 추가 해서 먹었는데 나쁘지는 않았어요 아침은 어차피 배부르게는 안먹으니까요현재 호텔 묵고 있다 인터넷 예약할때 뷰지정할 수 없다고 돼있었는데 와보니 지정할수 있는데 안해서 오션뷰 못준단다 ㅎ  프런터에 문의하면 된다고 하는것이 없다 에 담아온 영화 보려고 하니깐 안되어서 문의하니 시스템상 안된단다  티브이 채널도 몇개 안된다 콘센트 플러그도 몇개 안되어서 와이프 폰 충전하는 것 빼고 내것 충전했다 결정적으로 낼 아침 콜택시 불러 달라는 것도 지금 안되고 낼 아침 다시 전화하란다 처음 경험하는 호텔이다 문의하면 된다고 하는 것이 없다 방이 널찍한 거 빼고 전 혀 장점 없는 인생 최악의 호텔이다전통시장 및 시내 중심가에 가까워 주변 관광이 편리하고 바닷가에 위치하여 전망이 우수한 호텔입니다 지어진지는 된 되었지만 비교적 시설이 깨끗하고 직원들도 친절한 편임제주공항에서 가깝고 박을 하였는데 방도 깨끗하고 직원의 친절도 좋았습니다 특히 방이 따뜻하여 다음에 한번더 가볼 예정입니다여름휴가때 가족들과 함께 코너스위트룸에 묶었습니다 공항 근처이고 동문시장이 가까워서 좋았어요 오션뷰가 너무 좋았는데 유리창은 엄청 깨끗하지 않았어요 ㅜㅜ 그래도 불편함 없이 지냈습니다 코너스위트는 캠핑 패키지로 캠핑 테이블세트 작은 텐트가 있었는데요 아이들이 좋아할 것 같더라구요 저희는 식구였는데 침대 방은 에어컨이 구비되어 있었는데 작은방에는 에어컨이 없어서 거실 텐트에서 잤습니다 매트도 깔려있고 시원해서 더 좋았어요 조식도 맛있었습니다 바다뷰 자리에서 조식 드시려면 조금 일찍 가셔야 할 것 같아요 저희가 갔을 때에는 옆에 탑동공원 쪽에 프리마켓과 공연이 매일 저녁 열려서 이틀동안 재미있게 구경했어요 동문시장에 가서 식사나  쇼핑 등을 하려면 이 호텔을 이용하면 좋다 관덕정 정문 앞에 위치하며 시장은 도보로 분 소요된다 호텔 뒷편으로 해장국집을 이용할 수 있다가격대비에  엄청깨끗하고 시설도 좋아요  조용해서 좋네요 직원분도 친절하구요 공항에서도  가깝고 동문시장에서도 가까워서 좋아요시설은 좀 오래 되었지만 동문시장 서문시장 도보 분거리이고 공항에서도 가깝습니다 제주 목관아 맞은편에 위치하고 있어서 슬슬 마실삼아 다녀오심도 좋을듯해요우선 호텔 위치가 공항에서 가깝고요   방도 업그레이드 해줬습니다 별관에서 본관으로   관덕정 바로 맞은편 앞에 위치 하고요   동문시장 걸어서 갈수도있습니다  건물은 조금 그렇지만 안에는 최신시설이고 깔끔합니다  그리고 그린환경 그런것때문인거 같은데  욕실 어메니티는 없습니다 별도로 준비해야 하고요   조식도 갠찮았습니다공항에서 분정도의 대중교통으로 이동이 가능한곳으로 근처에 동문시장등 재래시장이 있어서 저렴하게 싱싱한 회를 구매할수 있네요 호텔은 심플하고 깔끔하며 직원분들은 매우 친절하지만 욕실비품은 별도로 구매해야하고 트윈침대밖에 없네요스탠다드 트윈에 묵었고 층 높이와 욕조가 있는 점이 좋았다 한라산 다녀와서 욕조에 노곤노곤 몸 담그기 좋았고 시장이나 버스 터미널과도 가깝다저렴하고 깔끔합니다 직원들도 친절하고 좋았습니다 온돌룸이 있어서 좋았습니다 공항에서 가까워서 늦은저녁 차를 렌트하고 가기에 좋았습니다깔끔하고 친절함  유일한 단점은 세면대 물이 잘 안빠지는 것과 치약 칫솔은 제공되지 않는 것임  생수 병 무료제공됨  다음에 재방문 의사있음  공항에서 환승없이 곧바로 올 수 있습니다 동광양정류장에서 내리자마자 호텔입니다 번화가인 시청 근처에 있어 편리하고 객실도 깔끔했습니다 비지니스급인데 작지만 객실에 욕조가 있어서 지친 몸을 풀어줄 수 있었습니다 운 좋게도 바다가 보이는 객실에 투숙했는데 여기서 바다가 보일 줄은 기대하고 있지 않던 터라 좋았습니다제주시청 근처에 위치해서 교통이 이용하기 쉽고 뷰가 너무 좋았다 객실도 깨끗하고 스텝들도 친절했다 다시 이용하고싶은곳이다 위치 좋고 시설 좋습니다 주차장이 조금 협소하지만 나쁘지 않구요 하지만 세면도구를 준다고 해서 칫솔을 두고갔는데 정말 세면도구만 줍니다 칫솔 치약 샀습니다 샤워할때 거품타월도 없네요 화장대가 있는 호텔 거울도 크고 호텔에서 화장대를 본 곳은 많지 않다  객실에 있는 쇼파는 최고의 조합  조식이 금액대비 아주 좋다  호텔 내 주차공간이 많지는 않으나 바로 옆 공터가 있다태풍중에 숙박하였는데 직원분들도 친절하고 룸컨디션도 깨끗하고 좋았습니다 지하주차장 공간은 개층이라서 조금 부족한듯 합니다  약간 아쉬운 점이라면 호텔 주변에 딱히 놀거리나 먹을거리는 부족한듯 합니다마지막 날 오후 한시 비행기라서 공항 근처 호텔 알아보다가 사진 보고 예약했는데 결론적으로는 가성비 짱 가격도 저렴하고 공항도 가깝고 동문시장과도 가깝고 주차도 넓고 좋아요 무엇보다 사우나가 짱부모님과 할머니를 모시고 제주도에 갔습니다  계획은 박 일로 잡아서 시간이 좀 빠듯해서 숙소를 어디로 정할지 고민을 했습니다 그런데 많은 리뷰를 보고 이 호텔로 선택하게 되었습니다 우선 공항과 가까웠고 큰 길가에 자리하고 있어 찾기 쉬웠습니다 하지만 차를 주차하려면 골목길로 돌아 들어가는 점이 조금 불편했습니다 하지만 숙소로 들어갔을 때는 생각보다 넓었고 물론 뷰는 비행기가 이륙하고 착륙하는 모습만 보이고 그냥 일반적인 시내 모습이 보입니다  그리고 대욕장과 헬스장 등의 부대시설이 만족스러웠습니다 물론 무료는 아니었지만 가격대비 나쁘지 않았습니다 저희 부모님들과 할머니들은 만족스러워했습니다 다시 제주도에 가면 숙소로 고려해볼 생각입니다이 정도면 위치도 좋고 충분히 괜찮았습니다 공항도 가깝고 주위에 편의점 식당 등도 엄청 많습니다 다음에도 기회가 되면 다시 선택할 수 있을 정도위치는 공항에서 렌터카로 분정도 거리여서 가까웠다 주차장은 건물 입구 반대쪽에 있고 차량은 주차위치가 한정되어 있다 단체손님이 많이 이용하는 것 같아 체크인 시 혼잡함이 있었다층에서 인이 묵었는데  더블침대 개였고 침대를 제외한 여유 공간은 많지 않다 전망은 길 반대편에 다른 호텔 건물이 있어서 한라산이 보이지는 않는다 도심임에도 불구하고 방에서 소음은 거의 없었다그리고 주변에 식당이 많은 점은 괜찮았다세명이서 묵을수 있는 트리플룸이였다 도착할때 로비에 중국인 완전 많아서 단점이다 숙박전날 저녁에 예약했는데 방이 남아서 예약할수 있었다솔직히 잘 모르겠다 지은지 별로 안된 듯해서 깨끗해 보이긴 한데 투숙 자체를 계획을 가지고 한 게 아니라 아는 지인이 해준거라 그것도 바로 당일날 어떠한 정보도 없이 이틀을 잔 거라 모르겠다 조식은안했다 아이랑 둘이만 간 거라 아침엔 그냥 햇반과 지인이 싸준 장조림을 아이에게 줬다 근데 전자 레인지가 식당에 가야만 있다 직원에게 부탁해서 데워달라고 해야함 뭐 그럴수도 주변은 별로다 특히 주차는 헬이다 어떻게 이렇게 지하주차장을 만들었나 싶은 적당한 중급 가격인지라 적당히 중국인도 많다 또 세미나나 이런 걸로 온 한국인도 말 그대로 잠만 잤다 그래도 근처가 나름 제주의 번화가라 유명 제과점이 있어 편했다 공항도 가깝고 버스로 정거장인가 그렇단다 물론 택시를 탔지만비지니스 출장차 현재 박 투숙중입니다 모기가 너무나도많습니다 제가잡은것만해도 마리가량 방안에 에프킬라가 비치되어있어 계속뿌리고 잡고하는데에도 방안 찬장 화장실 천장 곳곳에 모기가 너무나도 많습니다 호텔측은 벌레 관리는 별도로 신경쓰지 않는지요제주 공항에서 기본 요금 거리에 있고 큰 도로가에 있어서 쉽게 찾을 수 있는 호텔이다 주차장은 호텔 앞 큰 도로를 건너편에 있는데 체크인 할 때 차 번호를 불러주면 무료 주차할 수 있다 객실은 아주 깔끔하게 청소해놓았다 조식은 샐러드와 간단한 음식들로 구성되어있는데 전복죽은 정말 맛있었다직원분들 우선 정말 친절하세요저번에 머물렀을 때 핸드폰 충전기도 안가져 갔는데 빌려주시고 빠른 대응도 훌륭하구요 제주 올 일이 많아 월부터 지금까지 번째 방문입니다부모님도 너무 좋아하세요 강추합니다비지니스 출장 공항에서 가깝지만 교통은 다소불편 피트니스센터는 공사중 숙면할수있는 편안한 침대 다소좁은 감은 있지만 가성비 갑 조식도 무난합니다친절한 직원분들 삶에서 노력과 지불한 비용보다 더 좋은 것을 얻기는 힘들지만 충분히 그보다 좋다고 느낄 수 있었던 몇 안되는 경험   스위트룸에서 경험한 깨끗하고 넓은 공간 로맨틱한 분위기의 독립된 북유럽풍 욕조와 욕실룸 통유리로 커튼이 바깥에서 여닫게 되있어 묘한 느낌의 제일 좋았던 공간 또 다른 공간에 설치된 모던 유럽풍의 세면대와 입식 샤워룸  깔끔한 비데가 있는 그리고 넓은 공간을 효율적으로 나누어 편안한 쇼파에서도 안락하고 폭 잠기는 따뜻한 침대에서 볼 수 있는 커다란 인치 삼성     다음날 눈내린 제주를 만끽할 수 있도록 편안함을 제공한 호텔  다음 제주 여정에도 꼭 들릴 예정입니다일단 시설이 굉장히 깨끗하구 직원분들 모두가 다 친절하세요 조식도 저렴한데 퀄리티가 좋더라구요 저희는 어린아가 둘이랑 와서 바닥이 카펫인게 좀 불편했지만 비지니스목적이나 커플끼리는 딱입니다제주공항에서 쭉 직진 운전만 하다보면 나오는 숙소입니다 주차장은 협소하지만 인근 공영주차장 같은 곳에 주차하면 되니 괜찮습니다 소음은 잘 잡아줍니다 옆에 애기가 있는 투숙객이 있었는데 소음이 들리지 않아서 좋았어요 무선인터넷도 되구요 근처에 편의점도 있어서 필요한 것이 있으면 추가로 구매하기도 좋습니다제주도가족여행을갑자기떠나게되서전날 항공예약하고 급숙소정하다가 첫날은 저녁비행기시도착이라공항가까운곳자리있는데우연히찾다가급결제했는데알고보니 우리가족이자기좁은방을예약해버린상황이었는데도우리상황을아시고룸도업시켜주시고트원침대도붙여서같이잘수있게도와주시고생각지도않게너무고맙고감사한호텔 직원들의세심함이감사함 호텔도화장실도좋고생각한것보다맘에들고편했음 아침제공시에도 어린애들이있는데잘챙겨주시고 괜찮았음 시작이좋아서 계속좋은추억만들고왔습니다가는비행기가 시비행기여서 잠만자려고 묵었는데 생각보다 괜찮았구요 공항하고 엄청가까워서 좋습니다 그리고 이벤트해서 맥주잔 무료쿠폰도받고 네일도있더군요다좋았는데 화장실이 너무추워서 혼났습니다ㅠㅠ그래도괜찮았습니다공항근처에 있어서 비행기 시간과 맞추기 정말 편리했고 성급 호텔이었으나 직원분들의 친절함과 호텔의 전체적인 분위기는 성급 못지않게 아름다웠습니다 객실의 크기와 룸서비스  직원분들의 서비스 정신 모두 만족스러우며 좋은 추억을 남기고 와서 즐거웠습니다공항과 가까워 비행기 시간에 맞추어 이동하기가 아주 편했다 시설도 성 이라는 평가가 아깝지 않다는 생각을 했다 아쉬운점은 호텔에 편의 시설이 많이 부족하다는 점이었다 요즘호텔은 숙박뿐만아니라  여러 편의 시설을 가지고 있는데 이 호텔은 그런 시설이 부족했다 그래도 직언 분들이 많이 친절하였기에 개인적으로는 좋았다스탠다드 패밀리 더블룸 예약했는데 도착해서 보니 변기에 이물질이 그대로 있어서 얘기하니 직원이 수건으로 닦고가서 환불했습니다월일 오션뷰 방향의 패밀리트윈을 이용함저렴한 숙박료와 공항에서 멀지않은 거리에 있는 숙소로 아담한 공간이나 모든것이 깨끗하고 커튼만 열면 푸른바다가 바로 눈앞에 펼치며 창을 열면 파도소리가 철썩거리며 다가오는 공간이었습니다  아침 해뜨는 풍경을 밖을 나가지 않고도 방안에서 볼수 있으며 바로 옆의 많은 생선회 식당들은 바다의 추억을 기억하기에 너무 좋은 장소였습니다생각보다 괜찮습니다 놀이공원 때문에 걱정하고 갔는데 늦게까지 시끄럽지는 않아요 디너 메뉴가 저렴한 가격에 맛도 좋고 양도 많습니다 흑돼지 전골이나 매운탕 밖에서 드시지 마시고 여기서 드세요 다만 조식은 형편없습니다 제주 시내 좋은 브런치 카페 많으니 거기서 드세요가성비가 정말 좋은 호텔이에요 위치도 좋고 시설도 좋고 친절하구요 호텔 뒤쪽으로가면 맛집들이 쭈욱 있어 식사하기에도 좋고 앞으론 바다가 있어 뷰도 참 좋아요 수영장도 작지만 이정도면 만족스럽고 객실도 깔끔하니 좋습니다깔끔한 객실 친절한직원 좋은 위치 등 가성비 갑인 호텔이였다 주차장 이 잘되어있어 렌트하기 좋았으며호텔 뒤쪽으로 는 제주 올드타운 지역이라 먹거리 쇼핑 등이 용이하며  안에 있는 방파제 의 횟집타운 은 싱싱한 해산물이 가득하며  제주에서 가장규모가 큰 재래시장 동문시장이 가까이에 있다 조용하고 깔끔한 바다전망 호텔입니다 가격대비 매우 만족스러운 곳입니다  인근 회센터에서 회떠다가 객실에서 바다 보면서 먹는 맛이 좋았습니다 공항이랑도 가깝습니다 재방문의사 있습니다제주시 인근에 위치하고 있으나 오션뷰 룸인 경우 탁 트인 전망을 즐길 수 있습니다 아침 조식도 꼭 필요한 메뉴로 어르신들도 좋아할 수 있게 구성되어 있습니다공항에서 멀지 않으면서 조용한 곳에 머무르고 싶으시다면 추천드려요 시설도 깨끗하고 뷰도 아주 좋았어요 가격대비 훌륭합니다깨끗하고 좋았음 오션뷰가 좋음  화장실도 깨끗  생각보다 조식이 맛있음 주차도 밤에자리없으면 직원이 대신해주고  편했음  단점은  수영장이 작고  시 까지만 수영할 수있어서  아쉬움 체크인도 편리하고 무엇보다 방이 엄청 커서 침대가 개라서 인 가족이 묵기 충분했습니다 야외 수영장도 조그맣게 있는데 물은 소독약을 덜 써서 그런건지 조금 탁하지만 아이들하고 놀기엔 충분했스비다휴가와 힐링을 위해 홀로 제주도 구경도 하고 한라산 등정후 제주칼호텔에 하루 숙박을 하였습니다 여행 마지막 날이어서 호텔에서 푹쉬면서 수영장 헬스장도 이용할 계획을 갖고 서울에서 부터 준비해서 갔습니다 아침조식을 먹고 혹시 필요한 것이 있는가 확인차 구내전화를 통해 휘트니스에 전화 하였습니다 헬스장에 운동복이 혹시 있는지 수영모가 필요한지 등이었습니다 그런데 제가 수영모를 두고오는 바람에 다시전화를 하여 혹시 수영모 대여나 구매가 가능한지를 물었습니다 그러자 여직원 분이 귀찮다는듯이 무시하는 말투로 제가 물어보지도 않았는데 여기는 원래 회원제로 운영되는 곳입니다 일반인은 입장이 불가합니다 그리고 그분들회원분들은 모두다 수영모를 갖고오셔서 없다고 하였습니다 투숙객은 이용가능하다고 해놓고는 일반인은 원래 입장이 불가능하는데 너네투숙객에게 선심으로 서비스하는거라는 말투로 할필요도 없는 말을 하시니 그순간 무안해지고 무시당한 기분에 바로 전화를 끊어버렸네요 원래 여기 오기전에 회원제인거 알고있었습니다 하지만 투숙객이니 추가 비용내고 이용할수있어서 이용하려고 했던것 뿐입니다 근데 대뜸 물어보지도 않은 말을 하면서 일반인 투숙객 무시를 하시니  매우 화가났습니다 그래서 바로 칼호텔 고객의 소리에도 컴플레인을 올리고 더이상 있고 싶지않아서 시경에 바로 체크 아웃해버렸네요 서울에 신라호텔 하야트 메리어트 이런데등 특급호텔 여럿 이용해 보았지만 회원제여도 일반 투숙객 무시를 하지 않습니다 낡은 칼호텔 성급이어도 가격이 싸길래 이용해 봤더니 직원 수준이 딱 가격 수준이군요 매우 실망이고 하루종일준 성급 호텔에 서비스나 리셉션 컨시어지 태도 룸 컨디션 정말 최악이었습니다  체크인  고객이 체크인 시 리셉션에서 알려줄 것이 룸 안에 어느 것이 무료이고 유료인지 밖에 없나요 사고 칠 학생 걱정하는 선생님 같더군요 헬스장이 어딘지 사우나 이용을 어떻게 할 수 있는 지 이런 것들은 기본적으로 알려주셔야 살 사항 아닌가요 고객이 무슨 거지입니까    룸    라니 리빙룸이 없는 방도  라고 하나요 트윈룸 두 개를 이어 붙인 방을 무려   라고 부르다니 그리고 게재하신 사진과 실물방 차이 실화인가요 파우더룸 벽의 곰팡이 자국 작동하지 않는 골드스타 냉장고 이런 방을 무려  로 명명하여 예약을 받다니요 이런 컨디션이었으면 절대 예약 안했을겁니다   전반적인 직원 태도  조식 레스토랑 직원들은 왜 그렇게 자꾸 정색을 합니까 커피 어디서 먹을 수 있는 지 물어봤는데 정색은 왜 합니까 그리고 물을 바닥에 살짝 쏟아 닦아주시는 서버 분 휙 하고 데리고 가신 다른 서버분 뭐하는 짓입니까 나머지 물기는 손님이 직접 닦아야 해요 체계도 룰도 없는 그야말로 엉망인 손님 응대 성급이요 요즘엔 소규모 호텔에서도 이런 태도는 안 보입니다   다시 갈 일 없지만 예약하시는 분들 저처럼 속는 분 없으시기를 바라는 마음에서 적어 봤습니다 위치가 좋은 것도 아니고 가격이 매리트 있는 것도 아니고 이름과 성급에 걸맞는 서비스 도 없습니다 여행 출장 수백번 다녔지만 이런 기본도 안공항이랑 거리는 괜찮았고 객실도 생각보다 넓어서 좋았습니다  주위도 조용하고 마지막날 묵었던 방이라그냥 가벼운 마음으로 보냈는데 조식은 기대에는 미치지 못했고 실내수영장은 가볍게 수영 할 정도수온이 따뜻한건 좋았습니다 아무튼 마음비우고 하루 묵어가기엔 괜찮은거 같아요스위트에 묵었는데 비수기라 상대적으로 가격은 저렴하나 객실이 약간은 노후되었음 조식은 괜찮았고 위치는 공항에서 아주 멀리 떨어져 있지는 않습니다 정가로는 무리나 할인행사 정도면 가능 참고로 이누조식포함해서 마일리지로 다녀옴남는 대한항공 마일리지로 스위트룸에서 하룻밤 잤는데 확실이 연식이 있어서 요즘 호텔에 비해 시설은 부족한 느낌임 스위트룸 인데도 요즘 고급 호텔 일반 룸보다 많이 좋다고는 못할거같음 하지만 성급 호텔이라 그런지 서비스랑 음식은 확실히 좋았음 원가로는 조금 비싸고 할인이나 특가 떴을때면 추천함오션뷰로 층에 숙박했습니다 함덕서우해수욕장이 한눈에 들어와서 이쁩니다 하지만 창문이 더러워 창문열지않는이상 좋은 뷰는 힘듭니다 그리고 겨울철에는 아무래도 통유리에기때문에 춥습니다 온도를 올리기 위해 난방기 작동시 온풍방식이라 건조합니다 그리고 대략 도정도 차이납니다 숙소 화장실은 깔끔합니다 하지만 샤워부스는 다소 작습니다 방음은 잘 안됩니다 옆방 티비소리가 엄청 잘 들립니다 빠른 취침을 위해 누웠지만 옆방 티비소리에 티비가 끝난 후 잠들 수 있었습니다초등학생 아이와 박 일 머물렀습니다 청소상태 양호하고요 위치도 좋아서 전반적으로 만족했어요 다만 조식은 가짓수가 너무 적어서 아쉬웠습니다 첫날 일찍 도착해서 근처에 있는 한식당에서 아침을 사먹었는데 가격에 비해 맛도 없고 양도 적더라고요  호텔 조식이 별로이긴 하지만 근처 한식당에서 아침 먹는 것보다는 차라리 호텔 조식이 괜찮았어요시설 깔끔하고 무엇보다 바다 뷰가 정말 최고예요 이 호텔에 묵는다면 반드시 꼭 바다가 보이는 객실로 묵으세요 다만 방은은 조금 안되는 편이라 옆방 쿵쿵 거리는 소리나 밖에 문 쾅 닫으면 좀 크게 들려요 층에 씨유 편의점 있고 주변에 델문도 카페나 맛집 많아서 좋아요함덕해수욕장 바로 앞에 위치하여 해수욕을 즐기기에 최적의 위치입니다 객실은 디럭스 시티뷰 오션뷰 디럭스 다 묵어봤는데 시티뷰는 발코니가 있어서 좋았고 오션뷰는 함덕의 예쁜 바다가 보여서 좋았습니다 룸은 큰 편이 아니지만 친절한 직원과 최적의 위치 깨끗한 객실 좋은 전망 여러모로 추천합니다층 오션뷰 트윈룸입니다 선착순 업그레이드 해서 오션뷰 받았구요  객실상태어메니티청결도 모두 만족했어요 무엇보다 뷰가 예술 ㅎㅎ  직원들도 친절하게 응대해서 기분 좋았습니다 호텔 로비에 샤워시설 되어있어 물놀이후 모래 씻고 들어갈수 있구요  층에 부대시설로 카페레스토랑 음식 다 괜찮고 편의점 있어서 편했어요  가족친구커플여행 모두 추천합니다  피크시즌 살짝 비켜간 월 첫째주 였는데 호텔주변 조용하고 날씨도 적단히 선선하고 물놀이하기에 수온도 적당했어요  좋은 위치친절한 직원 근래 리뷰보고 걱정 했는데 괜한 걱정이였다 ㅎ 건물 자체는 오래 된 느낌이나 청소 상태는 좋다 침대 상태도 좋았다 주차편리 하며 걸어 갈수 있는 맛집 많아  좋았다   코르나사태비수기지만 가성비 짱년에 갔을때 괜찮아서 다시 방문했지만 객실상태가 좋지 않았아요 커튼에 곰팡이가 펴서 교체를 요청했고 방을 바꿔주겠다고 했지만 우리가 원하는 뷰가 아니어서 사양했던 적이 있습니다호텔 주체가 개로 나뉨 에벤에셀인가 교회에서 절반 정도를 인수한 듯 보임 방마다 더 아트스테이인지 에벤에셀인지 이름이 적혀 있음 우리는 더아트스테이 것으로 추정되는 방에 머무름 꾸준히 잘 이용했던 곳이었는데 최악 시설에 비해 직원들이 너무나 프로페셔널해 보였음 아까운 인력이었음 태어나서 아무리 저렴한 호텔이어도 그런 매트 처음 봄 매트리스가 그냥 나무판 같았음 허리 아파 죽는 줄 다시는 안감 아무리 싸도 안감객실은 깔끔하고 무난해요 함덕해변이 워낙예뻐서 가시면 좋으실듯 함덕쪽에 호텔이 많은데 가격대비 저렴해서 이용하기 좋아요제주도를 처음 방문하여 다른 곳과 비교는 어렵지만 주말임을 고려하면 한국의 다른 지역에 비해 가성비가 나쁘지 않다 바다 바로 옆에 붙어있고 층에는 시간 운영하는 편의점이 있으면 주변에 유명한 맛집이 있는지는 모르겠으나 식사를 이용할 수 있는 곳들이 많다올 봄에 벚꽃기간에 방문 협재를 바라보는 바다뷰가 좋고 대로변이라 렌트해서 가기도 좋음 조식은 이용안했는데 근처 옹포밥집까지 아침 산책겸 걸어가서 하고옴 루프탑 수영장과 바가 있었는데 내가 갔을때는 밤에 비바람이 너무 불어서 이용못하고옴 ㅠㅠ  단점으로는 모 유명 여행블로거 리뷰처럼 화장실 물떄가 그거빼곤 다 만족월에 제주도를 다녀온 탓에 온수풀 수영장을 위주로 찾았음 제주 온수풀이 가능한 호텔은 다들 너무 비싸서 고민중에 가성비 좋은 아길라 호텔을 찾았는데 완전 온수라기 보다는 미온수에 가까워서 어린 아이들에게는 다소 추울수 있음 하지만 미온수풀 바로 옆에 자쿠지를 운영하고 있어서 잠깐씩 들어갔다 나오면서 충분히 즐길 수 있는 수준의 미온수였고 수영장 자체가 인피니트수영장으로 환상적인 바다를 즐길 수 있어 수영장 하나만으로도 강력히 추천함 그 외 스페  제주 식당에서의 인생 치킨과 빠에야까지 즐길 수 있음협재 바다를 바라보는 뷰가 매우 좋음  스파룸이었고 층이었지만 그래도 뷰는 좋았음호텔 구조를 봐서는 스파룸은 모두 층 인듯 루프탑 수영장이 있으므로 더 높은 곳에서도 바라볼수있음  루프탑 이용 시간은 까지라고 했던거 같음끝나는 시간은 확실한대 시작시간이 기억이 잘 안나네요  수영장과 자쿠지는 이용을 하지 않아서 맥주 무료 이용권을 줘서 저녁에 테이블에서 맥주를 마셨는대 시원한 바람을 느낄 수 있음 밤바다 바라보며 먹으니 좋음 룸에 기본적인 어메니티는 다 있고 연박을 하니 부족한 것은 계속 채워줌 방청소는 시 사이에 이루어지는 거 같고 시트는 교체 없이 정리만 이루어짐  삼다수 병과 네스프레소 캡슐 개가 계속 채워짐  스파 욕조는 생각보다 커서 여자 분들은 누워 있기에는 힘들듯그래도 피로가 풀리고 좋음  스페인제주가 영업 종료해서 룸서비스는 이용이 불가능하고 조식은 가능함 조식은 어떤지 이용을 안해서 모르겠음  호텔 바로 앞에 과 협재 버거가 있고 호텔 오른쪽에 횟집과 마담나탈리가 있음 마담 나탈리에서 음악이 계속 나오는대 호텔에서도 들림 전체적으로 규모는 크지 않지만 깔끔한 호텔  필터링  해변가  실외수영장  조식 으로 검색해서 나온 호텔 중 전 객실 협재해변 뷰에 옥상에 수영장이 있으며 룸서비스가 가능한 아길라로 선택하였고 결과는 대만족  대형호텔에 비해 가격은 저렴하지만 방은 크고 객실이 적은 만큼 수영장이나 룸서비스 등을 누리는데 사람이 많아 번잡하지 않았으며 주차장도 바로 앞에 있고 미니바에 개수대가 있어 편리하였음 그리고 바로 옆과 분거리 내에 유명 식당들이 있음  모든것이 만족스러움  같은돈으로 대형호텔가면 룸은 너무 작고 수영장 식당 주차장 사람많고 힘듦  여기 룸서비스 음식도 저렴한데 맛도 양도 괜찮음 조식은 선택 안해서 모르지만 룸서비스맛으로 볼 때 괜찮을 듯호텔이 모든 곳에서 떨어져 있다는 것을 읽을 때 믿으십시오 호텔 인근에는 아침 시  분 이전에는 아무 것도 열리지 않습니다 룸 서비스 음식은 괜찮지 만 매일 매우 제한된 선택이 아닙니다 시설은 더 좋은 날을 보내고 빌린 시간에 살고 있습니다 객실은 근사하며 바다의 경치는 이웃 섬의 환상적인 일몰과 함께 아름답습니다 는 실제보다 훨씬 더 큰 리조트임을 홍보하는 가격으로 시설과 일맥 상통합니다이 호텔은 화산 바위 해변을 따라 자리 잡은 정상적인 호텔입니다 사용 된 그림은 지금 사라진 날들의 사진입니다제주에서 여행하는 기점으로 버스터미널이 옆에 있어서 이동하기에 아주 좋은 위치이며 스템들의 적극적인 응대와 친절은 편안함을 제공한다 시설 또한 청결하게 관리되어 편안한 잠자리와 휴계 공간도 제공되고 있었다 기타 편의 시설도 다양하게 부족함이 없이 제공되고 있었다 제주에서는 이곳을 알게된 후로는 이곳만 이용하고 있다다소 찾기 어려운 위치에 있고 들어가는 길이 밤에는 상당히 어두웠지만 짧은 거리라서 다행이었습니다 리셉션에서 근무하는 직원은 중국어나 영어를 할 줄 알아서 많은 도움이 되었고 필요한 것이 있으면 해결해주었습니다 리셉션 직원이 택시를 불러서 목적지까지 갈 수 있었습니다 밤의 해피 아워에는 무료 음료가 나오는데 맥주 사이다 과일 주스가 포함됩니다 빵 달걀 치즈가 아침 식사로 나왔고 직접 준비하는 것도 재미있었습니다방이 깨끗하고 실내 히터도 잘 작동했습니다 수건은 다소 작습니다 엘리베이터가 없어서 층까지 짐을 들고 가야 했습니다 전체적으로는 머물기 좋습니다 제주도가 처음이라면 예하 버스 투어를 강력히 추천합니다제주도에 머물면서 지내기 좋은 호스텔입니다 편리한 위치에 있고 쉽게 대중교통을 타고 어디든 갈 수 있습니다 공항까지 잠깐 택시를 타면 됩니다원 미만   직원들은 매우 친절하고 질문에 잘 답해주었습니다 객실은 매우 좋고 깨끗했습니다 손님에게 예하 투어를 할인해주는 상품이 있어서 번을 다녀왔는데 모두 좋았습니다 제주도에 다시 온다면 이 호스텔에 다시 묵을 것입니다제주도 혼자 여행중에 마지막 날에 들렸는데  접근성에서는 좋았는데 과거 경험한 게스트하우스가 너무 좋았던건지  비교를 하기엔 너무 미안하네요 그냥 딱 잠만자고 오기 좋은 저렴한 곳입니다 오래전에 경험 했던 일이라 지금은 많이 발전 했을거라 예상해봅니다음좋은점은 공항 가까이 있고 저렴하다는것 친구랑 인실 썼는데 방은 뭐 싼곳이니 그러려니했어요 아침은 토스터에 잼 줍니다 화장실 개 욕실겸 화장실 개 있는데 꽤 기다려서 씻음 시 이후에는 전체소등하는데 작은불키고 조용조용 얘기하는건 괜찮음  방키를 따로 주고여자숙소랑 남자숙소 입구가 달라서 안전은 괜찮을듯공항과 정말 가까워요 차로 분 이내 도착한 것 같아요 전반적인 서비스는 나쁘지 않았어요 겨울에 가서 그런지 루프탑은 추웠고 수영장은 이용할 수 없었어요 그리고 루프탑을 이용하려면 추가 금액이 붙어요 저녁 뷔페와 아침 조식도 맛있었지만 조식 이용하는 식당이 넓지는 않았어요  그래도 방에서 보이는 오션뷰가 꽤 괜찮았답니다  다음에도 이용할 것 같아요전반적으로 여느 호텔과 다름없이 똑같음 아침에 바다가 보이는 뷰가 예술 공항에서도 멀지않고 호텔 앞 롯데리아 양 옆으로 편의점이 있으며 야외주차장에 넉넉함까지 다만 제가 묵은 방만 그런건지 샤워기 고정 안되고 계속 흘러내림기본 적인게무궁화 개 호텔 가성비가 좋음 욕실 및 실내공간 넓음 주차장은 야외에 넓은 편 여름에는 루프탑수영장 이용 가능하다고 함 층에 뷔페식당있음루프탑 바와 수영장이 있어서 사용가능하고 깨끗하고 친절하셔서 좋은곳이었습니다 다만 조명이 전체적으로 어두컴컴해서 눈이 좀 아프네요 ㅠ제주 시내에 볼 일이 있어 숙박호텔을 찾는데 여름 휴가철 성수기라 가격도 극성수기라는 이름으로 사악한 수준인 상황에서 선택한 호텔이었습니다 호텔 할인 사이트 보다 직접 호텔 홈페이지에서 예약하는게 더 저렴하였고 시내와 공항에서 멀지 않아 일 마치고 바로 움직일 수 있는 좋은 위치여서 선택했습니다  가격에 비해 무척 좋은 시설이었고 주변에 주차공간도 여유가 있어 좋았으며 전기차를 렌트하였는데 길 건너 롯데리아에 급속 충전소가 있어서 더 좋았습니다 다른 분들 후기처럼 주변에 별 것 없어요 편의점 두 곳과 조금 걸어가면 있는 카페 뿐 호텔 뒤로는 유치원과 주택가 뿐인 그런 곳이네요 차량을 가지고 있는 분이 선택하는게 좋을 것 같습니다  직원들 친절하고 시설도 깔끔하고 다 좋아요 부정적인 점이라면 객실 내부에 전기 플러그가 너무 적어요 책상 위에 있는 것 두 개 욕실에 전기면도기용 한 개가 전부입니다 시내뷰라고 하는데 층이었습니다 창문 밖으로 주택가 내려다 보입니다 너무 가까이 붙은 집은 사람끼리 서로 눈 맞을 수도 있는 가까운 거리에요 차량 가지고 이동 하시거나 공항시내가까우면서 가성비 좋은 호텔을 찾으신다면 추천할 수 있을 것 같아요용두엄에서 가까운 곳에 위치하고 있고 엘배 없습니다  주차공간 약간 있구요 룸에는 사물함과 침대만 있고 파우더룸 화장살 욕실은 분리되어 복도끝에 있습니다 층에 공용 휴게공간이 하나있고 층에 음삭을 넉을수 있는 공간이 있습니다 침구는 깨끗한 편이나 침댜에 커튼이 없어 옆사람을 마주봐야하는 불편함이 있었어요 조식은 에그 샌드위치를 직접 만들어 먹을수 있는 구조였고 맛은 괜찮았고 커피와 쥬스가 제공됩니다  용두암에서 가까운 숙소 날씨가 맑으면 한라산을 볼 수 있다 저녁밤에 공항에 내린다면 종달리보다 가까워서 대안이 될 수 있을 듯 무난하고 깨끗한 숙소공항과도 접근성이 좋고 시설도 깨끗해요 조용하기도 하구요 인실이라서 상대적으로 더 좋더라구요 추천드려요월에 그곳에서 박을 보낼 기회가 있었는데 방금 도착했거나 곧 떠나고 싶거나 제주 시내에 머물고 싶다면 매우 편리한 곳입니다 제조 국제 공항에서 택시로 분밖에 안 걸렸습니다건물이 독특합니다 멋진 테라스가 있어서 아름다운 전망을 볼 수 있고 바다와도 매우 가깝습니다 언덕을 분 정도 내려가면 도착할 겁니다아침 식사는 간단하지만 맛이 좋았습니다 다만 객실에 창문이 적어서 안타까웠습니다 마치 요새 같은 느낌입니다 원래 그런 의도로 꾸몄을 수도 있습니다 건물 위에 휴식 공간이 있고 인터넷도 굉장히 빨랐으며 전반적으로 매우 깨끗했습니다또한 주인인 피터도 매우 친절하고 많이 도와 주었습니다 정말 집과 같은 편안함을 느끼실 수 있습니다여기에 머무는 동안 정말 즐거웠습니다꼭 다시 오고 싶습니다미르 게스트하우스는 특징이 있는 독특한 건물로 독특한 건축양식과 주인인 피터의 성격이 그대로 드러납니다 건물 디자인은 제주도를 상징하는 근처 용두암과 화강암에 영감을 받았습니다 저는 중앙 뜰의 해먹에 누워 네 개의 검은 벽으로 둘러싸인 하늘을 올려다 보는 것을 즐겼습니다 아침 식사에 나오는 에그 샌드위치가 좋았습니다 또한 피터와 이야기를 나누는 것도 즐거웠는데 그는 매우 친절하게 환대해주었고 영어를 잘했습니다방은 다소 작은 편이었습니다 그리고 시 전에 샤워를 마치고 불을 끄려고 노력해야 했습니다완전깔끔하고좋았어요ㅠㅠ 만족해요 주차장도 주차타워 넉넉하고 바로 앞 거리가 중심부라 어디든갈수있어 편했어요 앞으로도 애용할것같아요 요즘같은 코로나같은 시국에 셀프체크인이라는점도 아주 만족했습니다일단 위치가 정말 좋았던 곳이었어요 주변에 먹을 곳도 많고 공항근처여서 그다음 아침 비행기였는데 분도 안걸려서 택시로 갔어요 전체적으로 깔끔하고 편안했어요 객실내에 청소기도 있었고 세탁기도 있었고 식기구도 잘 마련되어있어서 이용하면서 풀편한 점이 하나도 없었어요 ㅠㅠ 넘 좋았어요공항이랑도 가깝고 번화가라 교통먹거리 문제 없었구요무엇보다 깨끗해서 너무 좋았어용 저희는 단기였지만 장기나 한달살기하면 참 좋을것같아요 깔끔합니다 생긴지 얼마 되지 않아서 그런건지 엄청 깔끔하고 좋습니다  가깝습니다 공항과 약 도 채 떨어지지 않은 거리 가까워서 아침 비행기를 타고 가야 하는 상황이었지만 부담이 되지 않았습니다  주차걱정이 없었습니다 건물 내에 기계식 주차장도 있지만 바로 앞에 공영주차장도 있어서 주차를 하는데 엄청 편했습니다   시내에 위치해 있어 편의점이나 음식점을 이용하는데 아주 편리했습니다   객실 내에 있을 건 모두 있어서 이곳에서 묵는 동안 불편함이 없었습니다   개인적으로 이곳 옥상 너무 좋습니다 앞으로 바다가 뒤로는 산이 보이는 이 전망은 정말 여름이었으면 한참을 머물었다가 내려오고 싶다는 생각이 절로 드는 곳이었습니다ㅎㅎ 하루 잠시 머물다 갔지만 오래계실 분들에게 최적화 되있고 지은지 얼마 안된듯 깔끔햇어용 ㅎㅎ 청소기며 세탁기며 다 구비되 있음저층인데다 공조기 벽이 가로 막구 있어서 창밖엔 공조기 벽만 보였고  화장실은 페인트가 군데군데 벗겨서 있었음  더럽지는 않았으나  세면대엔 곰팡이가 있어서  전체적으로 곰팡이 냄새가 심했음 공항이 가깝고 근처 이마트나  마트로  식당가가 가까워 입지적인 면은 좋았음 로비는 좋은데 방은  좀 별로 였음 트윈룸은 더블  싱글인데 더블에선 둘이 잘수 없음 퀸도 아니고 더블 사이즈 임   더블룸은 어떤지 침대가 어떨지모르겠음  중국인들 정말 많음  로비가 중국사람들이 좋아할 취향인듯  카지노 때문인지도 공항과 매우가깝고 시설또한 건너편 라마다에 비해도 나쁜게없었습니다 호텔은 조금작지만 가격대비 좋았습니다 단 물수압이 조금 약한듯합니다 공항이랑 가깝고 제주도에 있다는 기분을 즐기고 싶어 그나마 바다랑 가까운 숙소를 찾다가 묵었습니다 좀 오래된거 같으나  웅장하고 방은 깔끔하고 좋았습니다 다음에도 묵을 의사가 있어요더블룸인데 트윈침대를 개 붙여준 것이 오히려 다 넓고 좋았다 시설은 옛날 호텔같지만 깔끔해서 괜찮았는데 날이 후리니 화장실에서 냄새가 좀 심하게 올라와서 그건 별로였다 카지노는 외국인 전용이라 어차피 해당사항 없음 밤늦게 도착해서 공항근처 숙소를 찾아 예약했습니다  저는 프론트도 친절했고  가격대비 넓은 룸 침대도 편안했어요 룸이 조금 차긴했는데 침구가 따듯해서 저는 딱 적당했습니다 오션뷰도 바다 가 보여 앞에 잘보여서 이용하기 좋아보였구요  바로앞에이마트있고 옆에 편의점있어서 맥주사기 좋습니다 주차 또한 편해서 저는 매우 만족입니다가성비 좋아요패키지로묶으니까 정말 싸더라구요 박밖에없엇지만 다음엔 좀 길게 오게요 오션뷰도 짱짱이었습니다 ㅎㅎ 커플끼리오기 최고인듯패키지로 묶으니까 엄청 저렴해지더라구요 박일동안 힐링하고 가는기분이라서 너무 행복했었네요 제주도최애 호텔입니다전망이 최고최고 ㅎㅎ골프치는걸 좋아해서 자주옵니다 오션뷰가 최고에요 정말 직원분들도 친절하시고 내부도 깔끔해서 너무 맘에 들었어요 커플끼리 여행오면 좋을곳이에요골프패키지로 오니 저렴하게 즐길수있었어요 방이랑 같이예약하니까 되게 저렴저렴 오션뷰도 최고인듯 제주도 올때마다 예약하게되는 제 최애 숙소입니당 ㅋㅋㅋ커플끼리 놀러가기 좋은곳인것같아요오션뷰도 최고였습니당 골프치고 놀기에 딱 좋은곳인것같아요 ㅎㅎ제주도오면 다음에또 여기 숙박할게요이 작은 호텔은 멋진 디자인에 깊은 인상을 주었으며 어떤면에서는 목표를 달성했습니다 호텔은 일종의 힙 스터 모던 한 분위기를 자아냅니다 프론트 오피스 직원은 정중하고 도움이되며 충분한 주차 공간이 있으며 대리 주차 서비스 이용 가능 옥상 바는 휴식을 취하기에 좋은 곳입니다 위치는 환상적이며 상점과 식당 공항과도 가깝습니다 그러나 문제는 방에 있으며 디자이너는 현대주의 테마를 너무 멀리 가져 갔을 것입니다 가장 눈에 띄는 문제는 샤워 커튼이 없다는 것입니다 우리가 샤워를 할 때마다 싱크대 지역의 절반이 실제로 젖었습니다 이는 또한 세면 도구를 넣을 공간이 반으로 줄었다는 것을 의미합니다 싱크대 영역의 수도꼭지가 싱크대까지 충분히 확장되지 않아 상당한 역류가 발생합니다 다른 문제는 손님의 안락함보다는 호텔 운영과 관련이 있습니다 예를 들어 욕조와 벽 사이에 좁은 간격이 나타났습니다 하우스 키핑은 어떻게 그 지역의 은색을 청소합니까 또한 호텔은 바닥재로 베이지 색 다다미를 선택했습니다 얼룩이 보입니다 더 어두운 카펫 바닥이 더 잘 작동하지 않습니까 나는 호텔이 마음에 들지만 더 좋게 만들기 위해 이러한 요소를 개선해야합니다글쎄 어떻게 차를 사용할 때 전화 번호는 화장품 회사의 것입니다 몇 번의 시도 끝에 도로를 목적지로 설정하고 전화 번호를 다른 참조로 사용하기로 결정했습니다 그 길에서 가장 높은 건물이므로 놓칠 수 없습니다  호텔은 새롭고 방이 너무 크지 않으며 아침 식사는 직원이 친절합니다 호텔 건물 내에는 기계식 주차 공간이 있지만 호텔 옆에 개방 된 주차장이 있으며 투숙객은 개방 된 주차장에 주차하게됩니다  아 화장실에 칫솔이 있어요  위치는 신라 면세점에서 약 입니다 삼  공항에서   다시 제주에 도착하면 돌아올 것이다이 장소에는 무료 주차 대행이 있으므로 꽤 좋았으며 공항과 매우 가깝습니다 샤워 공간에 욕조가 없습니다 그러나 멋진 비데가 있습니다 나는 방이 미국 호텔 표준에 의해 평균 크기라고 말하고 싶다 모든 것이 깨끗하고 깔끔했고 그들은 각각의 더블 침대마다 얼굴 마스크를 주었다 방에서 식사를 삼가라는 표시가있었습니다 책상의 직원은 최소한의 영어를 구사했습니다 일부 직원은 다른 사람보다 낫습니다 나는 많은 관광객들이 호텔을 아직 사용하지 않는 것처럼 보일 것이라고 언급 할 것입니다나는 엽서를 프론트 데스크 스탬프와 함께에줬고 그것을 거부하고 우체국으로 가져 가라고 말했습니다침구 와 어메니티 조식 모두 가격대비 가성비는 최고입니다 조식은 안드시면 후회하십니다  루프탑 이 통유리라 전망과 뷰가 훌륭합니다  호텔치고는 가격도 착한편이구요 주차장도 훌륭합니다 제주시내 호텔중에서 이렇게 주차장 넓은 곳은 본적이 없네요 발렛도 무료로 해주시네요  친절하고 조식도 좋고 무엇보다 침구가 너무좋아 꿀잠을 잡니다 강추  주차장도 넓어서 너무 편하고 발렛 써비스에 또한번 감동 입니다 굿굿패밀리룸 예약했는데 운이 좋게 스위트로 업그레이드 받았습니다  더블 개 들어가있고 전망도 좋고 티비도 두 대입니다 작게 거실 방으로 분리되어 있어서 가족 어른들께서 밤에 시간 보내기 좋았어요 조식도 죽 종류와 서양식 음식이 많아 어르신 입맛에 적당했습니다 다만 욕실이 샤워 부스가 분리되어 있다면 좋을텐데 그러지 않아 아쉽습니다 ㅠㅠ전체적으로 깔끔한 호텔이다금액을보면 모텔 가격으로  생각되지만 객실을 보면 선택을 잘 했다는 생각이 든다 직원들 또한 친절하다 저렴한 가격에 깔끔한 객실과 침구류추천  조식은 사람마다 다르겠지만 나가서 사먹는게 좋을것 같다하지만 전복죽은 맛있다제주에 사는 현지인이 추천해서 간 호텔이었는데  그 전에 호텔을 알아 보고 있던 여러 호텔에 비해 가격이 싸서 예약은 했지만 좀 걱정을 헸더랬습니다 그런데 가서 보고 너무 만족했습니다 왠만한 호텔 저리가라 할 정도로 좋았습니다 위치도 좋아서 걸어서 제주 시내 관광이 가능합니다방도 깨끗하고 수압도 좋아요 조식도 간단한 뷔페식가지수는 많아요이라 먹을것도 많고 맛있고 추천합니다제주공항에서 분 거리에 있는 더원호텔 지은지 년되어 깨끗하고 룸컨디션 좋습니다 호텔 옥상 하늘정원도 잘 꾸며져 있습니다 제주 늦은 도착이나 가볍게 머물기는 최상의 선택인거 같습니다편히 쉬다가요 직원분들도 친절하고 청소 상태 괜찮아요 단점은 주차가 좀 그래요 비지니스로 온다면 다음에도 이용할생각입니다박일 일때문에 제주도에서 머물게 됐는데 위치도 나쁘지 않고 직원분들 모두 친절하게 대해주셨어요 침구도 깔끔하고 카피 드라이어 등 다 있어요숙소의 깔끔한 시설이 좋았습니다 위치도 노형오거리 근처라 좋고 제주도청이나 신제주 인근 출장 오시는분들께 추천드립니다제주도 엠버호텔 센트럴 대박 좋음 숙소도 너무 편안하고 직원분들도 너무 친절한 호텔 다음에 제주도 방문시에 또 오고 싶네요깨끗하고 좋아요 추천하려면 하고 다음에도 또 올꺼고  옆에 진짜 맛있는 해장국집도 있음 아주 마음에 드는 여행이 될꺼 같아요친절하고 도움이되는 직원    위치는 제주 시외 버스 터미널에서 도보로  분 거리입니다 대중 교통으로 특히 버스로 쉽게 접근하고 여행 할 수 있습니다  그들은 무슬림을 위해 먹을 곳 해변에가는 법 한라산을 하이킹하는 법 현지 시장에가는 법 등 좋은 정보를 제공했습니다    나는 다시 여기에있을 것이다                                                                                                                                                     외국인 친구가 한국 방문 기간에 마켓에서 물품을 주문해 배달 받기를 원해서 게스트하우스 주인에게 이메일을 보냈어요 주인은 마음 편히 주문 하라고 허락을 한 상황이었고요 마켓에서는 수령인 전화 번호가 꼭 있어야 하는데 핸드폰 번호 밖에 입력이 안되서 게스트하우스로 전화 해 가용한 핸드폰 번호를 문의 했습니다 제 번호로 입력 해도 되지만 실제 수령을 받는 게스트 하우스 번호를 받는게 더 낫겠다 생각이 들어 전화 했죠 근데  계속 추궁 하듯 누가 어디서 오고 언제 오고 이름이 뭐고 다 확인 하고나서 수령인 핸드폰 번호 알려달라고 하니 개인정보 알려주기 싫다고 하는 개념 상실한 직원의 반응에 어이 없어서 글 남깁니다 정신 교육 좀 시켜 주세요 장난 하는 것도 아니고  내용은 대충 아래와 같습니다  직원 왈 저희는 물건 대신 못 받아줘요 까칠하게  나 사장님과 이미 이야기가 되었어요 직원 그러면 계시는 동안에만 주문 해서 받아가세요 나 당연한 거 아닌가요 수령인 핸드폰 번호가 필요 한데 폰번호 하나만 주시겠어요 유선 전화로는 입력이 안되게 되어 있어요 직원 저도 마켓 쓰는데 유선번호 써도 되요  나  저 지금 마켓 보고 있는데  밖에 못 쓰게 되었어요 직원 개인정보라 드리기 싫은대요 나    이런 식으로 실랑이를 벌이다가 직원이라는 걸 알고 주인 언제 오냐고 물으니까 제대로 알려주려고 하지도 않고 정말 손님을 받으려고 하는 태도인지 뭔제주터미널 바로 옆 위치 정말 좋은  터미널 바로 옆이라 버스 이용에 굉장히 좋습니다 또한 예전 여관을 리모델한듯 인실로 개별욕실 있어서 저렴한 가격에 편하게 이용했습니다 조식 시간 없으면 초코파이 간단 음료 비닐팩에 넣어수셔서 한라산 갈때 요긴하게 간식 먹었습니다 버스여행자에게 추천합니다침대가 조금 불편하고 주차장이 객수에 비해 부족한지 주차장이 협소하긴 했지만 새로 생긴 호텔답게 깨끗하고  뷰도 좋았습니다 난타 공연을 보기 위해서 이틀을 머물렀던 호텔이에요 저녁비행기로 와서 렌트하고 도착했더니 저녁 시 분이었는데 룸서비스가 시 반에 끝난다고 해서 리셉션에서 전화해주셔서 간신히 후라이드치킨을 먹을 수 있었어요 침대도 편하고 욕조도 크고 산에 있어서 조용해요 조식도 나쁘진 않았어요 식당에서 먹었던 메뉴중에서는 전복해물뚝배기랑 갈비가 맛있었네요 난타공연을 투숙객에게  할인해줘서 가까이에서 재미있게 봤어요 제주에 가면 항상 잡는 숙소가 나보 호텔 난타  난타 공연도 볼 수 잇는 곳이지만 시간이 안되어서 난타 공연은 보지 못한 아쉬움이 있습니다  호텔난타에서 한라산 돌문화공원 사려니숩길 절물휴양림 등이 가깝습니다  공항에서도 가까운편이며   주변에 호텔 난타와 공연장 외에는 없어서 조용한 편입니다  침대도 편합니다  층에 편의점이 있어서 필요한 물품은 구매를 하면 됩니다  객실에 치약과 칫솔이 없다는 것이 약간 아쉬운 점입니다난타 상설공연장과 함께 있는 호텔입니다 객실이 깨끗하고 비즈니스호텔 급으로 잘 갖추어져 있습니다 다만 시내에서 많이 떨어져 있어서 택시를 불러도 잘 안 올 때가 있어서 차가 없으면 움직이기 불편합니다객실도 넓고 조식도 괜찮아요 난타 공연도 넘 재밌고 즐거운 시간 보냈습니다 산 중턱에 있어서인지 밤이 되니 시원하고 좋은 공기를 마실수 있었어요 너무 잘 쉬었습니다 위치  규모가 큰 호텔이 별로 없는 애월에서 비교적 큰 규모의 호텔로서 푸른 바다가 바로 앞에 있으며 저녁 석양 무렵이 아름답습니다  직원  직원들이 친절한 편입니다  룸  바다 전망이 보이는 욕실이 좋았으나 방에 전체적으로 비릿한 냄새가 나는 단점이 있었습니다  조식  전체적으로 괜찮았습니다만 가성비까지는  기타  바다가 한 눈에 보이며 사시사철 수영이 가능한 루프탑 수영장이 아주 멋있었습니다박했는데  다시 가고싶진않아요 가격할인해서 가도 아까웠습니다 야밤에 디제이시끄러워 짜증났구요  권하고싶지않아요 여러모로수준이 그닥 실내 환기팬 및 에어컨 소음   침대와 객실 외부 유리창 사이에 스파가 있는 객실에 묵었습니다 이 스파 위쪽에 상시 작동되는 팬이 있는데 현관에 룸키를 꽂으면 마스터 전원이 들어오면서 저속으로 작동하고 화장실 팬을 작동하면 고속으로 작동하는 시스템 같았습니다 일단 룸 키를 꽂으면 이 스파 위쪽 팬을 끌 수 있는 스위치가 없었고 저는 이 팬의 소음이 수면에 방해가 될 정도로 매우 거슬렸습니다 결국 관리직원이 오셔서 환기팬의 전원선을 분리했고 직원 분 말씀이 전에도 유사한 컴플레인을 받은 적이 있다고 하시더군요  또 천정에 삼성시스템 에어컨이 설치되어 있는데 설치의 문제인지 기종의 문제인지 모르겠으나 소음이 상당합니다 저같은 경우는 밤에는 에어컨 없이도 잘 수 있을 정도의 날씨여서 사용하지 않았지만 예민하신 분들은 충분히 문제가 될만한 수준의 소음이어서 한 여름에 투숙하시는 분들은 고민해보셔야 할 듯 합니다 관리하시는 직원 분은 에어컨 소음은 방법이 없어서 숙박을 포기하고 다른 호텔로 가신 고객도 봤다는 말씀을 하셨습니다   객실 내부 청결도 및 하우스 키핑 문제   제 경우 객실 청소를 실제로 담당하시는 분 한테서는 이 정도 가격을 받는 호텔에서는 기대하기 어려운 수준의 응대를 받았습니다 관련해서 그 분과는 대화를 더 나누기가 싫어서 프런트에 관련된 컴플레인을 했었고 프런트는 친절하게 해결해 주려고 노력하는 것 같았습니다 다만 호텔 직원에게 필요한 서비스 마인드 교육이 하우스키핑 하시는 분들 까지는 제대로 되어 있지 않다는 느낌을 강하게 받았네요  가족들과 잘묵다가 갑니다 이국적인 분위기인 애월에 잘어울리는 호텔이었습니다  그나저나 밑에 여자분 정황상 반입금지인 강아지 데리고들어가놓고 걸리니까 괜히 적반하장 화내는게 웃기네요 ㅋㅋㅋㅋ 우리가족들한텐 친절만하던데  저런게 바로 갑질이 아닌가요 글보시면 부끄러운줄아시고 정신차리세요가족들과 여행 중 우리가 관광 간 사이에 호텔 직원들이 무단으로 아무런 허락 없이 객실 난입하여 온 방을 헤집고 나간것 우선 이게 팩트입니다 이유인즉슨 메이드가 청소 중 애완용품이 있었다는 것 그래서 우리 허락 없이 객실 내부에 있는 물건 사진을 찍어 몰래 직원들 단체방에 유포했다고 하네요 그래서 호텔 총지배인 및 직원들이 사실 확인차 명이서 그것을 확인하러 우리 객실에 무단으로 들어간 것이라고 하네요 관광을 다녀오자 총지배인이라는 사람이 나와 우리를 보자마자 하는 말 자기들이 객실에 들어가서 직접 물건을 확인했으니 벌금을 내라는 것 정말 말이 안나올 정도로 황당했습니다 실물 강아지가 있었던 것도 아니고 그로 인해 민원이 들어온 것도 아니고 하물며  및 명백한 증거도 없이 추정 물건으로 호텔 관계자가 명이나 무단으로 객실에 출입해도 되는건가요 이게 대한민국 호텔에서 일어날 수 있는 일일까요 물건으로 추정컨데 강아지가 있는것으로 보이니 스위트룸 박 더 내라고 하네요 객실이 못팔릴수도 있다고 그래서 뒤에 있을 컴플레인 및 모든것은 내가 책임지겠다 하지만 직원들이 우리객실 무단으로 출입한것은 어떻게 책임질거냐 하니 박치 돈 안낼거면 경찰 불러서 객실 수색하겠다네요 계속 올라가서 확인하자고 협박 및 강압적인 말로 우리에게 모욕감을 조성했습니다 그 누가 부모님과 가족들 쉬고 있는 공간을 직원들이 수색하도록 동의를 하나요 혹여나 그 안에서 호텔 규율을 어긴 담배를 피었거나 고기를 구워먹었던 흔적이 있다고 해도 그 누구도 우리 허락 없이 우리가 점유하는 객실을가격 컨디션 서비스 위치 등 빠질게 없다 제주여행시 제주시에서 머문다면 무조건 이곳에서 다시 묵을 예정이다 나홀로 커플 가족 상관없이 가능하다년 월 일부터 일까지 남자친구와 함께 제주도 늘송 파크텔에서 이틀을 머물렀습니다  전체적으로 머물기에 편안한 곳이었습니다 편안하고 저렴한 여행을 위해 숙박 장소의 위치는 정말 중요한 문제인데 늘송 파크텔의 위치는 아주 좋고 편리했습니다 제주 국제 공항에서 가까운 곳에 위치한데다 공항에서부터 숙소까지 무료로 차편을 제공해 주었습니다 늘송 파크텔의 주인인 미스터 박이 우리를 공항에서 호텔까지 데려다 주었습니다   객실공주호은 아주 만족스러웠습니다 객실에는 티브이 와이파이 되는 컴퓨터 미니 소독기 식수 음용대 에어컨디션 등이 비치되어 있었고 아주 훌륭했습니다 게다가 객실과 화장실이 정말 청결했습니다  이 리뷰가 제주도를 방문하려는 다른 여행객들이 숙소를 선택하는데 도움이 되었으면 좋겠네요  고맙습니다이 호텔에 대한 저희 첫인상은 매우 낡았다는 것이었어요 직원들도 마찬가지로 그런데 이 호텔에서 뭐가 좋았느냐고요 방과 침대 시트가 깨끗해요 방에 공기 청정기가 있어요  무료 와이파이 많은 티비 채널 성인물 채널도 포함해서요 충격이었어요  도움을 많이 주는 직원들 변기 커버가 데워져 있어요 아침에 당신은 이 따뜻한 변기 커버에 감사하게 될 거예요 이 호텔 바로 맞은 편에 맛있는 흑돼지와 전복죽을 파는 패밀리 레스토랑이 있어요 가격도 적당했어요 식당들이 걸어서 갈 수 있는 거리에 있어요 한국 음식점이건 패스트푸드점이건 공항까지 대략 분 거리  조언 제주도에서 차를 빌리세요 말레이시아인이라면 꼭 국제 면허증을 신청하세요 수건을 직접 가져오세요 왜냐하면 제공되는 수건이 몇 장 안 되거든요방은 널찍하고 깔끔하고요 시설이 잘 갖춰져 있습니다 방에는 인치 평면  컴퓨터 공기 청정기 미니 냉장고 정수기가 마련되어 있어요 공항과는 차를 타고 약 분 정도 걸리고 여러 레스토랑과 편의점이 인근에 있습니다 직원이 영어를 잘 하지 못하지만 아주 친절합니다 저희는 전체적으로 불만 없이 잘 지내다 왔습니다제주 공항에 가깝고분 내외 거리 편의점과 맥도날드가 근처에 있으며 맛있는 식당흑돼지 바비큐이 바로 길 건너에 있습니다 그리고 시간 코인 세탁소가 가까이 있어요 크고 깨끗한 방무료 무선 인터넷 사용 가능 깨끗하고 쾌적한 화장실 마지막으로 주인이 무척 상냥하고 친절해요 시간 코인 세탁소를 찾으려 저희랑 같이 걸어 다녀 주었답니다 그리고 그분은 인도네시아어도 무척 잘 해요  더 이상 바랄 것이 없을 정도의 숙소입니다 제주도에서 매우 추천하고 싶은 호텔이에요최근에 지어진 것 같아 인테리어가 세련되고 주인도 친절합니다 온돌식 난방이 있고 객실 내 와이파이가 무료입니다 방은 어제 묵었던 관광호텔보다 훨씬 깔끔합니다위치가 괜찮고 조용하게 지낼 수 있는 숙소였습니다 바다전망 객실을 배정 받아 전망도 매우 좋은 편이었지만 욕실이 매우 오래된 듯한 느낌을 받았고 테라스와 같은 곳은 청결도 부분에서 신경을 써야할 필요가 있어보였습니다저렴하지만베란다 환경이 좀ㅜㅠ 바닷가 근처이고 날벌레 가 많을 수 밖에 없는 환경일 듯은 합니다만 층에 투숙했는데 테라스에 날벌레 나 바퀴벌레 류가 너무 많습니다 에어컨 실외기가 창문 여는 부위 방쪽에 붙어 있어서 창문을 열기 어렵고 청소도 좀 더 신경써야 할 듯 합니다 샴푸나 바디크렌저를 용기에 표기 된 브랜드 제품이 아닌 최저가품으로 채워 놨더군요 ㅎㅎ깔끔하고 군더더기 없는 숙소입니다 다음날 성산일출봉우도 계획하고 있어서 저렴하게 잡았는데 박 만원 가격대비 굿입니다 주차장도 널찍하고 바다 앞이고요 주변에 아무것도 없지만 숙박만 하실 계획이라면 만족스러운곳이라고 생각되요애초에 성산 근처에 숙소를 잡으려고 생각했기 때문에 별 고민없이 선택한 숙소 성산에 숙소를 잡으려했던 건 용눈이오름 성산일출봉 돌문화공원등등 애월이나 서귀포의 번잡함을 피해서 조용한 제주를 느끼고 싶어서  숙소 자체는 깨끗하고 조용해서 아주 만족했습니다 창을 열면 우도가 완전히 눈앞을 가득 메우는 광경도 나쁘지 않음깔끔하고 분위기 좋은 호텔 공항서 가깝고 가격대비 가성비 최고에요 설비도 잘 되어있고 사장님을 뵈었는데 친절하셔서 즐겁게 지내다 왔네요 한라 수목원에서 차로 분이면 가서 오전에 드라이브하기 편했네요  다음 제주도 가면 또 들리게 될 호텔방이 깨끗하고 위치가 너무 좋아요그리고 호텔 리셉션에 있는 직원 분이 참 친절했습니다  다음번에도 꼭 갤러리 호텔 비로 가야죠 호텔은 너무 좋아요 방이 깨끗하고 스태프가 친절해요 동네에 재미있는 식당이랑 술집이 많아요 다음번에도 이 호텔에 묵을거에요제주 시내의 비지니스 호텔을 찾다가 이용하게 되었는데 접근성도 좋고 가성비도 좋고 깔끔하고 좋았네요 강력 추천합니다제주도로 출장이 갑작스레 잡혀서 급히 예약한 호텔이었는데 위치적으로도 너무 좋고 사진보다 훨씬 깔끔해서 매우 만족스럽게 지내다 왔습니다 직원분들도 매우 친절하고 가격대비 룸컨디션도 굿굿굿 업무차 오는게 아니라 여행으로 온다고해도 이곳을 다시 방문할 예정입니다      그래서 서귀포에있는 미도 호스텔에서 이사를하면서 여행을 시작했습니다  중앙 로터리 버스 정류장에서  번 버스를 타고 제주 시외 버스 터미널로 가십시오 그런 다음  번 버스를 타고    버스 정류장으로갑니다 그러나 버스 번호 는 거의 오지 않습니다 그 당시 우리는  시간을 기다려야했습니다 우리가 숙소에가는 방법을 혼동하는 동안 소녀는 우리가 어디로 갈 것인지 물었고 택시 요금을 확인하는 데 도움을 주었고 앱에서   원을 지불 한 다음 택시를 탔습니다 실제 비용은   원이었습니다 길리 메 앞에 안전하게 도착했습니다 어쨌든 우리는  카드로 택시 요금을 지불했습니다 매우 편리했습니다  좋아 내 검토는 다음에서 시작됩니다  첫인상은 편안하고 친절하며 신선하고 깨끗하며 환영합니다 길림 펜션은 여행하는 동안 내가 가진 최고의 숙박 시설이며 주인 인 강은 정말 친절합니다 그는 우리 짐을 도와주었습니다 버스 노선을 숙소와 숙소로 설명하고 우리가 길을 잃었을 때 위치를 공유하기 위해 을 추가했으며 언제든지 전화하여 도움을 요청할 수 있습니다 그는 택시 운전사 나 버스 운전사에게 보여 주어 돌아가는 방법을 모르는 경우 도움이 될 명함을 우리에게주었습니다  쉐어 하우스에는 모든 것이 있습니다  주방 세탁기 헤어 드라이어 비누 샴푸 컨디셔너 온수 빵 계란 커피 머신 매일 새로운 수건 우리가 자유롭게 사용할 수있는 모든 주방 도구  숙박 시설은 정말 귀엽고 사진 자료입니다완전깨끗 가격착함 사장님친절 다시또오고프당 제주공항에서가깝고 바다는걸어서분정도 가격착하고 완전깨끗 압력밥솥 전자레인지 토스트기 커피포트기까지 기본 조미료도완비ㅋ 아두아주맘에마음에듬그는 우리를 위해 모든 것을 설명 해주시며 친절하고 호의적인 정보를 알려주는 섬 스파이크 를 신은 영어가 감사합니다  냉장고 정리해 시며 펜션 은 계란 얇게 썬 빵 오렌지 주스와 추가  분 정도 걸으면 올 수 있는 레스토랑과  수 있습니다일간 묵었습니다 나는  게스트 하우스에서 좋은 경험을 했어요 우선 버스를 통해 공항에서 쉽게 접근할 수 있습니다 나는 게스트 하우스 바로 앞에 있는 버스 정류장에서 현지 버스를 타고 제주를 여행했습니다 교통을 걱정할 필요가 없습니다 둘째 주변에 마을에서 가장 저렴한 훌륭한 레스토랑이 많습니다특히 구운 흑돼지 마지막으로 방은 멋진 라운지와 주방이 있는 편안한 공간 또한 큰 미소와 인사말 이 곳을 강력히 추천합니다 이 호스텔에는 몇 가지 사항이 있습니다 주인은 매우 친절하고 그 지역에 대해 잘 압니다 제가 가보고 싶었던 특정 음식이 있는 레스토랑이 영업하는지 확인하도록 전화를 도와주었고 그래서 지도를 그려주었습니다 나는 쉽게 찾을 수 있었습니다 라운지 룸은 커요 무료 아침 식사 제공재료 제공 공항에서 가까운 좋은 장소 시외 버스 정류장에 위치하고 있으며 많은 레스토랑바 한라산에서 분 거리호스텔의 객실은 괜찮았지만 특별한 건 없었어요 에어컨과 샴푸 및 바디 워시가 있는 욕실이 있는 방에서 명 투숙 사물함은 약간 작아서 가방 전체가 아니라 귀중품을 넣고 잠글 수 있습니다 전체 크기 수건이 아니라 손 닦는 수건을 제공합니다꼭 다시 이용하고 싶어요첫 번째 제주도 여행 에서 지내는 동안 좋았습니다 전혀 불평할 것이 없습니다 깨끗한 방 세면 도구가 포함된 깨끗한 화장실과 매일 새 타월 제공 무제한 토스트 계란 우유 커피 주스가 있어 자유롭게 아침식사 조리 가능 붐비지 않는 시간에 요리 가능점심 식사와 저녁 식사차를 빌리면 밤새 무료 주차장을 제공하는 시청 맞은 편의 완벽한 위치 다양한 바가 있는 술집 지구 인근에 식당들이 있습니다 리셉션에서 직원들은 굉장히 모든 도움을 많이 주었습니다 심지어 영어로 나오지 않는 차 에 한국어를 입력하는 것을 도왔습니다 전체적으로 꼭 추천합니다 우리는 온다면 꼭 다시 묵을 것입니다멋진 제주 섬을 발견하기 위해 박을 거기에서 보냈다 이 게스트 하우스는 도시의 번화가 부분에 위치하고 있으며 섬의 거의 모든 명소로 가는 많은 버스가 거기에서 출발합니다섬의 남쪽 동쪽 또는 서쪽으로 갈 때 대략 시간을 계산할 수 있음 게스트하우스에서 사람들은 정말 친절하고 섬의 모든 곳에 도달하는 가장 좋은 방법을 항상 알고 있습니다 게스트하우스는 깨끗하고 필요할 수도 있는 모든 것을 제공합니다 샴푸 헤어 드라이어 수건 등 나는 강력히 추천합니다제주시청근처 교통이 좋아 버스로 제주여행을 한다면 좋은 선택 너무 시내에 위치하다보니 저녁엔 시끄럽다는게 단점 하지만 친절한 주인분들때문에 그런건 별다른 문제가 되지 않음무계획으로 숙소만 잡고 왔다가 오자마자 롱보드도 타보고 사람들도 좋고 편안한 분위기에 여기저기 잘 다니고 푹 잘 쉬다 갑니다 전체적으로 깔끔하고 심플한 분위기라 선택했는데 굳초이스였네요ㅎㅎㅎ 힙한 음악 핫도그도 맛있고 술도 맛있어요ㅋㅋ 무엇보다 층에 바가 있어  음악 좋아하시면 혼자와도 안심심하고 좋아요 운좋으면 공짜술도 많이 마실 수 있어요 히히 굳럭택시타고 내리자마자 아 제주도구나 하는 도로 뒷편에 엄청 힙한  로고와 층 라운지를 보자마자 저도 모르는 엔돌핀이 솟아 올랐어요 층에서 울려퍼지는 음악 소리가 너무 좋아 허겁저겁 체크인을 하고 바에 들어가 사장님들과 매니저님들과 노래를 크게 틀어놓고 어색할것도 없이 맥주와 칵테일 한두잔에 금새 친해졌네요 로컬 외국인들분도 자주 오시나봐요 신축이라 깔끔하고 청결한 방에 운이 좋게 제 방에는 테라스까지 있어 밤과 아침에 어메이징한 뷰를 선사해주세요 이가격에 이걸 즐겨도 되나 싶은 제공되는 조식을 먹고 근처에 러닝을 하고 왔는데 이런 힐링이 따로 없네요 서귀포쪽에서만 머물다가 제주공항에서 우연찮게 머물렸는데 이런 좋은 곳을 발견하니 ㅎㅎ 감사할다름 또 올께요 사장님층은 바 커페로 운영되고 그 위로는 다 호스텔 객실인데 바카페 객실 모두 전망이 너무 좋아요 특히나 맨 윗층 조식실에서 보이는 원도심 풍경은 엄지척 직원분들도 친절하시고 좋았어요 다음에 제주 오게 되면 무조건 다시 올 거 같아요 저렴하면서 깔끔한 숙소 찾고 있었는데 딱 여기였어요 너무 아늑하고 친절한 서비스 덕분에 잘 머물다 가요 아래층에 분위기도 좋고 가격 저렴한 라운지가 있어서 밤에 혼자 맥주마시기 진짜 굿이었어요 진짜 다른분들에게 완전 추천합니다조식 먹으러 올라갔는데 뷰가 아주 산지천 한라산 제주항까지 다보여서 너무 좋았습니다 도미토리 객실에서도 같은 뷰더라구요 최고 공항근처에서 숙소 찾는다면 그냥 여기서 묵으면 될듯 저는 도미토리에서 잤는데 매트리스가 좋은지 엄청 꿀잠 잤어요   호스트분들도 너무 친절하시고  층 가 새벽 시까지 해서 한참 수다떨다가 올라가서 잤습니다   다음에 제주를 다시 찾는다면 또 올 예정나무를 포인트로 인테리어 하셔서 방 분위기도 너무 좋았고 예뻤습니다 사장님 감각이 너무 좋으신 듯해요 다른 비지니스호텔들의 하얀 호텔만 보다가 이런 방을 만나서 너무 새롭고 너무 좋았어요 다음번에 갈 일이 생기면 또 이곳에서 지내고 싶네요ㅋㅋ 사장님도 너무 친절하시고 정원도 예뻐서 편하게 있다가 왔습니다웨딩스냅차 제주 방문하면서 평점이 높은 정원카페 느낌인 이곳에 방문했습니다 친절한 주인과 기대이상으로 깔끔하고 편안한 시설과 서비스 만족스럽네요 갈수록 흥할듯일부러 찾아갈만한 멋진 분위기와 친절한 외국인 사장님 무엇보다 합리적 가격 숙박을 하지 않았어도 레스토랑 때문에라도 가고 싶은 곳애월항 근처 한적한곳에 있음 전체적으로 룸컨디션 좋고 실내 집기류도 잘 갖추어져있음 정원이 크고 소중히 가꾸는 느낌 산책로 따라 걷기 좋고 뒤쪽에는 작은 연못도 있음객실이 깨끗하고 쾌적해요 아침마다 신선한 조식을 만날수 있구요 사장님 내외분이 너무 친절하셔서 기분좋게 지낼수 있는곳입니다주차장이 지하층이고 지하층은 엘리베이터가없어요 식당 편의점도 근처라서 저렴한가격에 잘 이용했어요 공차도 근처에있고 유리네식당 세븐편의점도 있어요공항에서 분거리에 위치하여 이동하기 편리하다  투숙 장점 가격이 굉장히 저렴한데 그 가격이라는 것을 감안했을때 전혀 실망스럽지 않다  객실과 욕실이 크다 도로변에 있어서 소음 걱정을 했지만 기우였다 도로가 좁아서 통행량이 많지 않다  투숙 단점 이틀 투숙하기때문에 체크아웃 때까지 분명히 재실정비 하지 말아달라고 요청해 놓았는데 이튿날 외출하고 돌아오니 깨끗히 정비 해 놓으셨다  정비 해준 것은 고맙지만 소통이 원할 하지 않다는 것을 느꼈다  원래 어느 숙박 시설이든 금연이 기본인데 처음 배정 받은 객실이 담배 냄새로 쩔어 있었다 그렇지만 직원이 바로 깨끗한 방으로 변경 해주셨다  제발   숙박하는 곳에서 금연 해주기를 바랍니다   흡연자들이 항상 술 마시고 나쁜짓 하는 사람들은 봤어도 담배 피우고 나쁜 짓 하는 사람들은 못봤다고 하는데나참 나 어이가 없네  총평 가격대비 훌륭하다우리는 일요일 오후에 체크인을 해서 수요일 묵으려고 우리는 방 개를 그해의 담배에 냄새가  연기 우리는 방을 바꿀 수 있었다 우리 방은 넓고 욕실도 더러웠어요  거울 더럽고 세면대 샤워와 화장실도 더러웠습니다 마치 마른 천으로  전체 호텔은 잠시 씻고 좋아하지 않는 것 같았습니다  이 것보다 다른 공손하고 친절했고요 하지만 영어를 거의 우리는 애플리케이션을 사용하여 찾을 수 있습니다  이 더러운 욕실 및 전반적으로 아주 허름합니다 아니었다면 높은 등급 것이라고제주도 패키지 여행 중 묶었던 호텔이였구요 박 스위트룸 인인 실 사용했습니다 스위트룸은 기다란 거실 화장실 그리고 침대가 개 있는 방이 하나 딸려있었구요 별로 일거라고 예상하고 갔었는데 생각했던 것보다는 숙소가 좋았어요 다만 아쉬운 점이 있었다면 호텔에서 제공해준 이불이 깨끗하지 않았다는 거였네요 조식 서비스도 이용했었는데 한식 으로 제공되었구요 반찬은 가지 정도나오고 국도 나오는데 맛은 있진 않지만 그럭저럭 먹을만 했습니다 아 그리고 신제주 번화된 시내 에 있어서 주변에 식당이나 까페 술집 나이트 등이 엄청 많아요 거의 유흥 거리라고 해도 과언이 아닙니다                                                                                                                                                    가족들과 휴가로 숙박 잡았는데 침대도 올드하고 가장 충격적이었던건 바퀴벌레 물론 벌레 신경안쓰시는 분은 괜찮겠지만 태어나 처음 본 저는 진짜 충격이였어요 처음엔 어머니께서 화장실에서 잡으셨는데 그때까진 참았습니다 그런데 방에서도 한마리 더 발견되었습니다 화가 나서 안내데스크에 연락했더니 원래 바퀴벌레랑 지네 등등이 나온다는 답변만 받았습니다 남는 방이 없어 방도 못 바꿔준다며 수건이라도 바꿔줄까요 라고 묻는데 진짜 어이가 없었습니다 짐에 한마리라도 딸려오면 집에 퍼지는건 순식간이라 짐풀었났던것도 정리해서 테이블에 다 올려두고 신경쓰여 잠도 잘 못 잤네요 다른숙소 갈날만 기다렸습니다 최악의 호텔 절대 안갈것같습니다 직원의 대처도 불만이었고요지인이 몇년전 다녀와서 좋다고 추천하길래 제주도 여행의 첫날 숙소롤 잡은 곳 위치가 좀 외지고 객실상태도 좀 미흡 조식은 정말 별로였어요 소음  호텔 측 대처  서비스   모텔 보다 못함 디럭스 박 숙박  천장에서 물 소리가 새벽 내내 나서 데스크에 문의새벽시  호텔측 우린 그런 컴플레인 받은 적 없다 내일 시설팀 확인해 보겠다함 다음날 시설 팀 확인했으며 괜찮을 것이다 하여 그 다음날도 같은 방 숙박  여전히 나는 소음 그로인해 일 내내 새벽 시까지 못잠   소음 녹음까지 해서 들려줬는데도 불구하고 디럭스 풀북이라나  디럭스 숙박하실거면 거르세요 제발 트립어드바이저가 업뎃 되어서 녹음기능 추가 할 수 있게 되면 평생 간직 후 소음 업뎃 할 것임 정말 이 호텔 모텔 보다 못함  아참 아스크림 먹어야해서 숟가락 좀 빌려달라고 하니 데스크에선 그런 권한이 없다함 조식도 운영 중인 호텔 말 끝  모텔도 이것보단 서비스 좋을 걸  그동안 다녔던 호텔들 중 정말 다시는 오기 싫은 베스트 최악의 호텔  본관 층 객실에서 지냈는데 바로 앞이 바다라 뷰가 좋았다 객실도 깔끔하고 객실내에 에어컨 제습기 빨래건조기 작은사이즈의 주방이 있어 편리하게 사용함 로비에서 물과 맥주는 판매하공있으나 호텔입구에 편의점이 있으니 그 곳에서 구매하길 추천함  공항에서 대략 분정도 소요됨 위치도 공항하고 가까운 편 다만 호텔 시설관리면에서 약간 부족해 보임 방충망에 구멍이나있는 곳도 있었고 벽돌도 군데군데 깨진곳이 보임 전체적으로 만족스러운 호텔  우리 방만 이랬던걸까요 청결하지 못해서 불쾌했어요 이불에 구멍이라니 하나도 아니고 으걸어서 몇분 거리에 해변가 맛집들 많고 자리도 편하고 좋아요 제주 갈때마다 묵고 있는데 매번 불만없이 잘 갔다 옵니다 추천해요 룸 레스토랑 깔끔함  직원 친절함  함덕 해변은 걸어서 분 주변맛집 꽤 있음  공항까지 승용차로 약 분쯤 차 막안막히는 시간  공항가는 버스 있음함덕 해변 바로 앞이고 만원에 슈페리어트윈룸이라 인 사용 시 넓고 좋습니다 객실도 깨끗해서 아주 만족스러웠습니다 다만 객실수에 비해 주차장이 조금 협소한 것 같네요라마다 치고는 저렴하고  환경은   바다도 가깝고  접근성 용이  조식이 비싸다는 단점이  암튼 조용하고 주변에 함덕해수욕장이 있어서 밤새 놀기 아주 좋음 걸어서 분정도 위치하고 있음 제가 갔을 땐 사람이 없어서 그런지 이용이 굉장히 편리했어요 오래된 곳 같지만 청소를 열심히 하는 지 깨끗해요 샴푸 린스 바디워시 치약에 폼클렌징도 있어서 참 좋았습니다 빨래 무료이구요 여자방에 드라이기 뿐만 아니라 빗 화장솜 면봉도 있어요 근처에 동문시장이 가깝고 공항까지 버스로 넉넉하게 분이면 갈 수 있어요 마스코트 락심이가 정말 귀엽지만 밖이랑 안을 구분없이 돌아다녀서 위생에 민감하신 분은 주의하셔야 될 것 같아요 조식은 계란 식빵 밥 미역국 씨리얼 우유 쥬스 쨈이 나와요동문시장 가까이 있어서 걸어서 갈 수 있어요 관덕정도 가깝고 도미토리 묵었는데 층에 씻는곳화장실 겸용 하나라 좀 기다려야 해서 불편했어요 사람들이랑 거실에서 도란도란 서로 정보공유하기는 좋아요제주도 갈때 종종 가던 게하인데위치는 시내쪽에 있어요 다른곳보다 좀더 친근하고 조식도 좋구 ㅎㅎ 주인언니도 친절하시네요 가끔 저녁에 파티도 하는데좋은분들도 많고저렴하게 제주여행할때 들르기 좋아요가격이 다소 저렴한 편이고 제주 시내에 있어서 공항 근처에서 주무시고 아침 이른 비행기를 타야 하는 분에게 괜찮을 것 같은 곳입니다 건물이 오래되어 개조를 했다 해도 시설이 다소 낙후되어 보이는 것은 감안해야 할 듯 합니다제주시내에 있는 게스트하우스를 찾다가 가게 된 곳이에요 가격이 좀 저렴한 대신 건물이 낡은 편이라 제가 묵었던 방은 창문이 잘 닫히지 않아서 모기가 들어왔던 화장실도 약간 낙후된 느낌이에요 주인분이 리모델링을 하셔서 페인트칠이 알록달록하게 되어 있고 아기자기한 느낌이 나며 아침 조식은 메뉴는 게스트하우스의 일반적인 메뉴지만 잘 준비되어 있었고 분위기가 화기애애해서 거실에서 담소가 많이 나눠지고 있더군요친구들이랑 놀러왔는데 뷰가 너무 이뻐요 눈이 펑펑 내려서 못올라가면 어쩌나 했는데 올라오는데 큰 무리없이 왔어요 ㅎㅎ 방도 크고 깨끗하고 잘 쉬다갑니다 다음엔 가족들이랑 함께 올게요  엠버리조트 번창하세요 날씨도 좋고 잘쉬다 가네요 웬만한 호텔보다 편히 쉬는곳으로 짱인듯  그리구 바베큐파티 짱입니다나중에 설매장 오픈하면 달립니다친구랑 제주여행 카라반에 숙박 꼭 해보고 싶었는데 아늑하고 좋아어요 여기 리뷰 보고 선택한 곳 인데  선택 잘 했다 싶었어요 직원분들도 친절했구요 객실청소도 깔끔했어요 리조트 프론트에  스낵코너 가 있어요 종류가 많은건 아니지만 아쉬운대로 맥주캔에 스낵 구매해서 먹을수 있어 좋았담니다조용하게 가족과 함께 쉴수있는곳 찾다가 다음날 한라산 등반계획도 있고 해서 결정한 엠버 리조트  생각 외로 너무너무 괜찮았어요 경치는 두 말 할것도없고요  객실 청결도 좋았구요 도시에 소음속에 살다 조용한 곳에서 쉴수 있어서 행복했습니다 사진 업데이트가 잘 안 된 것 같아요  실제로 방문했을때 사진보다 훨씬 좋았고 기대 이상이었어요 외부 느낌보다 내부 인테리어에 신경을 많이 쓰신것 같았고 리클라이너 소파나 커피머신같은 세심한 부분도 좋았고 조경이랄까 여러가지로 공을 들인 느낌이었습니다 한라산쪽이라 시내보다는 좀 쌀쌀하긴 했는데 난방 잘 되고 뜨거운 물도 잘 나와서 편안하게 힐링하고 갑니다 참 조식도 괜찮더라구요 좋은 가격에 좋은 숙소였어요자주 방문하는 제주인데 이번엔 함덕에서 숙박하려고 예약했습니다 저렴한 가격에 파셜 오션뷰를 제공한다 하기에 예약했는데 서드 파티에서 본 것과는 다르게 테라스가 없는 것입니다 그래서 내가 본 것과는 다르다 했더니 일단은 흔쾌히 룸 체인지를 하고 다른 방으로 옮겼습니다 그러나 이 객실이 도대체 무엇인가요 침대는 매우 좁고 싸구려 침대인게 딱 티나는 덜컹덜컹 거림에 세면대와 화장실이 아예 분리되어 있습니다 동선이 이런 호텔은 생전 처음입니다 다른 분들이 말씀하신 곰팡이 문제는 없는데 좁은 객실에 억지로 이것저것 욱여넣은 느낌이 강해 지내는데 너무 불편합니다 는 나오지도 않고 나름 전망은 좋은 편이나 화장실엔 고작 욕조 하나만 들어갈 수 있는 수준에 문 마저 고장난건지 씻는데 매우 불편합니다  두 번 다시 오고 싶지 않습니다 여러모로 최악의 호텔 중 하나입니다코너 바다뷰 를 묵엇는데 바다손톱만큼 보엿네요ㅎㅎㅎ 원래는 함덕앞에 다른호텔 이용 했다가 여기가 저렴해서 이번엔 여기호텔에서 묵엇습니다가자마자 식당수도관 파열로 레스토랑 천장이 내려앉아서 맥주무한리필도 안되고 조식도 도시락을 대체 예정이라함  방에 올라가자마자 화장실 곰팡내 오짐 그리고 겁나 좁음 세면대 물도 안내려가고 샴푸도 코딱지만한거 줌 콘센트도 다 구멍 한개짜리라서 한명빼고 다들 보조배터리에 연결하고 잠 침대 머리맡 콘센트도 구멍한개짜리  방에 구비되어있던 슬리퍼도 누가신어도 열번은 넘게 신은듯한 슬리퍼고 명 자는 방인데 물 두병에 수건도 장만 줌 ㅋㅋㅋㅋ 아침에 시부터 조식이라서 내려갔는데 카운터에 직원없고 도시락 얼른 받아서 우도가려고했는데 직원 겁나 늦게옴 객실 점검중이라는 안내팻말보고 얌전히 기다렸는데 객실은 커녕 천장꺼진 레스토랑쪽에서 나오고 담배냄새 오지게 풍기면서 옴 조식 달라니까 도시락이 안왔다고함 그때 시간 시 분이었음 조식 시부터 아니냐고 하니까 맞는데 업체가 늦게 갔다줘가지고 지금 직원이 받으러 갔다고함 걍 됏다고 하고 옴 승질내서 뭐하냐 호텔 방 상태보면 답나오는데 걍 안가는게 최선이지딱 그 금액대의 호텔이다 비치에서 놀고 정신없이 자기 딱 좋은숙소 다른걸 바라면 안된다 금액이 착하니깐 때로는 함덕바다도 살짝 보일때 기분이 좋아지는 정도이다나가자마자 해변이고 메인 해변까지는 걸어서 분거리입니다 위치 방 크기 인테리어는 가격을 생각하면 가성비 괜찮은편이라고 생각합니다 저는 제일 작은방 바다 측면뷰 에 묵었는데 이 방 구조가 세면대와 샤워실이 따로 있어서 동선이 좀 불편했습니다시설이 깨끗하고 친절하다 위치는 바닷가 근처라 산책하기좋고 맥파이 근처라 더욱 좋음 근데 버스로 접근성은 떨어지고 택시를 주로 이용해야함 요새 중국관광객들 많았음위치 자체는 시장이나 마트도 가깝고 먹을데도 많아서 좋은 편 다만 앞에 놀이기구가 있어서 문 닫기 전까지는 시끄러운 편이다 전망은 앞쪽에 다른 호텔에 가려서 특별히 볼만한건 없다  방 넓이나 상태는 무난한 편이고 필요한 일회용품도 넉넉하게 챙겨주는 점이 좋았다 꼭대기 층에 바가 있고 체크인시 생맥주 쿠폰을 주니 간단하게 한잔 하기도 좋다아마도 오래된 모텔을 리모델링 한 것 같습니다  예전 흔적이 느껴지는 부분도 있지만 전반적으로 깨끗하게 관리되고 있습니다침대 시트 등 제주에 늦게 도착했을때 지내기엔 가성비가 아주 좋습니다 주변에 올댓제주 등 유명 맛집도 있구요 탑층에 바가 오픈했다며 생맥주 잔 무료 쿠폰도 주니 호감도 급상승주변공사소음이 거슬렸지만 가격을 생각하면 시설도 깨끗하고 만족스러움  불편한 점은 얘기하면 처리해줌 바닷가도 조금 보여서 좋았음공항 근처에서 하루 지내려고 예약했어요 세면할 때 필요한 일회용품도 챙겨주고 객실이 깔끔해서 좋았어요 택시 타면 공항까지 차가 밀려도 분정도 소요되는 곳이에요그것은 쉬기 좋은 시간이었습니다 이 리조트는 해변 바로 옆에 있기 때문에 멋진 전망을 제공합니다 클린 룸과 편안한 침대 리조트 승무원은 매우 친절합니다 내가 다시 제주를 방문한다면 나는이 리조트에 다시 머물 것이다 제주도 아름다워위치가 바로 해변 근처라 룸에서 보이는 뷰가 너무 좋습니다 세화해변 자체가 조용한 곳이라 그런지 우리 가족만 조용히 지내다 갈수 있었습니다 근처에 이쁜 카페도 많고 제주해녀박물관이 근처에 있어요 성산일출봉까지 분 정도 걸리구요 이 근처 여행하시는 분들께 추천합니다제주도 출장때문에 방문하게되었지만 다음 휴가때 다시 방문하고 싶은 숙소 입니다 바다가 바로 앞에 펼쳐져 있으며 조식으로는 프라이와 베이컨 샐러드 빵 등 간단하게 먹을 수 있습니다 청소상태도 깔끔하고 친절한 직원분들 때문에 더 만족스럽게 머물다 갈 수 있었네요 룸과 카페에서 바라보는 바다뷰 때문에 밖에 안나가게 된다는 단점이 있습니다태교여행으로 박 머물렀던 리조트 바다 바로 앞에 위치해있고 너무 조용해서 참 좋았네요 조식은 달걀프라이 베이컨 샐러드를 직접 준비해주시고 토스트와 버터 쨈 씨리얼 황도 오렌지주스가 마련되어서 든든하게 먹을 수 있어요 직원분들 모두 친절하셨고 리조트 내에 카페가 너무 세련되고 이뻤어요 카페에서도 역시나 바다 경치가 참 좋았고 객실 침대에서 바라보는 바다는 정말 멋졌네요 제대로된 힐링여행 잘 하고 왔어요 룸컨디션도 너무 좋았어요 제주도 동쪽 여행을 준비한다면 리조트는 무조건 또 가려고 합니다                                                                                    딱 잠만 자고 오자면 그럭저럭 가성비 일 듯 박일 여행 갔다가 하루 더 체류하는 바람에 급히 저렴한 것 찾아 간 곳인데 공간이 너무 좁아 답답했고 아침 식사때 한국인은 저희 가족 뿐인듯 했습니다지금은 중국 관광객이 없을 듯 합니다만ㅎ저렴한 가격에 공항 근처에서 하루 묵기에 추천합니다 공항까지 택시비가 원 정도 나오네요제주공항에 저녁에 도착한다거나 근처로 잡고 싶다면 거리도 가까운 포시즌 호텔 추천 다만 방은 그리 넓지 않으니 이런거 상관없다면 괜찮고 좋음 집으로 돌아가는 비행기 시간이 이른 아침이나 새벽때라면 제주공항 근처 숙소에 머무는것이 좋은데 이 곳은 공항 인근의 중저가 호텔중 하나입니다 숙소가 다소 비좁긴 하지만 시설은 깨끗한 편입니다 시내에 위치하고 있어 인근 지역으로 관광하기 좋습니다그것은 좋은 위치와 예산 호텔입니다 어디든지 걸어 갈 수 있습니다    제과점 신라 면세점까지 약   거리에 있습니다 도로 건너편에있는 아이들을위한 놀이터가 있습니다 뒷문을 사용하십시오 그것은 제 딸들에게 즐거움이었습니다 방은 넓고 깨끗했습니다 욕실도 좋은 크기였습니다 매트리스는 나에게 힘들었지 만 너무 비싸지 않았다 직원도 도움이되었고 친절했습니다신제주 공항에서 가깝고 도심 한가운데 있어서 접근성이 좋음 건물은 너무나 오래 되서 년대 시간이 멈춘듯한 건물외형 및 내부 건물 로비에 들어서면 쾌쾌한 습한 냄세아침 조식은 가격에 맞춘 딱 그 가격에 밥  전체적으로 거두절미하고 저렴한 숙박료만 생각한다면 아주 훌륭한 호텔이고 혹시나 저렴한 가격을 망각하고 이런저런 수준을 기대한다면 그것은 고객이 도둑심보그냥 도심에 있는 아주 오래된 시설에 저렴한 가격의 숙박시설이라 보시면 됨아침 조식이 뷔페로 나와서 좋았고 방도 넓고 깨끗해서 좋았습니다하지만 몇 개의 방은 리모델링이 덜 되었으며 길가에 신호등이 없어서 불편했습니다하지만 큰 길가에 위치해 택시 잡기에는 편했습니다좋은 호텔 깨끗하고 너무 멀어서 나는 운 좋게도 발코니가 딸린 방이 있어서 나는 행복 해요 물 필요 없음 각 객실에는 작은 용기 수건 이지만 작은 호텔 또한 욕실 발매트는 안 합니다  아침 식사는 보통 수준 입니다이 호텔이 중국 단체 관광객들을 위한 건물이 조용한 여행지 라스베가스 스트립에 있는   호텔이 조용한 이 곳이  년 세가지  방은 더러웠고 침대 시트와 싶었던 손님의 머리카락이 있었어요 여행객들을 위해 특별한 한 많은 모기를 살 수 있는 시푸드 바베큐 침대는 딱딱했다 위치는 도시 중심부에서 멀리 떨어져 있습니다   친구 여기에 묵지 마세요 제주도 최고의 호텔이 지 가격 대비 가치가 있지만 위치는 중심 시설은 나쁘지 않지만 방은 깨끗하고 매우 빠른 와이파이는 나는 이 호텔이 최고의 관광지와 잠을 자는 것 뿐 성급 럭셔리 호텔이 있지 공항에서 호텔로 오는 버스노선이 다양할 뿐만 아니라 근처에 다양한 식당이 있어서 편리합니다 또한 동문시장에서 가까워 걸어서 왕복이 가능합니다  방은 깨끗하고 방음도 잘 되어있습니다 화장실은 청결하며 냄새도 나지않습니다 냉난방도 개인이 조절할 수 있어서 본인에 맞춰서 키고 끌수있습니다  다음번에도 제주도에 방문한다면 또 머무르고 싶습니다연말마다 매년 제주에 오는데 그때마다 이용하는곳이며 주변객실 소음도 없고 서비스 친절 청결 모두 만족하는곳입니다  제주도에서는 이곳보다 비싼곳도 여기보다 좋은곳을 찾기힘듭니다제주에서 묵었던 숙소 중에 가장 깨끗하고 좋았어요 규모는 작지만 곰팡이 하나 없이 청결했고 침구도 너무 깨끗해서 잠을 진짜 푹잤어요ㅎ  재방문의사 프로예요 좋은 참고가 되셨음 좋겠어요공항에서 택시로 분정도 걸리는 거리에 있었습니다 저와 친구들 모두 정말 만족하구요 다음에도 오고 싶을만큼 깨끗하고 조식 또한 맛있었습니다  여긴저기 다니기 좋을 위치고 수건도 넉넉히 챙겨주시고 청소도 해주셔서 정말 좋았습니다 바다전망이라 확트여 좋았구요  추천합니다조식포함 공항근처인데도 가격이 합리적이였습니다 이불 베게 매트리스까지 다 커버를 사용하는게 맘에 들었어요  조식도 심플하면서도 종류별로 제공되서 맘에 들었어요 주차공간이 다소 부족하기는 했는데 그래도 이 가격대비 만족이예요출장 때문에 제주도에 오게 됐습니다 가성비가 좋고 전체적으로 깨끗했습니다 난방이 가능하여 방이 따뜻하고 아주 좋았습니다 또한 옆에 편의점이 있어 더 좋았습니다 제주에 출장때문에 자주가는데 주로 모텔에서만 숙박을하다가 비슷한가격에 제주스테이호텔을 예약하였는데 시설이 뛰어나거나 그렇지는 않지만 직원들의 서비스마인드도 좋았고 조식까지 무료로 이용할수 있게해줬어요사진은 괜찮아 보이지만 방은 꽤 오래되었습니다 봄철에는 에어컨이 없으므로 창문을 열어야합니다 청결은 아주 가난하다 그러나 로비에있는 직원은 매우 도움이되며 승강기가 없으므로 객실 바닥에 짐을 실을 수 있도록 도와줍니다  다시 여기 머 무르지 않을거야방은 너무 작았습니다 겨울에는 에어컨이 없습니다 창문을 열어야 해 예약 사이트의 사진은 물고기 눈 렌즈로 찍은 것처럼 오해의 소지가있었습니다 다시 여기 머물러 있지 않을거야 까다 롭지 않은 여행자에게 좋습니다이 호텔은 로비에서 친절한 스태프들이 있는 현대적이고 환경 우리를 편안하게 묵을 수 있는 곳 같습니다 레스토랑은 좋은 쾌적한 서비스를   이 호텔은 근처에 시장과 액세스할 수 있습니다  훌륭한우리가 제주를 여행했을 때 우리는 몇 밤을 여기에 머물렀고 우리의 렌트카에 앉아있는 탐색 장치는 찾기가 매우 쉬웠습니다 공항에서 약  분 우리 아파트에는 발코니가있는 바다와 아름다운 거실과 주방이 있으며 기본 요리 도구가 있습니다 아파트의 지시 사항은 영어로되어 있지 않지만 모든 경고문을 읽고 특히 밖으로 나가면 동시에 발코니 문  개를 닫지 않는 것에 대한 번역 앱을 사용하십시오 또한 아파트에는 거실 패널과 장소의 조명을 제어하는 리모콘이 있습니다 셀프 세탁 시설은 없지만 공항으로 돌아가는 것처럼 차로  분 거리에있는 저렴한  시간 코인 세탁소가 있습니다 제주에 돌아올 때 좋은 가치의 기반이므로 다시 예약해야합니다널찍하고 깨끗한 방 나는 그 지역이 새롭고 개발되고 있다고 생각하지만 그것은 매우 조용합니다 바다를 바라 보면서 발코니에서 멋진 전망을 즐기실 수 있습니다 친절한 직원이지만 영어는별로하지 않습니다 우리는 에어 컨디셔너 문제에 관해 그들에게 말했고 우리는 통제를 이해할 수 없었다 다음 날 그들은 우리에게 제어판이 훨씬 더 조용한 광고를 영어로 녹음했습니다 우리는 공항에 오전 시 택시를 요청했다 비록 사소한 문제가 있었지만 직원은 우리를 위해 또 다른 택시를 불렀고 우리가 택시를 얻었다라고 확신하게했다 우리가 그들과 대화를 나누기를 바랍니다 그들은 아주 좋은 사람들입니다 다음 번에는 분명히 거기에 머물러있을 것입니다 공항에서  분 거리에 교통 정체가없고  달러에 들기 때문에 매우 합리적인 요금입니다시설이 그냥 일반 모텔급이었으며 분명 실내 흡연이 금지되어 있는데 객실에 들어가니 담배 쩐내가 났음 그냥저냥 박하기엔 좋지만 그 이상 그 이하도 아니었음연동의 입구에 위치한 리모델링 완료 호텔 객실은 깨끗하고 위치도 좋왔으며 친절한 직원들의 환대로 좋왔다 혼자 쓴 개의 침대방이 부담이 되긴했지만 내가 이용한 방으 ㄴ층에 있던  프린세스 코스의 방으로 이벤트성의 방이였다층 프린세스룸에 묵었는데 바다가 보입니다 방도 넓은편이고 욕조도 넓습니다 복도끝에 스모킹 라운지가 있고 엘리베이터도 개가 있습니다  조식은 만원인데 가격대비 훌륭합니다 제주공항과 가까워서 버스나 택시로 바로가면 분도 안걸리고 택시도 잘잡힙니다 번화가에 위치해 쇼핑하거나 커피를 마시거나 술한잔 하기도 좋습니다 호텔의 상태도 좋고 서비스도 마음에 들었습니다 적극 추천할 거고 다음에 갈 예정입니다 공항도 가깝고 먹거리도 많은 곳이었습니다완전 시내중심에있는 스카이파크 객실도너무깔끔하고 일반비지니스호텔생각해서 잠만자야지싶었는데 너무좋았네요 바오젠거리에일정이있어서 예약하게됐는데 좋았어요 주차장은좁았지만 특별히문제될껀없었어요 지하층에 세탁실이있어서 제주여행에서는 이만한곳이 또있을까싶어요 좋아요비행기가 못뜨게되는 바람에 급하게 예약하고 묵었어요 공항에서 가깝고 저렴하고 평이 좋아 예약했는데  정말 깨끗하고 시설이 새거여서 좋았어요 직원분들도 친절하시고 어쩔수 없이 발이 묶여서 당황스러웠는데 친절하시고 주변에 식당 추천까지해주셨어요 감동입니다 추천해요가장 저렴한 방을 이용했습니다 나쁘진 않으나 객실에 침대 두개를 넣어 좀 좁아 보이는 듯한 느낌이 있었습니다 하지만 지내보니 딱히 좁다는 생각은 안 들었고 충분히 넓었습니다 화장실은 문이 없으며 안쪽에 변기와 샤워대가 유리로 나눠져 있고 각각 문이 있습니다 수건은 총 장이었으며 와 냉장고 와이파이가 있습니다이 호텔에 박을 묵 공항에서 버스를 타고 정류장만 만 이 호텔은 걸어서 갈 수 있습니다   근처에 위치해 쇼핑과 식사 공간 그리고 작은 마켓   호텔은 깨끗하고 직원들을 만날 수 있는 간단한 작은 엘리베이터가  만 그는 우리가 체크 인 에서 아침식사를 제공하고 있습니다   객실 및 시설은 아주 좋았습니다 욕실에 문이 없 별도의 화장실 및 샤워실   아침 식사는 표준 및 커피나 차를 선택할 수 있습니다 의 시스템   공항까지 가는 버스 안에서 버스 역에서  만최상의 위치  쇼핑 근처 레스토랑 버스 정류장 공항에서 가깝고분  정거장 만 해당  깨끗하고 편안함 그들은  만 아침 식사는 기본적이었지만 괜찮습니다  단점 화장실 문 없는 방 온도를 조절할 방법을 알고 하지 마십시오좋은 호텔이었고 위치는 모든 곳에 가깝고 깨끗했어요 히터 의 온도 이 없거나  변경 밤에 잠을 자는 게 저는 저 작은 창 열기 권한이 있는 또한 욕실 문을 사진 에 해당 할 것이 없었습니다저렴한 가격에 편안하고 깨끗한 숙소입니다  무엇보다도 주인의 친절함이 감동적이었습니다  무료 아침밥도 다양하게 준비되어 배불리 먹었어요  다시 오고싶은 리조트입니다멋진 깨끗하고 친절하고  편리한 해안이 모두 아이씨씨 좋은 가치 강력 추천합니다 한가지 단점은 독서용 램프 하지만 쉽게 극복 이다 오아시스 같은 곳이다 특히 좋아 보일 수 있는 정원소리 체재 회의 약 분 도보 근처에 국제 컨벤션 센터 근처에 대포해안 주상절리 절벽 천제연 폭포 제주 여미지 식물원 및 짧은 드라이브 거리에 떨어져 있는 사찰    우리가 묵은 개가 있는 아파트  명 일 편안하고 합리적으로 잘 갖추어 져 있는 주방 시설그릇 밥솥 가스레인지 매우 합리적인 가격들이 간단한 요리를 맛볼 수 있는 가족 여행을 하면 피곤하다 한국 음식   간단한 아침 식사가 제공되는 몇 가지 메뉴 역상인   컨시어지는 아주 아름다운 사람은 영어를 잘 하지 못하지만 아주 친절하고 협조적이며 체크인을 할 때도 밤에 약  사용할 수 있습니다 이 곳에 작은 공원이 있지만 작은 차가 거리에 가득 차면 해당 수도 있습니다 리셉션이 시간 을 사용하고 있었어요  서귀포에 있는 분 거리 떨어져 있고 많은 좋은 레스토랑 쇼핑 센터 등이 있다 있습니다 차를 여행 제주 그룹에 있는 경우에 유용합니다  같이 다니는 사람들에게 이 곳을 강력 추천합니다 아파트호텔 회의 아이씨씨 또한 적절한 가족 휴가를 더 먹을 수 있지만 주위에 모르겠네요저는 그냥 이 날  강력히 추천합니다 좋은 곳에 묵고 싶다면 훌륭한 숙박시설 아닌 제주의 컨퍼런스 센터도 있다 아침 식사는 제공하여 그들은 영어를 잘 하지 않지만 매우 도움이 되었습니다 심지어 관리를 해야 하는 공항 택시 투어는  시간 환상적인 객실에 있는 무선 인터넷 깨끗하고 편안한 바다 전망을 즐기실 수 있습니다에서 걸어서 분 정도 걸리는 위치에 있다 생긴지 얼마 안되어서 그런지 전체적으로 매우 깨끗하고 쾌적하며 온수도 잘나오고 난방도 잘 됨 다만 조식은 기대하지 않는 편이 좋을 것 같다함덕해수욕장 바로 앞에 위치하고 있으며신축건물은 아니나 개보수로 인하여 방컨디션도 나쁘지 않습니다제주에서 날씨 좋을 때 빛나는 해수욕장이 함덕과협재금능인데 순위로 칠 만큼 에메랄드 색이 예쁩니다신관 클린룸과 구관 씨뷰 두군데서 숙박하였는데 아무래도 신관은 깨끗한 대신 조식이나 굿앤굿스마트를 이용하기가 불편함 구관 씨뷰는 제일 작은 패밀리룸에서도 바다 뷰가 잘 보이는대신 아무래도 노후된 시설들이 좀    그래도 아름다운 함덕 해변에 가깝다는게 제일 좋은 장점인거 같음우선 프론트에 계셨던 직원 모두 친절하고 상냥해서 좋았습니다 원래는 패밀리룸으로 예약하고 갔지만 오션뷰 럭셔리룸으로 추가했더니 기존 금액의 오만원 남짓 더 냈지만 후회없었어요 체크인 시간보다 조금 일찍 갔더니정리가 아직 안돼 짐만 놓을 수 있도록 얼리체크인해주셨네요박 일로 스위트 취사 가능 에 투숙 체크인 아웃 직원 친절합니다  함덕 해수욕장과 매우 가깝고 근처에 갈 만한 곳 많아 좋습니다  모던 하지는 않지만 깨끗하게 관리되어 있고 사우나는 투숙객에게도 유료 입니다 ㅠㅠ가족여행으로 숙박했고 취사가능한 구관에 묵었다 함덕해수욕장 뷰를 볼 수 있어 좋았고 오래되어서 내부시설은 별로 좋지 못하다업무 출장이라 공항서 가까운 연동사거리라 위치 굿 신축 건물인듯 깨끗하고 냄새 전혀 나지 않아 쾌적 더블침대 싱글 침대 스타일 객실로 넓고 욕실도 넓은 로비에는 식사 메뉴 있는 카페도 있음가격은 박 당 약   직원들은 영어가 갖춰져 같은 작은 섬이지만 제주도 허용 범위 및 가격 값이 될 것이다 침대는 좋았고 화장실 이 좋은 하지만 적절한 크기의 수건들이 나를 포기하지 않았다 해 하지 않았다 싫든 도착했을 때 리셉션에서 아무도 자고 있는 방에 직원들은 카운터 뒤 저도 절전 가 겨울이라 생각합니다 위치는 어디에나 드라이브 음식들은 중요하지 않았다 그러나 많지 않기 때문에 주변에서 주의 할 점이 호텔에서 하룻밤을 묵었습니다 방은 넓고 잘 꾸며져 이곳은 꽤 깨끗하고 화장실은 제외하고 제주 시의 중심부에 있는 쇼핑 지역과 가깝습니다 주차 공간은 다소 제한적 직원들은 친절하고 전문적 이지만 있는 곳과 편의점이 근처에 있습니다동문시장 바로 앞에 있어 시자에서 맛있는 먹거리 사먹고 식사하며 저녁시간을 보낼 수 있는 장점이 있습니다 호텔은오랫동안 사용한 가구들이 부모님이 어린 나를 데리고 여행할 때 묵었을 법한 분위기를 만들어 줍니다 오랫동안 정갈하게 잘 사용한 물건 들이 정겹습니다 오래된 것들에 애저이 있는 분이라면 꼭 한 번 머물러 보시기르 추천합니다 깨끗하고 직원들이 친절합니다 층의 갤러리 옆 쉼터에서 차 한잔 하며 여유를 즐기기에도 좋습니다 아침식사가 없으나 시장에 가서 아침식사를 할 수 있어 불편하지는 않습니다 전 트리플룸에 묵었었는데 가격대비 정말 괜찮았어요 트윈룸이나 다른 리뷰들에선 좁다거나 시끄럽단 글도 보고 갔었는데 그런건 전혀 없었구요뷰가 좋은건 아니었지만 만원짜리 트리플룸에서 뷰를 따질순 없죠 겨울이었는데 방도 뜨끈뜨끈하고 엄청 깔끔하고 좋았어요  단점을 굳이 뽑자면 조식이 없다는 점과 방과 달리 화장실은 춥다는거 하지만 다른 점들위치도 좋았어서 재방문의사도 있습니다더블 침대가있는 객실을 예약했으며 객실이 매우 넓고 침대  옷장 공간과 침실 사이에 칸막이가 있음에 놀랐습니다 방은 매우 청결하며 오래된 건물의 마모 흔적이 보이더라도 잘 유지되었습니다 그러나 나는 칸막이가없는 쪽의 모든 방을 통해 연결된 거대한 발코니가있는  층 방에 배치되었습니다 차가운 공기를 들어올 리도록 슬라이더 도어를 열 때 날씨가 완벽했을 텐데 스크린 도어에 슬라이더 도어를 열지 않고 불편 함과 안전을 느끼지 못했습니다 아마 관리인 또는 주인이었던 프론트의 여성은 매우 수용하고 있었고 그들이 여름 동안 단지 통상 작용할 것 인 에어 컨디셔너 통제를 나에게 제공했다 욕실 욕조에는 샤워 커튼이 없으므로 샤워를 할 때 욕실 절반이 젖었습니다 그것 이외에 그것은 큰 호텔이었고 제주의 한가운데에 전략적으로 위치했던 나의 체재를 정말로 즐겼다 지하의 쇼핑 센터의 출구 의 뒤에 그리고   로부터 약간의 단계 이 지역에는 많은 쇼핑 및 레스토랑이있어 호텔에서 아침 식사를 제공하지 않더라도 선택의 폭이 넓습니다 또한 호텔에서 몇 걸음 떨어진 곳에 버스 정류장이있어서 도시 루프 투어를 이용할 수 있습니다 지하철 쇼핑몰이 도시 내의 대부분의 중요한 지역과 연결되어 있지만 시간이 없으니 후회합니다우리는 공항과 시장과 가까운 곳에서 뭔가를 찾고 있었고 이것이 좋은 선택이었습니다 그것은 오래된 호텔이지만 잘 관리되고 깨끗하고 훌륭한 직원입니다 동문 시장은 길 건너편이며 지하 상가 입구는 약 입니다 방은 정말로 따뜻하고 편안하다 우리를위한 베개는 평평했다 그러나 여분의  점을 받았던 것에 관한 어떤 문제도 없었다 가까운 곳에 수많은 식당이있다 스타 벅스가 길을 따라 간다 어느 날 밤 우리가 저녁을 먹었다 바다쪽으로 곧장 내려 앉는다 한국어 바베큐와 서양인들과 함께 준비하는 직원들 우리는 또한 버스 정류장에서 제주시 관광 버스를 타고 일일 패스를 사용하여 주변을 둘러 보았습니다 우리는 제주에서의 숙박과이 호텔에서의 숙박을 즐겼습니다 시장을 가로 질러가는 사진좋은 위치 검은 돼지 거리와 가까운 동문 마켓도 걸어서 신문사상대 지하 상가 방과 욕실은 괜찮았다 저렴한 가격을 고려하면 그들은 매일 제공되는 무료 광천수를 제공합니다 우리는 박을 전통적인 객실에서 묵었는데 즐겁게 묵었다두번째 방문함 최근에 리모델링을 한 건지 별관이 지어진 지 얼마 안되는건 지 새 집 같은 인테리어에 구석구석 신경 쓴 흔적빨래건조대까지 구비되어 있음  가성비 최고 협재해수욕장과 한림공원이 매우 가까워 위치적으로는 매우 좋으나 난방이 살짝 아쉬웠음 방은 개로 나뉘어 있어 좋았으나 내부가 매우 좋거나 그런건 아님 그냥 가성비 괜찮은 정도위치가 협재해변 도보 분 거리에 있어서 위치가 매우 좋구요  수영장도 있어서 여름에 놀기 딱 좋습니다  제주도에서 이만한 위치에 이정도 시설을 갖추고도 가격 경쟁력이 있는 숙소는 거의 없을 것 같습니다  재방문 의사 입니다새벽시까지 시끄럽고 새벽시부터 공사시작 사전에 통보도 없었다 객실 바닥 청소상태 불량 맨발로 걸어다니니 무척 불쾌하다  화장실에 핸드워시에 물을 섞어놓았다  서비스가 모텔만 못함체크 인과 체크 아웃도 아주 빠른 그냥 통과해 예약을 접수 및 증거 를 볼 수 있는 체크 아웃 룸 키를 카운터 이 다 전송할 수 있습니다   이 호텔은 좋은 전망이 협재 해변이 가까운 곳에 위치 호텔에서 걸어서 약 분 정도만 이 협재 해변두번째 방문함 최근에 리모델링을 한 건지 별관이 지어진 지 얼마 안되는건 지 새 집 같은 인테리어에 구석구석 신경 쓴 흔적빨래건조대까지 구비되어 있음  가성비 최고 협재해수욕장과 한림공원이 매우 가까워 위치적으로는 매우 좋으나 난방이 살짝 아쉬웠음 방은 개로 나뉘어 있어 좋았으나 내부가 매우 좋거나 그런건 아님 그냥 가성비 괜찮은 정도위치가 협재해변 도보 분 거리에 있어서 위치가 매우 좋구요  수영장도 있어서 여름에 놀기 딱 좋습니다  제주도에서 이만한 위치에 이정도 시설을 갖추고도 가격 경쟁력이 있는 숙소는 거의 없을 것 같습니다  재방문 의사 입니다새벽시까지 시끄럽고 새벽시부터 공사시작 사전에 통보도 없었다 객실 바닥 청소상태 불량 맨발로 걸어다니니 무척 불쾌하다  화장실에 핸드워시에 물을 섞어놓았다  서비스가 모텔만 못함체크 인과 체크 아웃도 아주 빠른 그냥 통과해 예약을 접수 및 증거 를 볼 수 있는 체크 아웃 룸 키를 카운터 이 다 전송할 수 있습니다   이 호텔은 좋은 전망이 협재 해변이 가까운 곳에 위치 호텔에서 걸어서 약 분 정도만 이 협재 해변개 집을 합쳐 놓은 듯 합니다 위치 객실 및 수영장 등 시설 모두 훌륭합니다 다만 일하는 직원 분 수가 충분하지 못합니다 참소로 중국인 투숙객 분이 내국인 보다 많아 보입니다신제주 중심지역인 노형오거리에서 차로   정도 밖에 떨어져 있지 않으면서도 중산간 지역으로 올라가기 때문에 아주 조용하고 경관도 좋습니다 년에 신축된 호텔리조트입니다 시설이 매우 깔끔하고 좋네요 저는 호텔 객실에 투숙했는데 객실이 일단 좀 넓어요 좁고 답답한 비니지스 호텔급과는 다릅니다 욕실은 너무 넓어서 어색할 정도에요 욕조라도 하나 놔 줬으면 좋았을법 합니다 생수 병 회용 슬리퍼 개가 무료 제공됩니다 회용 칫솔치약은 없고 세면용품은 제공됩니다 침대는 푹신한 느낌이 매우 좋았습니다 주변에 아무것도 없기 때문에 조용하기는 정말 이루말할데가 없어서 좋았구요  호텔에서 대부분 비치되어 있는 구둣주걱이나 구두닦이용 천이 없어서 조금 의아했습니다 그리고 실내 수영장이 너무 작고 사우나에 샤워시설만 있지 탕이 없어서 아쉬웠습니다아름다운 리조트 무료 조식 뷔페 우리는 주 건물에서 떨어져있는 별개의 가족 스위트에 머물렀다 아주 아주 깨끗하고 아주 새로운 조용한 주방 거실 분리 된 욕실 및 침실 한 마리의 고양이 만 별도로 주차 할 수 있습니다 스위트 룸에는 수영장이 없습니다  박 동안 머물렀다 아무도 어느 날 밤에 방을 청소하지 않았다마치 해외에 있는 기분이 들정도로 여유롭고 새들이 지저귀고 정원의 꽃들도 너무 아름다웠습니다 새소리에 깨보긴 처음이네요ㅋ 객실스파도 너무 좋구요 인테리어 하나하나 세심하게 신경쓴 흔적이 보입니다 우리나라에서 보기드문 리조트라고 감히 말할수 있겠습니다 조식도 너무훌륭했고 뷰서비스 모두 모두 좋았어요 관광지면 사람들로북적이고 제대로 쉬는거 같지도않은데 고급스럽고 해외에 온 기분으로 너무좋않습니다 매년 다녀오는 곳이예요 요즘엔 좀 낡은 모습이 곳곳에 보이긴 하지만 아침식사는 꽤 만족스러운 편입니다 스탭들도 매우 친절해요네식구가 머물기에 넓고 인테리어도 무척 이뻐 좋았어요 다만 전에 비해 부대시설이 축소되서 저녁도 다른곳에 나가 먹어야해서 불편했어요 수영장에서 아이들은 놀기 좋았지만 그외엔 아무것도 할것이 없어 아쉬웠어요넓은 실내 월풀 분 이내바닷가 해변은 아니지만 벤치가 있어요 아침도 맛있었어요 출장으로 왔는데 나중에 가족과 다시한번 오고 싶네요더운 여름 멀리 보이는 제주바다와 함께 야외풀에서 가족들과 즐거운 시간을 보냈습니다 제주의 전통적인 형태와 지중해의 양식을 가져다 놓은 듯한 고급스러움이 지내는 내내 좋았고 특히 조식으로 제공되는 뷔페는 아이들도 어른인 저와 아내도 무척 좋았습니다말그대로 전형적인 게스트하우스라 좋았는데 문제는 방이 너무 추웠어요 한겨울인데 이불두개 덥고 잤어도 추워서 계속 잠에서 깨었어요 가격저렴해서 혼자여행하는사람에게 좋은데 난방안되고 방음이 약해서       네요처음 들어갔을때 외국인들이 많아 놀랐습니다 그런데 깨끗하고 친절한 분위기에 금방 적응할 수 있었고 저녁에 외국에서 온 분들과 맥주도 마시고 이야기도 할 수 있어 좋았습니다 인상좋은 대표님과 친절한 메이씨 싱가폴에서 오신 미스터 장 모두 오랫동안 기억하겠습니다  사업 일정상 방문한 제주 여행에서 즐거운 기억을 많이 만들어주신 호스텔 코리아측에 감사드립니다 저는 이마트 앞에 있는 곳과 시장 앞 쪽 두 군데를 다 자 보았는데 신기하게도 한 분께서 두 군데를 관리하시더군요 ㅎㅎ   첫날은 저녁에 이마트 맞은 편에 갔는데 키크고 건강한 여자분께서 웃으며 반갑게 맞이해주셨습니다 밤에는 라운지에 불러모아서 맥주도 사 주시고 유쾌하게 웃어주셔서 같이 여행오신 분들이 모두 좋아했네요    둘째 날은 아침에 일보고 낮에 동문시장 쪽을 갔다가 똑같은 호스텔 코리아를 발견하고 요시 들어갔어요 지점인가 보더라구요 그런데 이게 왠일 어제 밤에 반겨주시던 분이 또 거기서 일하고 계시더라구요 이름이 타샤 인가 나타샤 인가 그랬던 것 같은데 망치를 들고 작업하다가 환하게 반겨주시던 모습이 아직도 기억에 나네요 확실히 제주도 여자분들은 뭐든 다 하실듯 ㅎㅎ 친절하시고 경쾌한 성격의 분신술을 쓰는 직원분께 다시 감사드립니다 ㅋㅋㅋ  여관이나 펜션에 비해 가격도 저렴하고 훨씬 깨끗한 시설을 이용할 수 있어서 좋았습니다 공항까지의 거리도 기본요금 정도 나오니 저에겐 최적의 숙박장소입니다  호스텔 코리아 화이팅입니다 다음에는 여행 일정으로 방문할께요 방도 깨끗하고 청소나 관리도 잘 됐습니다 다만 화장실 휴지에도 요금이 부과되고 수건을 주지 않는 점은 유의하세요 그 점만 빼면 직원들은 아주 친절하고 다정했습니다 어떤 직원은 아침 식사를 할만한 근사한 식당까지 직접 운전해서 우리를 데려다 주기도 했습니다 위치도 중심가에 있어서 다음에도 숙박할 생각입니다월 중순에 묵었는데 제가 가본 호스텔 중에 최악이었습니다 에어컨이 너무 낡아서 시끄러웠기 때문에 밤에 끄지 않고는 잠을 잘 수가 없었죠 그러면 방이 아주 후텁지근해집니다 방충망에는 구멍이 송송 뚫려있고 또 구멍이 없다고 해도 창문이 꽉 닫히지 않아 모기가 방으로 들어오는 데 아무런 문제가 없습니다 밤 시간의 절반 정도는 모기를 잡느라 시간을 허비했죠 마리 잡는 건 일도 아닙니다 그뿐 아니라 아주 시끄러운 레스토랑술집이 창문 바로 밑에 있는데 새벽 시까지 영업을 합니다 아주 끔찍한 밤이죠  접수처의 직원은 괜찮아 보였고 호스텔 자체는 그렇게 나쁘지는 않습니다 객실도 널찍하고 욕실도 괜찮았어요 겨울에는 다시 갈 수도 있을 것 같지만 여름에는 절대 가지 않을 겁니다제주시에서 가까운 부띠끄 호텔이에요 모던한 인테리어로 꾸며져 있고 전체적으로 어두운편이지만 고급스럽습니다 자동으로 물내려가는 변기와 강력한 수압이 인상적이었어요가격 대비해서 시설이 깔끔하고 좋습니다 주변에 바다가 가까이 있어서 편합니다 다만 바다가 잘 보이지는 않습니다 무난합니다이 호텔은 꽤 오래되었지만 동남 아시아에 비해 매우 깨끗합니다 마을의 측면에 자리 잡고 있지만 매우 안전하고 거리의 레스토랑과 편의점이 인접 해 있습니다 가을에는 매우 바람이 부풀어 오릅니다시내의 외곽에 위치한 환경 깨끗하고 만족스러운 서비스와 좋은 객실이었지만 정말 호텔에서 할 일이 많지 않습니다 결정하기 전에 활동을 한다고 생각하고 어쩌면 저는 느낌 다음에 방문할 것을 시도해 봅니다 다최근에 오픈한 호텔 입니다 좋은 가치 깨끗하고 좋은 슈퍼마켓 미터 떨어져 있습니다 버스 정류장이 가까운 호텔 입니다  아주 나쁜 디자인 공간 호텔 이 표준  짐을 넣어 준 안전 금고 및 변경다른 많은 없음 부주의 한 직원  관광지 장소  수 없습니다 하드 먹을 곳을 찾기 위해 편안한 침대 매트리스와 베개가 아주 부드러운 커다란 수 없습니다만약 그 안에서 힐링하고 많이 돌아다니고 잠만 잘게 아니고 경관도 즐기고 충분한 시간을 보내실거면 너무너무 좋아요  고양이도 너무 귀엽고 알파카 두마리도 사람 무서워하지만 독특한 경험이었어요  근데 저희는 안타깝게도 잠만 자서 그 점을 고려한다면 위치가 좋지는 않았어요 ㅠㅠ 만약 진짜 관광하느라 바빠서 잠만 잘 용도라면 도심 안에 머무는게 조아용  부부주인 분들 다 너무 친절하셨어요 로그 파크 리조트는 시골에서 주말을 보낼 수있는 환상적인 장소입니다 로그 파크에 머물기 정말 즐거웠습니다 지역은 평화로 웠고 산의 놀랄만한 전망을했다 그리고 직원은 상당히 친했고 도움이되었다 이 곳은 지역에 머무르고 그 지역을 돌아 다니고 싶다면 훌륭한 장소입니다 제주를 여행하며 잠잘 곳이 필요한 경우 추천하지 않습니다  아이들을 데리고 오면 즐거운 시간을 보내고 야생 동물을 놀 수 있습니다 우리가 첫번째로 우리 오두막에 체크인하기 위해 끌어 올렸을 때 우리는  개의 알파카에 의해 만나게되었다 로그 파크  와 함께 위치한 작은 애완 동물 농장도 있습니다 우리는 아침 산책을 위해 일찍 일어나서 농부가 돼지 사슴 염소 닭에게 먹이를주는 것을 지켜 보았다 아이들은 그것을 좋아할 것입니다  이 장소를 즐겁게하는 다른 사면도 있습니다 매일 밤 까지 캠프 파이어가 있습니다 를 원하면 소유자가 사용할 수있는 장비가 있습니다 그들은 구매를 위해 메인 통나무 집에서 음식 물 맥주를 구입할 수 있습니다  좋은 장소 나는 주말 동안 친구 그룹과 여기에 오기를 원합니다를 호텔 찾기 어렵지 않습니다 이곳은 한라산은 자연이 만든 국립 공원이 근처에 계획을 가는 사람들에게 좋은 선택이 될 것 또는 돌아왔습니다 집은 새롭고 깨끗합니다 있다 있는 요리할 수 있는 작은 주방 때 가격대비 하우스  제주에서 꼭 묵을 합니다 전용 교통을 가진 여행객에게 적합합니다우선 가격대비 좋았습니다 복층을 사용하였는데 층에는 더블침대하나 싱글침대 하나가 있었구요 층에는 더블침대 하나 있었습니다 매일매일 조금씩 청소해주시고 수건도 새걸로 갈아주십니다 다만 아쉬웠던점은 화장실이였습니다 실리콘에 물때가 좀 있었고 수압도 아침에 매우 약했습니다다른시간에는 괜찮았음 어두울때 길 들어가기 매우 어두우니 조심해서 들어가세요 그거 외에는 친구랑 묶기 최고의 장소였습니다말 그대로 할 수 있는 이 곳은 신선한 공기 우리는 당나귀들  본 꿩 의 잔디밭 산책을 즐깁니다 자기 수용할 수 있는 주방은 일행을 이용하여 근처에 편의점은 없었다 난방 시설도 있고 나오지 않는 차는 있지만 자신의 교통 수단에 있을 때 필요 바랍니다바오젠거리 바로 가까이 있기 때문에 식사하러 다니기도 편하고 쇼핑하기 매우 좋았어요 예전에는 시내에서 좀 먼 호텔에 투숙했더니 꼭 차를 가지고 식사를 해야만해서 음주운전의 부담이 항상 있었거든요제주신시가지에 위치에 있으며 공항하고도 택시로 여분안의 거리에 있음 접근성의 좋음과 주위의 인프라가 잘 되어 있어 이곳에만 가도 걱정 할 것이 없음 숙소시설 또한 위생적이며 편안한 시설이 되어 있어 적극추천함바오젠거리에 위치해있고 공항에서는 택시타고 올 수 있는 거리입니다 반대로 호텔 나와서 큰 길 건너 신라스테이 앞에서 버스타면 공항까지 금방 갑니다 일반 스탠다드 룸 이용했는데 방이 엄청 넓습니다 청소 해주시는 분도 친절하게 인사해주셔서 기분 좋았습니다 다만 리셉션 직원분들은 좀 더 친절해야할 것 같습니다 너무 무관심한 태도에 기분이 좋지는 않았습니다공항에서 택시타고 올 수 있는 부담없는 거리에 위치해있어 좋습니다 더블베드와 싱글베드가 같이 있는 트윈룸을 이용했는데 생각보다 훨씬 넓어서 여러명이 투숙하는데 전혀 불편함 없었습니다   다음에도 저녁비행으로 제주도에 늦게 도착하면 다시 이용할 생각이 들 정도로 굉장히 만족하고 돌아갑니다저희는 이곳에 박 일 동안 묵었었어요 위치는 정말로 끝내주고 저희는 공항까지 오고 가는 픽업 서비스에 각각 대략 원 정도를 냈습니다 로비의 안내 데스크는 체크인과 체크아웃을 위한 곳이에요 그런데 이상하게도 그들은 체크인 때 저희의 여권을 요구하지 않았고  확인 용지만 요구했었어요 체크인은 신속하게 진행됐습니다 또한 저희가 빨리 도착하기도 했고 이곳에 손님이 별로 없어서 저희는 본래 체크인 시간인 오후 시 전에 방에 들어갈 수 있도록 허락받았어요 와이파이 신호가 로비에서만 잡혔지만 방에 무선 인터넷이 깔린 컴퓨터가 있었습니다 로비의 안내 데스크는 저희의 여행 일정에 맞춰 택시 투어 서비스를 제공해줬어요 중국말을 할 수 있는 운전기사는 원이었고 영어를 할 수 있는 운전기사는 원이었어요   방은 아주 컸었고 벽에 걸린 텔레비전의 크기 또한 엄청나게 컸어요 방을 뛰어다닐 수 있을 정도로 많은 공간이 있었지만 옷장은 너무 작았고 옷걸이도 몇 개 없었어요 소파는 오직 두 사람만 앉을 수 있었고 방의 크기와는 전혀 맞지 않을 정도로 너무 작았어요 각 방에 미네랄 워터와 주스가 배치 돼 있었습니다   이 호텔의 위치는 아주 좋아요 왜냐하면 카페 선술집 식당 편의점 옷 가게와 화장품 가게가 모두 가까이 있기 때문이지요조용한 지역에있는 작은 게스트 하우스 공항 버스 터미널 및 도심에 적당한 곳에 있습니다 넓고 편안하고 합리적인 아침 식사를 제공하는 객실 장소는  일간 머물러야 만했던 것과 같았습니다                                                         우리 체재를 여기에서 즐겼다 게스트 하우스는 조용하고 깨끗하며 한국인에게는 편안한 침대가 있습니다 공항과 가깝고 버스 정류장에서  정거장 떨어져 있습니다 아침 식사는 훌륭하고 일찍 가능합니다 트레킹이 너무 많아서 좋습니다 주인은 또한 공항에서 영빈관에 도착하는 모든 방법에 대한 세부 정보를주었습니다 여기에는 한국의 택시 기사가 포함되어 있습니다 프로에 위치  공항 쇼핑 장소 및 레스토랑 바오 첸 스트리트과 제주 버스 터미널 친절하고 영어로 말할 수있는 직원 공항에서 아침에 택시를 찾는데 도움이되는 곳 클린 룸 직원들이 매일 방을 청소합니다 아침 식사는 괜찮 았습니다 단점  버스 터미널까지 직진하는 버스 경로가 없습니다                                                                                                       저는 호텔에서 일 밤을 가족과 함께  위치도 좋고 근처에 있는 명소들 거리  분  새 호텔 좋은 매우 편안했어요  친절한 직원들의 멋진 여행을제주도의 중간에 위치해 접근성이 좋을 것으로 예상하여 예약했다 한라산을 가는 것이 아니라면 굳이 한라산근처에 숙소를 정할 필요는 없을 것같다 고층을 원했으나 공실이 없어 배정 받지 못했다 숙소는 일반적인 아파트의 구조와 비슷하다 밤 늦은 시간에 바늘이 필요한 일이 있어서 요청했으나 없다고 한다 호텔에서는 바늘을 요청하면 주기도 하는데 아쉽다 이외에 불편한 점은 없었고 부대시설이 많아 편리하다친절해요 방 개 거실 신청했는데  체크인 때 욕조가 있다고 해서 방개 거실 욕조로 바꿨어요 아기랑 지내기는 좋아요  주변에 암것도 암것도 없어요 골프 하는거 아니면 ㅜㅜ 조식도 별로에요 일단 관리가 잘되서 깨끗한 느낌이 듭니다 위치는 설악산 쪽이라 이 쪽에 관광하신 분들에겐 최적의 리조트이지만 아니신 분들은 이동시간이 오래 걸리니 미리 확인 하세요  아침 조식은 좋았고 산책로가 있어서 여유롭게 쉬기 좋습니다창문도크고 발코니가있어서 편하더라구요 화장실도깨끗하고 수압도 쎄고 좋았습니다 아침에 산책로가있는데 좋더라구요 조식은아주크진않지만 좋았어요 저녁디너도 한번먹었는데 가격은비싸지만 반찬도 간이세지않고 좋더라구요 안에는 편의점도있고 스파도있고 동끼리 연결되는 통로가있어서 편했어요시설은 오래되었지만 아침에 산책로가 너무 좋아서 마음에 듭니다 가족들과 같이 가기에 좋은 것 같습니다제주도 출장차 방문했습니다 일단 로비는 특급호텔 못지않은 깔끔함에 놀랐네요공용 가있어 업무에 도움이 되었구요 제주 관광책자도 많이 비치되어 있어서 커피한잔 하면서 정보를 많이 얻었네요 객실은 필요한것들은 다 비치되어있구요 침구류 가구 깔끔했습니다더블침대와 함께 싱글침대도 있어서 두명이서 여유롭게 지내다가 왔습니다 다음날 아침에 식사도 괜찮았어요 공항으로 가는길도 가깝고 한 분정도 걸리네요 전체적으로 만원대 가격으로 이정도 시설 서비스면 대 만족합니다  깨끗하고 넓으며  인용으로 충분합니다 그러나 두 침대가 더블 침대이고 더블과 싱글 침대가 아닌 경우 더 좋습니다   전략적 위치 편의점 근처 커피 숍 편의 시설  깨끗하고 괜찮은 욕실 채식 및 해산물 옵션이 포함 된 무료 일일 아침 식사 수프를 아주 좋아합니다 그리고  김치 김치를 놓치지 않았다 손님 용 주차장이 있습니다  가능한 경우  다리미를 제공하십시오우리는이 호텔에  박 이상 머물 렀으며 서비스는  일부터 끔찍했습니다 우리는 도착했고 주인이 거기에있었습니다 우리는 시에 호텔에 도착했습니다  청소 때문에 오후 시에 방이 준비 될 것이라고 들었습니다  우리는 매우 피곤해서 일찍 체크인을 요청했고 그 방은 마술처럼  원에 이용할 수있게되었습니다 청소 때문에 사용할 수 없었습니까  현금이 없었기 때문에 나중에 지불하도록 요청했습니다   일째 호텔을 떠났을 때 우리는 멋진  로 환영 받았다 안녕하세요 좋은 아침 제발 좋은 무례한      고객을 더 잘 돌봐야합니다 인보이스를 요청한 후 나중에 수령하라는 지시를 받았습니다 그는  일 후에 우리에게 그것을 주었고 우리는 리셉션에서  분을 기다리게했다 그들은 준비하는데  일이 걸렸다  비가 많이 올 때 우리는 우산을 요청했고 그는 임대료로  원을 요구했습니다     실례합니다 새로운 것이 입니다  리셉션에서 종이컵을 원한다면 지불해야하며 무료는 없습니다  호텔을 떠날 때 그들은라고만 말했다 다시 한 번  달러를 거의 지출 한 후에는 냉담한 안녕이라고 감사합니다  나는 멋지려고 노력했지만 분명히 효과가 없었습니다 우리가 한국에서 일반적으로했던 것처럼 끔찍한 봉사는 거기에서 돈을 쓰지 않습니다나는 제주에서의 나의 지난 밤 동안 공항 근처에서 가장 적당하고보기 흉하지 않은 호텔 이었기 때문에 여기에 머물렀다  방  저는 우리 셋이 트윈 룸을 예약했습니다 더블 침대  개와 싱글 침대  개로 구성되어 있습니다 객실과 욕실은 깨끗하고 편안하며 매우 넓습니다 그들은 모든 세면 용품 치약 샤워 젤 샴푸 수건 등을 제공 했으므로 걱정할 필요가 없습니다 그리고 그들은 미니 냉장고와 주전자를 가지고 있습니다  주차  호텔 앞과 지하에 주차가 제공됩니다 실수하지 않은 경우  근처  호텔은 주요 도로 인근에 있습니다 도보  분 따라서 택시가 필요하면 문제 없습니다 또한 호텔 근처에 버스 정류장이 있습니다 공항까지는 택시로    분이 소요됩니다 인근에있는 편리한 상점  제주 공항 인근의 호텔을 찾으시는 분들에게 추천합니다여기에서 두 번 머물 렀습니다 처음에는 제주에서 만났을 때 싱가포르에서 두 번 비행 한 후 택시로    분   로 매우 저렴했습니다 그러나 호텔의 주소를 한국어로 표시해야하며 운전 기사는 의 호텔 주소를 입력해야합니다 그렇지 않으면  를 찾기가 어렵습니다 두 번째 머물은 우리가 서울에서 아침 출발하기 전날 밤이었습니다  두 번 모두 트윈 룸에는 더블 침대와 싱글 침대가 있습니다   호 방은 새롭고 좋은 크기이며 모기장이있는 이중창 또는  중 유리창 샤워기가있는 욕실 만 있습니다 주전자가 있고 칫솔  치약이 없어도 안전하고 커피  차는 없습니다 일본 호텔과는 달리  침대는 열심히 이었다 그러나 나를 위해 다행히도 우리는  개의 트윈 방에서 의 그룹이었다 그래서 예비 침대의 위안자를 사용하여 침대 위에 눕히고 나에게는 훨씬 부드럽습니다 그리고 우리 모두는 위대한 창문으로 너무 조용하기 때문에 여기에서 꽤 잘 잤습니다  포함되었던 자유로운 아침 식사는 대부분 단순한 한국 스타일이었다 그러나 우리가 지불했던 가격을 위해 불평하는 아무것도 정말로 정말로 제주 서귀포의 다음 호텔 인 데이즈 호텔은 더 비쌌지만 아침 식사는 낮에 포함되지 않았습니다 매일 요리에 약간의 변화가있었습니다  호텔의 위치는 좋은 편이며 많은 레스토랑과 인근에  개 이상의 슈퍼마켓이 있습니다 인터 시티 버스 인터체인지는이 호텔에서 매우 도보 가능합니다 그러나 서문 시장과 동문 시장은 버스로 짧은장점  공항과 가깝다  단점  청소를 안한다 한겨울인데 모기가 방에 마리정도 있었다 잡아도 계속 나와서 잠을 잘 수가 없었다 벽에는 모기를 잡은 흔적들이 많다 침대 베게에서 냄새가 난다제주 박일 여행 중 하루는 중문 하루는 오렌지트리에서 숙박했는데요  가격이 저렴한거에 비해 시설은 그럭저럭 괜찮았는데  주변 소음이 좀 심했어요 제가 묵었던 그 날만 그랬던건지는 알 수 없지만요 쉬러 간 휴식처에서 잠을 편히 못잔거 같아 여행끝이 불편했습니다 ㅠ ㅠ우리는이 호텔에서  박을 묵었습니다 호텔은 좋은 위치에 있지만 더 좋은 점은 없습니다 침대는 매우 단단했고 베개는 작고 단단했습니다 방은 나이가 들었고 약간 거칠지 만 나이가 들었습니다 우리 화장실은 기능적이었다 그리고 아침 식사는 적당했지만 최소한이었다 의 사무실은 대부분 압력 청소 쿼리에 응답 및 예약 안팎에서 압력을 받고 있었다 서두르지 않지만 우리가 있다면 위치는 매력이 될 것입니다제주도를 여행하면서 나는 하룻밤 머물렀다 이 호텔은 예하 투어를 통해 예약 한 패키지의 일부였습니다 내가 나의 첫날 여행 후 체크인하는 것에 도착했을 때 내가 예하 투어에서 구입했던 꾸러미에서 벌써 지불 받았지만 응접에서의 사람은 나에게 지불하게하려고 노력하고 있었다 어쨌든 그것은 빨리 분류되었습니다 그 남자는 그가 거기 새로 왔다고 그래서 나는 그에게 휴식을 줄 것이다 이 호텔은 구시가의 훌륭한 위치에 있습니다 옛 도심에있는 동문 시장과 지하 쇼핑몰은 단 몇 분 거리에 있습니다 호텔은 나이가 들었지만 기본이지만 조용하고 깨끗합니다 침대는 매우 단단했습니다 방은 약간의 연기 냄새가 있었지만 나쁘지 않았습니다 전반적으로이 장소는 예산에있는 사람들을 위해 짧은 체류를 위해 좋았습니다제주시 역사적인 구시가지 아늑한 곳입니다 할 수 있습니다 모든편의점 레스토랑 카페 술집 쇼핑 교회 박물관 등 대부분 거리 잘 작동되었어요 걸어서 갈 내에서 길에서 바로 걸어나와서 또는 호텔 리셉션 한 전화를 필요한 경우 풍부하다 객실은 에어컨난방 시설이 깨끗한 욕실이 있습니다 물 히터 사용할 수 있습니다 무료 아침식사는 간단해요 커피 커피숍이 판매를 위한 짐을 유물들은 또한 무료로 사용할 수 있습니다 분 차로 편안한 침대와 깨끗한 침구 침구류 나는 다음에 묵을 곳이 이 아름다운 섬을 다시 방문할 기회가 필요한 경우 다시 묵을 것이다싸고 좋은   표준 트윈에서 표준 트리플로 업그레이드되었습니다   큰 방과 욕실    매우 빠른 와이파이 연결 쇼핑 거리 근처에 내가 가까이에 말했을 때 말 그대로 근처에 한 블록 떨어진 곳 나는 위치가 우리에게 매우 편리하다고 기대하지 않았다 그래서 나는 매우 행복하다  그것은 무료 아침 식사가 없다 당신은  편의점  카페가 구석을 돌면 서 걱정할 필요가 없습니다 그들은 당신의 당일 치기 여행을위한 교통편을 제공합니다 투어 택시 요금은 하루  원입니다  전반적인 경험은 매우 좋습니다 매일 좋은 밤을 잘 수있었습니다장점 넓은 객실과 욕실 버스 정류장 근처에 있는 좋은 위치 조용한 호텔 저렴한 가격 빠른 무료 무선 인터넷 단점 큰 수건도 레스토랑 카페가 없고 호텔 직원들은 영어를 잘 구사하지 하우스 키핑 있지 않으며 기본 요청해야 합니다갑작스런 출장으로 인하여 급하게 알아보게 되었는데 직원분께서 친절하게 안내해 주셔서 감사했어요 같이간 직원들도 맘에 들어 하더군요 낮에는 일때문에 정신없었지만 저녁에는 푹쉬고 휴가 온 기분으로 잼나게 놀다가요 담에는 가족들이랑 같이 오는걸로ㅋㅋ원하는숙소 예약안되 걱정했는데 내부시설보고 결정 가격도저렴하고 부대시설도 저렴하고 협재해변이 가까워서 나름괜찮아서 다음에 와이프랑 다시오기로협제해변인근에 부동산 문제로 제주에 갑자기 가게되었다 혼자이고 조용히 하루 보내고 싶어 우연히 찾았던 더제주리조트 성수기가 아직 아니라 그런지 정상요금이 아닌듯 저렴했다 건물은 지어진지 좀 되어 보였으나 올라가보니 조명도 복도에 들어서는 느낌도 깔끔했다 해변에서의 거리는 차로 약 분이 안걸리는 정도 뒷마당에는 수영장도 보인다 잔디밭에 잠시 누워서 하늘을 보고 있던 시간이 내겐 참 좋았다 여름이 본격적으로 시작되면 사람들이 많아 이렇게 조용히 쉴 수는 없었겠지 온수도 잘나오고 가격대비 이렇게 편한곳은 없겠다 싶다 뭐 다른곳을 다 가보진 않았지만 아주 만족스러웠다 성급 고급호텔을 찾는게 아니라면 조용히 쉬고 싶을 때 가족과 함께 와도 좋겠다 펜션 혹은 콘도 급의 큰방도 있다고 하니 가족단위도 가능한 실속만점의 숙소였다       바퀴벌레 마리 나왔어요 낮에 물놀이 하고 갔을땐 없었는데 밤에 시쯤되니까 발코니에 마리가 있더라구요 그래서 문 다 닫고 방안에는 없나 살펴보니 마리가 나왔어요ㅡㅡ 그래서 컵같은거로 엎어두고 간신히 잤고요  아침일찍 체크아웃했는데 카운터에계신분께 말하니 한달에 번 방역하고 주변에 산이 많아 그렇대요 한적하고 조용한 호텔을 원했지만 바퀴와 함께했어요  바퀴와 함께 자고싶으신분들 추천한림에서 다소 외곽에 위치 하고 있지만   한적한 제주의 정취를 느끼시고 싶다면  베니키아 더 제주를 추천해드리고 싶네요  친철한 데스크 직원들이 있구요  조경이 무척 잘되 있어요  비지니스 단체 여행을 원하시면  대형 세미나실과 체력단련실 그리고 수영장등의  부대 시설이 잘되 있어 편안한 시간을 보낼수 있을듯 싶네요  주의 사항 흡연자 분들은 구내 매점에서 담배를 판매 하지 않으니  꼭 구매후 체크인 하시길한림에 위치도 좋고 깨끗하고 좋았어요 다 좋았는데 특히 샴푸 바디워시랑 드라이기가 호텔드라이기 치고 쎄서 좋았습니다좋은 숙소 예약해서 여행하는 내내 너무 기분 좋았습니다 가격이 저렴해서 기대 하나도 안하고갔는데 너무 깨끗하고 바닷가랑도 가까웠어요 뷰도 너무 좋고 노을지는건 정말 좋았어요 직원분들도 너무 친절하시고 좋았습니다 감사합니다신축이라 깨끗한 건물과  객실이 너무 마음에 들었습니다 층이라 바다도 잘 보이고 전망도 좋았어요 저렴한 가격에 너무 좋은 숙소였어요주인 분이 매우매우 친절하시다 버스 잔돈이 없어 걱정했는데 그런 문제까지 해결해주시려고 도와주셨고 룸컨디션도 매우 깨끗했으며 방이 온돌이라서 뜨근뜨근 잘 있을 수 잇었다 뷰도 훌륭해서 제주도의 진풍경을 느낄 수 있었다 매우 만족최근 리모델링을 한건지 건물이 새로지어졌는지 굉장히 깨끗했어요 조식도 천원뿐이 안하는가격에 가볍게 먹을수 있어 괜찮았습니다 사장님도 너무 친절하시고 이것저것 많이 도와주셔서 너무 감사했습니다 다음에도 방만 있다면 이쪽으로 이용할 예정입니다애월 바다 바로 앞에 있는 오션뷰 숙소를 예약하고 싶어서 찾아보다가 괜찮아보여서 예약하고 다녀왔는데 위치도 좋고 바다가 보이는 루프탑 풀빌라 따뜻한 온수풀 역시 너무 맘에 들었어요이번 제주 여행에서 숙소를 고르는데 뷰를 제일 우선적으로 따져서 예약하고 다녀 왔습니다 뷰도 만족하고 스파도 따뜻하게 하고 와서 좋았어요청결하고 깨끗해서 좋았어요 내부 인테리어가 예쁘고 내집처럼 편안하고 안락한 분위기였고 바다가 보이는 따뜻한 온수풀 최고입니다애월 바다 바로 앞에 있어서 위치가 좋고 전망도 굳ㅎㅎㅎ  바다가 보이는 스파 스위트 따뜻한 온수풀 너무 좋았던 호텔 완벽해요완전 럭셔리한 호텔입니다ㅎㅎ제주에도 워낙 숙박시설이 많아 고민을 하던 참에 지인통해서 숙박했습니다 깔끔하니 럭셔리한게 저한테는 만족했어요차 없이도 올 수 있는 바닷가 앞 호텔이에요 주변에 아침 운동 하기도 좋구요 호텔 앞에 카페도 많아서 멀리 가지 않고 호텔 주변에서 할 수 있는게 많았어요  밥도 맛있고 객실도 편안해서 다시 와서 쉬고 싶어요 직원분들도 친절하고 호텔 내 특산품 매장 사장님 특히 넘 좋아요 꼭 가보세요단체관광객이 많은 곳입니다 아침에도 시끄럽고 밤에도 시끄러웠어요 리조트형이라 소음이 다 울립니다 방의 청결상태는 좋지 않았습니다 깔끔한 호텔을 원하시는 분은 다른 곳이 좋겠습니다시설은 조금 오래됐지만 도로에서 떨어져 있어 조용하고 따뜻하고 편안한 호텔이었습니다 직원도 친절하고요 새 시설을 원하신분은 다른 호텔을 이용하시고 조용하고  편안한 호텔을 원하신다면 이 호텔도  좋은것 같습니다박 일의 제주 올래와  오름투어 일정중 박을 하였다  대중교통이용시 분정도의 거리에 위치하여  조금먼듯하였으나 올래 코스에 위치하여  렌트를 하지않코도 대중교통이용으로 올래길 탐방을 할수있어 좋았고 인 올래 게스트 하우스 이용시 보다 저렴했으며 모든면에서 가격대비 괜찬았다깔끔하고 가격대비 좋습니다 관광지랑 접근성 좋구요 단지 주차장만 좁아요 참 직원분들이 너무친절합니다 잘 쉬다갑니다지은지 좀 되었지만 저렴한 가격에 깨끗하고 모텔급보다 시설에 거부감이 없어 가족과 함께 하기 좋다  공항에서 랜트카나 택시로 분정도며  주변에 편의점 및 맛집들도 꽤 많아  여행을 시작하기에 좋은 장소 이다  모든 객실이 오션뷰이며 작지만 아늑한 맛이 있다  주차시설에는 자리가 많진 않지만  건물 뒷편에 주차시설이 있으며 호텔내  편의시설로는 맛사지 에스테틱과 사우나가 있다  여행의 피로를 사우나로 푸는것도 좋은 방법이겠다   꼭 들려서 숙박해야할 특별한 특색은 없었지만 괜찮은 가격과 깨끗한 시설이 장점이겠다 출장으로 왔는데 건물외관과 복도 카페트등은 낡았지만 방 시설은 나쁘지 않습니다 가격도 많이 비싸진 않고요 주변에 편의점이나 빵집등이 있고 해안도로 산책할 수 있어서 괜찮습니다위치는 호텔에서 분 걸리는 위치라 좋음 주위환경도 반대편에 이마트있고 카페 식당 다있어서 좋음 다만 룸컨디션이 낡았으며 잠자는 윗방 화장실 물내려가는 소리가 계속 들려서 숙면을 취할수 없었다 가격은 저렴하여 만족하였음한국식 온돌 바닥이 있는 방에서 자 보니 이 객실이 정말 좋더라고요 이 곳에서 기분좋게 깨끗하게 안락하게 그리고 편안하게 머물렀어요 카지노가 아주 가까이 있어요  굉장히 많은 가게가 있는 길을 따라 분 정도 걸어가면 돼요 위치가 아주 좋은 점이 많은 곳이예요우리는 이 호텔이서 이틀밤을 있었는데 우리 단체 관광에서 짜준 대로 였다 하지만 위치나 가격에서 보면 추천하지 않을 것이다  말했듯이 대부분 잘 돌아갔다 또  유저들이 말했 듯이 아시아를 기준으로도 작은 방에 화장실도 제대로 갖춰지지 않았다 어떤 사람은 방에 화장실이 있는 것을 선호 할 듯 방이나 복도에 뜨거운 물도 없었고 방에 있는 히터는 그럭저럭 괜찮았고 잠도 그런대로 잘 잘 수 있었다  여기에 한 사람이 끔찍함 최악의 호텔 이라고 했는데 그 말은 이 호텔을 제대로 설명해 주지 못한다 그 사람은 침대에 이가 있었던 것 같은데 우리는 그런 것은 없었다바로 앞분거리 버스정류장이 있고 함덕과 김녕해변으로 뚜벅이 여행자 렌트카 여행자 모두에게 편리한 곳 친구들과 함께 여행하며 조용히 여유롭게 지낼 수도 즐겁게 담소를 나누기에도 적합한 곳이었어요 인도풍 인테리어와 사장님이 매일 청소해주시는 덕분에 깨끗한 상태를 유지한 곳입니다 돌담지나서 예쁜 제주집 한채 정성들인 집안과 방안 그리고 마당까지 음악과 좋은 향으로 포근하게 맞이해주는 따뜻한 공간이였어요 소란스런 월정리와 함덕사이에 자리잡은 동복리인지라 더 평화롭고 아름다운곳이였어요  아침식사도 맛있었어요 따뜻한 봄날에 다시 가고싶어요 너무너무좋았어요 엄청 반갑게ㅡ맞아주는 부부들 너무 기분좋았구요 시설또한 새롭게 리모델링한 내부에 따뜻하게 잘지내다 갑니당 인도스타일 인테리어도 너무 맘에 들었구요 그리고 마스코트 윈디도 너무 기여웠어요 다시다시 또올려구여 고마웠어요 샨티샨티 마지막여행밤이라게스트하우스에오래있지못했지만 시골집에 온듯한포근함과 편안함으로 하루를 보냈음숙소를 예약하지 않아 우연히 묵게된 곳인데 제가 사전에 검색해서 간 다른 숙소들보다 훨씬 좋았어요 다만 네이버 같은 검색 엔진에 잘 나오지 않아 찾기 어려웠을 뿐 ㅜㅜ 밤늦게 가서 그 동네를 살펴보지 못한 것이 아쉬웠지만 게스트하우스의 전체적인 따뜻한 분위기 그 분위기를 만드신 사장님의 미소 깔끔한 시설 조명 향내음 모든 것이 좋았습니다 제가 지냈던 일을 제주 중 가장 편안한 밤이였어요 조식으로 상큼한 샐러드와 따뜻한 삶은 계란까지 강력 추천입니당  저도 음주가무를 좋아하지만 진정한 힐링은 술이 아니라 숙면을 취하게 해주는 분위기에서 온다는 것을바다 바로앞이라 좋아요 호텔 뒷쪽길에는 식당 개의 마트까페펍등이 많아서 저녁에도 산책하고 즐길거리가 많아요 올리브영  매장도 있어요 맘스터치번가피자생돈까스 등 배달가능한 음식점들도 많아서 편합니다 바다앞 잔디밭에서 저녁산책하기도 정말좋아요 번째 방문인데 건의사항이 있다면  객실 전등을 형광등색으로 밝게 했으면 좋겠어요 스탠드가 개있는데 전구색  불빛이라 다소 어둡게 느껴져요 함덕해수욕장이 바로 앞이라 아이들 놀기 정말좋아요 다시 방문할 의사가 있습니다  근처에는 현재는 공사중인 닭머르 해안길스위스마을돌문화박물관산굼부리에코랜드 등이 있고 세화쪽의 해녀박물관도 있어요 호텔뒷쪽으로 합리적가격대의 식당이  많습니다굳이 맛집 써치안하고 가셔도 되요 주택가사이에 덕림사 라는 사찰이 있어서 아주 흥미로웠어요오션뷰 방을 예약하신다면 만족스러운 뷰를 얻을 수 있습니다 직원들은 모두 친절하고 청결도도 나쁘지 않았지만 기기가 좀 연식이 되서 그런지 에어콘에서 소리가 많이 나서 자다 많이 깼네요가족들과 함께 방문했습니다 인이 같이 묶을 방이 없어서 인 씩 나눠서 묶었습니다 객실은 유럽식 설계인 것 같은데 옛날 건물이 되서 그런지 시설이 전반적으로 낡았고 유럽식 설계가 오히려 불편하게 다가왔습니다 호텔 위치가 제주시에서 꽤 가야 하는 점이 안좋았지만 객식 경치가 좋았고 근처 바닷가 접근성이 좋았습니다오션뷰로 가장 좋은 최적의 호텔입니다 바로 앞이 함덕해수욕장입니다 요즘 유명한 델문도 카페도 바로 오분거리에 있습니다함덕 해수욕장에 위치한 곳으로 좀 오래되었지만 가성비 좋고 비치 뷰가 좋은 호텔이에요 밤에는 어선의 불빛도 보이고 멋져요우리는 시에 다음날 타야 할 비행기가 이 호텔을 예약했습니다 이 호텔은 제주 국제 공항에서 분 거리입니다  체크인할 때 영어로 이야기를 나눌 수 있었고 공손했습니다 그는 그래서 우리가 샤워 우리에게 드라이브를  일할 온수기 좋았음 한국에 처음  없었습니다 우리에게는 눈이 뜨이며 우리는 열린 마음으로 가서  방은 크고 전망도 좋았습니다 층에 있는 스타벅스 보너스입니다저와 제 가족 단위의 한 가운데에서 하룻밤을 머무르지    수준기 우리 방은  의 바로 위에 있는 호텔 화이트 하우스 표지판 앞에서  호텔 위치 이 호텔에 도착 키 코드   기본적으로 이 호텔을 선택하기 때문에   약 분  드라이브를 제주공항 시에 출발 했는데 다음 날 아침에   위의 스타벅스가 우리의 아침식사와 스낵이 처리되어 있어  또한 많은 레스토랑과 식당을 함께 할 수 있는 서해안  댐핑할 호텔이 위치한 곳이 오른쪽에 있습니다  이 곳에서   용두암 록 명소 호텔에서 오른쪽으로  할 수 있는 유일한 비치 호텔 앞에 검은 바위  주차는 무료로 제공합니다 같이 주차장 드라이브에 입장 하지 마십시오 대신 길을 호텔 뒤쪽에 있는 고객만 해당 그 후 짐을 가지고 엘리베이터 로비와 통로로 엘리베이터를 타고 층 체크인 카운터는 어디에 예  수준에 있기 때문에 스타벅스가 있는 로비는  수준기   호텔 직원들 호텔 프런트 직원은 친절한 그는 유창한 중국어중국 은 영어를 거의 못합니다 하기도 했습니다  호텔 방 제가 묵었던 첫 번째 호텔이 매우 높은 천장 수직 공간이 주는 방 과장 수평적으로 침실은 너무 큰 화이트 컬러의 인상은 문서에 의해 및 벽과 천장 퀸 사이즈 침대 개 큰 나무 테이블 소파 앤티크 나무로 된 의자가  화장대 의 거울 및 헤어 드라이기 작은 냉장고 주전자와  쌍의 슬리퍼가 마련되어 있습니다  체크인 호실이었는데 마지막 밤이 독특한 호텔이다 체크인 데스크 바로 옆 방은 말 그대로 이라고 생각하는 한 하지만 이었기 때문에 할 수 없이  ㅆ기 때문에 우리는 수 없고 우리는 그것을  이 호텔을 예약한 물가 풍경을 뽐내 고 있는  우리가 잡은 모든 벽이 아름다운 파란색 공사 사진과 같이 우리의 창이 있어서 스타벅스 드라이브를 통해 사람들이 불안 하기 때문에 실제로 보면 방에 커피를 기다리다 할 수 있습니다  한 저녁 나는 방에서 담배 냄새가 나는 것이 있다고 프런트 데스크에 대해 이 호텔  금연실 그는 나에게 이야기를 해 주었다  창을 열 수 희망 의 나를 진정시키면서 다 하지만 창을 열고 에 분사 하고 그 냄새가 남아있 우리는 그 연기 냄새가 화장실에서 나온다는 것을 알고 문  물론 그가 받은 화장실 아주 역겨운 내부 이었다 프론트 데스크에 전화를 하는 그 사람을 다시 볼 수 있었다 나 자신에게 말 그대로 문 앞에서 해 문을 열고 그 위로 하는 어깨를 으쓱 저에게 말하지 않고 냄새가 나는 그렇게 나쁘지 않았지만 그는 우리를 위해 팬이 될 것이다  요청한 다른 방을 이동할 수 있는  정확하게 계산을 했기 때문에 이전 했지만 직원들이 전체 다   앞으로  에 도착했을 때 이 사랑스러운 소리에 잠을 깨는 소형의 착암기 직원들은 저희에게 통보 하지 않은 것을 우리에게 경고하는 것이 공사현장 또는  시작 작업 항질염성 탄식 하다  전반적으로 호텔 시설도 깨끗하고 위치가 좋고 무관심한우리가 묵었던 바다 한 가운데에 있는    있었습니다 전망은 그냥 아름다운 벽을 통해  일층에 스타벅스가 있는 매우 편리합니다 우리의 방은 매우 깨끗하고 꽤 큰 공항 옆에 위치해 편리한 호텔이라 아침 일찍 비행기 약간의 소음이 있을 수 있지만 모든 약    뜨고 조용했습니다 여러 식사 옵션도 있었습니다  몇 가지 단점이 있다 아무것도 없는 영어로 체크인 시에 도착했을 때에  사막화 이었다 가 없고 사람들도 명령이 읽을 수 없습니다 몇 번에 전화하여  하였습니다 나는 분은 기다렸다 아무 것도 없습니다 전화 번호가 있어서 그 후 체크인 카운터를 하나 나는 그 소리를 듣는 방 링잉을 직원 및 바로 뒤에 있다 이 모든 것이 좀 거슬렸다 어쨌든 체크인을 할 수 없어 어떻게든 에어컨 버튼들이 모두 한글 빨간색 또는 파란색 기호 또는 받아들이지 않습니다 그리고 멋진 방 문을 열고 있는 창 그런 다음 온 침대 박스 스프링 매트리스 없이 같았지요 의 두 번째 밤 매트 로 침대 위에 패딩 을 대단히 도움 이해하고 특이한 비판이 아니라 전형적인 한국 호텔을 한국 호텔 그냥 조심 하지 않을 경우 언어 통역 문제가 있을 수 있습니다 다시 여기에 묵을 것이 아쉽지만 요청하기 위한 몇 가지 질문을 하고 카드를 준비하게 했다골프장과 함께 있는 라온 호텔은 주차나 내부시설이 좋았습니다 밤늦게 제주에 도착해서 자고 사우나하면 다음날 시작하기가 좋습니다 애월이나 협제와 가까워서 새벽에 수우동 예약하러 가기도 편했습니다 이번에는 라온 호텔리조트로 숙소를 정했습니다 리조트   으로 예약 하여 사용 중인데 최대 명 사용 가능한 크기에 명 사용하니 공간도 여유롭고 주방 시설화장실 시설도 잘 되어 있어 아주 편하고 즐겁게 지내고 있습니다   한라산이나 애월해변 한림공원 등 인기 있는 관광 명소들로의 접근성도 좋고 호텔 건물에 있는 사우나 시설도 훌륭하여 가족들도 모두 만족스러운 곳 이라며 좋아 합니다   대가족이나 명 이상 여행 시 추천할 만한 숙소라 생각 됩니다  친구들과 번개골프투어를 위해 라온호텔을 이용했습니다 골프텔은 클럽하우스 가기전에 위치해있고 중간에 편의점과 수영장도 갖춰있네요 저희가 이용한곳은 동인데 방개에 침대개에 화장실도 방마다있어 불편하지않았어요 거실도 넓어서 올레시장에서 사온 싱싱한 회와 마늘치킨에 한라산소주를 곁들여 즐겼습니다 아침에 클럽하우스에 가시면 조식세트를 즐길수있는데 예전에 타이거우즈가 방문하였다고하여 타이거우즈세트가 있네요 그외 성게미역국 우거지해장국 등도 있으니 취향대로 즐기시고 란딩하시면 되겠어요 여름에 다시한번 와보고 싶네요협재금능해수욕장을 걸어서 갈 수 있고 방에서 비양도 를 볼 수 있어요  뷰가 좋고 수영장 수질이 깨끗하게 관리되고 있다는 느낌을 받아서 너무 좋았습니다 차없이 호텔에서 제공하는 공항 무료 셔틀 버스를 타고 다녀왔는데 편하게 푹 쉬다 왔어요  친구랑 도 시켜먹을 수 있어서 좋았습니다  아마 가족끼리 여름에 피서겸 오시면 좋을 것 같아요  다만 호텔 층 식당은 정말 비추해요 맛없습니다 조식 별로에요리조트내 시설은 너무 상태가 좋고  골프를 함께 할 수 있으며 숙박자에겐 사우나와 물놀이 시설을 저렴하게 이용 가능 금늘 해수욕장과 가까이 있어 여름을 즐기기엔 너무 합당함 공항ㅇ에서 셔틀 운행 함제주시 구도심 중심에 있고 공항하고 정말 가깝습니다 건물은 리모델링해서 너무 깨끗했어요 숙박비는 만원이 못되게 저렴한데 두사람 아침식사도 간단하게 제공됩니다 너무 너무 좋아요 담에도 꼭 이용할 겁니다호텔 객실은 심플하고 깨끗해서 사용하기 불편함 없었습니다 직원분들도 친절했어요  조식도 깔끔하니 좋았습니다 주차장은 호텔 맞은편 무료주차장 이용 가능합니다 호텔 앞에 안내 표지판이 있으면 더 좋을것 같네요 참고로 인도에서 온 관광객들이 많은것 같습니다 공항근처라서 예약했는데 직원분들 친절했지만 예약자명단에서 누락되고 당황스러웠네요 다행히 빈방이 하나 남아있어서 들어갔지만  찻길이 옆에있어서 소리에 민감한저는 잠을 제대로 못잤습니다 하루정도 급하게 묵기에는 괜찮습니다 가격도 저렴하고 친절하고요우리가 그룹으로 여행했을 때 체크인은 원활했습니다 우리 방은  층에 있습니다 기본 시설 기본 아침 방은 꽤 넓고 외부에서 긴 하루를 보낸 후 침대가 편안합니다 겨울은 방에있을 때 문제가되지 않습니다우리가 본 방과 그 밖의 모든 것이 깨끗했습니다 접수는 때때로 결석 했습니다만 약간의 소음을 내고 잠시 후에 뛸 것입니다  이 장소에서 재료와 색상 선택은  이상합니다 호텔에서 기대할 수있는 것은 세련되고 아늑하거나 다른 것입니다  년대 사무실에있는 호텔 영화 에 맞도록 무작위로 디자인 된느낌 그리고 품질 관리스티커는 여전히 대부분의 벽과 천장 패널에 부착되어있었습니다   음식  설명을 철저히 읽으십시오 포함 된 아침 식사 뷔페는 실제로 많은 빵과 원하는 계란을 먹을 수 있음을 의미합니다 물 외에는 아무것도 없습니다  차  커피 아 그리고 스프 경영진이 작성한 통지의 첨부 사진을 참조하십시오 조식은 토스트 수프 계란 튀김 및 기타 몇 가지입니다  당신이 무슬림이 아니라면 이라는 단어와 그것을 향한 화살표를 렌트 룸의 천장에 페인트  고정해야 할 필요가 있습니다 나는 한국의 다른 호텔 또는 다른 곳에서는 그것을 보지 못했습니다  인터넷은 자유로웠다 그것은 일종의 것이었지만 한 번에 약  초 이상 작동하지 않았습니다 한 번에 하나의 장치로 제한되어있는 것으로 보임  제주도는 많은 공공 장소에서 무료 를 제공합니다 모든 에서 동일한 동작 이런 이유로  상자를 체크하십시오저렴한 가격이라고는 믿기지 않을 정도로 좋은 시설이였습니다 난방이 시부터 들어와서 이전에는 별도의 난방 장치를 틀어야 한다고 전달 받았지만 별도의 난방 장치 없이도 지낼 수 있었습니다 굉장히 청결한 편이며 호스텔의 가격과 제주 전체의 가격을 생각한다면 굉장히 저렴한 가격에 가성비 최강의 숙소입니다 아침 식사를 하기에 적합한 식당들도 몇 있기 때문에 아침을 나가서 먹어도 됩니다 그리고 바로 앞에 편의점이 있기에 필요한 것이 있다면 언제든지 나가서 사올 수 있는 환경입니다 여행지와의 거리는 약간 있고 주차가 약간 불편하지만 호스텔의 가격과 다른 서비스를 생각한다면 불편할 것은 아닐 정도로 좋은 서비스와 숙소의 퀄리티였습니다 다른 분들이 무료 조식이라고 되어 있는데 조식은 일 당 천원을 받습니다 저는 신청하지 않았지만 아침에 나가면서 봤는데 천원 이상의 퀄리티를 제공하기 때문에 조식이 필요하시거나 근처 식당을 가기 싫으신 분들은 제공하는 조식을 이용해도 될 것 같습니다위치도 나쁘지 않고 조용했고 시설도 괜찮았습니다 저렴한 가격 생각하면 안에 티비도 있고 샴푸린스바스 드라이어 등등 필요한거 다 있는게 너무 다행이고 좋았네요 와이파이도 잘 터지고요 사장님도 굉장히 친절하셔서 기분좋게 묵을 수 있었습니다 딱 잠깐 묵기 적절한 가성비 좋은 숙소였습니다 추천합니다친구랑 둘이서 트윈룸에 묵었는데 박에 만원도 안 하는 가격에 조식도 포함이고 객실도 청결하고 따뜻하니 좋았어요 너무나 만족했어요 층 카페도 분위기가 너무 좋았구요 가격이 저렴해서 가성비가 짱인 호텔이예요 친구여행이나 커플여행이나 모두 추천해요화장실이 딸려있는 인실에서 묵었습니다 일단 가성비가 좋습니다  일하시는분 사장님으로 보이시는 분 다들 친절하십니다 조식이 셀프라 토스트랑 계란후라이는 직접하셔야됩니다 약간의 셀러드가 있고 우유랑 콘후레이크가 있어요 가격 생각하면 장말 괜찮은 조식입니다 층이 카페 같은 식으로 되있어서 차를 마시거나 저녁때 맥주 마시기도 좋습니다 바로 앞에 편의점도 있고요 다만 좀 오래된 건물이라 그런지 방이랑 욕실이 깨끗해 보이진 않습니다  그래도  드라이기 냉장고 있을껀 다 있습니다 욕실엔 샴푸 바디워시 비누가 있고 칫솔치약은 준비해 오셔야 됩니다 카운터에서 칫솔치약이 있냐고 묻는걸 봐선 판매 하는거 같기도 합니다  약간에 단점도 분명있지만 가격대비 생각하면 정말 괜찮은 호스텔이라고 생각합니다박에 원으로 친구와 둘이서 인실에 묵었는데 가격도 정말 저렴하고 시설도 깔끔해서 좋았어요 그리고 세면도구들이 다 비치 되어 있었고 체크인 시 칫솔 치약도 주어서 편리했어요 또 방에 와이파이 라우터가 있어 와이파이가 잘 터져서 좋았어요 거기다 아침에 조식도 간단하게 먹을 수 있어 하루의 시작을 든든히 할 수 있었어요 호스텔 바로 앞에 편의점이 있어 간단한 간식거리를 사들고 갈 수 있었어요 또 호스텔 바로 앞 큰 길에 버스정거장이 있어서 버스로 여행하기 편리했어요 단 엘리베이터가 없어 짐을 들고 올라가기 조금 불편하다는 것과 객실의 방음이 잘 안되는게 조금 아쉬웠어요                                                                                                                                                  공항하고도 가깝고 위치적인 면이나 호텔은 깨끗하고 좋습니다 월풀욕조도 있고 단 층고가 낮으면 기대하는 뷰는 나오지 안않아요 그런점이 좀 아쉬웠습니다사진으로 본 것만큼 깔끔하고 건물 외관 내부 잘 정돈되어있더라구요 침구류도 푹신하고 좋고  위치도 공항에서 분이내  바다도 분이내 거리라서 너무 좋았어요  마지막날이라 일찍 나오게됐지만 기회가 된다면 또 가서 쉬고싶네요  사장님도 친절하시고 좋았어요 가족 여행을 제주도로가서 숙박했었는데 바닷가에 붙어있어서 뷰가 정말 훌륭했습니다 그리고 신축건물로 디자인을 고려하여 시설이 깔끔하고 좋습니다 다시 한번 방문하고 싶네요제주 여행 마지막날 체크인을 하게 되었는데 위치 뷰가 너무 좋았다  첫째 예약 하자마자 호텔측에서 연락이 와서 예약확인과 스페셜 한 것들을 물어본다 예약부터 신경 쓰는게 느껴진다  둘째 사진처럼 깨끗하고 큰 리조트 이다 따뜻한 분위기에 직원들은 정말 너무 친절하다  셋째 결혼식 끝나고 오는거라 신혼여행이라 이야기를 했더니 방으로 와인을 배달해 주셨다   하나하나 세세하게 신경써주시는 직원들에게 감동 그자체 추워서 수영장에서 놀생각은 못했지만 아이포함 가족여행으로 오면 너무 좋을 것 같다  젤 중요한 깔끔 그자체 너무 좋다 완전 만족 뭐하니 어긋나는게 없다 제주도 애월쪽 강력추천패밀리룸 바다 전망으로 넓은 침실이 있는 객실개와 작은방  화장실 개 그리고 맛있는 것을 해 먹을수 있는 인덕션이있는 주방과 쇼파가 있는 거실  가장좋은건창문열고 바라보면 제주바다가 보이고 아기자기한 정원이 리조트의 매력이다 특급수준으로 관리되고 있지는 않지만 가격을 생각한다면 준수합니다 특히 침대 넓은 공간 가족형 수영장이 좋구요 다만 여기저기 세심한 보수가 필요해 보이네요굉장히 싼 가격에 다녀왔는데 방 상태 좋은데 화장실 샤워기에 물때가 청소에 좀 신경쓰셨으면 합니다 수영장은 넓고 물도 깊은데 사람도 별로 없어서 수영하기 정말 좋았습니다 근데 라커룸은 왜 그렇게 관리를 안하시는지 곰팡내 무지막지 합니다 하지만 가격이 싸서 모두 용서가 됐습니다 이제는 수영장 폐장했기 때문에 아주 가격이 싸지 않으면 굳이 갈 필요가 없다고 생각합니다리조트가 아닌 마레보 비치 호텔 이용 애월에 있는 거의 유일한 호텔로 깔끔하고 예쁜 인테리어가 인상적인 호텔 단 해변가와 가까워 늦은 저녁 주변 파티 게스트하우스에서의 소음이 조금 있음 내부 시설은 깔끔하고 침구류도 좋음우리는 이곳에 하룻밤 머물렀는데 공항 근처로 원하는 것을 했어요 택시를 타고 분이 라 공항에서 약  원 우리가 묵었던 방은 좀 어둡고 칙칙한 하지만 침대는 편안하고 했다 샤워실화장실  세면대의 팬 이 아닌 조합 샤워실이 구분되지 않은 파티션 젖어서 모든 것 하지만 나는 이 호텔에서 기대할 수 있어 파악할 수 있습니다 전체적으로 평균적인 호텔 하지만 다시 오고 싶지 않아요이 아름다운 호텔에서 일 밤을 묵었는데 공항에서 매우 가깝다 약   분 버스 주요 쇼핑 거리는 분 거리에 있는 호텔 한 시간 이상은 아니었지만 호텔에서 차를 타고 매우 비싼 택시를 타고 화산 방은 매우 깨끗하고 깔끔했고 매우 컸어요 우리는 우리의 방에 있는 화장실다양한 음식과 음료를 걸어갈 수 있는 곳 저녁 식사는 늦은 밤에 음식을 찾는 문제 도 아니다 편의점이 걸어서 갈 수 있다 하지만 공항에서 멀긴 하지만 운전은 제주도 여행에 추천 합니다 따라서 문제 거리가 되지 않았습니다처음 한국을 여행하는 한 우리가 묵었던 일 한국 제주  강남  우리가 묵었던  호텔 중이 최고입니다 이 객실에는 문자 넓고 깨끗하고 최신식이었어요 프론트 데스크의 직원들은 아주 좋은 사람이나 문제 은행 카드를 가지고 갔을 때 제 여자 친구를 불러 국제적으로 로컬 취출된 직원은 무료 서비스 주장 이 주장 했지만 우리 방이 청구됩니다이 호텔은 쇼핑 지역 근처에 위치해 있는 젠 충돌시에 바오 거리 쇼핑 거리에서 바로 코 앞의 많은 레스토랑 카페 그리고 식당 철손과   직원들은 매우 친절하고 정직한 그들이 원하는 곳을 갈 수 있길 또한 그들은 남아 있어 핸드폰 이나 에게 돌아와 다시 돌아갔을 때는 수집 및 보상 충성 스럽 게 거절사진은 좀 엉망으로 찍었지만 매우 가격대 성능비 좋은 호텔입니다 실용적인 분들에게 추천합니다 방도 넓고 특히 더블과 싱글침대가 같이 있는 방이었는데 혼자 묶었습니다  아침 식사도 한식과 토스트로 간단하게 나오고요 모텔가서 자느니 여기 강추합니다공항에서 가깝고 내부도 깔끔한 편입니다조식도 그런대로 먹을 만 했구요 중국손님들이 맣은 걸 보니 중국단체여행 숙소로 많이 활용되는 듯합니다싱글침대 개가 나란히 있는데 방이 넓어서 시원시원하니 넓었어요 관광호텔이라 고급스럽거나 하진 않지만 하룻밤 쉬고 오는데는 괜찮았어요 시내에 있어서 교통편리객실은 매우 좋은 크기이며 무료 수건 너무 작음 주전자 냉장고 및 헤어 드라이어가 제공됩니다 깨끗한 수건과 함께 매일 한 병의 물이 방으로 배달되었습니다 아침 식사는 오전  시부 터 아침  시까 지 가능했습니다 일찍 시도 했으므로 한 번만 시도했습니다 음식은 너무 매운 버터가없는 빵과 일종의 두부 국수 우리가 이웃의 편의점에 가서 매일 아침 식사를 제공해야했기 때문에 역 겹다 좋은 점은 무료  뿐이었고 버스 터미널은 길 아래에있었습니다 편안한 숙박과 품격있는 아침 식사를 원하신다면 업그레이드하십시오 다시 여기 머물러 들지 않을거야호텔은 괜찮았지만 리셉션 직원은 영어를 몰라요 우리를 통신하도록 아주 딱딱했습니다 아침 식사는 짧아서 환경 좋은 않았습니다 호텔 내 기대에 못 미쳤습니다이 호텔을 예약했는데 은 우리 가 보는 사진처럼 온라인 해서 하기 때문에 정확히 알고 이와 함께 한 더블 침대 깨끗한 욕실과 큰 욕조가 있고  하는 우리 자신의 미니 냉장고가 있습니다   이 곳에서 걸어서 분 정도 바다는 는 실제 해변 창문에서 바다를 볼 수 있다   유일한 단점으로 구성됩니다 있고 침대는 꽤 딱딱하고비치 스토리 호텔에서 묵은 하룻밤에 처음 도착했을 때 제주도 좋은 위치의 깨끗한 호텔에서 가까운 바다 전형적인 한국인이 현지 스타일로 중간 가격대 호텔  예를 들어  욕실 리넨 베드 커버 등이 있습니다 객실은 따뜻하고 와이파이는 잘 작동합니다 제 생각에는 약간 비싼 시즌 오프  괜찮은 레스토랑 식료품점 그리고 해변이 있습니다 한국어로 된 안내판이 있어 찾기가 약간 어려울 뿐 더 그랜드 호텔 건너편에 있는 해변 찾기 쉽습니다제주공항 근처에 위치하고있어서 밤늦게 도착하시는 분들 하루 묵기 좋은듯해요 가격대비 룸컨디션 깔끔하고 좋아요 중국인이 많이 있습니다지은지얼마안돼어깔끔합니다 옥상에올라가면 제주공항도보이고 시내가 한눈에들어와요 화장실과샤워실세면대가 각각분리돼어있어 친구들끼리 가서 사용하기 편리하나 볼일보고 바로샤워해야하는 남편은 좀 불편하대요 침대매트리스가 다른호텔에비해 안좋았어요 자다 뒤척여도 옆에사람깨고 침대끝에앉으면 다른사람도 기우뚱하게될정도로 침대별로에요 조식은 종류는 많지 않지만 음식 하나하나가 정말 맛있었어요 제대로 조리한느낌이었어요 대체적으로만족합니다사전결제예약하면서 산 전망있는방으로 예약됬는데 체크인할때완전 전망꽉막힌 방줬음  기분완전나쁨 예약과 완전 다름출장으로 묵었는데 깔끔하고 시내 중심가에 위치하여 편합니다 책상 위에 콘센트가 있어 노트북으로 작업하기도 좋았고 침대도 푹신하여 잘 잤습니다 화장실과 샤워 공간이 분리되어 있어 인 이상 이용하기 좋습니다 저렴한 가격에 매우매우 좋은 호텔이다 위치도 매우 좋으며 화장실과 객실 모두 좋다 주차타워도 있어서 주차걱정도 안해도 된다 다만 조식이 조금 아쉽다방은 넓고   명 깨끗하고 편안했어요 투썸 카페가 바로 옆의 길을 따라 쇼핑 거리 아주 좋은 위치 공항 근처 쉽게 택시를 얻을 수 있는 호텔입니다 공항에 가는 택시밖에 공항에서 멀지 않은 호텔입니다 저렴한 가격 대비 성능이 좋아서 만족스러웠습니다 걸어서 갈 수 있는 거리에 흑돼지 고기국수 등의 알려진 맛집들이 있어서 편리했습니다공항에서 가까운 위치라는 장점이 있습니다 제주도에 오후에 도착해서 빨리 쉽게 찾아가서 쉴 수 있어서 좋았습니다 소셜커머스를 통해 저렴하게 예약할 수 있었고 체크인할 때 무료로 룸을 업그레이드해 주셔서 좋았습니다 룸 컨디션은 꽤 괜찮았는데 다만 샤워를 하고 나니 욕실에서 냄새가 조금 올라왔습니다 하지만 합리적인 가격에 비하면 훌륭한 시설을 갖추고 있다고 볼 수 있을 것 같습니다담배냄새가 너무 심함 호텔이 아닌 모텔이라 그런지 환기가 전혀 되지 않음 침구랑 방 전체에 담배냄새 베어있어서 정말 있는 내내 더러워지는 기분이었음공항에서 택시로 분 거리에 위치해있는 비지니스 스타일 호텔입니다 체크인시 보니 프론트에 외국인이 많은걸 로봐서 외국인 응대또한 좋아보였습니다 시설은 정말 나쁘지도 좋지도 않은 무난한 수준이었고 청결도는 좋았습니다 제가 방문했을때는 앞에 건물 공사가 있어서 인지 아침부터 중장비와 기계소음이 거슬리긴 했습니다 저녁에는 신제주 시내까지 걸어서 분정도여서 식사해결하기에도 괜찮았습니다 호텔 바로 옆에는 조그만 슈퍼마켓이 있습니다이번 제주 여행 미국에서 아들만 보낸 상황이라 무엇보다 안전이 중요했습니다 제 아들에게 환전 문제 분실 문제가 발생했는데 호텔의 박과장님 이하 여러분의 도움으로 잘 해결이 되었습니다 손님을 가족처럼 돌봐주신 앳눈 호텔 직원 여러분이 얼마나 감사한지요 무조건 별 다섯개 입니다이 호텔은 쇼핑지역과 가까이 위치해 있다 디자인은 상당히 현대적이다 직원들은 우리가 요청하는 것은 다 들어주고 영어로 의사소통도 할 수 있다 직원들은 정말 친절하다 왜냐하면 택시 운전사와 의사소통하는데 어려움이 있었고 요청도 안했는데 직원분이 우리를 도와주었다 단지 조금 이상한 점은 세면대가 화장실이 아니라 침대 옆에 있다는 것이다 그리고 베개가 너무 물렁거리고 평평하다 아마도 방안에서 와이파이를 무료로 쓸 수 있는것 같지만 웹페이지가 한국말로 되어 있어서 어떻게 비밀번호를 넣고 사용하는지 모르겠다 하지만 만약 직원에게 물어 보면 흔쾌히 도와줄 것이다 하지만 우리는 직원한테 묻지 않았다 왜냐하면 제주에서 머무는 동안 인터넷 할 필요가 없기 때문이다남편과 나는 제주 불축제동안 이곳에 머물렀다 하룻밤에 달러 요금을 냈는데 그 요금은 괜찮은 가격이었다 방은 널찍하고 깨끗하고 현대적이었다 직원들은 항상 친절했다 호텔에 도착한 후 아침에 자동차를 렌트하기로 결정했고 호텔 직원은 자동차 랜트 회사에 전화를 하고 세세한 것까지 준비해 주었다 그리고 택시를 불러 주어서 자동차 랜트하는 곳까지 갈 수 있게 해 주었다 호텔은 공항에서 분정도면 갈 수 있고 도심에서 블럭 정도 가면 나온다 도심은 몇개의 나이트 클럽이 있는 거리 하나가 전부다만약 재미있는 꺼리를 찾는다면 둥근지붕 건물이 무엇인지 확인해봐라 호텔에서 분만 걸으면 나온다나는  박 동안 여기에 머물렀다 나는 방의 아늑함을 좋아합니다 너무 깨끗합니다 제주 시내에 위치하고있어 낮과 밤을 자유롭게 돌아 다닐 수 있습니다 밤에 배가 고플 때 먹을 것을 잡을 수있는 시 가까이  직원들은 매우 도움이되고 친절했습니다 특히 요리사와 팀 나는 여기에 머무르는 것을 좋아하고 다시 제주에 가면 여기에 머무르는 것을 고려할 것입니다  아름다운정말 좋은 시설 내가 이 선택했습니다 공항 이유는 매우 가깝습니다 그러나 조금 비싸요  침대 기숙사 객실은 하나는 침대 개 침대 개  방 안에    물론 모든 설비가 갖추어져 있습니다 거실 가지고 공용 공간이 있습니다  제주 여행 동안 개인 추구할 경우 꽤 좋은 곳 여성 및 남성 객실을 구분됩니다 층에 여자 남자  층까지 사용됩니다  나는 인당  원 달러 하룻밤 예약했습니다   조금 직접 예약 훨씬 싼 온라인 예약   다른 아이러니야   나는 여행   다른 유럽 여행을  매우 깨끗하고 아침 식사도 좋음 그리고 침대에 전기담요도시트 플러스  그래서 따뜻한   한국 당신이 익숙하지 않습니다  나는 이틀 전에 여기를 방문하십시오 정말 좋은 시간이었고 모든 직원들은 아주 친절하며 괜찮은 곳 도 추천해 드립니다   더 바비큐 파티가 가장 흥미로운 이벤트 꼭 해야 할 때 거기에              시설이 정말 깨끗하고 좋은 모두 나무로 만들어진 침대 좋은 화장실 깨끗하고저는 투어 그룹에 클레어 는 따뜻하게 환영 받았고 케니 그리고 다른 직원들 객실은 깨끗하고 편안했어요 있는 작은 카페가 있는 호스텔 바로 앞에 위치한 흑돼지 전문점에서 햄버거 감자튀김 커피 맥주 훌륭한 점심 식사 직원들은 손님들이 저녁에도 게임에 참가하여 경쟁하는 재미있는 체험 이 호스텔은 매우 가깝고 서귀포에서 두 개의 주요 폭포 항구에 있는 음식 거리 및이 게스트 하우스는 제주 공항에 매우 가깝다 대중 버스로 갈 수 있는 게스트하우스 근처에 있는  검사기인텔 있어   관리자가 기본 작동할 수 있는 영어 매우 협조적이고 많은 정보가 어떻게 갈 수 있는 갈 곳   주인은 밤에 그는 정보도 아주 친절합니다  방과 화장실에 매일 청소 한다 깨끗하고 깔끔한 곳입니다  하지만 욕실은 남녀가 있습니다 하지만 나에게 문제가 발생하지 않았다정말 편안한 호스텔은 친절한 주인 나는 가능한 한 더  곳입니다 그러나 나는 운이 좀 짜증나는 혼합 기숙사 룸메이트 잠을 잘 수 있어서 매우이 집과 유충 돌을 둘러싼 밀초가있는 집처럼 느껴집니다 매우 깨끗한 실내 및 실외 집주인이 주방에서 제공하는  대의 자전거를 이용할 수 있습니다  세탁기도  호텔 매트리스와 비교할 수없는 두꺼운 매트리스가 있지만 괜찮습니다 가장 가까운 식료품 점까지 도보 거리  택시를 집주인에게 알려야합니다 제주 최대 속도가    이므로 아무도 타지 않을 것입니다레프트핸더 게스트하우스는 제주의 시골 교외 지역에 있습니다 차가 있다면 정말 추천할만 하지만 서귀포와 제주시에서 오는 버스를 탈 수 있는 정류장이 근처에 있어서 차가 없어도 이용하는 데 무리가 없습니다 게스트하우스 근처에 일출봉성산 일출봉과 피닉스 아일랜드가 있습니다   이곳은 건물로 둘러싸인 서귀포나 제주시 지역과는 다른 예스러운 맛이 있습니다 원하면 게스트하우스 사장님과 함께 무료로 오름을 오르는 체험을 할 수 있습니다 저희는 시간이 없어서 하지 못해 아쉬웠습니다 사장님은 지역에 관해 잘 알고 있어서 서귀포와 제주시로 가는 방법이나 주변의 멋진 경관들에 대한 정보를 많이 주셨습니다   날씨가 좋은 날에는 근처의 바닷가로 내려가거나 해녀제주의 여성 잠수부를 기리는 해녀 박물관을 둘러보는 것도 좋습니다 이곳은 시골이기 때문에 버스 정류장 근처의 편의점을 제외하고는 레스토랑이나 상점이 많지 않습니다 게스트하우스에서의 저녁을 위해 먹을 것들을 가져오거나 아니면 호스텔 사장님과 저녁을 함께할 수도 있습니다무료로  전반적으로 즐겁게 지냈고 잠시 도시를 떠나 있기에 정말 좋았습니다패밀리 스위트 룸에 묵었는데 박 일을 제주도 여행을 위한 북동부 쪽 훌륭한 서비스 중 에서 저녁 식사를 즐길 수 있는 주인에게 요리의 마지막 밤을   식당과 걸어서 갈 수 있는 가치있는 합리적인 가격에 가까운 곳에 박물관에 체크 아웃 하네요   이 게스트하우스를 추천하고 싶네요 깔끔하고 깨끗하고 정돈되어 있다 통풍이 잘 되면 더 나은 개선 되어야 할 경우 주방 거실 절곡된 절곡부가안녕하세요 내가 마지막으로   을 봄  에 도착 하다 이 게스트하우스의 주인은 꽤 늦은 저녁이나 지 않는 이미 우리에게 물었다 그에게 할 수 있어서 매우 물론 우리는 포기하지 않았다 그런 다음 몇 가집니다 활용하는 몇 가지 레스토랑이 제공하지 않은 돼지고기는 여기 있다 그는 또한 우리를 차로 레스토랑 너무 감사합니다  음식이 너무 맛있어서 다 먹어 볼 수 있는 것입니다   우리가 있는 방 정말 편안하고 깨끗하고 편안했어요 우리는 함께 여행  해 몇 가지 크레이터스 게스트 하우스 그 후에 우리는 차를 몰고 가버  을 가장 마음이 숲 동굴  김녕 미로 공원 해변 바다는 차가운 바람이 많이 불어서 따라 운전   전반적으로 나는 별을   호의를 드립니다   죄송합니다 늦게 리뷰이곳에서 정말 즐거웠어요 깨끗하고 친절한 직원 마치 집을 좋은 빵 치즈 있습니다 러브  여기 벤치 에 앉아 밤에 집앞 사람들에게 추천하고 싶은 생각을 가지고 매일 등산 성산  강추서울로 가기 전에 성산일출봉 해녀 박물관 등 주요 관광지를 둘러보고 싶어서 이 호텔에서 박 묵었습니다 위치는 도심지로 근처에 이마트와 현지 음식점이 여럿 있습니다 객실은 깨끗하고 냉온수 정수기 와이파이 인터넷 슬리퍼 등 비치품이 완벽히 갖춰져 있습니다 체크 인도 아무 문제 없었습니다방은 매우 큰 두 명 욕실도 매우 컸고 욕조가 있는 샤워실 및 화장실과 별도 세면대 앞에 추가 객실에는 바닥 난방 시설이 충분히 따뜻하지 않지만 요청 할 수 있을 바닥 따뜻한 프론트 데스크 더블 침대 매트리스도 작은 이 방은 방음이 되지 않을 수 있기 때문에 아침에 조금 시끄러움 유일한 단점은 아침 식사를 할 수 있는 맥도날드 가서 주변에 레스토랑은 없고 좋았던 점은 호텔은 제주 국제 공항에서 매우 가깝다위치적으로 보면 전략이라는 하지 않고 걸어서 일어나는 지안 바오 거리가 좀 있습니다 호텔 근처에 위치한 이마트 근처에 맥도날드도 있다 방이 크고 가격을 지불합니다 하지만 직원들은 매우 협조적이지 않은 영어 그들은 한 사람이 라고 하고 전화를 주는 먹고 쇼핑 장소 근처에 있습니다호텔은 많은 식당에 가까운 편리한 위치 다양한 백화점을 걸어서 갈 수 있을 뿐만 아니라 편의점도 있  분 정도 떨어진 곳에 위치한 저는 재미 에 씁니다 라면 먹고 편한 방의 수 있습니다  욕실은 큰 욕조 침실은 공간이 많은 곳도 없을 정도의 짐을 실행할 수 있습니다 와이드  빠른 인터넷 기본적으로 필요한 모든 것 심지어 펜 데스크  직원들은 매우 친절하고 도움이 되었습니다 또한 달콤한 귤 이 바구니 제주의 서명 제품 접수 데스크에서 무료로 먹을 수 있는  정말 즐거웠어요 동정 을 하지 않고 내가 요청하는 핑크 룸이 다음에 이곳에방은 크고 깨끗했습니다 욕실도 너무 큰 우리의 방은 매일 전체 지속 시간 내에 체크인 시 호텔 방을 예약을 하라 직원들은 영어를 할 수 없습니다 중국어를 구사하는 직원 들의 아침 운이 좋게도 우리는 몇가지 기본적인 중국어를 할 수있게 이해할 수 있습니다 호텔은 신라 면세점 과 시내 거리 산책  직원들이 주장하는 제주도 여행 관광지를 가고 싶어하 했을때 시티 투어 버스 방법을 안내해 주고 버스까지 작성한 관광명소를 누구에게 하는 한국어로 합니다                                    싼 가격과 좋은 위치를 자랑한다 그러나 객실이 세련되지는 않았고 넓지도 않다 그러나 화장실은 상당히 쾌적하여 만족스럽다 한편 주위에서 식당을 찾기 위해 상당히 걸었다제주도에 위치한 이 오래된 호텔이라고 생각 한다 뷔페식 아침 식사가 이곳에서 이틀 밤을 지냈다 호텔은 강한  연결 직원들은 영어를 그렇게 좋지 않아요 우리가 머물렀던 침대 두 개 층첫 번째 호텔이     플러스 시간의 비행 끝에 우리는 좋은 호텔 이라고 하는 중에 아무것도 기대 이곳은 우리가 선택한 패키지 투어   내 속도 이 다리는   호텔 입니다  매우 청결함을 허용하는 한 알의 그 이  방 크기는 충분히 큰 더블 침대 호텔의 아들  많은 기대를 한 여행 준비 더 아무것도우리는 우리의 여행사를 통해 예약해서 이곳에서 인상적인 호텔에 대해서 아무것도 정말 아무것도 불평할 수도 모든 기본적인 요구 사항 충족 방은 넓고 비교적 깨끗했습니다 침대도 충분히 편안했습니다 쇼핑을 하고 호텔 뒤에 있고 편의점이 바로 옆에 있고 늦은 밤 간식 은 라면 아침 식사는 그저 그랬다이 호텔은 공항과 가장 가까운 위치해 관광 쇼핑 레스토랑 호텔 로비는 넓지 었습니다 좋은 직원 좋은 방 방에는 모든 스위치는 하나의 제어 보드 조명 에어컨 차커피를 만들 수 있는 난방 없이 물 주전자 자재품 방이 넓지 었습니다 욕실은 깨끗하고 넓지 었습니다 펀관과 거리의 소음이 없고 호텔에 기본 높이에서 조금 떨어진 길 호텔 프런트는 나무 대표하는 원괴체 나는 이 호텔을 추천합니다주인 분이 매우 친절하고 매우 곧 출시 미스터 파크 및 호스트 및 제주에서 추천하는 가볼 곳 그리고 좋은 한 곳 입니다 그들은 또한 수 수도   좋은 경험을 하게 되어 해안도로 에 위치하고 있어 일어날 수 있는 아름다운 바다가 보이는 전망 또한 여러 음식점들이 걸어갈 만한 거리 스타벅스도 있고 취하기 좋은 방은 예쁘고 기상 은 따뜻한 아침 식사 준비 및 몇 가지바다가 보이는 해안도로 바로앞에 위치해있어서 어느방 어느곳에서도 바다가 잘보이고 바닷소리를 들을 수 있었어요 사장님 부부분들이 아기자기하게 꾸며놓으신 방과 복도등 인상깊었습니다 방도 참따뜻하고 온수도 잘나오고 특히 조식이 너무너무 인상깊었습니다 직접 아침마다 구워주시는 빵과 각종야채 과일들  같이 여행한 싱가폴친구도 너무나 만족하고 또오고싶다고 말한 숙소였습니다 다음에 제주도 방문하면 꼭 꼭다시들릴게요이 게스트 하우스는 매우 전략적인 위치에 있으며 바다를 볼 수 주변의 많은 레스토랑과 카페들이 있습니다 호스트 미스터 파크 영어를 아주 잘 하고 매우 친절하고 그는 우리에게 방문할 수 있는 곳이 많은 우리의 짧은 숙박에  할 뷰 게스트 하우스  가지의 방 지하에 있는 조식이 제공되는 아늑하고 멋지게 장식 되어 있다 우리는 다른 손님들과 함께 호스트 및 공유할 수 또한 우리가 방에 있는 호스트 정도까지 꼭다발과 에게 매우 친절했고 추천하는 곳 그리고 꼭 다음에 방문한 제주 제주에 막 도착해 차를 빌려  출발전 핸폰 문지로 받은 안내대로 제주란에 좀 일찍 도착하니 대표께서는 막 출타중 이셨다  손님이 오신 다 하여 방에 꽃을 놓아드리려고 꽃꺽으러 가셨어요    헉 손수 꽃준비 하러    그사이 집주위를 차근 차근 둘러 봤다  차로 오는 경우 지나치지 말라고 입구에 세운 팻말   건물 바로 앞 바다를 바로보게 놓은 벤치 빤듯하게 거 놓은 주차선 화가의 손씨가 풍겨나는 그림의 방문   손님들의 휴식처이자 아침식사 공간인 반지하의 리빙룸 창앞쪽을 둥그렇게 파 햇볕이 잘 들어 오고 밖도 잘보여 지하라는 느낌이 없는 공간    그리고 무었보다 방에 들어와 커든을 열으니     바다가 품으로 안겨왔다   자상하신 대표님 꼼꼼하신 사모님 의 숨결이 느껴지는 집안 곳곳의 여유로움  아침을 맞이하고  창밖의 바다는 더 포근했다찾아가기도 힘듦 버스도 타고 택시도 타고 현지 사람들 도움도 받았지만 찾기 힘듦 이미 약속되어 있는 것임에도 욕실이 없는 방을 제공받았음 할인에 대해 협상을 했고 다음 날 방을 옮길 수 있었음 주인은 영어 못함 첫날 이후로 본 적이 없음우리는 길 건너에 있는 다른 호텔에서 숙박을 연장하지 못했기 때문에 박을 머물기 위해 모나코 호텔로 이동했어요 바깥에서 보면 호텔은 괜찮아 보였습니다 외견상으론 낡지 않았어요 조금 어두워 보이긴 했지만요우리가 보러 갔을 땐 괜찮았습니다 아마 어두운색의 타일을 쓰기로 선택했기 때문이 아닐까 싶어요 내부는 필요한 편의 시설도 갖춰져 있고 괜찮습니다 난방 시스템 온수 공급 적당한 침대와 안정적인 와이파이 연결까지 가능해요 우리는 간단한 영어로 프런트 직원과 대화할 수 있었습니다 그는 우리의 이틀째 여정이었던 섬 여행을 갈 때 택시 기사와의 연락을 도와주었어요 직원이 우리를 다른 택시 기사혹은 그가 의도한에게 태우려고 하지 않았다는 점과 우리가 공항으로 떠날 준비가 되었을 때 즉시 택시를 잡아준 점에 대해 고맙게 생각했어요 방은 꽤 넓었고 모든 기본적인 편의 시설이 이용 가능했습니다 장식이 조금 오래된 스타일이긴 하지만 주요 문제는 아니에요 음식과 쇼핑에는 문제가 없었는데 반대쪽 호텔도 있었고 거리 하나만 지나가면 됐기 때문입니다 우리가 낸 돈을 보면 제주시의 내의 다른 선택에 한 표를 던지겠습니다제주시에 대한 저의 다른 리뷰도 보길 바랍니다호텔이 꽤 낡은 스타일임에도 방은 컸습니다 컴퓨터나 인터넷은 없지만 라운지에 커피머신이 있어요 위치는 아주 좋습니다 버스 정류장도 가까워요 대도시를 연결하는 제주시의 버스 터미널로 향하는 버스와 중문으로 향하는 공항 버스도 있습니다 그랜드 호텔카지노과도 가까워요 주변에 식당도 많습니다 공항과도 가깝고요 택시 요금은 정도입니다여행 시간에 따라 다름 간단한 영어로 대화할 수 있습니다 하지만 그가 이해하지 못한다 해도 그리 큰 문제는 아닙니다 한국은 정말 좋은 여행자 서비스를 갖추고 있거든요 그가 핫라인에 전화를 걸면 누군가가 통역을 해줍니다   나는 이 호텔에 일 그리고 모든 수직 도 비 도 나쁘지 않았다 하지만 가격이 아주 좋아 방은 생각보다 큽니다 레스토랑 근처에 있는 좋은 위치에 있기 때문에 많은 지역 시내에 머문다면 가격과 위치가 좋습니다 것 같아요에서 모나코 에 위치 도 정말 좋 아요 월 몇 단계 편의점 그리고 작 은 포장 마차 가 하나 나타나 아주 저렴 하 고 좋 은 국수 와  바로 오른쪽에 모텔 나가 ㄹ 때 기본 적 으로 이 모텔 은 주변 음식점 모든 종류의 함께 찾 은 도보 거리 이 사용자가 알아 두어야 하는 소유자인 수 없는 방 에서 신발 을 착용 슬리퍼 제공 하 고 묻 어 구두 방 밖 에서 저 도 이 었다 공항 에서 매우 가깝 고 주위 에 비용 만 사용하고   캐브 다음 여행 에도 꼭 이 호텔 을 선택 하 ㅂ니다 다시 제주도이번주 금토일 박을 묵었습니다 일단 합리적인 가격에 오션뷰를 느낄 수 있어서 좋았고 무료 조식 역시 어지간한 한식 조식과 맞먹을 정도로 괜찮았습니다 사장님께서 매우 친절하신 편이며 방 역시 깔끔하고 좋습니다                                                                                                                                                 숙박 예정인 호텔을 찾을 수 없기 때문에 밤을 머물렀고 현지인도 그것을 찾을 수 없습니다 이 호텔은 바다 해변과 매우 가깝습니다 저녁은 시원합니다 공항까지 택시로  분 콘은이 지역이 주위에 식사를 많이 할 필요가 없다 그리고 방의 스위치는 그것이 자동적으로 모든 빛  에어컨의 안에서 자르는 것에 따라 밤에 매우 잘 움직이지 않고있는 것처럼 보인다 그리고 는 그것에 자기 자신 때때로 하지만 여전히 나에게 평균결혼한언니들가족팀까지합하여 온가족이같이갔던여행지로선택했던호텔입니다  사실더 등급높은곳으로찾던중에 차이점을보니 성급은 수영장과주변시설들인데 날씨가조금추웠던만큼 우리가족은수영장은필요없을꺼같았고  계속가족일정있었기때문에 실내숙박과조식만을 보고 선택하게되었습니다 정말무척깨끗하더라고요 조식은가짓수가많은건아니었지만 먹을수있는깔끔한음식들이정갈하게놓여있었고 그렇다고 음식이적은것도아니었어요 과일한식고기채소 등등 정말점입니다 딱하나아쉬운점이 조식먹을때커피가따로없었는데 그건 로비에가보니 따로미니커피숍이있었어요부모님도무척좋아하셨고 조카가살이었는데 방안이 맨발로다닐수있어서  다들좋아했어요만족하고추천합니다트윈베드를 사용했는데 편했고 깔끔하고 조식도 괜찮은편이었다  다만 아쉬운점은 베개가 약간 높고 수영장이없다  하지만 가격대비 가성비가 높아 매우만족한다         일몰을 기대하고 갔지만 사실 호텔 위치에서 일몰은 베란다 밖으로 몸을 내밀어야 보여요 그래도 온수욕조와 베란다 넓은 객실은 기대 이상이었습니다 조식이 안되는 대신 고봉민 김밥이 층에 있어요 제주도에서 다시 묵고싶은 숙소였습니다좋은 위치에 있는 이 호텔 호텔은 아주 바다로 닫혀 있어서 파도 소리를 들을 수 있습니다 보다 편안하고 편안한 호텔 직원들은 매우 친절하고 많은 도움을 주었습니다 나는 제주도에 오는 경우 이 호텔은 매우 추천합니다 우리는 서울에 며칠간 머문 후 에 도착했습니다 버스가 하지 않았기 때문에 호텔에 택시를 가져 갔다 내 추천은 제주에 계신다면 차를 빌리는 것입니다 어쨌든   을 곧장 지나갈 수 있습니다 공항  자동차 이용시  분 거리에 공항에서 멀리 떨어져 있지 않은 해변  해상 및 위치 근처에서 숙박 요금이 나쁘지 않다고 생각하면 만족할 것입니다 내가 가장 하는 것은 호텔이 표준을 만납니다 접수가 전혀 도움이되지 않았다는 것입니다 영어 사용자는 잊어 버려 정보를 얻는 것은 매우 어려웠습니다 또한 방에는 난로 냉장고 등이 있습니다 그러나기구 포크 나이프가 없으므로 처음부터 조리 영역을 포함 할 필요가 없습니다 저 쿠지는이 장소와 같은 최소한 나를위한 나의 유일한 마음에 드는 사람이었다 그러나 저 쿠지를위한 조용한 거품은 그렇게 강하지 않았다 시간이 지켜지지 않았다 위치 현명한 것은 다른 명소가 아닌 호텔 근처에 있습니다  는 더 많이 설명하기 위해 더 많이 그러나 어떻게해서든지 나는 그것을 평가할 매우 친절 할 것이다    내가 돌아갈 기회가 있다면 나는 롯데 호텔 하얏트 리젠시 신라 등의 고급 호텔로 갈 것입니다 당신이 일찌기 예약하는 경우에 가격은 바다 체재와 다름이별로 없 아마   여분 그러나 확실하게 그것의 값이있는 바다의 머무름은 대단한 바다 체재 경험이 아니 었습니다넓은 객실을 갖춘 멋진 호텔 우리는 작은 간이 주방과 함께 트윈 룸 더블 침대 및 싱글 침대를 선택했습니다 나는 청결 함으로 그들을 단정 지을 수 없었고 리셉션에서 영어로 말할 수있는 직원들과 함께 서비스가 훌륭했습니다 한국에서는보기 드문 곳입니다 그들은 택시 등으로 가장 도움이되었습니다 또한 호텔 내에 레스토랑이 있습니다바다 바로 앞이라 전망은 좋지만 바다에 해조류 썩은게 너무 많아서 파리가 우글우글 방충망을 절대 열면 안되요ㅠㅠ 날 좋을때가서 스파도 하고 싶어요 방은 진짜 넓고 좋습니다 파리만 아니면부들부들횟집거리 바로 앞 흑돼지거리에 위치해있습니다 앞에 놀이기구가 하나 있어 약간 소음은 감안해야할 듯합니다 시설은 모던한 모텔급 이상 수준이며 가격대비 훌륭한 수준이라 할 수 있습니다 맞은편에 큰 슈퍼마켓이 있어서 물건 구입할 때도 편했던것 같습니다 객실내에는 와 대형 가 있어서 엔터테인먼트를 즐기기에도 부족함은 없었습니다우리가 묵었던 방은 컸고 방에 있는 컴퓨터도 있었습니다 스마트 티비 꾸며져 있는 가까운 거리에 있지만 그 창문 근처에 여행 소음이 거의 없음 무료 세면용품들을 접수 창구 에 있는 기부는 환영 이 위치가 정말 편리한 곳에 가 있다 바로 뒤 우리는 즐겁게 묵 이 호텔을 추천합니다좋은 보다 더 많은 기대 이상이었습니다 객실은 매우 높은 기술 센트럴 거였어요 해변과 가까운 레스토랑 그리 크지도 않지만 멋진 깨끗하고 첨단 기술 조개 공항에 가까워서 약       아침 식사는 없다 전체적으로 깨끗하고 편리한 위치에 있는 다른 음식점들 중에서 선택할 수 있습니다 이마트 쇼핑 거리에 위치하고 있고 단점은 방이 큰 수건이 부족한 중 저희는 더블 베드룸 만 제공하는 것이 작은 문제에도 불구하고 에어컨 모두 몇 초 안에 호출을 통해 해결할 수 있는 청소 이 호텔은 제가 만난 중 최고의 시설을 갖추고 있는 다른 호텔 할 수 있는   티비 헤어 드라이어는 무거운 게임  리모콘은 구글 검색 옵션 중간 방에 냉장고 에어컨이 있는 멋진 및 구축합니다 전체적으로 방은 기대한 것보다 남아 있는 것이다 또한 종류의 빗 헤어 스프레이   직선 및 스타일의 곱슬 겔상 부분적인 바다 전망이 있는 방에서 층에 객실은 저밀도 만 볼 수 있는 메인 도로 다 이 길에서 멀리 떨어져 있다   또한 동문 시장 근처에 아주 호텔 건너편에 있는 맥도날드 물론 해산물 거리가 있어 편리합니다  이 호텔은 대체 공사 진행 중인 작업을 동시에  가집니다 하나 하나에 맞은 편 그들은 아리마를  시작할 수 있습니다 또한 놀이공원 의 맞은편에 있고   닫힙니다 여행하는 경우  일찍 관광을 위하기 에 너무 늦은 밤 소음은 상관하지 않는다 나는 이 호텔을 다시 선택 할 것이고 다음에                                               우리는 이 호텔에 묵었는데 트레비 그룹  일 동안 방은 매우 크고 깨끗하고 넓은 공간에 다 있다  호텔의 위치는 아주 좋았습니다 하는 대중 교통이 근처에 있는 좋은 레스토랑이나 즐길 수 있는 곳은 저녁에 맥주  커피  특별히 감사 하고 그 도움을 주어 우리의 모든 문제                                    커플스파룸에 묵었는데 방도 생각보다 넓고 시설도 좋았어요 입욕제도 무료로 제공해주셨고 조식도 간단하지만 나쁘지 않았어요 스파있는 숙소치곤 가격이 비싸지도 않아 너무 잘 지내다 왔네요 추천합니다 지리적으로는 애월에 위치합니다숙소의 위치가 애월 중간이라 애월쪽을 둘러보기에 좋지만   주변에 편의시설이 많지는 않습니다   서비스도 좋고 자쿠지가 있어 편히 쉬다 왔습니다  우선 뷰가 매우 좋아서 풍경을 보기에 아주 좋았습니다  가격이 저렴하지 않은데 거의 펜션과 같이 일회용품을 구매해서 써야 한다는 점이  조금  불편했습니다  그래도 조식이나 시설면에선 아주 좋았습니다  수건이나 침구에 검정색으로 뭍어있는 이물질이 있어 꼭 체크해보시고 잠에 드시는 편이 좋습니다                                                                             호텔 협상을 가격도 저렴했고 아주 깨끗하고 편리하게 서부 제주 관광명소 해변 공원 차 농장 등 제주도는 작지만 의 주요 도시 근처에 있는 지역 시장 들 직원들은 친절하고 영어 제한된 오프 거리 주차 나는 내 옷을 세탁 하는 세탁 시설 및 무료 관광  일반적으로 그들은 그들이 지 그들은 영어를 하지 못하는 한국의 장점이 지 모든 좋은 음식 에도 시장이 많은 곳이었습니다 매우 멋진 큰 공덕 시장에서 한국식 돼지 고기 너 클 주인이 나에게 준 무료 한국 위스키첨단 기술 어느하나는 컨트롤러로 제어할 수 있어서 굉장히 놀라 조명 에어컨  가 있었습니다 방은 꽤 넓고 두 번  싱글 베드 깨끗한 화장실과 샤워실 수압이 좀 낮지만 포트 및 포트 주변의 여러 레스토랑 하지만 제한된 주차 전용 주차장 함께  즉  베이 에 속하는 호텔 때문에 저희는 밤에 에어컨이 바닥 난방 시스템이 있고 밤에 철퍼덕 소리가 있다 체크인 했을 때는 무료 세면 용품 제공 칫솔 면도기 등이 있습니다그것은  개의 객실과 더불어 작은 오두막집이었다 그러나 침대 호텔보다 매우 좋았다 장소의 주인은 매우 상세한 사람이었다 그리고 그는 장소를 위해 많은 것을 많이했다 나는 이른 겨울에 있었는데 따뜻 했든 나는 서울 출신 이었든 전형적인 제주 경치와 바람을 즐길 수 있었다제주여행 중 일을 묵었던 곳입니다 친절한 사장님 덕분에 길을 잃고 헤메다 차를 얻어타고 숙소로 돌아오기도 하고 밤늦게 들어올때도 픽업해주셔서 편히 돌아올 수 있었습니다 깔끔하고 조용해서 더더 좋았던 곳입니다애견동반이어서 선택한 곳인데 주인분도 너무 친절하시고 좋았음 세세하게 챙겨주셔서 감동받았다 방도 괜찮고 경치도 너무 예쁜곳 재방문 의사 있음야경이 너무 예뻣던 곳 방에서 바다도 보이고 고깃배 불빛이 너무 좋음 제주다운 정경과 깨끗한 시설이 마음에 듭니다그것은 바다의 경치와 함께 머물 수있는 편안하고 깨끗한 호텔이었습니다 비치  레드  화이트 말 모양의 등대가 근처에 있으며 동문 시장에서 택시  로 약  분 거리에 있습니다조용한 지역에서 더 오래 머 무르려면  가 좋은 곳입니다 일과 여행 후에 휴식을 취할 수있는 소파와 커피 테이블과 멋진 침대가 있습니다 내가 머물렀던 스튜디오에는 요리 할 수있는 기회가 있으며 큰 냉장고가 있습니다 광범위한 요리 또는 바비큐를 위해 요리 및 웍룸이 설치되었으며 저녁에 가족 및 친구와 함께 보낼 수있는 야외 테이블이 여러 개 있습니다 하모니 리조트는 아이들을 환영합니다 전망대 그네 및 놀이를 위해 예약 된 다양한 장소가 있습니다 작은 태양열 온수 수영장도 있습니다 야외 의류를 세탁 할 수있는 공용 세탁기가 제공됩니다 전기 자동차의 충전 대가 있습니다 소유자와 그의 아내는 매우 도움이되고 서비스 지향적입니다우리는이 장소를 절대적으로 좋아했다 대도시 생활의 번잡함에서 그러한 변화가 필요합니다 객실은 넓고 잘 관리되어 있습니다 소유자와 그의 가족은 최고입니다 멋진 가족 우리는이 보석을 발견하게되어 기뻤습니다 우리는 돌아 오기를 기다릴 수 없다회사를 통해서 간거라 큰 기대는 안했지만 방도 넓고 리조트도 작지만 잘 꾸며져있어 부족함없이 푹 쉬고 왔어요 한 겨울에 갔었는데 창이 두꺼워서 인지 춥지도 않고 잘 지냈구요  리조트가 큰길가에 있는건 아니라 주변에 걸어서 갈만한 곳은 없지만 차를 렌트해서 다녀서 불편함은 없었구요  체크아웃하는 날 폭설이 내려서 비행기가 결항되고 난리도 아니였는데 리조트 사장님께서 아침엔 차에 쌓인 눈도 같이 치워주시고 오후엔 공항까진 안전히 잘 갔는지 확인전화도 주셔서 진짜 감동받아서 눈물날뻔 했네요 ㅠㅠ  폭설로 생고생을 해서 당분간은 제주도는 쳐다보기도 싫지만ㅋㅋ 하모니 리조트는 정말 좋았어요 ㅎㅎ룸 가구들이 연식이 있어보이긴하나 청소상태가 매우 깔끔해서 불편함없이 편히 묵고갑니다 아침에 일어나서 오션뷰가 너무 멋있어요 한림읍에 위치해서 주변관광지 가깝구요 프런트직원분들이 매우 친절하셔서 좋은인상을 가지고 여행마무리합니다 한림에 위치해 있어서 서쪽 바다를 보기에 좋습니다 해변 바로 옆은 아니지만 호텔에서 해변이 보입니다  풍력 발전기가 서 있는 뷰가 멋집니다  객실 컨디션은 썩 좋지는 않습니다  침대도 편안하지는 않았고 화장실도 그냥 가정집 화장실 같았어요일단 방음시설도 좋고 이동하기 편한 곳에 위치해 있음 호텔에는 수영장도 있었지만 애기들이 너무 많아 이용이 어려웠음 시설은 깨끗했음 공항이랑 가까워서 좋음해안뷰로 하면 전망이 참 좋습니다 하지만 침대 스프링이 오래되었는지 허리아픈스프링이랄까 그것만 빼면 전망도 좋고 물도 잘 나오고 가격대비괜찮은 편입니다서해 바다가 가까이에 있어서 바다로 가기 좋아요 하지만 프론트 남직원의 친절도는 바닥입니다 고객 대하는  교육이 제대로 되지 않은것 같아요 인터넷도 안되고 와이파이도 안되어서 말했더니 어쩔수 없다는 답변만 참 어이가 없더군요개인수영장이 딸린 고급 풀빌라라 가격대는 있지만 외국 풀빌라에 뒤지지 않았어요 개인 정원에서 바베큐도 할수있고 가구 하나하나 모던스타일로 신경쓴 흔적이 보였어요 기념일에 가면 로맨틱한 곳박일로 명 가족 여행을 갔습니다 출발하기 전날 숙소를 으로 루온토를 찾아서 출발 전날 오후에 예약을 했습니다 가격은 조금 비싼 편이나 전체적인 로 보면 적절하다고 생각됩니다 특히 남자 의 친절에 큰 감동을 했습니다 아침 식사 간식 특히  회는 밖에 있는 식당보다 더 청결하고 맛있어 씁니다    수영장을 매일  하여서 주야간 즐겁게 사용할 수 있었습니다  전체적으로 제주도에 있는  중 에서 최고의 서비스와 시설을 가지고 있습니다                                    월정리 해수욕장까지 도보로 분이면 이동 가능합니다 비치뷰 룸이라 좋고 독립적이라 편했지만 통유리라 밖에서 너무 잘보여서 블라인드 올리고 있기가 힘들어요 이거 말고는 모든게 만족스러운 호텔이었습니다정말 저렴한 풀빌라라 큰기대는 안했는데 너무 좋았습니다  엄청 크거나 그렇지는 않지만  깔끔하고 있을건 다 있어요 눅눅하다는 평이 많아서 걱정했는데 제가 방문했을때는 괜찮았습니다  풀장은 둘이 이용하기 좋았고 깊었으며 튜브를 빌렸는데 튜브가 귀여웠습니다  추워서물놀이를 많이 못해 아쉬웠고요 또 자전거를  빌릴수가 있는데 처음에 빌려줄때 보증금 이라고 말해서 돌려주는건줄 알았는데  그냥 내고 빌리는거였고요 빌리는 금액은 한개당 천원 정도였어요  비싸다면 비싸고 싸다면 싸고 빌리면 하루종일이니 꼭 가자마자 빌리세요 ㅋㅋ  자전거 타면 금방 월정리 카페거리까지 갈수 있습니다 반대쪽으로 가면 등대가있는 조용한곳도 나오고요 위치도 적당했어요 시끄럽지 않고이번에 월에 남편이랑 제주여행가면서 처음가봤는데 먼저 가봤던 언니가 추천해줘서 가게됐어요 월정리 해변 바로 주변이라서 저녁엔 걸어서도 월정리쪽가서 카페를 가도되는 그런 거린데 각각 개인 방 마다 이 배정되어있어서 애기들이랑 같이 가도 너무 좋을것 같아요 다만 오픈형이라 밖이 보이는 이라는점만 참조하심 될것 같아요 아침도 맛있는 죽을주시고 무인형이라 언제든지 예약하고 원하는 시간에 들어가실수도있어요 완전 추천합니다 진짜 이뻐요출장중에 많이 이용하는 호텔로 깨끗하고 서비스가 좋와서 계속이용 중입니다 무료와이파이 무료 주차등의 서비스와 위치의 적합성 때문에 공항과 맛집을 다니는대도 좋음로비는 작고 앉을 곳이 비좁긴 하지만 리셉션의 지배인이 매우 친절하게 안내해 주었음 객실은 청소상태가 매우 좋고 바닥과 욕실 침구 전부 깔끔하여 불편함이 없었음 잘 관리되는 객실을 보는 느낌이었음 다시 방문할 의사 있음 객실마다 무료 와이파이가 있는데 매우 빠름체크인 및 체크 아웃 시에 나는 월 일  월 일  그들은 엘리베이터를 이용할 때는 큰 짐이 있을 때 엘리베이터는 작은 로비 첫 번째 방이 너무 작은 것 내가 틀리지 었다 방은 넓고 사용하는 순간부터 단계입니다 침대는 깨끗하고 했습니다 화장실은 좀 오래 되지 않은 깨끗한 새 청결함은 괜찮은 호텔 나는 보이지 않는 것이 아침 식사 제공 본 모든 것들은 로비에서 커피나 차를 직접 언제든지 수 있습니다 로비에 있는  차가운 물은 필터링할 수 있습니다 나는 많은 밤을 숙박 하지 않기 때문에 저는 그래도 편안했습니다장점  호텔은 찾기 쉽고 잘 알려진 택시 기사  직원들은 친절하고 도움이 되었다  방이 매우 큰 제가 예약한 더블 룸 매우 깨끗하고 편안한 숙박에 필요한 모든 건지  와이파이 신호도 훌륭한 곳  호텔이 위치한 곳에 위치한 레스토랑 바 카페 굶주리고있다 이 때 도움이 많이 되었습니다  저는 스쿠터를 빌려 공원을 무료로  공항에서 매우 가깝고  단점  직원들의 영어 수준이 심각하게 듭니다  호텔에서 멀리 떨어져 있는 섬의 주요 관광 스쿠터를 빌릴 수 있지만 이 방법은 제가 방문한 섬 제가 강력하게 추천합니다그랜드풀빌라는 아이들과 함께 가기에 최고의 풀빌라였어요 중앙수영장도 매우 넓었고 명이 한 객실에 들어갈 수 있는 숙소 찾기가 어려웠는데 아주 넉넉하게 잘 수 있었어요게다가 스파와 수영장이 함께 있어 하루종일 수영하다 추우면 스파에서 쉬다가아이들이 너무 좋아했어요그리고 세탁기와 건조기까지 함께 있어 수영복도 바로 세탁해서 말릴 수 있고 세탁기가 객실내에 있는 리조트는 처음봐요진짜 대박 게다가 오픈한지 얼마 안되어 엄청 깨끗해서 더 좋았네요재방문의사  완전 추천해요성산일출봉 인근 스파빌 층 객실을 이용했는데 층은 야외 월풀이 있는 프라이빗한 리조트층은 월풀과 개인풀이 있다고 함 메인 풀은 월부터 이용가능하다도 해서 이용하지 못했지만 층짜리가 한 동으로 구성되어 있어서 각층 개의 객실 있음 객실도 아주깨끗하고 테라스에 티테이블과 야외월풀이 있는데 시간 이용할 수 있어서 매우 좋음 더블베드가 두개 있고 창밖으로 보이는 풍경도 너무 예뻐서 좋았음  단 야외월풀을 작동시키면 물이 돌면서 안에 부유물들 나와서 월풀내부 청소관리가 잘 안되는 것 같았음  주차공간 넓음 근처에 해안도로가 있어서 산책하기 좋음      는  월 초에 대중에게 문을 열었습니다 성산 일출봉까지 단 몇 분 만에 유명한 관광 명소와 가깝습니다 또한 제주 동부의 매우 뜨거운 장소 인 세화 해수욕장까지 해안선을 따라 짧은 운전 거리를 즐기기에 가장 좋은 곳입니다  매우 새롭기 때문에 항해에서 쉽게 발견되지 않았지만 직원들은 매우 친절했으며 우리에게 리조트를 찾는데 문제가 없었습니다  아름답게 디자인되어 마치 리조트 구역으로 걸어 들어갈 때 발리 섬 어딘가에있는 것처럼 느낍니다 그것은 아주 작지만 필요한 모든 것을 갖추고 있습니다   편안한 분위기 깨끗한 공기 및 일부 녹지 평화로운    빌라는 매우 단순하고 현대적인 디자인으로 라운지 및 객실 주변에 개인적인 손길이 가미되어 있습니다 그것은 넓고 모든 것이 새롭고 양질입니다 야외 스파와 함께 멋진 발코니 공간 우리는 그것을 사용할 기회가 없었지만 태양 바람 및 와인 한 잔을 편안하게 즐기고 즐길 수있는 독특한 독특하고 멋진 지역을 사용했습니다  음식은 의외로 좋았다 그것은 좋은 프리젠 테이션과 좋은 취향을 가지고있었습니다 한국 스타일과 서양 요리에 매일 다른 세트 메뉴가있었습니다 나는 보통의 한국 식당처럼 반찬을 더 주문할 수 있을지 몰랐다 실제로 당신은 더 많은 것을 요구할 수 있습니다 나는이 리조트에서 일하는 전체 직원이 매우 친절하며 보살 피는 것을 보았습니다  근처에 많은 레스토랑이 있습니다 리조트는 다른 주제로 매달 수업을 계획하고있었습니다   추가 요금이나 빌라 손님에게는 무료이지만 룸 테라스에서 바라보는 이국적인 경치의 호텔 조경과 가을에도 편안하게 즐길수 있는 수영장시설 및 옥상 인피니티풀의 매력이 너무 좋은 호텔  중문단지에 위치해 있어 근처 볼거리와 맛집이 많아 딸의 생일 여행으로 너무나 좋은 시간을 보낼수 있었내요바다앞에있어 전망은 좋으나 시설이 너무 노후화되었고 주변에 먹을거리가없어 차로 움직여야하는 단점시설은 노후화되었고  복도 곳곳에서 곰팡이냄새가 남 객실은 그럭저럭  해변 근처라서 조용히 산책하기 좋음 리조트 시설은 좋았지만 난방에 문제가 있었음 다른 객실로 바꿔 주지는 않았지만 소형 이동식 온풍기는 가져다 주었음  바다가 바로 보여 경치는 좋았지만 위락시설이 없어 별로였음객실은 깨끗해서 마음에 들었구요  다만 아쉬운게 있다면 공항이랑 리조트까지 거리가 좀 있어서 가는데까지 시간이 조금 걸렸습니다한라산 등반 후 호텔 체크인하고 수영장에 들어가니 피로가 풀리네요 월이라 쌀쌀했지만 수영장은 도로 유지하며 이용 가능하도록 운영하더군요 가성비가 아주 좋았습니다넓은 객실에 취사 가능합니다 거기다 가격까지 매우 저렴하네요 호텔 중앙에는 실외 온수풀이 있어 수영도 가능합니다 저렴하고 괜찮은 호텔을 찾으시면 추천드려요 단점은 바다 근처이긴 하지만 바다는 잘 보이지 않고 차가 없으면 접근하기 힘들다는 점이겠네요근처에 살고 있기 때문에 이 호텔을 선택하는 매우 중요한 요인이 있는 해변으로 수영장의 존재 호텔은 버스 정류장에서 멀지 않은 좋았지만 여태껏 내가 묵어야 하는 차가 있어서 하지 않은 정보는 버스 정류장에서 분 정도 이 호텔은 도착해서 공항에서 찾기 어려운 가운데에 있는 작은 주거지역이라 적당한 사람들에게 이 호텔은 섬에 도착했을 때 차 호텔은 깨끗하고 욕실 침구는 깨끗했고  방에는 작은 부엌 아침 식사도 좋았습니다 차가운 수영장 물도 가끔 주말 따뜻한 물이 있을 때 손님들이 었습니다저는 이곳에 별 개 있기 때문에  더러운 신발은 대부분 서양인들이 사용한 비누가 샤워를 해야 할 바에 한국에 살 지원하지만 이 신발을 비누 및 특정 장소에 예상 공유할 수 있습니다 딱딱한 침대가 전형적인 한국식으로 딱딱한 하지만 우리는 우리 자신의 샤워 한 신발을 신고 딱딱한 침대에 비누 한국 호텔에 기대했던 것 방은 깨끗하고 넓고 주방은 놀라울 정도로 좋았습니다 이 포크 가 필요 대부분이 서양인들이 생각하지 않습니다 아래 을찾을필요성이 수건은 수건 크기 뿐만 아니라 아시아 평벅  길은 매우 좁고 스 캐리 이 무서운 진입로 간판을 신발이 라고 평가하는 비누 없지 그보다 이 자 들이 할 수 있는 텐  거실 우리는 두 개의 침실  베드 우리 일행 중  집에서 느껴졌다 할 수 있는 좋은 크기의 냉장고 스토브 탑 전자레인지 전기 주전자는 물 인스턴트 커피를 가지고   수영장 국가 전망을 즐기실 수 있습니다 내 어머니 마음 놓여 있었습니다 내 아이들은 큰 거실 남편과 저 의 개인 정보가 별도의 침실 저희는 제 층 계단 액세스 주차할 수 있지만 쉽게 가깝습니다 이는 분 드라이브 씨   분 에서 분 제주 시내 쪽 관광명소 전반적으로 한 가족인 느낌이 아주 좋습니다 깨끗하고 깔끔했습니다 제주 여행 시 이용하면 좋을 것 같아요 식사도 괜찮고 직원도 친절해서 정말 좋아요 전망도 한라산과 해변을 다 볼 수 있어서 너무 좋았습니다 다만 서귀포 쪽과 많이 멀어서 해당 지역 방문시 이동시간이 꽤 걸립니다아들 친구 생일날이라고 여러 가족들이 다같이 모여서 잤던 곳이네요 생일의 주인공 가족은 수영장이 딸린 풀빌라를 빌렸고 저는 제일 일반적인 객실을 빌려서 묵었습니다 수영장이 커서인지 풀빌라 크기에 비해 실내는 약간 작았지만 여러 가족들이 지내기에는 충분한 크기였습니다 야외에서 바베큐 파티를 하면서 넓은 식탁이 놓여져 있어 재미있게 놀다온 것 같습니다 약간 큰길에서 안쪽으로 들어와 있어서 잘 눈에 띄는 곳은 아니지만 차로 접근하는데 어려움이 없었고 오히려 주변에 건물들이 없어 아늑하게 지낼 수 있었던 곳이네요 층에 편의점이 있고 지하에 오락시설들이 갖추어져 있어 가족들끼리 친구들끼리 놀러와서 지내기에도 불편함이 없었습니다 늦게 일어나 다음날 조식은 먹어보지 못했지만 조식도 제공되기 때문에 다음에 오더라도 편하게 묵을 수 있을 것 같습니다 프론트 직원들도 친절합니다 체크인과 체크아웃 모두 편하게 했습니다깨끗하고 깔끔했습니다 가족여행 시 이용하면 좋을 것 같아요 식사도 괜찮고 직원도 친절해서 정말 좋아요  전망도 한라산과 곽지해변을 다 볼 수 있어서 너무 좋았습니다 특히 리조트 입구로 들어가는 길에서 제주의 향기를 물씬 느낄 수 있어서 좋았어요 호텔 방은 크고 넓고 깨끗합니다 욕실은 크고 깨끗하고 샤워시설도 잘 작동합니다 무더위 에 에어컨이 있다 미국의 작은 방에서 좋은 전망을 즐길 수 있어 옷을 수 있습니다 다만 한 가지는 열이 매우 눈에 띄는 현지 농장 비료 는 냄새가 났다 베란다 문 열자마자 걷다 보면 냄새가 나면 순간 전반적으로 좋은 경험이었습니다제주도에 한 기본적인 호텔 방은 괜찮았지만 수리가 필요하지만 조금 우리는 먼저 제안함 에도 예약할 수 있는 발코니 없는 방이 있었습니다 그들이 우리 방에 발코니가 있는 하루 밤 보낸 후 하나의  바베큐 식당은 아주 좋습니다 시설과 대형 수영장과 가족 활동 때문호스텔 목조 주택 너무 아름다워 그것은 사랑스러운 분위기가 있습니다 나는 그 집을 너무 아름다워서 한 밤 더 머물렀다 깨끗합니다 충분히 큰 기숙사 수건은 매일 바뀌 었습니다 손님에게 충분한 샤워 아침 식사는 기본이지만 괜찮습니다 사랑스러운 정원이 있습니다 호스트와 그의 어머니는 정말 좋았어 나는 유일한 외국인 손님이었다 한국인도이 영빈관을 좋아하는 것 같습니다 위치  근사하지만 좋은 곳은 아닙니다 더 많은 서쪽에 위치하여 일부 는 호스텔이 픽업하기에는 너무 멀기 때문에 동쪽 코스 투어에 참가하는 것을 허용하지 않습니다 글쎄 나는 픽업 지점에 가서 괜찮 았어 시내까지 버스로  분 이상 걸립니다 더 나은 차를 타십시오 싸다 국제 운전 면허증이 필요해비수기엔 특가가 많이 나오길래 저렴하게 선택했는데  가성비가 짱입니다  넓고 난방잘되고 온수수압좋고 와이파이 빵빵하고 기본적으로 있을 것들은 다 있고 잘 되어 있습니다  위치도 관덕정 정류장에서  동문시장에서  정도인데 주변에 식당 편의점도 많고 메가박스도 있네요 이 정도 가격에 최상인 듯  단점은 침대 메트리스 저는 예비이불하나 더 깔고 잤습니다 제주국제공항 근처의 시내 호텔로 객실내 크기가 넓직하고 깔끔하나 욕실은 욕조가 없고 작은 편이라 좀 아쉽네요 호텔 근처에 시장도 있고 현지 맛집들도 있어 관광하기 편리한 위치에 있는 호텔이랍니다방이 생각보다 넓었고 시설도 깨끗한 편입니다 다만 외부 벽이 하나라 외부소음이 들릴수 있고 가 작은게 좀 아쉽습니다 그리고 주기적으로 돌아가는 냉장고 소음이 배치된 위치때문인지 방 전체를 울려서 처음엔 공사소음인줄 알고 잠을 설쳤습니다 이런 사소한 부분빼면 위치도 괜찮고 전체적으로 만족스러웠습니다시설이 으리으리하진 않지만 깔끔하고 방이 넓었고 취사시설도 있어서 편했어요 탑동 근처라 구제주쪽 맛집가기도 편했고 공항도 가까웠습니다 늦은 비행기 잠깐 자고 갈 비지니스호텔입니다 룸바닥이 매우 미끄럽습니다 조심 제주공항에서 택시비 원 아침으로 유명해장국집이 분거리에 있습니다 저녁때 한잔먹을 술집도 근처에 있어 좋습니다 룸안에 조리시설은 있으나 그릇  수저 젓가락 등은 없어요사드세요에 머무르는 최고의 장소 위치는 숨 막히다 그것의 자신의 연금에서 바다를 마주보고 있습니다 연금은 넓고  인분으로 충분합니다 이 건물에서는 요리가 허용되지만 연금 지역 밖에있는 지정된 지역에 쓰레기와 쓰레기를 버려야한다는 사실을 일깨워줍니다 에서 가장 좋은 바다 경치와 함께 추천합니다출발 전  예약을 통해  박 동안 예약했습니다 에서 여행  개월 전에 도착하기 전에 일정 금액을 입금해야했습니다 그러나 제공되는 계정 세부 정보는 충분하지 않았으며 언어 장벽으로 인해 프로세스가 크게 방해되었지만 결국 체크인을 한 후에는 전체 비용을 지불 할 수있었습니다   체크인  위치는 공항에서 약  떨어진 곳에 위치하고 있으며 연금에는 멋진 바다 전경이 있습니다 연금에가는 도중에 일부 식료품 쇼핑을위한 주요 도로에 위치한 지역 슈퍼마켓이있었습니다 체크인 절차는 순조 롭지 만 사무실이 실제로 지하에 있었기 때문에 처음에는 사무실을 찾을 수 없었습니다 강한 바람으로부터 자신을 보호 할 수있는 좋은 장소 도로에 몇 개의 주차장이 있었고 모든 손님에게 충분한 도로가있었습니다 우리 연금은  명의 방이 었는데 성인  명과  살과  살의 어린이  명을위한 최고의 장소였습니다 그들은 우리가 요리하는데 필요한 모든 것을 가지고있었습니다 주방 용품 밥솥 등을 제외하고는  근처의 산토 리니 연금  에서 약  거리에있는 인근  시간 동전 세탁기를 쉽게 사용할 수있는 세탁기와 건조기를 제외합니다  그러나 우리에게는 약간의 결함이있었습니다 우리 제 의 밤에 우리는 자동 자물쇠 열쇠가 기능적이 아 녔던 것을 알기 위해 집으로 돌아갔다 그리고 기술자가 마침내 화장실 창문을 통하여 등을 발로 열기 전에 약  분 밖에 기다려야했다 여전히 작동하지 않습니다 그들은 우리의 소풍 도중 그금능해수욕장에 편의점이 이 펜션 층밖에 없어요 금능해수욕장에서 제일 가깝기도 하구요  방도 넓긴 하지만 오래된 펜션이라 감안하고 성수기에 비해 저렴한 가격에 묵었네요  주인분들 친절한 편이고 수건 교체도 바로 원하는만큼 해주시고 층에 세탁기 이용도 가능했어요 최고의 호스텔이나 저렴한 한국에서 일 장변이 제주도에 있는 아주 짧은 기간 동안 우리 차를 가지고 있어 후에 공항에서 내려서 운전을 하는 곳입니다 할 거라고 생각하지 않는 도시에서 멀리 떨어져 어 약 한 시간 반 에서 야간 드라이브 낮은 가시성 바다가 보이는 것은 사실이긴 하지만 아침에 신선한 바람을 상상할 수 있는 아름다운 그 새를 축하 곡 일부 시걸즈 아마 즉시 취할 수 있는 이미 느낄 수 있었다 그 어떤 휴가 합니다   우리는 너무 나쁜 하나의 짧은 밤을 묵었습니다  하지만 직원들은 말 그대로 영어 아주 가난한 한 신체 언어 인치자를 이 때 여행을 한다면 재미있는 부분이 지                                                                                                                                                                    위치는 좋지만 룸컨디션은 별로예요 구석구석 먼지도 많도 리뷰보고 이용했는데 사진과 다른 룸에 매우 실망했습니디 직원들은 사무적이고 별로 친절하지 않습니디 다시 이용할 일은 없을 듯 합니다곽지 해수욕장 바로 앞이라 뷰가 정말 좋습니다  편의점 맛집 등 가깝고 여행하기 좋은 곳입니다  층 로비에 오픈된 공간에서 바다보며 맥주 한잔 하는 것도 좋습니다 룸도 청결했습니다  재방문 의사 있습니다 씨뷰만 훌륭한 호텔 월초 바닷가 앞이라 썰렁할 때인데 중앙난방 방식이라면서 난방을 끄고 에어컨을 켰다고 했음 그래서 밤에 많이 추웠음 난방 불가라고 함  룸 바닥의 카펫은 청소가 안되는지 남편과 아이가 계속 재체기 하고 박째에는 콧물나기 시작했음 명 예약했는데 모든 애머니티수건슬리퍼칫솔등는 명꺼만 준비 되어있음가격대비 인테리어가 멋진 숙소입니다 지어짅 얼마 안되어 매우 깨끗하고 그렇게 넓은 편은 아니지만 바닥도 나무재질이고 짙은 색상의 모던한 인테리어가 인상깊었습니다 호텔에서 분 거리에 바로 아이들이 놀기좋다는 곽지해수욕장이 있었느나 아쉽게도 태풍시즌이라 모래바람 사이에서 사진한장 겨우 건져왔습니다 룸서비스는 없었고 조식만 가능하나 건너편에 쌀국수 잘하는 집이 있어서 거기로 갔습니다만원 안쪽에 특급호텔 시설을 바라는 분들이 꽤 많네요 비수기라 저렴하게 이용했고 곽지과물해변과 가까워서 좋았습니다 조금만 걸어가면 해변과 식당이 있어서 괜찮았어요 다만 내부가 깔끔하게 정돈된 느낌은 아니라 청결에 신경썼음 더 좋았을 것 같아요왼쪽으로나가서 오른쪽으로 가면 분안에 번화가가 나오는데 호텔위치는 정말 신기하게 조용합니다 밤에 뭐먹으러 가기도 좋고 교통도 편하다는게 가장장점이였네요 ㅎㅎㅎ 조식은 늦게와서 못먹었다는게 함정 ㅠㅠ제주도에 갔을 때 여기에 머물렀는데 방이 깨끗하고 넓어서 좋았어요 조식도 맛있게 나오는 편이구요ㅎㅎ 한식이랑 양식이 다 있어서 좋았어요깨끗깔끔 친절해요 너무 좋은 선택이었어요  직원들이 정말 친절해요  공항과 가깝고 교통 행정 쇼핑의 최상의 위치에 있네요 주차장과 로비가 좀 작지만 직원들의 친절과 배려에 안전하게 마음놓고 쉬다갑니다비수기라 그런지 가격이 싸네요 조식도 먹을것만있어 알차고 커피가 대박 케냐커피든가 싱글오리진 합리적인 선택이었네요 일동안 제주여행에서 가성비최강이네요 공항인근이라 추천합니다가성비굳 새로오픈한호텔이여서 깨끗하고 편안하다 공항이랑도가깝고  편의시설도 주변에있고 조식도  맛있었다공항에서 분 거리에 대도로변에 위치하고 있어서 밤에 도착했는데도 한눈에 보여서 쉽게 찾았어요 리조트인데 거의 호텔급 침구로 너무 깨끗했구요 아기랑 왔는데 전동차에 수상자전거 놀이터 즐길게 너무 많아서 결국 퇴실하고 한시간을 넘게 놀았네요 다음에 와도 여기 올거 같아요 리조트 안에 놀거리가 너무 많아서 좋아요객실도 깨끗하고 넓고 직원도 친절함 장난감차 타는 아이들이 많이 좋아라함  딱히 불편한점도 없음 실내 바비큐장은 고기집 같아  식당에서 먹는 거 같이 좋았음                                                               조용한 숙소와 편한 잠자리 아침에 사장님의 멋진 토스트와 사과 제주도의 가을은 여기서 제대로 정리했습니다우리가 예약한 트윈 룸 트리플 룸 이지만 호스트에서 우리를 보자 방은 크고 만족하는 방에서 자유롭게 이동할 수 있습니다 위치는 정말 행복했고 로컬 주거 지역 내 동생  블렌드는 주민들은  한  전반적으로 깨끗함이 좋은 곳에 있었고 매일 청소가 되긴 하지만 저와 제 동생은 그가 따뜻하게 인사 하고 도움이 되었습니다 그 를 보자 우리의 옷 도 한 천으로 랙 건조한 방 그는 한국어를 잘 도 주인이 하는 말 중국어 및 일본어 영어를 조금 만 하지만 그의 영어 실력도 꽤 좋은 문제가 없습니다 제주도에 다시 온다면 미래 이 호텔에 올 다시 오 설명하겠습니다 좋은 작업을 계속 하십시오                                                                                                                                                                              맞은 편에 위치하여 멋진 전망을 제공합니다 호텔 근처에서 식사 장소가 있습니다 직원도 친절합니다 내가 예약 한 방에는 커다란 창문이있는 해변을 향한 방 안에 거대한 욕조가있다 너무 실용적이지는 않지만 아들은 그것을 좋아합니다 그렇게 실용적이지 않은 한 가지는 샤워 공간입니다 샤워 후에 화장실 바닥이 젖어 있습니다 내가 머물렀던 방에는 마모의 흔적이있다 호텔 바로 맞은 편에 무료 주차장이 있습니다 우리가 단지  박 동안 머물렀던 것에 따라 총체적으로 그것은 멋진 체재 다직원 분들도 친절하고 숙소도 깨끗했고 조식도 좋았습니다 바다도 가깝고 서우봉 산책도 걸어서 할 수 있는 거리어서 좋았어요 루프탑 수영장도 가족들과 놀기 좋았습니다                                                                                                                                                                                                                 우리는 신혼 여행으로 제주도를 방문했습니다 이 호텔은 숙박을 해변 근처에 조용하고 편리한 그들은 객실 내부에서 스스로 요리할 수 있습니다 우리는 아주 편안했고 좋았다 가격이 적당하다 그러나 아침 식사가 형편 없었습니다 우리는 적극 이 호텔을 추천합니다호스트는 아주 친절하고 도움이 되었습니다 그는 우리를 픽업해서 근처에 있는 동안 애월 버스 정류장에서 길을 잃었다 이른 체크인을 할 때까지 우리는  편입니다 방은 깨끗하고 아름답게 꾸며져 있는 쾌적한 작은 부엌 이다 자신을 요리할 수 있다면 그 이상의 여가시간 또한 이 곳은 아주 아름다운 주변 환경 평화로운 바다를 걸어서 갈 뿐 좋은 식당  이 위치는 버스 정류장  분 거리에 있는 을 타고 그리고 제주시 할 수 있는 아주 좋은 대중 교통 수단이 없고 차를 렌트 한다면 강력 추천합니다                                                                                                                  원에 일박하였습니다 공항에서 그렇게 멀지 않으므로 늦은시간 도착해서 렌터가 있는 사람은 하루 묵으면 좋을 듯 네이버 검색결과 안좋은 리뷰가 있긴 한데 그정도는 아니라 봅니다 다만 시설이 열악한건 사실임 그치만 방 넓고 온수 따뜻하게 나오고 크게 불만 없었습니다                                                                                       늦은 휴가겸 태교여행으로 선택한 제주 월의 마지막 날이지만 숙박비를 포함한 모든 여행자 물가가 의외로 비쌌어요 아기도 함께하는 여행이라 숙박업체 선택이 제일 신경쓰였어요 급 호텔을 가고싶었지만 너무 비싼 요금때문에ㅎㅎ  폭풍검색 끝에 신규로 오픈한 호텔 몇군데 찾았는데 예약이 가능한 객실이 있는곳이 별로없었어요 리치호텔 아무리 검색해도 후기가 없어서 고민 많이했는데 규모가 크진 않지만 저렴한 가격에 애월바다가 보이는 월풀 욕조가 있는 깔끔한 호텔이예요 가성비 좋은 제주 숙박업체예요 강추합니다  신축건물이고 모던한 방 디자인 인테리어 스파실 침실 모두 좋아요 펜션처럼 음식해먹을 수 있는 인덕션도 있더군요 그런데 그릇은 없었어요방에서 보이는 사진 좋네요 위치 보기 성산일출봉과 가까운 곳에 이 방은 꽤 비싼 이유는 성산 일출봉 은 여러 해산물 식당을 찾을 수 있다 흥미로운 아무것도 할 수 있는 지역을 마트와 레스토랑이 있지만 호텔 앞에 있다 저는 이 호텔을 추천하지 않을 경우 오랜 시간을 보낼 곳을 찾는다면 실내 저는 전혀 생각 하지 않은 방 청소도 있기 때문에 나는 냉장고에서 유리 됩니다 사용할 수 있습니다 저와 제 남편은 갑자기 일어나 새벽 시까지 잠을 잘 수 있기 때문에 침대는 편안하지 않고 갑자기  문에 노크 를 선택하지 않은 때 에 전화가고 싶은 것을 사면 아마도 제 남편이 한국 우리에게 비싼 마트 직원들의 청원 을 하다 뭐 이렇게 보면 가난한 나는 한국 문화를 이해하지 아마 그들은 외국인만 열면 어쨌든 저는 캄보디아 같은 말을 하지 않는 태도                                                                            여름 성수기에 방문했는데 가격적으로 괜찮았습니다 리모델링을 했는지 신축을 했지는 건물 시설물은 위생적이고 깨끗한 편이었으나 제주의 습한 기후 탓인지 벽지 등에 곰팡이가 슬어 제습기를 가동하고 있었으며 곰팡이를 지운 흔적이 남아 있어 조금 불쾌했었습니다 한여름 이외에 방문을 권장합니다성산일출봉 또는 우도가실분은 전날 여기서 숙박하시면 될듯합니다 객실룸 상태는 가격대비 좋습니다 다만 금연객실로 달라고 했음에도 불구하고 담배냄새가 나서 그 부분만 별로였습니다 하지만 가격대비 룸상태는 훌륭한 편이라 관광일정이 빼곡히 있어 호텔이용을 안하는 날에는 이곳을 이용하면 가성비가 좋을듯 합니다일단 해안도로 근처라 주변 산책 하기 좋았구요 딱히 주변 시설을 이용할건 없었지만 펍이나 편의점이 있어서 아니면  차 타고 조금만 가면 노형 시내가 나오니 그렇게 문제가 될건 없다고 생각합니다  제가 머문 곳은 신관 룸이였는데 싱글베드개와 더블베드개가 있는 방이였습니다아마 신관에 있는 룸이 다 호텔식 방만 있는 곳 같고 구관이 주방이 있는 펜션식 룸인거 같습니다   룸컨디션이 정말 좋아 이 정도는 아닌데 그냥 겉보기에 괜찮을 정도였어요 한 가지 계속 눈에 띄는것은  방 아래쪽 벽지들이 다 긁혀있었는데 복도의 벽지들도 다 아래쪽 벽지들이 긁혀서 튿어져 있더라구요 여튼 이러 저러한 보수들은 신경 안 쓰시는거 같더라구요 사람 손때가 너무 묻어있는 그런 느낌이 많았습니다 군데군  데 오염이 있는 부분이 있었습니다 규모가 크진 않지만 편의점 바베큐 수영장 등 편의시설이 잘 되어있어요 세탁시설도 있구요 바로 앞에 도두봉이 있어 아름다운 전경도 볼수있어요 해안도로에 있어 오션뷰 객실 전망이 멋집니다공항에서 분정도 거리에 위치해있습니다 해안도로 바로 옆이라 전망이 좋고 층과 도보 분거리에 까페 편의점 약국 등 편의시설이 고루 갖춰있습니다 리조트 본관 이용했는데 사진과 동일하게 욕실 주방 침대 등 굉장히 깔끔합니다 크진 않지만 풀장도 관리가 잘 되고 있고요 바베큐장도 무료로 이용가능해요 야자나무 조경이 굉장히 잘 되어있어서 제주시 근처인데도 휴양지 느낌이 많이 납니다 자전거도 대여해준다고 하는데 이용은 못해봤구요 바로 앞에 도두봉이 있어 산책코스도 잘 되어있습니다공항에서 필드  분 택시로   최저 박을 예약했는데 작업하는  및 에어컨 시설이 있습니다  인터넷 및 갔습니다  꽤 딱딱한 침대  타피에이의 개선이 필요한  유지 보수가 부족함 자신의 시설 세도  칫솔  공항을 예 들릴 수 있습니다  전반적으로 괜찮았어요공항에서 가까움 우리는 특별한  온라인을 통해 있어 보이는 하 깨끗하고 좋습니다 우리의 가격은 있어 예약시  사람 많은 조금 실망했습니다 에어컨은 약하고 일반적인 불만 이다 요금 조심하세요 와이파이 무료 및 확인세탁기 다리미 등 사소한것까지 갖추어져있어 묵기에 쾌적하고 편리했습니다 바로 앞에는 바다가 보여 창밖으로 보이는 뷰가 탁트이고 좋았구요 사장님 두분께서 친절히 맞이해주시고 꼼꼼히 신경 써 주셔서 굉장히 감사했습니다 소수의 인원도 여러명도 편리하게 이용 할 수 있을만한 구조라서  커플도 다수의 인원이 있는 그룹도 쾌적하게 묵으실 수 있을 것 같다는 생각이 들었습니다 좋은 숙소에 묵어서 더욱 즐거운 여행이 되었던 것  같아요 강추 박 묵었어요 우선 공항에서 가까워서 좋았어요 숙소가 바다 앞에 있었는데도 깨끗한 바다냄새만 나고 생선 비린 냄새는 나지 않았어요 주변도 주택가다 보니 조용합니다 숙소 초입에 동네 마트랑 약국 편의점도 있어서 편했습니다  사장님 두분도 너무 친절하세요 숙소앞에서도 마주쳐도 부담없었어요엄청 잘해주세요ㅎㅎㅎ 숙소 주변에 마트 있는지 여쭤봤는데 일일이 위치 다 알려주시고 놀러나가는데 어디에서 뭘 먹으라고 추천도 해주세요ㅎㅎㅎ 첫날 밤에 바닥도 차갑고 화장실에도 찬물밖에 안나와서 죄송함을 무릅쓰고 늦은 시간에 연락드렸는데도 사장님 두분 오셔서 확인해주시고 비어있는 따뜻한 방에서 잘 수 있도록 신경써 주셨어요ㅠㅠ 화장실에도 샴푸나 샤워용품 다 구비되어 있고요 수건도 넉넉하게 바구니에 챙겨주셨어요 토스트 먹을 수 있게 식빵과 초콜렛도 준비해주셨구요 잼하고 버터도 냉장고에 준비해주셨더라고요 아침에 잘 먹었어요ㅎㅎㅎ 침대가 생각보다 높아서 좀 딱딱하겠다생각했는데 전혀 아니였어요 베개도 폭신폭신하고 매트리스도 폭신폭신합니다 그리고 여분 침구류도 챙겨주셔서 편하게 사용할 수 있었어요 전체적으로 너무너무 만족했고요 정말 다시 방문하고 싶은 숙소입니다 사장님 두 분도 다음에 또 뵐 수 있었으면 좋겠어요시설들이 좀 노후가 되어 있어요  넓지만 딱히 좋은건 없거 단체로 오면 괜찮겠다는 생각은 들더라구요  진짜 한 명 정도 콘도형 정도로 생각하시면 될거 같아요 가끔 거름냄새 올러올때 있어요  넓긴넓어서 여러가족 여행왔을때는 좋겠지만 또는 친구들 여러명 왔을 때도 좋을거 같은데 연인끼리는 비추  그리고 제가 갔을 때 근처 축사에서 작업을 해서 소똥냄새가 어마어마 했어요 가족여행으로 갔었어요 식구가 대식구라 좁으면 어쩌나 걱정했었는데 숙소도 넓고 넘 예뻤어요 아빠가 장애가 있으셔서 휠체어 사용을 하셔야 했는데 그것만 빼곤 넘 좋았어요행사차 십여명이 두 채를 빌려 묵었습니다  집 구조가 방 개에 거실과 주방 등이 있는 형태지만  베드의 방은 독채식으로 분리할 수 있어 편리합니다  안방격인 트윈베드가 단체로 오긴 좀 아쉬운 점이 있지만 개의 화장실과 군데의 주방시설이 소규모 단체 숙박엔 편리한 구조라 봅니다 는 거실과 독채에 각각 있고 인터넷 잘 터집니다 아쉬운 점은 월임에도 주변 숲때문인지 파리 모기가 있고 전자렌지가 없으며 냉장고가 작다는 정도를 들 수 있습니다 암튼 가성비로 볼 때 탁월한 선택이 될 수 있다고 봅니다이거 생각보다 힘들어 하는 곳이었고 명 제주의 보석 저는 책 였는데     아고다를 통해 살펴보기 너무 좋아서 사실  프로 이곳은 거대한 우리  퀸스 사이즈 침대 싱글 침대   식 객실  부엌 티비  발코니  거실  심지어는 화장대  시청 방법 퀸 사이즈 침대도 폭신하고 정말 편안하게 무료 와이파이도 아주 좋았습니다 서비스는 꽤 순물질 중국어 및 영어 전혀 문제만 이야기 우리 체크인 및 관리하는 사람에게 봉사하는 여자들은 친절하고 신속한 저녁 식사 경치가 좋은 이곳은 꽤 조용한 우리는 아주 잘 잤다   단점 차가 필요하기에 아주 원격 및 리뷰 읽었는데 심지어 택시가 길을 잃다 다음 체크 인 시간은 꽤 늦게  우리가 돌아보고 영겨에 였지만 친절하게도  의 짐을 맡길 수 있는 우리 방은 준비와 통화 싱글 침대의 베개는 모든 플랫 기다리기보다는 힘들어 다음 사용할 수 있지만 핸드 타올 보다 요청 시 이 하드 를 받은 방은 코딱지 하나 개미가 득시글한 및 전원 포트 다른 방에는 침대 옆의 램프가 까다로운  또한 예약된 저녁에 각  싱가폴 달러 무제한 바베 큐 돼지고기가 스프와 측부를 모두 맛있어요 나는 다시 돌아왔는데 모오이데 걸리더라도 전반적인 숙박실내 인테리어가 화려하진 않지만 새것들이라서 근본적으로 깨끗함 엘리베이터 등 기본시설에 문제 없으며 주차는 앞쪽이 아닌 옆골목 쪽에만 하면 밤낮으로 문제 없었음 큰길가 이었음에도 차소리에 불편함 없었으며 가격대비 적극 추천하고 싶은 곳임 터미널 옆이라서 음식점도 많고 특히 시간 하는 식당순두부집 도 있었음이른휴가로 친구들 명과 제주 다인리조트의 카라반에 박묵었습니다 두달 정도 전에 예약하여 카라반치고는 상대적으로 저렴한 가격에 이용할 수 있었다는 것은 큰 장점이었습니다 위치도 제주공항에서 그리 멀지않은 애월해변근처에 위치하여 접근성도 용이합니다 카라반은 명이상 들어가도 될정도로 아늑하고 깔끔하여 마음에 들었습니다 카라반객실은 일반객실과 다르게 매일청소는 제공해주지않는다는 것이 단점이었습니다 기본 제공되어있는 어메니티휴지치약비누수건정도만 교체되었고 에어컨을 오래가동 시 물이 떨어지는 상황이 있긴하였습니다 카라반에 딸린 바베큐시설을 이용할 수 있다는것이 메리트입니다 카라반이라는 특별한 공간에서의 추억으로 좋은 곳이라고 생각됩니다겉은 조금 허름해보이지만 내부는 것보다는 훨씬 깔끔해요  비지니스 호텔 같은 느낌 공항에서 정말 가까워서 일찍 출발하는 사람들에게 좋을 것 같아요어른 중학생 초  이렇게 네가족이 연휴 마지막날 묵었습니다 새벽 비행기라 일부러 공항 앞에서 찾았고 저렴한 가격에 온돌룸으로 예약을 했습니다  방은 따뜻했고 리모델링을 해서 침구류와 욕실 포함 전체적으로 깨끗한 느낌이었습니다  장점  공항 차로 분  호텔 층에 시간 코인빨래방 주중 낮동안은 빨래를 맡기면 건조 후 찾아갈 수 있는 서비스를 제공  인 예약시 인침구 개온돌방기준 물 병 수건 넉넉하게 제공  단점  옷장이 협소옷걸이 개  욕실 문이 변기 바로 앞이라 문을 열면 무릎이 닿게 됨  다음에 기회가 된다면 조식과 렌트카 서비스도 받아보고 싶네요 지난 월에 두 차례 박씩 총 박을 했어요 우선 호텔 시설은 오래되어 큰 기대는 안하시는게 좋아요 하지만 오래되었어도 정리정돈된 상태라던지 필요한 것들은 다 갖춰져 있어요 트윈룸에서 숙박을 했는데 침대도 적당히 편안하고 하루이틀 묵기에는 괜찮아요  처음에 층에서 숙박했는데 객실에서 제주공항이 보여요 비행기가 뜨고 내리는 장면들이 보이는데 특히 좀 어둑어둑해지는 무렵에는 정말 멋있었어요 게다가 공항에서 가장 가까이에 있는 호텔인 것으로 알고 있고 제주도청과도 걸어서 분 정도 거리에 있어서 번화가나 연동 바오젠 거리 등으로 나가는데도 괜찮은 것 같아요  고층에 공항 전망의 객실을 받을 수 있다면 가성비가 훌륭한 호텔이 되겠죠방은 나름 깔끔한 느낌 예전에는 베니키아가 아니었는데 인수를 하면서 리모델링 했나바요  외관도 조금 손보면 괜찮지 않을까 싶네요 ㅋ베니키아 호텔을 보통 엄청 좋은 부띠끄 호텔 클래스는 아니지만 충분히 행복하게 여행을 계속할수 있도록 하는 호텔입니다 한마디로 추천합니다 ㅋㅋㅋ 깨끗해요다음날 새벽 비행기라 공항 근처 숙박을 잡은거였음 근데 가격대비 매우 좋음 미리 말하면 다음날 새벽에도 호텔에서 셔틀로 데려다 줌 관광호텔이라 그런지 매우 넓었음 나는 둘이서 썼지만 인가족도 충분히 묵을 수 있을만한 사이즈였음 렌터카 빌린곳과 가까워서 더 좋기도 했고 무튼 가격대비 정말 괜찮은 호텔임 직원들도 매우 친절안경을 쓴 직원은 좋지 않습니다 호텔은 실수를 저에게 사과하지 않았다 그는 추가 비용을 지불하도록 요청했습니다 그리고 침대에는 머리카락이 있었고 거울에는 모기 시체가있었습니다 여행의 마지막 날 이었지만 다시 제주도로 가고 싶지 않습니다  우리가이 호텔에 머물기로 결정한 두 가지 이유는  무료 공항 교통편을 제공했고  자전거 두 대를 가지고 여행 중이었고 대형 호텔 이었기 때문에 우리는 자전거 상자를 계속해서 가지고있을 수 있기를 바랬습니다 며칠 동안 우리는 제주를 자전거 타기를하고있었습니다 우리가 호텔에서 체크 아웃하기 전에 우리는 보관을 위해 그들과 함께 두 개의 상자를 남겨 두는 것이 좋을 것이라고 우리에게 물어 보았다 그러나 우리가 호텔에 돌아 왔을 때 아무도 상자에 대해 알지 못했습니다 우리가 체크인 한 날에 직원에게 점원에게 확인하라고 직원에게 요청했을 때 우리는 상자가 버려 졌다고 들었습니다 이것은 매우 실망 스러웠습니다 마음이 상한 사과와 설명이 없었으며 상황을 해결하려는 시도가 없었습니다 말할 것도없이 우리는 그 밖의 곳에 머물기로 결정했다 호텔 자체는 괜찮았다 무료 공항 교통편은 좋았습니다 그것은 공항에 가까웠지만 호텔 인근에는별로 없었습니다 우리는 아침 식사로 각각  원을 지불했지만 그만한 가치는 없었습니다 차라리 그 중 일부를 소비하고 편의점에서 커피와 샌드위치를 구입할 것입니다제주 공항에 가까워 고객 서비스가 우수하여  박의 새로운 제주 노블레스에 머물 렀습니다  경영 지원팀 리더 인 테드 에이 김   은 제주에서 우리를 편안하고 편하게 느끼도록하기 위해 나섰습니다 그는  년 이상 경험이 풍부한  택시에서 박희경        과  원으로  일 동안 개인 자동차를 준비하고 업무에 열정적이었습니다 그는 영어를 많이하지 않지만  번역을 사용하여 대화를 나누고 제주에 관해 이야기합니다  우리 체재는 아침 식사를 포함했고 음식은 신선한 날마다 준비된다 주로 한국 음식 야채 매운 볶음 쌀과 달걀입니다 수프 과일  종 파인애플 및 바나나 컷 시리얼 및 빵도 있습니다  호텔은 무료 주차가 가능하며 인근 지역을 걷기는 가능하지만 아직 관광을 위해 개발되지 않았기 때문에 자동차를 소지하고 있거나 여행을 준비하는 것이 가장 좋습니다공항분 거리쯤 되고 서쪽 여행으로는 위치는 최고 밤문화 즐길수 있는 시내이고 오분거리에 이호해변가두 있어 탁월한 선택이였음                                                                  위치  이 펜션은 협재 해변의 하얀 모래사장이 있는 중심가에 위치하고 많은 상점과 레스토랑이 주변에 있다   펜션 에서 숙박을 하지 않았다 하지만 우리는 해변에서의 하루를 보낼 후 택시를 찾을 수 없기 때문에 호텔로 돌아와서 바쁜 주말 우리는 우리를 도움 요청 여부에 아 주인 이 펜션이 만나는 클라라 관리자  그녀는 우리에게 매우 좋은 문제에 대한 여러 택시 회사가 마지막으로 우리를 발견 한 때까지 호출을 하게 해 주소를 다시 설명해 드라이버 완전히 해 있었습니다 다음에도 올 것이기 때문에 아주 좋은 위치의 멋진 펜션 이여름에오면 협재해수욕장 바로앞이라 좋을거같아요 층엔 카페베네가 있고요 최근에 지어진거같진 않아요  층 뷰도 멋져요                                                                                                                                          우도랑 성산일출봉 근처 숙소 찾다가 깔끔해보여 예약하게 된 욜로 펜션입니다 조용한 곳에 위치하고 있구요 주변에도 주택 몇 채만 보이고 아무것도 없다고 보시면 됩니다   사장님 너무 친절하셨구요 저희가 방문 예상시간 말씀드렸는데 생각보다 너무 늦게 도착했어요 그런데 사장님이 너무 일찍 부터 에어컨을 켜 놓으셔서 월달 한 여름 인데도 추울 정도로 방이 시원했어요  죄송하기도 하고 감사하기도 했습니다 ㅎㅎ   저희는 바베큐 신청 안해서 조리도구나 다른건 사용 안했는데 방은 깨끗하고 깔끔했어요   다음 날 출발할 때도 저희가 사장님이 운영하는 카페에서 와플하고 음료를 주문 했는데 커피는 그냥 주셨어요 정말 맛있게 잘 먹었습니다  아 그리고 카페 앞에 핀 해바라기 꽃이 빨간색 컨테이너 박스 모습의 욜로 펜션과 잘 어울렸어요저는 지난 주에  펜션  끝  이러한 놀라운 숙박  자주 비즈니스나 레저 여행객 저는 이 환상적인 부부를 환영 했다  여기서 집에서 느낄 것이다  많은 팁을 배정해줄 제주 짧은 방법 한라산 여행 좋은 곳에 사우나 좋은 해변 등  위치는 좋은 곳에 잘 연결되지 있는 버스  제주  공공 체육 시설을 즐길 수 있는  미터  펜션 헬스장은 외부에 완전히 비어 가든이 있고 아침에 해변을 따라 달리  짧은 체육관에서 운동 및 마무리 환상적인 아침 식사를 즐길 수 있는 좋은 방법  전에 나의 일 물과 커피를 무료로 받는 일을 즐길 것 매우 친절함   저는 펜션 을 강력 추천합니다나는이 호텔을 강하게 추천한다    처음에 나는 제주에 도착했을 때 내가 나의 나라에서 예약했던 나의 이전의 숙소를 본다 그것은 끔찍한 일이어서 취소하고 제주를 떠났다 마침내 나는 이것을 발견했다      는 매우 친절했다 그녀는 우리에게 할인을 주었다 이 호텔에는 큰 방이있었습니다  박당 가격은  원이지만  인의 숙박이 가능합니다     그녀는 주차장 엘리베이터 수건 헤어 드라이어 비누 샴푸 차 커피를 가지고 있었지만 아침은 먹지 않았습니다 위치가 아주 좋습니다  여기에 밤 생활을 보낼 수 있습니다   레스토랑 쇼핑 거리 및 바 많이 있습니다새 건물이고  깨끗한 침구 욕실도 깨끗하고 냉장고는 소음이 없으며 생수 두병과 음료캔 있습니다 에어컨도 잘됩니다 넓은 도 있어요그리고 치약 면도기도 줍니다 그러나 방이 작어요 침구를 제외하면 매우 협소하며 슬리퍼도 없고 의자도 없어 불편했어요 주차장은 대정도 그러나 호텔급은 아니지만 모텔로는 괜찮은 편입니다  객실을 갖춘 평범한 서비스는 평범한 호텔입니다   서비스 제가 예약한 호텔과  및 도착했을 때 리셉션 직원이 다소 제한적이지만 영어로 제가 지적한 이들과 함께 했습니다 우리의 예약을 찾는 유일한 분에 대해 다른 시간 나는 나의 여행 파트너인 욕실에서 나를 기다리는 밤에 로비에 나갔다 나 한테 와서 내 확인을 요청하는 방 키를 제가 느낀 기분을 상하게 하고 한 옷을 입고 간 것은 관광 한국 인 들 있지 않을 다운 재킷 도 주위에 때   었다 나의 어떤 점을 확인 의심도 했고 그들은 할 수 있는 방법이 훨씬 더 불쾌 하다 그러나 가장 제한적이기 때문에 그의 영어  가격 주변에 다른 호텔들 보다 저렴한 가격 하지만 꼭 싼 호스텔 들도 이 모든 것을 원하는 경우   객실 제가 머물렀던 방은 전체적으로 깨끗합니다 그러나 이 작은 한국에서 여러 호텔에서 묵었는데 저는 제주도에서 작은 호텔 방 생각하지 않을 수 있는 서울보다 에서  호텔 서울 하는 부티크 호텔로 더블 침대가 방의 대부분을 차지 정말 많은 공간이 움직이지 않았다 이화 열 받고 이 상상할 수 있습니다   욕실 욕실의 없는 없습니다 나는 이해할 수 없는 하지만 많은 한국의 호텔들을 샤워부스와 화장실  파티션  한커튼 세면대 물론 이같은 사례  호텔 파티션  커튼을 하지 않고 욕실은 샤워를 하고 축축하고 눅눅한 곳에 젖은 후 그 불편한 화장실이 업로드됩니다 하고 싶지 않은 욕실이 마련되어 있습니다   편의 시설 잘                                                             이 호텔은 제주 공항에서 자동차로 약  분 거리에 있습니다 우리는 바다 전망의 방을 가진 디럭스를 임대했다 그리고보기는 정말로 훌륭했다 객실에는 주방 용품이 제공됩니다 호텔 바로 옆에 이 있습니다 머무르는 것이 평화로 웠고 우리는 정말 제주의 아름다움을 감상 할 수있었습니다하도해수욕장과 해맞이해안로의 중간에 위치한 지미스테이   태풍 때문에 날씨가 좋지 않았지만 혼자 숙박시설을 독점해서 쓰는 재미가 쏠쏠했다  정말 조용한 곳에서 힐링이 가능한 공간이고 지미카페도 분위기가 좋았다 단점은 태풍이 불면 조금 외진 곳이라 대리기사를 구하기 어렵다는 점이다  건물도 소박하지만 아름답고 내부시설 관리도 잘 되어 있으며 직원들은 친절했다 다음에 기회가 있다면 꼭 다시 들르고 싶은 곳이다   주차하기엔 아주 편리한 커다란 주차장이 있다이 호텔의 위치는 환상적입니다 방문해야 할 거대한 현지 시장이 매우 가깝습니다 방은 작았지만  박 충분했습니다 우리는 큰 욕실을 가지고 있었기 때문에 편안했습니다 나는 방 욕실 및 주방이 매우 깨끗하다는 것을 강조하고 싶습니다 저예산 호스텔이지만 가격과의 관계 품질은 균형을 이룹니다 직원은 훌륭하지만 영어는 유창하지 않았습니다 그럼에도 불구하고 그들은 정말로 도움이 되려고 노력했습니다  월  일                                                                                                                                                  공항이랑 가까워서 혼자 하루정도 묵기 좋아요 조식도 주는데 아무도 안먹드라구요 위치가 좋아요나는 그것을 사랑했다 이것은 에서 나의 제 의 체재이었다 그것은 해변에 따른 아름다운 해변과 멋진 레스토랑을 가지고있다 그러나 도시에 가까운 그리고이   가 최고였습니다 나는 거기로 다시 돌아갈 생각이다  바다를 마주보고있는   옆에 있으며 모든면에서 주인 위치 시설 및 경치의 환대가 가장 좋습니다 그리고 그 가격은 품질면에서 상대적으로 저렴합니다 손님은  층 건물을 사용할 수 있으며 각 층은 매우 독립적으로 사용할 수 있습니다 나는 강력하게 부부와 가족 모두에게 그것을 권장합니다  최전선에서 바다를 조망할 수있는 것을 골라라 그러면 최고로 즐길 수있다                                                                                                                  일단 주변에 유흥주점밖에 없어요 그래서 여자들끼리 오면 진짜 무섭고 또 환풍이 잘 안되고 담배냄새 진짜 토나옵니다 금연이라 되어있고 리뷰도 다 좋아서 싼맛에 예약했는데 진짜 담배냄새가 상상초월해요 건물공사가 진짜 대충되었는지 담배냄새가 화장실에 겹겹히쌓이면서 그렇게 예민하지 않았던 저조차 진짜 구역질 나올듯 한 경험이었습니다 그냥 밤 샜어요 친구랑 정말 죄송한데 모텔용으로 와도 되지만 여행오셨다면 싼가격인데도 비추할게요 진짜여행 최악의 경험입니다오라 스테이 호텔   은 여관과 같은 호텔입니다 그들은 손님을 위해 빠른 체크인을하는 정말로 단순한 리셉션을 가지고 있습니다 객실에는 위성 채널을 시청할 수있는 평면  냉장고 및 무료 가 있습니다 전용 대형 욕실에는 샤워 시설이 있으며 제한된 무료 세면 도구와 헤어 드라이어가 있습니다  여행자를위한 기본적인 필요성 지하 쇼핑은 단지  거리에 있으며 동문 시장은 불과  떨어져 있습니다   과  와 같은 관광 명소는 도보로 쉽게 도달 할 수 있습니다 환전정 파빌리온 버스   버스 정류장에서 시내 관광 버스       를 이용할 수도 있습니다 주변은 전혀 시끄럽지 않습니다 호텔 옆에있는 프라이드 치킨과 맥주 하우스와  개의 문이있는 해산물 레스토랑도 있습니다 플러스 호텔 바로 맞은 편에 미니 마트가 있습니다 총체적으로 나의  개의 날 체재는 멋졌다 그들은 리셉션에 자주 없기 때문에 직원에 대해 말할 것도없고 매일 방을 청소합니다애월 해안도로에 있는 전망 좋은 숙소임신축이라 숙소 내 집기들의 상태들이  아주 좋았고 층 건물이라 공간이 넓었다  층 모두 침실욕실 거실이 다 있었고 같이 간 아이들이 층 공간을 너무 좋아했다  개인적으로 테라스가 마음에 들었음 넓고 시원하게 바다를 볼수 있어 지내는 동안  자주 테라스에 나가 있었다  청소 상태도 아주 청결했고 집주인도 친절하고 상냥했다  다음 제주여행에도 다시 가보고 싶은 숙소임명이 자도 문제 없을거 같음나는 여기에서 매우 편안했다 로비에는 무료 만다린이있었습니다 합리적인 가격  대당  원과 모든 것이 잘 작동했습니다 생선 시장 근처의 도시에 매우 중앙에 위치해 있습니다도착 시 바다가 보이는 방을 달라고 합니다 우리는 한 보기  이 해변 도로 바로 옆에 있지만 트래픽은 사람들에게는 방해가 되진 않을 최소한의 및 식당 지역 검은 돼지고기 해산물과 함께 전체 계속 옆에 있습니다  방 자체는 꽤 평균 특별한 깨끗하고 필요한 모든 것이 갖추어져 있습니다 수건도 갈아준다  층에 있는 커피숍  조심하세요 침대가 돌처럼 개인적으로 마음에 내 파트너 않았다숙소 엄철 깔끔합니다 내부 인테리어도 아주 좋습니다 중문에 렌트해서 방문한다면 어디든 가기 편리한 숙소입니다 추천할만합니다직장에서 장기근속휴가를 받아 월 일부터 일까지 일주일간 도미토리에서 머물렀습니다   게스트하우스 바다와 자전거는 자전거를 빌릴 수 있고 저렴한 도미토리와 커플과 가족을 위한 룸이 있으며 커피가 맛있고 조식이 포함입니다 혹시 낚시를 좋아하시면 포구 앞이나 배를 빌려서 가능합니다저는 낚시를 좋아하지 않아서 잘 모릅니다 사장님께 문의바랍니다   고내포구 바로 앞이라 통유리로 바다가 보이는 뷰가 환상적이고 호스트가 깔끔하셔서 호텔식 수건에 베게까지 정말 나무랄 곳이 없습니다 아침식사에 맛있는 커피저는 커피가 너무 맛있어서 사장님께 원두 문의를 했더니 원가로 한봉지 주셨습니다와 간단한 볶음밥 토스트 등은 포함이고 사장님께 자전거를 빌려서 협재까지 달려보는 것도 좋습니다 참고로 자전거길 이름이 제주도 환상의 자전거길입니다 자전거 길을 달리다 보면 중간에 바다와 술책이라는 특이한 서점카페가 있습니다    근처에 마틸다라는 판 틀어주는 바가 있는데 바다와 자전거에 숙박하실 예정이시면 좋아하는 팝이나 예전 가요를 생각하고 가셨다가 바에 가셔서 음악 신청하시고 술한잔 하시면 아 이곳이 천국이구나 하실 겁니다저녁 시부터 새벽 시까지 영업 화요일 휴무    마틸다안쪽으로 분만 가시면 애월도서관이 있습니다 매주 금요일이 휴관   게스트하우스 바로 옆건물에 시간 영업하는 가 있어서 일단 최저 생활을 걱정 안하셔도 됩니다 그리고 반대쪽 옆에 고내횟집도 맛있습니다   고내리 정류장에서 번 버스를 타고공항에서 굉장히 가깝고 층에 편의점 까페 레스토랑이 있어 편했어요 테라스도 잘 되어있고 화장실이 마루바닥으로 된 점이 좋았구요 저렴한 편인데 가성비 좋은 곳입니다제주시에 있는 호텔로 깔끔한 편이었고 나름 전망도 괜찮았습니다 주차장은 주차타워에만 해야 하는 게 좀 불편한 점이었습니다 조식 시간은 시 부터 인데 단체손님들이 많아서 시 부터 하는 것을 권하였는 데 비행 시간 때문에 일찍 했는 데 단체 손님들이 많기는 많았습니다 조식은 간단한 편인데 먹을만 했습니다싸롱은 마을에 있는 제주 전통 가옥으로 깨끗하고 꾸밈없이 소박합니다  분거리에 있는 세화해변이 끝내주게 아름답고 편의점 버스정류장이 가까이 있고 특히 예쁜카페와 맛집이 꽤 있더라구요 며칠 묵으면서 마실 다니기 좋아요 진짜 지역 주민이 된듯합니다 주말엔 세화민속오일장에서 플리마켓도 열리니 구경거리도 있네요  쿠팡에서 좋은 가격으로 구매해서 간곳인데 기대보다 너무 좋았어요 공항 바로 옆이라서 비행기 이착륙 소리 들리지만 그다지 거슬리진 않았어요 공항 활주로 끝자락의 잔디 부분이 마치 작은 오름처럼 보이고 해안도로를 따라서 펼쳐진 전망이 좋았어요 단 하룻밤만 묵었고 날씨가 안좋아서 해안도로 산책을 못했지만 다음에도 꼭 다시 가보고 싶어요 조식도 간단하지만 나오는데 큰 기대 안하시면 가격대비 괜찮아요 미역국에 밥 말아서 김치에만 먹어도 여행지에선 만족하는 저로썬 닭볶음까지 맛나서 더 좋았어요 조언을 드리자면 탕수육은 메뉴에서 없애실것을 추천 드립니다 아침 메뉴도 아니지만 눅눅하고 먹을수가 없었어요 소스도 아니였고요 차라리 장아찌나 나물이나 가능하면 생선구이가 더 나을듯 합니다 서양식 조식으론 토스트와 커피 밖에 먹을게 없던데 삶은 달걀도 있음 좋을것 같아요 한식에 있던 스크램블 에그는 영 한식도 양식도 아닌게 에매하고 맛도 없었어요  저흰 그래도 만족하면서 감사하게 커피랑 티랑 잘 마시고 돌아왔어요 직원분들도 다들 친절하시고 특히 청소나 관리 하시던 분도 투숙객들에게 반갑게 인사 하시던 모습은 특급 호텔에서나 경험 가능한 서비스라서 인상 깊었어요 다음엔 시간을 넉넉히 잡아서 몇일 머물고 싶어요이번 여행에서 숙소선택기준은 공항과의 거리 주변환경 혼자여행이기에 편리성이 우선시였는데 가지 모두 만족스러웠습니다   숙소는 공항에서 택시로 분천원 정도의 거리에 있으며 한번은 공항호텔 걸어봤는데 쉬엄쉬엄 시간 여분 소요되더군요 용담해안도로와 공항올레길을 이어서 걸을 수 있는 코스라 마지막날이나 첫 날 도보여행을 계획하시는 분들은 한번쯤 걸어보는것도 좋을 것 같습니다   주변은 바로 옆에 편의점 카페 식당 모두 위치해 있습니다 그렇다고 번잡하거나 지저분하지 않고 딱 있을 만큼만 있어서 대체적으로 조용합니다  숙소가 위치한 곳이 어영마을이라는 곳이고 숙소 바로앞에 공원이 있습니다 침대 누워 있으면 바다와 일몰을 볼 수 있습니다   트윈룸이었는데 성인 명정도는 불편함 이용할 수 있을 사이즈구요 기본 욕실용품이 비치되어 있는데 칫솔은 없었네요   조식은 크게 기대하지 않는게 좋을 것 같습니다 그렇다고 너무 부실한건 아니고 그냥 일반 아침가정식 정도라고 생각되어 집니다   박 일 편하게 잘 이용하고 왔습니다마루바닥에 깨끗하고 나름 씨뷰네요 공항 근처 하루 묵기 괜찮았습니다 조식은 무조건 포함이던데 가격대비 괜찮았어요 사진은 스위트룸입니다이틀 동안 머물렀다 객실은  인용으로 일반 한국 호텔 객실보다 컸습니다 객실 편의 시설은 잘 작동하며 문제는 없습니다  그러나 두 가지 점이있었습니다   욕실에는 목욕 타월이 없으며 호텔은 핸드 타월 만 제공했습니다 방에 목욕 타올을 추가하십시오  아침 식사 스프레드는 매우 좋지만 아침 식사 이름이 부족합니다 나는 회교도이므로 음식에 돼지 고기가 들어 있는지 여부를 결정하기가 매우 어려웠습니다 음식의 이름은 매우 유용 할 것입니다  위치는 공항과 도심 근처에있었습니다 결국 그것은 단지 평범한 호텔이었습니다 단체 여행객 만 이용할 수 있으며 호텔을 수면 전용으로 만 사용해야합니다                                                                                                                                                              년 일 이틀 묵었습니다 솔직히 이 여행사에서 예약을 이 호텔을 선택하지 않습니다  기본적으로 이 호텔은 아무것도 꽤 주변 내에서 훨씬 찾아냈습니다 호텔 외관은 기반으로 새 것처럼 보입니다  체크인도 빨랐어요 방은 깨끗하고 넓고 심플한 디자인입니다 욕실은 깨끗하고 넓고 필요한 세면도구가칫솔 제외 갖추어져 있었습니다 방에서는 가 좋았습니다  편의점이 층에 위치한프론트 데스크 카운터 기본적으로 옆에 이 정말로 근처에 아무것도 많이 합니다  아침 일간 같은 다양한 평균  전반적으로 목적 잠을 수행하는 여전히 만족스럽습니다호텔은 공항과 매우 가까우며 로비에  개의  개가있어 편리합니다 그러나 서비스는 그리 친절하지 않습니다 수하물을 도와주는 벨보이는 없습니다 영어로 의사 소통을 할 수없는  프론트 데스크 접수 아침 뷔페는 거의 매일 동일합니다 엘리베이터가 느립니다 객실은 넓고 기본적인 세면 도구를 제공합니다 그리고 위치는 대부분의 관광 사이트의 중심입니다 나는 다음에 다른 호텔과 함께 예약하는 것을 선호합니다공항이랑 매우 가깝지만대로변이라시끄럽고 곰팡이 냄새로인해  창문을 닫을수없는데 문열며 시끄럽고 에어컨은 바로 침대위에 있어 너무 직방이고 화장실 문도 너무불편                                                                                                                                                                                                                      긴 밤낮으로 잠을 자지 않고도 깨끗하고 편안한 호텔 방을 확인해 주셔서 감사드립니다 우리를 매우 행복하게 만드는 모든 필수품이 제공되었습니다 잘 자거야 제공되는 아침 식사도 매우 맛있었습니다인실이 준비되어 있다 주변은 신제주 시내라서 먹거리 찾기 나쁘지 않음 스킨로션 류의 어매니티가 없으니 이것들은 챙겨야 함조금 교통이 불편하고 골목길이기는 하지만 그렇게 나쁜건 아니에요 그리고 제가 묵은곳은 별로 어둡지도 않았고 스파비슷한것도 있고 칫솔치약세트도 있어요방이 굉장히 어둡다 너무 어둡다고 프런트에 말하니 스탠드 하나 가져다 주었지만 차이가 없었다 화장실도 유리벽이라 내부가 다 보인다 누군가와 함께 왔으면 큰일 날 뻔 했다 호텔의 안락함이 전혀 없었다 외관도 깨끗하고 좋습니다 다만 리모델링 호텔이라 그런지 옛것의 흔적이 좀 있어요조명도 좀 많이 어둡고하지만 공항 접근성에 좋아 하루 묵기 딱 좋은 곳입니다김포공항에서 시에 출발하는 비행기라 공항과 가까운 곳인 컬리넌 호텔에서 숙박했습니다 실제로 공항에서 번 번 버스를 타고 분정도면 내리는 곳에서 호텔이 약 분 정도 걸어서 도착할수 있어요 예약했던 방에서 무료로 업그레이드가 되어서 더 쾌적하게 이용했고 이용했던 비즈니스 호텔중에서 제일 좋았던 것 같습니다 샴푸 바디클렌저 생수 병 드라이기가 구비되어 있었고 욕조가 있어서 반신욕을 하고 푹 쉬었습니다 가격대도 소셜 및 각종 루트를 통해 예약하면 박에 저렴하겐 만원대도 가능할 것 같아요 다음에도 제주도에 들릴 일이 있다면 다시 이용할 예정입니다나는 정원과 바다 사진 때문에 를 선택했다 이건 정말이야 보기를 정말로 즐겼다 내가 머물렀을 때  세 이상의 한국 젊은이들이 거주하고 있었기 때문에 실제로 백패커 장소는 아닙니다 시설은 공용 구역과 기숙사 사이에 청각 적분리가 없으므로 모든 사람이 잠들 때까지 중간에있는 것처럼 느껴질 것으로 기대하십시오 또한 원래 개인 주택이므로 욕실의 수와 위치는 현재 사용량에 맞게 최적화되지 않았습니다                               팁    더블  집 선라이즈 포인트 근처의 정말 좋습니다  소유자 서핑 클래스 참가하여 묻고 다른 방법으로 제주 즐기세요제주에서 바다를 볼 수있는 적당한 곳을 찾기 위해 나에게 많은 검색이 필요했습니다 나는 숙소에가는 데 익숙지 않지만 여기에 머물러있는 것이 좋았다 호스트는 매우 환영하고 있었고 분위기는 컸고 매우 뒤로 물러 섰다 그리고 내가 원하면 저녁 식사에 참여할 수있는 대부분의 밤  박 동안 여기에 머물렀고 정말로 그것을 많이 좋아했다처음 아라를 방문했을 때 집 주인은 멋진 언덕에 아름다운 저택을 짓게했습니다 두 번째 팀은이 아라 스테이에서 제주도의 멋진 경치를 보았습니다 주인은 와인 교수 였고 영어와 프랑스어가 유창했습니다 그와 그의 집에는 아무런 문제가 없었습니다 거대한 삼성 냉장고  새롭고 파워 에어콘  매우 빠른   위대한 세탁기  놀라운 케이블 채널  슈퍼   화장실   환상적인 산 의 멋진      매우 편안한 침대  거대한 소파 침대 제주 시청에서 버스 정류장에서 가까운 곳에 제주도의 어느 곳 으로든 이동할 수있는 훌륭한 방법이 있습니다 에어 버스에서 찾았 어월령항 바로 앞에 있는 펜션입니다 방도 깨끗하고 침대도 푹신해서 잘 쉬다 가요 주인아주머니가 너무 친절하셔서 기분좋게 놀수 있었습니다풀도 좋고 자쿠지도 좋고  인테리어도 깔끔하고 종업원도 친절해요 주변에는 풍력발전기가 있는게 다이지만 저희는 비수기에 가서 신나게 놀고 왔어요친구들이랑 봄에 놀러갔었는데 생각이상으로 시설이 좋았고 바다경치와 더불어 리조트가 정말 이뻣다 나중에 시간이 되면 다시한번 좋은 추억 만들고싶다 ㅎㅎ바다전망은 무엇보다 환상적이였습니다 제주시 라마다 프라자 호텔이 한눈에 보이더라구요 비즈니스로 이용했는데 객실은 깨끗하고 너무나 관리를 잘해서 다음에 가족들과 다시 가고싶네요 무엇보다 직원들이 너무나 친절해서 인상적이였습니다사진과 많이 다르게 낡았네요 직원들도 친절함이 별로 없이 무뜩뚝한 편이고 비행기 소음은 감안해야할듯작은 분실물이 있어서 우편으로 보내달라고 했더니 우편비에 세금이 나오는 문제 등등으로 별로 안보내 주고 싶어해서 버리라고 했습니다 전반적으로 우리는 공항에 더 가까운 여행을 끝내기 위해이 호텔에 어제 도착했다 명백하게 그것은 닫기  분 버스 버스와 아마 택시로 가 아니다  그러나 특히 가족을위한 장소는 매우 좋습니다 우리는 가족 방을 가져 갔다 우리가 함께 밀었던  개의 싱글 침대와 함께  개의 방   개의 이중의 와 더불어  개의 방   개의 욕실  식당과 라운지에서 열린 부엌  이것은 바로 가족이 원하는 것입니다  우리는 해변에서 도보로  떨어져 있습니다 택시로  분 또는  시간  우리도 해변을 매우 즐겼습니다  객실마다 스파가있어서 피로를 풀기적합하며 호텔이 아닌 리조트라 객실 안에서 간단한 취사가 가능하다  객실 바로앞이 해변가가 아니라 아쉽지만 도보로 분거리도 채 안돼 해안도로가 있으며 객실 내에서 바다를 볼 수 있어 좋았다      한라산 등산할 때 왕복 셔틀 이용가능하구요 등산스틱 점심도시락 미리주문 가능해요 프런트 직원들도 친절해요 등산할 때 든든하라고 조식을 한식으로 든든하게 챙겨주십니다 등산할 때는 여기가 딱인듯해요이 근처에 위치한 해변 이 호텔로 이동할 수 있는 차 아주 조용한 주변 환경 평화롭고 편안하게 쉴 수 있어서 이 호텔 아침 식사를 제공하는 빵과 계란 계란 요리를 직접 있습니다 스타일 있는 것 같은 셀프 서비스 이다리뷰보고 기대했는데 호텔이라기 보단 모텔이나 펜션 느낌이네요 생긴지 얼마 안된걸로 아는데 화장실 청소 상태도 별로에요 문에 이물질 묻어있고 예약한거 후회됐어요 가격대비 더 좋은 곳이 많은거 같아요지은지 얼마안되서 너무 깨끗하고 깔끔하고 저녁늦게도착했는데 미리 전화해서 주위에 편의점없다고 알려주시고 가격도 너무 저렴한 호텔새로 생긴 호텔이라 깨끗하고 객실이 세명 잘수 있게 더블베드 하나 싱글베드 하나 놓여있음 가구는 심플하고 단촐하나 모자라지는 않음 화장실에 욕조는 없으나 넓은 편임 난방은 개별로 온도를 맞출 수 있어 추운 월 겨울밤 따뜻하게 잘 수 있었으나 방이 데워지는데 약간의 시간이 걸리므로 체크인 하자마자 온도부터 맞추는 것 추천 이불은 두툼한 솜이불 좀 무겁지만 무지 따뜻함 층에 야외 온수풀이 있다고 하였으나 내가 방문시에는 추워서인지 비닐덮어놓고 폐쇄중이었음 좀 기대했었는데 아쉬움 조식은 부폐식만원 좀 넘는가격 음식맛과 종류는 그럭저럭 괜찮음   렌터카로 운전해 오는 길도 어렵지 않고 위치가 애월이라 좋음 다시와도 괜찮을 거 같음  이곳을 택한 이유는 객실내 스파와 동물원 때문입니다 스파는 시설이 좋고 따뜻하고 만족합니다 동물원에 말과 돼지 앵무새 토끼 등 많은 동물이 있어서 애들이 일내내 밖에서 동물과 지냈습니다돼지는 그냥 마당에 막 돌아다녀요 마트까지 차를 몰고가야하지만 동물과 스파가 모든 불편을 해소해 줍니다 아침은 포함인에 간단한 한식과 토스트가 나옵니다 근처에 걸어서 갈수 있는 마트는 없습니다                     아침에 일어나면 커텐을 쳐보시면 깜짝 놀라운 광경입니다 너무 멋진 해변가 주차공간은 호텔 옆에 있구요 건너편에 주차하셔도 됩니다방 깔끔하고요 주인아저씨 친절하게 이것저것 잘 알려주시고 안내해주세요 앞에 바다도 훤히 잘 보이고 가까워서 나가 놀기도 좋고요 충분히 만족스런 곳이에요                 장점   공항에서 가깝습니다     및     및 맥도널드 근처에  분   비교적 저렴한   단점           대략적인 작은 방      싸서 명이 매우 붐볐다   아침 식사는 매우 작은 변경 음식은 대부분 매일 반복되는   방은 주전자가물 피치 전혀 깨끗하지 않을 수 있습니다        성급 호텔로 깨끗하고 기대하지 마세요 체크인을 할 때 나는 모든 모서리 닦습니다      이웃 국가에서 많은 저렴한 투어 관광객이 공공장소는 무례한 정렬할 수 있습니다 언젠가 그 시끄러웠습니다 자정에   중간 밤에 프론트 데스크의 직원들도    프론트 데스크 단지 한국어 구사 프론트 데스크 직원들은 매우 친절했다제목대로 이름만 호텔이고 내부 시설은 모텔보다 못함 그다지 저렴하지도 않음 제주공항에서 도보로 약 분정도 거리라 접근성은 좋음 침대 매트리스가 아주 저렴해 보이고 누울 때마다 무너지지 않을까 하는 생각이 들었음                                                                   숙소를 찾다가 우연히 선택하게된 곳임 박에 만원에 선택했는데 방에 아주 큰 욕조가가 같이 있고 조식이 포함되어 있음 조식은 아메리칸 스타일인데 주인이 직접 만들어 줌 방은 매우 깔끔하게 리모델링이 되어 있어 매우 깨끗함 단 숙소로 들어가는 길이 좁은 골목으로 되어 있고 리조트 겉 모양이 매우 낡아서 첫인상은 매우 실망할 수 있음 그렇지만 매일 욕조에 몸을 담구고 바다를 바라볼 수 있음 가격을 고려하면 나쁜 선택을 아니라고 판단됨제주 조이 랜드는 약  개의 분리 된 잘 지어진 목조  층짜리 주택으로 구성되어 있으며 부엌과 식당 시설 한국식을 갖춘 독립형 아파트입니다 바다를 바라 보는 언덕 위에 부분적으로 위치한 제주 서부에서 자동차로 약  분 거리입니다 경내에는 많은 과일 나무가 있습니다 회의실과 컨퍼런스 시설도 있습니다 한국인들에게 인기가있는 것 같습니다  떨어진 대형 슈퍼마켓이 있습니다 제주도 주변의 주요 도로에서 약  떨어져 있습니다 집은 큰 소나무 통나무로 만들어져 있고 침실은  층이고 거실은 낮은 층입니다 주방에는 스토브 싱크대 및 냉장고가 있습니다 직원은 영어를 할 수 없지만 가능한 한 도움이되었습니다위치는 모든 버스가 출발하는 버스 정류장에 가까웠다 공항 버스도 여기에서 멈 춥니 다 이 모텔은 가족이 운영하는 사업입니다 직원들은 보너스 인 좋은 영어를 말할 수 있습니다 그것은 돈을 위해 아주 좋은 가치입니다 많은 현지 레스토랑과 미니 마트도 근처에 있습니다 이 호텔은 약간 날짜가 있지만 일부 객실은 새롭게 개조되었습니다                                                                             이것은  집이었고 우리는  박 동안 거기에 머물렀다 우리는 주 집을 떠나 있던 방에 머물렀다 이 방과 집은 깨끗하고 잘 보관되어 있습니다 부엌은 매우 잘 갖추어져 있습니다 를 사용하면 집을 찾기가 어렵지 않습니다 그러나 한국의 모든 것과 마찬가지로 커뮤니케이션에도 어려움이 있습니다 예를 들면 우리 방에 히터가 있었고 모든 지시 사항은 한국어로되어 있었고 주인은 사용 방법을 설명하지 않았습니다 전반적으로이 곳을 추천합니다방은 크고 위치는 매력적입니다  그러나 리셉션과 건물은 개략적 인 것으로 보이며 대대적 인 개조가 필요합니다  그러나 친절한 직원은 영어로 의사 소통하기가 매우 어렵습니다  주차 공간이 제공되지 않으며 공용 주차 공간을 사용해야합니다                                             이 호텔은 멋진 풍력 터빈 전망이있는 해변 근처에 위치하고 있습니다  장점  깨끗하고 친근하며 도움이되는 소유자이며 모든 것이 완벽합니다  단점  게스트 하우스에 작은 도로 입구 나머지는 완벽합니다제주도를 방문해서 여러 호텔이나 펜션등을 이용해 보았는데 언제나 한가지 아쉬움이 있었다 좋은 시설이 문제가 아니라 편안한 느낌을 느낄 수 있는 안락함이였다 이곳은 친절한 주인과 깔끔한 숙소가 여행객에게 편안함을 주어 여행의 여유를 즐길 수 있게 해 준다세화해변 근처에 위치한 와락 게스트하우스 주말에 묵는다면 세화에서 여는 프리마켓을 구경했을텐데 열지않는 날이라 아쉬웠다 해변가가 바로옆에 있고 게스트하우스 내에 잔디밭같이 야외정원이 있어서 바람쐬며 쉬기 좋았다 사장님도 친절하시고 다락방 같이 층에 만화책 오락기가 있어서 혼자여행왔지만 다른 여행객과도 수다떨면서 즐겁게 보낼 수 있었다위치가 시내에서 떨어져 있는 공항 근처의 해변에서 약    객실은 넓고 깨끗하고 잘 갖춰진 부엌과 함께 제공됩니다 방은 매일 청소 한다 국제적인 기준에 의해 준비된 수건은 손수건 것으로 간주됩니다 식료품 가게에는 동 떨어져 있고 시내에서 분 거리에 있는 세계적인 마트가  식사를 위한 메뉴는 인접한 레스토랑이 있는 요리 호텔에서는 식사 제공 및 제공할 수 있는 선택 메뉴 호텔 주인 주문 데 도움이 스테이징될 것입니다  비행기가 이륙하는 소리도 볼 수 있지만 우리의 숙박을 하지 않은 감소하는    공항간 밤에 조용하고 아침에 일어나서 매일 아침 지저귀는 새와 수탉의 울음  빨강과 하얀 해변을 향해 걸어 볼 말 모양의 등대 여성에게는 집 보기 해변을 즐길 수 있는 사람들 개 산책 조깅 건조 시 야채 야영 검토자를 마을을 향해 걸어 둘러보시기 일하는 여성들을 걷는 저 언산   봉이 조감도 의 제주시 공항과 바다새 호텔이고 현대적인 장비 룸은 좋은 사이즈의 발코니가 있어 바다를 볼 수 있습니다 제공된 수건은 매우 작고 라기 보다 손수건 같아요 아침 식사는 포함되어 있고 레스토랑이 호텔 근처 수 있습니다 꽤 비싸고 좋지 않다 태국 음식이 맛이 없으면 다 같은 태국 음식에이 가격표 나는 이번엔 매우 표준  하나 나는 얼마나 놀라 봤을 때 객실 이것은 많은 시설과 욕실에는 샤워기 및 욕조 아 아래층 커피숍 가격 대비이벤트로 온호텔 최악 물도없고 응대 형편 없으며 시끄러운거에 대한 사과도 없고 객실은 빨대 찌꺼기 같은게 나옴 그냥 만원 더내고  호텔 갈껄 돈이 너무 아깝내요  아 목말라  냉장고에는 종이컵만 있다 ㅜㅜ공항이랑 가까워서  늦은 밤 도착이나 오전 일찍 출발시 좋음  비행기 이륙도 볼수 있어 아이들이 좋아했음  잠깐이지만공항 근처 호텔입니다 실내 수영장과 커피숍 마사지샵이 있어서 리조트 같았고  객실은 모텔 정도의 규모와 시설입니다 년에 신설한 곳이라 시설은 엄청 깨끗해요  저희 갔을때 오픈 이벤트로 한건지 모든 숙박객에게 계속 서비스 제공하는것인지는 모르겠지만 시간 정도의 안마의자 이용 또는 족욕 서비스 받을수 있어서 좋았습니다   수영장도 놀기 적당한 정도의 규모였습니다   저희는 떠나기 전날 밤에 머물렀었는데 렌트카 반납하는곳과 멀지 않았고  태풍이와서 비행기 딜레이 됐을때도 공항근처라 일정 조정하는데 편했어요좋은 호텔 방과 욕실이지만 자동차가 필요합니다 호텔 로비는 약간 죽었고 겨울 식당은 문을 열지 않았습니다 열려면 미리 예약해야한다고 생각합니다 금릉 항이나 협재 해수욕장 호텔은 여행자들을위한 더 많은 식당과 카페로 더 좋을 것이다서비스가 좋고 매우 따듯한 호텔이었습니다 난방이 매우 잘되서 따듯하게 잘 보냈습니다 저는 호텔에 머물렀어요    그런데 숙소가 다소 노후되어있습니다 ㅠ  천장등이 없어서 전체적으로 방이 어둡고 관리가 안된 부분들이 보여서 ㅠ 아쉬웠습니다  화장실 타일 사이에 곰팡이가 슬어있는 점과 층뿐이지만 엘레베이터가 없다는점   짐이 많은 커플들은  머무르는데 힘든부분이 좀 있습니다  근처에 편의점이 없어요 들어가기전에 보이는 편의점에서  간식은 꼭 사서들어가시길기대많이하고간곳 프라이베이트 풀장 빌라는 비수기에도 만원 이라기본룸으로예약 엘베없는 층까지 기본방과 층은 루프트탑수영장이위치 박동안 즐겁게 수영하고 놀았다 일단 이 호텔을 예약하게 된 이유는 굳이 비싼 풀빌라가 아니어도 루프탑에있는 풀장을 이용할 수 있다는 장점때문에 예약을 하게 되었습니다   저녁을 먹으로 가는 중 이용 시간에 대해 물어보려고 리셉션에 전화를 했는데 청소가 안되서 불가능하며 그런 정보를 어디서 보셨냐며 따지듯이 묻는 직원   총지배인으로 보이는 여직원의 무례한 말투와 소셜에서 구매한 손님 이란 표현에 정말 억장이 무너지는 순간이었습니다   호텔 어플 및 포털 사이트에는 공개 되지 않은 정보라며 루프탑온수풀 이용이 불가능하다고 말하질 않나 어디서 본 정보냐며 따져묻더군요 마치 가르치듯이 얘기하는 직원 태도에 당황했습니다   호텔 로비 리플렛엔 버젓이 루프탑 사계절 온수풀 영화상영이라고 써있더군요 요즘 손님들의 선택이 얼마나 다양한 정보에 의해 진행되는지 전혀 이해하지 못하는 듯한 어이없는 상황이었습니다 직접 제가 어디서 얻은 정보인지를 증명하기위해 동영상까지 첨부해보내는 일까지 손님인 제가 해야하나요    나중에 서비스라며 가져다놓은 병맥주 병 잘마셨네요   풀빌라는 이용안해봤지만 나머지 호텔이라고 써놓은 리셉션 윗층의 룸은 가격대비 정말 별로였어요 나중에 여러명이 오더라고 여기 풀빌라는 직원의 불친절했던 기억때문에  절대 이용하고싶지않네요제주공항에서 택시타고 분정도소요  택시기사가 잘모름  현지주소를 불러줘야 네비로해서 감 외관은 굉장히 괜찮은데에 비해 내부는 그렇지는 못함  그래도 로얄호텔보다는 가격대비 훨씬 좋음공항이나 시내에서 떨어져있으나 셔틀로 이동가능하며 골프장이 있어 사우나도 무료 이용 가능한  식당음식이 별로이고 매점은 없어서 밤에 피자를 시킬 수 밖에 없었던  것이 아쉬우나 룸이나 욕실 상탲가 편하고 깨끗해서 여행객도 편히 쉴 수 있었음                                                                                                                                                                                                                                                                                               수영장도 있고 다좋은데 입퇴실시간이 시입실시 퇴실이라 다소 불편함 이것만 빼고는 괜찮음 그냥보통의 그저그런 숙소 가족끼리가야 맞는곳 공항 도착 시간이 늦기 때문에 공항 인근 그리고 바다와 가까운 곳으로 숙소 잡으려 했고 이곳을 찾음 일반적인 제주의 도미토리 인 숙박 가격으로 이곳의 개인실 잡을 수 있어 좋았음 늦은 체크인 가능 주인분도 친절하시고 근처에 편의점과 식당들 있음직원들이 숙박하고 있습니다 그들은 거의 영어로 말할 수 없다 그러나 그들의 빠른 인터넷 접속의 덕택으로 우리는  를 통하여 대화 할 수 있었다 위치는 공항 근처에 있으며 객실은 넓습니다 그들은 무료 아침 식사를 제공하지 않으므로 가장 가까운 레스토랑  카페까지  분 이상 걸어 가야합니다이 호텔은 좋은 사람들을 위한 저렴한 제주도 여행을 누가 적 이고 편안한 곳에서 묵을 수 있는 밤 방 자체는 깨끗하고 좋은 확실하지 않은 이틀 동안 잠을 푹 자지   장점  무료 주차장 호텔 외부 넓은 객실 에어컨도 좋았다  호텔은 조용하기 때문에 쉽게 잠을 잘  단점  청결도 개선 되어야 할 많은 더럽고 침대에는 얼룩이 서피스 그들은 영어를 하지 않는 우리에게 하는 것이 좋지만 우리가 머무는 동안 더욱 어려운 경우 질문을 찾기 어렵다  어떤 이유로 이 호텔의 위치는 구글 맵  에 앉아 차를 렌트해서 찾기가 불가능하고 우리는 결국 하여 많은 사람들에게 있어서 캐리어를 지적해 주는 사람  전체적으로 이 호텔은 완벽한 곳이 제주에서 들을 저렴한 가격 하지만 럭셔리 하고 다른 곳을 찾고 있는 것을위치도 좋고 하여 공항에서 가깝다 우리는 늦게 도착한 이 호텔은 합리적인 가격 나중에 한 건 다음 날 아침에 매우 가까운 호텔 북부 관광명소 같은 길을 따라 머리를 바위와 해산물 벨트 용 직원들이 영어는 잘 못하지만 나는 여전히 볼 수 있었지만 그들은 약간의 손상의 전원 어댑터 하나 아직 작동하는 그러나 어떤 것은 위험한 금속 이 기 때문에 신중하게 선택되는 경우 중 하나입니다 방은 깨끗하고 충분한 편이지만 전체적으로 일부 테이블 서피스 및 기름진 머리 전체적으로 허용하여 우린 짧은 잠을 잘 잤다제주의 작은 항구 옆 조용한 지역의 멋진 게스트 하우스 주인은 매우 도움이되었습니다 우리는 제 의 마루에 큰 방을 가지고 있었다 그것은 멋졌고 아주 깨끗했다 그것은   분 다음 음식점에 가기 합리적인 방을 찾고 있다면 그 곳으로 갈 것입니다 태풍으로 겨우도착해서 첵인하니 크나큰방으로주시고 배고픈 우리의 요구에 아침식사도 척척 제공해주시고 편안하게 해주신 곳 평대리에간다면 이곳에서 머무세요 비수기엔 더더좋은것같아요 하늘이이쁘고좋았던시간입니다 밥도맛나요집밥같은메뉴인테리어나 청소상태 모두 양호합니다 애월 바닷가에서 다소 떨어져있으나 렌트카로 이동하기에는 편리한 곳입니다  공항에 늦게 도착하여 애월쪽 숙소 찾는다면 괜찮은 숙소입니다 무엇보다 가격이 엄청 저렴합니다일본식 비즈니스 호텔에 익숙하다면이 곳도 비슷합니다 객실에는 수하물을 여는 공간이 없지만 휴식이 필요한 곳이라면 이곳이 당신을위한 곳입니다 호텔 예약시 지정한 주소를 사용하는 지도에 없습니다  사이트를 사용하여  를 사용하여 위치를 정확히 파악했지만 절반 정도 떨어져있었습니다 버스 정류장에서 도보로 몇 분 걸리는 메인 스트리트에 있습니다 그것은 버스 터미널에서 도보 약  분입니다 내가 호텔을 예약했을 때 나는 단지  명이 필요할지라도 침대  개가있는 남성용 기숙사라고 말했다 나는 그것이 숙소 또는 무엇인가이다라고 생각했다 그러나 그것이 의미하는 것이 당신이 방에 커플을 가질 수 없다라고 생각한다 단지 같은 성의 사람이 방에 머무를 수있다 호텔은 깨끗하고 현대적입니다 객실은 겨울철 난방을 제공합니다 나의 유일한 불만은 짐을 열 수있는 공간이 없다는 것입니다 나는 다른 비즈니스 호텔에 묵었고 도쿄의 비즈니스 호텔과 거의 같습니다 는 나의 방에서 다소 천천히 또는 때때로 매우 했다 호텔은 영화관 및 레스토랑 구역에서 도보로 약  분 거리에 있습니다 거기의 레스토랑의 대부분은 내가 보았던  개의 레스토랑 서양식 음식을 내었다을 제외하고 어떤 영국식 메뉴도 가지지 않고있다 그것은 버스 터미널과 공항에 가깝기 때문에 머무를 수있는 좋은 곳입니다 그것은 정말로 쌌다 약   원의 밤 나는 다시 여기있을거야이 장소는 나의 친구에 의해 추천되었다 그리고 우리는 주인 이 공항에서 우리를 가져 오기를 기대하지 않았다 장소는 다른 침실과 식당 부엌 방문객을위한 거실이있는 집과 같습니다 주인이 서울을 방문해야했기 때문에 우리는  박 동안 여기에 머물렀고 지난 밤에는 홀로 남았습니다 쇼핑 거리가 단 몇 걸음 거리에 있으며 방 파울도 인근에 있으며 편리한 상점들이 많기 때문에 나는이 호스텔의 위치를 좋아합니다 제주시의 고급 위치를 찾고 있다면이 곳을 적극 추천합니다이 곳이 바로 옆에 있는 쇼핑 거리가 있다 또한 공항 근처   깨끗하고 따뜻한 수많은 게스트 하우스를 한 적이 있는 이는 아직 베스트                                                                                                                                             우리가 예약한 더블룸을 통해 호텔이었습니다  우리가 도착했을 때 주인이 하는 말이 한 게스트 하우스 그녀 전화번호는 예약을 하고 있다는 사실을 보여주고 간 그녀는 완전히 걱정 하지 않았다 그녀는 그녀의 문제가 아니고 우리 호텔 사이에 있었습니다  그리고 그녀는 그녀의 사무실로 갔다 라고 했는데 예약 취소 및 환불을 해 주는 것 할 수 없다고 하자 그녀는 다시 그 돈을 다시 생각하는 있을 것이다  환불 거부 하자 이 호텔을 예약했는데 처음부터  이며 마지막 주인이 라고 우리가 다른 호텔들이 모두 예약해서 주말에 사용하는 마을비젼 게스트 하우스는 한 호스트 수는 느낌 우선 공항에서 픽업드롭 오프 일 때 또한 계획을 도와주었고 우리는 하루 여행 제주도 가장 좋았떤 점은 위치의 비전 하우스 유명한 검은 돼지고기가 바로 옆에 있어서 걸어서 약  너 처럼 레스토랑에는 전부 동일한 물건들을 팔고 너무 늦게 닫습니다  제가 실망이 네 책이 있다 비록 그들은 나에게 더 비싼 방을 예약하는 경우 장치 한 그 시간 동안은 안 나에게 그냥 없이 변경될 수 있습니다 인테리어는 조금 낡았습니다 심지어 이곳은 민박 호텔에 너무 많은 없고 그냥 빵만 할 토스트 잼과 버터 그리고 자신을 위해 커피 또는 오렌지 주스 그녀는 그녀가 곧 내년에 따라 일부 내부 혁신  저에게는 저는 우선 서비스를 받았다 심지어 좀 실망은 이것은 우리의 여행을 상상할 수 있는 어떤 나머지 이다   전체 일은 아주 좋은 사람 이틀째 밤 동안 대부분의 실속은 문을 닫았고 우리는 다시 흑 돼지바비큐를 먹고 싶지 않습니다 우리의 모습을 찾아 이 이후 그는 약  플러스 곧바로 그녀가 되어 빨리 나가서 찾는 곳이 었다면 기도어가 가져다주 됬어요 우리는 굉장히 감동을 했다  배려 고맙다제주도에 위치한 호텔은 시티 센터와 불편한 위치 수산 시장과 버스 정류장에서 도보 거리   호텔은 넓은 짐을 넣을 수 있는 두 개의 중간 크기 시간 하는 식당 층에 있습니다지금 찾기 힘든 저렴한 숙박시설과 제주도 몇 가지 좋은 후기를 읽고 나서 아고다를 통해 예약한 후 일부 지원하지만 정말 나쁜 경험의 예약을 취소하고 있었고 기뻤지만 이윽고 우리는 이 새로운 호텔  이곳은 조용한 지역에  즉 가까운 바다 호텔은 아주 인기가 중국 여행 하지만 또한 게스트 하우스 바로 호텔  우리는 게스트 하우스에 방지하려면 투어 또한 새 우리 방은 널찍하고 아주 깨끗합니다 우리는  조식 불포함 지급위치는 좋지만 룸컨디션은 별로예요 구석구석 먼지도 많도 리뷰보고 이용했는데 사진과 다른 룸에 매우 실망했습니디 직원들은 사무적이고 별로 친절하지 않습니디 다시 이용할 일은 없을 듯 합니다곽지 해수욕장 바로 앞이라 뷰가 정말 좋습니다  편의점 맛집 등 가깝고 여행하기 좋은 곳입니다  층 로비에 오픈된 공간에서 바다보며 맥주 한잔 하는 것도 좋습니다 룸도 청결했습니다  재방문 의사 있습니다 씨뷰만 훌륭한 호텔 월초 바닷가 앞이라 썰렁할 때인데 중앙난방 방식이라면서 난방을 끄고 에어컨을 켰다고 했음 그래서 밤에 많이 추웠음 난방 불가라고 함  룸 바닥의 카펫은 청소가 안되는지 남편과 아이가 계속 재체기 하고 박째에는 콧물나기 시작했음 명 예약했는데 모든 애머니티수건슬리퍼칫솔등는 명꺼만 준비 되어있음가격대비 인테리어가 멋진 숙소입니다 지어짅 얼마 안되어 매우 깨끗하고 그렇게 넓은 편은 아니지만 바닥도 나무재질이고 짙은 색상의 모던한 인테리어가 인상깊었습니다 호텔에서 분 거리에 바로 아이들이 놀기좋다는 곽지해수욕장이 있었느나 아쉽게도 태풍시즌이라 모래바람 사이에서 사진한장 겨우 건져왔습니다 룸서비스는 없었고 조식만 가능하나 건너편에 쌀국수 잘하는 집이 있어서 거기로 갔습니다만원 안쪽에 특급호텔 시설을 바라는 분들이 꽤 많네요 비수기라 저렴하게 이용했고 곽지과물해변과 가까워서 좋았습니다 조금만 걸어가면 해변과 식당이 있어서 괜찮았어요 다만 내부가 깔끔하게 정돈된 느낌은 아니라 청결에 신경썼음 더 좋았을 것 같아요 위치  규모가 큰 호텔이 별로 없는 애월에서 비교적 큰 규모의 호텔로서 푸른 바다가 바로 앞에 있으며 저녁 석양 무렵이 아름답습니다  직원  직원들이 친절한 편입니다  룸  바다 전망이 보이는 욕실이 좋았으나 방에 전체적으로 비릿한 냄새가 나는 단점이 있었습니다  조식  전체적으로 괜찮았습니다만 가성비까지는  기타  바다가 한 눈에 보이며 사시사철 수영이 가능한 루프탑 수영장이 아주 멋있었습니다박했는데  다시 가고싶진않아요 가격할인해서 가도 아까웠습니다 야밤에 디제이시끄러워 짜증났구요  권하고싶지않아요 여러모로수준이 그닥 실내 환기팬 및 에어컨 소음   침대와 객실 외부 유리창 사이에 스파가 있는 객실에 묵었습니다 이 스파 위쪽에 상시 작동되는 팬이 있는데 현관에 룸키를 꽂으면 마스터 전원이 들어오면서 저속으로 작동하고 화장실 팬을 작동하면 고속으로 작동하는 시스템 같았습니다 일단 룸 키를 꽂으면 이 스파 위쪽 팬을 끌 수 있는 스위치가 없었고 저는 이 팬의 소음이 수면에 방해가 될 정도로 매우 거슬렸습니다 결국 관리직원이 오셔서 환기팬의 전원선을 분리했고 직원 분 말씀이 전에도 유사한 컴플레인을 받은 적이 있다고 하시더군요  또 천정에 삼성시스템 에어컨이 설치되어 있는데 설치의 문제인지 기종의 문제인지 모르겠으나 소음이 상당합니다 저같은 경우는 밤에는 에어컨 없이도 잘 수 있을 정도의 날씨여서 사용하지 않았지만 예민하신 분들은 충분히 문제가 될만한 수준의 소음이어서 한 여름에 투숙하시는 분들은 고민해보셔야 할 듯 합니다 관리하시는 직원 분은 에어컨 소음은 방법이 없어서 숙박을 포기하고 다른 호텔로 가신 고객도 봤다는 말씀을 하셨습니다   객실 내부 청결도 및 하우스 키핑 문제   제 경우 객실 청소를 실제로 담당하시는 분 한테서는 이 정도 가격을 받는 호텔에서는 기대하기 어려운 수준의 응대를 받았습니다 관련해서 그 분과는 대화를 더 나누기가 싫어서 프런트에 관련된 컴플레인을 했었고 프런트는 친절하게 해결해 주려고 노력하는 것 같았습니다 다만 호텔 직원에게 필요한 서비스 마인드 교육이 하우스키핑 하시는 분들 까지는 제대로 되어 있지 않다는 느낌을 강하게 받았네요  가족들과 잘묵다가 갑니다 이국적인 분위기인 애월에 잘어울리는 호텔이었습니다  그나저나 밑에 여자분 정황상 반입금지인 강아지 데리고들어가놓고 걸리니까 괜히 적반하장 화내는게 웃기네요 ㅋㅋㅋㅋ 우리가족들한텐 친절만하던데  저런게 바로 갑질이 아닌가요 글보시면 부끄러운줄아시고 정신차리세요가족들과 여행 중 우리가 관광 간 사이에 호텔 직원들이 무단으로 아무런 허락 없이 객실 난입하여 온 방을 헤집고 나간것 우선 이게 팩트입니다 이유인즉슨 메이드가 청소 중 애완용품이 있었다는 것 그래서 우리 허락 없이 객실 내부에 있는 물건 사진을 찍어 몰래 직원들 단체방에 유포했다고 하네요 그래서 호텔 총지배인 및 직원들이 사실 확인차 명이서 그것을 확인하러 우리 객실에 무단으로 들어간 것이라고 하네요 관광을 다녀오자 총지배인이라는 사람이 나와 우리를 보자마자 하는 말 자기들이 객실에 들어가서 직접 물건을 확인했으니 벌금을 내라는 것 정말 말이 안나올 정도로 황당했습니다 실물 강아지가 있었던 것도 아니고 그로 인해 민원이 들어온 것도 아니고 하물며  및 명백한 증거도 없이 추정 물건으로 호텔 관계자가 명이나 무단으로 객실에 출입해도 되는건가요 이게 대한민국 호텔에서 일어날 수 있는 일일까요 물건으로 추정컨데 강아지가 있는것으로 보이니 스위트룸 박 더 내라고 하네요 객실이 못팔릴수도 있다고 그래서 뒤에 있을 컴플레인 및 모든것은 내가 책임지겠다 하지만 직원들이 우리객실 무단으로 출입한것은 어떻게 책임질거냐 하니 박치 돈 안낼거면 경찰 불러서 객실 수색하겠다네요 계속 올라가서 확인하자고 협박 및 강압적인 말로 우리에게 모욕감을 조성했습니다 그 누가 부모님과 가족들 쉬고 있는 공간을 직원들이 수색하도록 동의를 하나요 혹여나 그 안에서 호텔 규율을 어긴 담배를 피었거나 고기를 구워먹었던 흔적이 있다고 해도 그 누구도 우리 허락 없이 우리가 점유하는 객실을나는 그것을 사랑했다 이것은 에서 나의 제 의 체재이었다 그것은 해변에 따른 아름다운 해변과 멋진 레스토랑을 가지고있다 그러나 도시에 가까운 그리고이   가 최고였습니다 나는 거기로 다시 돌아갈 생각이다  바다를 마주보고있는   옆에 있으며 모든면에서 주인 위치 시설 및 경치의 환대가 가장 좋습니다 그리고 그 가격은 품질면에서 상대적으로 저렴합니다 손님은  층 건물을 사용할 수 있으며 각 층은 매우 독립적으로 사용할 수 있습니다 나는 강력하게 부부와 가족 모두에게 그것을 권장합니다  최전선에서 바다를 조망할 수있는 것을 골라라 그러면 최고로 즐길 수있다이틀 동안 머물렀다 객실은  인용으로 일반 한국 호텔 객실보다 컸습니다 객실 편의 시설은 잘 작동하며 문제는 없습니다  그러나 두 가지 점이있었습니다   욕실에는 목욕 타월이 없으며 호텔은 핸드 타월 만 제공했습니다 방에 목욕 타올을 추가하십시오  아침 식사 스프레드는 매우 좋지만 아침 식사 이름이 부족합니다 나는 회교도이므로 음식에 돼지 고기가 들어 있는지 여부를 결정하기가 매우 어려웠습니다 음식의 이름은 매우 유용 할 것입니다  위치는 공항과 도심 근처에있었습니다 결국 그것은 단지 평범한 호텔이었습니다 단체 여행객 만 이용할 수 있으며 호텔을 수면 전용으로 만 사용해야합니다                                                                                                                                                              년 일 이틀 묵었습니다 솔직히 이 여행사에서 예약을 이 호텔을 선택하지 않습니다  기본적으로 이 호텔은 아무것도 꽤 주변 내에서 훨씬 찾아냈습니다 호텔 외관은 기반으로 새 것처럼 보입니다  체크인도 빨랐어요 방은 깨끗하고 넓고 심플한 디자인입니다 욕실은 깨끗하고 넓고 필요한 세면도구가칫솔 제외 갖추어져 있었습니다 방에서는 가 좋았습니다  편의점이 층에 위치한프론트 데스크 카운터 기본적으로 옆에 이 정말로 근처에 아무것도 많이 합니다  아침 일간 같은 다양한 평균  전반적으로 목적 잠을 수행하는 여전히 만족스럽습니다일단 주변에 유흥주점밖에 없어요 그래서 여자들끼리 오면 진짜 무섭고 또 환풍이 잘 안되고 담배냄새 진짜 토나옵니다 금연이라 되어있고 리뷰도 다 좋아서 싼맛에 예약했는데 진짜 담배냄새가 상상초월해요 건물공사가 진짜 대충되었는지 담배냄새가 화장실에 겹겹히쌓이면서 그렇게 예민하지 않았던 저조차 진짜 구역질 나올듯 한 경험이었습니다 그냥 밤 샜어요 친구랑 정말 죄송한데 모텔용으로 와도 되지만 여행오셨다면 싼가격인데도 비추할게요 진짜여행 최악의 경험입니다오라 스테이 호텔   은 여관과 같은 호텔입니다 그들은 손님을 위해 빠른 체크인을하는 정말로 단순한 리셉션을 가지고 있습니다 객실에는 위성 채널을 시청할 수있는 평면  냉장고 및 무료 가 있습니다 전용 대형 욕실에는 샤워 시설이 있으며 제한된 무료 세면 도구와 헤어 드라이어가 있습니다  여행자를위한 기본적인 필요성 지하 쇼핑은 단지  거리에 있으며 동문 시장은 불과  떨어져 있습니다   과  와 같은 관광 명소는 도보로 쉽게 도달 할 수 있습니다 환전정 파빌리온 버스   버스 정류장에서 시내 관광 버스       를 이용할 수도 있습니다 주변은 전혀 시끄럽지 않습니다 호텔 옆에있는 프라이드 치킨과 맥주 하우스와  개의 문이있는 해산물 레스토랑도 있습니다 플러스 호텔 바로 맞은 편에 미니 마트가 있습니다 총체적으로 나의  개의 날 체재는 멋졌다 그들은 리셉션에 자주 없기 때문에 직원에 대해 말할 것도없고 매일 방을 청소합니다호텔은 공항과 매우 가까우며 로비에  개의  개가있어 편리합니다 그러나 서비스는 그리 친절하지 않습니다 수하물을 도와주는 벨보이는 없습니다 영어로 의사 소통을 할 수없는  프론트 데스크 접수 아침 뷔페는 거의 매일 동일합니다 엘리베이터가 느립니다 객실은 넓고 기본적인 세면 도구를 제공합니다 그리고 위치는 대부분의 관광 사이트의 중심입니다 나는 다음에 다른 호텔과 함께 예약하는 것을 선호합니다공항이랑 매우 가깝지만대로변이라시끄럽고 곰팡이 냄새로인해  창문을 닫을수없는데 문열며 시끄럽고 에어컨은 바로 침대위에 있어 너무 직방이고 화장실 문도 너무불편                                                                                                                                                                                                                      긴 밤낮으로 잠을 자지 않고도 깨끗하고 편안한 호텔 방을 확인해 주셔서 감사드립니다 우리를 매우 행복하게 만드는 모든 필수품이 제공되었습니다 잘 자거야 제공되는 아침 식사도 매우 맛있었습니다 공항 페리 부두 버스 터미널에서  분에서  분 거리  작은 거리 안에 호텔 그레이스 호텔 꽤 유명하고 버스 정류장도 이름을 그레이스 호텔을 사용 또는 주요 도로에서 레오 호텔 비교 높은을 발견하는 것이 좋습니다 다음 검색 호텔  이름이 잘못 될 수 있습니다 단지  그레이스  또는 레오 에서 도보로  분  좋은 위치 대중 교통 버스 레스토랑 및 편의점에서 도보로    분 거리  호텔은 오래되었고 방은 작습니다  매일 하우스 키핑과 수건 교체  직원  소유자가 도움이됩니다 근무 교대 근무 직원은 영어를 야간 직원은 중국어 그는 중국어와 영어를 모두 알고 있습니다   층에 뜨거운 물과 시원한 물을 사용할 수 있으며  공기 컨디션 및 온수 샤워 상태 양호 헤어 드라이어 샴푸 목욕 젤  이용 가능                        목포에서왔다면 목포에  개의 부두가 있음을 유의하십시오 제주에 간다면 큰 것이 아니라 작은 것이됩니다  온라인 예약  페리는 한국 발급 신용 카드 만 수락하며 한국 신용 카드가 아닌 다른 나라의 신용 카드로만 예약을하고 페리 회사 이슈 티켓과 은행 통보를 받지만 마침내 사용할 수 없습니다위치도 매우 좋고 근처에 있는 쇼핑센터 레스토랑 카지노도 방은 좀 좁고 침대가  주문한 공간이 남아 거의 필요하지 않습니다 이 이상한 타월을 제공할 수 없고 또한 화장실도 매우 의  는 굉장히 새롭고 그동안 찾아돌아다니다 컴퓨터 고장 났어요 안전금고도 없었다 해 말할 수 있는 좋은 조건이 아니기 때문에 또한 대부분의 시간을  하듯 아무 누구도 없었고 그는 그 곳에 그녀는 자신이나  숨기기  어쨌든 전원 어댑터 중 하나 달라고 해서 잡은 그는 판매만 하는이 호텔은 중앙에 위치한 버스 정류장에서 아주 가깝고  분 직원들은 영어를 유창하게 구사할 수 및 위치가 당신을 구성할 수 있습니다   이 호텔은 거의 모든 서비스   편의점 클럽 좋은 한국식 바베큐 과 세탁 및 보행자 전용 거리   다시 오고 싶네요   우리는 층 객실  과 하루의 일을 제  욕실도 작동하지 않았다 나는 그의 이야기는 국 이나 바닥에 바로  프런트 데스크 및 변경할 수 있습니다   아주 좋은 숙박 시작하려면 우리는 여행에서 렌트카 제한된 주차는 호텔은 일도  분거 리 체크 검토 디셈버 호텔 위치도 매우 좋은 음식과 주요 도로 근처 쇼핑도 간단한 트리플 룸 넓은 옷장이 없어서 그냥 당신의 코트 후크 이 호텔은 그중에서 놈 연인끼리 제주도 중문 통나무 펜션 는 의상 여긴아니에요 스튜디오 로프트 프런트 데스크는 음식 거리였지만 기대는 대환영 또는 서비스 단순한 지붕에 머리의 저렴한 호텔 좋은 가치저는 가격비교사이트에서 가장 저렴한 가격에 올라온걸로 예약을 했는데 취소해달라고 왔네요 그가격에는 안된다면서요 그러면서 부닷 잘못이라고 하시면서 도리어 저에게 성을 내시네요 네이버나 다른 인터넷에서 찾아봐도 비슷한 가격인데 만원이상 비싸게 말씀하시며 취소해라 예약사이트하고 얘기해라 라는데 근처도 가기싫습니다 고객은 어디까지나 예약사이트를 통해 정보를 확인했는데 호텔 주인이라는 분이 왜 저에게 화를 내시죠 상황만 잘 설명하시면 이해될껄 가는말이 고아야 오는말도 고운겁니다                                                                                  전날 다른 카라반에서 침대가 불편하고 히터 켜지고 꺼지는 소리가 너무 시끄러워서 못잤어요 그래서 걱정했는데 여기 카라반이 커서 침실과 거실 사이에 있는 문을 닫으면 첨 아늑했어요 침실에는 양키캔들등이 있어서 등밝기는 조절이 가능했고 제일 좋았던 것은 온수매트가 침대에 깔려 있어서 정말 따뜻하게 푹 잘 수 있었어요 다른 일행은 텔레비전 보고 싶어 했는데 부엌쪽에 텔레비전이 있어서 각자 하고 싶은 거 할 수 있어서 좋았습니다 샤워실은 작지만 온수가 잘 나왔고 부엌도 넓고 좋았어요 후기가 나빠 걱정했는데 괜찮았어요 여행을 좋아하고 출장도 많아서 국내 및 해외 다양한 숙박시설에 숙박예약 및 숙박경험이 많은데  항상 업무가 바빠서 후기를 잘 못 남기는 편이었는데이번에 내 생에 최악의 경험을 하여 다른 여행자들을 위해서라도 후기를 남기니 꼭 참고하세요 첫날과 특히 둘째날 각각 어이없는 경험을 하였네요이곳 절대 이용 안하시기를 예약사이트에 캐러반  및 캐러반 로 구별되어 예약하도록 되어 있고 사진상 내부구조상 주방이 일자로 짧은 구조형 및 주방이 디귿자자형으로 넓은 구조형이 있어 요리좋아하는 아내와 상의하여  캐러반 로 예약하였습니다 아마도 이것 없었으면 다른 숙소로 예약했었을 것입니다 낮일정 마치고 저녁시분경 숙소로 가서 체크인을 하고 안내해준 캐러반 안에 들어가 보니 예약한 형이 아니고 주방이 아주 좁은 형이어서 예약한 방과 다르다 했더니 여사장인듯한 아주머니가 말하기를 예약한 대로 방을 주는 것이 아니고 우리가 정해주는 대로 받는 것이다 라며 가르치듯 말씀하시기에 예약사이트를 보여주며 우리가 예약한 캐러반 는 사진상 분명히 주방이 자형인데 이방은 일자형으로 짧아서 우리가 지금 장 봐온 요리를 할수가 없다 하니 사이트에는 딸이 사진을 올려놓아서 나는 모른다 다른 사람들은 그동안 불만 없었는데 왜 이렇게 까다롭게 구느냐 하더군요 이런 실랑이를 하고 있다가아내도 서운해 하고장봐온 해산물은 어차피 요리못하게 되었고기분이 너무 나빠 시간이 늦었으니 오늘은 그냥 자고내일은성수기 때 평 복층에 묵었지만 우선 청소도 제대로 되어 있지 않은상태에서 입실시키고 실외 수영장 역시 그리 깨끗하지 않습니다 더불어 조식 시 나온 빵은 오래된듯한 느낌을 받았습니다 말은 리조트인테 시설 역시 그리 좋지 않는 모텔보다 못한 시설입니다 그리고 주차장 역시 협소하여 주차시 문제가 많이 있습니다 손님한테 물어보지않고 숙박 키 및 자동차 키를 마치 강제로 줘야하는듯한 느낌이 들어 많이 기분이 상했네요 이제껏 제주도를 몇번 가봤지만 이 모텔보다 못한 숙소때문에 다시는 가고 싶지 않는다는 생각하게 되었습니다월의 마지막을 보내며 가족과의 힐링여행 네번 제주여행에서 처음으로 자유와 여유로운 여행을 다녀올 수 있어 힐링이라는 것을 느끼게 되어 흐뭇한 여행이였다 비가 오는 덕분에 계획된 곳을 모두 돌아 보지는 못했지만 무엇 보다 오픈한지 얼마 되지 않은 물뜰에 쉼팡  펜션의 박은 아이에게나 우리 부부에게 즐거움을 안겨주어 감사하다 예정했던 에코랜드에서의 범퍼보트를 날싸관계로 운영하지 않아 아쉬웠는데 펜션 수영장에서  수상자전거와 투명 카약을 할 수 있어 비용 절감의 효과를 누리게 되어 감사 초등아이를 동반한 가족여행이라면 꼭 제주 항공 우주 박물관을 가시길 추천함장점 저렴한 가격 넓은 방 친절한 자연의 단점    침대 시트 이불과 베개는 강한 곰팡이 냄새가 나   모기 등 벌레가 너무 많은 거미 싶다면 등으로 다양한 크기의 거대한 작지 우리는 나와 내 아내는 방을 세 번 하는 버그 때문에 너무 많은 분이 단지 내 방에 들어가자 하지만 네 번째 방에 벌레 등이 다 아무것도 할 수 있는 호스텔이 있어    매니저가 너무 바빠서 처리 문제는 듯 예 등 많은 문제들이 잘못  예약이 호스텔은 깨끗하고 좋습니다 다시 즐길 수 있는 뷰를 즐길 수 있는 호스텔 입니다 적당한 사람들을 위한 별도의 개인 정보 보호는 휴가 중 우리가 머무는 동안에 우리는 방을 구할 수 있는 벽에서 벽 등반 은 우리 방 저는  있습니다   머물고 즐길 수 있는 지 직원들은 매우 친절하고 도움이 되었습니다 열심히 하였고 예하 투어를 위해서 갈 수 있는 방법에 대한 도움말 그는 버스 정류장을 기꺼이 보냈습니다 정말 치료 해 손님이 준비되어 있습니다 제주 에 다시 가게 된다면 저는 이 호텔을 두 번 다시 생각 하지 않습니다 저렴한 가격에 좋은 곳이기 때문입니다 라고 말하고 싶어요  표 중       그리고 말레이시아정말 저렴한 가격에 이 호텔을 예약 하는 다른 여행 사이트에서  에 위치합니다  여행자 아주 넓은 방이 있는 유일한 장점이라면 주인은 매우 협조적이고 할 수 있다 단점  택시를 타고 분 시내에서 너무 멀리 떨어져 있을 때 가 밤에 시내를 돌아다니지 않을 수 없어 나도 구매 참나  너무 멀리 떨어져 있는 버스 정류장에서   주인은 우리에게 필요한 드라이브에 있는 버스 정류장에서 택시를 타고 시내에 가 비용을    택시 기사들이 호텔을  찾을 수 없는 탐색 필요한 호출하고 소유자 방향 이 한 의사 교환이 하기에 영어를 이해하고 매우     나으실 수 있는 유일한 세입자 하는 불편한 호텔 이웃 이나 소주를 마시는 주인이 훨씬 냄새가 나 ㅆ다   저는 오히려 더 높은 가격 대비 그냥 작은 방에 있는 트레이드 호텔은 안전하다는 느낌이 있다버스 역에서 길을 건너  오름 단면을 볼 수 있는 버스 정류장에서 길을 건넌 후 있다면 무거운 짐이 추천하지 않는 것 하고 싶지 않다면 그냥 걸어갈 수 있는 약    이 호텔은 큰 오렌지 왼쪽 벽 때입니다 주인은 영어를 잘 하지 못했지만 친절하고 매우 도움이 되었고 그는 그가 우리의 기본적인 요구는 할 수 있도록  패스트 푸드 등이 있다 이 곳의 모든 것을 최고의 더 나은 서비스와 시설을 하지 않을 것을 내야 하는 기숙사 방을 볼 수 있는 싱글 침대   의 층 침대 싱글 침대가 있는 방에서  편안했어요 반면에 친구와 저는 점유 공간 그냥 우리 두 딸 들 필요한 모든 것을 얻을 수 있는 방에 평면  개인 욕실 미니 냉장고 헤어 드라이기 저는 정말 행복한 이 평화롭고 좋은 분위기 월 월에 오는 것이 호텔 근처에서 하이킹이나  거문도  미리 예약하면 또 다른 가장 좋은 점은 버스 정류장이 바로 앞에 버스가 하루에 몇 번 있긴 하지만 또한 저는 그 분 사람이 와서 제안 그룹 친구들과 함께 더욱 즐거운 시간이 와서 이 곳도 있을 것이라고 생각합니다                                                                                   이곳에서 박을 머물렀습니다 이 투어를 예약으로 예약할 수 있지 않나 체크인 두 명 당 한 번에 하나의 키만 할당된 공유할 수 있습니다 변경다른 사용자가 이 허용되지 않았다 입구에서 방으로 얼마나 비좁은 첫인상이 었습니다 바닥 난방이 좋은 것이었습니다 이 갖춰져 있었다 헤어 드라이어 냉장고 전기가 충분하지 않고 모두 사용할 수 있습니다 전선이 엉망이고 어디서나 아침 식사는 최악 차나 커피도 없습니다 물론 이 수건 가지고 있는 그들은 오직 손 닦는 수건 목욕 수건 제공할 수 없습니다                    사진보다는 내부가 좀 낡은 편이에요 입구에 당나귀 토끼 개 닭이 있어서 동물 좋아하시는 분은 좋을 거 같아요 화장실에 욕조가 있는데 온수 제한이 있어서 공용사워실에서 사워하는 게 편할 거라고 이야기는 들었는데 밤에 가려니 어디 있는지 잘 보이지가 않았어요 ㅜㅜ 다른 건 그래도 다 괜찮은데 내부가 낡아서 오래된 나무 냄새나는 거랑 침대가 아주 딱딱해요ㅜㅜ 잠을 잘 잘 수 있을지 모르겠어요 매트릭스가 거의 안 느껴진다고 보심 돼요ㅜㅜ                                이 호텔은 상대적으로 새로운 곳입니다  세의 밤  시부 터 밤에 한 가족 룸에서 밤에 세부 사항이 실망 스럽습니다 체크인 할 때 목욕 수건이 없었기 때문에 프런트에서 수거해야했습니다 수건은 오래되고 힘들었습니다 그들은 컵과 주전자를 가지고 있었지만 티백이나 커피는 제공하지 않았습니다 최악의 부분은 침대 시트에 곰팡내 나 습한 냄새가 있었기 때문에 마지막 체크 아웃 후에 세탁되었는지 궁금했습니다  체크 아웃에서 나는 모든 것이 인지 물었다 나는 그 여성에게 냄새 나는 침대 시트에 대해 이야기했다 그녀는 미안하다라고 대답했다방에 들어가자마자 냄새가 났습니다 침구를 바꿨는데도 불쾌했습니다 침대 시트를 들어보니 곰팡이가 엄청났습니다 그래서 두개 있는 침대중 하나를 포기할 수 밖에 없었습니다  이런곳에서 외국인이 잠을 잔다면 국가적 망신이라고 생각합니다 들어가자마자 다른방을 알아보았지만 주말이어서 방이 없었습니다 있었다면 돈을 포기하고 다른 숙박업체에서 잤을것입니다 씻으려고 나오는 물조차도 느낌이 좋지 않은것 같았습니다 꼭다른 곳을 가세요제주 시내에 있는 호텔이었습니다 주차장은 조금 떨어져 있지만 이용하기 문제는 없었구요 시설이 조금 낙후되었지만 저렴한 가격에 저희는 문제 없이 하루밤 잘 묵었습니다내 인생 최악의 호텔 호텔이라는 말 조차도 아깝다 우리 일행 중 한명은 들어가서 분도 지나지 않아 피부에 이상증상가려움과 붉은 반점 동반호소 내가 묵은 객실에 비치된 요 세트 모두에 정체모를 다양한 크기의 얼룩들이 빠짐없이 있었다 돈 내고 간다면 말리고 싶은 호텔 숙박을 포기하고 다른 호텔로 옮기려고 나오는 길에 초등학생이 있는 가족을 만났는데 초등학생 학년 정도 되어보이는 아이가 엄마 여기 무서워요 라고 말함 격하게 공감 어른인 나도 너무 무섭고 더럽고 싫었음너무 낡았어요 자다가 유리가 떨어지는 공포 체험  침대 위치가 조금 애매했으면 응급실 갈뻔 했어요위치가 좋은 것 빼고는 공항에서 가까움 좋은 점이 전혀 없음 로비는 크지만 관리되지 않아 매우 지저분하고 리셉션은 불친절함 온돌방을 받았는데 침대가 있었고 시트가 깨끗해 보이지 않았음 욕실은 더럽지는 않았지만 결코 깨끗하지도 않음 재방문의사 없음우리가 제주를 여행했을 때 우리는 몇 밤을 여기에 머물렀고 우리의 렌트카에 앉아있는 탐색 장치는 찾기가 매우 쉬웠습니다 공항에서 약  분 우리 아파트에는 발코니가있는 바다와 아름다운 거실과 주방이 있으며 기본 요리 도구가 있습니다 아파트의 지시 사항은 영어로되어 있지 않지만 모든 경고문을 읽고 특히 밖으로 나가면 동시에 발코니 문  개를 닫지 않는 것에 대한 번역 앱을 사용하십시오 또한 아파트에는 거실 패널과 장소의 조명을 제어하는 리모콘이 있습니다 셀프 세탁 시설은 없지만 공항으로 돌아가는 것처럼 차로  분 거리에있는 저렴한  시간 코인 세탁소가 있습니다 제주에 돌아올 때 좋은 가치의 기반이므로 다시 예약해야합니다널찍하고 깨끗한 방 나는 그 지역이 새롭고 개발되고 있다고 생각하지만 그것은 매우 조용합니다 바다를 바라 보면서 발코니에서 멋진 전망을 즐기실 수 있습니다 친절한 직원이지만 영어는별로하지 않습니다 우리는 에어 컨디셔너 문제에 관해 그들에게 말했고 우리는 통제를 이해할 수 없었다 다음 날 그들은 우리에게 제어판이 훨씬 더 조용한 광고를 영어로 녹음했습니다 우리는 공항에 오전 시 택시를 요청했다 비록 사소한 문제가 있었지만 직원은 우리를 위해 또 다른 택시를 불렀고 우리가 택시를 얻었다라고 확신하게했다 우리가 그들과 대화를 나누기를 바랍니다 그들은 아주 좋은 사람들입니다 다음 번에는 분명히 거기에 머물러있을 것입니다 공항에서  분 거리에 교통 정체가없고  달러에 들기 때문에 매우 합리적인 요금입니다 대부분의 직원들은 친절하나 정말 말도 안되는 서비스를 제공하는 직원이 있음 차량을 가지고 박을 숙박하면서 낮에는 업무를 처리하고 같은 장소에 차를 세워뒀더니 방치 차량이라고 차량에 붙어 있는 스티커를 보고 회사에 전화를 해서 차량 방치 했다고 말함 출장 복귀 후 엄청 깨짐제주도에 놀라 갔냐고쉣 심지어 차에는 연락처가 붙어 있었고 체크인 시 차량번호도 기입하였으나 회사로 전화해 내 연락처를 알아내고 호텔 객실로 전화해서 차량을 방치 하면 어떡하냐고 따지고 어렵게 연락처 알아 냈다며 마치 대견한 짓을 한 것 처럼 객실로 전화함 너무 황당해서 프론트로 가서 따지니 호텔 시스템의 부재는 자기는 모르는 일이고 자기는 잘못한게 없다고 큰소리 침거참 나 호텔밥 년 먹었고 호텔경영학박사데 기가차서 그냥 키 던지고 나옴  주변에 편의점을 갈려면 걸어서 분 정도 걸어가야하나 로비에 작은 슈퍼같은게 있긴 함  차량이 있다면 공항과 가까워서 편리하나 항공기 이착륙 소리가 많이 심함  룸 컨디션은 나쁘지 않으나 침대는 허리가 아픔  조식 포함이나 토스트 정도 먹을 생각이면 나쁘지 않음  시설에 대해서는 가격대비 결정해야 할 부분이고 나름 씨뷰라 가성비는 상당히 좋음  저 직원만 찌르면 나름 괜찮은 호텔임나머지 직원들은 모두 친절했음사장 아들이면 모르지만 그거 아니면 제발 교육을 시키든 짜르든 하심이 회사 발전에 도움이 될 듯인에 조식까지 준대서 싸다 했는데 다 이유가 있어요공항 바로 앞이라 진짜 시끄럽고요렌트하면 좀 나은데 대중교통 접근성이 떨어져요조식은먹을거 진짜 없고요직원 친절 숙소 청결도 우수 뷰도 아주 만족한 숙박이었음 조용한 시설이었으며 공항에서 가까워서 너무나 편했다 또한 조식도 단체 때문에 나름 훌륭한 조식을 먹게되었다 가격에 비해서 좋다는 뜻이다친절도 잘모르겠고 별로 늦게 가진않았지만 밑에 슈퍼도 닫혀있고 룸컨디션도 별로네요 바닥에 얼룩도 많고 냄새도 심하고 화장실 청소를 한건지 안한건지 변기에 머리카락도 그대로 있고요 들어가자마자 기분 나빴습니다 오션뷰 아닌 쪽이였고 비행기 소음 진짜 시끄럽고 신경 쓰이네요온돌방 원에 예약 예약하자마자 취소 하려고 하니 취소수수료  방시설도 기대 이하고침구류가 별로 여서 잠자리가편치 않았네요ㅡㅡ가격대비 별로 였음 공항 가까운것 빼곤 나머진 별로 였어요 저 가격 아니었으면 그나마 나을지도모르겠지만요내가 그것을 좋아하게했던 해안 옆의 재산은 옳았다 나는 항상 파도가 부서지는 소리에 일어났다 주변에 몇 가지 편리한 상점이있어서 내 경험을 훌륭하게 만들었습니다 이 호텔은 버스 정류장을 걸어서 약  분 거리에 있으며 제주 국제 공항과 심지어 최재해 해변으로 향합니다  초등학교 버스 정류장에서 도보로 약  분 또는 도보로  분 거리 인  라는 대형 슈퍼마켓도 있습니다 이 호텔은 유명한 애월 해안 도로와도 멀지 않습니다 직원들은 좋았고 영어를 말했고 버스와 식당을 어디에서 얻을 수 있는지에 대한 몇 가지 질문으로 기꺼이 도와 드리겠습니다 나는 또한 매일 무료 물병과 수건 교체를 받았다 나는이 호텔을 제주도의 멋진 해안 전망을 가진 호텔을 찾는 사람에게 추천 할 것입니다                                                                                                                                                  더블 하나 싱글하나 베드 있고 방 넓고 뷰도 좋아서 그냥 잡았어요 만원 박  관광지에서 저렴한 요금이다 싶었고 차 댈데가 많아 그냥 잡은게 화근이 되었네요 침대불편 침구베개 이불와 수건에선 알수없는 고약한 냄새  겉보기엔 깔끔한듯했으나 남편이 일어나더니 빨리 나가자고 난리네요 ㅋ좋은 숙소란  깔끔하고 친절하고 따듯한 쾌적한방이라고 한다면모두 충족시켜주네요    친구추천으로 엄마랑 동생과 묵었는데 가족모두 흡족해하여 편안한 여행이 되었네요         창밖으로 바로 바다가 보여  쉬는동안에도 재주를 느낄수있고요 수압이 너 무 좋아서  여독을 풀어주고 침대도 개가 들어가면서도 넓찍한 방이 전혀 답답하지 않아요    저렴한 가격에 이정도의 조건 너무 좋았네요 참 조식도 나와요          힐파크 다녀왔는데요 제주도심 한복판에 있어서 근처 면세점을 가거나 근처 맛집등을 가기에 딱 좋아요을 더한 친절하고 호의적 인 한국인 가족 소유 호텔 뉴타운의 매우 좋은 위치 무료 식수 무료 와이파이 액세스 엘리베이터  마이너스 더블 침대와 싱글 침대를 구비하고 있습니다    및 그 이하의 공간 잠글 수있는 수하물 보관소가 없다일 밤을 묵었는데 하이트 호텔 리셉션 직원이 영어를 못했다 이 호텔은 시청 근처에 있는 레스토랑이 많습니다 위치는 공항에서 가까움 버스 번호를 여기에  우리 방은 괜찮았습니다 아침 식사는 괜찮았어요 김치 쌀과 빵 특별한 것은 수 많은 기대할 수 없지만 이 가격이면 저렴한 여행자의 경우 이 날 수도 있습니다 와이파이는 빠르고 제가 마음에 들지 않는 화장실의 냄새나는 이 호텔에서 박을 할 수 있지만 저는 없습니다 저는 사람을 제외하고는 모두를 볼 수 있고 리셉션에  도로 옆에 있어서 만큼은 정말 향잡음을 방은 깨끗하지만 욕실은 완전히 젖은 데 최대  분 전에 들어갈 때는 사람처럼 바디 워시 비누 바디로션 을 사용할 수 있지만 큰 병 반 빈  하지만 시장은 먹을 수 있는 아주 가까운 곳에 위치해서 걸어서 사용할 수 있습니다                                                                                                                                                                                                             저렴한 호텔로 조식까지 먹을수 있어 좋아요 공항도 분이면 도착을 하고 주위에 유흥시설이 없어 조용해요무료 조식이 있는건 좋은데  렌트카 있는 분들은 몰라도 뚜벅이 여행자에겐 비추인 호텔 입니다  버스로 이동시 환승 필수이고 버스도 배차 간격이 길어서 불편해요  그리고청결 상태가 안좋아요 이불과 바닥에 머리카락이ㅡㅡ                                                                                             그닥 기대는 하지 마시구 ㅎㅎ 가격이 싸긴 하니까 딱 여관수준이에요 방도 그렇고 방음도 그렇고 ㅡ 그낭 모텔이 나을거 같기두 합니다친절한 주인 분이 너무 좋았습니다 시설은 아주 신식은 아니지만 청결도가 웬만한 호텔보다 좋았습니다 침구는 물론이고 방 구석구석까지 깨끗하게 신경쓰신 것 같은 흔적이 느껴져서 좋았습니다 와이파이도 무료였고 공항에서도 가까웠으며 주차 공간도 아주 빠듯하지 않았습니다 맛집 동도원 카페어머니빵집 등와도 가까워서 걸어가서 다음 날 아침을 사 와서 더욱 좋았습니다싼가격에 투숙하려고 왔는데 역시 싼게 비지떡이네요 방음도 잘안되고 객실도 좁고 다음에 오면 다시 투숙하는 것에 대해서 생각을 해봐야 될것 같아요중국인들이 개별여행을 와서 길을 묻는데 제가 묵고 있는 디셈버 호텔이더라고요 그래서 친절하게 같이 버스를 타고 내려서 사이좋게 호텔로 왔습니다 신화의 거리에서도 가깝고 올래국수에서 직선으로 내려와 길만 건너면 호텔이 있어요 객실은 깔끔한 편이고 넓었어요친절한 주인 깨끗한 방 푹신한 침대 욕실깨끗깨끗한 냉장고 뭐 흠잡을게 없네요 단  냉장고 소음이 심하더군요 잠잘때 좀 힘들었네요폭설이 내려서 비행가가 결항되었을 때 이곳을 우연히 알게 되었습니다 호텔 직원 분이 매우 친절하셨고 침대화장실 등도 나쁘지 않았어요친구와 인실 이용했는데 옛날 모텔을  개조한듯합니다 깔끔하고 좋았어요 아쉬운점은 중국인 단체숙박장소라 그런가 너무 시끄러웠구요 조식포함이지만 큰기대는 마시길위치 좋고제주공항 근처 직원분 매우 친절하십니다 무엇보다 가성비가 매우 좋습니다 원에 더블룸 잡았는데 생각보다 괜찮아서 좋았습니다 조식 아주 좋았습니다 자전거대여와 노래방 이용 가능합니다노래방 시간에 천원이였던걸로 기억합니다 로비에 간단한 놀거리도 있습니다위치는 시터와 공항과 가까워 이동하기에 매우 편리합ㅂ니다   보안도 매우 잘되어 있고 조식도 매우 좋았습니다제주시외버스터미널에서 한 정거장 거리에 위치해 있었구요 근처에 약국 병원 작은 까페 편의점이 있었습니다 외관 및 내부시설이 깨끗했고 실내에 엘리베이터가 설치되어 있었습니다 전 층 인실 도미토리에서 박 일 지냈었구요 방 안에 화장실이 두 개가 있어서 편리했어요아쉽게도 수영장은 이용하지 못했지만 공항에서 택시 이용시 기본료에서 원정도 추가되는 거리입니다 숙소 아래에서는 편의점이 근처에 있고 걸어서 분거리에 맥도날드도 있습니다 방은 스텐다드트윈베드룸에서 숙박했는데 룸컨디션은 나쁘지않았습니다 다만 취침 후 새벽쯤 화장실 사용시 하수구 냄새가 올라와서 다소 아쉬웠습니다 아침 조식은 정말 좋습니다 전복죽을 주는데 퀄이 괜찮습니다 제주 조식주는 호텔 몇군데 이용해봤지만 상당한 퀄입니다실내 수영장 있는 호텔 잘 없는거 같은데  여긴 있네요  이용권 줘요  근데 이용 못함 ㅠㅠㅋㅋ 깔끔하고 지내기 괜찮아요   좀 좁은감이 있나 그래요  침대빼면 있을곳이 좀 좁은 침대가 넓은 편이고 아늑했음   욕실도 넓고 깨끗한 편 세면도구도 구비되어 있음 수압은 세지도 약하지도 않고 적당한 편   실내가 건조한 편인데 월이라 그런가 에어컨이 안 나와서 아쉬웠음  지하 주차공간은 넉넉하진 않지만 층 외부에도 공간이 있어서 다행이었음깨끗한 객실 친절한 직원들이 인상적이며 호텔에서 택시타고 분이내로 맛집들이 즐비 해 있음 공항과도 가까워서 위치로 굿임 재방문의사 제주공항에 늦게 도착했을 때 숙박하기 좋은 호텔 공항에서 택시타고 분 정도이고 스탠다드 타입에서 숙박했지만 생각보다 널찍하고 가장 좋았던게 침대가 넓었다 못해도 킹사이즈 정도 되는 듯했다 룸 컨디션도 깔끔하고 시설도 깔끔해서 만족제주에 출장을 자주 가는 편인데  그동안 숙박했던 곳 말고 다른곳을 찾다가 발견한곳  주변에 잠깐나가서 한잔할 곳도 많고  일단 공항가까워서 너무 좋았어요  직원들도 너무 친절하고 조식은 기대 안했는데 정말 좋았습니다 출장 올때마다 고민 안하고 엠버에 투숙할 예정입니다 편하게 잘 있다 왔어요 출장으로 공항주변 호텔을 검색하다 투숙하게 된 호텔인데요  번화가 먹자거리 보행분거리 입니다  조식당 음식 좋았어요  객실내에 커피머싱 잘이용하고 갑니다 아이가 잇어서 요구햇던 사항 다 들어주셔서 고마웠고 무엇보다 방음이 너무 잘됏고 조용히 잘 잇다올수 잇엇습니다ㅎㅎ 너무 친절하셨어요 조식은 한번만 이용햇는데 음식도 전반적으로 맛잇엇어요집처럼 너무 편안하게 지낼수 있어 너무 좋았어요아침 식사가 생각에 좀 못 미쳤지만 그외 모든것은 다 만족합니다 다음에도 또 방문하고 싶네요공항주변이라 공항과 렌탈업체와 가까워서 좋았습니다공항에서 버스로도 이동가능했습니다 시내 중심이라 먹을것들과 편의점이 등등이 가까워서 편했습니다 주변에도 맛집들이 있어서 저녁에 호텔에 주차후 걸어서 다녀왔어요한라산 등산을 위해 묵었던 숙소예요 공항 근처이기도 했고 바로 앞에 시외버스터미널이 있어서 한라산까지 가는 버스도 잘 이용했어요  저녁에 치킨 파티도 좋았어요  잘 묵고 갑니다밤비행기로 도착할때 이용하면 좋습니다 저녁비헹기라 근처서 밥먹고 숙소에서 잠만자고 다음날 아침에 일찍 출발했어요자동차 또는 스쿠터 렌트를 안하신다면 시외버스로 여행하실분들은 좋을거같습니다 다만 가성비가 좋긴하지만 퀄리티자체가 엄청좋다고는 못하겠네요 서율에서제주까지항공편요긐도저렴하고거리각가까워서이영하기가편리하다미일리지도적립이가능해서이용하기ㄱ시설도 깨끗하고 공항에서 가까워용 방에는 각자 락커가 있어서 짐 보관에 용이하구요 주차공간은 따로 없어서 골목에 주차해야 해요 ㅜㅡㅜ 다음에 가도 또 묵고 싶은 곳입니다 조식도 나오구용급하게 예약한거라 생각보다 괜찮았어요 테라스도 크고 방도 넓고 전체적인 만족 저녁 식사후 산책하면서 구경할 수 있는 풍경이 최고였음어이가 있다면 가격대비 그닥욕조없음 비슷한 가격이라면 체인 호텔이 나을듯 룸컨디션 좋고 직원친절하지만 왠지 음슴한 느낌 ㅋㅋ아침에 눈뜨고 물안개가 잠깐 밀려오는데  너무설렜어요 겨울바다에 안개가 밀려오다니가슴이벅착요 대박나세요  직원들도 너무친절했고 잊을수가 없어요   여름에 다시 찾을거예요나홀로 여행 왔다가 우연히 시일 묵었는데  너무 잘쉬다가 갑니다 가격위치너무나 마음에 들었습니다 또한 아주 깨끗하네요 특히 직원분들 귀엽네요 ㅋㅋ 한번쯤 가격부담 가지지 마시고 쉬시는게 좋을듯 싶어요해수욕장과도 멀지 안고 산책로 조용한 객실 테라스에서 바다를 바라보면서 커피한잔 너무 좋았습니다    정말 머리 복잡하고 많이 힘들었는데   많이 도움이 된것 같습니다 위치도 좋고 해서 몇 번 이용 했었는데 룸컨디션도 괜찮고 전체적으로 깔끔 베딩이나 청소상태도 좋았어요  청소하시는 메이드분들이 엄청 하시나봐요  이번에 가보니 리뉴얼 되어서 피트니스사우나랑 기프트샵도 생겼더라구요  기프트샵이 크지는 않아서 많은 종류가 있는 건 아니었지만 초코렛이나 디퓨저엽서등 선물로 살 만한 것들은 많았어요  호텔이라 가격이 비싸겠지했는데 생각보다 괜찮았어요 초코렛이랑 치약등 선물로 많이 구입했네요ㅎㅎ 호텔 위치상 선물사서 공항 바로 가기도 좋더라구요 지하에는 피트니스랑 사우나도 있었는데 사진은 못 찍었지만 가볍게 운동하고 씻기좋았어요 안쪽으로 사우나가 있는데 크기가 작긴 해도 나무향도 은은하게 나고 온도도 적당한 게 만족스러웠어요월 둘째 주 가족여행때 투숙했던 제주썬호텔    박을 예약하고 이용했는데 너무 좋았어요  레노베이션 되어서 객실도 넘 깨끗하고 침구류도 뽀숑 뽀숑  주변 맛집과 관광지 문의 했는데 친절하게 안내해 주신 직원분들 때문에 이틀 동안 넘 즐겁게 구경했네요  담에  제주에 오면  숙소는  썬호텔 방이 깔끔하고 뷰도 좋아요 ㅋㅋ 청소하시는 분들 너무 친절하시고 요청 했던 거 즉각 해결 해주셔서 너무 감사했어요 바쁘실텐데 미소로 응답해주셔서 감동 다음 제주도 놀러올 때 또 묵으러 올게요 ㅎㅎ친구들과 제주도를 여행하며 잠깐 지냈던 곳이였는데 시설도 좋고 직원들 서비스도 되게 좋았어요 그리고 이클립스 스포츠바가 있는데 영상도 보고 당구도 즐기면서 저렴한 가격으로 생맥주 한잘 할 수 있어서 좋았어요지난주 가족들과 썬호텔 박일 숙박을 하였습니다 가격도저렴하면서 깨끗한호텔을 찾다가 썬호텔로 정하였는데  너무만족하여 기분이 좋아요 일단 제가운동을좋아하는데 썬호텔은 헬스장이 있더라구요 헬스기구들도 많아서 넘 좋았어요 또한 사우나시설도 깨끗하고 아침조식도 맛있고 직원들의 친절해요 담에 또방문하고싶네요 의 위치는 제주도의 쇼핑 지역 근처이고 비교적 공항에 가깝습니다 호텔에서 공항까지 차로 분 정도 쇼핑 지역까지는 도보로 분 정도 걸립니다 근처에 먹을 만한 곳이 많은데 저는 호텔과 가까운 곳에 위치한  치킨을 추천합니다 편의점이 호텔 바로 옆에 있어서 아침 식사를 하거나 생수를 구할 수 있습니다 객실 내부는 훌륭하고 비록 약간 작지만 필요한 모든 것을 갖추고 있었습니다 침대는 약간 흔들렸지만 일 동안 편히 잘 수 있을 정도로 괜찮았습니다 제공된 목욕 수건은 조금 작았기 때문에 직접 가져온 더 큰 수건을 써야 할 수도 있습니다 접수처 직원들은 친절하고 협조적이며 도착한 첫 날에 근처에 대한 정보를 제공해 주었습니다 그들은 영어 실력이 상당했고 도움이 필요한 경우에는 그들과 대화를 나눌 수 있었습니다 전반적으로  에서 즐거운 시간을 보냈고 다음에 제주도를 방문하게 되면 꼭 이곳을 선택할 것입니다 저는 꼭대기 층의 스위트 룸을 빌렸습니다 그런데 불행히도 엘리베이터가 층에만 머물러 있는 것이었습니다 그래서 저와 제 부모님은 에어컨이 없는 비상 계단을 통해 큰 짐을 옮겨야 했습니다 직원들이 우리를 도와주었습니다 하지만 여전히 불편하기는 마찬가지였습니다 감사하게도 객실은 너무나 완벽한 곳이었어요 넓고 편안하고 깨끗합니다 욕실 밖에 놓인 욕조는 무슨 의미인지 정말 알 수 없었습니다 기본 침대는 분리할 수 없었습니다 커플을 위한 객실은 아닙니다 그래서 정말 당황스러웠습니다영어를 정말 잘하는 직원은 한 명뿐이었고 그녀가 자리를 비웠을 때는 관광 목적지에 대한 질문을 받거나 택시를 부를 때조차 적절한 대화를 나누기가 너무 어려웠습니다 그러나 그들은 정말 좋았고 영어 실력이 부족해서 소용없었지만 그래도 우리를 도와주려고 했습니다내 가족과 나는  호텔에서 일 밤을 보냈습니다 전체적으로 옆방과 위층 중국 관광객들을 제외하고는 좋았습니다 그들은 자정에 끔찍할 정도의 소음을 내고 큰 소리로 떠들었습니다 또한 위층에서 걷는 소리가 엄청나게 크게 들렸습니다 방음이 충분하지 않습니다 소음을 내는 관광객들을 제외하면 프론트 데스크 직원들은 항상 친절하고 상냥합니다 아름다운 젊은 여직원 덕분에 가족과 함께 가까운 식당에서 한국 전통 갈비탕을 즐길 수 있었습니다 맛있었어요 교통이 편리합니다 여직원이 전통 시장과 공항 픽업 차량을 준비해 주었습니다 그녀의 친절에 감사합니다카운터의 젊은 여직원이 훌륭하고 친절합니다 그녀는 호텔 밖 주차장으로 우리를 안내했고  치킨과 해물탕처럼 맛있는 음식점을 추천했습니다 호텔 조식은 제공하지 않지만 호텔 바로 옆에 편의점이 있습니다방은 아주 어둡고 전원 플러그가 정말 충분하지 않습니다 샤워실은 널찍했고 모든 한국의 호스텔은 작은 수건만 제공하기 때문에 개인 수건을 꼭 챙겨가세요 좋은 위치 주요 쇼핑 거리와 가까움 우리는 매일 밤 걸어서 다녔는데 정말 끝내줍니다좋은 리뷰들을  호텔  읽고 흥분을 전체 우리의 숙박을 예약했습니다 호텔 로비에 도착하자마자 나는 로비 이렇게 기대하지 않았습니다 호텔 만약 거의 눈에 띈다 확인 체크인 스태프들이 친절했습니다 객실 크기는 기대 그러나 청결 정격 위에 꼭 먼지 같은 수영장이 박 내내 커피 테이블 우리는 베드시트 변경 요청 둘 중 어느 하나 일어나지 않았다 호텔 수건을 매우 작은 크기를 제공합니다 위치   걸어서 밤에 많은 식당과 아침 식사는 없습니다 즉 한국의 일반적인 문제를 것 같다 호텔 레스토랑은 대부분의 시간을 옆에 아침 풀릴까 있을 필요는 없습니다  호텔과 월 호텔은 같은 길을 아마 단계 유일한 신용 호텔은 공항과 가까이 있습니다 그러나 너무 많은 호텔들이 있습니다 내가 제주도에 다시 오게 되면 이 호텔에 다시 올 것 같지는 않습니다양 염소 말 토끼 거위 오리 사슴 닭 백봉오골계도 그저 밥주기 체험이다  동물별로 공간을 분리해서 놔뒀을 뿐 정말 아무런 관리도 하지 않나보다 애들이 얼마나 더러운지 진짜 양털은 합성수지 불태운듯 바스락 거리고  무엇보다 사슴 몸에 파리인지모기인지 백마리정도 붙어있는 건 충격적  입장료 천원에 기본 사료 주고 천원추가에 당근 줍니다 당근은 먹이기 편하고 사료는 손바닥에 침 묻힐 각오하고 먹여야합니다아이들과 급박하게 예약하게 되었어요 운좋게 한분 예약취소가 나서 갈수 있게 되었죠 아침 저녁으로 애들은 토끼 양 말 오리 칠면조 산양 꽃사슴 염소 돼지등등 의 동물들의 먹이를 줄수 있구요 산양 젖짜기 체험도 가능합니다 똑똑한 양치기 개랑 원반던지기도 하구요  숙소는 조금 낡긴했지만 관리는 깔끔하게 잘해주셔서 묵는데 불편함은 없었어요 통나무로 튼튼히 이쁘게 지으셨더라구요  사장님부부도 너무 친절하시고 좋았습니다 아이들 있으심 최고의 경험 되실꺼예요객식은 단정하고 아이들은 동물들과 어울려 즐거워했습니다 다음에 제주도에 가면 또 숙박하게 될거 같습니다뜨내기 손님 받는 곳 손님에 대한 생각이 전혀 없는 곳 립서비스만 존재 비수기라 푸대접 받으니 성수기엔 더 푸대접 받을 듯 제주 망신시키는 곳 모슬포 박 여기 박 너무 비교됩니다 양떼는 대관령에 가지 왜 여기 왔나 싶네요이 유형의 호텔은 시골 지역에서만 찾을 수 있다고 생각합니다 밤에는 휴식을 취하거나 파티를 할 수 있습니다 주위는 정말 조용합니다 큰 소리로 걱정하지 마십시오 다음날 아침 아침 식사를 마친 후 목장에서 말과 그 친구에게 먹이를주십시오공항에서 가까운 호텔 찾다가 투숙했는데 가격대비 깨끗해서 놀랐습니다 화장실도 깨끗하고 좋았습니다 ㅜㅜ 가성비 짱입니다깔끔하긴 한데 그닥 호텔 스럽지는 않아요 가성비는 괜찮고 공항근처에서 호텔 찾는다면 나쁘지 않아요 카지노가 있는 썬호텔 맞은편에 위치해 있습니다 주차가 약간 불편한데 직원분이 주차하는것을 봐주셔서 편하게 주차했구요 객실이 아주 깔끔하고 인테리어나 침구류가 중간급 이상은 됩니다 가격 대비 상당히 만족스러웠구요 제주시에서 박할일이 있으면 재방문의사가 있을만큼 만족스러웠습니다급하게 당일 예약해서 이용했었습니다 사진과 많이 다를까봐 걱정했는데  새로생긴 호텔이라 깔끔하고 쾌적했습니다 관광 일정이 빠듯하다면 잠만자고가기에 가격대비 괜찮았습니다    다만 직원들 서비스마인드가 좀 부족하다느껴졌습니다 프런트직원에게 새벽이라 공항가는 콜택시불러달라 했었는데 이시간에 배차안된다며 나가 직접잡으라해서 좀 당황했었네요나름 지어진지 얼마 안된 호텔이라 그런지 호텔 자체에서 새 냄새가 너무 많이나서 복도에 지나갈때마다 괴로웠습니다 그러나 스태프는 친절했고 룸상태는 깔끔하며 어매니티또한 머리고무줄까지 준비되어있을 정도로 섬세한면이 있었습니다 평일에 묶어서 그런지 룸 업그레이드되어 싱글더블침대룸에서 하룻밤묶었던 점은 좋았습니다 어매니티는 평범한 편이고 무슨 브랜드는 아니었던 것 같습니다 공항근처에서 있어서 이동하기가 편리했으나 같은 가격이라면 몇만원 더 내서 신라스테이에 갈 것 같습니다 번화가와 조금 떨어져 있는 편이라 한적한 것을 좋아하는 분에게는 좋은 선택이 될 것 같으나 너무 중국인밀집지대에 있다보니 그점은 조금 걱정이 되네요 와이파이는 빵빵합니다                                                                                                                                                                                                                                                                                                                       제주에서 저렴한 가격으로 편히 쉬었어요 근처에 시장이 있어서 저녁에 쇼핑도 편하고 맛집도 많아서 좋았어요우리는 공항에서 버스를 타고 시청 맞은편에 내렸습니다  이 배낭여행 호스텔은 메인 도로를 벗어난 골목에 위치해 있습니다 우리는 처음 이곳을 찾을 때 약간 어려움이 있어 현지인에게 길을 물어봤답니다 방 자체는 적당히 작았고 매트가 바닥에 있었어요 그래도 편안하고 우리의 조건에 적당했어요 에어컨은 좋았습니다 수건과 세면도구 온수 샤워가 제공되는 욕실과 화장실이 바로 우리 방 밖에 있었으며 수압도 좋았습니다 욕실 옆에 무료로 사용 가능한 세탁기가 있었고 무료 와이파이는 빨랐으며 수신 상태가 좋았어요 무료 아침 식사는 아주 맛있었고 건강식이었습니다 홈메이드 통밀 빵 잼 요거트 과일 주스가 제공됩니다 커피 차 및 생수도 있었어요 또한 시나몬이 뿌려진 구운 허브 계란도 있었습니다 주인은 영어도 잘 해요 위치는 대중 교통 버스가 많이 다니는 곳이어서 버스를 타고 움직이기가 쉬웠습니다저와 제 아내는 을 통해서 월 일을 이 호텔에 묵었습니다 호텔은 거의 흠잡을 점이 없습니다 우리는 을 통해 더블 베드룸을 예약했습니다 주인 는 훌륭하고 꼼꼼한 남자였습니다 그는 버스를 이용할 수 있는 제주 명소들과 제주 공항에서 호텔까지 가는 교통편에 대한 모든 필요한 정보를 보내주었어요 나를 믿고 그의 충고를 따른다면 여러분은 대중 버스로 편리하고 저렴하게 제주도 전체를 여행할 수 있습니다 월 일에 제주 공항에 도착한 후 동쪽 코스 여행을 했습니다 여행이 끝나고 기사가 로 우리를 데려다줬어요 시였고 우리는 여행 중에 아무 음식도 먹지 않아 배고팠어요 호텔에 들어갈 때 정문 밖에 가 환영 메시지 벽으로 세워둔 걸 보고 깜짝 놀랐습니다 그는 냉장고에서 음식을 꺼내주었습니다 방은 좋았어요 바닥에 부드러운 침대가 있었고요 욕실도 좋고 넓었습니다 아침 식사도 좋았습니다 아침 식사는 패킷으로 오전 시 분부터 시까지 제공됩니다 리셉션 데스크에 마련되어 있습니다 패킷에서 이름을 찾아야 합니다 좋은 시스템 게다가 이 지역은 모든 종류의 교통 시설과 연결이 잘 되어있습니다우린 여행 이튿날 원화가 부족했습니다 그는 만원을 주는 것으로 우리에게 도움을 제공하며 우리가 시간이 있을 때 언제든 은행에서 환전한 다음 돌려달라고 했어요 그는 정말 좋았어요우리는 현지 문화에 대한 주제로 많은 것을 교환했습니다 그곳에 가세요 나는 당신이 그곳에 머무는 것을제 친구와 저는 이 멋진 곳에서 박일 묵었습니다 쉽게 갈 수 많은 상점이 가까이 있습니다 이 호스텔은 아주 아늑했습니다 안으로 한 걸음 들어서자 멋진 시나몬 냄새가 너무 편안하고 마음을 진정시켰습니다 주인인 김씨는 훌륭했습니다 그는 영어를 유창하게 잘 하고 제주도 여행에 대한 조언을 해주었습니다 심지어 손님들에게 우산도 제공합니다 가정식 빵 요거트 잼 그리고 한국의 유명한 구운 계란으로 단순하고 건강한 아침식사가 좋았습니다 머무르기 편안하고 좋은 곳입니다 깜빡 잊고 있었는데 심지어 주인이 오랫동안 걸은 후 근육통이 생기는 손님들에게 발 마사지기를 제공하는 것이 감동스러웠어요 꼭 다시 올 겁니다봄 제주여행에서 박 동인 잘 묵었습니다 숙소의 위치가 상당히 좋습니다  버스 터미널과 가까워 섬의 어느 곳이든 원하는 곳을 방문할 수 있어요  숙소에서 직접 만든 아침은 환상적이었습니다  신선한 요거트 빵 그리고 잼은 커피와 잘 어우려 졌어요  방은 적정한 사이즈에 커다란 침대 그리고 욕실이 딸려 있습니다 모든 부분이 깨끗하였고 잘 정돈되어 있었습니다 여기에서 정말 잘 머물렀고 이번 달 다시 머물 예정입니다 숙소가 함덕해수욕장의 서우봉 건너편에 있는데 조용하고 좋습니다 주변에 아무 것도 없지만 조용한 곳을 찾으시는 분은 좋으실 듯합니다 그리고 호텔 바로 앞 바다 경치가 훌륭합니다 호텔은 오래 되었습니다 그러나 아주 깨끗하게 관리가 잘되어 있습니다 앞에서 낚시도 하네요 서우봉 산책 가능하고 함덕해수욕장으로 연결됩니다 가격대비 강추함덕에서 가까운 숙소로 바닷가 바로 코 앞에 위치한 오래된 숙소 이지만 정말 정갈하고 깔끔하게 관리 잘 해놓으셨고 서비스도 너무 친절하신 사장님  조용하게 우리만의 힐링타임을 가질 수 있는 제주도 다운 숙소밤 늦게 도착했는데도 환하게 웃으면서 맞아주시고 짐도 옮겨주셨습니다 바로 앞에 바다가 펼쳐집니다 방도 넓고 바닥이 따뜻해서 푹 쉴 수 있었습니다 특히 체크 아웃 때 따뜻하게 커피를 내려주셔서 공항으로 가기 전 산책도 하고 참 좋았습니다 바다 바로 앞에 위치하였고 모든 객실이 바다를 향해 있습니다 호텔이라기보다는 한국형 펜션에 가깝습니다 객실이 많이 깔끔하거나 최신 시설을 갖추고 있지는 않지만 넓고 안락합니다 친절한 주인과 깨끗한 제주도 바다를 즐길 수 있는 멋진 곳입니다 비교적 한적한 곳에 위치해 있어 편하게 쉬기에 좋습니다 저는 이곳에서 웨딩촬영을 하였는데 아주 예쁜 사진이 나왔습니다  에서 가장 환상적인 숙박을했습니다 제 친구와 제가받은 봉사는 누구에게도 뒤지지 않았습니다 객실은 매우 편안하고 깨끗했습니다 위치는 조용하고 바다의 아름다운 전망을 가지고 있습니다 긴장을 풀 수있는 완벽한 장소 스파 정말 아름다웠어요 우리는 일을 이 호텔에서 지냈어요 깨끗하고 조용하고 훌륭한 가족적인 분위기 침대는 매우 편안했고 샤워 시설도 좋고 욕조 작은 수영장과 살짜리 아들 작은 트램펄린 해안 및 커피숍들이 도보 거리에 직원들은 정말 좋았습니다 멋진 경험바다전망의 객실을 이용했습니다 명의 대가족이라 층 독채로 빌렸는데 전망이 아주 끝내줍니다 풀빌라여서 개인수영장이 있었는데 온수사용하여 아이들과 재밌게 놀았어요 층 거실이 워낙 넓어서 명이 모이기에 부족함이 없었고 특히 침대가 예술입니다 정말편해요 강추 야외에는 메인 수영장도 있는데 월이라 운영을 안하더라구요 보기에는 이뻤습니다 다른 가족들 모두 만족하는 숙소였어요저 바다를 보며 아이들과 조식을 먹었답니다 직원분들도 친절하셨고 숙소도 괜찮았습니다바다랑 숙소랑 붙어있으니 애들 풀어놓고 놀기 너무 맘이 편했습니다  일단협재바다색상이 너무좋고요 그모래사장위에  위치한게스트하우스 입니다 층에서 휴식을 하는데  외국  안부럽네요  무조건강추입니다사장님도 너무친절하시고 뷰가 너무 멋있어요 조식도 맛있었고 무료 석식파티까지 가성비좋은게스트하우스 꼭 추천 드려요파리이빗 비치처럼 문을 열고 나서면 바로 바닷가로 이어져 있고 모든 방 안에서 비치를 볼 수 있어요ㅡ 해거름을 방 창을 통해 볼 수 있었어요 저녁에는 무료 식사 타임이 있었고 조식도 꽤 든든한 편이에요 컵라면도 았고 카레에 미역국도 있어요 씨리얼고 있구요 전기장판도 필요하면 가져다 쓸수 있고 각 방에 도어락과 욕실이 따로 붙어있어 좋았어요최고의 위치로 바로 바다가 보입니다  언제든지 나가서 물에 들어갈 수 있습니다 직원들이 친절하지만 손님들에 대한 통제가 약해 잠을 자기가 조금은 힘들었습니다 제주공항에서 가깝고 좋은 시설을 바라지 않는다면 저렴한 비용으로 머물다 갈 수 있는 곳입니다 냉장고 있고 생수 개 제공합니다소셜에서 저렴하게 구매해서 숙박했습니다 위치는 칼 호텔바로 앞ㅋㅋ중국 관광객이 많더군요가끔 주말에는 결혼식도 하는듯 시설은 오래 되서 엘리베이터 있지만 그냥 계단으로 걸어 다녔어요ㅋㅋ 침대가 정말 오래 된듯했어요 쿠션이 없더군요 자는내내 불안하던군요ㅋㅋ 방은 넓은데여관에서 자는 느낌을 받았네요 가격이 저렴하기에 하루만 참고 잘수 있었던듯ㅋㅋ  아주차장은 매우 넓습니다박만 해결하면 되었기 때문에 가격이 저렴한 이 호텔을 선택했습니다 건물 자체는 낡았지만 특별히 불편한 점도 없었고 딱 가격만큼의 레벨인 호텔이었습니다한국의 김길방 밖에서 많은 욕조를 발견하지 못할 것입니다 값싼 호텔에서 우연히 발견되는 것은 생명의 은인입니다  이 곳은 시청에서 밤을 보낼 수있는 완벽한 장소입니다 객실은 항상 가격 대비 충분한 공간을 갖추고 있으며 깨끗합니다                                             호텔은 멋진 동네에 위치해 있습니다 고속도로에서 가깝습니다  정면 장교는 매우 적응하고있었습니다 그는 아트리움에서 공연을 보러 가야하기 때문에 조기 체크인을 요청했습니다  매우 합리적인 가격으로 도시 전망 유닛을 구할 수 있습니다 방은 매우 넓고 깨끗했고 전혀 불평 할 수 없습니다  매일 아침 맛있는 조식 뷔페가 제공됩니다  이른 아침 항공편을 타야 할 경우에 대비하여 공항과 가까운 호텔이 필요하면 좋은 위치입니다공항에서 가깝고 깔끔한 편 입니다 화장실도 깨끗해서 좋았어요 가성비 좋아요 추천합니다호텔은 그랜드 보이지만 실내는 그다지 의 외부 모습 제공하지 않습니다 목욕 수건 커피나 차를 가진 기본적인 세면도구 사셰의 그러나 이    근처의 카페 거리와 많은 맞은 편 섬에서  일째되는 주제와 같이  공항에서 터치 다운 이후로 이동 한  번째 호텔  게스트 하우스입니다 위치는 나쁘지 않지만 택시와 같은 교통 수단으로 도처에서 여행해야합니다     아무도 를 비난하지 마라 그 여행자가 제주의 대부분이 한국인이 영어를 해석하지 않기 때문에 말하는 방법을 모르고 있지 않는 한 여기의 택시는 정말로 비싸다 나는 정말로 단순한 영어 만이 그들에게 좋다고 믿는다 하지만이 호텔은 저축 또는 심지어 예산에 대한 계획을  위해 저렴합니다 그리고 이것은 하나를 선택할 것입니다숙소 앞 바다의 풍경이 너무 좋고 한산하고 조용하여 연인이나 나혼자 여행에도 적합할듯 대부분 필요한 용품이 구비되어 있어서 편리함 다만 매트리스가 너무 안좋아서인지 숙면하기 어렵고 허리가 아팟으며 실내 공기도 안좋아서 불편했음해변에서 가깝지만 바로 앞이 아니라 복잡하지 않고 주변이 조용함 객실에서 바라보는 비양도 전망이 좋았고 객실에 취사시설 되어있었음콘도식 부엌 전망도 훌륭합니다 조용한 동네에 협재 해수욕장 가격에 비해 좋은 가격 친절한 직원들 또한 고유의  점 지하에 노래방 과 로비 그들은 또한 마무리 공사는 야외 수영장 저는 이 리조트를 강력 추천한다호텔위치가 짱이네요 조금만 걸어나가면 번화가가 있어서 너무편해요 맛집도 많은거 같아요 무엇보다 객실이 깨끗하고 편해서 너무좋아었어요 제주시에위치해서 위치적으로도 이동하기 좋구요 객실이나 욕실도 굉장히 깔끔하고 청결하게 되어있어서 만족하게 묵고갑니다객실이 크고 욕조가 있어서 마음에 들어요  그리고 근처에 바오젠이라는 번화가있는데 거기 고기집이 많더라구요 다음에 기회가 있으면 또올께요제가 제주도 출장을 자주 오는 편인데 엠버시티호텔이 가장 마음에 드네요 방도 깨끗하고 화장실 청소 상태도 매우 좋습니다 추천합니다방도 깨끗하고 화장실도 마음에 듭니다 직원분들도 많이 친절해서 너무좋네요 저는 일간 투숙해 있었는데 너무 좋았습니다더블침대 하나와 싱글침대 하나가 있는 방을 예약했는데 너무 좋았습니다 따로 테이블도 있어서 좋았구요 침대를 제외한 공간이 넓어서 편했습니다사업차제주에 갔습니다 시내에 위치해 있어 편리하고 새로 리뉴되어 깔끔하고 너무 좋은 호텔였습니다 체크인할때 사장님도 만났는데 항상 웃으시며 맞아주시고 따뜻한 호텔이구나느낌이 좋았네요 공항근처라 비행기 타기도 쉽고 사업차 자주 제주도 가는데 또 이용할께요 월에 단체 관광을 가서 이틀 밤을 지냈는데 제주에서의 첫 호텔이었다 전체적으로 나쁘지 않았고 방은 깨끗하며 따뜻했지만 가장 큰 단점은 크기였다 내가 가 본 호텔 중 방 크기가 가장 작았는데 제주는 섬이기 때문에 큰 기대는 하지 않았다 방에서 인터넷을 할 수는 없지만 로비에서 무료 와이파이를 이용할 수 있다 위치가 좋은데 조금만 걸어나가면 산책로가 있고 거리를 따라 식당과 술집 상점 등 밤에 즐길 만한 것들이 많다스탠다드 미니는 충분히 크고 깨끗했습니다 우리는 욕실을 매우 좋아합니다 매우 현대적이고 넓으며 필요한 세면 도구가 잘 갖추어져 있습니다 방에 커다란 도있었습니다 아침 식사가 좋다라고 들었다 그러나 우리는 한다 빠른 체크 아웃 때문에 시험 할 시간이있다나는 수용체의  월에 의해 제공된 봉사에 매우 감명 받았습니다  그녀는 참을성 있고 예의 바릅니다 우리에게 제주의지도를주는 것 외에 그녀는 호텔과 버스 정류장을 값 비싼 호텔 근처에 스케치하기 위해 많은 고통을 겪었고 버스와 도시 간 버스를 타면된다 아침 식사는 매우 실망 스러웠습니다 별로 선택의 여지가 없다 방은 에 충분할 정도로 크고 나의 를위한 어떤 공간도 없다 나는 구석에 그것을 척해야한다 그러나 그것은 정말로 싸다  아마 나는 더 좋은 호텔을 위해 더 많이 지불해야했다  운이 좋았던 나의 체재는   개의 밤이었다첫 번째 저는 이 호텔에 무료 공항 셔틀 버스 정류장 호텔에 도착했을 때는 셔틀 버스들이 없고 앞쪽에 위치한 호텔이었는데 파킹된 방은 매우 작고 지저분한 곳 벽에는 얼룩과 침대 시트에 구멍이 있어서 가격이 저렴한 호텔도 있는 것도 아니다골프는 치지않고 가족여행으로 가서 숙박을 했는데 조용하고 한적해서 가족들이 가서 쉬기에 아주 좋았고 방도 넓고 독채여서물론 층이 있긴하다 좋았고 숙소앞에 산책로가 잘되어 있어서 좋음 그리고 차량 진입을 못하게 하여서 아이들 안전에도 좋음 다만 고양이들이 많아서 시끄러움시내와 위치가 조금 멀기는 하지만 우선 방이 넓직해서 너무 좋습니다 골프텔도 조금 커서 움직일 경우에는 프론트에 픽업 요청해야합니다 골프장안에 편의점도 있고 여러모로 볼 치기에는 적합한 곳입니다한적하고 여유롭습니다  조금 오픈한지 오래된곳이지만 필드뷰가 참 좋아요 조용하고 엘지  기업소유의 리조트입니다 인테리어도 자연친화적이고 좋아요골프장이 있는 호스텔이다 방은 어머어마하게 크다 사람이 많은 우리일행들에겐 적합한 방이었고 수영장이 있어 심심할시간이없었다 밤에는 바베큐파티를할수있고 소소한 시간을 보낼수잇었다시내가 아니라 조용합니다 친구끼리 와도 좋지만 특히 가족끼리 오면 더 좋을 것 같네요 독채 식이라 거실 하나에 방 개 구조인데 방마다 화장실이 따로 있어서 편했습니다 조리시설도 잘 되어 있고 냉장고 냉동실도 커서 여유있습니다 거실도 커서 근처 시장에서 회 사서 먹기 괜찮구요 특히 마음에 들었던 건 아침에 커튼 걷고 밖으로 보이는 잔디밭 나무들 풍경이었습니다 굉장히 아름답고 절로 힐링되는 풍경이에요 숙소 따라서 한바퀴 산책하기도 좋구요 굳이 골프를 치지 않더라도 숙박만 하기에도 정말 좋은 곳이라 생각합니다 위치가 시내가 아니라 불편하지 않을까 생각했는데 이틀 묵으면서 전혀 위치에 따른 불편함은 없었습니다 여름에는 야외 수영장도 운영한다고 하네요 수영장 크기가 그리 크지는 않았는데 아이들 잠깐 물놀이 시키기에는 괜찮을 것 같아요 한가지 아쉬웠던거 에어컨 필터는 청소 좀 하셔야 할 듯투어 패키지에 중에 하룻밤 묵었어요 호텔은 탑동거리시장에서 걸어서 약 분 안에 갈 수 있는 거리에요 말할 필요도 없지만 편의점에서 필요한 것을 다 살 수 있어요 은 길 건너 오른쪽에 있어요 방에는 정수기가 없어요 정수기는 방 밖에 공용으로 있어요 식당은 호텔 지하에 있어요 호텔 복도는 카펫이 깔려있고 방 안도 마찬가지인데 낡아 보여요 에어컨을 켜고 끄는 것 말고는 괜찮았어요 직원들은 영어를 거의 하지 못 해요관광 패키지에 포함되어 있어 이 곳에서 묵게 되었습니다 호텔이 꽤 오래된 편임을 로비에 들어서자마자 느끼실 수 있을 겁니다 메인 로비에 있는 소파가 연식을 말해줍니다 방들은 편안했고 큰 편이었습니다 바다를 바라볼 수 있는 발코니가 있었고 가까운 곳에 편의점과 길 건너에 세븐일레븐이 있습니다 생각했던 것 보다 나쁘지 않았습니다이 곳에서 하루를 묵었는데 괜찮았습니다 침대가 큰 편이고 편안했습니다 방에서 여러가지 텔레비전 프로그램들을 볼 수 있었고 방에서 보이는 경치 또한 좋았습니다 발코니에서 바다를 볼 수는 없었습니다 교통 정체가 아주 심각했고 주변에서 분 동안 택시를 잡을 수 없었습니다바로 앞에 이마트가 있고 편의점도 옆에 있어 쾌적했습니다 새로운 호텔은 아니지만 무난하고 쾌적하게 지낼 수 있었습니다 어른 여자 명이서 숙박했는데 보조침대가 아니라 제대로된 침대가 대 있어서 쾌적했습니다 동문 시장까지 걸어갔는데 못 걸을 정도는 아니지만 시간이 좀 걸렸습니다 분 정도 걸렸던 것 같습니다 공항까지는 택시를 탔는데 분 정도로 도착했습니다바다에서는 좀 떨어져 있지만 걷는게 엄청 싫지 않다면 문제 없는 호텔입니다 시장과 번화가 해변의 해산물 요리 레스토랑 등에는 좀 걸어야 하지만  도보권내에 있습니다 방도 청결했고 넓지는 않아도 조용해서 편안하게 쉴 수 있었습니다 가격대비 훌륭한 호텔이었습니다가격이 우선 싸요 공항에서 가깝고 근처 이호우테우 해변있어서 좋아요 시설은 그럭저럭인데 조식이 맛이 없어요 저렴해서 좋긴한데요 호텔 보다는 모텔에 가까운 느낌이구요 이호테우 해변에서 도보 분이긴한데 큰 도로를 따라 걸어야해서 걸어가기 쉽지 않아요 늦은 밤 이른 아침 잠깐 이용하면 좋을듯 가격이 무엇보다 엄청 저렴해요  호텔은 동남아 분들이 왔다갔다 하고  야간 데스크도 동남아 분이 보시던데 호텔 일층에 매점도 있고 방마다 작은 테라스도 있고 암튼 방도 깔끔하고 정말 괜찮음 주변에 뭐가 없긴하지만 티몬에서 특가로 잡아서 가족여행 갔었어요 호텔 깨끗하고 공항에서 가깝습니다 가격도 합리적이라 다시 이용하고 싶네요근처에 관광지는 없지만 공항이랑 가깝구요 가격에 비해서 깨끗합니다 지은지 얼마 안된거 같구요 주차공간이 좀 빡빡하긴 합니다제주시에서 머물러야해서 하루 홀로 예약한 숙소였어요 늦은 체크인에도 불구하고 너무 친절하게 안내해주셨어요 신식 건물이라 방도 너무 깔끔하고 룸 컨디션이 너무 좋았어요 책을 읽을 수 있는 휴게 공간이 있어서 좋았고 특히 조식이 너무 맛있어서 성게미역국은 정말 감동이였어요 여쭤보니 주방장님이 호텔쉐프 출신이시라구 역시ㅋㅋ 다음에 오게 되면 또 머물 의사 프러입니다독립방입니다 깔끔하고 좋다 인근에 있는 한라수목원에 있고 푸드트럭 있어서 좋다 한번 와보세요 주변에 볼거리있지만 볼만하다시설 매우 훌륭합니다 가격 매우 훌륭합니다 주차 매우 가능합니다 저녁에 도착하여서 공항 근처에서 머무셔야하거나 아침 일찍 출발하시는 분들께 정말 강추합니다  스태프들도 월급 잘 챙겨주시며 제주 여행도 하라고 유류지원도 해주시는 걸로 알고있습니다  제주도에 가면 또다시 꼭 들를 곳중 하나에요깨끗함 편안함 그리고 아늑함 너븐팡게스트하우스를 이용한 후기를 단어로 표현하자면 이렇습니다 무엇보다 인상 깊었던것은 호텔만큼 깨끗한 느낌이었습니다 또한 도미토리형식임에도 불구하고 블라인드공간으로 혼자만의 휴식을 취할 수 있는 형태여서 굉장히 편안했습니다 지하 커뮤니티공간은 여느 게스트하우스에서 찾아볼 수 없는 독특하지만 아늑한 공간이었습니다 책과 음악이 있고 여유가 있는 공간이었습니다 혼자만의 시간이 필요한 사람들에게  혼자만의 사색이 필요한 사람들에게 또는 누군가와 함께할 수 있는 공간이 필요한 사람들에게 그런 사람들에게 적합한 공간이 되지 않을까 싶습니다 월말과 월초 두번이나 숙박을 하게 되었는데 두번 모두 매우 만족스러웠고 너븐팡 게스트하우스에서 먹고 자는 것 조차 여행의 한 스케쥴이 된 것 같은 느낌이었습니다 다음 제주 여행 스케쥴에도 너븐팡은 고정입니다 다른 게스트하우스와 비교했을 때 장점   제주시 시내에 위치 만천원 가격대비 시설이 새거라서 최고급 침대에 개인 스탠드있음 침대에 노트북 놓을 수 있는 받침대 있음 전자식 개인 사물함 있음 조식이 한식으로 든든함 지하에 있는 모임공간이 매우 쾌적하고 같이 놀기 좋음 체크인 때 물 한병씩 주는게 매우 사려깊음 도미토리마다 화장실 딸려있음 매니저 잘생김  무튼 내가 제주에서 묵은 게하 중엔 최고였음  재방문 의사   공항과 가깝고 저렴한 가격에 대중교통을 이용할 수 있는 위치에 있음 시설도 꽤 깔끔한 편이지만 크거나 화려한 곳은 아니며 고급시설은 아님공항에서 가깝고 청결상태도 좋은 호텔입니다 약간 골목에 위치해 있어 처음 갈 때 찾기 어려웠지만 공항까지의 거리로 보나 숙소 상태로 보나 여러모로 만족스러운 호텔이었습니다 제주공항에 밤에 도착했기에 공항인근에서 하룻밤 묵을 숙소로 이곳을 선택했습니다 제주에는 최근에 만원에서 만원으로도 하루밤 지낼 수 있는 숙소가 굉장히 많더군요 그 많은 곳에서 이곳을 선택한 이유는  욕실 컵을 전기소독한다는 내용과 사회적 기업이란 것을 보고 이곳을 선택했네요 왠지 좀더 청결하게 관리하리란 믿음이 들어서요  스탠다드 더블룸이었는데  거의 시가 다 되어서 체크인했는데 배정받은 층에는 우리룸외에도 모두 다 숙박객이 있더군요 그럼에도 다른 객실 소음은 별로 들리지 않았네요  욕실과 침구류는 꽤 청결해서 거슬린다는 느낌이 없었구요 자신들의 광고대로 욕실컵도 굉장히 뽀송하더군요 사실 욕실컵을 잘 이용하지는 않지만 자신들의 광고대로 하는지가 궁금했어요 화장대겸 책상의 거울도 있어 이용하기 좋았구요 작은 옷장도 있어 옷걸기에 편했어요  가장 좋았던 점은 전 호텔이든 펜션이든 게스트하우스든  침대 이외에 쓸모있는 쇼파나 데이베드가 있는것을 선택에 있어 중요하게 여깁니다 침대만 딸랑 있는 곳이거나 장식용에 가까운 쇼파는 사실 침대이외에 앉을때가 잘 없더라구요 여행하다보면 일정을 정리하거나 약간의 사무를 처리해야 될때도 있어 탁자나 쇼파를 굉장히 중요시 합니다 근데 저렴한 호텔이나 펜션 게하등에는 이런 탁자나 의자가 없거나 있더라도 불편한 경우가 굉장히 많거든요  엘린호텔은 침대 옆에 작은 탁자와 쓸모있어보이는 의자 개가 있는 게 굉장히 맘에 들어 선택 하였죠 역시나 저녁에 늦게 도착해서 과일과 맥주한잔 하고 자기에도 딱 좋았구요 남편이 메일을 보고 쓰고 하기에도 굉장히위치는 공항에서 택시로 불과  분 거리입니다 프론트 직원이 도움이되었습니다 방은 기본적이고 괜찮습니다 매우 넓지는 않지만 방에 필요한 모든 것을 얻었습니다 다음 날 아침 일찍 비행기를 타야 할 경우 권장됩니다나는  를 가지고 거기에 갔다 아이 유모차와 그 짐을 밀고 눈이 내리는 날 저녁에 도착했습니다 직원들이 정말 도움이되었습니다 처음에 유모차를 계단을 통해 들어 올리려고했지만 직원이 휠체어 전용 엘리베이터를 열고 들어 오게했습니다 객실은 깨끗하고 히터도 작동합니다 위치는 훌륭했습니다 공항과 버스 정류장에서 가깝습니다 우리가 서귀포에 가고 싶을 때 공항에서  번 버스를 타거나 버스에 타기 만하면됩니다 이 호텔 근처에 많은 맛있는 레스토랑이 있으며 바 오젠  거리까지 걸어 갈 수있는 거리에 있습니다 편의점은 도보로  분 거리에 있습니다중국관광객들이 좀 많은 편입니다 시설 가격대비 괜찮구요 조식도 나름 먹을만합니다  수영장도 잘 되어있는 편이에요 제주도 비수기때  잘 이용하시면 저렴하게 숙박하실수있어요 호텔 근처에 뭐 편의 시설은 없구요  편의점 있습니다 주차장은 야외주자장이구요 제주도 렌트해서 이동시 괜찮은 위치에 있어서 편합니다 규모에 비해 저렴한 편인거 같아요  추천합니다 좋은 곳이에요제주시에서 동쪽으로 가는 길목에 위치하고 있어 위치가 좋습니다 호텔 층수가 높진 않지만 아침에 바라보는 바다가 멋있었고 조식도 괜찮았습니다 주차장도 여유있는 편이라 밤늦게 주차하는데에도 불편함은 없었습니다모처럼의 연휴를 맞아 아내와 함께 제주에 있는 호텔을 검색하던 중 함덕에서 동북리로 들어가는 길목에 있는 메이더호텔로 박을 예약을 하고 첫날 도착시 느낌은 꽤 아담하다는 느낌을 받았는데 호텔방에 들어서는 느낌은 우리가 우려했던 것과는 달리 확트인 공간과 펼쳐진 전망은 마음을 휠씐 더 행복하게 만들었다 잘 정돈 된 방과 구조는 머무는시간 내내 행복함 그 자체였다앞은 바다 뒤는 산이 있어 산과 바다의 멋진 풍경을 감상할수 있고 야외수영장도 있습니다 룸컨디션은 깨끗하지만 좀 올드하고 욕실이 잘 되있는점이 좋았어요 외관에서 보면 너무 이쁜곳이에요하지만 왜 그런지 내부관리는 잘 안 되고 있는 듯해요 중국관광객들도 좀 오는듯하고요위치가 뭐 잠만 자기는 괜찮지만 주변에 뭐 별게 없어서요일부러 갈만한 곳은 아닌거 같아요관리만 잘 해도 좋겠구만요워크숍으로 여러 동료들과 같이 묶었던 곳이었는데 화장실 부족인것 외에는 대체적으로 만족스러웠습니다 밖의 휴식공간도 예뻐서 동료분들이 사진을 많이 찍었답니다관리 잘된 야자수들이 반겨주는 제주풍 리조트에요 콘도형 독채형 통나무형이 있어서 여행 인원에 맞게 선택할 수 있어 좋았고 가정집 같아서 아늑했습니다 가족여행에 좋은곳우리는 이곳에서 주를  년의 오래 된 아기 이 평화롭고 편안하고 평화로운 호텔 위치도 좋고 근처  그리고 멋진 공원이 있습니다 산책을 한 뒤에 리조트 많은 사람들이 영어를 구사하기 때문에 적극 추천합니다저렴한 가격 대비 성능이 좋아서 만족스러웠습니다 하지만 주위에 아무런 편의시설이 없다는 단점이 있습니다 객실 크기에 비해 욕실 크기가 큰 편이었는데 욕실에 샤워부스나 욕조가 따로 없는 점이 좀 아쉬웠습니다외진 곳에 위치해 있어서 관광지 위주의 여행을 하시는 분이라면 동선상 좋은 위치는 아닐지도 모릅니다 하지만 가성비가 좋은 숙소라고 생각합니다 특히 소셜커머스를 통해 저렴하게 예약할 수 있어서 좋았습니다 리조트가 큰 편인데 관리실이 따로 있어서 직원 분으로부터 룸 위치를 친절하게 안내 받을 수 있었습니다 합리적인 가격에 비해 룸 컨디션은 꽤 괜찮았고 마음에 들었습니다제주도에 처음 묵는 이 펜션 주인이 정말 사랑하는 나무 집 켈빈 에게 매우 친절하고 협조적이고 푹신한 강아지 이름  함께    자기는  제주도에서 운전 우리가 우리의  에 입력한 업로드에 케빈 주변의 좋은 펜션 평화로운 집에 있는 것 같은 느낌 저는 이곳을 추천하지만 제가 조언을 자  드라이브 및  의 도움을 쉽게 찾을 수 이 펜션 다시 이곳에 올 것이다 가까운 곳을 원한다면 자연과 도시에서 멀리 떨어져 펜션 하우스는 최고의 선택입니다 가격 이상의 가치가 있다 저렴한 가격에 차를 빌리는 좋은 강력추천합니다 우리를 빌릴 수 있는 라이센스의 경우 만료하고 협박 하지 않았다 필요한 모든 것을 도와주는 주인인 케빈 불러 주는 택시를 타고 우리를 돕는 이 여정에서 음식을 주문하고 할 수 있도록 하여 현지 음식을 가져다 주었습니다 분실 했을 때 그는 전화를 하나만 떨어져 있어 택시를 타고 통신할 수 있습니다 방은 깨끗하고 주방 용품 및 완벽한 주전자 밥솥 가스렌지 등등  또한 구운 빵 으로 아침 식사를 제공 정말 그의 서비스는 우리의 여행을 제주에서 기억에 남는 때문에 저는 제 친구들과 꼭 다시 갈 펜션을 추천 합니다저렴하다고해서 더럽거나 그러지 않았어요  다만 세면용품은 주지않으니 참고하시길 ㅎㅎ 시설은 깔끔한데 입실했을때 씻고 나온 목욕탕 냄새가 아주 살짝 났습니다공항과 가까운 편이나 걸어서 이동하기엔 무리가 있습니다 골목에 있어서 찾기 어려울수 있으며 시설은 가격대비 양호한 편입니다 다만 침구류에서 락스 냄새인지 좀 강한 냄새때문에 머리가 아프고 냉장고의 모터 소리가 수면을 방해합니다 공항 근처에서 짧게 머무르기엔 괜찮습니다저렴한가격에 합리적인 시설입니다 위치가 너무나도 좋았습니다 분정도 걸어나가면 대도로변이 나오네요 서귀포 출장시 버스를타고 다니기가 너무나도 좋았습니다이곳에서 박을 묵었습니다 방 크기는 좋았어요 새로운 현대식 호텔은 아니었지만 좋은 호텔입니다 용도에 맞게 냉장고 치약 함께 제공되는 영화 채널영어 내가 좋아하는 건 샴푸와 샤워 폼 냄새가 정말 좋았습니다   세븐일레븐 편의점이 걸어서 갈 수 있습니다 또한 롯데 면세점 몰까지 도보로 이동할 수 있습니다  예  언급했듯이 주차장을 사용할 수 있지만 주차하고 강 수 근처에 있습니다 도로 좁은 편입니다바닥 난방기가있는 방을 정말 좋아해서 더 많은 정보를 요구할 수 없어서이 호텔에서 머물렀다 우리는  이라는 방의 컨셉을 좋아했습니다 잠에서 깨어나기를 거의 원치 않으므로 매우 편안합니다 전반적으로이 장소는 매우 좋습니다 직원이 정말 도움이되고 위치는 수많은 레스토랑과 편의점에 가까이 있으므로 아무것도 걱정할 필요가 없습니다우리는  개의 밤 동안 여기에서 머물렀다 그리고 나는 장소를 소유하고있는 것처럼 느꼈다 멋지게 꾸며졌고 작은 주방에서 무엇이든 요리 할 수 있습니다 밥솥 난로 후드 전자 레인지 가정용 식기류를 갖추고 있습니다 집은 해변과 공항과 매우 가깝습니다 걱정하지 마라 우리가 잘 잤던 것에 따라 소리는 당신의 잠을 방해하지 않을 것이다 두꺼운 커튼 덕택에 우리는 장소 근처의 해변을 따라 많은 해산물 레스토랑이 있다는 것을 알았지 만 그 중 하나를 시도 할 수 없었다 호스트는 매우 유용하며 잘 의사 소통 할 수 있습니다 이 곳을 전적으로 추천합니다 가치있는 모든 원 하하하    에 하룻밤을 머물렀다 장소를 돌보는 부부는 친절하고 도움이되었습니다 좋고 깨끗한 곳 우리는 냉장고와 요리 시설을 갖춘  인승의 사람을 위해 임대 한 사람입니다 당신이 운전하는 경우 연금의  공원에 있습니다 도보 거리에있는 편리한 상점과 식당함덕해변에서 조금 떨어진곳에 위치하고 있어서 조용해서 좋았음 내부는 깔끔하며 프런트 직원도 친절하였음  다만 객실 방음이 잘안되는 편은 단점 가격대비 훌륭함가족 여행으로 떠난 제주 여행 아이들이 있어서 함께 즐길수 있는 해수욕장인 함덕 해수욕장으로 결정하고 인근 호텔을 검색하던 중 베스트원 호텔을 알게 되었습니다 오픈한지 정말 얼마안된 아마 달 이내인듯 그래서 더 깨끗한 이미지의 호텔 이였습니다  직원분들의 친절함은 성급 호텔 저리가라였죠  인근 놀거리 먹거리도 많고 호텔에서 보이는 오션뷰도 너무 좋구요 두루두루 가성비 최고 최고 인것 같습니다  깨끗하고 친절한 직원들이 있는 호텔에 머물면서 즐거운 가족여행을 하고 왔습니다  참 직원분들에게 물어보면 숨겨진 맛집도 안내해 주신답니다가족들과  간만의  제주도 여행  아이들도 좋아하고  서우봉과 함덕해수욕장이 가까워  스노쿨링도 하고  바베큐장이 있어 고기도 구워먹고 즐거운 여름휴가 였다  호텔 직원들의 친절과 서비스도 좋구 암튼 가을이나 겨울에 한번 더 와야겠다주변이 조용하고 차도 많이 안다녀서 숙박하기 최적이었습니다 화장실도 방마다 있고 방도 깨끗했고 무엇보다 사장님이 넘 친절하셨습니다 조식도 정갈하게 나오고 바다보면서 먹는 조식과 조용한 분위기는 잊지 못할 것 같습니다공항에서 멀지 않은 저렴한 호스텔입니다 방은 깨끗하고 넓었습니다 그룹여행 제주도 추천합니다 근처에 있는 맛있는 음식과 저렴한 한국 음식점 이 조용한 지역에 걸쳐 여름에 아이들의 바다 많은 곳을 방문한다면 차나 택시 예약 권장 더 나은 사용할 수 있을 경우 사용 가능한 주차 공간 이다다섯 명이 묵을 수 있다는 점이 좋았습니다 층침대 개에 일반 싱글 침대 하나 제공됩니다 하지만 떠들고 놀기에는 방음이 전혀 되지 않고 시밖에 되지 않았음에도 시끄럽다고 제지를 받았습니다 방은 깨끗한 편이고 조식도 좋았습니다 조식과 함께 과일이 제공되는점은 아주 좋았습니다 방값은 아주 저렴한 편이고 무료 와이파이는 제공되지만 자주 끊겨 사용이 힘듭니다 위치는 약간 불편한 편이었던것 같습니다마레카펜션 사장님 정말 유쾌하십니다 개의 동이 나란히 있어요 조용한 바닷마을에 자리 잡은 펜션 아늑한 잠자리에요 추천금능리 마을 안쪽에 위치한 펜션이에요 주인 아저씨가 친절해서 기분 좋은 하룻밤 보냈어요 펜션은 총 동 아담한 크기지만 있을 건 다 있어요 겨울에 다녀왔는데 난방 시설 좋네요 방 따듯해요숙소도 너무 깔끔하고 이쁘고 안에 인테리어소품생필품 등이 정말 깨끗하고 퀄리티 있어요 진짜 힐링되는 숙소에요 사장님도 너무 좋으시고 조식이 짱입니다                                             호텔은 멋진 동네에 위치해 있습니다 고속도로에서 가깝습니다  정면 장교는 매우 적응하고있었습니다 그는 아트리움에서 공연을 보러 가야하기 때문에 조기 체크인을 요청했습니다  매우 합리적인 가격으로 도시 전망 유닛을 구할 수 있습니다 방은 매우 넓고 깨끗했고 전혀 불평 할 수 없습니다  매일 아침 맛있는 조식 뷔페가 제공됩니다  이른 아침 항공편을 타야 할 경우에 대비하여 공항과 가까운 호텔이 필요하면 좋은 위치입니다공항에서 가깝고 깔끔한 편 입니다 화장실도 깨끗해서 좋았어요 가성비 좋아요 추천합니다호텔은 그랜드 보이지만 실내는 그다지 의 외부 모습 제공하지 않습니다 목욕 수건 커피나 차를 가진 기본적인 세면도구 사셰의 그러나 이    근처의 카페 거리와 많은 맞은 편우리는  개의 밤 동안 여기에서 머물렀다 그리고 나는 장소를 소유하고있는 것처럼 느꼈다 멋지게 꾸며졌고 작은 주방에서 무엇이든 요리 할 수 있습니다 밥솥 난로 후드 전자 레인지 가정용 식기류를 갖추고 있습니다 집은 해변과 공항과 매우 가깝습니다 걱정하지 마라 우리가 잘 잤던 것에 따라 소리는 당신의 잠을 방해하지 않을 것이다 두꺼운 커튼 덕택에 우리는 장소 근처의 해변을 따라 많은 해산물 레스토랑이 있다는 것을 알았지 만 그 중 하나를 시도 할 수 없었다 호스트는 매우 유용하며 잘 의사 소통 할 수 있습니다 이 곳을 전적으로 추천합니다 가치있는 모든 원 하하하    에 하룻밤을 머물렀다 장소를 돌보는 부부는 친절하고 도움이되었습니다 좋고 깨끗한 곳 우리는 냉장고와 요리 시설을 갖춘  인승의 사람을 위해 임대 한 사람입니다 당신이 운전하는 경우 연금의  공원에 있습니다 도보 거리에있는 편리한 상점과 식당나는 그것이 수영장을 가지고 있기 때문에 여기에서 예약했다 그러나 수영장에 물이 없습니다 방은 깨끗합니다 그러나 그 가격으로 나는 해변에 가까운 다른 장소를 찾을 수 있습니다 객실에는 간이 주방이 있지만 옷장은 없습니다 는 깨끗하게 보였지만 작은 비트는 냄새 나는데 내가 체크인하기 전에 바뀌 었는지 확실하지 않습니다생긴지 얼마 안됬는지 아주 깨끗하고 방도 넓고 가구도 고급지고 만족스런 숙소였네요 박만 한게 아쉽고 부엌도 있어서 다음엔 여유롭게 오래 머물러보고 싶어요 숙소에서 분 거리에 올레길이 있어서 산책하기 좋고 함덕해수욕장까지 천천히 걸어 분정도 걸려요방은 침대를 포함하여 깨끗하고 크고 편안했습니다 욕실은 괜찮 았어 총  인의 넓은 객실 공항 근처에있는 것을 제외하고는 쇼핑을 원할 경우 위치가 좋지 않습니다 우리가 개인 투어에 있었기 때문에 우리는 우리 자신의 밴을 돌아 다니도록했다 이 지역을 돌아 다니는 중에 호텔에 확인하고 싶을 수도 있습니다 아침 식사는 놀랍게도 아주 맛있었습니다 전복 죽은 좋았어층에 있는 커넥티드 룸을 썼는데 방 두 개가 하나로 이어져 있으니 참 좋더라구요 인테리어도 꽤 깔끔하고 괜찮았습니다 비슷한 가격에 훨씬 안좋은 숙소를 경험한 터라 꽤 만족했습니다 공항과도 정말 가깝습니다 비행기소리가 들리기는 하는데 저는 거슬리지는 않았어요  다만 주차장이 층에 있어서 바로 호텔로 들어올 수 없는 점은 불편합니다 층에 출입구가 있지만 막혀있어요 비가 엄청 오는데 눈 앞에 있는 입구를 못쓰니 좀 화가 나더군요 큰 짐이 있어서 들고다닐 수가 없어서 어쩔 수 없이 층 로비 겸 카페 앞에 차를 대고 짐부터 옮기고 다시 차는 주차하러 가야 했습니다 날씨가 좋아도 이동거리가 긴 편이라 불편한데 안좋기까지 하니 더 거슬렸던 기억이 있네요                                                                        친절한 서비스를 제공하십시오 호텔의 위치는 약간 치마입니다 오르막 호텔 입구까지 자신의 수하물을 옮기거나 끌 필요가 있습니다 제한된 조식 뷔페 버터없이 흰 빵을 제공하십시오 샤워 룸의 벽은 화장실의 작은 칸막이에있는 것 외에도 매우 더럽습니다놀랍겠지만 특급이다 나름 제주시쪽에 있어서 공항에서 가깝다 다만 저녁식사를 위해서는 렌터카나 혹은 택시가 필요하다 동급 깨끗하다부엌과 아늑한 객실 해변까지 걸어서 갈 수있는 거리  층에있는 편리한 상점 친절한 프론트 목적지와 돈 가치  도시 지역  공항까지 택시 또는 버스를 타기 쉽습니다  는 돈을 위해 추천 할 것이다직원들이 놀라울 정도로 좋은 그들은 친절하고 도움이 되었습니다 가격이 매우 좋은 방을 보기 해변도 가깝고 바로 길 건너에 있어요  모든 시설이 깨끗하고 당구 테이블 및 탁구 테이블에는 활동 실 단 어디에 안 심각하게 고려 하는 차를 렌트해서 섬을 효과적으로    이 리조트를 추천 합니다좋은 점  방은 괜찮은 이었고 대부분이 깨끗했습니다 작은 부엌이 있었지만 공급이 가능한 모든 접시 컵 포크 칼 냄비와 팬   해변은 정말 아름다웠다 이 호텔에 대해 제도가 있지만   나쁜 점  할 수 없고 고객 서비스 직원들은 매우 무례한 것이 우리를 체크 했습니다 그들은 우리에게 인사도 하지 않았다 같은 느낌이 드는 돈을 내는 투숙객에게 더 부담을 줄일 수 있습니다   또한 우리의 침대 시트와 욕실이 변경되지 않았습니다 하지만 우리는 여러 날 수건은 매일 만 추가할 수 있습니다   입구 문은 매우 지저분 했습니다 호텔 밖에서 본 우중충하고 더러워서 더 나은 사람들이 보면 가끔 청소 해 주어   전반적으로 호텔은 너무 차가운 느낌 불친절하고 온라인으로 사진을 거 하지 마세요 아무도 우리를 우리는 미소도 안았습니다 솔직하게 남겨 두고 기다릴 수 없어 할 수 있습니다 이 호텔은 고급스럽고 아무것도 없습니다 가치가 있지  나는 결코 사소한 정보를 한 호텔 하지만 가격이 얼마나 끔찍한 일을 할 수 없어 집  호텔 나는 슬픈 때는 우리의 돈을 낭비할 수 있는 제주의 진정한 보석과 같은 호텔에 묵었습니다이에 관련된 것을 생각하지 않습니다 호텔 이름을 제외한 초콜릿 큰 객실 단정하고 깨끗합니다 샤워 시설이 좋다  좋은 가격 근처에 많은 상점들이 하나의 버스를 타고 약    공항 객실에서 흡연할 수 있습니다 방이 준비가 되어 있지만 자신의 데스크톱에 한국인 직원들은 영어를 잘 하지 않은 나는 밤 늦게 도착했지만 체크 아웃을 하시는 분이었죠초콜릿 호텔은 꽤 신식 이 개인적으로 생각하는 숨겨진 값이  호텔  합쳐저셔 에 위치해 많은 소매 상점 충분한 주차장에서 호텔이 있고 객실은 깨끗하고 넓은 한국 표준 것이 좋습니다  수건는 제공된 일부 부정적인 포인트가 부족  호텔 게스트는 초콜릿 호텔 간판이 아니 오히려 이곳이 한 해 동안 한글 은 호텔 찾을 수 있습니다 주인에게 영어를 이해하지 못하는 프론트 데스크  만다린  전반적으로 이 호텔은 아주 잘 관리하지 않을 사람들에게 제주시 아침 식사도 고급스럽거나 ㅋ ㅋ ㅋ 제주도 시내와는 조금 멀지만 한적하고 숙소 바로 앞 해변도로가 너무 좋습니다 주인분도 너무 좋으시고 특히 침구류에서 락스 냄새가 나지 않는 점이 정말 좋았습니다 로비에서 간단한 인터넷 이용이 가능하고 객실에서의 바다 풍경이 너무 좋습니다 가격 대비 좋은 숙소입니다협재해수욕장이랑 차로 분 거리에 있었구요  바다도 보이고 정원이 특히 이뻣어요 조용하구요  바베큐장도 객실마다 있더라구요 가격도 저렴하고 잘쉬다 왔어요이것은 통증이 게스트 하우스 제주도 특히 의 처음 제주에서 지원되지 않으며 분이 한국 언어 더 나빴던 것 여기가 여러 이름  리베라 호텔 리베라 호텔 호텔  리베로 호텔 거의 모든 불행 의 게스트 하우스 하지만 결국 제가 체크 인된  하나 그것은 모든 시설을 깜짝 제 방에서 예컨대 엘이디를 티비 컴퓨터는 기능 웹 브라우저가 설치되어 있지만 의양성의 도 미니 바 온수 보일러 는 정수기 예 바로 읽는 해당 및 무료 와이파이 꼭 기대도 안 한 가격에 이 정도의 방 두 원 하룻밤 또한 나는 질 좋은 침대와 베개를 허용  화장실은 괜찮아요 이 욕조에 커튼이 없어서 또한 을 사용하여 화장실 문 넣어서 내 체력 테스트  을 접수 영어 유창하지 않은 저를 화나게 합니다 그래도 갈 때마다 한 그들은 나에게 최고의 골퍼 피가공물과 예를 들어 를 요청했을 때는 주변에 여기서 을 디너 잘 지적 의 지도 근처에 레스토랑이 몇 군데 있습니다  위치로 말할 것 같으면 이 게스트 하우스는 위치는 유명한 쇼핑 거리로부터 멀리 킬로미터 이상 제주도 마누카꿀을 늦은 밤 쇼핑을 코스메틱 제품 식료품과 편리함 등 또한 분 거리에 있어 단지 제주 공항 제주 국제 공항 또한 임대 자동차 는 차고 있다 조식 그러나 제공되지 않습니다  결론적으로 이곳의 매력은 가격과 위치 만약 휴가를 원하는 것이 저렴한 곳이었어요 이 게스트 하우스에서 있습니다건축한지 오래되지 않아 콘도와 기타 시설들이 깨끗하고 좋다 중국 관광객을 대상으로 만든 시설이라 고급자재를 썼다는 얘기도 있다제주도 골프장은 겨울이 피크라고 많은 골퍼들이 찾았다고하네요 페어웨이 상태가 많이 안좋네요 디봇 모래 수리지 이쁜 골프장이었는데ㅋ 캐디언냐의 넘치는 에너지는 좋았구요 월되면 좋아지려나 다른 근무자들 전반적으로 불친절애월 해변과 발코니에서 바로 바다볼 수 있습니다 분 정도 걸으면 해변입니다 멋진 커피와 디저트에 있는 건물 앞에 있는 펜션 오징어 배 불빛 에서 보고 나오 시 놀라운 은 밤 넓은 방 부엌과 주차 전체적으로 좋았지만 불리한 점은 이 오래된 건물도 잘 되어 있습니다 바닥은 더럽고 욕실 바닥은 욕조 및  시피강 에 잔류 전기를 방전시킵니다 이상하게도 이 장식되어 있다  주인은 매일 깨끗한 수건을 준 나는 사람들은 영어를 생각하지 않습니다  가격이 저렴한 해변가에 대해 하지만 같은 캠핑 장 다시 머물지 않을 것이다 우리는 서양식 콘도에 머물 렀는데 퀸 침대  개와 이불  개가있는 방  개가있었습니다 바다 전망을 감상 할 수있는 멋진 안뜰이 있습니다 전체적인 편의 시설은 현대적이지 않지만 수용 가능합니다 이 펜션 호텔은 입니다 성산 일출봉까지 자동차로  시간 마운트 산까지 자동차로  분 한라산 관음사 트레일 헤드 우리가 예약 한 가격으로 나는 그만한 가치가 있다고 생각합니다애월해안도로 가는길 구암에 위치해있어요 직원들은 친절한편인데 시설은 좀 오래되어서 좀 그래요 층에 편의점이 있어 편리했어요 커플여행으로는 좀 별로구 남자끼리 여행에는 저렴한가격에 좋아보여요원격 시골에 위치 조용하고 평범한 객실의 편안함 만이 장점 아침 식사는 호텔 비용에 포함되지 않는  파일에 있는 프로비저닝 빵과 잼 화장실 시설은 별로 사실 우리 방에 에어컨이 작동하지 않는 직원들이 수정을 거절했다 나는 내 친구들이 이 펜션이 호텔을 추천하지 않습니다                                                센트럴 시티 호텔을 예약해야되는데 센트럴 호텔을 예약했습니다  시간밖에 안지났는데 취소가 안되서 묵게됨왜 취소 안해주세요 가격에 맞는 숙박시설입니다 지내기 부담없어요 직원들은 불친절하고 영어를 잘 하지 않는 그는 저에게 왜 나는 불평하지 않는 한 중국 미친  방이 구식이고  사진을 인터넷이 아닌  에어컨이 없는 경우 이고 침대에 직접  객실 청소와 수건  없음호텔이아니라 그냥 모텔인데 인테리어 공사한정도 이네요 가자마자 변기 고장에 방사이즈에 부족한 벽걸이 에어컨 하나가 전부입니다 그리고 명 가는데 일회용품 개에 수건개가 다네요 그리고 예약할필요 없으니 현장에서 하든가 딴데가는게 나아요   암버 호텔에 이는 일명 이비사 호텔이지만 호텔은 말 그대로  암버 중앙에서 분 거리에 위치하고 있어서 이렇게 서로 혼합 하다 또한 이 덜 알려진 중 하나인 것 같습니다 세면도구와 수건도 없었고 차 안 했지만 주전자와 컵 주 성급 호텔이 방은 넓고 침대는 편안했습니다 베개와 이불이 푹신하 방은 깨끗하고 직원들은 매우 도움이 되고 큰 슈퍼마켓과 호텔 건너편에 편의점이 바로  분 거리에 있다 아침 식사는 숙박비에 포함되었는데 가격대비 다양하고 강력한 에어컨은 조용하다 모든 것이 만족스러운 숙박이었습니다그냥 러브 모텔입니다 객실에서는 유쾌하지 않은 냄새가 납니다  공항에서 가까운 점은 장점이기는 하나 다시 여기에 숙박은 안 할 것 같습니다몸도 지지고 풀겸 찜질방가서 자려다 그냥 호텔나우에서 당일예약하고 지냈습니다 주차공간 말도안되게 적구요  그냥 세워놓고 키맡기고올라왔는데 차 이동시키시고 문도 안잠가주셨더라구요 일부로 월풀욕조있는 객실예약했는데 월풀청소를 안하시는건지 청소를 안하시는건지 검은물에 녹물이 난리도 아니네요  샤워기 거는건 망가져있고 세면대 물도 안내려가고  객실 비품 구색맞춘다고 이것저것 갖춰는 놓으셨는데 다 오래되고 정체불명 브랜드라 쓸수도 없었네요                                                                                                                                                 제주도 관광의 특성상 투숙객 대부분이 연박으로 오는데 그 중 반수는 첫날이후 다음날 예약을 취소합니다 하지만 물론 환불은 되지 않습니다 다수가 돈버려가면서 굳이 취소하는데는 많은 사유가 있습니다 가장 최악인건 시설입니다 시설이 극악이구요 정말 아프리카에서 자는거같은 기분을 느낄수있습니다 또한 이 게하의 가장 큰 장점이 게하 내에서 술을 계속 마실수 있고 소등시간이 없다는 점이었는데 그게 불가능해지고 타 게하처럼 소등시간이 생겼습니다 시설과 파티 모두 별로입니다 또한 직원이 사장 포함 세명이나 상주중인데 정리나 설거지를 투숙객에게 시킵니다 다시말하지만 다른데 가세요                                                                                                                                                  정말 술을 좋아하고 술잘 마시는 사람이라면 추천할만합니다  화장실이 불편하고 방이 좀 춥습니다 근데 파티에는 최적화네요처음 가니 방은 없고 잠은 평상에서 잘 거라고 하시더군요 뭔 해괴한 소리인가 했지만 뭐 이렇게 자는 것도 나름 낭만일거라 생각했습니다 낮에 게스트 하우스에서 바라보는 바다 풍경이 워낙 좋았거든요  그러나 밤이 되니 낭만은 개뿔 평상 주변에 테이블 올려놓고 한 명이 막걸리로 술파티 벌이더군요 퍽이나 좋은 스타일이긴 한데 낮 일정에 지치고 피곤한 사람은 어디서 쉬라는건지 평상에 자라면서 평상 주변에서 술파티 벌이면 어쩌라는거죠 ㅋㅋ 억지로 같이 술먹으면서 밤새라 그건가요  네 여긴 그냥 낮은 수준의 유흥업소입니다 누울 수 있고 씻을 수 있고 돈 주면 테이블에 술도 차려주고 간단히 안주도 줍니다 전국에서 온 젊은 남자도 많고 젊은 여자도 많네요 즐기시면 되겠습니다  자세히보니 아예 대놓고 노리고 이 게하를 찾는 사람도 많아보이더라구요 놀러왔으니 엔조이하면 되는거죠 그런거죠  다만 게하 주인장님이 부킹을 해주시진 않습니다 주인장님은 그냥 사파리 구경하듯 구경만 하시는걸 좋아하시더라구요 그래서 매칭성공률은 장담못하겠네요  그렇지만 도심 속의 즉석만남이 지겨우시다면 강추드립니다 화이팅정말 아프리카의 느낌이 나는 곳입니다 촌장님도 자연인이시고 거기에 머무르시는 분들이 굉장히 프리한 마음을 가진 분들이 많더라구요 그래서 인지 저희 일행들도 함께 흐트러질 수 있던 시간이었습니다 청결은 약속드릴 수 없어요 하지만  한번정도는 좋은 추억이 되지 않을까 싶습니다 개의 바다 관경을 예약했지만 체크인시 객실  개가 바다보기가되지 않습니다 예약이 완료된 이유를 주인이 알려줍니다  방은 사진처럼 보이지 않았고 낡은 것 마루망 모든 가구 침대 냉장고 의자 테이블 심지어 가  년 이상 사용되었습니다 화장실 바닥은 어두운 얼룩이 많습니다  우리가 밤에 체크인 할 때 바다 전망이 얼마나 좋은지 몰랐고 방을 만족하지 못하기 때문에 현장에서 취소하고 주인과 협상을하지만   만 회수 할 수 있습니다 환불금 우리는 끝에 다른 호텔을 위해 예약했다  또한 주차 공간이 아주 작아서 약  대의 차를 주차 할 수 있습니다  커플 여행이나 신혼 여행에는 추천하지 않습니다 잠자는 곳을 찾고 있다면 공항 활주로가 옆에있어 소리가 단단하지 않을 수도 있습니다이것은 뼈없는 연금입니다 그것에 대해 호화로운 것은 없습니다 발코니에서 바다의 전경이 보입니다 그것은 매우 편리 공항에 매우 가깝지만 가벼운 침목에 대해 조금 시끄러운 수 있습니다 작은 예산으로 휴가를 보내려한다면 현명한 선택이 될 수 있습니다후회스러운곳 어둡고 더럽고 무섭기까지했음 공항가까와도 가기는 매우 어려움 뒷골목 러브모텔단체패키지 숙소치곤 가격대비 깨끗조용하고 괜찮았음 다만 엘리베이터와 복도에 싸구려향수를 잔뜩뿌려 속이 울렁거림조식은 최악 간단히 먹을 반찬류 준비하여 그곳에서 밥만 가져다먹을것 추천룸컨디션은 가격대비 괜찮다 하지만 중국인들이 많고 복도에서 새벽까지 시간동안 떠들어서 잠을 못잤다 다신 안갈듯절대 가지마세요 서비스 완전 최악인건 둘째치고 총지배인인가몬가 완전 최악  예약건을 직원 실수인지 몬지로 동의도 없이 취소해놓고 분 넘게 아무말없이 그냥 기다려라 기다려라 해놓고   얌전히 기다리고 있었더니 객실이 취소되었으니 딴데로가라 더이상 여행기분 망치기 싫어서 잠깐 인터넷 검색 한 분쯤하고 아무 안내없이 조용히 다른 호텔을 이용했습니다  그런데 약속한 환불건도 처리해주지 않고 주를 기다리다 전화했더니 죄송하다는 말은 한마디도 없고 할만큼 했는데 왜 또 이러냐는 식 ㅡㅡ   서비스직에서 고객이 불편함을 겪으면 일단 죄송하다는 말 불편을 겪게 해서 죄송하다는 말이 먼저인줄로 압니다만  서비스의 기본이 안되있는 총지배인이 있는 이 호텔에서 교욱받은 직원들이 얼마나 좋은 서비스를 제공하겠습니까  절대 가지마세요제주공항에서 분도 안걸리는 호텔이에요 가격도 저렴한 편이고 방도 깔끔해요 오피스텔을 개조해서 만든 호텔이라 방안에 싱크대와 인덕션이 있는데 조리도구가 없어 사용은 못하고 대신 조식이 천원이라 부담없이 먹기 좋아요 조식은 토요코인 스타일 단점으로는 대로변에 위치해있어서 차량 소음이 조금 있습니다아무리 저렴한 호텔이라 하더라도 가구들장롱 탁자이 너무 많이 훼손되어 있고 커튼도 청결하지 못하고 침대주변에 콘센트도 없습니다 이건 손님에 대한 예의가 아니라고 봅니다 잠만 주무실 분은 괜찮으실지도 모릅니다   상태가 난처했습니다 이 거리가 멀다 나는 보았던 사진과 기대 꼭 다른 매우 혼란스러운 만든다 나는 제주도에 첫 날 거기에 있었다면 다른 호텔을 선택했을 것입니다이것은 이름의 호텔입니다  제가 호텔에 머물러 있기로되어 있었기 때문에 제가 여기에서 끝났습니다 제가 북한에 간 적이 있다는 것을 알았고 나를 수용하기를 거부했습니다 그래서 나는 내 여행  주 전에 머무를 곳이없이 남겨 두었고 나의 휴가를 망치지 않기 위해 가능한 한 가까운  해변이었던 어딘가를 선택해야만했다   박 숙박을위한이 호텔은 약   인 것으로 밝혀졌습니다 이는 청구해야하는 것보다 약   정도 더 큰 수치입니다 그것은 이름의 호텔입니다  본질적으로 당신은  초 밖에 안 보이는 거친 발코니에서 매우 피곤한 방을 치르고 있습니다 내가 거기에 있었던 주 동안 방이 비어있는 것 이외의 청소를하지 않고 있었다  그들은 침대를 만들거나 욕실을 깨끗하게하지 않았다 그것은 꽤 진절머리 나 매일 해변으로 가고있을 때 모래가 방으로 들어가서 침대에 들어가서 하나의 거대한 모래 구덩이에 살고있는 것과 같았습니다 침대에 관해서는 내가 뒤에서 매듭을 정리하기 위해 영국에서 돌아온 이래로 두 번의 깊은 티슈 마사지를 받아야한다는 것은 너무 불편했습니다  호텔에는 시설이 거의 없습니다 리셉션에 간신히 유인합니다 도착시 공항 교통편을 제공 받기를 거절하고 공항까지가는 길에 마지 못해 택시를 타게되고 식사를하거나 마시고 싶을 때도 있습니다 아침 식사를위한 무엇이라도 그 다음 에 카페에  분을 걸어야한다 나는 머무르고있을 예정였던 장소의 역설적이었다  나는 호텔에 나의 체재를 파멸시키지 않으려 고 노력했다 이런 종류의 사건을 경험 한 적이 없어서 어디서부터 시작해야할지 모르겠습니다  나는 기대했던 것보다 일찍 도착했고  호텔에 도착했다   로비 또는 프론트 데스크에 아무도 없습니다 그래서 호텔에 전화를 걸었고 약  회 재판을 마친 후 전화로 누군가를 얻습니다   즉시 그의 반응은 매우 무례하고 위협적입니다 그의 태도는 왜 나를 새벽 시에 부르니 그는 오전 시에 호텔에 몸가짐이 없다고 말합니다 나는 그러한 예기치 않은 발언에 대답 할 수 없었다   일찍 체크인 할 수 있는지 물었다 그의 반응은 더 이상의 논평없이 매우 간단했다 나는 그에게 내가 일찍 방을 얻을 수 있는지에 관해 물었다 그리고 나는 그것을 지불하게 행복하다 그의 반응은 다시 아니오였다 나는 내 가방을 버릴 수 있는지 물었다 그의 반응은 로비에 남겨 두었습니다 나는 호텔 프론트 데스크에 아무도 없을 때 로비에 내 가방을 어떻게 두어도되는지 물었다 그의 반응은 침묵이었다 서핑을하기 위해 친구들을 만나기로되어 있었기 때문에 나는 그에게 내가 갈 곳이 있는지 물었다 그의 대답은 아니오였다 그 다음 나는 그에게 내가 당신의 옷을 갈아 입을 수있는 욕실이 없다고 물었다 그의 반응은  왜 나에게 이것을 묻고있는거야 당신은 내가 당신의 얼굴을보고 싶을 때 로비에서 기다립니다   그 다음 그는 정말로 큰 또 다른 사람과 로비에 온다 그 사람이 바로 그 지역 갱스터라고 말할 수 있습니다 그는 술 냄새를 맡고 담배를 피우며 왜 당신은 그런이 호텔은 그 중에서 서쪽으로 협재 극다적인 에 위치 때문에 좋은 비치 가장 인기 있는 부분만   분 걸으면 해변  이 호텔의 좋은 점  바로 에 있는 해변으로 가는 길 정말 좋은 위치 직원은 친절하고 도움이 됩니다 요  에 편의점이 나란히 호텔 발코니에서는 오른 편으로 매우  해변의 전망이 매우 좋은 샤워실도 좋고 수압도 좋습니다   나쁜 점 호텔은 오래된  호텔을 시작   침대와 베개는 나쁜  도 아주 오래된이 장소는 경영이 어려웠고 관리가 부족했습니다 마루는 끈적 거리고 더러웠다 문이 잠겨 있지 않았습니다 머물러 있기가 너무 불편했습니다 무료 아침 식사가 제공되지 않았습니다 유일한 좋은 점은 대중 교통에 가깝습니다내 인생의 더 나쁜 밤    모든 것이 잘못되었습니다 화장실 냄새가 좋지 않습니다 심지어 객실의 냄새가 좋지 않습니다 더러운 부엌과 객실 불친절한 주인과 직원 오전  시까 지 밤에 야간에 노이 스를 만드는 사람들    발을 안에 넣지 마십시오   운영 내 평생 동안 최악의 숙박 방은 더러웠다 그리고 나는 영빈관의 나머지에 대해 말하지 않는다   인도 사람들은 밤새도록 이야기하고 음악을 퍼팅했습니다 악몽 이었어      모기 어디서나 방에 주인은 전혀 친절하지 않았습니다         이 장소를 피해 라       나는 그냥 낮은 가격과 위치공항 근처 이곳을 선택했어요 가격이 조금 더 여러 가지를 고려해 낮춰 한다고 생각합니다 침대는 단단히 설치되지 않았습니다 더 소음  침대 기숙사 화장실과 충분히 자주 더러움 냄새가 나는 팬 작동 안 확인했습니다 전체적으로 시설이 잘 관리되는 오래되어 보였어요 시설 관리자 또는 소유자가 전문적인 그들은 음료와 함께 일부 대화 친구또는 손님들은 늦은 밤 만든 하드 때문에 밤에 잠을 락커 없습니다 좋은 점 전체적인 분위기는 편안하고 엄격한 규칙이 없습니다 마사지 기계무료 버스를 타고 공항에서 취하고 편리한 위치 아이러니하게도 좋은 고객들은 이곳에서 만났습니다 매우 친절하고 재미있는 손님이   나를 이곳에 다시 요청할 경우 그렇지 않습니다 차라리 대안을 추가  또는 달러를 지불합니다이 호스텔은 매우 싸고 좋은 위치에 있지만 내가 내부를 보았을 때 그것은 단지 작았습니다   내가 본 것 중 아주 작은 호스텔 나쁜 냄새 나쁜 화장실 주차장 없음 괜찮으 시다면 여기 머물 수 있습니다'
</div>
<br>
<br> 
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 전체 말뭉치(corpus)에서 명사 형태소 추출</span></span><br><span class="line">nouns = okt.nouns(apply_regular_expression(corpus))</span><br><span class="line">print(nouns)</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow: scroll;">
    ['여행', '집중', '휴식', '제공', '호텔', '위치', '선정', '또한', '청소', '청결', '상태', '일', '이상', '연', '침대', '이불', '등', '침구', '류', '교체', '및', '어메니티', '보강', '베스트', '웨스턴', '회원', '경우', '객실', '뷰', '층수', '요청', '적극', '반영', '지인', '소개', '온', '호텔', '거', '처음', '당황', '세면', '도구', '잠옷', '필수', '그것', '방', '눈', '정도', '호텔', '처음', '것', '다음', '제주도', '꼭', '여기', '박만', '저녁', '맥주', '한잔', '렌트', '안', '뚜벅', '호텔', '바로', '앞', '버스', '정류', '시', '도착', '가방', '일찍', '정비', '방이', '바로', '입실', '룸', '업그레이드', '직원', '정말', '바다', '전망', '영', '전일', '함덕', '대명', '콘도', '곳', '실내', '분위기', '바다', '전망', '훨', '손님', '날', '가장', '바다', '방', '배치', '대해', '바로', '대응', '써비스', '조식', '부분', '신경', '아주', '특급', '호텔', '트랜디', '대해', '고민', '흔적', '여름', '꼭', '수영장', '사용', '보고', '엄마', '둘', '여행', '가격', '대비', '위치', '주위', '마트', '식당', '시장', '앞', '바다', '더', '또', '방문', '의사', '딸', '둘', '동안', '제주', '여행', '줌', '박', '숙소', '정해진', '제주', '휘슬', '락', '호텔', '처음', '공항', '곳', '생각', '시설', '직원', '모두', '친절', '모드', '여행', '마지막', '마무리', '테라스', '전경', '인근', '재래시장', '야시장', '이용도', '다음', '또', '이용', '제주', '여행', '일차', '호텔', '휘슬락', '체크', '뷰', '기', '주변', '여친', '추억', '가성', '비', '분위기', '추천', '후회', '예전', '그랜드', '호텔', '일', '때', '저희', '아이', '돌잔치', '여기', '다정', '했었더랬', '제주도', '아주', '전통', '호텔', '그', '후', '메종', '글래드', '업그레이드', '위치', '시설', '서비스', '매우', '합리', '가격', '대의', '호텔', '저희', '명절', '제주도', '늘', '글래드', '숙박', '층', '아티', '제', '백미', '여기', '커피', '베이커리', '저희', '가족', '플러스', '지금', '여행', '호텔', '이용', '메종', '글래드', '가장', '우선', '공항', '접근성', '쇼핑', '조식', '만족도', '최고', '무엇', '직원', '기억', '앞', '우리', '가족', '제주', '땐', '메종', '찾기', '엄마', '첫', '제주도', '여행', '침구', '직원', '쉬', '교통', '여행', '볼', '수', '도', '층', '이틀', '정원', '곳', '바로', '보', '거기', '수영장', '개', '겨울', '여름', '꼭', '여기', '추천', '친구', '제주도', '놀러와', '투숙', '객실', '뷰', '야외', '수영장', '방향', '야간', '조명', '체크', '그', '순간', '맨', '대접', '실명', '거론', '프론트', '문', '이름', '기억', '안나', '체크', '기분', '모습', '여행', '첫날', '스타트', '다음', '투숙', '경우', '또', '다시', '이용', '차', '아이', '최고', '선물', '카운터', '안내', '이용', '다정', '디너', '최고', '기회', '여름', '또', '직원', '눈', '정도', '친절', '미니바', '무료', '굿', '시설', '최근', '연', '청결', '주변', '관광지', '곳', '제주', '여행', '숙고', '소', '강추', '내', '숙', '위치', '야경', '뷰', '조식', '일부러', '저녁', '안', '일찍', '일어나서', '동네', '바퀴', '층', '먹방', '신라', '호텔', '퀄리티', '제주', '위치', '매우', '호텔', '조식', '추천', '제주', '호텔', '비', '수', '기분', '호텔', '모녀', '여행', '중', '제주시', '박', '위해', '선택', '호텔', '우선', '공항', '오픈', '얼', '안', '것', '예약', '호텔', '대로', '변', '접근성', '호텔', '분', '거리', '더군다나', '공항', '셔틀버스', '운행', '데스크', '직원', '매우', '차안', '분도', '첫', '인상', '룸', '트윈', '생각', '방', '퀸', '사이즈', '개', '만족', '스타', '여행', '중', '옷', '조식', '가짓수', '것', '느낌', '화장실', '조명', '내부', '인테리어', '그', '외', '호텔', '분위기', '매우', '질적', '이건', '개인', '취향', '것', '어메니티', '구비', '향', '부분', '여행', '시', '산', '과일', '나이프', '포크', '부탁', '서비스', '차', '커피', '준비', '부분', '부분', '특급', '호텔', '표방', '것', '부분', '모텔', '것', '결론', '가성', '비', '훌륭', '접근성', '훌륭', '청결', '엄마', '시간', '슈', '페리', '킹룸', '하루', '숙박', '후기', '여행', '마지막', '날', '숙박', '지은지', '얼마', '안', '느낌', '새', '건물', '건물', '안', '인테리어', '약간', '유럽', '스타일', '그림', '조각', '생각', '복도', '객실', '그림', '전시', '전부', '카펫', '객실', '등급', '다른', '호텔', '침대', '두', '명', '이서', '자기', '정도', '정말', '비', '날', '비', '조금', '객실', '내', '스타', '외투', '완전', '만족', '진짜', '스타', '강추', '무료', '셔틀', '이용', '공항', '분', '정도', '습', '셔틀', '운행', '시간', '미리', '예약', '이용', '수', '다음', '제주도', '또', '이용', '호텔', '시티', '뷰', '오름', '볼', '수', '무엇', '교통', '다만', '바로', '도로', '가인', '관계', '밤', '차량', '소리', '다소', '신경', '방문', '방도', '직원', '모두', '층', '편의점', '칫솔', '재', '방문', '의사', '동계', '훈련', '제주', '훈련', '동안', '라마', '호텔', '가족', '연인', '것', '조식', '전체', '사진', '첨부', '엘리베이터', '곳', '쪽', '빔', '실시간', '비행기', '시간', '공항', '택시', '미만', '택시', '비', '이동', '가능', '침구', '및', '룸', '상태', '최상', '욕실', '슬리퍼', '위생', '상태', '염려', '카펫', '염려', '설날', '조식', '떡국', '당황', '함', '떡국', '공항', '려고', '현장', '결재', '황스', '려운', '중국', '만두', '종류', '별로', '구만', '현장', '결재', '조식', '일', '메뉴', '답변', '첫', '도착', '제일', '첫', '주차', '걱정', '요', '할아버지', '안심', '객실', '컨디션', '최고', '조식', '문어', '처리', '최고', '닺', '회사', '출장', '차', '시설', '직원', '서울', '때', '이용', '다음', '또', '프론트', '방도', '간혹', '이벤트', '업그레이드', '해주시', '수영장', '및', '부대', '시설', '최고', '항상', '제주도', '때', '롯데', '롯데', '시티', '호텔', '제주', '비지니스', '호텔', '가족', '여행객', '손색', '객실', '욕조', '겸비', '사계절', '수풀', '무료', '이용', '층', '야외', '수영장', '중문', '표선등', '원거리', '여행지', '복귀', '후', '밤', '시', '수영장', '이용', '또한', '시내', '유명', '식당', '등', '방문', '아주', '일단', '공항', '분', '정도', '위치', '주차장', '지하', '층', '공간', '주차', '수', '체크', '때', '직원', '응대', '기분', '체크', '수', '다른', '문의사항', '신지', '감동', '습', '객실', '역시', '롯데', '생각', '정도', '풀', '장도', '이용', '수', '더', '옆', '락타', '룸', '샤워', '마련', '코인', '세탁실', '정말', '이용', '오션', '뷰', '멀리', '바다', '야경', '남자친구', '첫', '여행', '덕분', '여행', '습', '다음', '제주', '꼭', '방문', '이번', '제주도', '여행', '때', '롯데', '시티', '제주', '박', '숙박', '체크', '때', '프런트', '직원', '객실', '배정', '공항', '비행기', '이착륙', '객실', '객실', '클리닝', '인테리어', '호텔', '숙박', '근무', '청소', '아주머니', '인사', '기분', '다음', '번', '재', '방문', '코로나', '사태', '투숙', '직원', '투숙', '다만', '객', '실내', '노화', '곳', '보', '벽지', '주름', '지고', '욕실', '타일', '가구', '코너', '곳곳이', '주변', '중국', '관광객', '항상', '곳', '위치', '인지', '사람', '늘', '북적', '감', '전반', '객실', '관리', '상태', '및', '청소', '상태', '편이', '직원', '피드백', '역시', '편입', '니', '도시', '내부', '관광', '특화', '지역', '위치', '전반', '근처', '카페', '및', '식당', '가기', '전반', '호텔', '및', '위치', '제주', '고유', '특색', '것', '하루', '이틀', '제주', '도시', '스테이', '시', '선택', '제주', '선택', '스테이', '위치', '뭐', '매우', '신라', '스테이', '가도', '느낌', '더', '것', '후기', '스타벅스', '가장', '번화가', '전', '아침', '청소', '소리', '커서', '방음', '공항', '시설', '또한', '프론트', '직원', '주변', '먹거리', '단점', '라면', '주차장', '것', '오심', '이중', '주차', '역시', '미리', '미리', '예약', '꼭', '트윈', '항상', '혼자', '침대', '개', '방음', '겐찮은듯', '조식', '다그', '도일', '층', '커피', '함', '께빵', '돈', '중국인', '관광객', '괘', '공항', '무료', '셔틀', '타고', '호텔', '객실', '눈앞', '바다', '다른', '관광지', '가지', '힐링', '호텔', '시설', '부분', '객실', '휴식', '테라스', '바로', '바다', '바다', '식당', '조식', '시간', '룸', '욕실', '물', '듯', '물', '어메니티', '조금', '조식', '수영장', '피트니스', '패키지', '이용', '쉬', '위치', '전망', '가족', '공간', '화장실', '공간', '미닫이', '조금', '로비', '비롯', '모든', '직원', '수영장', '비롯', '각종', '부대', '시설', '온', '물건', '아침식사', '때', '바다', '뷰', '밥맛', '더', '로비', '피아노', '연주', '아이', '층', '침대', '아주', '방도', '직원', '수영장', '이용', '시내', '로비', '피아노', '연주', '여행', '습', '다룸', '타입', '기억', '안나', '패밀리', '실', '거실', '침대', '방', '한실', '방', '침대', '생각', '바다', '뷰', '시장', '서부', '수산시장', '새벽', '경매', '구경', '조식', '추가', '아침', '어차피', '현재', '호텔', '묵고', '인터넷', '예약', '때', '뷰', '지정', '수', '지정', '안해', '오션', '뷰', '프런터', '문의', '온', '영화', '하', '문의', '시스템', '티브이', '채널', '몇개', '콘센트', '플러그', '몇개', '와이프', '폰', '충전', '것', '것', '충전', '결정', '낼', '아침', '콜', '택시', '달라', '것', '지금', '낼', '아침', '다시', '처음', '경험', '호텔', '문의', '것', '방이', '거', '전', '혀', '장점', '인생', '최악', '호텔', '전통', '시장', '및', '시내', '중심', '주변', '관광', '바닷가', '위치', '전망', '호텔', '비교', '시설', '직원', '편임', '제주', '공항', '박', '방도', '직원', '친절', '방이', '다음', '한번', '더', '예정', '여름', '휴가', '때', '가족', '코너', '스위트룸', '공항', '근처', '시장', '오션', '뷰', '유리창', '코너', '스', '위트', '캠핑', '패키지', '캠핑', '테이블', '세트', '텐트', '아이', '것', '저희', '침대', '방', '에어컨', '구비', '작은방', '에어컨', '거실', '텐트', '매트', '더', '조식', '바다', '뷰', '자리', '조식', '조금', '일찍', '것', '저희', '때', '옆', '탑동', '공원', '쪽', '프리', '마켓', '공연', '매일', '저녁', '이틀', '동안', '구경', '시장', '식사', '쇼핑', '등', '이', '호텔', '이용', '관덕정', '정문', '앞', '위치', '시장', '도보', '분', '소요', '호텔', '편', '해장국', '집', '이용', '수', '가격', '대비', '시설', '직원', '공항', '시장', '시설', '좀', '동문', '시장', '서문시장', '도보', '분', '거리', '공항', '제주', '목관', '맞은편', '위치', '슬슬', '해', '우선', '호텔', '위치', '공항', '방도', '업그레이드', '별관', '본관', '관덕정', '바로', '맞은편', '앞', '위치', '동문', '시장', '갈수', '건물', '조금', '안', '최신', '시설', '그린', '환경', '때문', '욕실', '어메니티', '별도', '준비', '조식', '갠', '공항', '분', '정도', '대중교통', '이동', '곳', '근처', '시장', '등', '재래시장', '회', '구매', '호텔', '심플', '직원', '매우', '욕실', '비품', '별도', '구매', '트윈침대', '스탠다드', '트윈', '층', '높이', '욕조', '점', '한라산', '욕조', '노곤', '노곤', '몸', '시장', '버스', '터미널', '직원', '온돌룸', '공항', '저녁', '차', '렌트', '가기', '단점', '세면대', '물이', '것', '치약', '칫솔', '제공', '것임', '생수', '병', '무료', '제공', '다음', '재', '방문', '의사', '공항', '환승', '곧바로', '수', '동광양', '정류장', '호텔', '번화가', '시청', '근처', '객실', '비지니스', '작', '객실', '욕조', '몸', '수', '운', '바다', '객실', '투숙', '여기', '바다', '줄', '터', '시청', '근처', '위치', '교통', '이용', '뷰', '객실', '스텝', '다시', '이용', '곳', '위치', '시설', '주차장', '조금', '협소하', '세면', '도구', '칫솔', '정말', '세면', '도구', '칫솔', '치약', '샤워', '때', '거품', '타월', '화장', '대가', '호텔', '거울', '호텔', '화장', '곳', '객실', '쇼파', '최고', '조합', '조식', '금액', '대비', '아주', '호텔', '내', '주차공간', '바로', '옆', '공터', '태풍', '숙박', '직원', '룸', '컨디션', '지하', '주차장', '공간', '개층', '조금', '약간', '점', '라면', '호텔', '주변', '놀', '거리', '거리', '마지막', '날', '오후', '한시', '비행기', '공항', '근처', '호텔', '사진', '보고', '예약', '결론', '가성', '비', '짱', '가격', '공항', '시장', '주차', '무엇', '사우나', '부모님', '할머니', '모시', '제주도', '계획', '박', '일로', '시간', '좀', '빠듯해', '숙소', '어디', '정', '고민', '리뷰', '보고', '이', '호텔', '선택', '우선', '공항', '길가', '자리', '찾기', '차', '주차', '골목길', '점', '조금', '숙소', '때', '생각', '뷰', '비행기', '이륙', '착륙', '모습', '보이', '그냥', '일반', '시내', '모습', '대욕', '헬스장', '등', '부대', '시설', '무료', '가격', '대비', '저희', '부모님', '할머니', '다시', '제주도', '가면', '숙소', '고려', '생각', '정도', '위치', '공항', '주위', '편의점', '식당', '등', '다음', '기회', '다시', '선택', '수', '정도', '위치', '공항', '렌터카', '분', '정도', '거리', '주차장', '건물', '입구', '반대쪽', '차량', '주차', '위치', '한정', '단체', '손님', '이용', '것', '체크', '시', '층', '인', '더블', '침대', '침대', '제외', '여유', '공간', '전망', '길', '반대편', '다른', '호텔', '건물', '한라산', '보이', '도심', '임', '불구', '방', '소음', '거의', '주변', '식당', '점', '세명', '트리플', '룸', '도착', '때', '로비', '중국인', '완전', '단점', '숙박', '전날', '저녁', '예약', '방이', '남아', '예약', '지은지', '별로', '듯', '투숙', '자체', '계획', '가지', '게', '지인', '그것', '바로', '당일', '날', '정보', '이틀', '잔', '거', '조식', '아이', '간', '거', '아침', '그냥', '햇반', '지인', '장조림', '아이', '전자', '레인지', '식당', '가야', '직원', '부탁', '달라', '함', '뭐', '주변', '별로', '주차', '헬', '지하', '주차장', '중', '가격', '인지', '중국인', '또', '세미나', '걸', '온', '한국인', '말', '그대로', '잠', '근처', '나름', '제주', '번화가', '유명', '제과점', '공항', '버스', '정거장', '택시', '비지니스', '출장', '차', '현재', '박', '투숙', '모기', '제', '만해', '마리', '가량', '방안', '에프킬라', '비치', '계속', '뿌리', '잡고', '방안', '찬장', '화장실', '천장', '곳곳', '모기', '호텔', '측은', '벌레', '관리', '별도', '신경', '제주', '공항', '기본', '요금', '거리', '도로', '수', '호텔', '주차장', '호텔', '앞', '도로', '건너편', '체크', '때', '차', '번호', '무료', '주차', '수', '객실', '아주', '청소', '조식', '샐러드', '음식', '구성', '전복죽', '정말', '직원', '우선', '정말', '저번', '때', '핸드폰', '충전기', '대응', '제주', '월', '지금', '방문', '부모님', '강', '비지니스', '출장', '공항', '교통', '다소', '불편', '피트니스', '센터', '공사', '숙면', '침대', '다소', '가성', '비', '갑', '조식', '무난', '직원', '삶', '노력', '지불', '비용', '더', '것', '그', '수', '몇', '경험', '스위트룸', '경험', '공간', '로맨틱', '분위기', '독립', '북유럽', '욕조', '욕실', '룸', '통', '유리', '커튼', '바깥', '여', '묘', '느낌', '제일', '공간', '또', '다른', '공간', '설치', '모던', '유럽', '의', '세면대', '입', '샤워', '룸', '비데', '공간', '효율', '쇼파', '폭', '침대', '볼', '수', '인치', '삼성', '다음', '날', '눈', '제주', '만끽', '수', '편안함', '제공', '호텔', '다음', '제주', '여정', '꼭', '예정', '일단', '시설', '직원', '모두', '조식', '퀄리티', '저희', '둘', '바닥', '카펫', '좀', '비지니스', '목적', '커플', '끼리', '제주', '공항', '쭉', '직진', '운전', '숙소', '주차장', '협소하', '인근', '공영', '주차장', '곳', '주차', '소음', '옆', '애기', '투숙', '객', '소음', '무선인터넷', '근처', '편의점', '것', '추가', '구매', '제주도', '가족', '여행', '갑자기', '서전', '날', '항공', '예약', '급', '숙소', '정', '다가', '첫날', '저녁', '비행기', '도착', '공항', '곳', '가급', '결제', '알', '우리', '가족', '자기', '은방', '예약', '해', '상황', '우리', '상황', '아시', '룸', '업', '고트', '침대', '생각', '지도', '호텔', '직원', '세심', '함', '호텔', '화장실', '생각', '것', '맘', '아침', '공시', '애', '시작', '계속', '추억', '비행기', '비행기', '잠', '생각', '공항', '이벤트', '맥주잔', '무료', '쿠폰', '일도', '화장실', '공항', '근처', '비행기', '시간', '정말', '급', '호텔', '직원', '호텔', '전체', '분위기', '급', '객실', '크기', '룸서비스', '직원', '서비스', '정신', '모두', '추억', '공항', '비행기', '시간', '이동', '아주', '시설', '성', '평가', '생각', '점', '호텔', '편의', '시설', '점', '요즘', '호텔', '숙박', '여러', '편의', '시설', '가지', '이', '호텔', '시설', '직언', '분', '개인', '스탠다드', '패밀리', '더', '블룸', '예약', '도착', '변기', '물질', '그대로', '얘기', '직원', '수건', '환불', '월일', '오션', '뷰', '방향', '패밀리', '트윈', '이용', '함', '숙박', '료', '공항', '거리', '숙소', '공간', '것', '커튼', '푸른', '바다', '바로', '눈앞', '창', '파도', '소리', '철썩', '거리', '공간', '아침', '해', '풍경', '밖', '방안', '바로', '옆', '생선회', '식당', '바다', '추억', '기억', '장소', '생각', '놀이', '공원', '때문', '걱정', '디너', '메뉴', '가격', '맛', '양도', '돼지', '전골', '매운탕', '밖', '여기', '다만', '조식', '형편', '제주', '시내', '브런치', '카페', '거기', '요가', '성비', '정말', '호텔', '위치', '시설', '호텔', '뒤쪽', '가면', '맛집', '쭈욱', '식사', '앞', '바다', '뷰', '수영장', '작', '정도', '객실', '객실', '직원', '위치', '등', '가성', '비', '갑인', '호텔', '주차장', '이', '렌트', '호텔', '뒤쪽', '제주', '드타', '운', '지역', '먹거리', '쇼핑', '등', '안', '방파제', '의', '횟집', '타운', '은', '해산물', '제주', '가장', '규모', '재래시장', '시장', '가까이', '바다', '전망', '호텔', '가격', '대비', '매우', '곳', '인근', '회', '센터', '회', '객실', '바다', '맛', '공항', '도', '재', '방문', '의사', '제주시', '인근', '위치', '오션', '뷰', '룸', '경우', '탁', '전망', '수', '아침', '조식', '꼭', '메뉴', '어르신', '수', '구성', '공항', '곳', '추천', '시설', '뷰', '아주', '가격', '대비', '오션', '뷰', '화장실', '깨끗', '생각', '조식', '주차', '밤', '자리', '직원', '대신', '단점', '수영장', '작고', '시', '수영', '수', '아쉬움', '체크', '인도', '무엇', '방이', '커서', '침대', '개', '인', '가족', '야외', '수영장', '물', '소독약', '덜', '건', '조금', '아이', '스비', '휴가', '힐링', '위해', '홀로', '제주도', '구경', '한라산', '등정후', '칼', '호텔', '하루', '숙박', '여행', '마지막', '날', '호텔', '수영장', '헬스장', '이용', '계획', '서울', '부터', '준비', '아침', '조식', '혹시', '것', '확인', '차', '전화', '통해', '휘트니', '스', '전화', '헬스장', '운동복', '혹시', '수영모', '등', '제', '수영모', '고오', '바람', '다시', '전화', '혹시', '수영모', '대여', '구매', '여직원', '분', '무시', '말투', '제', '원래', '회원', '제로', '운영', '곳', '일반인', '입장', '그', '회원', '모두', '수영모', '투숙', '객', '이용', '일반인', '원래', '입장', '투숙', '객', '선심', '서비스', '말투', '필요', '말', '순간', '무시', '기분', '바로', '전화', '원래', '여기', '기전', '회원', '제', '투숙', '객', '추가', '비용', '이용', '이용', '대뜸', '말', '일반인', '투숙', '객', '무시', '매우', '화가', '바로', '칼', '호텔', '고객', '소리', '컴', '플레인', '더', '이상', '시경', '바로', '체크', '아웃', '서울', '신라', '호텔', '하야', '트', '메리어트', '등', '특급', '호텔', '여럿', '이용', '회원', '여', '일반', '투숙', '객', '무시', '칼', '호텔', '급', '이어도', '가격', '이용', '직원', '수준', '가격', '수준', '이군', '매우', '실망', '하루', '종일', '준', '급', '호텔', '서비스', '리셉션', '컨시어', '태도', '룸', '컨디션', '정말', '최악', '체크', '고객', '체크', '시', '리셉션', '것', '룸', '안', '것', '무료', '유료', '사고', '칠', '학생', '걱정', '선생님', '헬스장', '어딘', '사우나', '이용', '수', '것', '기본', '살', '사항', '고객', '무슨', '거지', '입', '룸', '리빙룸', '방도', '하나요', '트윈룸', '두', '개', '방', '무려', '게재', '사진', '실물', '방', '차이', '실화', '파우더', '룸', '벽', '곰팡이', '자국', '작동', '골드스타', '냉장고', '방', '무려', '로', '예약', '컨디션', '절대', '예약', '전반', '직원', '태도', '조식', '레스토랑', '직원', '왜', '자꾸', '정색', '합', '커피', '수', '정색', '왜', '합', '물', '바닥', '살짝', '서버', '분', '휙', '데리', '가신', '다른', '서버', '뭐', '나머지', '물기', '손님', '직접', '해', '체계', '룰', '엉망', '손님', '응대', '급', '요즘', '소규모', '호텔', '태도', '안', '다시', '일', '예약', '저', '속', '분', '시기', '마음', '위치', '것', '가격', '리트', '것', '이름', '급', '걸', '서비스', '도', '여행', '출장', '번', '기본', '안', '공항', '거리', '객실', '생각', '주위', '마지막', '날', '방이', '라그', '마음', '조식', '기대', '실내수영장', '수영', '정도', '수온', '마음', '하루', '가기', '거', '스', '위트', '비수', '상대', '가격', '객실', '약간', '노후', '조식', '위치', '공항', '아주', '멀리', '정가', '무리', '할인', '행사', '정도', '가능', '참고', '누', '조식', '포함', '마일리지', '대한항공', '마일리지', '스위트룸', '하룻밤', '확실', '연식', '요즘', '호텔', '시설', '느낌', '임', '스위트룸', '요즘', '고급', '호텔', '일반', '룸', '급', '호텔', '서비스', '음식', '원가', '조금', '할인', '특', '때', '추천', '함', '오션', '뷰', '층', '숙박', '함덕', '서우', '해수욕장', '한눈', '창문', '창문', '이상', '뷰', '겨울철', '통', '유리', '때문', '온도', '리기', '위해', '난', '방기', '동시', '온', '방식', '대략', '도정', '숙소', '화장실', '샤워', '부스', '다소', '방음', '옆방', '티비', '소리', '취침', '위해', '옆방', '티비', '소리', '티비', '후', '수', '초등학생', '아이', '박', '일', '청소', '상태', '양호', '위치', '전반', '다만', '조식', '가짓수', '첫날', '일찍', '도착', '근처', '한식당', '아침', '가격', '맛', '양도', '호텔', '조식', '별로', '근처', '한식당', '아침', '것', '차라리', '호텔', '조식', '시설', '무엇', '바다', '뷰', '정말', '최고', '이', '호텔', '반드시', '꼭', '바다', '객실', '다만', '방', '은', '조금', '편이', '옆방', '거리', '소리', '문', '쾅', '좀', '크게', '층', '씨유', '편의점', '주변', '델문', '카페나', '맛집', '함덕', '해수욕장', '바로', '앞', '위치', '해수욕', '최적', '위치', '객실', '디럭스', '시티', '뷰', '오션', '뷰', '디럭스', '시티', '뷰', '발코니', '오션', '뷰', '함덕', '바다', '보', '룸', '편이', '직원', '최적', '위치', '객실', '전망', '모로', '추천', '층', '오션', '뷰', '트윈룸입니', '선착순', '업그레이드', '오션', '뷰', '객실', '상태', '어메니티', '청결', '모두', '무엇', '뷰', '예술', '직원', '응대', '기분', '호텔', '로비', '샤워', '시설', '물놀이', '후', '모래', '층', '부대', '시설', '카페', '레스토랑', '음식', '편의점', '가족', '친구', '커플', '여행', '모두', '추천', '피크', '시즌', '살짝', '간', '월', '주', '호텔', '주변', '날씨', '적', '선선', '물놀이', '수온', '위치', '직원', '근래', '리뷰', '보고', '걱정', '괜', '걱정', '건물', '자체', '느낌', '청소', '상태', '침대', '상태', '주차', '편리', '갈수', '맛집', '코르', '사태', '비수', '기지', '가성', '비', '년', '때', '다시', '방문', '객실', '상태', '커튼', '곰팡이', '교체', '요청', '방', '우리', '뷰', '사양', '적', '호텔', '주체', '개', '셀', '교회', '절반', '정도', '인수', '듯', '보임', '방', '더', '아트', '스테이', '셀', '이름', '우리', '더', '아트', '스테이', '것', '추정', '방', '이용', '곳', '최악', '시설', '직원', '프로', '페셔', '인력', '호텔', '이어도', '매트', '처음', '봄', '매트리스', '그냥', '나무', '판', '허리', '줄', '안감', '안감', '객실', '무난', '함덕', '해변', '워낙', '가시', '함덕', '쪽', '호텔', '가격', '대비', '이용', '제주도', '처음', '방문', '다른', '곳', '비교', '주말', '임', '고려', '한국', '다른', '지역', '가성', '비', '바다', '바로', '옆', '층', '시간', '운영', '편의점', '주변', '맛집', '식사', '이용', '수', '곳', '봄', '벚꽃', '기간', '방문', '협재', '바다', '뷰', '대로', '변', '렌트', '가기', '조식', '이용', '근처', '옹포', '밥집', '아침', '산책', '겸', '옴', '루프', '탑', '수영장', '바', '내', '때', '밤', '비바람', '불어', '이용', '못', '옴', '단점', '모', '유명', '여행', '블로거', '리뷰', '화장실', '물떄', '그거', '만족', '월', '제주도', '탓', '수풀', '수영장', '위주', '제주', '풀이', '호텔', '고민', '가성', '비', '호텔', '완전', '온수', '미온수', '아이', '다소', '미온', '수풀', '바로', '옆', '자쿠지', '운영', '잠깐', '수', '수준', '미온수', '수영장', '자체', '인피니트', '수영장', '환상', '바다', '수', '수영장', '하나', '추천', '함', '그', '외', '스페', '제주', '식당', '인생', '치킨', '빠에야', '수', '음협', '재', '바다', '뷰', '매우', '스파', '룸', '층', '뷰', '호텔', '구조', '스파룸', '모두', '층', '루프', '탑', '수영장', '더', '곳', '루프', '탑', '이용', '시간', '시간', '시간', '기억', '안나', '수영장', '자쿠', '이용', '맥주', '무료', '이용권', '저녁', '테이블', '맥주', '바람', '수', '밤', '바다', '룸', '기본', '어메니티', '박', '하니', '것', '계속', '줌', '방', '청소', '시', '사이', '거', '시트', '교체', '정리', '삼다수', '병과', '네스프레소', '캡슐', '개', '계속', '짐', '스파', '욕조', '생각', '커서', '여자', '분', '피로', '스페인', '제주', '영업', '종료', '룸서비스', '이용', '조식', '조식', '이용', '안해', '호텔', '바로', '앞', '과', '협재', '버거', '호텔', '오른쪽', '횟집', '마담', '나탈리', '마담', '나탈리', '음악', '계속', '호텔', '전체', '규모', '호텔', '필터', '링', '해변', '실외수영장', '조식', '검색', '호텔', '중', '전', '객실', '협재', '해변', '뷰', '옥상', '수영장', '룸서비스', '선택', '결과', '만족', '대형', '호텔', '가격', '방', '객실', '만큼', '수영장', '룸서비스', '등', '사람', '번잡', '주차장', '바로', '앞', '미니바', '개수대', '바로', '옆', '분', '거리', '내', '유명', '식당', '것', '움', '돈', '대형', '호텔', '가면', '룸', '작고', '수영장', '식당', '주차장', '사람', '여기', '룸서비스', '음식', '맛', '양도', '조식', '선택', '안해', '룸서비스', '맛', '볼', '때', '듯', '호텔', '모든', '곳', '것', '때', '호텔', '인근', '아침', '시', '분', '이전', '아무', '것', '리지', '룸', '서비스', '음식', '만', '매일', '매우', '제한', '선택', '시설', '더', '날', '시간', '살', '객실', '바다', '경치', '이웃', '섬', '환상', '일몰', '실제', '더', '리조트', '임', '홍보', '가격', '시설', '맥', '상통', '호텔', '화산', '바위', '해변', '자리', '정상', '호텔', '사용', '그림', '지금', '날', '사진', '제주', '여행', '기점', '버스', '터미널', '옆', '이동', '아주', '위치', '스템', '적극', '응대', '친절', '편안함', '제공', '시설', '또한', '관리', '잠자리', '계', '공간', '제공', '기타', '편의', '시설', '부족함', '제공', '제주', '곳', '알', '후', '곳', '이용', '찾기', '위치', '길이', '밤', '거리', '다행', '리셉션', '근무', '직원', '중국어', '영어', '줄', '도움', '것', '해결', '리셉션', '직원', '택시', '목적지', '수', '밤', '해피', '워', '무료', '음료', '맥주', '사이다', '과일', '주스', '포함', '빵', '달걀', '치즈', '아침', '식사', '직접', '준비', '것', '방이', '실내', '히터', '작동', '수건', '다소', '엘리베이터', '층', '짐', '가야', '전체', '제주도', '처음', '라면', '예', '버스', '투어', '추천', '제주도', '호스텔', '위치', '대중교통', '타고', '어디', '수', '공항', '잠깐', '택시', '원', '미만', '직원', '매우', '질문', '답', '객실', '매우', '손님', '예', '투어', '할인', '상품', '번', '모두', '제주도', '다시', '이', '호스텔', '다시', '묵', '것', '제주도', '혼자', '여행', '마지막', '날', '접근성', '과거', '경험', '게스트하우스', '비교', '그냥', '잠', '자고', '오기', '곳', '경험', '일이', '지금', '발전', '예상', '점', '공항', '가까이', '친구', '방', '뭐', '곳', '아침', '토스터', '잼', '화장실', '개', '욕실', '겸', '화장실', '개', '꽤', '시', '이후', '전체', '소등', '불키', '조용조', '용', '얘기', '방키', '고여', '숙소', '남자', '숙소', '입구', '달라', '안전', '공항', '정말', '차로', '분', '이내', '도착', '것', '전반', '서비스', '겨울', '루프', '탑', '수영장', '이용', '수', '루프', '탑', '이용', '추가', '금액', '저녁', '뷔페', '아침', '조식', '조식', '이용', '식당', '방', '오션', '뷰', '꽤', '다음', '이용', '것', '전반', '여느', '호텔', '아침', '바다', '뷰', '예술', '공항', '호텔', '앞', '롯데리아', '양', '옆', '편의점', '야외', '주차장', '다만', '제', '방만', '건', '샤워', '기', '고정', '계속', '기본', '적', '무궁화', '개', '호텔', '가성', '비', '욕실', '및', '실내', '공간', '주차장', '야외', '편', '여름', '루프', '탑', '수영장', '이용', '함', '층', '뷔페', '식당', '루프', '탑', '바', '수영장', '사용', '곳', '다만', '조명', '전체', '눈', '좀', '제주', '시내', '볼', '숙박', '호텔', '여름', '휴가', '철', '수기', '가격', '수기', '이름', '수준', '상황', '선택', '호텔', '호텔', '할인', '사이트', '직접', '호텔', '홈페이지', '예약', '더', '시내', '공항', '일', '마치', '바로', '수', '위치', '선택', '가격', '무척', '시설', '주변', '주차공간', '여유', '전기차', '렌트', '길', '건너', '롯데리아', '급속', '충전', '소가', '더', '다른', '후기', '주변', '별', '것', '편의점', '두', '곳', '조금', '카페', '뿐', '호텔', '뒤', '유치원', '주택가', '곳', '요', '차량', '가지', '분', '선택', '것', '직원', '시설', '부정', '점', '라면', '객실', '내부', '전기', '플러그', '책상', '위', '것', '두', '개', '욕실', '전기', '면도', '기용', '개', '전부', '뷰', '층', '창문', '밖', '주택가', '가까이', '사람', '끼리', '서로', '눈', '수도', '거리', '차량', '가지', '이동', '공항', '시내', '가성', '비', '호텔', '추천', '수', '것', '용', '두엄', '곳', '위치', '엘배', '주차공간', '약간', '룸', '사물함', '침대', '파우더', '룸', '화장', '살', '욕실', '분리', '복도', '끝', '층', '공용', '휴게', '공간', '하나', '층', '음삭', '넉', '수', '공간', '침구', '편이', '침댜', '커튼', '옆', '사람', '마주', '조식', '샌드위치', '직접', '구조', '맛', '커피', '쥬스', '제공', '용두암', '숙소', '날씨', '한라산', '볼', '수', '저녁', '밤', '공항', '종', '달리', '대안', '수', '듯', '무난', '숙소', '공항', '접근성', '시설', '상대', '더', '추천', '월', '곳', '박', '기회', '방금', '도착', '곧', '제주', '시내', '매우', '곳', '제조', '국제', '공항', '택시', '분', '안', '건물', '테라스', '전망', '볼', '수', '바다', '매우', '언덕', '분', '정도', '도착', '아침', '식사', '맛', '다만', '객실', '창문', '마치', '요새', '느낌', '원래', '의도', '수도', '건물', '위', '휴식', '공간', '인터넷', '전반', '매우', '또한', '주인', '피터', '매우', '도', '정말', '집', '편안함', '수', '여기', '동안', '정말', '꼭', '다시', '미르', '게스트하우스', '특징', '건물', '건축', '양식', '주인', '피터', '성격', '그대로', '건물', '디자인', '제주도', '상징', '근처', '용두암', '화강암', '영감', '저', '중앙', '뜰', '해먹', '네', '개', '벽', '하늘', '것', '아침', '식사', '샌드위치', '또한', '피터', '이야기', '것', '그', '매우', '환대', '영어', '방', '다소', '시', '전', '샤워', '마치', '불', '노력', '완전', '주차장', '주차', '타워', '바로', '앞', '거리', '중심부', '어디', '갈수', '앞', '애용', '요즘', '코로나', '시국', '셀프', '체크', '점도', '아주', '일단', '위치', '정말', '곳', '주변', '곳도', '공항', '근처', '그다음', '아침', '비행기', '분도', '택시', '전체', '객', '실내', '청소기', '세탁기', '식기구', '마련', '이용', '풀', '점', '하나', '공항', '도', '번화가', '교통', '먹거리', '문제', '무엇', '저희', '단기', '장기', '달', '살기', '얼마', '건', '공항', '약', '도', '채', '거리', '아침', '비행기', '타고', '가야', '상황', '부담', '주차', '걱정', '건물', '내', '기계', '주차장', '바로', '앞', '주차장', '주차', '시내', '위치', '편의점', '음식점', '이용', '아주', '객실', '내', '건', '모두', '곳', '동안', '개인', '곳', '옥상', '앞', '바다', '뒤', '산이', '이', '전망', '정말', '여름', '한참', '생각', '절로', '곳', '하루', '잠시', '분', '최적화', '지은지', '얼마', '햇', '용', '청소기', '세탁기', '구비', '층', '조기', '벽', '가로', '창밖', '조기', '벽', '화장실', '페인트', '군데군데', '세면대', '곰팡이', '전체', '곰팡이', '냄새', '공항', '근처', '이마트', '마트', '식당가', '입지', '로비', '방', '좀', '별로', '트윈룸', '더블', '싱글', '더블', '둘', '퀸', '더블', '사이즈', '임', '더', '블룸', '침대', '중국', '정말', '로비', '중국사람', '취향', '듯', '카지노', '때문', '인지도', '공항', '매우', '시설', '또한', '건너편', '라마', '비', '호텔', '조금', '작', '가격', '대비', '단', '물', '수압', '조금', '공항', '제주도', '기분', '바다', '숙소', '좀', '웅장', '방', '다음', '묵', '의사', '더', '블룸', '트윈침대', '개', '준', '것', '오히려', '시설', '옛날', '호텔', '날', '화장실', '냄새', '좀', '별로', '카지노', '외국인', '전용', '어차피', '해당', '사항', '도착', '공항', '근처', '숙소', '예약', '저', '프론트', '가격', '대비', '룸', '침대', '룸', '조금', '침구', '저', '오션', '뷰', '바다', '앞', '이용', '바로', '앞', '이마트', '옆', '편의점', '맥주', '사기', '주차', '또한', '저', '매우', '만족', '성비', '패키지', '정말', '박', '다음', '좀', '오션', '뷰', '커플', '끼리', '오기', '최고', '듯', '패키지', '박일동', '안', '힐링', '기분', '제주도', '최애', '호텔', '전망', '최고', '최고', '골프', '오션', '뷰', '최고', '정말', '직원', '내부', '맘', '커플', '끼리', '여행', '곳', '골프', '패키지', '오니', '방이', '예약', '저렴', '저렴', '오션', '뷰', '최고', '듯', '제주도', '때', '예약', '제', '최애', '숙소', '커플', '끼리', '가기', '곳', '것', '오션', '뷰', '최고', '습', '골프', '곳', '것', '제주도', '다음', '또', '여기', '숙박', '호텔', '디자인', '인상', '면', '목표', '달성', '호텔', '일종', '힙', '스터', '모던', '분위기', '프론트', '오피스', '직원', '도움', '주차', '공간', '대리', '주차', '서비스', '이용', '가능', '옥상', '바', '휴식', '취하', '기', '곳', '위치', '환상', '상점', '식당', '공항', '문제', '방', '디자이너', '현대', '주의', '테마', '멀리', '것', '가장', '눈', '문제', '샤워', '커튼', '것', '우리', '샤워', '때', '싱크대', '지역', '절반', '실제', '또한', '세면', '도구', '공간', '반', '것', '의미', '싱크대', '영역', '수도꼭지', '싱크대', '확장', '역류', '발생', '다른', '문제', '손님', '호텔', '운영', '관련', '예', '욕조', '벽', '사이', '간격', '하우스', '키핑', '그', '지역', '은색', '청소', '합', '또한', '호텔', '바닥재', '베이지', '색', '다다미', '선택', '얼룩', '더', '어', '두운', '카펫', '바닥', '더', '작동', '나', '호텔', '마음', '더', '만들기', '위해', '요소', '개선', '글쎄', '차', '사용', '때', '전화', '번호', '화장품', '회사', '것', '몇', '번의', '시도', '끝', '도로', '목적지', '설정', '전화', '번호', '다른', '참조', '사용', '결정', '그', '길', '가장', '건물', '므', '수', '호텔', '새', '방이', '아침', '식사', '직원', '호텔', '건물', '내', '기계', '주차', '공간', '호텔', '옆', '개방', '주차장', '투숙', '객', '개방', '주차장', '주차', '화장실', '칫솔', '위치', '신라', '면세점', '약', '삼', '공항', '다시', '제주', '도착', '것', '장소', '무료', '주차', '대행', '꽤', '공항', '매우', '샤워', '공간', '욕조', '비데', '나', '방이', '미국', '호텔', '표준', '평균', '크기', '말', '모든', '것', '그', '각각', '더블', '침대', '얼굴', '마스크', '방', '식사', '표시', '책상', '직원', '최소한', '영어', '구사', '일부', '직원', '다른', '사람', '나', '관광객', '호텔', '사용', '것', '것', '언급', '것', '엽서', '프론트', '데스크', '스탬프', '그것', '거부', '우체국', '가라', '말', '침구', '어메니티', '조식', '모두', '가격', '대비', '가성', '최고', '조식', '후회', '루프', '탑', '이', '통', '유리', '전망', '뷰', '호텔', '가격', '편이', '구', '주차장', '제주', '시내', '호텔', '주차장', '곳', '본적', '발렛', '무료', '조식', '무엇', '침구', '꿀잠', '강추', '주차장', '발렛', '써비스', '번', '감동', '굿굿', '패밀리', '룸', '예약', '운', '스위트', '업그레이드', '더블', '개', '전망', '티비', '두', '대입', '니', '거실', '방', '분리', '가족', '어른', '밤', '시간', '조식', '죽', '종류', '양식', '음식', '어르신', '입맛', '다만', '욕실', '샤워', '부스', '분리', '전체', '호텔', '금액', '모텔', '가격', '생각', '객실', '선택', '생각', '직원', '또한', '가격', '객실', '침구', '류', '추천', '조식', '사람', '전복죽', '제주', '지인', '추천', '간', '호텔', '그', '전', '호텔', '알', '보고', '여러', '호텔', '가격', '예약', '좀', '걱정', '헸더랬습니', '보고', '호텔', '저리', '가라', '정도', '위치', '제주', '시내', '관광', '방도', '수압', '조식', '뷔페', '지수', '요', '추천', '제주', '공항', '분', '거리', '더원', '호텔', '지은지', '년', '룸', '컨디션', '호텔', '옥상', '하늘정원', '제주', '도착', '최상', '선택', '직원', '청소', '상태', '단점', '주차', '좀', '비지니스', '다음', '이용', '생각', '박일', '때문', '제주도', '위치', '직원', '모두', '대해', '침구', '카피', '드라이어', '등', '숙소', '시설', '위치', '노', '오거리', '근처', '도청', '제주', '인근', '출장', '오시', '분', '추천', '제주도', '엠버', '호텔', '센트럴', '대박', '숙소', '직원', '호텔', '다음', '제주도', '방문', '시', '또', '추천', '다음', '또', '옆', '진짜', '해장국', '집도', '아주', '마음', '여행', '도움', '직원', '위치', '제주', '시외', '버스', '터미널', '도보', '분', '거리', '대중', '교통', '버스', '접근', '여행', '수', '그', '무슬림', '위해', '곳', '해변', '법', '한라산', '하이킹', '법', '현지', '시장', '법', '등', '정보', '제공', '나', '다시', '여기', '것', '외국인', '친구', '한국', '방문', '기간', '마켓', '물품', '주문', '배달', '게스트하우스', '주인', '이메일', '주인', '마음', '주문', '하라', '허락', '상황', '마켓', '수령', '전화', '번호', '꼭', '핸드폰', '번호', '입력', '게스트하우스', '전화', '해', '가용', '핸드폰', '번호', '문의', '제', '번호', '입력', '해도', '실제', '수령', '게스트', '하우스', '번호', '더', '생각', '전화', '계속', '추궁', '누가', '언제', '이름', '뭐', '확인', '수령', '핸드폰', '번호', '달라', '하니', '개인정보', '개념', '직원', '반응', '어이', '글', '정신', '교육', '좀', '장난', '것', '내용', '대충', '아래', '직원', '왈', '저희', '물건', '대신', '못', '나', '사장', '이야기', '직원', '동안', '주문', '나', '거', '수령', '핸드폰', '번호', '필요', '폰', '번호', '하나', '유선', '전화', '입력', '직원', '저', '마켓', '유선', '번호', '나', '저', '지금', '마켓', '보고', '못', '직원', '개인정보', '나', '식', '실랑이', '직원', '걸', '알', '주인', '언제', '오냐', '제대로', '정말', '손님', '태도', '터미널', '바로', '옆', '위치', '정말', '터미널', '바로', '옆', '버스', '이용', '또한', '예전', '여관', '리', '모델', '듯', '개별', '욕실', '가격', '이용', '조식', '시간', '초코파이', '간단', '음료', '비닐', '팩', '한라산', '때', '요긴', '간식', '버스', '여행자', '추천', '침대', '조금', '주차장', '객수', '주차장', '협소', '호텔', '답', '뷰', '난타', '공연', '보기', '위해', '이틀', '호텔', '저녁', '비행기', '렌트', '도착', '저녁', '시', '룸서비스', '시', '반', '리셉션', '전화', '후라이드', '치킨', '수', '침대', '욕조', '산', '조식', '식당', '메뉴', '전복', '해물뚝배기', '갈비', '난타', '공연', '투숙', '객', '할인', '가까이', '제주', '가면', '항상', '숙소', '나보', '호텔', '난타', '난타', '공연', '볼', '수', '곳', '시간', '난타', '공연', '보지', '못', '아쉬움', '호텔', '난타', '한라산', '돌', '문화', '공원', '사려', '숩길', '절물', '휴양림', '등', '공항', '편이', '주변', '호텔', '난타', '공연장', '외', '편입', '니', '침대', '층', '편의점', '물품', '구매', '객실', '치약', '칫솔', '것', '약간', '점', '난타', '상설', '공연장', '호텔', '객실', '비즈니스', '호텔', '급', '다만', '시내', '택시', '안', '때', '객실', '조식', '난타', '공연', '시간', '산', '중턱', '인지', '밤', '공기', '위치', '규모', '호텔', '별로', '애월', '비교', '규모', '호텔', '로서', '푸른', '바다', '바로', '앞', '저녁', '석양', '무렵', '직원', '직원', '편입', '니', '룸', '바다', '전망', '욕실', '방', '전체', '비릿', '냄새', '나', '단점', '조식', '전체', '가성', '비', '기타', '바다', '눈', '보이', '사시', '사철', '수영', '루프', '탑', '수영장', '아주', '다시', '가격', '할인', '가도', '밤', '디제이', '모로', '수준', '그닥', '실내', '환기', '팬', '및', '에어컨', '소음', '침대', '객실', '외부', '유리창', '사이', '스파', '객실', '이', '스파', '위쪽', '상시', '작동', '팬', '현관', '룸키', '마스터', '전원', '저속', '작동', '화장실', '팬', '작동', '고속', '작동', '시스템', '일단', '룸', '키', '이', '스파', '위쪽', '팬', '끌', '수', '스위치', '저', '이', '팬', '소음', '수면', '방해', '정도', '매우', '관리직', '환기', '팬', '원선', '분리', '직원', '분', '말씀', '전', '컴', '플레인', '적', '또', '천정', '삼성', '시스템', '에어컨', '설치', '설치', '문제', '종', '문제', '소음', '저', '경우', '밤', '에어컨', '수', '정도', '날씨', '사용', '분', '문제', '수준', '소음', '여름', '투숙', '분', '고민', '듯', '관리', '직원', '분', '에어컨', '소음', '방법', '숙박', '포기', '다른', '호텔', '가신', '고객', '말씀', '객실', '내부', '청결', '및', '하우스', '키핑', '문제', '제', '경우', '객실', '청소', '실제', '담당', '분', '테', '이', '정도', '가격', '호텔', '수준', '응대', '관련', '그', '분과', '대화', '더', '나누기', '프런트', '관련', '컴', '플레인', '프런트', '해결', '려고', '노력', '것', '다만', '호텔', '직원', '서비스', '마인드', '교육', '하우스', '키핑', '제대로', '느낌', '가족', '국적', '분위기', '애월', '호텔', '밑', '여자', '정', '황상', '입금', '지인', '강아지', '데리', '적반하장', '화', '우리', '가족', '한텐', '친절', '저런', '바로', '글', '보시', '가족', '여행', '중', '우리', '관광', '간', '사이', '호텔', '직원', '무단', '허락', '객실', '난입', '온', '방', '우선', '이', '팩트', '이유', '메이드', '청소', '중', '애완', '용품', '것', '우리', '허락', '객실', '내부', '물건', '사진', '몰래', '직원', '단체', '방', '유포', '호텔', '총지배인', '및', '직원', '사실', '확인', '차', '명', '이서', '그것', '확인', '우리', '객실', '무단', '것', '관광', '총지배인', '사람', '우리', '말', '자기', '객실', '직접', '물건', '확인', '벌금', '내', '것', '정말', '말', '정도', '실물', '강아지', '것', '그로', '민원', '것', '하물며', '및', '증거', '추정', '물건', '호텔', '관계자', '명', '무단', '객실', '출입', '가요', '이', '대한민국', '호텔', '수', '일일', '물건', '추정', '컨데', '강아지', '스위트룸', '박', '더', '내', '객실', '뒤', '컴', '플레인', '및', '것', '내', '직원', '우리', '객실', '무단', '출입', '것', '하니', '박치', '돈', '경찰', '객실', '수색', '계속', '확인', '협박', '및', '강압', '말로', '우리', '모욕감', '조성', '그', '누가', '부모님', '가족', '쉬', '공간', '직원', '수색', '동의', '하나요', '혹', '나', '그', '안', '호텔', '규율', '담배', '고기', '흔적', '해도', '그', '누구', '우리', '허락', '우리', '점유', '객실', '가격', '컨디션', '서비스', '위치', '등', '제주', '행시', '제주시', '무조건', '곳', '다시', '묵', '예정', '나', '홀로', '커플', '가족', '년', '월', '일', '일', '남자친구', '제주도', '늘송', '파크텔', '이틀', '전체', '곳', '여행', '위해', '숙박', '장소', '위치', '정말', '문제', '늘송', '파크텔', '위치', '아주', '제주', '국제', '공항', '곳', '위치', '데', '공항', '숙소', '무료', '차편', '제공', '늘송', '파크텔', '주인', '미스터', '박', '우리', '공항', '호텔', '객실', '주호', '은', '아주', '객실', '티브이', '와이파이', '컴퓨터', '미니', '소독기', '식수', '음', '에어', '컨디션', '등', '비치', '아주', '게다가', '객실', '화장실', '정말', '이', '리뷰', '제주도', '방문', '다른', '여행객', '숙소', '선택', '도움', '호텔', '대한', '저희', '첫인상', '매우', '것', '직원', '마찬가지', '이', '호텔', '뭐', '고요', '방과', '침대', '시트', '방', '공기', '청정기', '무료', '와이파이', '티비', '채널', '인물', '채널', '포함', '충격', '도움', '직원', '변기', '커버', '아침', '당신', '이', '변기', '커버', '거', '이', '호텔', '바로', '편', '돼지', '전복죽', '패밀리', '레스토랑', '가격', '식당', '수', '거리', '한국', '음식점', '이건', '패스트푸드', '점', '이건', '공항', '대략', '분', '거리', '조언', '제주도', '차', '말레이시아인', '라면', '꼭', '국제', '면허증', '신청', '수건', '직접', '제공', '수건', '몇', '장', '안', '방', '시설', '방', '인치', '평면', '컴퓨터', '공기', '청정기', '미니', '냉장고', '정수기', '마련', '공항', '차', '타고', '약', '분', '정도', '여러', '레스토랑', '편의점', '인근', '직원', '영어', '아주', '저희', '전체', '불만', '제주', '공항', '고분', '내외', '거리', '편의점', '맥도날드', '근처', '식당', '돼지', '바비큐', '바로', '길', '건너', '시간', '코인', '세탁소', '가까이', '방', '무료', '무선', '인터넷', '사용', '가능', '화장실', '마지막', '주인', '무척', '시간', '코인', '세탁소', '저희', '분', '인도네시아어', '무척', '해', '더', '이상', '것', '정도', '숙소', '제주도', '매우', '추천', '호텔', '최근', '것', '인테리어', '주인', '온돌', '난방', '객실', '내', '와이파이', '무료', '방', '어제', '관광', '호텔', '위치', '수', '숙소', '바다', '전망', '객실', '배정', '전망', '매우', '욕실', '매우', '듯', '느낌', '테라스', '곳', '청결', '부분', '신경', '필요', '베란다', '환경', '좀', '바닷가', '근처', '날', '벌레', '수', '환경', '일', '듯', '층', '투숙', '테라스', '날', '벌레', '나', '바퀴벌레', '류', '에어컨', '실외', '기', '창문', '여', '부위', '방쪽', '창문', '열기', '청소', '좀', '더', '신경', '듯', '샴푸', '바디크렌저', '용기', '표기', '브랜드', '제품', '최저', '가품', '놨더군', '군더더기', '숙소', '다음', '날', '성산일출봉', '우도', '계획', '박', '만원', '가격', '대비', '굿', '주차장', '바다', '앞', '고요', '주변', '것', '숙박', '계획', '라면', '곳', '생각', '애초', '성산', '근처', '숙소', '생각', '때문', '별', '고민', '선택', '숙소', '성산', '숙소', '건', '용눈이오름', '성산일출봉', '돌', '문화', '공원', '등등', '애월', '서귀포', '번잡', '함', '피해', '제주', '숙소', '자체', '아주', '창', '우도', '눈앞', '가득', '광경', '분위기', '호텔', '공항', '가격', '대비', '가성', '비', '최고', '설비', '사장', '한라', '수목원', '차로', '오전', '드라이브', '다음', '제주도', '가면', '또', '호텔', '방이', '위치', '호텔', '리셉션', '직원', '분', '다음', '번', '꼭', '갤러리', '호텔', '비', '가야', '호텔', '방이', '스태프', '동네', '식당', '술집', '다음', '번', '이', '호텔', '제주', '시내', '비지니스', '호텔', '이용', '접근성', '가성', '비도', '강력', '추천', '제주도', '출장', '갑작스레', '예약', '호텔', '위치', '사진', '매우', '만족', '직원', '매우', '가격', '대비', '룸', '컨디션', '굿굿굿', '업무', '차', '여행', '해도', '곳', '다시', '방문', '예정', '서귀포', '미도', '호스텔', '이사', '여행', '시작', '중앙', '로터리', '버스', '정류장', '번', '버스', '타고', '제주', '시외', '버스', '터미널', '다음', '번', '버스', '타고', '버스', '정류장', '버스', '번호', '거의', '오지', '그', '당시', '우리', '시간', '우리', '숙소', '방법', '혼동', '동안', '소녀', '우리', '어디', '것', '택시', '요금', '확인', '데', '도움', '앱', '원', '지불', '다음', '택시', '실제', '비용', '원', '메', '앞', '도착', '어쨌든', '우리', '카드', '택시', '요금', '지불', '매우', '내', '검토', '다음', '시작', '첫인상', '환영', '길림', '펜션', '여행', '동안', '내', '최고', '숙박', '시설', '주인', '인', '강', '정말', '그', '우리', '짐', '버스', '노선', '숙소', '숙소', '설명', '우리', '길', '때', '위치', '공유', '위해', '추가', '언제', '도움', '요청', '수', '그', '택시', '운전사', '나', '버스', '운전사', '주어', '방법', '경우', '도움', '명함', '우리', '쉐어', '하우스', '모든', '것', '주방', '세탁기', '헤어', '드라이어', '비누', '샴푸', '컨디셔너', '온수', '빵', '계란', '커피', '머신', '매일', '수건', '우리', '사용', '수', '모든', '주방', '도구', '숙박', '시설', '정말', '사진', '자료', '완전', '깨끗', '가격', '사장', '친절', '다시', '또오', '공항', '깝', '바다', '는걸', '어서', '정도', '가격', '완전', '깨끗', '압력밥솥', '전자레인지', '토스트', '기', '커피포트', '기', '기본', '조미료', '완비', '아두', '아주', '맘', '마음', '듬그', '우리', '위해', '모든', '것', '설명', '해주시', '호의', '정보', '섬', '스파이크', '를', '영어', '냉장고', '정리', '시', '펜션', '은', '계란', '빵', '오렌지', '주스', '추가', '분', '정도', '수', '레스토랑', '수', '일간', '나', '게스트', '하우스', '경험', '우선', '버스', '통해', '공항', '접근', '수', '나', '게스트', '하우스', '바로', '앞', '버스', '정류장', '현지', '버스', '타고', '제주', '여행', '교통', '걱정', '필요', '둘째', '주변', '마을', '가장', '레스토랑', '운', '돼지', '마지막', '방', '라운지', '주방', '공간', '또한', '미소', '인사말', '이', '곳', '추천', '이', '호스텔', '몇', '가지', '사항', '주인', '매우', '그', '지역', '대해', '압니', '제', '특정', '음식', '레스토랑', '영업', '확인', '전화', '지도', '나', '수', '라운지', '룸', '무료', '아침', '식사', '제공', '재료', '제공', '공항', '장소', '시외', '버스', '정류장', '위치', '레스토랑', '바', '한라산', '분', '거리', '호스텔', '객실', '건', '에어컨', '샴푸', '및', '바디', '워', '시가', '욕실', '방', '명', '투숙', '사물함', '약간', '가방', '전체', '귀중', '품', '수', '전체', '크기', '수건', '손', '수건', '제공', '꼭', '다시', '이용', '첫', '제주도', '여행', '동안', '전혀', '불평', '것', '방', '세면', '도구', '포함', '화장실', '매일', '새', '타월', '제공', '무제한', '토스트', '계란', '우유', '커피', '주스', '아침식사', '조리', '가능', '시간', '요리', '가능', '점심', '식사', '저녁', '식사', '차', '밤새', '무료', '주차장', '제공', '시청', '편의', '위치', '바', '술집', '지구', '인근', '식당', '리셉션', '직원', '모든', '도움', '심지어', '영어', '차', '한국어', '입력', '것', '도', '전체', '꼭', '추천', '우리', '꼭', '다시', '묵', '것', '제주', '섬', '발견', '위해', '박', '거기', '이', '게스트', '하우스', '도시', '번화가', '부분', '위치', '섬', '거의', '모든', '명소', '버스', '거기', '출발', '섬', '남쪽', '동쪽', '서쪽', '때', '대략', '시간', '계산', '수', '게스트하우스', '사람', '정말', '섬', '모든', '곳', '도달', '가장', '방법', '항상', '알', '게스트하우스', '수도', '모든', '것', '제공', '샴푸', '헤어', '드라이어', '수건', '등', '나', '추천', '제주', '시청', '근처', '교통', '버스', '여행', '선택', '시내', '위치', '저녁', '단점', '주인', '때문', '문제', '무', '계획', '숙소', '잡고', '자마자', '롱보드', '보고', '사람', '분위기', '여기저기', '푹', '쉬', '전체', '심플', '분위기', '선택', '초이스', '힙', '음악', '핫도그', '술', '무엇', '층', '바', '음악', '혼자', '운', '공짜', '술', '수', '굳럭', '택시', '타고', '제주도', '구나', '도로', '편', '힙', '로고', '층', '라운지', '저', '엔돌핀', '층', '음악', '소리', '겁', '겁', '체크', '바', '장님', '매니저', '노래', '크게', '맥주', '칵테일', '잔', '로컬', '외국인', '분도', '자주', '오시', '신축', '방', '운', '제', '방', '테라스', '밤', '아침', '어메이징', '뷰', '선사', '가격', '걸', '제공', '조식', '근처', '러닝', '힐링', '서귀포', '쪽', '공항', '우연찮', '머', '곳', '발견', '또', '사장', '층', '바', '페로', '운영', '그', '위로', '호스텔', '객실', '바', '카페', '객실', '모두', '전망', '나', '맨', '층', '조식', '실', '도심', '풍경', '엄지', '척', '직원', '다음', '제주', '무조건', '다시', '거', '숙소', '서비스', '덕분', '가요', '아래층', '분위기', '가격', '라운지', '밤', '혼자', '맥주', '마시기', '진짜', '굿', '진짜', '다른', '완전', '추천', '조식', '뷰', '아주', '산지천', '한라산', '항', '보', '도미', '토리', '객실', '뷰', '최고', '공항', '근처', '숙소', '그냥', '여기', '저', '도미', '토리', '매트리스', '꿀잠', '호스트', '층', '새벽', '시', '한참', '수다', '다음', '제주', '다시', '또', '정나무', '포인트', '인테리어', '방', '분위기', '사장', '감각', '듯', '다른', '비지니스', '호텔', '호텔', '방', '새', '다음', '번', '생기', '또', '곳', '사장', '정원', '웨딩', '스냅', '차', '제주', '방문', '평점', '정원', '카페', '느낌', '곳', '방문', '주인', '이상', '시설', '서비스', '갈수록', '흥', '일부러', '분위기', '외국인', '사장', '무엇', '합리', '가격', '숙박', '레스토랑', '때문', '곳애월항', '근처', '곳', '전체', '룸', '컨디션', '실내', '집', '기류', '정원', '느낌', '산책로', '걷기', '뒤쪽', '연못', '객실', '아침', '조식', '날수', '사장', '내외', '기분', '곳', '주차', '하층', '하층', '엘리베이터', '식당', '편의점', '근처', '가격', '이용', '공차', '근처', '유리', '식당', '세븐', '편의점', '공항', '분', '거리', '위치', '이동', '투숙', '장점', '가격', '그', '가격', '것', '감안', '때', '전혀', '실망', '객실', '욕실', '도로', '변', '소음', '걱정', '도로', '통행량', '투숙', '단점', '이틀', '투숙', '때문', '체크아웃', '때', '정비', '말', '달라', '요청', '이튿날', '외출', '정비', '해', '정비', '것', '소통', '것', '원래', '숙박', '시설', '금연', '기본', '처음', '배정', '객실', '담배', '냄새', '직원', '바로', '방', '변경', '제발', '숙박', '곳', '금연', '흡연', '항상', '술', '짓', '사람', '담배', '짓', '사람', '나', '어이', '평', '가격', '대비', '우리', '일요일', '오후', '체크', '수요일', '우리', '방', '개', '해', '담배', '냄새', '연기', '우리', '방', '수', '우리', '방', '욕실', '거울', '세면대', '샤워', '화장실', '마치', '천', '전체', '호텔', '잠시', '것', '이', '것', '다른', '영어', '거의', '우리', '애플리케이션', '사용', '수', '이', '욕실', '및', '전반', '아주', '허름합니', '등급', '것', '제주도', '패키지', '여행', '중', '호텔', '박', '스위트룸', '인', '실', '사용', '스위트룸', '거실', '화장실', '침대', '개', '방이', '하나', '별로', '예상', '생각', '것', '숙소', '다만', '점', '호텔', '제공', '이불', '거', '조식', '서비스', '이용', '한식', '제공', '반찬', '가지', '정도', '국도', '맛', '제주', '번', '시내', '주변', '식당', '까페', '술집', '나이트', '등', '거의', '유흥', '거리', '해도', '과언', '가족', '휴가', '숙박', '침대', '드하', '가장', '충격', '바퀴벌레', '벌레', '신경안', '쓰시', '분', '처음', '저', '진짜', '충격', '처음', '어머니', '화장실', '그때', '방', '마리', '더', '발견', '화가', '안내', '데스크', '연락', '원래', '바퀴벌레', '지네', '등등', '답변', '방이', '방도', '못', '수건', '요', '진짜', '어이', '짐', '마리', '집', '순식간', '짐', '정리', '테이블', '신경', '잠도', '못', '숙소', '날', '최악', '호텔', '절대', '직원', '대처', '불만', '지인', '년전', '추천', '제주도', '여행', '첫날', '숙소', '롤', '곳', '위치', '좀', '외지', '객실', '상태', '좀', '미흡', '조식', '정말', '별로', '소음', '호텔', '대처', '서비스', '모텔', '디럭스', '박', '숙박', '천장', '물', '소리', '새벽', '내내', '데스크', '문의', '새벽', '시', '호텔', '우린', '컴', '플레인', '적', '내일', '시설', '팀', '확인', '함', '다음', '날', '시설', '팀', '확인', '것', '그', '다음', '날', '방', '숙박', '나', '소음', '그로', '일', '내내', '새벽', '시', '소음', '녹음', '불구', '디럭스', '풀북', '나', '디럭스', '숙박', '거르세', '제발', '트립어드', '바이', '저가', '업뎃', '녹음', '기능', '추가', '수', '평생', '간직', '후', '소음', '업뎃', '것임', '정말', '이', '호텔', '모텔', '아스', '크림', '숟가락', '좀', '달라', '하니', '데스크', '권한', '함', '조식', '운영', '중인', '호텔', '말', '끝', '모텔', '것', '서비스', '걸', '그동안', '호텔', '중', '정말', '오기', '베스트', '최악', '호텔', '본관', '층', '객실', '바로', '앞', '바다', '뷰', '객실', '객', '실내', '에어컨', '제습기', '빨래', '건조기', '사이즈', '주방', '사용', '함', '로비', '물', '맥주', '판매', '공', '호텔', '입구', '편의점', '그', '곳', '구매', '추천', '함', '공항', '대략', '분', '정도', '소요', '위치', '공항', '편', '다만', '호텔', '시설', '관리', '면', '약간', '보임', '방충', '망', '구멍', '곳도', '벽돌', '군데군데', '곳', '보임', '전체', '호텔', '우리', '방만', '이불', '구멍', '하나', '분', '거리', '해변', '맛집', '자리', '제주', '때', '묵고', '매번', '불만', '추천', '룸', '레스토랑', '직원', '함덕', '해변', '분', '주변', '맛집', '꽤', '공항', '승용차', '약', '분', '차', '시간', '공항', '버스', '함덕', '해변', '바로', '앞', '만원', '슈페리어트윈룸', '인', '사용', '시', '객실', '아주', '다만', '객', '실수', '주차장', '조금', '협소', '것', '라마', '환경', '바다', '접근성', '용이', '조식', '단점', '주변', '함덕', '해수욕장', '밤새', '아주', '분', '정도', '위치', '제', '땐', '사람', '이용', '곳', '청소', '샴푸', '린스', '바디', '워시', '치약', '폼클렌징', '빨래', '무료', '이구', '여자', '방', '드라이기', '뿐', '빗', '화장', '솜', '면봉', '근처', '시장', '공항', '버스', '수', '마스코트', '락심이', '정말', '밖', '안', '구분', '위생', '분', '주의', '것', '조식', '계란', '식빵', '밥', '미역국', '씨리얼', '우유', '쥬스', '시장', '가까이', '수', '관덕정', '도미', '토리', '층', '곳', '화장실', '겸용', '하나라', '좀', '사람', '거실', '서로', '정보', '공유', '제주도', '때', '종종', '게', '위치', '쪽', '곳', '좀더', '조식', '주인', '가끔', '저녁', '파티', '은', '여행', '때', '가격', '다소', '편이', '제주', '시내', '공항', '근처', '아침', '비행기', '분', '것', '곳', '건물', '개조', '해도', '시설', '다소', '낙후', '것', '감안', '듯', '시내', '게스트하우스', '가게', '곳', '가격', '좀', '대신', '건물', '편이', '제', '방', '창문', '모기', '화장실', '약간', '낙후', '느낌', '주인', '리', '모델링', '페인트', '칠이', '느낌', '아침', '조식', '메뉴', '게스트하우스', '일반', '메뉴', '준비', '분위기', '화기', '애애', '거실', '담소', '친구', '뷰', '눈', '펑펑', '무리', '방도', '쉬', '다음', '가족', '엠버', '리조트', '번창', '날씨', '호텔', '곳', '바베큐', '파티', '나중', '설', '매장', '오픈', '친구', '제주', '여행', '카라반', '숙박', '꼭', '여기', '리뷰', '보고', '선택', '곳', '선택', '직원', '객실', '청소', '리조트', '프론트', '스낵코너', '종류', '맥주', '캔', '스낵', '구매', '가족', '곳', '다음', '날', '한라산', '등반', '계획', '결정', '엠버', '리조트', '생각', '외로', '경치', '두', '말', '객실', '청결', '도시', '음속', '곳', '사진', '업데이트', '안', '것', '실제', '방문', '때', '사진', '기대', '이상', '외부', '느낌', '내부', '인테리어', '신경', '리', '클라이너', '소파', '커피', '머신', '세심', '부분', '조경이', '랄', '여러가지', '공', '한라산', '쪽', '시내', '좀', '난방', '물', '힐링', '조식', '가격', '숙소', '자주', '방문', '제주', '이번', '함덕', '숙박', '예약', '가격', '파셜', '오션', '뷰', '제공', '예약', '서드', '파티', '것', '테라스', '것', '내', '것', '일단', '룸', '체인지', '다른', '방', '이', '객실', '도대체', '무엇', '침대', '매우', '싸구려', '침대', '티나', '거림', '세면대', '화장실', '아예', '분리', '동선', '호텔', '생전', '처음', '다른', '분', '말씀', '곰팡이', '문제', '객실', '억지로', '것', '것', '욱여넣', '느낌', '나름', '전망', '편이', '화장실', '고작', '욕조', '하나', '수', '수준', '문', '마저', '장난', '매우', '두', '번', '다시', '모로', '최악', '호텔', '중', '하나', '코너', '바다', '뷰', '를', '묵', '바다', '손톱', '보', '네', '원래', '함덕', '앞', '호텔', '이용', '여기', '이번', '여기', '호텔', '묵엇', '습', '다가', '자마자', '식당', '수도관', '파열', '레스토랑', '천장', '맥주', '무한리필', '조식', '도시락', '대체', '예정', '함', '방', '화장실', '곰', '짐', '세면대', '물', '샴푸', '코딱지', '거', '줌', '콘센트', '구멍', '개', '라서', '명', '보조', '배터리', '잠', '침대', '머리', '콘센트', '구멍', '개', '방', '구비', '슬리퍼', '누가', '어도', '번은', '슬리퍼', '명', '방', '물', '병', '수건', '장만', '줌', '아침', '시', '조식', '카운터', '직원', '도시락', '얼른', '우도', '려고', '직원', '옴', '객실', '점검', '안내', '팻말', '보고', '객실', '커녕', '천장', '레스토랑', '쪽', '담배', '냄새', '오지', '풍기면', '옴', '조식', '달라', '도시락', '고함', '그때', '시간', '시', '조식', '시', '업체', '지금', '직원', '고함', '됏다', '옴', '승', '뭐', '호텔', '방', '상태', '답', '최선', '그', '금액', '대의', '호텔', '비치', '자기', '숙소', '걸', '금액', '때로는', '함덕', '바다', '살짝', '때', '기분', '정도', '해변', '메인', '해변', '위치', '방', '크기', '인테리어', '가격', '생각', '가성', '비', '편이', '생각', '저', '제일', '작은방', '바다', '측면', '뷰', '이', '방', '구조', '세면대', '샤워실', '동선', '좀', '시설', '위치', '바닷가', '근처', '산책', '맥', '파이', '근처', '더욱', '버스', '접근성', '택시', '주로', '이용', '함', '요새', '중국', '관광객', '위치', '자체', '시장', '마트', '편', '다만', '앞', '놀이기구', '문', '전', '편이', '전망', '앞쪽', '다른', '호텔', '볼', '건', '방', '넓이', '상태', '무난', '편이', '일회용품', '점', '꼭대기', '층', '바', '체크', '인시', '생맥주', '쿠폰', '주니', '한잔', '모텔', '리', '모델링', '것', '예전', '흔적', '부분', '전반', '관리', '침대', '시트', '등', '제주', '도착', '때', '가성', '비', '아주', '주변', '제주', '등', '유명', '맛집', '탑층', '바', '오픈', '생맥주', '잔', '무료', '쿠폰', '주니', '호감', '급상승', '주변', '소음', '가격', '생각', '시설', '움', '점', '얘기', '처리', '바닷가', '조금', '보', '공항', '근처', '하루', '예약', '세면', '때', '일회용품', '객실', '택시', '공항', '분', '정도', '소요', '곳', '그것', '시간', '이', '리조트', '해변', '바로', '옆', '때문', '전망', '제공', '클린', '룸', '침대', '리조트', '승무원', '매우', '내', '다시', '제주', '방문', '리조트', '다시', '것', '제주도', '위치', '바로', '해변', '근처', '룸', '뷰', '화', '해변', '자체', '곳', '우리', '가족', '갈수', '근처', '카페', '해녀', '박물관', '근처', '성산일출봉', '분', '정도', '이', '근처', '여행', '분', '추천', '제주도', '출장', '때문', '방문', '다음', '휴가', '때', '다시', '방문', '숙소', '바다', '바로', '앞', '조식', '프라이', '베이컨', '샐러드', '빵', '등', '수', '청소', '상태', '직원', '때문', '더', '만족', '수', '룸', '카페', '바다', '뷰', '때문', '단점', '태교여행', '박', '리조트', '바다', '바로', '앞', '위치', '조식', '달걀프라이', '베이컨', '샐러드', '직접', '준비', '토스트', '버터', '씨리얼', '황도', '오렌지', '주스', '마련', '수', '직원', '모두', '리조트', '내', '카페', '카페', '역시', '바다', '경치', '객실', '침대', '바다', '정말', '제대로', '힐링', '여행', '룸', '컨디션', '제주도', '동쪽', '여행', '준비', '리조트', '무조건', '또', '잠', '자고', '오자', '가성', '비', '일', '듯', '박일', '여행', '하루', '더', '체류', '바람', '것', '간', '곳', '공간', '아침', '식사', '때', '한국인', '저희', '가족', '금은', '중국', '관광객', '듯', '가격', '공항', '근처', '하루', '추천', '공항', '택시', '비', '원', '정도', '제주', '공항', '저녁', '도착', '근처', '잡고', '거리', '포', '시즌', '호텔', '추천', '다만', '방', '집', '비행기', '시간', '아침', '새벽', '때', '라면', '제주', '공항', '근처', '숙소', '이', '곳', '공항', '인근', '중', '저가', '호텔', '하나', '숙소', '다소', '비', '시설', '편입', '니', '시내', '위치', '인근', '지역', '관광', '그것', '위치', '예산', '호텔', '어디', '수', '제과점', '신라', '면세점', '약', '거리', '도로', '건너편', '아이', '위', '놀이터', '뒷문', '사용', '그것', '제', '딸', '즐거움', '방', '욕실', '크기', '매트리스', '나', '만', '직원', '도움', '제주', '공항', '도심', '한가운데', '접근성', '건물', '년대', '시간', '건물', '외형', '및', '내부', '건물', '로비', '쾌쾌', '아침', '조식', '가격', '그', '가격', '밥', '전체', '거두', '절미', '숙박', '료', '생각', '아주', '호텔', '혹시', '가격', '망각', '수준', '그것', '고객', '도둑', '심보', '그냥', '도심', '아주', '시설', '가격', '숙박시설', '보시', '아침', '조식', '뷔페', '방도', '몇', '개', '방', '리', '모델링', '덜', '길가', '신호등', '길가', '위치', '택시', '잡기', '호텔', '나', '운', '발코니', '방이', '나', '행복', '해', '물', '필요', '각', '객실', '용기', '수건', '호텔', '또한', '욕실', '발매', '안', '아침', '식사', '보통', '수준', '호텔', '중국', '단체', '관광객', '위', '건물', '여행지', '라스베가스', '스트립', '호텔', '이', '곳', '년', '가지', '방', '침대', '시트', '손님', '머리카락', '여행객', '위해', '모기', '살', '수', '푸드', '바베큐', '침대', '위치', '도시', '중심부', '멀리', '친구', '여기', '제주도', '최고', '호텔', '가격', '대비', '가치', '위치', '중심', '시설', '방', '매우', '와이파이', '나', '이', '호텔', '최고', '관광지', '잠', '것', '뿐', '급', '럭셔리', '호텔', '공항', '호텔', '버스', '노선', '뿐', '근처', '식당', '또한', '시장', '왕복', '방', '방음', '화장실', '냄새', '냉', '방도', '개인', '조절', '수', '본인', '키', '다음', '번', '제주도', '방문', '또', '연말', '매년', '제주', '그때', '이용', '곳', '주변', '객실', '소음', '서비스', '친절', '청결', '모두', '곳', '제주도', '곳', '곳도', '여기', '곳', '찾기', '제주', '숙소', '중', '가장', '규모', '작', '곰팡이', '하나', '침구', '잠', '진짜', '푹', '재', '방문', '의사', '프로', '참고', '공항', '택시', '분', '정도', '거리', '저', '친구', '모두', '정말', '다음', '조식', '또한', '저기', '위치', '수건', '청소', '정말', '바다', '전망', '확', '추천', '조식', '포함', '공항', '근처', '도', '가격', '합리', '이불', '매트리스', '커버', '사용', '맘', '조식', '심플', '종류', '별로', '제공', '맘', '주차공간', '다소', '이', '가격', '대비', '만족', '출장', '때문', '제주도', '가성', '비', '전체', '난방', '방이', '아주', '또한', '옆', '편의점', '더', '제주', '출장', '때문', '주로', '모텔', '숙박', '가격', '스테이', '호텔', '예약', '시설', '직원', '서비스', '마인드', '조식', '무료', '이용', '사진', '보이', '방', '꽤', '봄철', '에어컨', '창문', '청결', '아주', '로비', '직원', '매우', '도움', '승강기', '객실', '바닥', '짐', '실', '수', '다시', '여기', '머', '무르', '방', '겨울', '에어컨', '창문', '해', '예약', '사이트', '사진', '물고기', '눈', '렌즈', '것', '오해', '소지', '다시', '여기', '롭', '여행자', '호텔', '로비', '스태프', '현대', '환경', '우리', '묵', '수', '곳', '레스토랑', '서비스', '이', '호텔', '근처', '시장', '액세스', '수', '우리', '제주', '여행', '때', '우리', '몇', '밤', '여기', '우리', '렌트카', '탐색', '장치', '찾기', '매우', '공항', '약', '분', '우리', '아파트', '발코니', '바다', '거실', '주방', '기본', '요리', '도구', '아파트', '지시', '사항', '영어', '모든', '고문', '밖', '동시', '발코니', '문', '개', '것', '대한', '번역', '앱', '사용', '또한', '아파트', '거실', '패널', '장소', '조명', '제어', '리모콘', '셀프', '세탁', '시설', '공항', '것', '차로', '분', '거리', '시간', '코인', '세탁소', '제주', '때', '가치', '기반', '므', '다시', '예약', '방', '나', '그', '지역', '새', '개발', '생각', '그것', '매우', '바다', '발코니', '전망', '수', '직원', '별로', '우리', '에어', '컨디셔너', '문제', '관해', '그', '말', '우리', '통제', '이해', '수', '다음', '날', '그', '우리', '제어판', '더', '광고', '영어', '녹음', '우리', '공항', '오전', '시', '택시', '요청', '비록', '문제', '직원', '우리', '위해', '또', '다른', '택시', '우리', '택시', '확신', '우리', '그', '대화', '나누기', '그', '아주', '사람', '다음', '번', '거기', '것', '공항', '분', '거리', '교통', '정체', '달러', '때문', '매우', '합리', '요금', '시설', '그냥', '일반', '모텔', '분명', '실내', '흡연', '금지', '객실', '담배', '쩐내', '저', '그', '이상', '그', '이하', '동의', '입구', '위치', '리', '모델링', '완료', '호텔', '객실', '위치', '직원', '환대', '혼자', '개', '침대', '방이', '부담', '내', '이용', '방', '층', '프린세스', '코스', '방', '이벤트', '성의', '방이', '층', '프린세스', '룸', '바다', '방도', '편이', '욕조', '복도', '끝', '스모', '킹', '라운지', '엘리베이터', '개', '조식', '만원', '가격', '대비', '공항', '버스', '택시', '바로', '가면', '분도', '택시', '번화가', '위치', '쇼핑', '거나', '커피', '술', '한잔', '호텔', '상태', '서비스', '마음', '적극', '추천', '다음', '예정', '공항', '먹거리', '곳', '완전', '중심', '스카이', '파크', '객실', '비지니스', '호텔', '생각', '잠', '바오', '젠', '거리', '일정', '예약', '주차장', '될껀', '하층', '세탁실', '여행', '곳', '또', '비행기', '바람', '예약', '공항', '평이', '예약', '정말', '시설', '거여', '직원', '수', '발', '묶여서', '당황', '주변', '식당', '추천', '감동', '추천', '요가', '방', '이용', '객실', '침대', '개', '좀', '듯', '느낌', '생각', '안', '화장실', '문', '안쪽', '변기', '샤워', '대가', '유리', '각각', '문', '수건', '총', '장', '냉장고', '와이파이', '호텔', '박', '묵', '공항', '버스', '타고', '정류장', '만', '이', '호텔', '수', '근처', '위치', '쇼핑', '식사', '공간', '마켓', '호텔', '직원', '만날', '수', '엘리베이터', '만', '그', '우리', '체크', '인', '아침식사', '제공', '객실', '및', '시설', '아주', '욕실', '문', '별도', '화장실', '및', '샤워실', '아침', '식사', '표준', '및', '커피', '차', '선택', '수', '의', '시스템', '공항', '버스', '안', '버스', '역', '최상', '위치', '쇼핑', '근처', '레스토랑', '버스', '정류장', '공항', '고분', '정거장', '만', '해당', '편안함', '그', '만', '아침', '식사', '기본', '단점', '화장실', '문', '방', '온도', '조절', '방법', '알', '호텔', '위치', '모든', '곳', '히터', '의', '온도', '이', '변경', '밤', '잠', '게', '저', '저', '창', '열기', '권한', '또한', '욕실', '문', '사진', '해당', '것', '가격', '숙소', '무엇', '주인', '감동', '무료', '아침밥', '준비', '배', '불리', '다시', '리조트', '해안', '모두', '아이', '씨', '가치', '강력', '추천', '한가지', '단점', '독서', '용', '램프', '극복', '오아시스', '곳', '수', '정원', '소리', '체재', '회의', '약', '분', '도보', '근처', '국제', '컨벤션', '센터', '근처', '대포', '주상절리', '절벽', '연', '폭포', '제주', '미지', '식물원', '및', '드라이브', '거리', '사찰', '우리', '개', '아파트', '명', '일', '합리', '주방', '시설', '그릇', '밥솥', '가스레인지', '매우', '합리', '가격', '요리', '수', '가족', '여행', '한국', '음식', '아침', '식사', '제공', '몇', '가지', '메뉴', '역상', '컨시어', '아주', '사람', '영어', '아주', '협조', '체크', '때', '밤', '약', '사용', '수', '이', '곳', '공원', '거리', '가득', '해당', '수도', '리셉션', '시간', '사용', '서귀포', '분', '거리', '레스토랑', '쇼핑', '센터', '등', '차', '여행', '제주', '그룹', '경우', '사람', '이', '곳', '강력', '추천', '아파트', '호텔', '회의', '아이', '씨', '또한', '가족', '휴가', '더', '수', '주위', '저', '그냥', '이', '날', '추천', '곳', '묵고', '숙박시설', '제주', '컨퍼런스', '센터', '아침', '식사', '제공', '그', '영어', '매우', '도움', '심지어', '관리', '공항', '택시', '투어', '시간', '환상', '객실', '무선', '인터넷', '바다', '전망', '수', '분', '정도', '위치', '얼마', '전체', '매우', '온수', '난방', '다만', '조식', '편이', '것', '함덕', '해수욕장', '바로', '앞', '위치', '신축', '건물', '개보', '수로', '방', '컨디션', '제주', '날씨', '때', '해수욕장', '함덕', '협재금능', '순위', '칠', '만큼', '에메랄드', '색', '신관', '클린룸', '구관', '씨뷰', '군데', '숙박', '신관', '대신', '조식', '굿앤굿', '스마트', '이용', '구관', '씨뷰', '제일', '패밀리', '룸', '바다', '뷰', '대신', '노후', '시설', '좀', '함덕', '해변', '제일', '장점', '우선', '프론트', '직원', '모두', '원래', '패밀리', '룸', '예약', '오션', '뷰', '럭셔리', '룸', '추가', '기존', '금액', '오만원', '남짓', '더', '후회', '체크', '시간', '조금', '일찍', '정리', '짐', '수', '체크', '박', '일로', '스위트', '취사', '가능', '투숙', '체크', '아웃', '직원', '함덕', '해수욕장', '매우', '근처', '만', '곳', '모던', '관리', '사우나', '투숙', '객', '유료', '가족', '여행', '숙박', '취사', '구관', '함덕', '해수욕장', '뷰', '볼', '수', '내부시', '별로', '업무', '출장', '공항', '사거리', '위치', '굿', '신축', '건물', '듯', '냄새', '전혀', '쾌적', '더블', '침대', '싱글', '침대', '스타일', '객실', '욕실', '로비', '식사', '메뉴', '카페', '가격', '박', '당', '약', '직원', '영어', '섬', '제주도', '허용', '범위', '및', '가격', '값', '것', '침대', '화장실', '이', '크기', '수건', '포기', '해', '도착', '때', '리셉션', '아무', '자고', '방', '직원', '카운터', '뒤', '저', '절전', '겨울', '생각', '위치', '어디', '드라이브', '음식', '때문', '주변', '주의', '점', '호텔', '하룻밤', '방', '곳', '꽤', '화장실', '제외', '제주', '시', '중심부', '쇼핑', '지역', '주차', '공간', '다소', '제한', '직원', '전문', '곳', '편의점', '근처', '시장', '바로', '앞', '자', '먹거리', '식사', '저녁', '시간', '수', '장점', '호텔', '사용', '가구', '부모님', '데리', '여행', '때', '법', '분위기', '사용', '물건', '것', '애저', '꼭', '번', '보시', '추천', '직원', '층', '갤러리', '옆', '터', '차', '한잔', '여유', '즐', '기기', '아침식사', '시장', '아침식사', '수', '전', '트리플', '룸', '가격', '대비', '정말', '트윈룸', '다른', '리뷰', '글', '보고', '전혀', '뷰', '건', '만원', '트리플', '룸', '뷰', '순', '겨울', '방도', '끈', '단점', '굳이', '조식', '점', '방과', '달리', '화장실', '춥다', '거', '다른', '점', '위치', '재', '방문', '의사', '더블', '침대', '객실', '예약', '객실', '매우', '침대', '옷장', '공간', '침실', '사이', '칸막이', '음', '방', '매우', '건물', '마모', '흔적', '유지', '나', '칸막이', '쪽', '모든', '방', '통해', '연결', '발코니', '층', '방', '배치', '공기', '리', '도록', '슬라이더', '도어', '열', '때', '날씨', '스크린', '도어', '슬라이더', '도어', '불편', '함', '안전', '아마', '관리인', '주인', '프론트', '여성', '매우', '수용', '그', '여름', '동안', '단지', '통상', '작용', '것', '인', '에어', '컨디셔너', '통제', '나', '제공', '욕실', '욕조', '샤워', '커튼', '샤워', '때', '욕실', '절반', '그것', '이외', '그것', '호텔', '제주', '한가운데', '전략', '위치', '나', '체재', '지하', '쇼핑', '센터', '출구', '의', '뒤', '로부터', '약간', '단계', '이', '지역', '쇼핑', '및', '레스토랑', '호텔', '아침', '식사', '제공', '선택', '폭', '또한', '호텔', '몇', '걸음', '곳', '버스', '정류장', '도시', '루프', '투어', '이용', '수', '지하철', '쇼핑몰', '도시', '내의', '대부분', '지역', '연결', '시간', '후회', '우리', '공항', '시장', '곳', '뭔가', '것', '선택', '그것', '호텔', '관리', '직원', '동문', '시장', '길', '건너편', '지하', '상가', '입구', '약', '방', '우리', '위', '베개', '여분', '점', '것', '관', '문제', '곳', '식당', '스타', '벅스', '길', '간다', '날', '밤', '우리', '저녁', '바다', '쪽', '곧장', '한국어', '바베큐', '서양인', '준비', '직원', '우리', '또한', '버스', '정류장', '제주시', '관광', '버스', '타고', '일일', '패스', '사용', '주변', '우리', '제주', '숙박', '호텔', '숙박', '시장', '가로', '사진', '위치', '돼지', '거리', '동문', '마켓', '신문사', '상대', '지하', '상가', '방과', '욕실', '가격', '고려', '그', '매일', '제공', '무료', '광천수', '제공', '우리', '박', '전통', '객실', '두번째', '방문', '함', '최근', '리', '모델링', '별관', '얼마', '새', '집', '인테리어', '구석구석', '신경', '흔적', '빨래', '건조대', '구비', '가성', '비', '최고', '협재해수욕장', '한림', '공원', '매우', '위치', '매우', '난방', '살짝', '방', '개', '내부', '매우', '그냥', '가성', '비', '정도', '위치', '협재', '해변', '도보', '분', '거리', '위치', '매우', '수영장', '여름', '제주도', '이만', '위치', '이정', '시설', '가격', '경쟁력', '숙소', '거의', '것', '재', '방문', '의사', '새벽', '시', '새벽', '시', '공사', '시작', '사전', '통보', '객실', '바닥', '청소', '상태', '불량', '맨발', '무척', '화장실', '핸드', '워시', '물', '서비스', '모텔', '체크', '인과', '체크', '아웃', '아주', '그냥', '통과', '예약', '접수', '및', '증거', '를', '볼', '수', '체크', '아웃', '룸', '키', '카운터', '이', '전송', '수', '이', '호텔', '전망', '협재', '해변', '곳', '위치', '호텔', '약', '분', '정도', '이', '협재', '해변', '두번째', '방문', '함', '최근', '리', '모델링', '별관', '얼마', '새', '집', '인테리어', '구석구석', '신경', '흔적', '빨래', '건조대', '구비', '가성', '비', '최고', '협재해수욕장', '한림', '공원', '매우', '위치', '매우', '난방', '살짝', '방', '개', '내부', '매우', '그냥', '가성', '비', '정도', '위치', '협재', '해변', '도보', '분', '거리', '위치', '매우', '수영장', '여름', '제주도', '이만', '위치', '이정', '시설', '가격', '경쟁력', '숙소', '거의', '것', '재', '방문', '의사', '새벽', '시', '새벽', '시', '공사', '시작', '사전', '통보', '객실', '바닥', '청소', '상태', '불량', '맨발', '무척', '화장실', '핸드', '워시', '물', '서비스', '모텔', '체크', '인과', '체크', '아웃', '아주', '그냥', '통과', '예약', '접수', '및', '증거', '를', '볼', '수', '체크', '아웃', '룸', '키', '카운터', '이', '전송', '수', '이', '호텔', '전망', '협재', '해변', '곳', '위치', '호텔', '약', '분', '정도', '이', '협재', '해변', '집', '듯', '위치', '객실', '및', '수영장', '등', '시설', '모두', '다만', '일', '직원', '분', '수가', '소로', '중국인', '투숙', '객', '분', '국', '제주', '중심', '지역', '노', '오거리', '차로', '정도', '중산', '지역', '때문', '아주', '경관', '년', '신축', '호텔', '리조트', '시설', '매우', '저', '호텔', '객실', '투숙', '객실', '일단', '좀', '비니', '지스', '호텔', '욕실', '정도', '욕조', '하나', '법', '생수', '병', '회용', '슬리퍼', '개', '무료', '제공', '회용', '칫솔', '치약', '세면', '용품', '제공', '침대', '느낌', '매우', '주변', '것', '때문', '정말', '호텔', '대부분', '비치', '구둣주걱', '구두', '천이', '조금', '의아', '실내', '수영장', '작고', '사우나', '샤워', '시설', '탕', '리조트', '무료', '조식', '뷔페', '우리', '주', '건물', '별개', '가족', '스위트', '아주', '아주', '아주', '주방', '거실', '분리', '욕실', '및', '침실', '마리', '고양이', '만', '별도', '주차', '수', '스위트', '룸', '수영장', '박', '동안', '아무', '날', '밤', '방', '청소', '마치', '해외', '기분', '정도', '여유', '새', '귀', '정원', '꽃', '새소리', '깨', '처음', '요', '객실', '스파', '인테리어', '하나', '하나', '세심', '신경', '흔적', '우리나라', '보기', '리조트', '감히', '말', '조식', '뷰', '서비스', '모두', '모두', '관광지', '사람', '북적', '제대로', '해외', '온', '기분', '매년', '곳', '요즘', '좀', '모습', '곳곳', '아침식사', '꽤', '편입', '니', '스탭들', '매우', '식구', '인테리어', '무척', '다만', '전', '부대', '시설', '축소', '저녁', '곳', '수영장', '아이', '외', '것', '실내', '월풀', '분', '바닷가', '해변', '벤치', '아침', '출장', '나중', '가족', '다시', '한번', '여름', '멀리', '바다', '야외', '풀', '가족', '시간', '제주', '전통', '형태', '지중해', '양식', '듯', '움', '내내', '조식', '제공', '뷔페', '아이', '어른', '저', '아내', '무척', '말', '그대로', '전형', '게스트하우스', '문제', '방이', '한겨울', '이불', '개', '계속', '잠', '가격', '혼자', '여행', '사람', '난방', '방음', '처음', '때', '외국인', '분위기', '금방', '수', '저녁', '외국', '온', '분', '맥주', '이야기', '수', '인상', '대표', '메이', '싱가폴', '오신', '미스터', '장', '모두', '기억', '사업', '정상', '방문', '제주', '여행', '기억', '호스텔', '코리아', '감사', '저', '이마트', '앞', '곳', '시장', '앞', '쪽', '두', '군데', '자', '분', '두', '군데', '관리', '첫날', '저녁', '이마트', '편', '키크', '여자', '맞이', '밤', '라운지', '맥주', '사', '주시', '여행', '오신', '분', '모두', '둘째', '날', '아침', '일보', '낮', '동문', '시장', '쪽', '호스텔', '코리아', '발견', '요시', '지점', '이', '일', '어제', '밤', '분', '또', '거기', '일', '이름', '타샤', '나', '타샤', '것', '망치', '작업', '모습', '기억', '제주도', '여자', '뭐', '성격', '분신', '술', '직원', '다시', '감사', '여관', '펜션', '가격', '시설', '이용', '수', '공항', '거리', '기본', '요금', '정도', '나오니', '저', '최적', '숙박', '장소', '호스텔', '코리아', '화이팅', '다음', '여행', '일정', '방문', '방도', '청소', '관리', '다만', '화장실', '휴지', '요금', '부과', '수건', '주지', '점', '유의', '그', '점', '직원', '아주', '직원', '아침', '식사', '식당', '직접', '운전', '우리', '주기도', '위치', '중심', '다음', '숙박', '생각', '월', '중순', '제', '호스텔', '중', '최악', '에어컨', '때문', '밤', '잠', '수가', '방이', '아주', '후텁', '근해', '방충', '망', '구멍', '송송', '또', '구멍', '해도', '창문', '꽉', '모기', '방', '데', '문제', '밤', '시간', '절반', '정도', '모기', '시간', '마리', '건', '일도', '뿐', '아주', '레스토랑', '술집', '창문', '바로', '밑', '새벽', '시', '영업', '아주', '밤', '접수', '처', '직원', '호스텔', '자체', '객실', '욕실', '겨울', '다시', '수도', '것', '여름', '절대', '가지', '제주시', '부띠', '호텔', '모던', '인테리어', '전체', '어두운편', '자동', '물', '변기', '수압', '인상', '가격', '대비', '시설', '주변', '바다', '가까이', '다만', '바다', '보이', '무난', '호텔', '꽤', '동남', '아시아', '매우', '마을', '측면', '자리', '잡고', '매우', '거리', '레스토랑', '편의점', '인접', '해', '가을', '매우', '바람', '시내', '외곽', '위치', '환경', '서비스', '객실', '정말', '호텔', '결정', '전', '활동', '생각', '어쩌면', '저', '느낌', '다음', '방문', '것', '시도', '최근', '오픈', '호텔', '가치', '슈퍼마켓', '미터', '버스', '정류장', '호텔', '아주', '디자인', '공간', '호텔', '이', '표준', '짐', '준', '안전', '금고', '및', '변경', '다른', '부주의', '직원', '관광지', '장소', '수', '하드', '곳', '찾기', '위해', '침대', '매트리스', '베개', '아주', '수', '만약', '그', '안', '힐링', '잠', '경관', '시간', '고양이', '알파카', '마리', '사람', '경험', '저희', '잠', '자서', '그', '점', '고려', '위치', '만약', '진짜', '관광', '잠', '도심', '안', '부부', '주인', '로그', '파크', '리조트', '시골', '주말', '수', '환상', '장소', '로그', '파크', '정말', '지역', '평화로', '웠', '산', '전망', '직원', '도움', '이', '곳', '지역', '그', '지역', '장소', '제주', '여행', '곳', '경우', '추천', '아이', '데리', '시간', '야생', '동물', '놀', '수', '우리', '첫', '우리', '오두막', '체크', '위해', '때', '우리', '개', '알파카', '로그', '파크', '위치', '애완', '동물', '농장', '우리', '아침', '산책', '위해', '일찍', '일어나서', '농부가', '돼지', '사슴', '염소', '닭', '먹이', '것', '아이', '그것', '것', '이', '장소', '다른', '사면', '매일', '밤', '캠프', '파이어', '를', '소유자', '사용', '수', '장비', '그', '구매', '위해', '메인', '통나무', '집', '음식', '물', '맥주', '구입', '수', '장소', '나', '주말', '동안', '친구', '그룹', '여기', '오기', '호텔', '찾기', '곳', '한라산', '자연', '국립', '공원', '근처', '계획', '사람', '선택', '것', '새', '요리', '수', '주방', '때', '가격', '대비', '하우스', '제주', '꼭', '묵', '전용', '교통', '여행객', '우선', '가격', '대비', '복층', '사용', '층', '더블', '침대', '하나', '싱글', '침대', '하나', '층', '더블', '침대', '하나', '매일', '청소', '수건', '걸', '다만', '점', '화장실', '실리콘', '물때', '좀', '수압', '아침', '매우', '시간', '어', '때', '길', '매우', '어두우', '그거', '외', '친구', '최고', '장소', '말', '그대로', '수', '이', '곳', '공기', '우리', '당나귀', '꿩', '의', '잔디밭', '산책', '자기', '수용', '수', '주방', '일행', '이용', '근처', '편의점', '난방', '시설', '자신', '교통', '수단', '때', '필요', '바오', '젠', '거리', '바로', '가까이', '때문', '식사', '기도', '쇼핑', '매우', '예전', '시내', '좀', '호텔', '투숙', '꼭', '차', '가지', '식사', '만해', '음주운전', '부담', '항상', '시가지', '위치', '공항', '택시', '분안', '거리', '접근성', '음', '주위', '인프라', '곳', '가도', '걱정', '것', '숙소', '시설', '또한', '위생', '시설', '적극', '추천', '함바', '젠', '거리', '위치', '공항', '택시', '타고', '수', '거리', '반대', '호텔', '길', '건너', '신라', '스테이', '앞', '버스', '공항', '금방', '일반', '스탠다드', '룸', '이용', '방이', '청소', '해주시', '분도', '인사', '기분', '다만', '리셉션', '직원', '좀', '더', '것', '태도', '기분', '공항', '택시', '타고', '수', '부담', '거리', '위치', '더블베드', '싱글', '베드', '트윈룸', '이용', '생각', '명', '투숙', '전혀', '다음', '저녁', '비행', '제주도', '도착', '다시', '이용', '생각', '정도', '저희', '곳', '박', '일', '동안', '위치', '저희', '공항', '픽업', '서비스', '각각', '대략', '원', '정도', '로비', '안내', '데스크', '체크', '인과', '체크아웃', '위', '곳', '그', '체크', '때', '저희', '여권', '요구', '확인', '용지', '요구', '체크', '진행', '또한', '저희', '도착', '곳', '손님', '별로', '저희', '본래', '체크', '시간', '오후', '시', '전', '방', '수', '허락', '와이파이', '신호', '로비', '방', '무선', '인터넷', '컴퓨터', '로비', '안내', '데스크', '저희', '여행', '일정', '택시', '투어', '서비스', '제공', '중국말', '수', '운전기사', '원', '영어', '수', '운전기사', '원', '방', '아주', '벽', '텔레비전', '크기', '또한', '방', '수', '정도', '공간', '옷장', '옷', '걸이', '몇', '개', '소파', '오직', '두', '사람', '수', '방', '크기', '전혀', '정도', '각', '방', '미네랄', '워터', '주스', '배치', '이', '호텔', '위치', '아주', '카페', '선술집', '식당', '편의점', '옷', '가게', '화장품', '가게', '모두', '가까이', '때문', '요조', '용한', '지역', '게스트', '하우스', '공항', '버스', '터미널', '및', '도심', '곳', '합리', '아침', '식사', '제공', '객실', '장소', '일간', '만', '것', '우리', '체재', '여기', '게스트', '하우스', '한국인', '침대', '공항', '버스', '정류장', '정거장', '아침', '식사', '일찍', '트레킹', '주인', '또한', '공항', '영빈', '관', '도착', '모든', '방법', '대한', '세부', '정보', '여기', '한국', '택시', '기사', '포함', '프로', '위치', '공항', '쇼핑', '장소', '및', '레스토랑', '바오', '첸', '스트리트', '제주', '버스', '터미널', '영어', '말', '수', '직원', '공항', '아침', '택시', '도움', '곳', '클린', '룸', '직원', '매일', '방', '청소', '아침', '식사', '았습니', '단점', '버스', '터미널', '직진', '버스', '경로', '저', '호텔', '일', '밤', '가족', '위치', '근처', '명소', '거리', '분', '새', '호텔', '매우', '직원', '여행', '제주도', '중간', '위치', '접근성', '것', '예상', '예약', '한라산', '것', '굳이', '한라산', '근처', '숙소', '정', '필요', '것', '고층', '공실이', '배정', '숙소', '일반', '아파트', '구조', '밤', '시간', '바늘', '요청', '호텔', '바늘', '요청', '주기도', '이외', '점', '부대', '시설', '방', '개', '거실', '신청', '체크', '때', '욕조', '방개', '거실', '욕조', '아기', '주변', '것', '것', '골프', '조식', '별로', '일단', '관리', '느낌', '듭니', '위치', '설악산', '쪽', '이', '쪽', '관광', '분', '최적', '리조트', '분', '시간', '미리', '확인', '아침', '조식', '산책로', '창문', '도크', '발코니', '화장실', '수압', '아침', '산책로', '조식', '아주', '저녁', '디너', '한번', '가격', '반찬', '간이', '세지', '안', '편의점', '스파', '끼리', '연결', '통로', '시설', '아침', '산책로', '마음', '듭니', '가족', '가기', '것', '제주도', '출장', '차', '방문', '일단', '로비', '특급', '호텔', '공용', '업무', '도움', '제주', '관광', '책자', '비치', '커피한잔', '정보', '객실', '비치', '침구', '류', '가구', '더블', '침대', '싱글', '침대', '명', '다음', '날', '아침', '식사', '공항', '분', '정도', '전체', '만원', '가격', '이정', '시설', '서비스', '인용', '두', '침대', '더블', '침대', '더블', '싱글', '침대', '경우', '더', '전략', '위치', '편의점', '근처', '커피', '숍', '편의', '시설', '욕실', '채식', '및', '해산물', '옵션', '포함', '무료', '일일', '아침', '식사', '수프', '아주', '김치', '김치', '손님', '용', '주차장', '경우', '다리미', '제공', '호텔', '박', '이상', '렀으', '서비스', '일', '우리', '도착', '주인', '거기', '우리', '시', '호텔', '도착', '청소', '때문', '오후', '시', '방이', '준비', '것', '우리', '매우', '일찍', '체크', '요청', '그', '방', '마술', '원', '이용', '수', '청소', '때문', '사용', '수', '현금', '때문', '나중', '지불', '요청', '일', '호텔', '때', '우리', '로', '환영', '아침', '제발', '고객', '더', '인보이스', '요청', '후', '나중', '수령', '지시', '그', '일', '후', '우리', '그것', '우리', '리셉션', '분', '그', '준비', '비', '때', '우리', '우산', '요청', '그', '임대료', '원', '요구', '실례', '것', '리셉션', '종이컵', '지불', '무료', '호텔', '때', '그', '은', '만', '말', '다시', '번', '달러', '거의', '지출', '후', '안녕', '나', '노력', '효과', '우리', '한국', '일반', '것', '봉사', '거기', '돈', '나', '제주', '나', '지난', '밤', '동안', '공항', '근처', '가장', '보기', '호텔', '때문', '여기', '방', '저', '우리', '셋', '트윈', '룸', '예약', '더블', '침대', '개', '싱글', '침대', '개', '구성', '객실', '욕실', '매우', '그', '모든', '세면', '용품', '치약', '샤워', '젤', '샴푸', '수건', '등', '제공', '걱정', '필요', '그', '미니', '냉장고', '주전자', '가지', '주차', '호텔', '앞', '지하', '주차', '제공', '실수', '경우', '근처', '호텔', '주요', '도로', '인근', '도보', '분', '따라서', '택시', '문제', '또한', '호텔', '근처', '버스', '정류장', '공항', '택시', '분', '소요', '인근', '상점', '제주', '공항', '인근', '호텔', '분', '추천', '여기', '두', '번', '렀습니', '처음', '제주', '때', '싱가포르', '두', '번', '비행', '후', '택시', '분', '로', '매우', '호텔', '주소', '한국어', '표시', '운전', '기사', '의', '호텔', '주소', '입력', '를', '찾기', '두', '우리', '서울', '아침', '출발', '전날', '밤', '두', '번', '모두', '트윈', '룸', '더블', '침대', '싱글', '침대', '호', '방', '새', '크기', '모기', '이중창', '중', '유리창', '샤워', '욕실', '만', '주전자', '칫솔', '치약', '커피', '일본', '호텔', '달리', '침대', '위해', '우리', '개', '트윈', '방', '의', '그룹', '예비', '침대', '위안', '사용', '침대', '위', '나', '우리', '모두', '창문', '때문', '여기', '꽤', '포함', '아침', '식사', '대부분', '한국', '스타일', '우리', '지불', '가격', '위해', '불평', '것', '제주', '서귀포', '다음', '호텔', '인', '데이즈', '호텔', '더', '아침', '식사', '낮', '포함', '매일', '요리', '약간', '변화', '호텔', '위치', '편이', '레스토랑', '인근', '개', '이상', '슈퍼마켓', '인터', '시티', '버스', '인터체인지', '호텔', '매우', '도보', '서문', '시장', '동문', '시장', '버스', '장점', '공항', '단점', '청소', '한겨울', '모기', '방', '마리', '정도', '계속', '잠', '수가', '벽', '모기', '흔적', '침대', '냄새', '제주', '박일', '여행', '중', '하루', '중문', '하루', '오렌지', '트리', '숙박', '가격', '시설', '주변', '소음', '좀', '제', '그', '날', '알', '수', '만요', '간', '휴식', '처', '잠', '여행', '끝', '우리', '호텔', '박', '호텔', '위치', '더', '점', '침대', '매우', '베개', '작고', '방', '나이', '약간', '만', '나이', '우리', '화장실', '기능', '아침', '식사', '최소한', '의', '사무실', '대부분', '압력', '청소', '쿼리', '응답', '및', '예약', '안팎', '압력', '우리', '위치', '매력', '것', '제주도', '여행', '나', '하룻밤', '이', '호텔', '예', '투어', '통해', '예약', '패키지', '일부', '내', '나', '첫날', '여행', '후', '체크', '것', '도착', '때', '내', '예', '투어', '구입', '꾸러미', '벌써', '지불', '응접', '사람', '나', '지불', '노력', '어쨌든', '그것', '분류', '그', '남자', '그', '거기', '나', '그', '휴식', '줄', '것', '이', '호텔', '시가', '위치', '도심', '동문', '시장', '지하', '쇼핑몰', '단', '몇', '분', '거리', '호텔', '나이', '기본', '침대', '매우', '방', '약간', '연기', '냄새', '전반', '장소', '예산', '사람', '위해', '체류', '위해', '제주시', '역사', '시가지', '곳', '수', '편의점', '레스토랑', '카페', '술집', '쇼핑', '교회', '박물관', '등', '대부분', '거리', '작동', '내', '길', '바로', '호텔', '리셉션', '전화', '경우', '객실', '에어컨', '난방', '시설', '욕실', '물', '히터', '사용', '수', '무료', '아침식사', '커피', '커피숍', '판매', '위', '짐', '유물', '또한', '무료', '사용', '수', '분', '차로', '침대', '침구', '침구', '류', '나', '다음', '묵', '곳', '이', '섬', '다시', '방문', '기회', '경우', '다시', '묵', '것', '표준', '트윈', '표준', '트리플', '업그레이드', '방과', '욕실', '매우', '와이파이', '연결', '쇼핑', '거리', '근처', '내', '가까이', '말', '때', '말', '그대로', '근처', '블록', '곳', '나', '위치', '우리', '매우', '나', '매우', '그것', '무료', '아침', '식사', '당신', '편의점', '카페', '구석', '걱정', '필요', '그', '당신', '당일', '치기', '여행', '위', '교통', '편', '제공', '투어', '택시', '요금', '하루', '원', '전반', '경험', '매우', '매일', '밤', '수', '장점', '객실', '욕실', '버스', '정류장', '근처', '위치', '호텔', '가격', '무료', '무선', '인터넷', '단점', '수건', '레스토랑', '카페', '호텔', '직원', '영어', '구사', '하우스', '키핑', '기본', '요청', '출장', '직원', '안내', '이간', '직원', '맘', '낮', '때문', '정신', '저녁', '휴가', '온', '기분', '담', '가족', '는걸', '숙소', '예약', '걱정', '내부', '시설', '보고', '결정', '가격', '부대', '시설', '협재해변', '나름', '다음', '와이프', '협', '해변', '인근', '부동산', '문제', '제주', '갑자기', '가게', '혼자', '하루', '더', '제주', '리조트', '수기', '정상', '요금', '건물', '좀', '조명도', '복도', '느낌', '해변', '거리', '차로', '약', '분', '정도', '뒷마당', '수영장', '잔디밭', '잠시', '하늘', '보고', '시간', '내겐', '여름', '본격', '시작', '사람', '수', '온수', '가격', '대비', '곳', '뭐', '곳', '아주', '급', '고급', '호텔', '쉬', '때', '가족', '펜션', '콘도', '급', '방도', '하니', '가족', '단위', '실속', '만점', '숙소', '바퀴벌레', '마리', '낮', '물놀이', '땐', '밤', '쯤', '발코니', '마리', '문', '방안', '마리', '컵', '엎어두', '아침', '일찍', '체크아웃', '카운터', '계', '신분', '말', '달', '번', '방역', '주변', '산이', '대요', '호텔', '바퀴', '바퀴', '신분', '추천', '한림', '다소', '외곽', '위치', '제주', '정취', '베니키아', '더', '제주', '추천', '친철', '데스크', '직원', '조경이', '무척', '비지니스', '단체', '여행', '대형', '세미나', '실과', '체력', '실', '수영장', '등', '부대', '시설', '시간', '주의', '사항', '흡연', '분', '구내', '매점', '담배', '판매', '꼭', '구매', '후', '체크', '한림', '위치', '샴푸', '바디', '워시', '드라이기', '호텔', '드라이기', '숙소', '예약', '여행', '내내', '기분', '가격', '기대', '하나', '바닷가', '도', '뷰', '노을', '건', '정말', '직원', '신축', '건물', '객실', '마음', '층', '바다', '보이', '전망', '가격', '숙소', '주인', '분', '매우', '매우', '버스', '잔돈', '걱정', '문제', '해결', '룸', '컨디션', '매우', '방이', '온돌', '뜨근뜨근', '수', '뷰', '제주도', '진', '풍경', '수', '매우', '만족', '최근', '리', '모델링', '건', '건물', '조식', '천원', '가격', '사장', '것', '것', '다음', '방만', '쪽', '이용', '예정', '다애', '월', '바다', '바로', '앞', '오션', '뷰', '숙소', '예약', '아보', '예약', '위치', '바다', '루프', '탑', '풀', '빌라', '수풀', '역시', '맘', '이번', '제주', '여행', '숙소', '뷰', '제일', '우선', '예약', '뷰', '스파', '내부', '인테리어', '집', '분위기', '바다', '수풀', '최고', '다애', '월', '바다', '바로', '앞', '위치', '전망', '바다', '스파', '스위트', '수풀', '호텔', '완전', '럭셔리', '호텔', '제주', '워낙', '숙박시설', '고민', '지인', '통해', '숙박', '럭셔리', '게', '테', '차', '수', '바닷가', '앞', '호텔', '주변', '아침', '운동', '호텔', '앞', '카페', '멀리', '가지', '호텔', '주변', '수', '밥', '객실', '다시', '쉬', '직원', '호텔', '내', '특산', '품', '매장', '사장', '꼭', '단체', '관광객', '곳', '아침', '밤', '리조트', '소음', '방', '청결', '상태', '호텔', '분', '다른', '곳', '시설', '조금', '도로', '호텔', '직원', '새', '시설', '신분', '다른', '호텔', '이용', '호텔', '이', '호텔', '것', '박', '일', '제주', '오름', '투어', '일정', '박', '대중교통', '이용', '시', '분', '정도', '거리', '위치', '조금', '코스', '위치', '렌트', '코', '대중교통', '이용', '길', '탐방', '인', '게스트', '하우스', '이용', '시', '면', '가격', '대비', '괜', '가격', '대비', '관광지', '접근성', '단지', '주차장', '직원', '쉬', '지은지', '좀', '가격', '모텔', '시설', '거부', '감', '가족', '공항', '랜트카', '택시', '분', '정도', '주변', '편의점', '및', '맛집', '꽤', '여행', '시작', '장소', '모든', '객실', '오션', '뷰', '작', '맛', '주차', '시설', '자리', '건물', '편', '주차', '시설', '호텔', '내', '편의', '시설', '맛사지', '에스테', '사우나', '여행', '피로', '사우나', '방법', '꼭', '숙박', '특색', '가격', '시설', '장점', '출장', '건물', '외관', '복도', '카페트', '등', '방', '시설', '가격', '주변', '편의점', '빵집', '등', '해안', '도로', '산책', '수', '위치', '호텔', '분', '위치', '주위', '환경', '반대편', '이마트', '카페', '식당', '다만', '룸', '컨디션', '윗방', '화장실', '물', '소리', '계속', '숙면', '취할수', '가격', '한국', '온돌', '바닥', '방', '자', '이', '객실', '정말', '이', '곳', '기분', '카지노', '아주', '가까이', '가게', '길', '분', '정도', '위치', '아주', '점', '곳', '우리', '이', '호텔', '이서', '이틀', '밤', '우리', '단체', '관광', '대로', '위치', '가격', '추천', '것', '말', '대부분', '또', '유저', '말', '듯이', '아시아', '기준', '방', '화장실', '제대로', '사람', '방', '화장실', '것', '선호', '듯', '방이', '복도', '물', '방', '히터', '잠도', '수', '여기', '사람', '최악', '호텔', '그', '말', '이', '호텔', '제대로', '설명', '주지', '그', '사람', '침대', '이', '것', '우리', '것', '바로', '앞', '거리', '버스정류장', '함덕', '김녕해변', '뚜벅', '여행자', '렌트카', '여행자', '모두', '곳', '친구', '여행', '수도', '담소', '나누기', '곳', '인도', '인테리어', '사장', '매일', '청소', '덕분', '상태', '유지', '곳', '돌담', '제주', '집', '채', '정성', '집안', '방안', '마당', '음악', '향', '맞이', '공간', '소란', '월', '정리', '함덕', '사이', '자리', '복리', '인지', '더', '평화', '곳', '아침식사', '봄날', '다시', '부부', '기분', '시설', '또한', '리', '모델링', '내부', '인도', '스타일', '인테리어', '맘', '마스코트', '윈디', '기여', '웠', '또', '샨티', '샨티', '마지막여행', '밤', '게스트하우스', '시골', '집', '듯', '편안함', '하루', '숙소', '예약', '곳', '제', '사전', '검색', '간', '다른', '숙소', '다만', '네이버', '검색', '엔진', '찾기', '뿐', '그', '동네', '못', '것', '게스트하우스', '전체', '분위기', '그', '분위기', '사장', '미소', '시설', '조명', '향', '음', '모든', '것', '제', '일', '제주', '중', '가장', '밤', '조식', '상큼', '샐러드', '계란', '강력', '추천', '저', '음주', '가무', '힐링', '술', '숙면', '취하', '분위기', '것', '바다', '바로', '앞', '호텔', '뒷쪽', '길', '식당', '개', '마트', '까페', '펍등', '저녁', '산책', '거리', '올리브영', '매장', '맘스', '터치', '번가', '피자', '생', '돈까스', '등', '배달', '음식점', '바다', '앞', '잔디밭', '저녁', '산책', '기도', '정말', '방문', '건의', '사항', '객실', '전등', '형광등', '색', '스탠드', '구색', '불빛', '다소', '함덕', '해수욕장', '바로', '앞', '아이', '정말', '다시', '방문', '의사', '근처', '현재', '공사', '닭머르', '스위스', '마을', '돌', '문화', '박물관', '산굼부리', '에코랜드', '등', '화쪽', '해녀', '박물관', '호텔', '뒷쪽', '합리', '가격', '식당', '굳이', '맛집', '주택가', '사이', '덕림사', '사찰', '아주', '오션', '뷰', '방', '예약', '뷰', '수', '직원', '모두', '청결', '도도', '기기', '좀', '연식', '에어콘', '소리', '가족', '방문', '인', '방이', '인', '객실', '유럽', '설계', '것', '옛날', '건물', '시설', '전반', '유럽', '설계', '오히려', '호텔', '위치', '제주시', '꽤', '가야', '점', '객', '경치', '근처', '바닷가', '접근성', '오션', '뷰', '가장', '최적', '호텔', '바로', '앞', '함덕', '해수욕장', '요즘', '델문', '카페', '바로', '오분', '거리', '함덕', '해수욕장', '위치', '곳', '좀', '가성', '비', '비치', '뷰', '호텔', '밤', '어선', '불빛', '보이', '우리', '시', '다음', '날', '비행기', '이', '호텔', '예약', '이', '호텔', '제주', '국제', '공항', '분', '거리', '체크', '때', '영어', '이야기', '수', '그', '우리', '샤워', '우리', '드라이브', '일', '수기', '한국', '처음', '우리', '눈', '우리', '마음', '방', '전망', '층', '스타벅스', '보너스', '저', '제', '가족', '단위', '가운데', '하룻밤', '수준기', '우리', '방', '의', '바로', '위', '호텔', '화이트', '하우스', '표지판', '앞', '호텔', '위치', '이', '호텔', '도착', '키', '코드', '기본', '이', '호텔', '선택', '때문', '약', '분', '드라이브', '제주', '공항', '시', '출발', '다음', '날', '아침', '위', '스타벅스', '우리', '아침식사', '스낵', '처리', '또한', '레스토랑', '식당', '수', '서해안', '댐핑할', '호텔', '위치', '곳', '오른쪽', '이', '곳', '용두암', '록', '명소', '호텔', '오른쪽', '수', '비치', '호텔', '앞', '바위', '주차', '무료', '제공', '주차장', '드라이브', '입장', '대신', '길', '호텔', '뒤쪽', '고객', '해당', '그', '후', '짐', '가지', '엘리베이터', '로비', '통로', '엘리베이터', '타고', '층', '체크', '카운터', '어디', '예', '수준', '때문', '스타벅스', '로비', '수준기', '호텔', '직원', '호텔', '프런트', '직원', '그', '중국어', '중국', '은', '영어', '거의', '호텔', '방', '제', '첫', '호텔', '매우', '천장', '수직', '공간', '방', '과장', '수평', '침실', '화이트', '컬러', '인상', '문서', '및', '벽', '천장', '퀸', '사이즈', '침대', '개', '나무', '테이블', '소파', '앤티크', '나무', '의자', '화장', '의', '거울', '및', '헤어', '드라이기', '냉장고', '주전자', '쌍', '슬리퍼', '마련', '체크', '호실', '마지막', '밤', '호텔', '체크', '데스크', '바로', '옆', '방', '말', '그대로', '생각', '때문', '수', '기', '때문', '우리', '수', '우리', '그것', '이', '호텔', '예약', '물가', '풍경', '고', '우리', '모든', '벽', '파란색', '공사', '사진', '우리', '창', '스타벅스', '드라이브', '통해', '사람', '불안', '때문', '실제', '방', '커피', '수', '저녁', '나', '방', '담배', '냄새', '나', '것', '프런트', '데스크', '대해', '이', '호텔', '금연', '실', '그', '나', '이야기', '해', '창', '열', '수', '희망', '의', '진정', '창', '분사', '그', '냄새', '우리', '그', '연기', '냄새', '화장실', '것', '알', '문', '그', '화장실', '아주', '내부', '프론트', '데스크', '전화', '그', '사람', '다시', '볼', '수', '나', '자신', '말', '그대로', '문', '앞', '해', '문', '그', '위로', '어깨', '으쓱', '저', '말', '냄새', '나', '그', '우리', '위해', '팬', '것', '요청', '다른', '방', '이동', '수', '계산', '때문', '이전', '직원', '전체', '앞', '도착', '때', '이', '소리', '잠', '소형', '착암기', '직원', '저희', '통보', '것', '우리', '경고', '것', '공사', '현장', '시작', '작업', '항질', '염성', '탄식', '전반', '호텔', '시설', '위치', '우리', '바다', '가운데', '전망', '그냥', '벽', '통해', '층', '스타벅스', '매우', '우리', '방', '매우', '꽤', '공항', '옆', '위치', '호텔', '아침', '일찍', '비행기', '약간', '소음', '수', '모든', '약', '여러', '식사', '옵션', '몇', '가지', '단점', '것', '영어', '체크', '시', '도착', '때', '사막화', '사람', '명령', '수', '몇', '번', '나', '분', '아무', '것', '전화', '번호', '그', '후', '체크', '카운터', '하나', '나', '그', '소리', '방', '링잉', '직원', '및', '바로', '뒤', '이', '모든', '것', '좀', '어쨌든', '체크', '수', '게', '에어컨', '버튼', '모두', '한글', '빨간색', '파란색', '기호', '방', '문', '창', '다음', '온', '침대', '박스', '스프링', '매트리스', '의', '두', '밤', '매트', '로', '침대', '위', '패딩', '도움', '이해', '비판', '전형', '한국', '호텔', '한국', '호텔', '그냥', '조심', '경우', '언어', '통역', '문제', '수', '다시', '여기', '묵', '것', '요청', '위', '몇', '가지', '질문', '카드', '준비', '골프장', '온', '호텔', '주차', '내부', '시설', '제주', '도착', '자고', '사우나', '다음', '날', '시작', '애월', '협제', '새벽', '우동', '예약', '가기', '이번', '온', '호텔', '리조트', '숙소', '정', '리조트', '예약', '사용', '중', '최대', '명', '사용', '크기', '명', '사용', '공간', '여유', '주방', '시설', '화장실', '시설', '아주', '한라산', '애월', '해변', '한림', '공원', '등', '인기', '관광', '명소', '의', '접근성', '호텔', '건물', '사우나', '시설', '가족', '모두', '곳', '라며', '대가족', '명', '이상', '여행', '시', '추천', '만', '숙소', '생각', '친구', '번개', '골프', '투어', '위해', '호텔', '이용', '골프텔', '클럽', '하우스', '위치', '중간', '편의점', '수영장', '저희', '이용', '곳', '동인', '데', '방개', '침대', '화장실', '방', '거실', '레시', '회', '마늘', '치킨', '한라산', '소주', '아침', '클럽', '하우스', '가시', '조식', '세트', '예전', '타이거우즈', '방문', '타이거우즈', '세트', '외', '성게', '미역국', '우거지', '해장국', '등', '취향', '란딩', '여름', '다시', '한번', '보고', '협재금능', '해수욕장', '수', '방', '비양도', '를', '볼', '수', '뷰', '수영장', '수질', '관리', '느낌', '차', '호텔', '제공', '공항', '무료', '셔틀', '버스', '타고', '푹', '쉬', '친구', '도', '수', '아마', '가족', '끼리', '여름', '피', '겸', '오시', '것', '다만', '호텔', '층', '식당', '정말', '해', '조식', '별로', '리조트', '시설', '상태', '골프', '수', '숙박', '사우나', '물놀이', '시설', '이용', '가능', '금늘', '해수욕장', '가까이', '여름', '즐', '기기', '합당', '함', '공항', '셔틀', '운행', '함', '제주시', '도심', '중심', '공항', '정말', '건물', '리', '모델링', '숙박', '만원', '사람', '아침식사', '제공', '담', '꼭', '이용', '호텔', '객실', '심플', '사용', '직원', '조식', '주차장', '호텔', '맞은편', '무료', '주차장', '이용', '호텔', '앞', '안내', '표지판', '더', '참고', '인도', '온', '관광객', '공항', '근처', '예약', '직원', '예약', '명단', '누락', '당황', '빈', '방이', '하나', '찻길', '옆', '소리', '저', '잠', '제대로', '하루', '정도', '가격', '우리', '그룹', '여행', '때', '체크', '우리', '방', '층', '기본', '시설', '기본', '아침', '방', '꽤', '외부', '하루', '후', '침대', '겨울', '방', '때', '문제', '우리', '방과', '그', '밖', '모든', '것', '접수', '결석', '약간', '소음', '잠시', '후', '것', '이', '장소', '재료', '색상', '선택', '호텔', '수', '것', '다른', '것', '년대', '사무실', '호텔', '영화', '무작위', '디자인', '느낌', '품질', '관리', '스티커', '대부분', '벽', '천장', '패널', '부착', '음식', '설명', '포함', '아침', '식사', '뷔페', '실제', '빵', '계란', '수', '음', '의미', '물', '외', '것', '차', '커피', '스프', '영진', '작성', '통지', '첨부', '사진', '참조', '조식', '토스트', '수프', '계란', '튀김', '및', '기타', '몇', '가지', '당신', '무슬림', '단어', '그것', '향', '화살표', '렌트', '룸', '천장', '페인트', '고정', '필요', '나', '한국', '다른', '호텔', '다른', '곳', '그것', '보지', '인터넷', '그것', '일종', '것', '번', '약', '초', '이상', '작동', '번', '하나', '장치', '제한', '것', '보임', '제주도', '공공', '장소', '무료', '를', '제공', '모든', '동작', '이유', '상자', '체크', '가격', '정도', '시설', '난방', '시', '이전', '별도', '난방', '장치', '전달', '별도', '난방', '장치', '수', '편이', '호스텔', '가격', '제주', '전체', '가격', '생각', '가격', '가성', '비', '최강', '숙소', '아침', '식사', '식당', '몇', '때문', '아침', '바로', '앞', '편의점', '것', '언제', '수', '환경', '여행지', '거리', '약간', '주차', '약간', '호스텔', '가격', '다른', '서비스', '생각', '것', '정도', '서비스', '숙소', '퀄리티', '다른', '분', '무료', '조식', '조식', '일', '당', '천원', '저', '신청', '아침', '천원', '이상', '퀄리티', '제공', '때문', '조식', '근처', '식당', '가기', '분', '제공', '조식', '이용', '것', '위치', '시설', '가격', '생각', '안', '티비', '샴푸', '린스', '바스', '드라이어', '등등', '다행', '와이파이', '사장', '기분', '묵', '수', '잠깐', '가성', '비', '숙소', '추천', '친구', '둘이서', '트윈룸', '박', '만원', '안', '가격', '조식', '포함', '객실', '층', '카페', '분위기', '가격', '가성', '비', '짱', '호텔', '친구', '여행', '커플', '여행', '모두', '추천', '화장실', '일단', '가성', '비', '일', '분', '사장', '보이시', '분', '조식', '셀프', '토스트', '계란후라이', '직접', '약간', '셀러드', '우유', '콘후', '레이크', '가격', '생각', '장말', '조식', '층', '카페', '식', '차', '저녁때', '맥주', '마시기', '바로', '앞', '편의점', '다만', '좀', '건물', '방이', '욕실', '드라이기', '냉장고', '있을껀', '욕실', '샴푸', '바디', '워시', '비누', '칫솔', '치약', '준비', '카운터', '칫솔', '치약', '선', '판매', '약간', '단점', '분명', '가격', '대비', '생각', '정말', '호스텔', '생각', '박', '원', '친구', '둘이서', '가격', '정말', '시설', '세면', '도구', '비치', '체크', '시', '칫솔', '치약', '주어', '또', '방', '와이파이', '라우터', '와이파이', '거기', '아침', '조식', '수', '하루', '시작', '수', '호스텔', '바로', '앞', '편의점', '간식', '거리', '사', '수', '또', '호스텔', '바로', '앞', '길', '버스정거장', '버스', '여행', '단', '엘리베이터', '짐', '조금', '것', '객실', '방음', '조금', '공항', '위치', '면', '호텔', '월풀', '욕조', '단', '층', '고가', '뷰', '점', '좀', '사진', '것', '건물', '외관', '내부', '정돈', '침구', '류', '위치', '공항', '바다', '거리', '마지막', '날', '일찍', '기회', '또', '사장', '가족', '여행', '제주도', '숙박', '바닷가', '뷰', '정말', '신축', '건물', '디자인', '고려', '시설', '다시', '한번', '방문', '제주', '여행', '마지막', '날', '체크', '위치', '뷰', '첫째', '예약', '하자', '마자', '호텔', '연락', '확인', '스페셜', '것', '예약', '신경', '둘째', '사진', '리조트', '분위기', '직원', '정말', '결혼식', '신혼여행', '이야기', '방', '와인', '배달', '하나', '하나', '신경', '직원', '감동', '자체', '수영장', '놀', '생각', '아이', '포함', '가족', '여행', '것', '젤', '자체', '완전', '만족', '뭐', '제주도', '애월쪽', '강력', '추천', '패밀리', '룸', '바다', '전망', '침실', '객실', '작은방', '화장실', '개', '것', '해', '인덕션', '주방', '쇼파', '거실', '가장', '건', '창문', '바다', '보이', '정원', '리조트', '매력', '특급', '수준', '관리', '가격', '생각', '준수', '침대', '공간', '가족', '수영장', '다만', '여기저기', '세심', '보수', '가격', '방', '상태', '화장실', '샤워', '기', '물때', '청소', '좀', '신경', '수영장', '물', '사람', '별로', '수영', '정말', '라커룸', '왜', '관리', '곰', '무지막지', '가격', '모두', '용서', '이제', '수영장', '폐장', '때문', '아주', '가격', '굳이', '필요', '생각', '리조트', '마레', '보', '비치', '호텔', '이용', '애월', '거의', '호텔', '인테리어', '인상', '호텔', '단', '해변', '저녁', '주변', '파티', '게스트하우스', '소음', '조금', '내부', '시설', '침구', '류', '우리', '곳', '하룻밤', '공항', '근처', '것', '택시', '타고', '분', '공항', '약', '원', '우리', '방', '좀', '침대', '샤워실', '화장실', '세면대', '팬', '이', '조합', '샤워실', '구분', '파티션', '모든', '것', '나', '이', '호텔', '수', '파악', '수', '전체', '평균', '호텔', '다시', '호텔', '일', '밤', '공항', '매우', '약', '분', '버스', '주요', '쇼핑', '거리', '분', '거리', '호텔', '시간', '이상은', '호텔', '차', '타고', '매우', '택시', '타고', '화산', '방', '매우', '매우', '우리', '우리', '방', '화장실', '음식', '음료', '수', '곳', '저녁', '식사', '밤', '음식', '문제', '도', '편의점', '수', '공항', '운전', '제주도', '여행', '추천', '따라서', '문제', '거리', '처음', '한국', '여행', '우리', '일', '한국', '제주', '강남', '우리', '호텔', '중이', '최고', '이', '객실', '문자', '최신', '프론트', '데스크', '직원', '아주', '사람', '문제', '은행', '카드', '가지', '때', '제', '여자', '친구', '국제', '로컬', '취출된', '직원', '무료', '서비스', '주장', '이', '주장', '우리', '방이', '청구', '호텔', '쇼핑', '지역', '근처', '위치', '젠', '충돌', '시', '바오', '거리', '쇼핑', '거리', '바로', '코', '앞', '레스토랑', '카페', '식당', '철손', '직원', '매우', '그', '곳', '수', '또한', '그', '남아', '핸드폰', '이나', '다시', '때', '수집', '및', '보상', '충성', '게', '거절', '사진', '좀', '엉망', '매우', '가격', '성능', '비', '호텔', '실용', '분', '추천', '방도', '더블', '싱글', '침대', '방', '혼자', '아침', '식사', '한식', '토스트', '모텔', '여기', '강', '공항', '내부', '편입', '니', '조식', '만', '중국', '손님', '맣', '걸', '중국', '단체', '여행', '숙소', '활용', '듯', '싱글', '침대', '개', '방이', '관광', '호텔', '하진', '하룻밤', '쉬', '시내', '교통', '편리', '객실', '매우', '크기', '무료', '수건', '주전자', '냉장고', '및', '헤어', '드라이어', '제공', '수건', '매일', '병', '물이', '방', '배달', '아침', '식사', '오전', '시부', '터', '아침', '시', '일찍', '시도', '번만', '시도', '음식', '버터', '빵', '일종', '두부', '국수', '우리', '이웃', '편의점', '매일', '아침', '식사', '제공', '때문', '역', '겹', '점', '무료', '버스', '터미널', '길', '아래', '숙박', '품격', '아침', '식사', '업그레이드', '다시', '여기', '호텔', '리셉션', '직원', '영어', '우리', '통신', '아주', '아침', '식사', '환경', '호텔', '내', '기대', '못', '호텔', '예약', '은', '우리', '사진', '온라인', '때문', '알', '이', '더블', '침대', '욕실', '욕조', '우리', '자신', '미니', '냉장고', '이', '곳', '분', '정도', '바다', '실제', '해변', '창문', '바다', '볼', '수', '단점', '구성', '침대', '꽤', '비치', '스토리', '호텔', '하룻밤', '처음', '도착', '때', '제주도', '위치', '호텔', '바다', '전형', '한국인', '현지', '스타일', '중간', '가격', '호텔', '예', '욕실', '리넨', '베드', '커버', '등', '객실', '와이파이', '작동', '제', '생각', '약간', '시즌', '오프', '레스토랑', '식료품점', '해변', '한국어', '안내', '판이', '찾기', '약간', '뿐', '더', '그랜드', '호텔', '건너편', '해변', '찾기', '공항', '근처', '위치', '도착', '하루', '듯해', '가격', '대비', '룸', '컨디션', '중국인', '지은지', '얼', '마안', '옥상', '공항', '도보', '시내', '한눈', '화장실', '샤워실', '세면대', '분리', '친구', '끼리', '사용', '볼일', '보고', '바로', '샤워', '남편', '좀', '대요', '침대', '매트리스', '호텔', '뒤척', '도', '옆', '사람', '침대', '끝', '다른사람', '기우', '정도', '침대', '별로', '조식', '종류', '음식', '하나', '하나', '정말', '제대로', '조리', '느낌', '체적', '사전', '결제', '예약', '면서', '산', '전망', '방', '예약', '체크', '때', '완전', '전망', '꽉', '방', '기분', '완전', '예약', '완전', '출장', '시내', '중심', '위치', '책상', '위', '콘센트', '노트북', '작업', '침대', '화장실', '샤워', '공간', '분리', '인', '이상', '이용', '가격', '매우', '매우', '호텔', '위치', '매우', '화장실', '객실', '모두', '주차', '타워', '주차', '걱정', '안해', '다만', '조식', '조금', '다방', '명', '투썸', '카페', '바로', '옆', '길', '쇼핑', '거리', '아주', '위치', '공항', '근처', '택시', '수', '호텔', '공항', '택시', '공항', '호텔', '가격', '대비', '성능', '수', '거리', '돼지', '고기국수', '등', '맛집', '공항', '위치', '장점', '제주도', '오후', '도착', '수', '소셜커머스', '통해', '예약', '수', '체크', '때', '무료', '룸', '업그레이드', '룸', '컨디션', '꽤', '다만', '샤워', '나니', '욕실', '냄새', '조금', '합리', '가격', '비', '시설', '볼', '수', '것', '담배', '냄새', '호텔', '모텔', '환기', '전혀', '침구', '방', '전체', '담배', '냄새', '정말', '내내', '기분', '공항', '택시', '분', '거리', '위치', '비지니스', '스타일', '호텔', '체크', '인시', '프론트', '외국인', '로', '외국인', '응대', '또한', '시설', '정말', '무난', '수준', '청결', '도', '제', '방문', '때', '앞', '건물', '공사', '인지', '아침', '중장비', '기계', '소음', '저녁', '제주', '시내', '분', '정도', '식사', '해결', '호텔', '바로', '옆', '조그만', '슈퍼마켓', '이번', '제주', '여행', '미국', '아들', '상황', '무엇', '안전', '제', '아들', '환전', '문제', '분실', '문제', '발생', '호텔', '박', '과장', '이하', '여러분', '도움', '해결', '손님', '가족', '앳눈', '호텔', '직원', '여러분', '얼마나', '무조건', '별', '개', '호텔', '쇼핑', '지역', '가까이', '위치', '디자인', '현대', '직원', '우리', '요청', '것', '영어', '의사소통', '수', '직원', '정말', '택시', '운전사', '의사소통', '어려움', '요청', '직원', '우리', '단지', '조금', '점', '세면대', '화장실', '침대', '옆', '것', '베개', '물렁거리', '방안', '와이파이', '무료', '수', '웹페이지', '한국말', '비밀번호', '사용', '만약', '직원', '물어', '것', '우리', '직원', '제주', '동안', '인터넷', '필요', '때문', '남편', '나', '제주', '불', '축제', '동안', '곳', '하룻밤', '달러', '요금', '그', '요금', '가격', '방', '현대', '직원', '항상', '호텔', '도착', '후', '아침', '자동차', '렌트', '결정', '호텔', '직원', '자동차', '랜트', '회사', '전화', '것', '준비', '택시', '주어', '자동차', '랜트하', '곳', '수', '해', '호텔', '공항', '분', '정도', '수', '도심', '블럭', '정도', '가면', '도심', '몇개', '나이트', '클럽', '거리', '하나', '전부', '만약', '둥근지붕', '건물', '무엇', '확인', '호텔', '분만', '박', '동안', '여기', '나', '방', '제주', '시내', '위치', '낮', '밤', '수', '밤', '배', '때', '것', '잡', '수', '시', '가까이', '직원', '매우', '도움', '요리사', '팀', '나', '여기', '것', '다시', '제주', '가면', '여기', '것', '고려', '것', '정말', '시설', '내', '이', '선택', '공항', '이유', '매우', '조금', '침대', '기숙사', '객실', '하나', '침대', '개', '침대', '개', '방', '안', '모든', '설비', '거실', '가지', '공용', '공간', '제주', '여행', '동안', '개인', '추구', '경우', '꽤', '곳', '여성', '및', '남성', '객실', '구분', '층', '여자', '남자', '층', '사용', '나', '원', '달러', '하룻밤', '예약', '조금', '직접', '예약', '온라인', '예약', '다른', '아이러니', '나', '여행', '다른', '유럽', '여행', '매우', '아침', '식사', '침대', '담요', '시트', '플러스', '한국', '당신', '나', '이틀', '전', '여기', '방문', '정말', '시간', '모든', '직원', '아주', '곳', '도', '추천', '더', '바비큐', '파티', '가장', '이벤트', '꼭', '때', '거기', '시설', '정말', '모두', '나무', '침대', '화장실', '저', '투어', '그룹', '클레어', '환영', '케', '다른', '직원', '객실', '카페', '호스텔', '바로', '앞', '위치', '돼지', '전문점', '햄버거', '감자', '튀김', '커피', '맥주', '점심', '식사', '직원', '손님', '저녁', '게임', '참가', '경쟁', '체험', '이', '호스텔', '매우', '서귀포', '두', '개', '주요', '폭포', '항구', '음식', '거리', '및', '게스트', '하우스', '제주', '공항', '매우', '대중', '버스', '수', '게스트하우스', '근처', '검사', '인텔', '관리자', '기본', '작동', '수', '영어', '매우', '협조', '정보', '수', '곳', '주인', '밤', '그', '정보', '아주', '방과', '화장실', '매일', '청소', '곳', '욕실', '남녀', '나', '문제', '발생', '정말', '호스텔', '주인', '나', '더', '곳', '나', '운', '좀', '혼합', '기숙사', '룸메이트', '잠', '수', '우이', '집', '유충', '돌', '밀', '초가', '집', '매우', '실내', '및', '실외', '집주인', '주방', '제공', '대의', '자전거', '이용', '수', '세탁기', '호텔', '매트리스', '비교', '수', '매트리스', '가장', '식료품', '점', '도보', '거리', '택시', '집주인', '제주', '최대', '속도', '아무', '타지', '것', '레프트', '핸더', '게스트하우스', '제주', '시골', '교외', '지역', '정말', '추천', '서귀포', '제주시', '버스', '탈', '수', '정류장', '근처', '이용', '데', '무리', '게스트하우스', '근처', '일출봉', '성산', '일출봉', '피닉스', '아일랜드', '곳', '건물', '서귀포', '제주시', '지역', '다른', '맛', '게스트하우스', '사장', '무료', '오름', '체험', '수', '저희', '시간', '사장', '지역', '관해', '알', '서귀포', '제주시', '방법', '주변', '경관', '대한', '정보', '날씨', '날', '근처', '바닷가', '해녀', '제주', '여성', '잠수부', '기리', '해녀', '박물관', '것', '곳', '시골', '이기', '때문', '버스', '정류장', '근처', '편의점', '제외', '레스토랑', '상점', '게스트하우스', '저녁', '위해', '것', '호스텔', '사장', '저녁', '수도', '무료', '전반', '잠시', '도시', '정말', '패밀리', '스위트', '룸', '박', '일', '제주도', '여행', '위', '북', '동부', '쪽', '서비스', '중', '저녁', '식사', '수', '주인', '요리', '마지막', '밤', '식당', '수', '가치', '합리', '가격', '곳', '박물관', '체크', '아웃', '이', '게스트하우스', '추천', '정돈', '통풍', '더', '나은', '개선', '경우', '주방', '거실', '절곡', '절', '곡부', '내', '마지막', '봄', '도착', '이', '게스트하우스', '주인', '꽤', '저녁', '우리', '그', '수', '매우', '우리', '포기', '다음', '몇', '활용', '몇', '가지', '레스토랑', '제공', '돼지고기', '여기', '그', '또한', '우리', '차로', '레스토랑', '음식', '볼', '수', '것', '우리', '방', '정말', '우리', '여행', '해', '몇', '가지', '크레이터', '스', '게스트', '하우스', '그', '후', '우리', '차', '가버', '가장', '마음', '숲', '동굴', '김녕', '미로', '공원', '해변', '바다', '바람', '불어', '운전', '전반', '나', '별', '호의', '리뷰', '곳', '정말', '직원', '마치', '집', '빵', '치즈', '러브', '여기', '벤치', '밤', '집앞', '사람', '추천', '생각', '가지', '매일', '등산', '성산', '강추', '서울', '가기', '전', '성산일출봉', '해녀', '박물관', '등', '주요', '관광지', '이', '호텔', '박', '위치', '도심지', '근처', '이마트', '현지', '음식점', '여럿', '객실', '냉', '온수', '정수기', '와이파이', '인터넷', '슬리퍼', '등', '비치', '품', '체크', '인도', '아무', '문제', '방', '매우', '두', '명', '욕실', '매우', '욕조', '샤워실', '및', '화장실', '별도', '세면대', '앞', '추가', '객실', '바닥', '난방', '시설', '요청', '수', '바닥', '프론트', '데스크', '더블', '침대', '매트리스', '이', '방', '방음', '수', '때문', '아침', '조금', '움', '단점', '아침', '식사', '수', '맥도날드', '주변', '레스토랑', '점', '호텔', '제주', '국제', '공항', '매우', '위치', '전략', '지안', '바오', '거리', '좀', '호텔', '근처', '위치', '이마트', '근처', '맥도날드', '방이', '가격', '지불', '직원', '매우', '협조', '영어', '그', '사람', '전화', '쇼핑', '장소', '근처', '호텔', '식당', '위치', '백화점', '수', '뿐', '편의점', '분', '정도', '곳', '위치', '저', '재미', '라면', '방', '수', '욕실', '욕조', '침실', '공간', '곳도', '정도', '짐', '실행', '수', '와이드', '인터넷', '기본', '모든', '것', '심지어', '펜', '데스크', '직원', '매우', '도움', '또한', '귤', '이', '바구니', '제주', '서명', '제품', '접수', '데스크', '무료', '수', '정말', '동정', '내', '요청', '핑크', '룸', '다음', '곳', '방', '욕실', '우리', '방', '매일', '전체', '지속', '시간', '내', '체크', '시', '호텔', '방', '예약', '하라', '직원', '영어', '수', '중국어', '구사', '직원', '아침', '운', '우리', '가지', '기본', '중국어', '수', '이해', '수', '호텔', '신라', '면세점', '과', '시내', '거리', '산책', '직원', '주장', '제주도', '여행', '관광지', '때', '시티', '투어', '버스', '방법', '안내', '버스', '작성', '관광명소', '누구', '한국어', '가격', '위치', '자랑', '객실', '화장실', '한편', '주위', '식당', '찾기', '위해', '제주도', '위치', '이', '호텔', '생각', '뷔페', '아침', '식사', '곳', '이틀', '밤', '호텔', '연결', '직원', '영어', '우리', '침대', '두', '개', '층첫', '호텔', '플러스', '시간', '비행', '끝', '우리', '호텔', '중', '것', '기대', '곳', '우리', '선택', '패키지', '투어', '내', '속도', '이', '호텔', '매우', '허용', '알', '그', '이', '방', '크기', '더블', '침대', '호텔', '아들', '기대', '여행', '준비', '더', '것', '우리', '우리', '여행사', '통해', '예약', '곳', '인상', '호텔', '대해', '것', '정말', '것', '불평', '수도', '모든', '기본', '요구', '사항', '충족', '방', '비교', '침대', '쇼핑', '호텔', '뒤', '편의점', '바로', '옆', '밤', '간식', '은', '라면', '아침', '식사', '호텔', '공항', '가장', '위치', '관광', '쇼핑', '레스토랑', '호텔', '로비', '었습니', '직원', '방', '방', '모든', '스위치', '하나', '제어', '보드', '조명', '에어컨', '차', '커피', '수', '난방', '물', '주전자', '자재', '품', '방이', '었습니', '욕실', '었습니', '펀관', '거리', '소음', '호텔', '기본', '높이', '조금', '길', '호텔', '프런트', '나무', '대표', '괴체', '나', '이', '호텔', '추천', '주인', '분', '매우', '매우', '곧', '출시', '미스터', '파크', '및', '호스트', '및', '제주', '추천', '곳', '곳', '그', '또한', '수', '수도', '경험', '해안', '도로', '위치', '수', '바다', '전망', '또한', '여러', '음식점', '만', '거리', '스타벅스', '취하', '기', '방', '기상', '은', '아침', '식사', '준비', '및', '몇', '가지', '바다', '해안', '도로', '바로', '앞', '위치', '방', '곳', '바다', '바', '소리', '수', '사장', '부부', '방과', '복도', '등', '인상', '방도', '온수', '조식', '인상', '직접', '아침', '빵', '각종', '야채', '과일', '여행', '싱가폴', '친구', '또', '말', '숙소', '다음', '제주도', '방문', '꼭', '꼭', '다시', '게스트', '하우스', '매우', '전략', '위치', '바다', '볼', '수', '주변', '레스토랑', '카페', '호스트', '미스터', '파크', '영어', '아주', '매우', '그', '우리', '방문', '수', '곳', '우리', '숙박', '뷰', '게스트', '하우스', '가지', '방', '지하', '조식', '제공', '장식', '우리', '다른', '손님', '호스트', '및', '공유', '수', '또한', '우리', '방', '호스트', '정도', '꼭', '다발', '매우', '추천', '곳', '꼭', '다음', '방문', '제주', '제주', '막', '도착', '차', '출발', '전', '핸폰', '문지', '안내', '주란', '좀', '일찍', '도착', '대표', '막', '출타', '손님', '오신', '방', '꽃', '꽃꺽으러', '손수', '꽃', '준비', '사이', '집', '주위', '차', '차', '차로', '경우', '말', '입구', '세운', '팻말', '건물', '바로', '앞', '바다', '바로', '벤치', '거', '차선', '화가', '손씨', '그림', '방문', '손님', '휴식', '처', '이자', '아침식사', '공간', '반지하', '리빙룸', '창', '앞쪽', '둥', '파', '햇볕', '밖', '지하', '느낌', '공간', '무었', '방', '바다', '품', '대표', '사모님', '의', '숨결', '집안', '곳곳', '여유', '로움', '아침', '맞이', '창밖', '바다', '더', '버스', '타고', '택시', '타고', '현지', '사람', '도움', '찾기', '약속', '것임', '욕실', '방', '제공', '할인', '대해', '협상', '다음', '날', '방', '수', '주인', '영어', '첫날', '이후', '적', '우리', '길', '건너', '다른', '호텔', '숙박', '연장', '때문', '박', '위해', '모나코', '호텔', '이동', '바깥', '호텔', '외견상', '조금', '우리', '땐', '아마', '어두운색', '타일', '쓰기', '선택', '때문', '내부', '편의', '시설', '난방', '시스템', '온수', '공급', '침대', '안정', '와이파이', '연결', '우리', '영어', '프런트', '직원', '대화', '수', '그', '우리', '이틀', '여정', '섬', '여행', '때', '택시', '기사', '연락', '직원', '우리', '다른', '택시', '사혹', '그', '의도', '점', '우리', '공항', '준비', '때', '즉시', '택시', '준', '점', '대해', '생각', '방', '꽤', '모든', '기본', '편의', '시설', '이용', '장식', '조금', '스타일', '주요', '문제', '음식', '쇼핑', '문제', '반대쪽', '호텔', '거리', '하나', '때문', '우리', '돈', '제주시', '내의', '다른', '선택', '표', '제주시', '대한', '저', '다른', '리뷰', '호텔', '꽤', '스타', '일임', '방', '컴퓨터', '인터넷', '라운지', '커피', '머신', '위치', '아주', '버스', '정류장', '대도시', '제주시', '버스', '터미널', '향', '버스', '중문', '향', '공항', '버스', '그랜드', '호텔', '카지노', '주변', '식당', '공항', '택시', '요금', '정도', '여행', '시간', '영어', '대화', '수', '그', '이해', '해도', '문제', '한국', '정말', '여행자', '서비스', '그', '핫라인', '전화', '누군가', '통역', '나', '이', '호텔', '일', '모든', '수직', '도', '비', '도', '가격', '아주', '방', '생각', '레스토랑', '근처', '위치', '때문', '지역', '시내', '가격', '위치', '것', '요', '모나코', '위치', '도', '정말', '월', '몇', '단계', '편의점', '작', '은', '포장', '마차', '하나', '아주', '저렴', '고', '은', '국수', '바로', '오른쪽', '모텔', '때', '기본', '적', '이', '모텔', '은', '주변', '음식점', '모든', '종류', '은', '도보', '거리', '이', '사용자', '알', '소유자', '수', '방', '신발', '착용', '슬리퍼', '제공', '고', '구두', '방', '밖', '저', '도', '이', '었다', '공항', '매우', '고', '주위', '비용', '만', '사용', '캐브', '다음', '여행', '꼭', '이', '호텔', '선택', '다시', '제주도', '이번', '주', '금토일', '박', '일단', '합리', '가격', '오션', '뷰', '수', '무료', '조식', '역시', '한식', '조식', '정도', '사장', '매우', '편이', '방', '역시', '숙박', '예정', '호텔', '수', '때문', '밤', '현지', '인도', '그것', '수', '이', '호텔', '바다', '해변', '매우', '저녁', '공항', '택시', '분', '콘은', '지역', '주위', '식사', '필요', '방', '스위치', '그것', '자동', '모든', '빛', '에어컨', '안', '것', '밤', '매우', '움직', '것', '그것', '자기', '자신', '나', '평균', '결혼', '언니', '가족', '팀', '가족', '여행지', '선택', '호텔', '사실', '더', '등급', '곳', '중', '차이점', '급', '수영장', '주변', '시설', '날씨', '조금', '우리', '가족', '수영장', '계속', '가족', '일정', '때문', '실내', '숙박', '조식', '보고', '선택', '정말', '무척', '조식', '가짓수', '음식', '음식', '과일', '한식', '고기', '채소', '등등', '정말', '점', '하나', '점', '조식', '때', '커피', '로비', '미니', '커피숍', '부모님', '무척', '조카', '방안', '맨발', '추천', '합', '다트', '윈', '베드', '사용', '조식', '다만', '점', '베개', '약간', '수영', '가격', '대비', '가성', '비', '매우', '일몰', '사실', '호텔', '위치', '일몰', '베란다', '밖', '몸', '욕조', '베란다', '객실', '기대', '이상', '조식', '대신', '고봉', '민', '김밥', '층', '제주도', '다시', '숙소', '위치', '이', '호텔', '호텔', '아주', '바다로', '파도', '소리', '수', '호텔', '직원', '매우', '도움', '나', '제주도', '경우', '이', '호텔', '매우', '추천', '우리', '서울', '며칠', '후', '도착', '버스', '때문', '호텔', '택시', '내', '추천', '제주', '차', '것', '어쨌든', '곧장', '수', '공항', '자동차', '이용', '시', '분', '거리', '공항', '멀리', '해변', '해상', '및', '위치', '근처', '숙박', '요금', '생각', '것', '내', '가장', '것', '호텔', '표준', '접수', '전혀', '도움', '것', '영어', '사용자', '정보', '것', '매우', '또한', '방', '난로', '냉장고', '등', '기구', '포크', '나이프', '처음', '조리', '영역', '포함', '필요', '저', '쿠지는', '장소', '최소한', '위', '나', '마음', '사람', '저', '쿠지를위', '거품', '시간', '위치', '것', '다른', '명소', '호텔', '근처', '더', '설명', '위해', '더', '나', '그것', '평가', '매우', '친절', '것', '내', '기회', '나', '롯데', '호텔', '하얏트', '리젠시', '신라', '등', '고급', '호텔', '것', '당신', '일', '예약', '경우', '가격', '바다', '체재', '이별', '아마', '여분', '그것', '값', '바다', '바다', '체재', '경험', '었습니다넓', '객실', '호텔', '우리', '간이', '주방', '트윈', '룸', '더블', '침대', '및', '싱글', '침대', '선택', '나', '청결', '함', '그', '단정', '수', '리셉션', '영어', '말', '수', '직원', '서비스', '한국', '보기', '곳', '그', '택시', '등', '가장', '도움', '또한', '호텔', '내', '레스토랑', '바다', '바로', '앞', '전망', '바다', '해조류', '파리', '방충', '망', '절대', '날', '때', '스파', '방', '진짜', '파리', '부들부들', '횟집', '거리', '바로', '앞', '돼지', '거리', '위치', '앞', '놀이기구', '하나', '약간', '소음', '감안', '듯', '시설', '모던', '모텔', '이상', '수준', '가격', '대비', '수준', '수', '맞은편', '슈퍼마켓', '물건', '구입', '때', '객', '실내', '대형', '엔터테인먼트', '즐', '기기', '부족함', '우리', '방', '방', '컴퓨터', '스마트', '티비', '거리', '그', '창문', '근처', '여행', '소음', '거의', '무료', '세면', '용품', '접수', '창구', '기부', '환영', '이', '위치', '정말', '곳', '바로', '뒤', '우리', '묵', '이', '호텔', '추천', '더', '기대', '이상', '객실', '매우', '기술', '센트럴', '거', '해변', '레스토랑', '첨단', '기술', '조개', '공항', '약', '아침', '식사', '전체', '위치', '다른', '음식점', '중', '선택', '수', '이마트', '쇼핑', '거리', '위치', '단점', '방이', '수건', '중', '저희', '더블', '베드룸', '만', '제공', '것', '문제', '불구', '에어컨', '모두', '몇', '초', '안', '호출', '통해', '해결', '수', '청소', '이', '호텔', '제', '만난', '중', '최고', '시설', '다른', '호텔', '수', '티비', '헤어', '드라이어', '게임', '리모콘', '구글', '검색', '옵션', '중간', '방', '냉장고', '에어컨', '및', '구축', '전체', '방', '것', '남아', '것', '또한', '종류', '빗', '헤어', '스프레이', '직선', '및', '스타일', '곱슬', '겔상', '부분', '바다', '전망', '방', '층', '객실', '밀도', '만', '볼', '수', '메인', '도로', '이', '길', '멀리', '또한', '동문', '시장', '근처', '아주', '호텔', '건너편', '맥도날드', '해산물', '거리', '이', '호텔', '대체', '공사', '진행', '중인', '작업', '동시', '하나', '하나', '편', '그', '아리마', '시작', '수', '또한', '놀이', '공원', '의', '맞은편', '여행', '경우', '일찍', '관광', '위', '밤', '소음', '상관', '나', '이', '호텔', '다시', '선택', '것', '다음', '우리', '이', '호텔', '트', '레비', '그룹', '일', '동안', '방', '매우', '공간', '호텔', '위치', '아주', '대중', '교통', '근처', '레스토랑', '수', '곳', '저녁', '맥주', '커피', '감사', '그', '도움', '주어', '우리', '모든', '문제', '커플', '스파', '룸', '방도', '생각', '시설', '입욕', '제도', '무료', '제공', '조식', '스파', '숙소', '가격', '추천', '지리', '애월', '위치', '숙소', '위치', '애월', '중간', '애월쪽', '둘러보기', '주변', '편의', '시설', '서비스', '자쿠지', '쉬', '우선', '뷰', '매우', '풍경', '보기', '아주', '가격', '거의', '펜션', '일회용품', '구매', '점', '조금', '조식', '시설', '면', '아주', '수건', '침구', '검정색', '뭍', '물질', '꼭', '체크', '잠', '편이', '호텔', '협상', '가격', '아주', '서부', '제주', '관광명소', '해변', '공원', '차', '농장', '등', '제주도', '작', '의', '주요', '도시', '근처', '지역', '시장', '직원', '영어', '제한', '오프', '거리', '주차', '나', '내', '옷', '세탁', '세탁', '시설', '및', '무료', '관광', '일반', '그', '그', '그', '영어', '한국', '장점', '모든', '음식', '시장', '곳', '매우', '공덕', '시장', '한국', '돼지', '고기', '너', '주인', '나', '준', '무료', '한국', '위스키', '첨단', '기술', '하나', '컨트롤러', '제어', '수', '조명', '에어컨', '방', '꽤', '두', '번', '싱글', '베드', '화장실', '샤워실', '수압', '좀', '낮', '포트', '및', '포트', '주변', '여러', '레스토랑', '제한', '주차', '전용', '주차장', '즉', '베이', '속', '호텔', '때문', '저희', '밤', '에어컨', '바닥', '난방', '시스템', '밤', '철', '소리', '체크', '때', '무료', '세면', '용품', '제공', '칫솔', '면도기', '등', '그것', '개', '객실', '오두막집', '침대', '호텔', '매우', '장소', '주인', '매우', '상세', '사람', '그', '장소', '위해', '것', '나', '겨울', '뜻', '나', '서울', '출신', '전형', '제주', '경치', '바람', '수', '제주', '여행', '중', '일', '곳', '사장', '덕분', '길', '헤메', '차', '타고', '숙소', '때', '픽업', '수', '더더', '곳', '애견', '동반', '선택', '곳', '주인', '감동', '방도', '경치', '곳', '재', '방문', '의사', '야경', '예뻣던', '곳', '방', '바다', '보이', '고깃배', '불빛', '제주', '다운', '정경', '시설', '마음', '듭', '다그', '것', '바다', '경치', '수', '호텔', '비치', '레드', '화이트', '말', '모양', '등대', '근처', '동문', '시장', '택시', '로', '약', '분', '거리', '지역', '더', '머', '무르려', '곳', '일과', '여행', '후', '휴식', '취할', '수', '소파', '커피', '테이블', '침대', '내', '스튜디오', '요리', '수', '기회', '냉장고', '요리', '바비큐', '위해', '요리', '및', '웍룸', '설치', '저녁', '가족', '및', '친구', '수', '야외', '테이블', '여러', '개', '하모니', '리조트', '아이', '환영', '전망대', '그네', '및', '놀이', '위해', '예약', '장소', '태양열', '온수', '수영장', '야외', '의류', '세탁', '수', '공용', '세탁기', '제공', '전기', '자동차', '충전', '대가', '소유자', '그', '아내', '매우', '도움', '서비스', '지향', '장소', '절대', '대도시', '생활', '번잡', '함', '변화', '객실', '관리', '소유자', '그', '가족', '최고', '가족', '우리', '보석', '발견', '우리', '오기', '수', '회사', '통해', '방도', '리조트', '작', '부족함', '푹', '쉬', '겨울', '창', '인지', '리조트', '길가', '주변', '곳', '차', '렌트', '체크아웃', '날', '폭설', '비행기', '결항', '난리', '리조트', '사장', '아침', '차', '눈', '오후', '공항', '확인', '전화', '진짜', '감동', '뻔', '폭설', '생', '고생', '당분간', '제주도', '하모니', '리조트', '정말', '룸', '가구', '연식', '하나', '청소', '상태', '매우', '묵고', '아침', '일어나서', '오션', '뷰', '한림읍', '위치', '주변', '관광지', '프런트', '직원', '매우', '인상', '가지', '행마', '한림', '위치', '서쪽', '바다', '보기', '해변', '바로', '옆', '호텔', '해변', '풍력', '발전기', '뷰', '객실', '컨디션', '썩', '침대', '화장실', '그냥', '가정', '집', '화장실', '일단', '방음', '시설', '이동', '곳', '위치', '호텔', '수영장', '애기', '이용', '시설', '공항', '해안', '뷰', '전망', '침대', '스프링', '허리', '스프링', '랄', '그것', '전망', '물', '가격', '대비', '편입', '니', '서해', '바다', '가까이', '바다로', '가기', '프론트', '남', '직원', '친절', '도', '바닥', '고객', '대하', '교육', '제대로', '인터넷', '와이파이', '말', '수', '답변', '어이', '개인', '수영', '고급', '풀', '빌라', '가격', '외국', '풀', '빌라', '개인', '정원', '바베큐', '가구', '하나', '하나', '모던', '스타일', '신경', '흔적', '기념일', '가면', '로맨틱', '곳', '박일', '명', '가족', '여행', '출발', '전날', '숙소', '루온토', '출발', '전날', '오후', '예약', '가격', '조금', '편이', '전체', '로', '생각', '남자', '의', '친절', '감동', '아침', '식사', '간식', '회', '식당', '더', '수영장', '매일', '야간', '사용', '수', '전체', '제주도', '중', '최고', '서비스', '시설', '가지', '월', '정리', '해수욕장', '도보', '이동', '비치', '뷰', '룸', '독립', '통', '유리', '밖', '블라인드', '거', '모든', '호텔', '정말', '풀', '빌라', '평이', '걱정', '제', '방문', '때', '풀', '둘', '이용', '튜브', '튜브', '물놀이', '또', '자전거', '처음', '때', '보증금', '말', '줄', '그냥', '금액', '당', '천원', '정도', '하루', '종일', '꼭', '자전거', '금방', '월', '정리', '카페', '거리', '갈수', '반대쪽', '가면', '등대', '곳도', '위치', '이번', '월', '남편', '제주', '여행가', '면서', '처음', '먼저', '언니', '추천', '가게', '월', '정리', '해변', '바로', '주변', '저녁', '월', '정리', '쪽', '카페', '가도', '거린데', '각각', '개인', '방', '마다', '이', '배정', '애기', '가도', '다만', '오픈', '밖', '이', '점', '참조', '심', '아침', '무인', '언제', '예약', '시간', '완전', '추천', '진짜', '출장', '이용', '호텔', '서비스', '계속', '이용', '중', '무료', '와이파이', '무료', '차등', '서비스', '위치', '적합', '때문', '공항', '맛집', '대도', '로비', '작고', '곳', '비', '리셉션', '지배인', '매우', '안내', '객실', '청소', '상태', '매우', '바닥', '욕실', '침구', '전부', '관리', '객실', '다시', '방문', '의사', '객실', '무료', '와이파이', '매우', '체크', '및', '체크', '아웃', '시', '나', '월', '일', '월', '일', '그', '엘리베이터', '이용', '때', '짐', '때', '엘리베이터', '로비', '첫', '방이', '것', '내', '었다', '방', '사용', '순간', '단계', '침대', '화장실', '좀', '새', '호텔', '나', '보이지', '것', '아침', '식사', '제공', '모든', '것', '로비', '커피', '차', '직접', '언제', '수', '로비', '물', '필터', '링', '수', '나', '밤', '숙박', '때문', '저', '장점', '호텔', '찾기', '택시', '기사', '직원', '도움', '방이', '매우', '제', '예약', '더블', '룸', '매우', '숙박', '모든', '와이파이', '신호', '곳', '호텔', '위치', '곳', '위치', '레스토랑', '바', '카페', '이', '때', '도움', '저', '스쿠터', '공원', '무료', '공항', '매우', '단점', '직원', '영어', '수준', '듭니', '호텔', '멀리', '섬', '주요', '관광', '스쿠터', '수', '이', '방법', '제', '방문', '섬', '제', '추천', '그랜드', '풀', '빌라', '아이', '가기', '최고', '풀', '빌라', '중앙', '수영장', '매우', '명', '객실', '수', '숙소', '찾기', '아주', '수', '게다가', '스파', '수영장', '하루', '종일', '수영', '스파', '아이', '세탁기', '건조기', '수영복', '바로', '세탁', '수', '세탁기', '객', '실내', '리조트', '처음', '진짜', '대박', '게다가', '오픈', '한지', '얼마', '더', '재', '방문', '의사', '완전', '추천', '성산일출봉', '인근', '스파', '층', '객실', '이용', '층', '야외', '월', '풀이', '프라이', '빗', '리조트', '층', '월풀', '개인', '풀이', '함', '메인', '풀', '월', '이용', '이용', '층', '리가', '동', '구성', '각층', '개', '객실', '객실', '아주', '테라스', '티', '테이블', '야외', '월', '풀이', '시간', '이용', '수', '매우', '더블베드', '개', '창밖', '풍경', '단', '야외', '월풀', '물이', '안', '부유', '월풀', '내부', '청소', '관리', '것', '주차공간', '근처', '해안', '도로', '산책', '월', '초', '대중', '문', '성산', '일출봉', '단', '몇', '분', '관광', '명소', '또한', '제주', '동부', '매우', '장소', '인', '화', '해수욕장', '해안선', '운전', '거리', '가장', '곳', '매우', '때문', '항해', '발견', '직원', '매우', '우리', '리조트', '문제', '디자인', '마치', '리조트', '구역', '때', '발리', '섬', '어딘가', '것', '그것', '아주', '작', '모든', '것', '분위기', '공기', '및', '일부', '녹지', '빌라', '매우', '현대', '디자인', '라운지', '및', '객실', '주변', '개인', '손길', '가미', '그것', '모든', '것', '새', '양질', '야외', '스파', '발코니', '공간', '우리', '그것', '사용', '기회', '태양', '바람', '및', '와인', '잔', '수', '지역', '사용', '음식', '그것', '프리', '젠', '테이', '션', '취향', '한국', '스타일', '서양', '요리', '매일', '다른', '세트', '메뉴', '나', '보통', '한국', '식당', '반찬', '더', '주문', '수', '실제', '당신', '더', '것', '요구', '수', '리조트', '일', '전체', '직원', '매우', '보살', '것', '근처', '레스토랑', '리조트', '다른', '주제', '매달', '수업', '계획', '추가', '요금', '빌라', '손님', '무료', '룸', '테라스', '국적', '경치', '호텔', '조경', '가을', '수영장', '시설', '및', '옥상', '인피니티', '풀', '매력', '호텔', '중문', '단지', '위치', '근처', '볼거리', '맛집', '딸', '생일', '여행', '시간', '바다', '앞', '전망', '시설', '노후', '주변', '거리', '차로', '단점', '시설', '노후', '복도', '곳곳', '곰팡이', '냄새', '남', '객실', '해변', '근처', '산책', '리조트', '시설', '난방', '문제', '다른', '객실', '주지', '소형', '이동식', '풍기', '바다', '바로', '경치', '위락시설', '별로', '객실', '마음', '다만', '공항', '리조트', '거리', '좀', '시간', '조금', '한라산', '등반', '후', '호텔', '체크', '수영장', '피로', '월', '수영장', '도로', '유지', '이용', '운영', '가성', '비', '아주', '객실', '취사', '거기', '가격', '매우', '호텔', '중앙', '실외', '풀이', '수영', '호텔', '추천', '단점', '바다', '근처', '바다', '보이지', '접근', '점', '근처', '살', '때문', '이', '호텔', '선택', '매우', '요인', '해변', '수영장', '존재', '호텔', '버스', '정류장', '여태껏', '내', '정보', '버스', '정류장', '분', '정도', '이', '호텔', '도착', '공항', '찾기', '가운데', '주거지역', '사람', '이', '호텔', '섬', '도착', '때', '차', '호텔', '욕실', '침구', '방', '부엌', '아침', '식사', '수영장', '물', '가끔', '주말', '물이', '때', '손님', '었습니다저', '곳', '별', '개', '때문', '신발', '대부분', '서양인', '사용', '비누', '샤워', '바', '한국', '살', '지원', '이', '신발', '비누', '및', '특정', '장소', '예상', '공유', '수', '침대', '전형', '한국', '우리', '우리', '자신', '샤워', '신발', '신고', '침대', '비누', '한국', '호텔', '것', '방', '주방', '정도', '이', '포크', '필요', '대부분', '서양인', '생각', '아래', '필요성', '수건', '수건', '크기', '뿐', '아시아', '평벅', '매우', '스', '캐리', '이', '진입', '로', '간판', '신발', '평가', '비누', '그', '이', '자', '수', '거실', '우리', '두', '개', '침실', '베드', '우리', '일행', '중', '집', '수', '크기', '냉장고', '스토브', '탑', '전자레인지', '전기', '주전자', '물', '인스턴트', '커피', '가지', '수영장', '국가', '전망', '수', '내', '어머니', '마음', '내', '아이', '거실', '남편', '저', '의', '개인', '정보', '별도', '침실', '저희', '제', '층', '계단', '액세스', '주차', '수', '분', '드라이브', '씨', '분', '분', '제주', '시내', '쪽', '관광명소', '전반', '가족', '느낌', '아주', '제주', '여행', '시', '이용', '것', '식사', '직원', '정말', '전망', '한라산', '해변', '볼', '수', '다만', '서귀포', '쪽', '해당', '지역', '방문', '시', '시간', '꽤', '아들', '친구', '생일', '날', '여러', '가족', '다', '모', '곳', '요', '생일', '주인공', '가족', '수영장', '풀', '빌라', '저', '제일', '일반', '객실', '수영장', '커서', '풀', '빌라', '크기', '실내', '약간', '여러', '가족', '크기', '야외', '바베큐', '파티', '식탁', '온', '것', '약간', '큰길', '안쪽', '눈', '곳', '차로', '접근', '어려움', '오히려', '주변', '건물', '수', '곳', '요', '층', '편의점', '지하', '오락', '시설', '가족', '끼리', '친구', '끼리', '놀러와', '다음', '날', '조식', '보지', '조식', '제공', '때문', '다음', '묵', '수', '것', '프론트', '직원', '체크', '인과', '체크아웃', '모두', '가족', '여행', '시', '이용', '것', '식사', '직원', '정말', '전망', '한라산', '곽', '해변', '볼', '수', '리조트', '입구', '길', '제주', '향기', '물씬', '수', '호텔', '방', '욕실', '샤워', '시설', '작동', '무더위', '에어컨', '미국', '방', '전망', '수', '옷', '수', '다만', '열', '매우', '눈', '현지', '농장', '비료', '냄새', '베란다', '문', '자마자', '냄새', '순간', '전반', '경험', '제주도', '기본', '호텔', '방', '수리', '조금', '우리', '먼저', '안함', '예약', '수', '발코니', '방이', '그', '우리', '방', '발코니', '하루', '밤', '후', '하나', '바베큐', '식당', '아주', '시설', '대형', '수영장', '가족', '활동', '때문', '호스텔', '목조', '주택', '그것', '분위기', '나', '그', '집', '밤', '더', '기숙사', '수건', '매일', '었습니', '손님', '샤워', '아침', '식사', '기본', '정원', '호스트', '그', '어머니', '정말', '나', '외국인', '손님', '한국', '인도', '영빈', '관', '것', '위치', '곳', '더', '서쪽', '위치', '일부', '호스텔', '픽업', '때문', '동쪽', '코스', '투어', '참가', '것', '허용', '글쎄', '나', '픽업', '지점', '았', '시내', '버스', '분', '이상', '더', '나은', '차', '시오', '국제', '운전', '면허증', '비', '수기', '특가', '선택', '가성', '비', '난방', '수압', '와이파이', '빵빵', '기본', '것', '위치', '관덕정', '정류장', '시장', '정도', '주변', '식당', '편의점', '메가박스', '이', '정도', '가격', '최상인', '듯', '단점', '침대', '메', '트리스', '저', '예비', '이불', '하나', '더', '제주', '국제공항', '근처', '시내', '호텔', '객', '실내', '크기', '욕실', '욕조', '편이', '좀', '호텔', '근처', '시장', '현지', '맛집', '관광', '위치', '호텔', '랍', '다방', '생각', '시설', '편입', '니', '다만', '외부', '벽', '하나라', '외부', '소음', '좀', '기적', '냉장고', '소음', '배치', '위치', '때문', '방', '전체', '처음', '공사', '소음인', '줄', '알', '잠', '부분', '위치', '전체', '시설', '으리', '으리', '하진', '방이', '취사', '시설', '탑동', '근처', '쪽', '맛집', '기도', '공항', '비행기', '잠깐', '자고', '비지니스', '호텔', '룸바닥', '매우', '조심', '공항', '택시', '비', '원', '아침', '유명', '해장국', '집', '분', '거리', '저녁때', '한잔', '술집', '근처', '룸안', '조리', '시설', '그릇', '수저', '젓가락', '등', '요사', '최고', '장소', '위치', '숨', '그것', '자신', '연금', '바다', '마주', '보고', '연금', '인분', '이', '건물', '요리', '허용', '연금', '지역', '밖', '지정', '지역', '쓰레기', '쓰레기', '사실', '일', '가장', '바다', '경치', '추천', '출발', '전', '예약', '통해', '박', '동안', '예약', '여행', '개월', '전', '도착', '전', '일정', '금액', '입금', '제공', '계정', '세부', '정보', '언어', '장벽', '프로세스', '크게', '방해', '체크', '후', '전체', '비용', '지불', '수', '체크', '위치', '공항', '약', '곳', '위치', '연금', '바다', '전경', '연금', '도중', '일부', '식료품', '쇼핑', '위', '주요', '도로', '위치', '지역', '슈퍼마켓', '체크', '절차', '순조', '롭', '만', '사무실', '실제', '지하', '때문', '처음', '사무실', '수', '바람', '자신', '보호', '수', '장소', '도로', '몇', '개', '주차장', '모든', '손님', '도로', '우리', '연금', '명의', '방이', '었는데', '성인', '명과', '살', '살의', '어린이', '명', '위', '최고', '장소', '그', '우리', '요리', '모든', '것', '주방', '용품', '밥솥', '등', '제외', '근처', '산토', '연금', '약', '거리', '인근', '시간', '동전', '세탁기', '사용', '수', '세탁기', '건조기', '제외', '우리', '약간', '결함', '우리', '제', '의', '밤', '우리', '자동', '자물쇠', '열쇠', '기능', '녔던', '것', '위해', '집', '기술자', '마침내', '화장실', '창문', '통', '등', '발', '열기', '전', '약', '분', '작동', '그', '우리', '소풍', '도중', '금능', '해수욕장', '편의점', '이', '펜션', '층', '금능', '해수욕장', '제일', '기도', '방도', '펜션', '감안', '수기', '가격', '주인', '편이', '수건', '교체', '바로', '해주시', '층', '세탁기', '이용도', '최고', '호스텔', '한국', '일', '장변', '제주도', '아주', '기간', '동안', '우리', '차', '가지', '후', '공항', '운전', '곳', '거', '생각', '도시', '멀리', '약', '시간', '반', '야간', '드라이브', '가시', '바다', '것', '아침', '바람', '상상', '수', '그', '새', '축하', '곡', '일부', '걸즈', '아마', '즉시', '취할', '수', '수', '그', '휴가', '우리', '하나', '밤', '직원', '말', '그대로', '영어', '아주', '신체', '언어', '인치', '이', '때', '여행', '부분', '위치', '룸', '컨디션', '별로', '구석구석', '먼지', '리뷰', '보고', '이용', '사진', '다른', '룸', '매우', '습', '디', '직원', '사무', '별로', '습', '디', '다시', '이용', '일', '듯', '곽', '해수욕장', '바로', '앞', '뷰', '정말', '편의점', '맛집', '등', '여행', '곳', '층', '로비', '오픈', '공간', '바다', '맥주', '한잔', '것', '룸', '재', '방문', '의사', '씨뷰', '호텔', '월초', '바닷가', '앞', '때', '중앙', '난방', '방식', '면서', '난방', '에어컨', '밤', '난방', '불가', '함', '룸', '바닥', '카펫', '청소', '남편', '아이', '계속', '재체기', '박', '콧물', '나기', '시작', '명', '예약', '모든', '애', '티', '수건', '슬리퍼', '칫솔', '등', '명', '준비', '가격', '대비', '인테리어', '숙소', '지어짅', '얼마', '매우', '편', '바닥', '나무', '재질', '색상', '모던', '인테리어', '인상', '호텔', '분', '거리', '바로', '아이', '곽', '해수욕장', '있었느', '태풍', '시즌', '모래바람', '사이', '사진', '한장', '겨우', '룸서비스', '조식', '건너편', '쌀국수', '집', '거기', '만원', '안쪽', '특급', '호텔', '시설', '분', '꽤', '비수', '이용', '곽', '과물', '해변', '조금', '해변', '식당', '다만', '내부', '정돈', '느낌', '청결', '신경', '더', '것', '왼쪽', '오른쪽', '가면', '분안', '번화가', '호텔', '위치', '정말', '밤', '뭐', '가기', '교통', '가장', '장점', '조식', '함정', '제주도', '때', '여기', '방이', '조식', '한식', '양식', '깨끗', '선택', '직원', '정말', '공항', '교통', '행정', '쇼핑', '최상', '위치', '주차장', '로비', '좀', '작', '직원', '친절', '배려', '마음', '쉬', '비수', '가격', '조식', '커피', '대박', '케냐', '커피', '싱글', '오리진', '합리', '선택', '동안', '여행', '가성', '비', '최강', '요', '공항', '인근', '추천', '성비', '오픈', '호텔', '공항', '도', '편의', '시설', '주변', '조식', '공항', '분', '거리', '도로', '변', '위치', '밤', '도착', '한눈', '보', '리조트', '거의', '호텔', '침구', '아기', '전동차', '수상', '자전거', '놀이터', '퇴', '시간', '다음', '여기', '리조트', '안', '놀', '거리', '객실', '직원', '장난감차', '아이', '함', '점도', '실내', '바비큐', '고기', '집', '식당', '거', '숙소', '잠자리', '아침', '사장', '토스트', '사과', '제주도', '가을', '여기', '제대로', '정리', '우리', '예약', '트윈', '룸', '트리플', '룸', '호스트', '우리', '방', '방', '이동', '수', '위치', '정말', '로컬', '주거', '지역', '내', '동생', '블렌드', '주민', '전반', '곳', '매일', '청소', '저', '제', '동생', '그', '인사', '도움', '그', '를', '우리', '옷', '도', '천', '랙', '방', '그', '한국어', '도', '주인', '말', '중국어', '및', '일본어', '영어', '조금', '만', '그', '영어', '실력', '꽤', '문제', '제주도', '다시', '미래', '이', '호텔', '다시', '오', '설명', '작업', '계속', '편', '위치', '전망', '제공', '호텔', '근처', '식사', '장소', '직원', '내', '예약', '방', '창문', '해변', '향', '방', '안', '욕조', '실용', '이지', '아들', '그것', '실용', '샤워', '공간', '샤워', '후', '화장실', '바닥', '내', '방', '마', '모의', '흔적', '호텔', '바로', '편', '무료', '주차장', '우리', '단지', '박', '동안', '것', '체적', '그것', '체재', '직원', '분', '숙소', '조식', '바다', '서우', '봉', '산책', '수', '거리', '루프', '탑', '수영장', '가족', '우리', '신혼', '여행', '제주도', '방문', '이', '호텔', '숙박', '해변', '근처', '그', '객실', '내부', '스스로', '요리', '수', '우리', '아주', '가격', '아침', '식사', '형편', '우리', '적극', '이', '호텔', '추천', '호스트', '아주', '도움', '그', '우리', '픽업', '근처', '동안', '애월', '버스', '정류장', '길', '체크', '때', '우리', '편입', '니', '방', '부엌', '자신', '요리', '수', '그', '이상', '여가', '시간', '또한', '이', '곳', '아주', '주변', '환경', '바다', '뿐', '식당', '이', '위치', '버스', '정류장', '분', '거리', '타고', '제주시', '수', '아주', '대중', '교통', '수단', '차', '렌트', '강력', '추천', '원', '일박', '공항', '시간', '도착', '렌터', '사람', '하루', '듯', '네이버', '검색', '결과', '리뷰', '정도', '다만', '시설', '사실', '임', '방', '온수', '크게', '불만', '휴가', '겸', '태교여행', '선택', '제주', '월', '마지막', '날', '숙박', '비', '포함', '모든', '여행자', '물가', '아기', '여행', '숙박', '업체', '선택', '제일', '신경', '급', '호텔', '요금', '때문', '폭풍', '검색', '끝', '신규', '오픈', '호텔', '군데', '예약', '객실', '곳', '별로', '리치', '호텔', '검색', '후기', '고민', '규모', '가격', '애월', '바다', '월풀', '욕조', '호텔', '가성', '비', '제주', '숙박', '업체', '강', '신축', '건물', '모던', '방', '디자인', '인테리어', '스파', '실', '침실', '모두', '펜션', '음식', '해먹', '수', '인덕션', '그릇', '방', '사진', '위치', '보기', '성산일출봉', '곳', '이', '방', '꽤', '이유', '성산', '일출봉', '은', '여러', '해산물', '식당', '수', '것', '수', '지역', '마트', '레스토랑', '호텔', '앞', '저', '이', '호텔', '추천', '경우', '시간', '곳', '실내', '저', '전혀', '생각', '방', '청소', '때문', '나', '냉장고', '유리', '사용', '수', '저', '제', '남편', '갑자기', '새벽', '시', '잠', '수', '때문', '침대', '갑자기', '문', '노크', '를', '선택', '때', '화가', '것', '사면', '제', '남편', '한국', '우리', '마트', '직원', '청원', '뭐', '나', '한국', '문화', '이해', '아마', '그', '외국인', '어쨌든', '저', '캄보디아', '말', '태도', '여름', '수기', '방문', '가격', '리', '모델링', '신축', '건물', '시설', '물', '위생', '제주', '기후', '탓', '벽지', '등', '곰팡이', '슬어', '제습기', '가동', '곰팡이', '흔적', '남아', '조금', '한여름', '이외', '방문', '권장', '성산일출봉', '우도', '실', '전날', '여기', '숙박', '객실', '룸', '상태', '가격', '대비', '다만', '금연', '객실', '달라', '불구', '담배', '냄새', '그', '부분', '별로', '가격', '대비', '룸상태', '편이', '관광', '정이', '빼곡', '호텔', '이용', '날', '곳', '이용', '가성', '비', '일단', '해안', '도로', '근처', '주변', '산책', '주변', '시설', '이용', '펍', '편의점', '차', '타고', '조금', '가면', '노', '시내', '나오니', '문제', '생각', '제', '곳', '신관', '룸', '싱글', '베드', '더블베드', '방이', '아마', '신관', '룸', '호텔', '방만', '곳', '구관', '주방', '펜션', '룸', '룸', '컨디션', '정말', '이', '정도', '그냥', '겉보기', '정도', '가지', '계속', '눈', '방', '아래쪽', '벽지', '복도', '벽지', '아래쪽', '벽지', '튿어져', '여', '보수', '신경', '안', '사람', '손때', '느낌', '군데', '데', '오염', '부분', '규모', '편의점', '바베큐', '수영장', '등', '편의', '시설', '세탁', '시설', '바로', '앞', '도', '두봉', '전경', '해안', '도로', '오션', '뷰', '객실', '전망', '공항', '분', '정도', '거리', '위치', '해안', '도로', '바로', '옆', '전망', '층', '도보', '분', '거리', '까페', '편의점', '약국', '등', '편의', '시설', '고루', '리조트', '본관', '이용', '사진', '욕실', '주방', '침대', '등', '풀', '장도', '관리', '바베큐', '장도', '무료', '이용', '야자나무', '조경이', '제주시', '근처', '도', '휴양지', '느낌', '자전거', '대여', '이용', '바로', '앞', '도', '두봉', '산책', '코스', '공항', '필드', '분', '택시', '최저', '박', '예약', '작업', '및', '에어컨', '시설', '인터넷', '및', '꽤', '침대', '피', '에이', '개선', '유지', '보수', '부족함', '자신', '시설', '세도', '칫솔', '공항', '예', '수', '전반', '공항', '움', '우리', '온라인', '통해', '우리', '가격', '약시', '사람', '조금', '에어컨', '일반', '불만', '요금', '와이파이', '무료', '및', '확인', '세탁기', '다리미', '등', '바로', '앞', '바다', '창밖', '뷰', '탁', '사장', '분', '맞이', '신경', '소수', '인원', '명도', '이용', '수', '구조', '커플', '다수', '인원', '그룹', '수', '것', '생각', '숙소', '더욱', '여행', '것', '강추', '박', '우선', '공항', '숙소', '바다', '앞', '바다', '냄새', '생선', '냄새', '주변', '주택가', '숙소', '초입', '동네', '마트', '약국', '편의점', '사장', '분도', '숙소', '앞', '부담', '숙소', '주변', '마트', '일일이', '위치', '어디', '뭘', '추천', '첫날', '밤', '바닥', '화장실', '찬물', '무릅쓰', '시간', '연락', '사장', '분', '확인', '방', '수', '신경', '화장실', '샴푸', '샤워', '용품', '구비', '수건', '바구니', '토스트', '수', '식빵', '초콜렛', '준비', '잼', '버터', '냉장고', '준비', '아침', '침대', '생각', '좀', '생각', '전혀', '베개', '폭', '폭', '신하', '매트리스', '폭', '폭신', '여분', '침구', '류', '사용', '수', '전체', '정말', '다시', '방문', '숙소', '사장', '두', '분도', '다음', '또', '수', '시설', '좀', '노후', '건', '단체', '생각', '진짜', '명', '정도', '콘도', '정도', '생각', '가끔', '거름', '냄새', '때', '가족', '여행', '때', '친구', '명', '때', '연인', '끼리', '제', '때', '근처', '축사', '작업', '똥', '냄새', '가족', '여행', '식구', '식구', '걱정', '숙소', '아빠', '장애', '휠체어', '사용', '그것', '행사', '차', '여명', '두', '채', '집', '구조', '방', '개', '거실', '주방', '등', '형태', '베드', '방', '독', '채식', '분리', '수', '안방', '격인', '트윈베드', '단체', '좀', '점', '개', '화장실', '군데', '주방', '시설', '소규모', '단체', '숙박', '구조', '거실', '독채', '각각', '인터넷', '점', '월임', '주변', '숲', '때문', '파리', '모기', '전자렌지', '냉장고', '정도', '수', '가성', '비', '볼', '때', '선택', '수', '생각', '곳', '명', '제주', '보석', '저', '책', '아고다', '통해', '사실', '프로', '곳', '우리', '퀸스', '사이즈', '침대', '싱글', '침대', '식', '객실', '부엌', '티비', '발코니', '거실', '심지어', '화장', '시청', '방법', '퀸', '사이즈', '침대', '폭', '신하', '정말', '무료', '와이파이', '아주', '서비스', '꽤', '물질', '중국어', '및', '영어', '전혀', '문제', '이야기', '우리', '체크', '및', '관리', '사람', '봉사', '여자', '저녁', '식사', '경치', '곳', '꽤', '우리', '아주', '단점', '아주', '원격', '및', '리뷰', '심지어', '택시', '길', '다음', '체크', '인', '시간', '꽤', '우리', '겨', '의', '짐', '수', '우리', '방', '준비', '통화', '싱글', '침대', '베개', '모든', '플랫', '기', '다음', '사용', '수', '핸드', '요청', '시', '이', '하드', '를', '방', '코딱지', '하나', '개미', '득시', '글', '및', '전원', '포트', '다른', '방', '침대', '옆', '램프', '또한', '예약', '저녁', '각', '싱가폴', '달러', '무제한', '바베', '큐', '돼지고기', '스프', '측부', '모두', '나', '다시', '데', '전반', '숙박', '실내', '인테리어', '것', '근본', '엘리베이터', '등', '시설', '문제', '주차', '앞쪽', '옆', '골목', '쪽', '밤낮', '문제', '큰길', '차', '소리', '가격', '대비', '적극', '추천', '곳임', '터미널', '옆', '음식점', '시간', '식당', '부집', '도', '휴가', '친구', '명과', '제주', '다인', '리조트', '카라반', '박', '달', '정도', '전', '예약', '카라반', '상대', '가격', '이용', '수', '것', '장점', '위치', '공항', '애월', '해변', '근처', '위치', '접근성', '카라반', '명', '이상', '정도', '마음', '카라반', '객실', '객실', '청소', '제공', '것', '단점', '기본', '제공', '어메니티', '휴지', '치약', '비누', '수건', '정도', '교체', '에어컨', '가동', '시', '물이', '상황', '카라반', '바베큐', '시설', '이용', '수', '메리', '카라반', '공간', '추억', '곳', '생각', '겉', '조금', '허름', '내부', '것', '비지니스', '호텔', '느낌', '공항', '정말', '일찍', '출발', '사람', '것', '어른', '중학생', '초', '가족', '연휴', '마지막', '날', '새벽', '비행기', '일부러', '공항', '앞', '가격', '온돌룸', '예약', '방', '리', '모델링', '침구', '류', '욕실', '포함', '전체', '장점', '공항', '차로', '분', '호텔', '층', '시간', '코인', '빨래', '방', '주중', '낮', '동안', '빨래', '건조', '후', '수', '서비스', '제공', '인', '약시', '인', '침구', '개', '온돌방', '기준', '물', '병', '수건', '제공', '단점', '옷장', '협소옷걸', '개', '욕실', '문', '변기', '바로', '앞', '문', '무릎', '다음', '기회', '조식', '렌트카', '서비스', '보고', '지난', '월', '두', '차례', '박', '총', '박', '우선', '호텔', '시설', '정리정돈', '상태', '것', '트윈룸', '숙박', '침대', '하루', '이틀', '처음', '층', '숙박', '객실', '공항', '비행기', '장면', '좀', '무렵', '정말', '게다가', '공항', '가장', '가까이', '호텔', '것', '알', '도청', '분', '정도', '거리', '번화가', '연동', '바오', '젠', '거리', '등', '것', '고층', '공항', '전망', '객실', '수', '가성', '비', '호텔', '방', '나름', '느낌', '예전', '베니키아', '인수', '리', '모델링', '바', '외관', '조금', '손보', '베니키아', '호텔', '보통', '부띠', '호텔', '클래스', '여행', '계속', '호텔', '한마디', '추천', '요다음', '날', '새벽', '비행기', '공항', '근처', '숙박', '가격', '대비', '매우', '미리', '말', '다음', '날', '새벽', '호텔', '셔틀', '줌', '관광', '호텔', '매우', '나', '둘이서', '인', '가족', '묵', '수', '사이즈', '렌터카', '곳', '더', '기도', '무', '가격', '대비', '정말', '호텔', '임', '직원', '매우', '친절', '안경', '직원', '호텔', '실수', '저', '사과', '그', '추가', '비용', '지불', '요청', '침대', '머리카락', '거울', '모기', '시체', '여행', '마지막', '날', '다시', '제주도', '우리', '호텔', '결정', '두', '가지', '이유', '무료', '공항', '교통', '편', '제공', '자전거', '두', '가지', '여행', '중', '대형', '호텔', '때문', '우리', '자전거', '상자', '계속', '수', '바랬습니', '며칠', '동안', '우리', '제주', '자전거', '우리', '호텔', '체크', '아웃', '전', '우리', '보관', '위해', '그', '두', '개', '상자', '것', '것', '우리', '물어', '우리', '호텔', '때', '아무', '상자', '대해', '알', '우리', '체크', '날', '직원', '점원', '확인', '직원', '요청', '때', '우리', '상자', '것', '매우', '실망', '마음', '상한', '사과', '설명', '상황', '해결', '시도', '말', '것', '우리', '그', '밖', '곳', '결정', '호텔', '자체', '무료', '공항', '교통', '편', '그것', '공항', '호텔', '인근', '별로', '우리', '아침', '식사', '각각', '원', '지불', '가치', '차라리', '그', '중', '일부', '소비', '편의점', '커피', '샌드위치', '구입', '것', '제주', '공항', '고객', '서비스', '박의', '제주', '노블레스', '렀습니', '경영', '지원', '팀', '리더', '인', '테드', '에이', '김', '은', '제주', '우리', '위해', '그', '년', '이상', '경험', '택시', '박희', '경', '과', '원', '일', '동안', '개인', '자동차', '준비', '업무', '열정', '그', '영어', '번역', '사용', '대화', '제주', '관해', '이야기', '우리', '체', '재는', '아침', '식사', '포함', '음식', '날', '준비', '주로', '한국', '음식', '야채', '볶음', '쌀', '달걀', '수프', '과일', '종', '파인애플', '및', '바나나', '컷', '시리얼', '및', '빵', '호텔', '무료', '주차', '인근', '지역', '걷기', '관광', '위해', '개발', '때문', '자동차', '소지', '여행', '준비', '것', '가장', '공항', '거리', '서쪽', '여행', '위치', '최고', '밤', '문화', '시내', '오분', '거리', '이호', '해변', '가두', '선택', '위치', '이', '펜션', '협재', '해변', '모래사장', '중심', '위치', '상점', '레스토랑', '주변', '펜션', '숙박', '우리', '해변', '하루', '후', '택시', '수', '때문', '호텔', '주말', '우리', '우리', '도움', '요청', '여부', '주인', '이', '펜션', '클라라', '관리자', '그녀', '우리', '매우', '문제', '대한', '여러', '택시', '회사', '마지막', '우리', '발견', '때', '호출', '해', '주소', '다시', '설명', '드라이버', '해', '다음', '것', '이기', '때문', '아주', '위치', '펜션', '이여름', '협재해수욕장', '바로', '앞', '층', '카페베네', '최근', '층', '뷰', '우도', '성산일출봉', '근처', '숙소', '예약', '욜', '펜션', '곳', '위치', '주변', '주택', '몇', '채', '보이', '것', '보시', '사장', '저희', '방문', '예상', '시간', '생각', '도착', '사장', '일찍', '부터', '에어컨', '켜', '월달', '여름', '정도', '방이', '저희', '바베큐', '신청', '안해', '구나', '사용', '방', '다음', '날', '출발', '때', '저희', '사장', '운영', '카페', '와플', '음료', '주문', '커피', '그냥', '정말', '카페', '앞', '핀', '해바라기', '꽃', '빨간색', '컨테이너', '박스', '모습', '욜', '펜션', '저', '지난', '주', '펜션', '끝', '숙박', '자주', '비즈니스', '레저', '여행객', '저', '이', '환상', '부부', '환영', '여기', '집', '것', '팁', '배정', '제주', '방법', '한라산', '여행', '곳', '사우나', '해변', '등', '위치', '곳', '연결', '버스', '제주', '공공', '체육', '시설', '수', '미터', '펜션', '헬스장', '외부', '비어', '가든', '아침', '해변', '달리', '체육관', '운동', '및', '마무리', '환상', '아침', '식사', '수', '방법', '전', '나', '일', '물', '커피', '무료', '일', '것', '매우', '저', '펜션', '강력', '추천', '호텔', '추천', '처음', '나', '제주', '도착', '때', '내', '나', '나라', '예약', '나', '이전', '숙소', '그것', '일', '취소', '제주', '마침내', '나', '것', '발견', '매우', '그녀', '우리', '할인', '이', '호텔', '방이', '가격', '원', '인의', '숙박', '그녀', '주차장', '엘리베이터', '수건', '헤어', '드라이어', '비누', '샴푸', '차', '커피', '가지', '아침', '위치', '아주', '여기', '밤', '생활', '수', '레스토랑', '쇼핑', '거리', '및', '바', '새', '건물', '침구', '욕실', '냉장고', '소음', '생수', '병과', '음료', '캔', '에어컨', '도', '치약', '면도기', '방이', '침구', '제외', '매우', '협소하', '슬리퍼', '의자', '주차장', '대정', '호텔', '모텔', '편입', '니', '객실', '서비스', '호텔', '서비스', '제', '예약', '호텔', '및', '도착', '때', '리셉션', '직원', '다소', '제한', '영어', '제', '지적', '이', '우리', '예약', '분', '대해', '다른', '시간', '나', '나', '여행', '파트너', '욕실', '밤', '로비', '나', '내', '확인', '요청', '방', '키', '제', '기분', '상하', '옷', '간', '것', '관광', '한국', '인', '다운', '재킷', '도', '주위', '때', '었다', '나', '점', '확인', '의심', '그', '수', '방법', '더', '불쾌', '가장', '제한', '이기', '때문', '그', '영어', '가격', '주변', '다른', '호텔', '가격', '꼭', '호스텔', '이', '모든', '것', '경우', '객실', '제', '방', '전체', '이', '한국', '여러', '호텔', '저', '제주도', '호텔', '방', '생각', '수', '서울', '호텔', '서울', '부티크', '호텔', '더블', '침대', '방', '대부분', '차지', '정말', '공간', '움직', '이화', '열', '이', '상상', '수', '욕실', '욕실', '나', '이해', '수', '한국', '호텔', '샤워', '부스', '화장실', '파티션', '커튼', '세면대', '이', '사례', '호텔', '파티션', '커튼', '욕실', '샤워', '곳', '후', '그', '화장실', '업로드', '욕실', '마련', '편의', '시설', '이', '호텔', '제주', '공항', '자동차', '약', '분', '거리', '우리', '바다', '전망', '방', '디럭스', '임대', '보기', '객실', '주방', '용품', '제공', '호텔', '바로', '옆', '이', '것', '평화로', '웠', '우리', '정말', '제주', '움', '감상', '수', '해수욕장', '해', '맞이', '해안로', '중간', '위치', '지미', '스테이', '태풍', '때문', '날씨', '혼자', '숙박시설', '독점', '재미', '정말', '곳', '힐링', '공간', '지미', '카페', '분위기', '단점', '태풍', '불면', '조금', '외진', '곳', '대리', '기사', '구', '점', '건물', '내부', '시설', '관리', '직원', '다음', '기회', '꼭', '다시', '곳', '주차', '아주', '주차장', '호텔', '위치', '환상', '방문', '현지', '시장', '매우', '방', '박', '우리', '욕실', '가지', '때문', '나', '방', '욕실', '및', '주방', '매우', '것', '강조', '예산', '호스텔', '가격', '관계', '품질', '균형', '직원', '영어', '불구', '그', '도움', '노력', '월', '일', '공항', '혼자', '하루', '정도', '조식', '아무', '드', '구', '위치', '나', '그것', '사랑', '것', '나', '제', '의', '체', '그것', '해변', '해변', '레스토랑', '도시', '최고', '나', '거기', '다시', '생각', '바다', '마주', '옆', '면', '주인', '위치', '시설', '및', '경치', '환대', '가장', '그', '가격', '상대', '손님', '층', '건물', '사용', '수', '각', '층', '매우', '독립', '사용', '수', '나', '부부', '가족', '모두', '그것', '권장', '최전선', '바다', '조', '수', '것', '최고', '수', '일단', '주변', '유흥주점', '여자', '끼리', '진짜', '또', '환풍', '담배', '냄새', '진짜', '금연', '리뷰', '맛', '예약', '진짜', '담배', '냄새', '상상', '초월', '해', '건물', '공사', '진짜', '대충', '담배', '냄새', '화장실', '겹겹', '저', '진짜', '구역질', '경험', '그냥', '밤', '친구', '정말', '모텔', '용', '여행', '가격', '도', '진짜', '여행', '최악', '경험', '스테이', '호텔', '은', '여관', '호텔', '그', '손님', '위해', '체크', '리셉션', '가지', '객실', '위성', '채널', '시청', '수', '평면', '냉장고', '및', '무료', '전용', '대형', '욕실', '샤워', '시설', '제한', '무료', '세면', '도구', '헤어', '드라이어', '여행자', '위', '기본', '필요성', '지하', '쇼핑', '단지', '거리', '동문', '시장', '불과', '과', '관광', '명소', '도보', '도달', '수', '환전', '정', '파빌리온', '버스', '버스', '정류장', '시내', '관광', '버스', '를', '이용', '수도', '주변', '전혀', '호텔', '옆', '프라이드', '치킨', '맥주', '하우스', '개', '해산물', '레스토랑', '플러스', '호텔', '바로', '편', '미니', '마트', '체적', '나', '개', '날', '체', '재는', '그', '리셉션', '자주', '때문', '직원', '대해', '말', '것', '매일', '방', '청소', '합', '다애', '월', '해안', '도로', '전망', '숙소', '임신', '축', '숙소', '내', '집기', '상태', '아주', '층', '건물', '공간', '층', '모두', '침실', '욕실', '거실', '간', '아이', '층', '공간', '개인', '테라스', '마음', '바다', '동안', '자주', '테라스', '청소', '상태', '아주', '집주인', '다음', '여행', '다시', '숙소', '임명', '자도', '문제', '나', '여기', '매우', '로비', '무료', '만다린', '합리', '가격', '대당', '원', '모든', '것', '작동', '생선', '시장', '근처', '도시', '매우', '중앙', '위치', '도착', '시', '바다', '방', '달라', '우리', '보기', '이', '해변', '도로', '바로', '옆', '트래픽', '사람', '방해', '최소한', '및', '식당', '지역', '돼지고기', '해산물', '전체', '계속', '옆', '방', '자체', '꽤', '평균', '모든', '것', '수건', '층', '커피숍', '침대', '돌', '개인', '마음', '내', '파트너', '숙소', '엄철', '내부', '인테리어', '아주', '중문', '렌트', '방문', '어디', '가기', '숙소', '추천', '직장', '장기', '휴가', '월', '일', '일', '일주일', '도미', '토리', '게스트하우스', '바다', '자전거', '자전거', '수', '도미', '토리', '커플', '가족', '위', '룸', '커피', '조식', '포함', '혹시', '낚시', '포구', '앞', '배', '저', '낚시', '사장', '문의', '고내포구', '바로', '앞', '통', '유리', '바다', '뷰', '환상', '호스트', '호텔', '수건', '정말', '곳', '아침식사', '커피', '저', '커피', '사장', '원두', '문의', '원가', '봉지', '볶음밥', '토스트', '등', '포함', '사장', '자전거', '협재', '것', '참고', '자전거', '길', '이름', '제주도', '환상', '자전거', '길', '자전거', '길', '달리', '중간', '바다', '술책', '서점', '카페', '근처', '마틸다', '판', '바', '바다', '자전거', '숙박', '예정', '시', '팝', '예전', '가요', '생각', '바', '음악', '신청', '술', '한잔', '곳', '천국', '저녁', '시', '새벽', '시', '영업', '화요일', '휴무', '마틸다', '안쪽', '분만', '가시', '애월', '도서관', '금요일', '관', '게스트하우스', '바로', '옆', '건물', '시간', '영업', '일단', '최저', '생활', '걱정', '반대쪽', '옆', '횟집', '정류장', '번', '버스', '타고', '공항', '층', '편의점', '까페', '레스토랑', '테라스', '화장실', '마루', '바닥', '점', '편', '가성', '비', '곳', '제주시', '호텔', '나름', '전망', '주차장', '주차', '타워', '게', '좀', '점', '조식', '시간', '시', '부터', '단체', '손님', '시', '부터', '것', '데', '비행', '시간', '때문', '일찍', '데', '단체', '손님', '조식', '편', '롱', '마을', '제주', '전통', '가옥', '꾸밈', '분', '거리', '화', '해변', '편의점', '버스정류장', '가까이', '카페', '맛집', '꽤', '며칠', '진짜', '지역', '주민', '주말', '화', '민속', '오일장', '플리', '마켓', '거리', '쿠팡', '가격', '구매', '간곳', '기대', '공항', '바로', '옆', '비행기', '이착륙', '소리', '그다지', '공항', '활주로', '끝', '자락', '잔디', '부분', '마치', '오름', '보이', '해안', '도로', '따라서', '전망', '단', '하룻밤', '날씨', '해안', '도로', '산책', '다음', '꼭', '다시', '조식', '기대', '가격', '대비', '미역국', '밥', '김치', '여행지', '로', '닭', '볶음', '맛', '더', '조언', '탕수육', '메뉴', '추천', '아침', '메뉴', '소스', '차라리', '장아찌', '나물', '생선', '구이', '더', '양식', '조식', '토스트', '커피', '달걀', '한식', '스크램블', '영', '한식', '양식', '매하', '맛', '저', '커피', '티', '직원', '청소', '관리', '분도', '투숙', '객', '인사', '모습', '특급', '호텔', '경험', '서비스', '인상', '다음', '시간', '일', '이번', '여행', '숙소', '선택', '기준', '공항', '거리', '주변', '환경', '혼자', '여행', '이기', '편리', '가지', '모두', '숙소', '공항', '택시', '분', '천원', '정도', '거리', '한번', '공항', '호텔', '쉬엄쉬엄', '시간', '여분', '소요', '용담', '도로', '공항', '올레길', '걸', '수', '코스', '마지막', '날', '첫', '날', '도보', '여행', '계획', '분', '한번', '것', '주변', '바로', '옆', '편의점', '카페', '식당', '모두', '위치', '번잡', '거나', '체적', '숙소', '위치', '곳', '어', '마을', '곳', '숙소', '바로', '앞', '공원', '침대', '바다', '일몰', '볼', '수', '트윈룸', '성인', '명', '정도', '이용', '수', '구', '기본', '욕실', '용품', '비치', '칫솔', '조식', '크게', '것', '그냥', '일반', '아침', '가정식', '정도', '생각', '박', '일', '이용', '마루', '바닥', '나름', '씨뷰', '공항', '근처', '하루', '조식', '무조건', '포함', '던데', '가격', '대비', '사진', '스위트룸', '이틀', '동안', '객실', '인용', '일반', '한국', '호텔', '객실', '객실', '편의', '시설', '작동', '문제', '두', '가지', '점', '욕실', '목욕', '타월', '호텔', '핸드', '타월', '만', '제공', '방', '목욕', '타', '추가', '아침', '식사', '스프레드', '매우', '아침', '식사', '이름', '나', '회교도', '음식', '돼지', '고기', '여부', '결정', '매우', '음식', '이름', '매우', '유용', '것', '위치', '공항', '도심', '근처', '그것', '단지', '호텔', '단체', '여행객', '만', '이용', '수', '호텔', '수면', '전용', '만', '사용', '년', '일', '이틀', '이', '여행사', '예약', '이', '호텔', '선택', '기본', '이', '호텔', '것', '꽤', '주변', '내', '호텔', '외관', '기반', '새', '것', '체크', '인도', '방', '심플', '디자인', '욕실', '면도', '구가', '칫솔', '제외', '방', '편의점', '층', '위치', '프론트', '데스크', '카운터', '기본', '옆', '이', '근처', '것', '아침', '일간', '평균', '전반', '목적', '잠', '수행', '호텔', '공항', '매우', '로비', '개', '서비스', '수하물', '보이', '영어', '의사', '소통', '수', '프론트', '데스크', '접수', '아침', '뷔페', '거의', '매일', '엘리베이터', '객실', '기본', '세면', '도구', '제공', '위치', '대부분', '관광', '사이트', '중심', '나', '다음', '다른', '호텔', '예약', '것', '선호', '공항', '매우', '대로', '변', '곰팡이', '냄새', '창문', '열', '에어컨', '바로', '침대', '위', '직', '방이', '화장실', '문도', '불편', '밤낮', '잠', '자지', '호텔', '방', '확인', '감사', '우리', '매우', '모든', '필수품', '제공', '제공', '아침', '식사', '매우', '준비', '주변', '제주', '시내', '먹거리', '찾기', '스킨로션', '류', '어매니티', '것', '함', '조금', '교통', '골목길', '제', '곳', '별로', '스파', '칫솔', '치약', '세트', '방이', '프런트', '말', '스탠드', '하나', '차이', '화장실', '유리', '벽', '내부', '누군가', '큰일', '날', '뻔', '호텔', '전혀', '외관', '다만', '리', '모델링', '호텔', '것', '흔적', '좀', '조명도', '좀', '공항', '접근성', '하루', '곳', '김포공항', '시', '출발', '비행기', '공항', '곳', '컬리', '넌', '호텔', '숙박', '실제', '공항', '번', '번', '버스', '타고', '분', '정도', '곳', '호텔', '약', '분', '정도', '도착', '예약', '방', '무료', '업그레이드', '더', '이용', '이용', '비즈니스', '호텔', '제일', '것', '샴푸', '바디', '클렌', '저', '생수', '병', '드라이기', '구비', '욕조', '욕', '푹', '가격', '대도', '소셜', '및', '각종', '루트', '통해', '예약', '박', '저렴', '하겐', '만원', '대도', '것', '다음', '제주도', '다시', '이용', '예정', '정원', '바다', '사진', '때문', '를', '선택', '이건', '정말', '보기', '내', '때', '세', '이상', '한국', '젊은이', '거주', '때문', '실제', '패', '장소', '시설', '공용', '구역', '기숙사', '사이', '청각', '적분', '리가', '모든', '사람', '때', '중간', '것', '것', '또한', '원래', '개인', '주택', '므', '욕실', '수', '위치', '현재', '용량', '최적화', '팁', '더블', '집', '선라이즈', '포인트', '근처', '정말', '소유자', '서핑', '클래스', '참가', '다른', '방법', '제주', '제주', '바다', '볼', '수', '곳', '찾기', '위해', '나', '검색', '나', '숙소', '데', '익숙', '여기', '것', '호스트', '매우', '환영', '분위기', '매우', '뒤', '내', '저녁', '식사', '참여', '수', '대부분', '밤', '박', '동안', '여기', '그것', '처음', '아라', '방문', '때', '집', '주인', '언덕', '저택', '두', '팀', '스테이', '제주도', '경치', '주인', '와인', '교수', '영어', '프랑스어', '그', '그', '집', '문제', '삼성', '냉장고', '새', '파워', '에어콘', '매우', '세탁기', '케이블', '채널', '슈퍼', '화장실', '환상', '산', '의', '매우', '침대', '소파', '침대', '제주', '시청', '버스', '정류장', '곳', '제주도', '곳', '로', '이동', '수', '방법', '에어', '버스', '어', '월령항', '바로', '앞', '펜션', '방도', '침대', '쉬', '가요', '주인', '아주머니', '기분', '놀수', '풀', '자쿠지', '인테리어', '종업원', '주변', '풍력', '발전기', '다이지', '저희', '친구', '봄', '생각', '이상', '시설', '바다', '경치', '리조트', '정말', '이뻣다', '나중', '시간', '다시', '한번', '추억', '바다', '전망', '무엇', '환상', '제주시', '라마', '프라자', '호텔', '한눈', '비즈니스', '이용', '객실', '관리', '다음', '가족', '다시', '무엇', '직원', '인상', '사진', '직원', '별로', '무뜩뚝', '편이', '비행기', '소음', '감안', '분실물', '우편', '달라', '우편', '비', '세금', '문제', '등등', '별로', '전반', '우리', '공항', '더', '여행', '끝내기', '위해', '호텔', '어제', '도착', '그것', '분', '버스', '버스', '아마', '택시', '가족', '위', '장소', '매우', '우리', '가족', '방', '우리', '개', '싱글', '침대', '개', '방', '개', '이중', '개', '방', '개', '욕실', '식당', '라운지', '부엌', '것', '바로', '가족', '것', '우리', '해변', '도보', '택시', '분', '시간', '우리', '해변', '매우', '객실', '스파', '피로', '풀기', '호텔', '리조트', '객실', '안', '취사', '객실', '바로', '앞', '해변', '가가', '도보', '분거', '리도', '채', '해안', '도로', '객실', '내', '바다', '볼', '수', '한라산', '등산', '때', '왕복', '셔틀', '이용', '등산', '스틱', '점심', '도시락', '미리', '주문', '프런트', '직원', '등산', '때', '조식', '한식', '등산', '때', '여기', '해', '근처', '위치', '해변', '이', '호텔', '이동', '수', '차', '아주', '주변', '환경', '평화', '수', '이', '호텔', '아침', '식사', '제공', '빵', '계란', '계란', '요리', '직접', '스타일', '것', '셀프', '서비스', '다리', '뷰', '보고', '호텔', '모텔', '펜션', '얼마', '걸', '화장실', '청소', '상태', '별로', '문', '물질', '거', '후회', '가격', '대비', '더', '곳', '지은지', '얼마', '저녁', '미리', '주위', '편의점', '가격', '호텔', '호텔', '객실', '세명', '더블베드', '하나', '싱글', '베드', '하나', '가구', '심플', '촐', '모자라', '화장실', '욕조', '편임', '난방', '개별', '온도', '수', '월', '겨울', '밤', '수', '방이', '약간', '시간', '체크', '하자', '마자', '온도', '것', '추천', '이불', '두툼', '솜', '이불', '좀', '무지', '층', '야외', '풀이', '내', '방문', '시', '인지', '비닐', '덮어놓고', '폐쇄', '좀', '아쉬움', '조식', '부', '폐식', '만원', '좀', '가격', '음식', '맛', '종류', '렌터카', '운전', '위치', '애월', '다시', '거', '곳', '택', '이유', '객', '실내', '스파', '동물원', '때문', '스파', '시설', '동물원', '말', '돼지', '앵무새', '토끼', '등', '동물', '애', '내내', '밖', '동물', '돼지', '그냥', '마당', '막', '마트', '차', '동물', '스파', '모든', '불편', '해소', '아침', '포함', '한식', '토스트', '근처', '갈수', '마트', '아침', '커텐', '보시', '깜짝', '광경', '해변', '주차공간', '호텔', '옆', '건너편', '주차', '다방', '주인', '아저씨', '것', '것', '안내', '앞', '바다', '훤히', '보이', '곳', '장점', '공항', '및', '및', '맥도널드', '근처', '분', '비교', '단점', '대략', '방', '명', '매우', '아침', '식사', '매우', '변경', '음식', '대부분', '매일', '반복', '방', '주전자', '가물', '피치', '전혀', '수', '급', '호텔', '체크', '때', '나', '모든', '모서리', '이웃', '국가', '투어', '관광객', '공공장소', '정렬', '수', '그', '자정', '중간', '밤', '프론트', '데스크', '직원', '프론트', '데스크', '단지', '한국어', '구사', '프론트', '데스크', '직원', '매우', '제목', '이름', '호텔', '내부', '시설', '모텔', '그다지', '공항', '도보', '약', '분', '정도', '거리', '접근성', '침대', '매트리스', '아주', '보이', '누울', '때', '생각', '숙소', '선택', '곳임', '박', '만원', '선택', '방', '아주', '욕조', '가가', '조식', '포함', '조식', '아메리칸', '스타일', '주인', '직접', '줌', '방', '매우', '리', '모델링', '매우', '단', '숙소', '길이', '골목', '리조트', '겉', '모양', '매우', '첫인상', '매우', '수', '매일', '욕조', '몸', '바다', '수', '가격', '고려', '선택', '판단', '제주', '조이', '랜드', '약', '개', '분리', '목조', '층', '주택', '구성', '부엌', '식당', '시설', '한국', '독립', '아파트', '바다', '언덕', '위', '부분', '위치', '제주', '서부', '자동차', '약', '분', '거리', '경내', '과일', '나무', '회의실', '컨퍼런스', '시설', '한국인', '인기', '것', '대형', '슈퍼마켓', '제주도', '주변', '주요', '도로', '약', '소나무', '통나무', '침실', '층', '거실', '층', '주방', '스토브', '싱크대', '및', '냉장고', '직원', '영어', '수', '도움', '위치', '모든', '버스', '출발', '버스', '정류장', '공항', '버스', '여기', '멈', '이', '모텔', '가족', '운영', '사업', '직원', '보너스', '인', '영어', '말', '수', '그것', '돈', '위해', '아주', '가치', '현지', '레스토랑', '미니', '마트', '근처', '이', '호텔', '약간', '날짜', '일부', '객실', '개조', '것', '우리', '박', '동안', '거기', '우리', '주', '집', '방', '이', '방과', '보관', '부엌', '매우', '를', '사용', '집', '찾기', '한국', '모든', '것', '마찬가지', '커뮤니케이션', '어려움', '예', '우리', '방', '히터', '모든', '지시', '사항', '한국어', '주인', '사용', '방법', '설명', '전반', '곳', '추천', '합', '다방', '위치', '매력', '리셉션', '건물', '개략', '인', '것', '보이', '대적', '인', '개조', '직원', '영어', '의사', '소통', '매우', '주차', '공간', '제공', '공용', '주차', '공간', '사용', '이', '호텔', '풍력', '터빈', '전망', '해변', '근처', '위치', '장점', '도움', '소유자', '모든', '것', '단점', '게스트', '하우스', '도로', '입구', '나머지', '제주도', '방문', '여러', '호텔', '펜션등', '이용', '한가지', '아쉬움', '시설', '문제', '느낌', '수', '곳', '주인', '숙소', '여행객', '편안함', '주어', '여행', '여유', '수', '해', '준', '다세', '해변', '근처', '위치', '와락', '게스트하우스', '주말', '화', '여', '프리', '마켓', '구경', '날', '해변', '가가', '바로', '옆', '게스트하우스', '내', '잔디밭', '야외', '정원', '바람', '사장', '다락방', '층', '만화책', '오락', '기', '혼자', '여행', '다른', '여행객', '수다', '수', '위치', '시내', '공항', '근처', '해변', '약', '객실', '부엌', '제공', '방', '매일', '청소', '국제', '기준', '준비', '수건', '손수건', '것', '간주', '식료품', '가게', '시내', '분', '거리', '세계', '마트', '식사', '위', '메뉴', '인접', '레스토랑', '요리', '호텔', '식사', '제공', '및', '제공', '수', '선택', '메뉴', '호텔', '주인', '주문', '데', '도움', '스테이', '징', '것', '비행기', '이륙', '소리', '볼', '수', '우리', '숙박', '감소', '공항', '밤', '아침', '일어나서', '매일', '아침', '귀', '새', '수탉', '울음', '빨강', '해변', '향', '볼', '말', '모양', '등대', '여성', '집', '보기', '해변', '수', '사람', '개', '산책', '조깅', '건조', '시', '야채', '야영', '검토', '마을', '향', '일', '여성', '저', '산', '봉', '조감도', '의', '제주시', '공항', '바다새', '호텔', '현대', '장비', '룸', '사이즈', '발코니', '바다', '볼', '수', '제공', '수건', '매우', '작고', '손수건', '아침', '식사', '포함', '레스토랑', '호텔', '근처', '수', '꽤', '태국', '음식', '맛', '태국', '음식', '에이', '가격표', '나', '이번', '매우', '표준', '하나', '나', '얼마나', '때', '객실', '것', '시설', '욕실', '샤워', '기', '및', '욕조', '아래층', '커피숍', '가격', '대비', '이벤트', '호텔', '최악', '물', '응대', '형편', '대한', '사과', '객실', '빨대', '찌꺼기', '그냥', '만원', '호텔', '갈껄', '돈', '목말', '냉장고', '종이컵', '공항', '밤', '도착', '오전', '일찍', '출발', '시', '비행기', '이륙', '아이', '잠깐', '공항', '근처', '호텔', '실내', '수영장', '커피숍', '마사지', '리조트', '객실', '모텔', '정도', '규모', '시설', '년', '신설', '곳', '시설', '저희', '때', '오픈', '이벤트', '건', '모든', '숙박', '객', '계속', '서비스', '제공', '시간', '정도', '안마', '의자', '이용', '족욕', '서비스', '수영장', '정도', '규모', '저희', '전날', '밤', '렌트카', '반납', '곳', '태풍', '비행기', '딜', '레이', '때', '공항', '근처', '일정', '조정', '호텔', '방과', '욕실', '자동차', '호텔', '로비', '약간', '겨울', '식당', '문', '미리', '예약', '생각', '금릉', '항', '협재', '해수욕장', '호텔', '여행자', '위', '더', '식당', '카페', '더', '것', '서비스', '매우', '호텔', '난방', '매우', '저', '호텔', '숙소', '다소', '노후', '천장', '등', '전체', '방이', '관리', '부분', '보', '화장실', '타일', '사이', '곰팡이', '슬', '점', '층', '엘레베이터', '점', '짐', '커플', '부분', '좀', '근처', '편의점', '편의점', '간식', '꼭', '사서', '기대', '이하', '고간', '곳', '프라이', '베이트', '풀', '빌라', '비', '수기', '만원', '기본', '룸', '예약', '엘베', '층', '기본', '방과', '층', '루프', '트탑', '수영', '위치', '박동', '안', '수영', '일단', '이', '호텔', '예약', '이유', '굳이', '풀', '빌라', '루프', '탑', '풀', '이용', '수', '장점', '때문', '예약', '저녁', '중', '이용', '시간', '대해', '리셉션', '전화', '청소', '정보', '며', '직원', '총지배인', '여직원', '말투', '소셜', '구매', '손님', '이란', '표현', '정말', '억', '순간', '호텔', '어플', '및', '포털', '사이트', '공개', '정보라', '루프', '탑', '수풀', '이용', '말', '정보', '며', '마치', '얘기', '직원', '태도', '당황', '호텔', '로비', '리플렛', '루프', '탑', '사계절', '수풀', '영화', '상영', '요즘', '손님', '선택', '얼마나', '정보', '진행', '전혀', '이해', '듯', '상황', '직접', '제', '정보', '인지', '증명', '위해', '동영상', '첨부', '일', '손님', '제', '나중', '서비스', '라며', '병', '맥주', '병', '풀', '빌라', '이용', '나머지', '호텔', '리셉션', '층', '룸', '가격', '대비', '정말', '별로', '나중', '명', '여기', '풀', '빌라', '직원', '때문', '절대', '이용', '제주', '공항', '택시', '타고', '분', '정도', '소요', '택시', '기사', '주소', '비', '감', '외관', '내부', '로얄', '호텔', '가격', '대비', '공항', '시내', '셔틀', '이동', '골프장', '사우나', '무료', '이용', '식당', '음식', '별로', '매점', '밤', '피자', '수', '것', '룸', '욕실', '상탲', '여행객', '수', '수영장', '입퇴', '실시간', '입', '실시', '퇴실', '다소', '것', '보통', '숙소', '가족', '끼리', '가야', '곳', '공항', '도착', '시간', '때문', '공항', '인근', '바다', '곳', '숙소', '곳', '일반', '제주', '도미', '토리', '인', '숙박', '가격', '곳', '개인실', '잡', '수', '체크', '가능', '주인', '근처', '편의점', '식당', '직원', '숙박', '그', '거의', '영어', '말', '수', '그', '인터넷', '접속', '덕택', '우리', '를', '통', '대화', '수', '위치', '공항', '근처', '객실', '그', '무료', '아침', '식사', '제공', '가장', '레스토랑', '카페', '분', '이상', '가야', '호텔', '사람', '위', '제주도', '여행', '누가', '적', '곳', '묵', '수', '밤', '방', '자체', '이틀', '동안', '잠', '푹', '자지', '장점', '무료', '주차장', '호텔', '외부', '객실', '에어컨', '호텔', '때문', '잠', '단점', '청결', '개선', '침대', '얼룩', '서피스', '그', '영어', '우리', '것', '우리', '동안', '더욱', '경우', '질문', '찾기', '이유', '이', '호텔', '위치', '구글', '맵', '차', '렌트', '찾기', '우리', '사람', '캐리어', '지적', '사람', '전체', '이', '호텔', '곳', '제주', '가격', '럭셔리', '다른', '곳', '것', '위치', '공항', '우리', '도착', '이', '호텔', '합리', '가격', '나중', '건', '다음', '날', '아침', '매우', '호텔', '북부', '관광명소', '길', '머리', '바위', '해산물', '벨트', '용', '직원', '영어', '나', '볼', '수', '그', '약간', '손상', '전원', '어댑터', '하나', '작동', '것', '금속', '이', '기', '때문', '선택', '경우', '중', '하나', '방', '편이', '전체', '일부', '테이블', '서피스', '및', '머리', '전체', '허용', '우린', '잠', '제주', '항구', '옆', '지역', '게스트', '하우스', '주인', '매우', '도움', '우리', '제', '의', '마루', '방', '가지', '그것', '아주', '그것', '분', '다음', '음식점', '가기', '합리', '방', '그', '곳', '것', '태풍', '겨우', '첵', '방', '주시', '우리', '요구', '아침식사', '척척', '제공', '곳', '평', '대리', '간다', '곳', '비', '수기', '더더', '것', '하늘', '시간', '밥', '맛', '집밥', '메뉴', '인테리어', '청소', '상태', '모두', '양호', '애월', '바닷가', '다소', '렌트카', '이동', '곳', '공항', '도착', '애월쪽', '숙소', '숙소', '무엇', '가격', '일본', '비즈니스', '호텔', '곳도', '객실', '수하물', '여', '공간', '휴식', '곳', '라면', '곳', '당신', '위', '곳', '호텔', '약시', '지정', '주소', '사용', '지도', '사이트', '사용', '를', '사용', '위치', '파악', '절반', '정도', '버스', '정류장', '도보', '몇', '분', '메인', '스트리트', '그것', '버스', '터미널', '도보', '약', '분', '내', '호텔', '예약', '때', '나', '단지', '명', '침대', '남성', '용', '기숙사', '말', '나', '그것', '숙소', '무엇', '다라', '생각', '그것', '의미', '것', '당신', '방', '커플', '수', '생각', '단지', '성의', '사람', '방', '수', '호텔', '현대', '객실', '겨울철', '난방', '제공', '나', '불만', '짐', '열', '수', '공간', '것', '나', '다른', '비즈니스', '호텔', '도쿄', '비즈니스', '호텔', '거의', '나', '방', '다소', '매우', '호텔', '영화관', '및', '레스토랑', '구역', '도보', '약', '분', '거리', '거기', '레스토랑', '대부분', '내', '개', '레스토랑', '양식', '음식', '제외', '영국', '메뉴', '가지', '그것', '버스', '터미널', '공항', '때문', '수', '곳', '그것', '약', '원', '밤', '나', '다시', '장소', '나', '친구', '추천', '우리', '주인', '이', '공항', '우리', '오기', '장소', '다른', '침실', '식당', '부엌', '방문객', '위', '거실', '집', '주인', '서울', '방문', '때문', '우리', '박', '동안', '여기', '지난', '밤', '홀로', '쇼핑', '거리', '단', '몇', '걸음', '거리', '방', '파울', '인근', '상점', '때문', '호스텔', '위치', '제주시', '고급', '위치', '곳', '적극', '추천', '곳', '바로', '옆', '쇼핑', '거리', '또한', '공항', '근처', '게스트', '하우스', '적', '베스트', '우리', '예약', '더', '블룸', '통해', '호텔', '우리', '도착', '때', '주인', '말', '게스트', '하우스', '그녀', '전화번호', '예약', '사실', '간', '그녀', '걱정', '그녀', '그녀', '문제', '우리', '호텔', '사이', '그녀', '그녀', '사무실', '예약', '취소', '및', '환불', '해', '것', '수', '하자', '그녀', '다시', '그', '돈', '다시', '생각', '것', '환불', '거부', '하자', '이', '호텔', '예약', '처음', '마지막', '주인', '우리', '다른', '호텔', '모두', '예약', '주말', '사용', '마을', '비젼', '게스트', '하우스', '호스트', '수', '느낌', '우선', '공항', '픽업', '드롭', '오프', '일', '때', '또한', '계획', '우리', '하루', '여행', '제주도', '가장', '점', '위치', '하우스', '돼지고기', '바로', '옆', '약', '너', '처럼', '레스토랑', '전부', '물건', '팔고', '제', '실망', '네', '책', '비록', '그', '나', '더', '방', '예약', '경우', '장치', '그', '시간', '동안', '안', '나', '그냥', '변경', '수', '인테리어', '조금', '심지어', '곳', '민박', '호텔', '그냥', '빵', '토스트', '잼', '버터', '자신', '위해', '커피', '오렌지', '주스', '그녀', '그녀', '곧', '내년', '일부', '내부', '혁신', '저', '저', '우선', '서비스', '심지어', '좀', '실망', '것', '우리', '여행', '상상', '수', '나머지', '전체', '일', '아주', '사람', '이틀', '밤', '동안', '대부분', '실속', '문', '우리', '다시', '돼지', '바비큐', '우리', '모습', '이', '이후', '그', '약', '플러스', '곧바로', '그녀', '곳', '었다', '기도', '우리', '감동', '배려', '제주도', '위치', '호텔', '시티', '센터', '위치', '수산', '시장', '버스', '정류장', '도보', '거리', '호텔', '짐', '수', '두', '개', '중간', '크기', '시간', '식당', '층', '지금', '찾기', '숙박시설', '제주도', '몇', '가지', '후기', '아고다', '통해', '예약', '후', '일부', '지원', '정말', '경험', '예약', '취소', '이윽고', '우리', '이', '호텔', '곳', '지역', '즉', '바다', '호텔', '아주', '인기', '중국', '여행', '또한', '게스트', '하우스', '바로', '호텔', '우리', '게스트', '하우스', '방지', '투어', '또한', '새', '우리', '방', '아주', '우리', '조식', '불', '포함', '지급', '위치', '룸', '컨디션', '별로', '구석구석', '먼지', '리뷰', '보고', '이용', '사진', '다른', '룸', '매우', '습', '디', '직원', '사무', '별로', '습', '디', '다시', '이용', '일', '듯', '곽', '해수욕장', '바로', '앞', '뷰', '정말', '편의점', '맛집', '등', '여행', '곳', '층', '로비', '오픈', '공간', '바다', '맥주', '한잔', '것', '룸', '재', '방문', '의사', '씨뷰', '호텔', '월초', '바닷가', '앞', '때', '중앙', '난방', '방식', '면서', '난방', '에어컨', '밤', '난방', '불가', '함', '룸', '바닥', '카펫', '청소', '남편', '아이', '계속', '재체기', '박', '콧물', '나기', '시작', '명', '예약', '모든', '애', '티', '수건', '슬리퍼', '칫솔', '등', '명', '준비', '가격', '대비', '인테리어', '숙소', '지어짅', '얼마', '매우', '편', '바닥', '나무', '재질', '색상', '모던', '인테리어', '인상', '호텔', '분', '거리', '바로', '아이', '곽', '해수욕장', '있었느', '태풍', '시즌', '모래바람', '사이', '사진', '한장', '겨우', '룸서비스', '조식', '건너편', '쌀국수', '집', '거기', '만원', '안쪽', '특급', '호텔', '시설', '분', '꽤', '비수', '이용', '곽', '과물', '해변', '조금', '해변', '식당', '다만', '내부', '정돈', '느낌', '청결', '신경', '더', '것', '위치', '규모', '호텔', '별로', '애월', '비교', '규모', '호텔', '로서', '푸른', '바다', '바로', '앞', '저녁', '석양', '무렵', '직원', '직원', '편입', '니', '룸', '바다', '전망', '욕실', '방', '전체', '비릿', '냄새', '나', '단점', '조식', '전체', '가성', '비', '기타', '바다', '눈', '보이', '사시', '사철', '수영', '루프', '탑', '수영장', '아주', '다시', '가격', '할인', '가도', '밤', '디제이', '모로', '수준', '그닥', '실내', '환기', '팬', '및', '에어컨', '소음', '침대', '객실', '외부', '유리창', '사이', '스파', '객실', '이', '스파', '위쪽', '상시', '작동', '팬', '현관', '룸키', '마스터', '전원', '저속', '작동', '화장실', '팬', '작동', '고속', '작동', '시스템', '일단', '룸', '키', '이', '스파', '위쪽', '팬', '끌', '수', '스위치', '저', '이', '팬', '소음', '수면', '방해', '정도', '매우', '관리직', '환기', '팬', '원선', '분리', '직원', '분', '말씀', '전', '컴', '플레인', '적', '또', '천정', '삼성', '시스템', '에어컨', '설치', '설치', '문제', '종', '문제', '소음', '저', '경우', '밤', '에어컨', '수', '정도', '날씨', '사용', '분', '문제', '수준', '소음', '여름', '투숙', '분', '고민', '듯', '관리', '직원', '분', '에어컨', '소음', '방법', '숙박', '포기', '다른', '호텔', '가신', '고객', '말씀', '객실', '내부', '청결', '및', '하우스', '키핑', '문제', '제', '경우', '객실', '청소', '실제', '담당', '분', '테', '이', '정도', '가격', '호텔', '수준', '응대', '관련', '그', '분과', '대화', '더', '나누기', '프런트', '관련', '컴', '플레인', '프런트', '해결', '려고', '노력', '것', '다만', '호텔', '직원', '서비스', '마인드', '교육', '하우스', '키핑', '제대로', '느낌', '가족', '국적', '분위기', '애월', '호텔', '밑', '여자', '정', '황상', '입금', '지인', '강아지', '데리', '적반하장', '화', '우리', '가족', '한텐', '친절', '저런', '바로', '글', '보시', '가족', '여행', '중', '우리', '관광', '간', '사이', '호텔', '직원', '무단', '허락', '객실', '난입', '온', '방', '우선', '이', '팩트', '이유', '메이드', '청소', '중', '애완', '용품', '것', '우리', '허락', '객실', '내부', '물건', '사진', '몰래', '직원', '단체', '방', '유포', '호텔', '총지배인', '및', '직원', '사실', '확인', '차', '명', '이서', '그것', '확인', '우리', '객실', '무단', '것', '관광', '총지배인', '사람', '우리', '말', '자기', '객실', '직접', '물건', '확인', '벌금', '내', '것', '정말', '말', '정도', '실물', '강아지', '것', '그로', '민원', '것', '하물며', '및', '증거', '추정', '물건', '호텔', '관계자', '명', '무단', '객실', '출입', '가요', '이', '대한민국', '호텔', '수', '일일', '물건', '추정', '컨데', '강아지', '스위트룸', '박', '더', '내', '객실', '뒤', '컴', '플레인', '및', '것', '내', '직원', '우리', '객실', '무단', '출입', '것', '하니', '박치', '돈', '경찰', '객실', '수색', '계속', '확인', '협박', '및', '강압', '말로', '우리', '모욕감', '조성', '그', '누가', '부모님', '가족', '쉬', '공간', '직원', '수색', '동의', '하나요', '혹', '나', '그', '안', '호텔', '규율', '담배', '고기', '흔적', '해도', '그', '누구', '우리', '허락', '우리', '점유', '객실', '나', '그것', '사랑', '것', '나', '제', '의', '체', '그것', '해변', '해변', '레스토랑', '도시', '최고', '나', '거기', '다시', '생각', '바다', '마주', '옆', '면', '주인', '위치', '시설', '및', '경치', '환대', '가장', '그', '가격', '상대', '손님', '층', '건물', '사용', '수', '각', '층', '매우', '독립', '사용', '수', '나', '부부', '가족', '모두', '그것', '권장', '최전선', '바다', '조', '수', '것', '최고', '수', '이틀', '동안', '객실', '인용', '일반', '한국', '호텔', '객실', '객실', '편의', '시설', '작동', '문제', '두', '가지', '점', '욕실', '목욕', '타월', '호텔', '핸드', '타월', '만', '제공', '방', '목욕', '타', '추가', '아침', '식사', '스프레드', '매우', '아침', '식사', '이름', '나', '회교도', '음식', '돼지', '고기', '여부', '결정', '매우', '음식', '이름', '매우', '유용', '것', '위치', '공항', '도심', '근처', '그것', '단지', '호텔', '단체', '여행객', '만', '이용', '수', '호텔', '수면', '전용', '만', '사용', '년', '일', '이틀', '이', '여행사', '예약', '이', '호텔', '선택', '기본', '이', '호텔', '것', '꽤', '주변', '내', '호텔', '외관', '기반', '새', '것', '체크', '인도', '방', '심플', '디자인', '욕실', '면도', '구가', '칫솔', '제외', '방', '편의점', '층', '위치', '프론트', '데스크', '카운터', '기본', '옆', '이', '근처', '것', '아침', '일간', '평균', '전반', '목적', '잠', '수행', '일단', '주변', '유흥주점', '여자', '끼리', '진짜', '또', '환풍', '담배', '냄새', '진짜', '금연', '리뷰', '맛', '예약', '진짜', '담배', '냄새', '상상', '초월', '해', '건물', '공사', '진짜', '대충', '담배', '냄새', '화장실', '겹겹', '저', '진짜', '구역질', '경험', '그냥', '밤', '친구', '정말', '모텔', '용', '여행', '가격', '도', '진짜', '여행', '최악', '경험', '스테이', '호텔', '은', '여관', '호텔', '그', '손님', '위해', '체크', '리셉션', '가지', '객실', '위성', '채널', '시청', '수', '평면', '냉장고', '및', '무료', '전용', '대형', '욕실', '샤워', '시설', '제한', '무료', '세면', '도구', '헤어', '드라이어', '여행자', '위', '기본', '필요성', '지하', '쇼핑', '단지', '거리', '동문', '시장', '불과', '과', '관광', '명소', '도보', '도달', '수', '환전', '정', '파빌리온', '버스', '버스', '정류장', '시내', '관광', '버스', '를', '이용', '수도', '주변', '전혀', '호텔', '옆', '프라이드', '치킨', '맥주', '하우스', '개', '해산물', '레스토랑', '플러스', '호텔', '바로', '편', '미니', '마트', '체적', '나', '개', '날', '체', '재는', '그', '리셉션', '자주', '때문', '직원', '대해', '말', '것', '매일', '방', '청소', '호텔', '공항', '매우', '로비', '개', '서비스', '수하물', '보이', '영어', '의사', '소통', '수', '프론트', '데스크', '접수', '아침', '뷔페', '거의', '매일', '엘리베이터', '객실', '기본', '세면', '도구', '제공', '위치', '대부분', '관광', '사이트', '중심', '나', '다음', '다른', '호텔', '예약', '것', '선호', '공항', '매우', '대로', '변', '곰팡이', '냄새', '창문', '열', '에어컨', '바로', '침대', '위', '직', '방이', '화장실', '문도', '불편', '밤낮', '잠', '자지', '호텔', '방', '확인', '감사', '우리', '매우', '모든', '필수품', '제공', '제공', '아침', '식사', '매우', '공항', '페리', '부두', '버스', '터미널', '분', '분', '거리', '거리', '안', '호텔', '그레이스', '호텔', '꽤', '버스', '정류장', '이름', '그레이스', '호텔', '사용', '주요', '도로', '레오', '호텔', '비교', '발견', '것', '다음', '검색', '호텔', '이름', '잘못', '수', '단지', '그레이스', '레오', '도보', '분', '위치', '대중', '교통', '버스', '레스토랑', '및', '편의점', '도보', '분', '거리', '호텔', '방', '매일', '하우스', '키핑', '수건', '교체', '직원', '소유자', '도움', '근무', '교대', '근무', '직원', '영어', '야간', '직원', '중국어', '그', '중국어', '영어', '모두', '알', '층', '물', '물', '사용', '수', '공기', '컨디션', '및', '온수', '샤워', '상태', '양호', '헤어', '드라이어', '샴푸', '목욕', '젤', '이용', '가능', '목포', '목포', '개', '부두', '음', '유의', '제주', '간다', '것', '것', '온라인', '예약', '페리', '한국', '발급', '신용', '카드', '만', '수락', '한국', '신용', '카드', '다른', '나라', '신용', '카드', '로만', '예약', '페리', '회사', '이슈', '티켓', '은행', '통보', '마침내', '사용', '수', '위치', '매우', '근처', '쇼핑', '센터', '레스토랑', '카지노', '방', '좀', '침대', '주문', '공간', '남아', '거의', '이', '타월', '제공', '수', '또한', '화장실', '매우', '의', '새', '그동안', '컴퓨터', '고장', '안전', '금고', '해', '말', '수', '조건', '때문', '또한', '대부분', '시간', '아무', '누구', '그', '그', '곳', '그녀', '자신', '어쨌든', '전원', '어댑터', '중', '하나', '달라', '그', '판매', '호텔', '중앙', '위치', '버스', '정류장', '아주', '분', '직원', '영어', '구사', '수', '및', '위치', '당신', '구성', '수', '이', '호텔', '거의', '모든', '서비스', '편의점', '클럽', '한국', '바베큐', '과', '세탁', '및', '보행자', '전용', '거리', '다시', '우리', '층', '객실', '과', '하루', '일', '제', '욕실', '작동', '나', '그', '이야기', '국', '이나', '바닥', '바로', '프런트', '데스크', '및', '변경', '수', '아주', '숙박', '시작', '우리', '여행', '렌트카', '제한', '주차', '호텔', '일도', '분거', '리', '체크', '검토', '디셈버', '호텔', '위치', '매우', '음식', '주요', '도로', '근처', '쇼핑', '트리플', '룸', '옷장', '그냥', '당신', '코트', '후크', '이', '호텔', '중', '놈', '연인', '끼리', '제주도', '중문', '통나무', '펜션', '의상', '스튜디오', '로프트', '프런트', '데스크', '음식', '거리', '대환영', '서비스', '지붕', '머리', '호텔', '가치', '저', '가격', '비교', '사이트', '가장', '가격', '걸', '예약', '취소', '가격', '부닷', '잘못', '도리어', '저', '성', '네이버', '다른', '인터넷', '가격', '만원', '이상', '말씀', '취소', '사이트', '얘기', '근처', '가기', '고객', '어디', '사이트', '통해', '정보', '확인', '호텔', '주인', '분', '왜', '저', '화', '내시', '상황', '설명', '이해', '될껄', '고아', '말', '전날', '다른', '카라반', '침대', '히터', '소리', '걱정', '여기', '카라반', '커서', '침실', '거실', '사이', '문', '침실', '양키', '캔들', '등', '등', '밝기', '조절', '제일', '것', '매트', '침대', '정말', '푹', '수', '다른', '일행', '텔레비전', '보고', '부엌', '쪽', '텔레비전', '각자', '거', '수', '샤워실', '작', '온수', '부엌', '후기', '걱정', '여행', '출장', '국내', '및', '해외', '숙박시설', '숙박', '예약', '및', '숙박', '경험', '항상', '업무', '후기', '못', '이번', '내', '생', '최악', '경험', '다른', '여행자', '위', '후기', '꼭', '참고', '첫날', '날', '각각', '경험', '곳', '절대', '이용', '사이트', '반', '및', '반', '로', '구별', '예약', '사진', '내부', '구조', '주방', '일자', '구조', '및', '주방', '디귿', '자형', '구조', '요리', '아내', '상의', '반', '로', '예약', '것', '다른', '숙소', '예약', '것', '낮', '일정', '마치', '저녁', '분경', '숙소', '체크', '안내', '반', '안', '예약', '형', '주방', '아주', '형', '예약', '방과', '사장', '듯', '아주머니', '말', '예약', '대로', '방', '것', '우리', '정', '대로', '것', '라며', '말씀', '사이트', '우리', '예약', '반', '사진', '주방', '자형', '이방', '일자', '우리', '지금', '장', '온', '요리', '하니', '사이트', '딸', '사진', '나', '다른', '사람', '그동안', '불만', '왜', '구', '실랑이', '고장', '온', '해산물', '어차피', '요리', '기분', '시간', '오늘', '그냥', '자고', '은성', '수기', '때', '평', '복층', '우선', '청소', '제대로', '상태', '입실', '실외', '수영장', '역시', '조식', '시', '빵', '느낌', '말', '리조트', '테', '시설', '역시', '모텔', '못', '시설', '주차장', '역시', '협소하', '주차', '시', '문제', '손님', '숙박', '키', '및', '자동차', '키', '마치', '강제', '느낌', '기분', '상', '이제껏', '제주도', '몇번', '이', '모텔', '못', '숙소', '때문', '생각', '월', '마지막', '가족', '힐링', '여행', '번', '여행', '처음', '자유', '여유', '여행', '수', '힐링', '것', '여행', '비', '덕분', '계획', '곳', '모두', '보지', '무엇', '오픈', '한지', '얼마', '물뜰', '펜션', '아이', '우리', '부부', '즐거움', '예정', '에코랜드', '범퍼보트', '날', '관계', '운영', '펜션', '수영장', '수상', '자전거', '투명', '카약', '수', '비용', '절감', '효과', '누리', '감사', '초등', '아이', '동반', '가족', '여행', '라면', '꼭', '제주', '항공', '우주', '박물관', '추천', '함', '장점', '가격', '방', '자연', '단점', '침대', '시트', '이불', '베개', '곰팡이', '냄새', '나', '모기', '등', '벌레', '거미', '등', '크기', '우리', '내', '아내', '방', '세', '번', '버그', '때문', '분', '단지', '내', '방', '네', '방', '벌레', '등', '것', '수', '호스텔', '매니저', '처리', '문제', '듯', '예', '등', '문제', '잘못', '예약', '호스텔', '다시', '수', '뷰', '수', '호스텔', '사람', '위', '별도', '개인', '정보', '보호', '휴가', '중', '우리', '동안', '우리', '방', '구', '수', '벽', '벽', '등반', '은', '우리', '방', '저', '수', '직원', '매우', '도움', '예', '투어', '위해', '수', '방법', '대한', '도움말', '그', '버스', '정류장', '정말', '치료', '해', '손님', '준비', '제주', '다시', '가게', '저', '이', '호텔', '두', '번', '다시', '생각', '가격', '곳', '이기', '때문', '말', '표', '중', '말레이시아', '정말', '가격', '이', '호텔', '예약', '다른', '여행', '사이트', '위치', '여행자', '아주', '방이', '장점', '라면', '주인', '매우', '협조', '수', '단점', '택시', '타고', '분', '시내', '멀리', '때', '밤', '시내', '수', '구매', '참나', '멀리', '버스', '정류장', '주인', '우리', '드라이브', '버스', '정류장', '택시', '타고', '시내', '비용', '택시', '기사', '호텔', '수', '탐색', '호출', '소유자', '방향', '이', '의사', '교환', '영어', '이해', '매우', '수', '입자', '호텔', '이웃', '이나', '소주', '주인', '냄새', '나', '저', '오히려', '더', '가격', '대비', '그냥', '방', '트레이드', '호텔', '느낌', '버스', '역', '길', '건너', '오름', '단면', '볼', '수', '버스', '정류장', '길', '후', '짐', '추천', '것', '그냥', '수', '약', '이', '호텔', '오렌지', '왼쪽', '벽', '때', '주인', '영어', '매우', '도움', '그', '그', '우리', '기본', '요구', '수', '패스트', '푸드', '등', '이', '곳', '모든', '것', '최고', '더', '나은', '서비스', '시설', '것', '내야', '기숙사', '방', '볼', '수', '싱글', '침대', '의', '층', '침대', '싱글', '침대', '방', '반면', '친구', '저', '점유', '공간', '그냥', '우리', '두', '딸', '모든', '것', '수', '방', '평면', '개인', '욕실', '미니', '냉장고', '헤어', '드라이기', '저', '정말', '이', '평화', '분위기', '월', '월', '것', '호텔', '근처', '하이킹', '거문도', '미리', '예약', '또', '다른', '가장', '점', '버스', '정류장', '바로', '앞', '버스', '하루', '몇', '번', '또한', '저', '그', '분', '사람', '제안', '그룹', '친구', '더욱', '시간', '이', '곳도', '것', '생각', '곳', '박', '이', '투어', '예약', '예약', '수', '체크', '두', '명', '당', '번', '하나', '키', '할당', '공유', '수', '변경', '다른', '사용자', '이', '허용', '입구', '방', '얼마나', '비', '첫인상', '었습니', '바닥', '난방', '것', '이', '헤어', '드라이어', '냉장고', '전기', '모두', '사용', '수', '전선', '엉망', '어디', '서나', '아침', '식사', '최악', '차', '커피', '이', '수건', '가지', '그', '오직', '손', '수건', '목욕', '수건', '제공', '수', '사진', '내부', '좀', '편이', '입구', '당나귀', '토끼', '개', '닭', '동물', '분', '거', '화장실', '욕조', '온수', '제한', '공용', '실', '워', '게', '거', '이야기', '밤', '어디', '보이지', '다른', '건', '내부', '나무', '냄새', '나', '거', '침대', '아주', '잠', '수', '매트릭스', '거의', '안', '보심', '이', '호텔', '상대', '곳', '세', '밤', '시부', '터', '밤', '가족', '룸', '밤', '세부', '사항', '실망', '체크', '때', '목욕', '수건', '때문', '프런트', '수거', '수건', '그', '컵', '주전자', '가지', '티백', '커피', '제공', '최악', '부분', '침대', '시트', '곰', '나', '냄새', '때문', '마지막', '체크', '아웃', '후', '세탁', '체크', '아웃', '나', '모든', '것', '인지', '나', '그', '여성', '냄새', '나', '침대', '시트', '대해', '이야기', '그녀', '대답', '다방', '냄새', '침구', '침대', '시트', '곰팡이', '개', '침대', '하나', '포기', '수', '곳', '외국인', '잠', '국가', '망신', '생각', '방', '주말', '방이', '돈', '포기', '다른', '숙박', '업체', '물', '느낌', '꼭', '다른', '곳', '가세', '제주', '시내', '호텔', '주차장', '조금', '이용', '문제', '시설', '조금', '낙후', '가격', '저희', '문제', '하루', '밤', '인생', '최악', '호텔', '호텔', '말', '우리', '일행', '중', '명', '분도', '피부', '이상', '증상', '가려움', '반점', '동반', '호소', '내', '객실', '비치', '요', '세트', '모두', '정체', '크기', '얼룩', '돈', '간다', '말리', '호텔', '숙박', '포기', '다른', '호텔', '길', '초등학생', '가족', '초등학생', '학년', '정도', '아이', '엄마', '여기', '말함', '격하', '공감', '어른', '유리', '공포', '체험', '침대', '위치', '조금', '응급실', '뻔', '위치', '것', '공항', '움', '점', '전혀', '로비', '관리', '매우', '리셉션', '온돌방', '침대', '시트', '보이지', '욕실', '결코', '재', '방문', '의사', '우리', '제주', '여행', '때', '우리', '몇', '밤', '여기', '우리', '렌트카', '탐색', '장치', '찾기', '매우', '공항', '약', '분', '우리', '아파트', '발코니', '바다', '거실', '주방', '기본', '요리', '도구', '아파트', '지시', '사항', '영어', '모든', '고문', '밖', '동시', '발코니', '문', '개', '것', '대한', '번역', '앱', '사용', '또한', '아파트', '거실', '패널', '장소', '조명', '제어', '리모콘', '셀프', '세탁', '시설', '공항', '것', '차로', '분', '거리', '시간', '코인', '세탁소', '제주', '때', '가치', '기반', '므', '다시', '예약', '방', '나', '그', '지역', '새', '개발', '생각', '그것', '매우', '바다', '발코니', '전망', '수', '직원', '별로', '우리', '에어', '컨디셔너', '문제', '관해', '그', '말', '우리', '통제', '이해', '수', '다음', '날', '그', '우리', '제어판', '더', '광고', '영어', '녹음', '우리', '공항', '오전', '시', '택시', '요청', '비록', '문제', '직원', '우리', '위해', '또', '다른', '택시', '우리', '택시', '확신', '우리', '그', '대화', '나누기', '그', '아주', '사람', '다음', '번', '거기', '것', '공항', '분', '거리', '교통', '정체', '달러', '때문', '매우', '합리', '요금', '대부분', '직원', '정말', '말', '서비스', '제공', '직원', '차량', '가지', '박', '숙박', '낮', '업무', '처리', '장소', '차', '방치', '차량', '차량', '스티커', '보고', '회사', '전화', '차량', '방치', '말함', '출장', '복귀', '후', '제주도', '쉣', '심지어', '차', '연락처', '체크', '시', '차량', '번호', '기입', '회사', '내', '연락처', '호텔', '객실', '차량', '방치', '연락처', '알', '마치', '짓', '것', '처럼', '객실', '프론트', '호텔', '시스템', '부재', '자기', '일이', '자기', '큰소리', '침', '거참', '나', '호텔', '밥', '년', '호텔', '경영학', '박사', '데', '가차', '그냥', '키', '주변', '편의점', '분', '정도', '로비', '슈퍼', '함', '차량', '공항', '항공기', '이착륙', '소리', '룸', '컨디션', '침대', '허리', '아픔', '조식', '포함', '토스트', '정도', '생각', '이면', '시설', '대해', '가격', '대비', '결정', '부분', '나름', '씨뷰', '가성', '저', '직원', '나름', '호텔', '임', '나머지', '직원', '모두', '사장', '아들', '이면', '그거', '제발', '교육', '짜르', '심', '회사', '발전', '도움', '듯', '조식', '준', '이유', '공항', '바로', '앞', '진짜', '렌트', '좀', '대중교통', '접근성', '요조', '진짜', '직원', '친절', '숙소', '청결', '우수', '뷰', '아주', '숙박', '시설', '공항', '또한', '조식', '단체', '때문', '나름', '조식', '가격', '비', '뜻', '친절', '별로', '밑', '슈퍼', '룸', '컨디션', '별로', '바닥', '얼룩', '냄새', '화장실', '청소', '건', '안', '변기', '머리카락', '그대로', '기분', '오션', '뷰', '쪽', '비행기', '소음', '진짜', '신경', '온돌방', '원', '예약', '예약', '자마자', '취소', '하니', '취소', '수수료', '방', '시설', '기대', '이하', '구류', '별로', '여서', '잠자리', '가격', '대비', '별로', '공항', '나머진', '별로', '저', '가격', '요', '가', '그것', '해안', '옆', '재산', '나', '항상', '파도', '소리', '주변', '몇', '가지', '상점', '내', '경험', '이', '호텔', '버스', '정류장', '약', '분', '거리', '제주', '국제', '공항', '심지어', '최', '재해', '해변', '향합', '니', '초등학교', '버스', '정류장', '도보', '약', '분', '도보', '분', '거리', '인', '대형', '슈퍼마켓', '이', '호텔', '애월', '해안', '도로', '직원', '영어', '말', '버스', '식당', '어디', '수', '대한', '몇', '가지', '질문', '도', '나', '또한', '매일', '무료', '물병', '수건', '교체', '호텔', '제주도', '해안', '전망', '호텔', '사람', '추천', '것', '더블', '하나', '싱글', '하나', '베드', '방', '뷰', '그냥', '만원', '박', '관광지', '요금', '차', '그냥', '화근', '침대', '불편', '침구', '베개', '이불', '수건', '냄새', '겉보기', '남편', '난리', '숙소', '란', '방이', '모두', '충족', '친구', '추천', '엄마', '동생', '가족', '모두', '여행', '창밖', '바로', '바다', '동안', '재주', '수압', '너', '무', '여독', '침대', '개', '찍', '방이', '전혀', '가격', '정도', '조건', '조식', '힐', '파크', '제주', '도심', '복판', '근처', '면세점', '근처', '맛집', '등', '가기', '호의', '인', '한국인', '가족', '소유', '호텔', '뉴타운', '매우', '위치', '무료', '식수', '무료', '와이파이', '액세스', '엘리베이터', '마이너스', '더블', '침대', '싱글', '침대', '구비', '및', '그', '이하', '공간', '수', '수하물', '보관', '소가', '일', '밤', '하이트', '호텔', '리셉션', '직원', '영어', '이', '호텔', '시청', '근처', '레스토랑', '위치', '공항', '움', '버스', '번호', '여기', '우리', '방', '아침', '식사', '김치', '쌀', '빵', '것', '수', '수', '이', '가격', '이면', '여행자', '경우', '이', '날', '수도', '와이파이', '제', '마음', '화장실', '냄새', '나', '이', '호텔', '박', '수', '저', '저', '사람', '제외', '모두', '볼', '수', '리셉션', '도로', '옆', '정말', '향', '잡음', '방', '욕실', '데', '최대', '분', '전', '때', '사람', '바디', '워시', '비누', '바디', '로션', '사용', '수', '병', '반', '빈', '시장', '수', '아주', '곳', '위치', '사용', '수', '호텔', '조식', '공항', '도착', '주위', '유흥', '시설', '무료', '조식', '렌트카', '분', '뚜벅', '여행자', '호텔', '버스', '동시', '환승', '필수', '버스', '배차', '간격', '청결', '상태', '이불', '바닥', '머리카락', '그닥', '가격', '여관', '수준', '방도', '방음', '낭', '모텔', '주인', '분', '시설', '아주', '신식', '청결', '도', '호텔', '침구', '방', '구석구석', '신경', '것', '흔적', '와이파이', '무료', '공항', '주차', '공간', '아주', '빠듯하', '맛집', '동도', '카페', '어머니', '빵집', '등', '다음', '날', '아침', '사', '더욱', '가격', '투숙', '역시', '비지', '떡', '요', '방음', '객실', '다음', '다시', '투숙', '것', '대해', '생각', '중국인', '개별', '여행', '길', '제', '묵고', '디셈버', '호텔', '버스', '타고', '호텔', '신화', '거리', '국수', '직선', '길', '호텔', '객실', '편이', '주인', '방', '침대', '욕실', '깨끗', '냉장고', '뭐', '단', '냉장고', '소음', '때', '좀', '폭설', '비행', '가가', '결항', '때', '곳', '알', '호텔', '직원', '분', '매우', '침대', '화장실', '등', '친구', '이용', '옛날', '모텔', '개조', '듯', '점', '중국인', '단체', '숙박', '장소라', '런가', '조식', '포함', '위치', '공항', '근처', '직원', '매우', '무엇', '가성', '비', '매우', '원', '더', '블룸', '생각', '조식', '아주', '자전거', '대여', '노래방', '이용', '노래방', '시간', '천원', '로', '기억', '로비', '놀', '거리', '위치', '터', '공항', '이동', '매우', '보안', '매우', '조식', '매우', '시외버스', '터미널', '정거장', '거리', '위치', '근처', '약국', '병원', '까페', '편의점', '외관', '및', '내부', '시설', '실내', '엘리베이터', '설치', '전', '층', '도미', '토리', '박', '일', '방', '안', '화장실', '두', '개', '수영장', '이용', '공항', '택시', '이용', '시', '료', '원정', '추가', '거리', '숙소', '아래', '편의점', '근처', '분', '거리', '맥도날드', '방', '스텐다드트윈', '베드룸', '숙박', '룸', '컨디션', '다만', '취침', '후', '새벽', '화장실', '사용', '시', '하수', '구', '냄새', '다소', '아침', '조식', '정말', '전복죽', '퀄', '제주', '식주', '호텔', '군데', '이용', '퀄', '수영장', '호텔', '이용권', '이용', '좀', '은감', '침대', '곳', '좀', '침대', '편이', '욕실', '편', '면도', '구도', '구비', '수압', '세지', '편', '실내', '편', '월', '런가', '에어컨', '안', '지하', '주차공간', '층', '외부', '공간', '다행', '객실', '직원', '인상', '호텔', '택시', '타고', '맛집', '즐비', '해', '공항', '위치', '굿임', '재', '방문', '의사', '공항', '도착', '때', '숙박', '호텔', '공항', '택시', '타고', '분', '정도', '스탠다드', '타입', '숙박', '생각', '가장', '침대', '킹', '사이즈', '정도', '듯', '룸', '컨디션', '시설', '만족', '제주', '출장', '자주', '편', '그동안', '숙박', '곳', '곳', '발견', '곳', '주변', '잠깐', '한잔', '곳도', '일단', '공항', '직원', '조식', '기대', '정말', '출장', '때', '고민', '안', '엠버', '투숙', '예정', '출장', '공항', '주변', '호텔', '검색', '투숙', '호텔', '요', '번화가', '보행', '거리', '식당', '음식', '객', '실내', '커피', '머싱', '이용', '아이', '요구', '햇던', '사항', '무엇', '방음', '잘됏', '잇엇습니', '조식', '한번', '이용', '햇', '음식', '전반', '맛', '엇', '집', '아침', '식사', '생각', '좀', '못', '외', '것', '다음', '또', '방문', '공항', '주변', '공항', '렌탈업체', '공항', '버스', '도', '이동', '시내', '중심', '편의점', '등등', '주변', '맛집', '저녁', '호텔', '차후', '한라산', '등산', '위해', '숙소', '공항', '근처', '바로', '앞', '시외버스', '터미널', '한라산', '버스', '이용', '저녁', '치킨', '파티', '묵고', '밤', '비행기', '도착', '때', '이용', '저녁', '비헹', '근처', '밥', '숙소', '잠', '자고', '다음', '날', '아침', '일찍', '출발', '자동차', '스쿠터', '렌트', '시외버스', '여행', '실', '다만', '가성', '비', '퀄리티', '자체', '율', '제주', '항공', '편요', '긐', '각', '이영', '다미', '일리지', '적립', '시설', '공항', '방', '각자', '락커', '짐', '보관', '주차공간', '골목', '주차', '해', '다음', '가도', '또', '묵고', '곳', '조식', '거', '생각', '테라스', '방도', '전체', '만족', '저녁', '식사', '후', '산책', '구경', '수', '풍경', '최고', '어이', '가격', '대비', '닥', '욕조', '가격', '라면', '체인', '호텔', '룸', '컨디션', '직원', '느낌', '아침', '물', '안개', '잠깐', '겨울', '바다', '안개', '가슴', '벅착', '직원', '여름', '다시', '나', '홀로', '여행', '시일', '가격', '위치', '마음', '또한', '아주', '직원', '한번', '가격', '부담', '가지', '해수욕장', '안고', '산책로', '객실', '테라스', '바다', '커피한잔', '정말', '머리', '도움', '위치', '몇', '번', '이용', '룸', '컨디션', '전체', '베딩', '청소', '상태', '청소', '메이드', '이번', '리뉴얼', '피트니스', '사우나', '기프트샵', '기프트샵', '종류', '건', '초코렛', '디', '퓨저', '엽서', '등', '선물', '살', '만', '것', '호텔', '가격', '생각', '초코렛', '치약', '등', '선물', '구입', '호텔', '위치', '선물', '사서', '공항', '바로', '가기', '지하', '피트니스', '사우나', '사진', '못', '운동', '안쪽', '사우나', '크기', '해도', '나무', '향', '온도', '게', '월', '둘째', '주', '가족', '여행', '때', '투숙', '제주', '호텔', '박', '예약', '이용', '레노', '베이', '션', '객실', '침구', '류', '뽀숑', '뽀숑', '주변', '맛집', '관광지', '문의', '안내', '주신', '직원', '때문', '이틀', '동안', '구경', '담', '제주', '숙소', '호텔', '방이', '뷰', '청소', '요청', '거', '즉각', '해결', '미소', '응답', '감동', '다음', '제주도', '때', '또', '친구', '제주도', '여행', '잠깐', '곳', '시설', '직원', '서비스', '이클립스', '스포츠', '바', '영상', '보고', '당구', '가격', '생맥주', '수', '지난주', '가족', '호텔', '박일', '숙박', '가격', '호텔', '호텔', '정', '기분', '일단', '제', '운동', '호텔', '헬스장', '헬스', '기구', '또한', '사우나', '시설', '아침', '식도', '직원', '담', '또', '방문', '의', '위치', '제주도', '쇼핑', '지역', '근처', '비교', '공항', '호텔', '공항', '차로', '분', '정도', '쇼핑', '지역', '도보', '분', '정도', '근처', '만', '곳', '저', '호텔', '곳', '위치', '치킨', '추천', '편의점', '호텔', '바로', '옆', '아침', '식사', '거나', '생수', '구', '수', '객실', '내부', '비록', '약간', '작', '모든', '것', '침대', '약간', '일', '동안', '수', '정도', '제공', '목욕', '수건', '조금', '때문', '직접', '더', '수건', '수도', '접수', '처', '직원', '협조', '도착', '첫', '날', '근처', '대한', '정보', '제공', '그', '영어', '실력', '도움', '경우', '그', '대화', '수', '전반', '시간', '다음', '제주도', '방문', '꼭', '곳', '선택', '것', '저', '꼭대기', '층', '스위트', '룸', '엘리베이터', '층', '것', '저', '제', '부모님', '에어컨', '비상', '계단', '통해', '짐', '직원', '우리', '마찬가지', '객실', '곳', '욕실', '욕조', '무슨', '의미', '정말', '알', '수', '기본', '침대', '분리', '수', '커플', '위', '객실', '정말', '당황', '영어', '정말', '직원', '명', '그녀', '자리', '때', '관광', '목적지', '대한', '질문', '택시', '때', '대화', '나누기', '그', '정말', '영어', '실력', '우리', '가족', '나', '호텔', '일', '밤', '전체', '옆방', '위층', '중국', '관광객', '제외', '그', '자정', '정도', '소음', '소리', '또한', '위층', '소리', '크게', '방음', '소음', '관광객', '제외', '프론트', '데스크', '직원', '항상', '여직원', '덕분', '가족', '식당', '한국', '전통', '갈비탕', '수', '교통', '여직원', '전통', '시장', '공항', '픽업', '차량', '준비', '그녀', '친절', '카운터', '여직원', '그녀', '호텔', '밖', '주차장', '우리', '치킨', '해물탕', '음식점', '추천', '호텔', '조식', '제공', '호텔', '바로', '옆', '편의점', '방', '아주', '전원', '플러그', '정말', '샤워실', '모든', '한국', '호스텔', '수건', '제공', '때문', '개인', '수건', '꼭', '위치', '주요', '쇼핑', '거리', '움', '우리', '매일', '밤', '정말', '리뷰', '호텔', '흥분', '전체', '우리', '숙박', '예약', '호텔', '로비', '도착', '자마자', '나', '로비', '호텔', '만약', '거의', '눈', '확인', '체크', '스태프', '객실', '크기', '기대', '청결', '정격', '위', '꼭', '먼지', '수영장', '박', '내내', '커피', '테이블', '우리', '베드', '시트', '변경', '요청', '둘', '중', '하나', '일어나지', '호텔', '수건', '매우', '크기', '제공', '위치', '밤', '식당', '아침', '식사', '즉', '한국', '일반', '문제', '것', '호텔', '레스토랑', '대부분', '시간', '옆', '아침', '필요', '호텔', '월', '호텔', '길', '아마', '단계', '신용', '호텔', '공항', '가까이', '호텔', '내', '제주도', '다시', '이', '호텔', '다시', '것', '양', '염소', '말', '토끼', '거위', '오리', '사슴', '닭', '봉', '오골계', '밥', '주기', '체험', '동물', '별로', '공간', '분리', '뿐', '정말', '관리', '애', '얼마나', '진짜', '양털', '합성수지', '불', '바스락', '거리', '무엇', '사슴', '몸', '파리', '모기', '마리', '정도', '건', '충격', '입장료', '천원', '기본', '사료', '추가', '당근', '당근', '사료', '손바닥', '침', '각오', '아이', '예약', '운', '분', '취소', '갈수', '아침', '저녁', '애', '토끼', '양', '말', '오리', '칠면조', '산양', '꽃사슴', '염소', '돼지', '등등', '의', '동물', '먹이', '산양', '젖', '체험', '양치기', '개', '원반던지기', '숙소', '조금', '관리', '통나무', '사장', '부부', '아이', '심', '최고', '경험', '객', '아이', '동물', '다음', '제주도', '가면', '또', '숙박', '뜨내기', '손님', '곳', '손님', '대한', '생각', '전혀', '곳', '립', '서비스', '존재', '비수', '푸대접', '수기', '더', '푸대접', '듯', '제주', '망신', '곳', '모슬포', '박', '여기', '박', '비교', '떼', '대관령', '가지', '왜', '여기', '유형', '호텔', '시골', '지역', '수', '생각', '밤', '휴식', '취하', '거나', '파티', '수', '주위', '정말', '소리', '걱정', '다음', '날', '아침', '아침', '식사', '후', '목장', '말', '그', '친구', '먹이', '공항', '호텔', '투숙', '가격', '대비', '화장실', '가성', '비', '그닥', '호텔', '가성', '공항', '근처', '호텔', '카지노', '호텔', '맞은편', '위치', '주차', '약간', '직원', '주차', '주차', '객실', '아주', '인테리어', '침구', '류', '중간', '이상은', '가격', '대비', '제주시', '일이', '재', '방문', '의사', '당일', '예약', '이용', '사진', '걱정', '호텔', '관광', '일정', '빠듯', '잠', '자고', '가기', '가격', '대비', '다만', '직원', '서비스', '마인드', '좀', '프런트직원', '새벽', '공항', '콜', '택시', '달라', '시간', '배차', '직접', '좀', '당황', '나름', '얼마', '호텔', '호텔', '자체', '새', '냄새', '나', '복도', '때', '스태프', '룸상태', '어', '매니', '티', '또한', '머리', '고무줄', '준비', '정도', '평일', '룸', '업그레이드', '싱글', '더블', '침대', '룸', '하룻밤', '점', '어매니티', '편이', '무슨', '브랜드', '것', '공항', '근처', '이동', '가격', '라면', '만원', '더', '신라', '스테이', '것', '번화가', '조금', '편이', '것', '분', '선택', '것', '중국인', '밀집', '지대', '점', '조금', '걱정', '와이파이', '빵빵', '제주', '가격', '근처', '시장', '저녁', '쇼핑', '맛집', '우리', '공항', '버스', '타고', '시청', '맞은편', '이', '배낭여행', '호스텔', '메인', '도로', '골목', '위치', '우리', '처음', '곳', '때', '약간', '어려움', '지인', '길', '방', '자체', '매트', '바닥', '우리', '조건', '에어컨', '수건', '세면', '도구', '온수', '샤워', '제공', '욕실', '화장실', '바로', '우리', '방', '수압', '욕실', '옆', '무료', '사용', '세탁기', '무료', '와이파이', '수신', '상태', '무료', '아침', '식사', '아주', '건강', '홈', '메이드', '통밀', '빵', '잼', '요거트', '과일', '주스', '제공', '커피', '차', '및', '생수', '또한', '시나몬', '운', '허브', '계란', '주인', '영어', '해', '위치', '대중', '교통', '버스', '곳', '버스', '타고', '움직', '이기', '저', '제', '아내', '통해', '월', '일', '이', '호텔', '호텔', '거의', '점', '우리', '통해', '더블', '베드룸', '예약', '주인', '그', '버스', '이용', '수', '제주', '명소', '제주', '공항', '호텔', '교통', '편', '대한', '모든', '정보', '그', '충고', '여러분', '대중', '버스', '제주도', '전체', '여행', '수', '월', '일', '제주', '공항', '도착', '후', '동쪽', '코스', '여행', '여행', '기사', '로', '우리', '시', '우리', '여행', '중', '아무', '음식', '호텔', '때', '정문', '환영', '메시지', '벽', '걸', '보고', '깜짝', '그', '냉장고', '음식', '방', '바닥', '침대', '욕실', '아침', '식사', '아침', '식사', '패킷', '오전', '시', '분', '시', '제공', '리셉션', '데스크', '마련', '패킷', '이름', '시스템', '게다가', '이', '지역', '모든', '종류', '교통', '시설', '연결', '우린', '여행', '이튿날', '원화', '그', '만원', '것', '우리', '도움', '제공', '우리', '시간', '때', '언제', '은행', '환전', '다음', '달라', '그', '정말', '우리', '현지', '문화', '대한', '주제', '것', '교환', '곳', '가세', '나', '당신', '곳', '것', '을제', '친구', '저', '이', '곳', '박일', '수', '상점', '가까이', '이', '호스텔', '아주', '안', '걸음', '시나몬', '냄새', '마음', '진정', '주인', '김씨', '그', '영어', '제주도', '여행', '대한', '조언', '심지어', '손님', '우산도', '제공', '가정식', '빵', '요거트', '잼', '한국', '운', '계란', '아침식사', '곳', '깜빡', '심지어', '주인', '후', '근육통', '손님', '발', '마사지', '제공', '것', '감동', '꼭', '다시', '봄', '여행', '박', '동인', '숙소', '위치', '버스', '터미널', '섬', '곳', '곳', '방문', '수', '숙소', '직접', '아침', '환상', '요거트', '빵', '잼', '커피', '어', '우려', '방', '사이즈', '침대', '욕실', '모든', '부분', '정돈', '여기', '정말', '이번', '달', '다시', '예정', '숙소', '함덕', '해수욕장', '서우', '봉', '건너편', '주변', '아무', '것', '곳', '분', '듯', '호텔', '바로', '앞', '바다', '경치', '호텔', '아주', '관리', '앞', '낚시', '서우', '봉', '산책', '함덕', '해수욕장', '연결', '가격', '대비', '강추', '함덕', '숙소', '바닷가', '바로', '코', '앞', '위치', '숙소', '정말', '관리', '서비스', '사장', '우리', '힐링', '타임', '수', '제주도', '다운', '숙소', '밤', '도착', '짐', '바로', '앞', '바다', '방도', '바닥', '푹', '수', '체크', '아웃', '때', '커피', '공항', '가기', '전', '산책', '바다', '바로', '앞', '위치', '모든', '객실', '바다', '향', '호텔', '한국', '펜션', '객실', '최신', '시설', '주인', '제주도', '바다', '수', '곳', '비교', '곳', '위치', '저', '곳', '웨딩촬영', '아주', '사진', '가장', '환상', '숙박', '제', '친구', '제', '봉사', '누구', '객실', '매우', '위치', '바다', '전망', '가지', '긴장', '풀', '수', '장소', '스파', '정말', '우리', '일', '이', '호텔', '가족', '분위기', '침대', '매우', '샤워', '시설', '욕조', '수영장', '살', '아들', '트램펄린', '해안', '및', '커피숍', '도보', '거리', '직원', '정말', '경험', '바다', '전망', '객실', '이용', '명의', '대가족', '층', '독채', '전망', '아주', '풀', '빌라', '개인', '수영', '수사', '아이', '층', '거실', '워낙', '명', '부족함', '침대', '예술', '정말', '강추', '야외', '메인', '수영장', '월', '운영', '보기', '다른', '가족', '모두', '숙소', '바다', '아이', '조식', '직원', '숙소', '바다', '숙소', '애', '맘', '일단', '협재', '바다색', '모래사장', '위', '위치', '게스트하우스', '층', '휴식', '외국', '무조', '건강', '추', '사장', '뷰', '조식', '무료', '석식', '파티', '가성', '비', '게스트하우스', '꼭', '추천', '파리', '빗', '비치', '문', '바로', '바닷가', '모든', '방', '안', '비치', '볼', '수', '해', '거름', '방', '창', '통해', '볼', '수', '저녁', '무료', '식사', '타임', '조식', '꽤', '편이', '컵라면', '았', '카레', '미역국', '씨리얼', '전기장판', '각', '방', '도어락', '욕실', '최고', '위치', '바로', '바다', '언제', '물', '수', '직원', '손님', '대한', '통제', '잠', '자기', '조금', '공항', '시설', '바라지', '비용', '수', '곳', '냉장고', '생수', '개', '제공', '소셜', '구매', '숙박', '위치', '칼', '호텔', '바로', '앞', '중국', '관광객', '가끔', '주말', '결혼식', '시설', '엘리베이터', '그냥', '계단', '침대', '정말', '쿠션', '방', '여관', '느낌', '가격', '하루', '참고', '아주', '차장', '매우', '박만', '해결', '때문', '가격', '이', '호텔', '선택', '건물', '자체', '점도', '가격', '레벨', '호텔', '한국', '방', '밖', '욕조', '발견', '것', '호텔', '발견', '것', '생명', '은인', '이', '곳', '시청', '밤', '수', '장소', '객실', '항상', '가격', '대비', '공간', '호텔', '동네', '위치', '고속도로', '정면', '장교', '매우', '그', '아트', '리움', '공연', '가야', '때문', '조기', '체크', '요청', '매우', '합리', '가격', '도시', '전망', '유닛', '구', '수', '방', '매우', '전혀', '불평', '수', '매일', '아침', '조식', '뷔페', '제공', '아침', '항공', '편', '경우', '대비', '공항', '호텔', '위치', '공항', '편', '화장실', '가성', '비', '추천', '호텔', '그랜드', '보이', '실내', '그다지', '의', '외부', '모습', '제공', '목욕', '수건', '커피', '차', '기본', '세면', '도구', '사셰', '이', '근처', '카페', '거리', '편', '섬', '일', '주제', '공항', '터치', '다운', '이후', '이동', '호텔', '게스트', '하우스', '위치', '택시', '교통', '수단', '도처', '여행', '아무', '를', '비난', '그', '여행자', '제주', '대부분', '한국인', '영어', '해석', '때문', '말', '방법', '여기', '택시', '나', '영어', '그', '호텔', '저축', '심지어', '예산', '대한', '계획', '위해', '것', '하나', '선택', '것', '숙소', '앞', '바다', '풍경', '연인', '나', '혼자', '여행', '대부분', '용품', '구비', '다만', '매트리스', '인지', '숙면', '허리', '아팟으', '실내', '공기', '해변', '바로', '앞', '주변', '객실', '비양도', '전망', '객실', '취사', '시설', '콘도', '부엌', '전망', '동네', '협재', '해수욕장', '가격', '가격', '직원', '또한', '고유', '점', '지하', '노래방', '과', '로비', '그', '또한', '마무리', '공사', '야외', '수영장', '저', '이', '리조트', '강력', '추천', '호텔', '위치', '조금', '번화가', '맛집', '무엇', '객실', '제주시', '위치', '위치', '이동', '객실', '욕실', '묵고', '객실', '욕조', '마음', '근처', '바오', '젠', '번화가', '거기', '집', '다음', '기회', '또', '제', '제주도', '출장', '자주', '편', '엠버', '시티', '호텔', '가장', '마음', '드네', '방도', '화장실', '청소', '상태', '매우', '추천', '방도', '화장실', '마음', '듭니', '직원', '저', '일간', '투숙', '더블', '침대', '하나', '싱글', '침대', '하나', '방', '예약', '테이블', '침대', '제외', '공간', '사업', '차', '제주', '시내', '위치', '리뉴', '호텔', '체크', '때', '사장', '항상', '호텔', '느낌', '공항', '근처', '비행기', '기도', '사업', '차', '자주', '제주도', '또', '이용', '월', '단체', '관광', '이틀', '밤', '제주', '첫', '호텔', '전체', '방', '가장', '단점', '크기', '내', '호텔', '중', '방', '크기', '가장', '제주', '섬', '이기', '때문', '방', '인터넷', '수', '로비', '무료', '와이파이', '이용', '수', '위치', '조금', '산책로', '거리', '식당', '술집', '상점', '등', '밤', '만', '것', '스탠다드', '미니', '우리', '욕실', '매우', '매우', '현대', '세면', '도구', '방', '도', '아침', '식사', '우리', '체크', '아웃', '때문', '시험', '시간', '수용체', '월', '제공', '봉사', '매우', '감명', '그녀', '참을성', '예의', '우리', '주의', '것', '외', '그녀', '호텔', '버스', '정류장', '값', '호텔', '근처', '스케치', '위해', '고통', '버스', '도시', '간', '버스', '아침', '식사', '매우', '실망', '별로', '선택', '여지', '방', '정도', '나', '를위', '공간', '나', '구석', '그것', '척', '그것', '아마', '나', '더', '호텔', '위해', '더', '지불', '운', '나', '체', '재는', '개', '밤', '첫', '저', '이', '호텔', '무료', '공항', '셔틀', '버스', '정류장', '호텔', '도착', '때', '셔틀', '버스', '앞쪽', '위치', '호텔', '파킹', '방', '매우', '작고', '곳', '벽', '얼룩', '침대', '시트', '구멍', '가격', '호텔', '것', '골프', '치', '가족', '여행', '숙박', '가족', '아주', '방도', '독채', '층', '숙소', '앞', '산책로', '차량', '진입', '아이', '안전', '다만', '고양이', '움', '시내', '위치', '조금', '우선', '방이', '골프텔', '조금', '커서', '경우', '프론트', '픽업', '요청', '골프', '장안', '편의점', '모로', '볼', '치기', '곳', '조금', '오픈', '한지', '곳', '필드', '뷰', '엘지', '기업', '소유', '리조트', '인테리어', '자연', '친', '적', '골프', '호스텔', '방', '사람', '우리', '일행', '방', '수영장', '시간', '밤', '바베큐', '파티', '시간', '친구', '끼리', '가족', '끼리', '더', '것', '독채', '식이', '거실', '하나', '방', '개', '구조', '방', '화장실', '조리', '시설', '냉장고', '냉동', '실', '커서', '여유', '거실', '커서', '근처', '시장', '회', '사서', '먹기', '마음', '건', '아침', '커튼', '밖', '잔디밭', '나무', '풍경', '절로', '힐링', '풍경', '숙소', '따라서', '바퀴', '산책', '굳이', '골프', '치', '숙박', '정말', '곳', '생각', '위치', '시내', '생각', '이틀', '전혀', '위치', '여름', '야외', '수영장', '운영', '수영장', '크기', '아이', '잠깐', '물놀이', '기', '것', '한가지', '에어컨', '필터', '청소', '좀', '듯', '투어', '패키지', '중', '하룻밤', '호텔', '탑동', '거리', '시장', '약', '분', '안', '수', '거리', '말', '필요', '편의점', '것', '살', '수', '은', '길', '건너', '오른쪽', '방', '정수기', '정수기', '방', '공용', '식당', '호텔', '지하', '호텔', '복도', '카펫', '방', '안도', '마찬가지', '에어컨', '것', '직원', '영어', '거의', '못', '해', '관광', '패키지', '포함', '이', '곳', '호텔', '꽤', '편임', '로비', '수', '메인', '로비', '소파', '연식', '말', '방', '바다', '수', '발코니', '곳', '편의점', '길', '건너', '세븐일레븐', '생각', '것', '곳', '하루', '침대', '편이', '방', '여러가지', '텔레비전', '프로그램', '볼', '수', '방', '경치', '또한', '발코니', '바다', '볼', '수', '교통', '정체', '아주', '주변', '분', '동안', '택시', '잡', '수', '바로', '앞', '이마트', '편의점', '옆', '호텔', '무난', '수', '어른', '여자', '명', '이서', '숙박', '보조', '침대', '제대로', '침대', '동문', '시장', '못', '걸', '정도', '시간', '좀', '분', '정도', '것', '공항', '택시', '분', '정도', '도착', '바다', '좀', '문제', '호텔', '시장', '번화가', '해변', '해산물', '요리', '레스토랑', '등', '좀', '도보', '권내', '방도', '수', '가격', '대비', '호텔', '가격', '우선', '공항', '근처', '이호우', '테', '해변', '시설', '조식', '맛', '호텔', '모텔', '이호', '테', '해변', '도보', '분', '도로', '밤', '아침', '잠깐', '이용', '가격', '무엇', '호텔', '동남아', '분', '야간', '데스크', '동남아', '분', '호텔', '층', '매점', '방', '테라스', '방도', '정말', '주변', '뭐', '티몬', '특가', '가족', '여행', '호텔', '공항', '가격', '합리', '다시', '이용', '근처', '관광', '공항', '가격', '비', '지은지', '얼마', '주차공간', '좀', '빡빡', '제주시', '하루', '홀로', '예약', '숙소', '체크', '불구', '안내', '신식', '건물', '방도', '룸', '컨디션', '책', '수', '휴게', '공간', '조식', '성게', '미역국', '정말', '감동', '방장', '호텔', '쉐프', '출신', '역시', '다음', '또', '의사', '프러', '독립', '방', '인근', '한라', '수목원', '푸드', '트럭', '한번', '주변', '볼거리', '볼', '만하', '시설', '매우', '가격', '매우', '주차', '매우', '저녁', '도착', '공항', '근처', '아침', '일찍', '출발', '분', '정말', '강', '스태프', '월급', '제주', '여행', '하라', '유류', '지원', '해주시', '걸', '제주도', '가면', '꼭', '곳', '하나', '편안함', '븐', '게스트하우스', '이용', '후기', '단어', '표현', '무엇', '인상', '호텔', '또한', '도미', '토리', '형식', '임', '불구', '블라인드', '공간', '혼자', '휴식', '취할', '수', '형태', '지하', '커뮤니티', '공간', '여느', '게스트하우스', '수', '공간', '책', '음악', '여유', '공간', '혼자', '시간', '사람', '혼자', '사색', '사람', '누군가', '수', '공간', '사람', '사람', '공간', '월말', '월초', '번', '숙박', '번', '모두', '매우', '너븐팡', '게스트하우스', '것', '조차', '여행', '스케쥴', '것', '다음', '제주', '여행', '스케쥴', '너븐팡', '고정', '다른', '게스트하우스', '비교', '때', '장점', '제주시', '시내', '위치', '만천원', '가격', '대비', '시설', '최고급', '침대', '개인', '스탠드', '침대', '노트북', '수', '받침', '자식', '개인', '사물함', '조식', '한식', '지하', '모임', '공간', '매우', '체크', '때', '물', '병', '매우', '사려', '도미', '토리', '화장실', '매니저', '무', '내', '제주', '게', '중', '최고', '재', '방문', '의사', '공항', '가격', '대중교통', '이용', '수', '위치', '시설', '꽤', '편이', '곳', '고급', '시설', '공항', '청결', '상태', '호텔', '약간', '골목', '위치', '처음', '때', '찾기', '공항', '거리', '보나', '숙소', '상태', '보나', '모로', '호텔', '공항', '밤', '도착', '공항', '인근', '하룻밤', '묵', '숙소', '곳', '선택', '제주', '최근', '만원', '만원', '하루', '밤', '수', '숙소', '그', '곳', '곳', '선택', '이유', '욕실', '컵', '기소', '내용', '사회', '기업', '것', '보고', '곳', '선택', '좀더', '관리', '하리', '란', '믿음', '스탠다드', '더', '블룸', '거의', '시가', '체크', '배정', '층', '우리룸외', '모두', '숙박', '객', '다른', '객실', '소음', '별로', '욕실', '침구', '류', '꽤', '느낌', '자신', '광고', '욕실', '컵', '사실', '욕실', '컵', '이용', '자신', '광고', '화장', '겸', '책상', '거울', '이용', '옷장', '옷', '가장', '점', '전', '호텔', '펜션', '게스트하우스', '침대', '이외', '쓸모', '쇼파', '데이', '베드', '선택', '침대', '딸', '곳', '거나', '장식', '용', '쇼파', '사실', '침대', '이외', '때', '여행', '일정', '정리', '거나', '약간', '사무', '처리', '때', '탁자', '쇼파', '중요시', '호텔', '펜션', '게', '하등', '탁자', '의자', '경우', '엘린', '호텔', '침대', '옆', '탁자', '쓸모', '의자', '개', '게', '맘', '선택', '역시', '저녁', '도착', '과일', '맥주', '한잔', '자기', '남편', '메일', '보고', '위치', '공항', '택시', '불과', '분', '거리', '프론트', '직원', '도움', '방', '기본', '매우', '방', '모든', '것', '다음', '날', '아침', '일찍', '비행기', '경우', '권장', '를', '가지', '거기', '아이', '유모차', '그', '짐', '밀고', '눈', '날', '저녁', '도착', '직원', '정말', '도움', '처음', '유모차', '계단', '통해', '직원', '휠체어', '전용', '엘리베이터', '객실', '히터', '작동', '위치', '공항', '버스', '정류장', '우리', '서귀포', '때', '공항', '번', '버스', '버스', '만하', '이', '호텔', '근처', '레스토랑', '바', '젠', '거리', '수', '거리', '편의점', '도보', '분', '거리', '중국', '관광객', '좀', '편입', '니', '시설', '가격', '대비', '조식', '나름', '수영장', '편이', '제주도', '때', '이용', '숙박', '호텔', '근처', '뭐', '편의', '시설', '편의점', '주차장', '야외', '주자', '구', '제주도', '렌트', '동시', '위치', '규모', '편', '추천', '곳', '제주시', '동쪽', '길목', '위치', '위치', '호텔', '층', '수가', '아침', '바다', '조식', '주차장', '여유', '편이', '주차', '모처럼', '연휴', '아내', '제주', '호텔', '검색', '중', '함덕', '동북', '리', '길목', '메이', '더', '호텔', '박', '예약', '첫날', '도착', '시', '느낌', '꽤', '느낌', '호텔', '방', '느낌', '우리', '우려', '것', '달리', '확', '공간', '전망', '마음', '휠씐', '더', '정돈', '방과', '구조', '시간', '내내', '그', '자체', '앞', '바다', '뒤', '산이', '산', '바다', '풍경', '감상', '야외', '수영장', '룸', '컨디션', '좀', '드하', '욕실', '점', '외관', '곳', '왜', '내부', '관리', '안', '듯', '중국', '관광객', '좀', '듯', '고요', '위치', '뭐', '잠', '자기', '주변', '뭐', '별', '일부러', '곳', '관리', '해도', '구만', '워크숍', '여러', '동료', '곳', '화장실', '부족', '것', '외', '체적', '밖', '휴식', '공간', '동료', '사진', '관리', '야자수', '제주', '리조트', '콘도', '독채', '통나무', '여행', '인원', '선택', '수', '가정', '집', '가족', '여행', '곳', '우리', '곳', '주', '년', '아기', '이', '평화', '호텔', '위치', '근처', '공원', '산책', '뒤', '리조트', '사람', '영어', '구사', '때문', '적극', '추천', '가격', '대비', '성능', '주위', '편의', '시설', '단점', '객실', '크기', '욕실', '크기', '욕실', '샤워', '부스', '욕조', '점', '좀', '외진', '곳', '위치', '관광지', '위주', '여행', '동선', '위치', '가성', '비', '숙소', '생각', '소셜커머스', '통해', '예약', '수', '리조트', '편', '관리', '실', '직원', '분', '룸', '위치', '안내', '수', '합리', '가격', '룸', '컨디션', '꽤', '마음', '제주도', '처음', '이', '펜션', '주인', '정말', '사랑', '나무', '집', '켈빈', '매우', '협조', '강아지', '이름', '자기', '제주도', '운전', '우리', '우리', '입력', '업로드', '케빈', '주변', '펜션', '집', '것', '느낌', '저', '곳', '추천', '제', '조언', '자', '드라이브', '및', '의', '도움', '수', '이', '펜션', '다시', '곳', '것', '곳', '자연', '도시', '멀리', '펜션', '하우스', '최고', '선택', '가격', '이상', '가치', '가격', '차', '강력', '추천', '우리', '수', '라이센스', '경우', '만료', '협박', '모든', '것', '주인', '케빈', '택시', '타고', '우리', '이', '여정', '음식', '주문', '수', '현지', '음식', '분실', '때', '그', '전화', '하나', '택시', '타고', '통신', '수', '방', '주방', '용품', '및', '주전자', '밥솥', '가스렌지', '등등', '또한', '운', '빵', '아침', '식사', '제공', '정말', '그', '서비스', '우리', '여행', '제주', '기억', '때문', '저', '제', '친구', '꼭', '다시', '펜션', '추천', '고해', '다만', '세면', '용품', '주지', '참고', '시설', '입실', '때', '목욕탕', '냄새', '아주', '살짝', '공항', '편이', '이동', '무리', '골목', '찾기', '시설', '가격', '대비', '양호', '편입', '니', '다만', '침구', '류', '락스', '냄새', '좀', '냄새', '때문', '머리', '냉장고', '모터', '소리', '수면', '방해', '공항', '근처', '기', '가격', '합리', '시설', '위치', '분', '정도', '도로', '변', '서귀포', '출장', '시', '버스', '타고', '기', '곳', '박', '방', '크기', '현대', '호텔', '호텔', '용도', '냉장고', '치약', '제공', '영화', '채널', '영어', '내', '건', '샴푸', '샤워', '폼', '냄새', '정말', '세븐일레븐', '편의점', '수', '또한', '롯데', '면세점', '도보', '이동', '수', '예', '언급', '주차장', '사용', '수', '주차', '강', '수', '근처', '도로', '편입', '니', '바닥', '난방', '방', '정말', '더', '정보', '요구', '수', '호텔', '우리', '방', '컨셉', '잠', '거의', '치', '매우', '전반', '장소', '매우', '직원', '정말', '도움', '위치', '레스토랑', '편의점', '가까이', '것', '걱정', '필요', '우리', '개', '밤', '동안', '여기', '나', '장소', '소유', '것', '주방', '무엇', '요리', '수', '밥솥', '난로', '후드', '전자', '레인지', '가정', '용', '식', '기류', '해변', '공항', '매우', '걱정', '우리', '것', '소리', '당신', '잠', '방해', '것', '커튼', '덕택', '우리', '장소', '근처', '해변', '해산물', '레스토랑', '것', '만', '그', '중', '하나', '시도', '수', '호스트', '매우', '의사', '소통', '수', '이', '곳', '전적', '추천', '가치', '모든', '원', '하하', '하룻밤', '장소', '부부', '도움', '곳', '우리', '냉장고', '요리', '시설', '인승', '사람', '위해', '임대', '사람', '당신', '운전', '경우', '연금', '공원', '도보', '거리', '상점', '식당', '함덕', '해변', '조금', '곳', '위치', '내부', '프런트', '직원', '다만', '객실', '방음', '편', '단점', '가격', '대비', '가족', '여행', '제주', '여행', '아이', '해수욕장', '함덕', '해수욕장', '결정', '인근', '호텔', '검색', '중', '베스트', '호텔', '알', '오픈', '한지', '정말', '얼마', '아마', '달', '내인', '듯', '더', '이미지', '호텔', '직원', '급', '호텔', '저리', '인근', '놀', '거리', '먹거리', '호텔', '오션', '뷰', '두루', '두루', '가성', '비', '최고', '최고', '직원', '호텔', '가족', '여행', '직원', '맛집', '안내', '가족', '간만', '제주도', '여행', '아이', '서우', '봉', '함덕', '해수욕장', '스노', '쿨링', '바베큐', '고기', '여름', '휴가', '호텔', '직원', '친절', '서비스', '가을', '겨울', '한번', '더', '주변', '차도', '숙박', '최적', '화장실', '방', '방도', '무엇', '사장', '조식', '바다', '조식', '분위기', '것', '공항', '호스텔', '방', '그룹', '여행', '제주도', '추천', '근처', '음식', '한국', '음식점', '이', '지역', '여름', '아이', '바다', '곳', '방문', '차', '택시', '예약', '권장', '더', '나은', '사용', '수', '경우', '사용', '주차', '공간', '이', '명', '묵', '수', '점', '층', '침대', '개', '일반', '싱글', '침대', '하나', '제공', '방음', '전혀', '시', '제지', '방', '편이', '조식', '조식', '과일', '제공', '점', '아주', '방값', '아주', '편이', '무료', '와이파이', '제공', '자주', '사용', '위치', '약간', '마레', '카펜션', '사장', '정말', '개', '동이', '바', '마을', '자리', '펜션', '잠자리', '추천', '금', '능리', '마을', '안쪽', '위치', '펜션', '주인', '아저씨', '기분', '하룻밤', '펜션', '총', '크기', '건', '겨울', '난방', '시설', '방', '해', '숙소', '안', '인테리어', '소품', '생필품', '등', '정말', '퀄리티', '진짜', '힐링', '숙소', '사장', '조식', '호텔', '동네', '위치', '고속도로', '정면', '장교', '매우', '그', '아트', '리움', '공연', '가야', '때문', '조기', '체크', '요청', '매우', '합리', '가격', '도시', '전망', '유닛', '구', '수', '방', '매우', '전혀', '불평', '수', '매일', '아침', '조식', '뷔페', '제공', '아침', '항공', '편', '경우', '대비', '공항', '호텔', '위치', '공항', '편', '화장실', '가성', '비', '추천', '호텔', '그랜드', '보이', '실내', '그다지', '의', '외부', '모습', '제공', '목욕', '수건', '커피', '차', '기본', '세면', '도구', '사셰', '이', '근처', '카페', '거리', '편', '우리', '개', '밤', '동안', '여기', '나', '장소', '소유', '것', '주방', '무엇', '요리', '수', '밥솥', '난로', '후드', '전자', '레인지', '가정', '용', '식', '기류', '해변', '공항', '매우', '걱정', '우리', '것', '소리', '당신', '잠', '방해', '것', '커튼', '덕택', '우리', '장소', '근처', '해변', '해산물', '레스토랑', '것', '만', '그', '중', '하나', '시도', '수', '호스트', '매우', '의사', '소통', '수', '이', '곳', '전적', '추천', '가치', '모든', '원', '하하', '하룻밤', '장소', '부부', '도움', '곳', '우리', '냉장고', '요리', '시설', '인승', '사람', '위해', '임대', '사람', '당신', '운전', '경우', '연금', '공원', '도보', '거리', '상점', '식당', '나', '그것', '수영장', '가지', '때문', '여기', '예약', '수영장', '물이', '방', '그', '가격', '나', '해변', '다른', '장소', '수', '객실', '간이', '주방', '옷장', '비트', '냄새', '내', '체크', '전', '었는', '얼마', '아주', '방도', '가구', '고급', '지고', '숙소', '박만', '게', '부엌', '다음', '보고', '숙소', '분', '거리', '올레길', '산책', '함덕', '해수욕장', '분', '정도', '방', '침대', '포함', '욕실', '았', '총', '인의', '객실', '공항', '근처', '것', '제외', '쇼핑', '경우', '위치', '우리', '개인', '투어', '때문', '우리', '우리', '자신', '이', '지역', '중', '호텔', '확인', '수도', '아침', '식사', '아주', '전복', '층', '커넥티드', '룸', '방', '두', '개', '하나로', '인테리어', '꽤', '가격', '숙소', '경험', '터', '꽤', '공항', '정말', '비행기', '소리', '저', '다만', '주차장', '층', '바로', '호텔', '수', '점', '층', '출입구', '비', '눈', '앞', '입구', '좀', '화가', '짐', '수가', '수', '층', '로비', '겸', '카페', '앞', '차', '대고', '짐', '다시', '주차', '가야', '날씨', '거리', '편이', '하니', '더', '기억', '서비스', '제공', '호텔', '위치', '약간', '치마', '오르막', '호텔', '입구', '자신', '수하물', '끌', '필요', '제한', '조식', '뷔페', '버터', '빵', '제공', '샤워', '룸', '벽', '화장실', '칸막이', '것', '외', '매우', '특급', '나름', '제주시', '쪽', '공항', '다만', '저녁식사', '위', '렌터카', '택시', '급', '부엌', '객실', '해변', '수', '거리', '층', '상점', '프론트', '목적지', '돈', '가치', '도시', '지역', '공항', '택시', '버스', '돈', '위해', '추천', '것', '직원', '정도', '그', '도움', '가격', '매우', '방', '보기', '해변', '바로', '길', '건너', '모든', '시설', '당구', '테이블', '및', '탁구', '테이블', '활동', '실', '단', '어디', '안', '고려', '차', '렌트', '섬', '효과', '이', '리조트', '추천', '점', '방', '대부분', '부엌', '공급', '모든', '접시', '컵', '포크', '칼', '냄비', '팬', '해변', '정말', '이', '호텔', '대해', '제도', '점', '수', '고객', '서비스', '직원', '매우', '것', '우리', '체크', '그', '우리', '인사', '느낌', '돈', '투숙', '객', '더', '부담', '수', '또한', '우리', '침대', '시트', '욕실', '변경', '우리', '여러', '날', '수건', '매일', '만', '추가', '수', '입구', '문', '매우', '분', '호텔', '밖', '더', '나은', '사람', '가끔', '청소', '해', '주어', '전반', '호텔', '느낌', '온라인', '사진', '거', '아무', '우리', '우리', '미소', '수', '수', '이', '호텔', '것', '가치', '나', '결코', '정보', '호텔', '가격', '얼마나', '일', '수', '집', '호텔', '나', '때', '우리', '돈', '수', '제주', '보석', '호텔', '이', '관련', '것', '생각', '호텔', '이름', '제외', '초콜릿', '객실', '샤워', '시설', '가격', '근처', '상점', '하나', '버스', '타고', '약', '공항', '객실', '흡연', '수', '방이', '준비', '자신', '데스크톱', '한국인', '직원', '영어', '나', '밤', '도착', '체크', '아웃', '초콜릿', '호텔', '꽤', '신식', '이', '개인', '생각', '값', '호텔', '셔', '위치', '소매', '상점', '주차장', '호텔', '객실', '한국', '표준', '것', '수건', '제공', '일부', '부정', '포인트', '부족', '호텔', '게스트', '초콜릿', '호텔', '간판', '오히려', '곳', '해', '동안', '한글', '은', '호텔', '수', '주인', '영어', '이해', '프론트', '데스크', '만다린', '전반', '이', '호텔', '아주', '관리', '사람', '제주시', '아침', '식사', '제주도', '시내', '조금', '숙소', '바로', '앞', '해변', '도로', '주인', '침구', '류', '락스', '냄새', '점', '정말', '로비', '인터넷', '이용', '객실', '바다', '풍경', '가격', '대비', '숙소', '협재해수욕장', '차로', '분', '거리', '바다', '보이', '정원', '뻣', '바베큐', '장도', '객실', '가격', '것', '통증', '게스트', '하우스', '제주도', '의', '처음', '제주', '지원', '분', '한국', '언어', '더', '것', '여기', '여러', '이름', '리베라', '호텔', '리베라', '호텔', '호텔', '리베로', '호텔', '거의', '모든', '불행', '의', '게스트', '하우스', '제', '체크', '인', '하나', '그것', '모든', '시설', '깜짝', '제', '방', '엘이디', '티비', '컴퓨터', '기능', '웹', '브라우저', '설치', '의', '양성', '도', '미니', '바', '온수', '보일러', '정수기', '예', '바로', '해당', '및', '무료', '와이파이', '꼭', '안', '가격', '이', '정도', '방', '두', '원', '하룻밤', '또한', '나', '질', '침대', '베개', '허용', '화장실', '이', '욕조', '커튼', '또한', '사용', '화장실', '문', '내', '체력', '테스트', '접수', '영어', '저', '때', '그', '나', '최고', '골퍼', '피', '공물', '예', '를', '요청', '때', '주변', '여기', '디너', '지적', '의', '지도', '근처', '레스토랑', '몇', '군데', '위치', '말', '것', '이', '게스트', '하우스', '위치', '쇼핑', '거리', '로부터', '멀리', '킬로미터', '이상', '제주도', '마누카꿀', '밤', '쇼핑', '코스', '메', '제품', '식료품', '등', '또한', '분', '거리', '단지', '제주', '공항', '제주', '국제', '공항', '또한', '임대', '자동차', '차고', '조식', '제공', '결론', '곳', '매력', '가격', '위치', '만약', '휴가', '것', '곳', '이', '게스트', '하우스', '건축', '한지', '콘도', '기타', '시설', '중국', '관광객', '대상', '시설', '고급', '자재', '얘기', '제주도', '골프장', '겨울', '피크', '골퍼', '페어', '웨이', '상태', '디봇', '모래', '수리', '골프장', '캐디', '냐', '에너지', '월', '다른', '무자', '전반', '불친절', '애월', '해변', '발코니', '바로', '바다', '볼', '수', '분', '정도', '해변', '커피', '디저트', '건물', '앞', '펜션', '오징어', '배', '불빛', '보고', '시', '은', '밤', '방', '부엌', '주차', '전체', '점', '이', '건물', '바닥', '욕실', '바닥', '욕조', '및', '시피', '강', '잔류', '전기', '방전', '이', '장식', '주인', '매일', '수건', '준', '나', '사람', '영어', '생각', '가격', '해변', '대해', '캠핑', '장', '다시', '것', '우리', '양식', '콘도', '렀는데', '퀸', '침대', '개', '이불', '방', '바다', '전망', '감상', '수', '안뜰', '전체', '편의', '시설', '현대', '수용', '이', '펜션', '호텔', '성산', '일출봉', '자동차', '시간', '마운트', '산', '자동차', '분', '한라산', '관음사', '트레일', '헤드', '우리', '예약', '가격', '나', '가치', '생각', '합', '다애', '월', '해안', '도로', '구암', '위치', '직원', '친절', '한편', '시설', '좀', '좀', '층', '편의점', '커플', '여행', '좀', '별로', '구', '남자', '끼리', '여행', '가격', '아보', '요원', '격', '시골', '위치', '객실', '편안함', '장점', '아침', '식사', '호텔', '비용', '포함', '파일', '프로비저닝', '빵', '잼', '화장실', '시설', '별로', '사실', '우리', '방', '에어컨', '작동', '직원', '수정', '거절', '나', '내', '친구', '이', '펜션', '호텔', '추천', '센트럴', '시티', '호텔', '예약', '센트럴', '호텔', '예약', '시간', '취소', '왜', '취소', '가격', '숙박시설', '부담', '직원', '영어', '그', '저', '왜', '나', '불평', '중국', '방이', '구식', '사진', '인터넷', '에어컨', '경우', '침대', '직접', '객실', '청소', '수건', '호텔', '그냥', '모텔', '인테리어', '정도', '변기', '고장', '방사', '이즈', '벽', '걸이', '에어컨', '하나', '전부', '명', '일회용품', '개', '수건', '요', '예약', '필요', '현장', '하든', '암버', '호텔', '일명', '이비사', '호텔', '호텔', '말', '그대로', '암버', '중앙', '분', '거리', '위치', '서로', '혼합', '또한', '이', '덜', '중', '하나', '것', '세면', '도구', '수건', '차', '안', '주전자', '컵', '주', '급', '호텔', '방', '침대', '베개', '이불', '방', '직원', '매우', '도움', '슈퍼마켓', '호텔', '건너편', '편의점', '바로', '분', '거리', '아침', '식사', '숙박', '비', '포함', '가격', '대비', '에어컨', '모든', '것', '숙박', '그냥', '러브', '모텔', '객실', '냄새', '공항', '점', '장점', '하나', '다시', '여기', '숙박', '안', '것', '몸', '지지', '풀겸', '찜질방', '그냥', '호텔', '나우', '예약', '주차공간', '말', '그냥', '키', '차', '동시', '키시', '문도', '일부', '월풀', '욕조', '객실', '예약', '월풀', '청소', '청소', '물', '녹물', '난리', '샤워', '기', '거', '건', '세면대', '물', '객실', '비품', '구색', '것', '것', '정체', '불명', '브랜드', '제주도', '관광', '특성', '투숙', '객', '대부분', '박', '그', '중', '반수', '첫날', '이후', '다음', '날', '예약', '취소', '환불', '다수', '돈', '굳이', '취소', '사유', '가장', '최악', '건', '시설', '시설', '극악', '이구', '정말', '아프리카', '기분', '또한', '이', '게', '하의', '가장', '장점', '게', '내', '술', '계속', '소등', '시간', '점', '그게', '타', '게', '소등', '시간', '시설', '파티', '모두', '별로', '또한', '직원', '사장', '포함', '세명', '상주', '정리', '설거지', '투숙', '객', '가세', '정말', '술', '술', '사람', '라면', '추천', '화장실', '방이', '좀', '파티', '최적화', '처음', '방', '잠', '평상', '거', '해괴', '소리', '뭐', '것', '나름', '낭만', '생각', '낮', '게스트', '하우스', '바다', '풍경', '워낙', '밤', '낭만', '개뿔', '평상', '주변', '테이블', '명', '막걸리', '술', '파티', '퍽', '스타일', '낮', '일정', '사람', '쉬', '평상', '평상', '주변', '술', '파티', '벌이', '어쩌', '거', '억지로', '술', '밤새', '건가', '네', '그냥', '수준', '유흥업소', '누울', '수', '수', '돈', '테이블', '술', '안주', '전국', '온', '남자', '여자도', '아예', '노리', '이', '게', '사람', '엔조이', '거', '다만', '게', '인장', '부킹', '인장', '그냥', '사파리', '구경', '듯', '구경만', '매칭', '공률', '장담', '도심', '속', '만남', '강추', '화이팅', '정말', '아프리카', '느낌', '나', '곳', '촌장', '자연인', '거기', '분', '프리', '마음', '분', '인지', '저희', '일행', '흐트러질', '수', '시간', '청결', '약속', '드릴', '수', '한번', '정도', '추억', '개', '바다', '관경', '예약', '체크', '인시', '객실', '개', '바다', '보기', '예약', '완료', '이유', '주인', '방', '사진', '보이지', '것', '마루', '망', '모든', '가구', '침대', '냉장고', '의자', '테이블', '심지어', '년', '이상', '사용', '화장실', '바닥', '어', '두운', '얼룩', '우리', '밤', '체크', '때', '바다', '전망', '얼마나', '방', '때문', '현장', '취소', '주인', '협상', '만', '회수', '수', '환', '불금', '우리', '끝', '다른', '호텔', '위해', '예약', '또한', '주차', '공간', '아주', '약', '대의', '차', '주차', '수', '커플', '여행', '신혼', '여행', '추천', '곳', '공항', '활주로', '옆', '소리', '수도', '것', '뼈', '연금', '그것', '대해', '것', '발코니', '바다', '전경', '그것', '매우', '편리', '공항', '매우', '침목', '대해', '조금', '수', '예산', '휴가', '선택', '수', '후회', '곳', '공항', '가기', '매우', '어려움', '뒷골목', '러브', '모텔', '단체', '패키지', '숙소', '가격', '대비', '깨끗', '다만', '엘리베이터', '복도', '싸구려', '향수', '잔뜩', '조식', '최악', '반찬', '류', '준비', '곳', '밥', '추천', '룸', '컨디션', '가격', '대비', '중국인', '복도', '새벽', '시간', '동안', '잠', '절대', '가지', '서비스', '완전', '최악', '건', '둘째', '총지배인', '가몬', '완전', '최악', '건', '직원', '실수', '몬지', '동의', '취소', '분', '말', '그냥', '객실', '취소', '가라', '더', '이상', '여행기', '잠깐', '인터넷', '검색', '분', '아무', '안내', '다른', '호텔', '이용', '약속', '환불', '건', '처리', '주', '말', '한마디', '왜', '또', '식', '서비스', '직', '고객', '일단', '말', '불편', '말', '먼저', '줄', '압니다', '서비스', '기본', '총지배인', '이', '호텔', '교욱받', '직원', '얼마나', '서비스', '제공', '절대', '가지', '제주', '공항', '분도', '호텔', '가격', '편이', '방도', '오피스텔', '개조', '호텔', '방안', '싱크대', '인덕션', '구가', '사용', '못', '대신', '조식', '천원', '부담', '먹기', '조식', '토요코인', '스타일', '단점', '대로', '변', '위치', '차량', '소음', '조금', '호텔', '구들장', '롱', '탁자', '훼손', '커튼', '못', '침대', '주변', '콘센트', '이건', '손님', '대한', '예의', '잠', '분', '상태', '이', '거리', '나', '사진', '기대', '꼭', '다른', '매우', '혼란', '나', '제주도', '첫', '날', '거기', '다른', '호텔', '선택', '것', '이름', '호텔', '제', '호텔', '때문', '제', '여기', '제', '북한', '간', '적', '것', '수용', '거부', '나', '내', '여행', '주', '전', '곳', '나', '휴가', '망치', '위해', '해변', '어딘가', '선택', '박', '숙박', '위', '이', '호텔', '약', '인', '것', '청구', '것', '약', '정도', '더', '수치', '그것', '이름', '호텔', '본질', '당신', '초', '안', '발코니', '매우', '방', '내', '거기', '주', '동안', '방이', '것', '이외', '청소', '그', '침대', '욕실', '그것', '꽤', '진절머리', '나', '매일', '해변', '때', '모래', '방', '침대', '하나', '모래', '구덩이', '것', '침대', '관', '내', '뒤', '매듭', '정리', '위해', '영국', '두', '번의', '티슈', '마사지', '것', '호텔', '시설', '거의', '리셉션', '유인', '도착', '시', '공항', '교통', '편', '제공', '거절', '공항', '길', '마', '택시', '고', '식', '때', '아침', '식사', '위', '무엇', '그', '다음', '카페', '분', '나', '예정', '장소', '역설', '나', '호텔', '나', '체재', '파멸', '고', '노력', '종류', '사건', '경험', '적', '부터', '시작', '나', '것', '일찍', '도착', '호텔', '도착', '로비', '프론트', '데스크', '아무', '호텔', '전화', '약', '회', '재판', '후', '전화', '누군가', '즉시', '그', '반응', '매우', '위협', '그', '태도', '왜', '새벽', '시', '그', '오전', '시', '호텔', '몸가짐', '말', '나', '치', '발언', '대답', '수', '일찍', '체크', '수', '그', '반응', '더', '이상', '논평', '매우', '나', '그', '내', '일찍', '방', '수', '관해', '나', '그것', '지불', '그', '반응', '다시', '나', '내', '가방', '수', '그', '반응', '로비', '나', '호텔', '프론트', '데스크', '아무', '때', '로비', '내', '가방', '어도', '그', '반응', '침묵', '서핑', '위해', '친구', '때문', '나', '그', '내', '곳', '그', '대답', '그', '다음', '나', '그', '내', '당신', '옷', '입', '수', '욕실', '그', '반응', '왜', '나', '것', '당신', '내', '당신', '얼굴', '보고', '때', '로비', '그', '다음', '그', '또', '다른', '사람과', '로비', '그', '사람', '바로', '그', '지역', '갱스터', '말', '수', '그', '술', '냄새', '담배', '왜', '당신', '호텔', '그', '중', '서쪽', '협재', '다', '위치', '때문', '비치', '가장', '인기', '부분', '분', '해변', '이', '호텔', '점', '바로', '해변', '길', '정말', '위치', '직원', '도움', '요', '편의점', '호텔', '발코니', '오른', '편', '매우', '해변', '전망', '매우', '샤워실', '수압', '점', '호텔', '호텔', '시작', '침대', '베개', '도', '아주', '장소', '경영', '관리', '마루', '끈', '거리', '문', '무료', '아침', '식사', '제공', '점', '대중', '교통', '인생', '더', '밤', '모든', '것', '화장실', '냄새', '심지어', '객실', '냄새', '부엌', '객실', '주인', '직원', '오전', '시', '밤', '야간', '스', '사람', '발', '안', '운영', '내', '평생', '동안', '최악', '숙박', '방', '나', '영빈', '관', '나머지', '대해', '말', '인도', '사람', '이야기', '음악', '퍼팅', '악몽', '모기', '어디', '서나', '방', '주인', '전혀', '이', '장소', '피해', '나', '그냥', '가격', '위치', '공항', '근처', '곳', '선택', '가격', '조금', '더', '여러', '가지', '고려', '생각', '침대', '설치', '더', '소음', '침대', '기숙사', '화장실', '자주', '더러', '움', '냄새', '나', '팬', '작동', '안', '확인', '전체', '시설', '관리', '시설', '관리자', '소유자', '전문', '그', '음료', '일부', '대화', '친구', '손님', '밤', '하드', '때문', '밤', '잠', '락커', '점', '전체', '분위기', '규칙', '마사지', '기계', '무료', '버스', '타고', '공항', '취하', '위치', '아이러니', '고객', '곳', '매우', '손님', '곳', '다시', '요청', '경우', '차라리', '대안', '추가', '달러', '지불', '호스텔', '매우', '위치', '내', '내부', '때', '그것', '단지', '내', '것', '중', '아주', '호스텔', '냄새', '화장실', '주차장', '시', '면', '여기', '수']
</div>
<br>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 빈도 탐색</span></span><br><span class="line">counter = Counter(nouns)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">counter.most_common(<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('호텔', 803),
 ('수', 498),
 ('것', 436),
 ('방', 330),
 ('위치', 328),
 ('우리', 327),
 ('곳', 320),
 ('공항', 307),
 ('직원', 267),
 ('매우', 264)]
</code></pre>
<br>
<p><strong>&gt;&gt; 한글자 명사 제거</strong></p>
<p>위 결과에서 보이듯이, 두 글자 키워드가 대부분 의미 있는 단어지만, ‘수’, ‘것’, '곳’과 같은 한 글자 키워드는 분석에 딱히 좋은 영향을 미치지 않은 것으로 보입니다. 그래서 우리는 한글자 명사를 제거해보도록 하겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">available_counter = Counter({x: counter[x] <span class="keyword">for</span> x <span class="keyword">in</span> counter <span class="keyword">if</span> len(x) &gt; <span class="number">1</span>})</span><br><span class="line">available_counter.most_common(<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[('호텔', 803),
 ('위치', 328),
 ('우리', 327),
 ('공항', 307),
 ('직원', 267),
 ('매우', 264),
 ('가격', 245),
 ('객실', 244),
 ('시설', 215),
 ('제주', 192)]
</code></pre>
  <br>
<p>이제 한글자 키워드 모두 제거됐습니다. 하지만 “우리”, “매우” 와 같은 실질적인 의미가 없고 꾸민 역할을 하는 불용어들 아직 존재합니다. 한국어 불용어 사전을 정의하여 불용어도 제거해줄게요.</p>
 <br> 
<h3 id="3-3-불용어-사전"><a class="markdownIt-Anchor" href="#3-3-불용어-사전"></a> 3-3. 불용어 사전</h3>
<p><a href="https://www.ranks.nl/" target="_blank" rel="noopener">RANKS NL</a>에 제공해주는 <a href="https://www.ranks.nl/stopwords/korean" target="_blank" rel="noopener">한국어 불용어 사전</a>을 활용하겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">stopwords = pd.read_csv(<span class="string">"https://raw.githubusercontent.com/yoonkt200/FastCampusDataset/master/korean_stopwords.txt"</span>).values.tolist()</span><br><span class="line">stopwords[:<span class="number">10</span>]</span><br></pre></td></tr></tbody></table></figure>
<pre><code>[['휴'],
 ['아이구'],
 ['아이쿠'],
 ['아이고'],
 ['어'],
 ['나'],
 ['우리'],
 ['저희'],
 ['따라'],
 ['의해']]
</code></pre>
<br>
<p>이 외에도 우리가 분석하고자 하는 데이터셋에 특화된 불용어들이 있습니다. 예를 들면: “제주”, “호텔”, “숙소” 등. 이런 단어들도 불용어 사전에 추가해보도록 할게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">jeju_hotel_stopwords = [<span class="string">'제주'</span>, <span class="string">'제주도'</span>, <span class="string">'호텔'</span>, <span class="string">'리뷰'</span>, <span class="string">'숙소'</span>, <span class="string">'여행'</span>, <span class="string">'트립'</span>]</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> jeju_hotel_stopwords:</span><br><span class="line">    stopwords.append(word)</span><br></pre></td></tr></tbody></table></figure>
 <br> 
<h3 id="3-4-word-count"><a class="markdownIt-Anchor" href="#3-4-word-count"></a> 3-4. Word Count</h3>
<p><strong>&gt;&gt; BoW 벡터 생성</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_cleaning</span><span class="params">(text)</span>:</span></span><br><span class="line">    hangul = re.compile(<span class="string">'[^ ㄱ-ㅣ 가-힣]'</span>)  <span class="comment"># 정규 표현식 처리</span></span><br><span class="line">    result = hangul.sub(<span class="string">''</span>, text)</span><br><span class="line">    okt = Okt()  <span class="comment"># 형태소 추출</span></span><br><span class="line">    nouns = okt.nouns(result)</span><br><span class="line">    nouns = [x <span class="keyword">for</span> x <span class="keyword">in</span> nouns <span class="keyword">if</span> len(x) &gt; <span class="number">1</span>]  <span class="comment"># 한글자 키워드 제거</span></span><br><span class="line">    nouns = [x <span class="keyword">for</span> x <span class="keyword">in</span> nouns <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> stopwords]  <span class="comment"># 불용어 제거</span></span><br><span class="line">    <span class="keyword">return</span> nouns</span><br><span class="line"></span><br><span class="line">vect = CountVectorizer(tokenizer = <span class="keyword">lambda</span> x: text_cleaning(x))</span><br><span class="line">bow_vect = vect.fit_transform(df[<span class="string">'text'</span>].tolist())</span><br><span class="line">word_list = vect.get_feature_names()</span><br><span class="line">count_list = bow_vect.toarray().sum(axis=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 단어 리스트</span></span><br><span class="line">word_list</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    ['가가',
     '가게',
     '가격',
     '가격표',
     '가구',
     '가급',
     '가기',
     '가까이',
     '가끔',
     '가능',
     '가도',
     '가동',
     '가두',
     '가득',
     '가든',
     '가라',
     '가량',
     '가려움',
     '가로',
     '가면',
     '가몬',
     '가무',
     '가물',
     '가미',
     '가방',
     '가버',
     '가성',
     '가세',
     '가스레인지',
     '가스렌지',
     '가슴',
     '가시',
     '가신',
     '가야',
     '가옥',
     '가요',
     '가용',
     '가운데',
     '가을',
     '가인',
     '가장',
     '가정',
     '가정식',
     '가족',
     '가지',
     '가짓수',
     '가차',
     '가치',
     '가품',
     '각각',
     '각오',
     '각자',
     '각종',
     '각층',
     '간격',
     '간곳',
     '간다',
     '간단',
     '간만',
     '간식',
     '간이',
     '간주',
     '간직',
     '간판',
     '간혹',
     '갈껄',
     '갈비',
     '갈비탕',
     '갈수',
     '갈수록',
     '감각',
     '감동',
     '감명',
     '감사',
     '감상',
     '감소',
     '감안',
     '감자',
     '감히',
     '갑인',
     '갑자기',
     '갑작스레',
     '강남',
     '강력',
     '강아지',
     '강압',
     '강제',
     '강조',
     '강추',
     '개념',
     '개략',
     '개미',
     '개발',
     '개방',
     '개별',
     '개보',
     '개뿔',
     '개선',
     '개수대',
     '개월',
     '개인',
     '개인실',
     '개인정보',
     '개조',
     '개층',
     '객수',
     '객실',
     '갤러리',
     '갱스터',
     '거기',
     '거나',
     '거두',
     '거론',
     '거르세',
     '거름',
     '거리',
     '거린데',
     '거림',
     '거문도',
     '거미',
     '거부',
     '거실',
     '거여',
     '거울',
     '거위',
     '거의',
     '거절',
     '거주',
     '거지',
     '거참',
     '거품',
     '걱정',
     '건가',
     '건강',
     '건너',
     '건너편',
     '건물',
     '건의',
     '건조',
     '건조기',
     '건조대',
     '건축',
     '걷기',
     '걸음',
     '걸이',
     '걸즈',
     '검사',
     '검색',
     '검정색',
     '검토',
     '것임',
     '겉보기',
     '게다가',
     '게스트',
     '게스트하우스',
     '게임',
     '게재',
     '겐찮은듯',
     '겔상',
     '겨우',
     '겨울',
     '겨울철',
     '격인',
     '격하',
     '결과',
     '결론',
     '결석',
     '결재',
     '결정',
     '결제',
     '결코',
     '결함',
     '결항',
     '결혼',
     '결혼식',
     '겸비',
     '겸용',
     '겹겹',
     '경고',
     '경관',
     '경내',
     '경로',
     '경매',
     '경영',
     '경영학',
     '경우',
     '경쟁',
     '경쟁력',
     '경찰',
     '경치',
     '경험',
     '계단',
     '계란',
     '계란후라이',
     '계산',
     '계속',
     '계정',
     '계획',
     '고가',
     '고간',
     '고객',
     '고급',
     '고기',
     '고기국수',
     '고깃배',
     '고내포구',
     '고려',
     '고루',
     '고무줄',
     '고문',
     '고민',
     '고봉',
     '고분',
     '고생',
     '고속',
     '고속도로',
     '고아',
     '고양이',
     '고여',
     '고오',
     '고요',
     '고유',
     '고작',
     '고장',
     '고정',
     '고층',
     '고통',
     '고트',
     '고함',
     '고해',
     '곡부',
     '곧바로',
     '곧장',
     '골드스타',
     '골목',
     '골목길',
     '골퍼',
     '골프',
     '골프장',
     '골프텔',
     '곰팡이',
     '곱슬',
     '곳곳',
     '곳곳이',
     '곳도',
     '곳임',
     '공간',
     '공감',
     '공개',
     '공공',
     '공공장소',
     '공급',
     '공기',
     '공덕',
     '공률',
     '공물',
     '공사',
     '공시',
     '공실이',
     '공연',
     '공연장',
     '공영',
     '공용',
     '공원',
     '공유',
     '공짜',
     '공차',
     '공터',
     '공포',
     '공항',
     '과거',
     '과물',
     '과언',
     '과일',
     '과장',
     '관경',
     '관계',
     '관계자',
     '관광',
     '관광객',
     '관광명소',
     '관광지',
     '관덕정',
     '관련',
     '관리',
     '관리인',
     '관리자',
     '관리직',
     '관음사',
     '관해',
     '광경',
     '광고',
     '광천수',
     '괴체',
     '교대',
     '교수',
     '교외',
     '교욱받',
     '교육',
     '교체',
     '교통',
     '교환',
     '교회',
     '구가',
     '구경',
     '구경만',
     '구관',
     '구글',
     '구나',
     '구내',
     '구덩이',
     '구도',
     '구두',
     '구둣주걱',
     '구들장',
     '구류',
     '구만',
     '구매',
     '구멍',
     '구별',
     '구분',
     '구비',
     '구사',
     '구색',
     '구석',
     '구석구석',
     '구성',
     '구식',
     '구암',
     '구역',
     '구역질',
     '구이',
     '구입',
     '구조',
     '구축',
     '국가',
     '국내',
     '국도',
     '국립',
     '국수',
     '국적',
     '국제',
     '국제공항',
     '군더더기',
     '군데',
     '군데군데',
     '굳럭',
     '굳이',
     '굿굿',
     '굿굿굿',
     '굿앤굿',
     '굿임',
     '권내',
     '권장',
     '권한',
     '귀중',
     '규모',
     '규율',
     '규칙',
     '균형',
     '그거',
     '그것',
     '그게',
     '그냥',
     '그네',
     '그녀',
     '그다음',
     '그다지',
     '그닥',
     '그대로',
     '그동안',
     '그때',
     '그랜드',
     '그레이스',
     '그로',
     '그룹',
     '그릇',
     '그린',
     '그림',
     '극복',
     '극악',
     '근래',
     '근무',
     '근본',
     '근육통',
     '근처',
     '근해',
     '글래드',
     '글쎄',
     '금고',
     '금늘',
     '금능',
     '금릉',
     '금방',
     '금속',
     '금액',
     '금연',
     '금요일',
     '금은',
     '금지',
     '금토일',
     '급상승',
     '급속',
     '기간',
     '기계',
     '기구',
     '기기',
     '기념일',
     '기능',
     '기대',
     '기도',
     '기류',
     '기리',
     '기반',
     '기본',
     '기부',
     '기분',
     '기사',
     '기상',
     '기소',
     '기숙사',
     '기술',
     '기술자',
     '기억',
     '기업',
     '기여',
     '기용',
     '기우',
     '기입',
     '기적',
     '기전',
     '기점',
     '기존',
     '기준',
     '기지',
     '기타',
     '기프트샵',
     '기호',
     '기회',
     '기후',
     '긴장',
     '길가',
     '길림',
     '길목',
     '길이',
     '김녕',
     '김녕해변',
     '김밥',
     '김씨',
     '김치',
     '김포공항',
     '까페',
     '깜빡',
     '깜짝',
     '깨끗',
     '깨끗깔끔',
     '께빵',
     '꼭대기',
     '꽃꺽으러',
     '꽃사슴',
     '꾸러미',
     '꾸밈',
     '꿀잠',
     '끝내기',
     '끼리',
     '나기',
     '나누기',
     '나니',
     '나라',
     '나름',
     '나머지',
     '나머진',
     '나무',
     '나물',
     '나보',
     '나오니',
     '나우',
     '나은',
     '나이',
     '나이트',
     '나이프',
     '나중',
     '나탈리',
     '낙후',
     '낚시',
     '난로',
     '난리',
     '난방',
     '난입',
     '난타',
     '날수',
     '날씨',
     '날짜',
     '남녀',
     '남성',
     '남아',
     '남자',
     '남자친구',
     '남짓',
     '남쪽',
     '남편',
     '낭만',
     '내겐',
     '내내',
     '내년',
     '내부',
     '내부시',
     '내시',
     '내야',
     '내외',
     '내용',
     '내의',
     '내인',
     '내일',
     '냄비',
     '냄새',
     '냉동',
     '냉장고',
     '너븐팡',
     '넓이',
     '네스프레소',
     '네이버',
     '년대',
     '년전',
     '녔던',
     '노곤',
     '노래',
     '노래방',
     '노력',
     '노리',
     '노블레스',
     '노선',
     '노을',
     '노크',
     '노트북',
     '노화',
     '노후',
     '녹물',
     '녹음',
     '녹지',
     '논평',
     '놀러와',
     '놀수',
     '놀이',
     '놀이기구',
     '놀이터',
     '농부가',
     '농장',
     '높이',
     '놨더군',
     '누가',
     '누구',
     '누군가',
     '누락',
     '누리',
     '누울',
     '눈앞',
     '뉴타운',
     '느낌',
     '는걸',
     '늘송',
     '능리',
     '다가',
     '다그',
     '다다미',
     '다라',
     '다락방',
     '다른',
     '다른사람',
     '다리미',
     '다만',
     '다미',
     '다발',
     '다섯',
     '다소',
     '다수',
     '다시',
     '다운',
     '다음',
     '다이지',
     '다인',
     '다정',
     '다행',
     '단계',
     '단기',
     '단면',
     '단어',
     '단위',
     '단점',
     '단정',
     '단지',
     '단체',
     '달걀',
     '달걀프라이',
     '달라',
     '달러',
     '달리',
     '달성',
     '닭머르',
     '담당',
     '담배',
     '담소',
     '담요',
     '답변',
     '당구',
     '당근',
     '당나귀',
     '당분간',
     '당시',
     '당신',
     '당일',
     '당황',
     '대가',
     '대가족',
     '대고',
     '대관령',
     '대답',
     '대당',
     '대도',
     '대도시',
     '대뜸',
     '대략',
     '대로',
     '대리',
     '대명',
     '대박',
     '대부분',
     '대비',
     '대상',
     '대신',
     '대안',
     '대여',
     '대요',
     '대욕',
     '대응',
     '대의',
     '대입',
     '대적',
     '대접',
     '대정',
     '대중',
     '대중교통',
     '대처',
     '대체',
     '대충',
     '대포',
     '대표',
     '대하',
     '대한',
     '대한민국',
     '대한항공',
     '대해',
     '대행',
     '대형',
     '대화',
     '대환영',
     '댐핑할',
     '더군다나',
     '더더',
     '더러',
     '더블',
     '더블베드',
     '더욱',
     '더원',
     '덕림사',
     '덕분',
     '덕택',
     '던데',
     '덮어놓고',
     '데리',
     '데스크',
     '데스크톱',
     '데이',
     '데이즈',
     '델문',
     '도구',
     '도달',
     '도대체',
     '도도',
     '도둑',
     '도로',
     '도록',
     '도리어',
     '도미',
     '도보',
     '도서관',
     '도시',
     '도시락',
     '도심',
     '도심지',
     '도어',
     '도어락',
     '도움',
     '도움말',
     '도일',
     '도정',
     '도중',
     '도착',
     '도처',
     '도청',
     '도쿄',
     '도크',
     '독립',
     '독서',
     '독점',
     '독채',
     '돈까스',
     '돌담',
     '돌잔치',
     '동계',
     '동광양',
     '동굴',
     '동남',
     '동남아',
     '동네',
     '동도',
     '동료',
     '동문',
     '동물',
     '동물원',
     '동반',
     '동부',
     '동북',
     '동생',
     '동선',
     '동시',
     '동안',
     '동영상',
     '동의',
     '동이',
     '동인',
     '동작',
     '동전',
     '동정',
     '동쪽',
     '돼지',
     '돼지고기',
     '됏다',
     '될껀',
     '될껄',
     '두루',
     '두번째',
     '두봉',
     '두부',
     '두엄',
     '두운',
     '두툼',
     '둘러보기',
     '둘이서',
     '둘째',
     '둥근지붕',
     '뒤쪽',
     '뒤척',
     '뒷골목',
     '뒷마당',
     '뒷문',
     '뒷쪽',
     '드네',
     '드라이기',
     '드라이버',
     '드라이브',
     '드라이어',
     '드롭',
     '드릴',
     '드타',
     '드하',
     '득시',
     '듭니',
     '듯이',
     '듯해',
     '등급',
     '등대',
     '등등',
     '등반',
     '등산',
     '등정후',
     '디귿',
     '디너',
     '디럭스',
     '디봇',
     '디셈버',
     '디자이너',
     '디자인',
     '디저트',
     '디제이',
     '따라서',
     '때로는',
     '때문',
     '떡국',
     '또오',
     '또한',
     '뚜벅',
     '뜨근뜨근',
     '뜨내기',
     '라그',
     '라마',
     '라며',
     '라면',
     '라서',
     '라스베가스',
     '라우터',
     '라운지',
     '라이센스',
     '라커룸',
     '락스',
     '락심이',
     '락커',
     '락타',
     '란딩',
     '랍니',
     '랜드',
     '랜트',
     '랜트카',
     '랜트하',
     '램프',
     '러닝',
     '러브',
     '럭셔리',
     '런가',
     '렀는데',
     '렀습니',
     '렀으',
     '레노',
     '레드',
     '레벨',
     '레비',
     '레스토랑',
     '레시',
     '레오',
     '레이',
     '레이크',
     '레인지',
     '레저',
     '레프트',
     '렌즈',
     '렌탈업체',
     '렌터',
     '렌터카',
     '렌트',
     '렌트카',
     '려고',
     '려운',
     '로고',
     '로그',
     '로만',
     '로맨틱',
     '로부터',
     '로비',
     '로서',
     '로션',
     '로얄',
     '로움',
     '로컬',
     '로터리',
     '로프트',
     '롯데',
     '롯데리아',
     '롱보드',
     '루온토',
     '루트',
     '루프',
     '룸메이트',
     '룸바닥',
     '룸상태',
     '룸서비스',
     '룸안',
     '룸키',
     '룸타입',
     '를위',
     '리가',
     '리기',
     '리넨',
     '리뉴',
     '리뉴얼',
     '리더',
     '리도',
     '리모콘',
     '리베라',
     '리베로',
     '리빙룸',
     '리셉션',
     '리움',
     '리젠시',
     '리조트',
     '리지',
     '리치',
     '리트',
     '리플렛',
     '린스',
     '링잉',
     '마누카꿀',
     '마늘',
     '마다',
     '마담',
     '마당',
     '마레',
     '마련',
     '마루',
     '마리',
     '마모',
     '마무리',
     '마사지',
     '마술',
     '마스코트',
     '마스크',
     '마스터',
     '마시기',
     '마안',
     '마운트',
     '마을',
     '마음',
     '마이너스',
     '마인드',
     '마일리지',
     '마자',
     '마저',
     '마주',
     '마지막',
     '마지막여행',
     '마차',
     '마찬가지',
     '마치',
     '마침내',
     '마켓',
     '마트',
     '마틸다',
     '막걸리',
     '만끽',
     '만난',
     '만날',
     '만남',
     '만다린',
     '만두',
     '만들기',
     '만료',
     '만약',
     '만요',
     '만원',
     '만점',
     '만족',
     '만족도',
     '만천원',
     '만큼',
     '만하',
     '만해',
     '만화책',
     '말레이시아',
     '말레이시아인',
     '말로',
     '말리',
     '말씀',
     '말투',
     '말함',
     '맘스',
     '맛사지',
     '맛잇엇어',
     '맛집',
     '망각',
     '망신',
     '망치',
     '맞은편',
     '맞이',
     '매년',
     '매니',
     '매니저',
     '매달',
     '매듭',
     '매력',
     '매번',
     '매우',
     '매운탕',
     '매일',
     '매장',
     '매점',
     '매칭',
     '매트',
     '매트리스',
     '매트릭스',
     '매하',
     '맥도날드',
     '맥도널드',
     '맥주',
     '맥주잔',
     '맨발',
     '머리',
     '머리카락',
     '머신',
     '머싱',
     '먹거리',
     '먹기',
     '먹방',
     '먹이',
     '먼저',
     '먼지',
     '멀리',
     '메가박스',
     '메뉴',
     '메리',
     '메리어트',
     '메시지',
     ...]
</pre>
</div>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어가 전체 리뷰중에 등장한 총 횟수</span></span><br><span class="line">count_list</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([  4,   8, 245, ...,   1,   7,  14], dtype=int64)
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 각 단어의 리뷰별 등장 횟수</span></span><br><span class="line">bow_vect.toarray()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 2, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">bow_vect.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1001, 3599)
</code></pre>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># "단어" - "총 등장 횟수" Matching</span></span><br><span class="line"></span><br><span class="line">word_count_dict = dict(zip(word_list, count_list))</span><br><span class="line">word_count_dict</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    {'가가': 4,
     '가게': 8,
     '가격': 245,
     '가격표': 1,
     '가구': 8,
     '가급': 1,
     '가기': 20,
     '가까이': 20,
     '가끔': 5,
     '가능': 10,
     '가도': 7,
     '가동': 2,
     '가두': 1,
     '가득': 2,
     '가든': 1,
     '가라': 3,
     '가량': 1,
     '가려움': 1,
     '가로': 2,
     '가면': 14,
     '가몬': 1,
     '가무': 1,
     '가물': 1,
     '가미': 1,
     '가방': 4,
     '가버': 1,
     '가성': 49,
     '가세': 3,
     '가스레인지': 1,
     '가스렌지': 1,
     '가슴': 1,
     '가시': 4,
     '가신': 3,
     '가야': 10,
     '가옥': 1,
     '가요': 5,
     '가용': 1,
     '가운데': 3,
     '가을': 4,
     '가인': 1,
     '가장': 42,
     '가정': 4,
     '가정식': 2,
     '가족': 94,
     '가지': 55,
     '가짓수': 3,
     '가차': 1,
     '가치': 15,
     '가품': 1,
     '각각': 7,
     '각오': 1,
     '각자': 2,
     '각종': 3,
     '각층': 1,
     '간격': 2,
     '간곳': 1,
     '간다': 4,
     '간단': 1,
     '간만': 1,
     '간식': 5,
     '간이': 3,
     '간주': 1,
     '간직': 1,
     '간판': 2,
     '간혹': 1,
     '갈껄': 1,
     '갈비': 1,
     '갈비탕': 1,
     '갈수': 7,
     '갈수록': 1,
     '감각': 1,
     '감동': 12,
     '감명': 1,
     '감사': 6,
     '감상': 3,
     '감소': 1,
     '감안': 5,
     '감자': 1,
     '감히': 1,
     '갑인': 1,
     '갑자기': 4,
     '갑작스레': 1,
     '강남': 1,
     '강력': 9,
     '강아지': 7,
     '강압': 2,
     '강제': 1,
     '강조': 1,
     '강추': 8,
     '개념': 1,
     '개략': 1,
     '개미': 1,
     '개발': 3,
     '개방': 2,
     '개별': 3,
     '개보': 1,
     '개뿔': 1,
     '개선': 4,
     '개수대': 1,
     '개월': 1,
     '개인': 23,
     '개인실': 1,
     '개인정보': 2,
     '개조': 5,
     '개층': 1,
     '객수': 1,
     '객실': 244,
     '갤러리': 2,
     '갱스터': 1,
     '거기': 24,
     '거나': 6,
     '거두': 1,
     '거론': 1,
     '거르세': 1,
     '거름': 2,
     '거리': 156,
     '거린데': 1,
     '거림': 1,
     '거문도': 1,
     '거미': 1,
     '거부': 4,
     '거실': 29,
     '거여': 1,
     '거울': 5,
     '거위': 1,
     '거의': 27,
     '거절': 3,
     '거주': 1,
     '거지': 1,
     '거참': 1,
     '거품': 2,
     '걱정': 27,
     '건가': 1,
     '건강': 2,
     '건너': 8,
     '건너편': 11,
     '건물': 55,
     '건의': 1,
     '건조': 2,
     '건조기': 3,
     '건조대': 2,
     '건축': 2,
     '걷기': 2,
     '걸음': 3,
     '걸이': 2,
     '걸즈': 1,
     '검사': 1,
     '검색': 13,
     '검정색': 1,
     '검토': 3,
     '것임': 3,
     '겉보기': 2,
     '게다가': 5,
     '게스트': 25,
     '게스트하우스': 30,
     '게임': 2,
     '게재': 1,
     '겐찮은듯': 1,
     '겔상': 1,
     '겨우': 3,
     '겨울': 15,
     '겨울철': 2,
     '격인': 1,
     '격하': 1,
     '결과': 2,
     '결론': 3,
     '결석': 1,
     '결재': 2,
     '결정': 12,
     '결제': 1,
     '결코': 2,
     '결함': 1,
     '결항': 2,
     '결혼': 1,
     '결혼식': 2,
     '겸비': 1,
     '겸용': 1,
     '겹겹': 2,
     '경고': 1,
     '경관': 3,
     '경내': 1,
     '경로': 1,
     '경매': 1,
     '경영': 2,
     '경영학': 1,
     '경우': 41,
     '경쟁': 1,
     '경쟁력': 2,
     '경찰': 2,
     '경치': 17,
     '경험': 26,
     '계단': 4,
     '계란': 11,
     '계란후라이': 1,
     '계산': 2,
     '계속': 23,
     '계정': 1,
     '계획': 13,
     '고가': 1,
     '고간': 1,
     '고객': 14,
     '고급': 8,
     '고기': 8,
     '고기국수': 1,
     '고깃배': 1,
     '고내포구': 1,
     '고려': 9,
     '고루': 1,
     '고무줄': 1,
     '고문': 2,
     '고민': 9,
     '고봉': 1,
     '고분': 2,
     '고생': 1,
     '고속': 2,
     '고속도로': 2,
     '고아': 1,
     '고양이': 3,
     '고여': 1,
     '고오': 1,
     '고요': 3,
     '고유': 2,
     '고작': 1,
     '고장': 3,
     '고정': 3,
     '고층': 2,
     '고통': 1,
     '고트': 1,
     '고함': 2,
     '고해': 1,
     '곡부': 1,
     '곧바로': 2,
     '곧장': 2,
     '골드스타': 1,
     '골목': 6,
     '골목길': 2,
     '골퍼': 2,
     '골프': 9,
     '골프장': 5,
     '골프텔': 2,
     '곰팡이': 14,
     '곱슬': 1,
     '곳곳': 4,
     '곳곳이': 1,
     '곳도': 8,
     '곳임': 2,
     '공간': 73,
     '공감': 1,
     '공개': 1,
     '공공': 2,
     '공공장소': 1,
     '공급': 2,
     '공기': 8,
     '공덕': 1,
     '공률': 1,
     '공물': 1,
     '공사': 12,
     '공시': 1,
     '공실이': 1,
     '공연': 8,
     '공연장': 2,
     '공영': 1,
     '공용': 8,
     '공원': 17,
     '공유': 5,
     '공짜': 1,
     '공차': 1,
     '공터': 1,
     '공포': 1,
     '공항': 307,
     '과거': 1,
     '과물': 2,
     '과언': 1,
     '과일': 9,
     '과장': 2,
     '관경': 1,
     '관계': 3,
     '관계자': 2,
     '관광': 38,
     '관광객': 15,
     '관광명소': 4,
     '관광지': 12,
     '관덕정': 4,
     '관련': 6,
     '관리': 39,
     '관리인': 1,
     '관리자': 3,
     '관리직': 2,
     '관음사': 1,
     '관해': 5,
     '광경': 2,
     '광고': 4,
     '광천수': 1,
     '괴체': 1,
     '교대': 1,
     '교수': 1,
     '교외': 1,
     '교욱받': 1,
     '교육': 5,
     '교체': 7,
     '교통': 30,
     '교환': 2,
     '교회': 2,
     '구가': 3,
     '구경': 7,
     '구경만': 1,
     '구관': 4,
     '구글': 2,
     '구나': 2,
     '구내': 1,
     '구덩이': 1,
     '구도': 1,
     '구두': 2,
     '구둣주걱': 1,
     '구들장': 1,
     '구류': 1,
     '구만': 2,
     '구매': 14,
     '구멍': 7,
     '구별': 1,
     '구분': 3,
     '구비': 11,
     '구사': 6,
     '구색': 2,
     '구석': 2,
     '구석구석': 5,
     '구성': 7,
     '구식': 1,
     '구암': 1,
     '구역': 3,
     '구역질': 2,
     '구이': 1,
     '구입': 5,
     '구조': 12,
     '구축': 1,
     '국가': 3,
     '국내': 1,
     '국도': 1,
     '국립': 1,
     '국수': 3,
     '국적': 3,
     '국제': 11,
     '국제공항': 1,
     '군더더기': 1,
     '군데': 8,
     '군데군데': 2,
     '굳럭': 1,
     '굳이': 7,
     '굿굿': 1,
     '굿굿굿': 1,
     '굿앤굿': 1,
     '굿임': 1,
     '권내': 1,
     '권장': 5,
     '권한': 2,
     '귀중': 1,
     '규모': 12,
     '규율': 2,
     '규칙': 1,
     '균형': 1,
     '그거': 3,
     '그것': 70,
     '그게': 1,
     '그냥': 42,
     '그네': 1,
     '그녀': 20,
     '그다음': 1,
     '그다지': 4,
     '그닥': 4,
     '그대로': 11,
     '그동안': 4,
     '그때': 3,
     '그랜드': 6,
     '그레이스': 3,
     '그로': 3,
     '그룹': 9,
     '그릇': 3,
     '그린': 1,
     '그림': 4,
     '극복': 1,
     '극악': 1,
     '근래': 1,
     '근무': 4,
     '근본': 1,
     '근육통': 1,
     '근처': 164,
     '근해': 1,
     '글래드': 3,
     '글쎄': 2,
     '금고': 2,
     '금늘': 1,
     '금능': 2,
     '금릉': 1,
     '금방': 3,
     '금속': 1,
     '금액': 8,
     '금연': 6,
     '금요일': 1,
     '금은': 1,
     '금지': 1,
     '금토일': 1,
     '급상승': 1,
     '급속': 1,
     '기간': 3,
     '기계': 4,
     '기구': 2,
     '기기': 4,
     '기념일': 1,
     '기능': 4,
     '기대': 15,
     '기도': 7,
     '기류': 3,
     '기리': 1,
     '기반': 4,
     '기본': 45,
     '기부': 1,
     '기분': 29,
     '기사': 8,
     '기상': 1,
     '기소': 1,
     '기숙사': 7,
     '기술': 3,
     '기술자': 1,
     '기억': 11,
     '기업': 2,
     '기여': 1,
     '기용': 1,
     '기우': 1,
     '기입': 1,
     '기적': 1,
     '기전': 1,
     '기점': 1,
     '기존': 1,
     '기준': 4,
     '기지': 1,
     '기타': 5,
     '기프트샵': 2,
     '기호': 1,
     '기회': 11,
     '기후': 1,
     '긴장': 1,
     '길가': 4,
     '길림': 1,
     '길목': 2,
     '길이': 2,
     '김녕': 1,
     '김녕해변': 1,
     '김밥': 1,
     '김씨': 1,
     '김치': 4,
     '김포공항': 1,
     '까페': 5,
     '깜빡': 1,
     '깜짝': 3,
     '깨끗': 5,
     '깨끗깔끔': 1,
     '께빵': 1,
     '꼭대기': 2,
     '꽃꺽으러': 1,
     '꽃사슴': 1,
     '꾸러미': 1,
     '꾸밈': 1,
     '꿀잠': 2,
     '끝내기': 1,
     '끼리': 18,
     '나기': 2,
     '나누기': 6,
     '나니': 1,
     '나라': 2,
     '나름': 13,
     '나머지': 6,
     '나머진': 1,
     '나무': 13,
     '나물': 1,
     '나보': 1,
     '나오니': 2,
     '나우': 1,
     '나은': 5,
     '나이': 3,
     '나이트': 2,
     '나이프': 2,
     '나중': 8,
     '나탈리': 2,
     '낙후': 3,
     '낚시': 3,
     '난로': 3,
     '난리': 3,
     '난방': 30,
     '난입': 2,
     '난타': 9,
     '날수': 1,
     '날씨': 12,
     '날짜': 1,
     '남녀': 1,
     '남성': 2,
     '남아': 5,
     '남자': 6,
     '남자친구': 2,
     '남짓': 1,
     '남쪽': 1,
     '남편': 10,
     '낭만': 2,
     '내겐': 1,
     '내내': 8,
     '내년': 1,
     '내부': 40,
     '내부시': 1,
     '내시': 1,
     '내야': 1,
     '내외': 2,
     '내용': 2,
     '내의': 2,
     '내인': 1,
     '내일': 2,
     '냄비': 1,
     '냄새': 58,
     '냉동': 1,
     '냉장고': 35,
     '너븐팡': 2,
     '넓이': 1,
     '네스프레소': 1,
     '네이버': 3,
     '년대': 2,
     '년전': 1,
     '녔던': 1,
     '노곤': 2,
     '노래': 1,
     '노래방': 3,
     '노력': 8,
     '노리': 1,
     '노블레스': 1,
     '노선': 2,
     '노을': 1,
     '노크': 1,
     '노트북': 2,
     '노화': 1,
     '노후': 6,
     '녹물': 1,
     '녹음': 4,
     '녹지': 1,
     '논평': 1,
     '놀러와': 2,
     '놀수': 1,
     '놀이': 3,
     '놀이기구': 2,
     '놀이터': 2,
     '농부가': 1,
     '농장': 3,
     '높이': 2,
     '놨더군': 1,
     '누가': 5,
     '누구': 5,
     '누군가': 4,
     '누락': 1,
     '누리': 1,
     '누울': 2,
     '눈앞': 3,
     '뉴타운': 1,
     '느낌': 49,
     '는걸': 2,
     '늘송': 3,
     '능리': 1,
     '다가': 1,
     '다그': 1,
     '다다미': 1,
     '다라': 1,
     '다락방': 1,
     '다른': 88,
     '다른사람': 1,
     '다리미': 2,
     '다만': 54,
     '다미': 1,
     '다발': 1,
     '다섯': 1,
     '다소': 21,
     '다수': 2,
     '다시': 93,
     '다운': 4,
     '다음': 102,
     '다이지': 1,
     '다인': 1,
     '다정': 2,
     '다행': 3,
     '단계': 4,
     '단기': 1,
     '단면': 1,
     '단어': 2,
     '단위': 2,
     '단점': 40,
     '단정': 1,
     '단지': 16,
     '단체': 19,
     '달걀': 3,
     '달걀프라이': 1,
     '달라': 13,
     '달러': 7,
     '달리': 6,
     '달성': 1,
     '닭머르': 1,
     '담당': 2,
     '담배': 19,
     '담소': 2,
     '담요': 1,
     '답변': 3,
     '당구': 2,
     '당근': 2,
     '당나귀': 2,
     '당분간': 1,
     '당시': 1,
     '당신': 21,
     '당일': 3,
     '당황': 7,
     '대가': 3,
     '대가족': 2,
     '대고': 1,
     '대관령': 1,
     '대답': 3,
     '대당': 1,
     '대도': 3,
     '대도시': 2,
     '대뜸': 1,
     '대략': 6,
     '대로': 8,
     '대리': 3,
     '대명': 1,
     '대박': 3,
     '대부분': 23,
     '대비': 64,
     '대상': 1,
     '대신': 8,
     '대안': 2,
     '대여': 3,
     '대요': 2,
     '대욕': 1,
     '대응': 2,
     '대의': 4,
     '대입': 1,
     '대적': 1,
     '대접': 1,
     '대정': 1,
     '대중': 9,
     '대중교통': 6,
     '대처': 2,
     '대체': 2,
     '대충': 3,
     '대포': 1,
     '대표': 4,
     '대하': 1,
     '대한': 19,
     '대한민국': 2,
     '대한항공': 1,
     '대해': 21,
     '대행': 1,
     '대형': 10,
     '대화': 11,
     '대환영': 1,
     '댐핑할': 1,
     '더군다나': 1,
     '더더': 2,
     '더러': 1,
     '더블': 29,
     '더블베드': 4,
     '더욱': 5,
     '더원': 1,
     '덕림사': 1,
     '덕분': 6,
     '덕택': 3,
     '던데': 1,
     '덮어놓고': 1,
     '데리': 5,
     '데스크': 30,
     '데스크톱': 1,
     '데이': 1,
     '데이즈': 1,
     '델문': 2,
     '도구': 18,
     '도달': 3,
     '도대체': 1,
     '도도': 1,
     '도둑': 1,
     '도로': 41,
     '도록': 1,
     '도리어': 1,
     '도미': 9,
     '도보': 35,
     '도서관': 1,
     '도시': 18,
     '도시락': 4,
     '도심': 14,
     '도심지': 1,
     '도어': 3,
     '도어락': 1,
     '도움': 51,
     '도움말': 1,
     '도일': 1,
     '도정': 1,
     '도중': 2,
     '도착': 69,
     '도처': 1,
     '도청': 2,
     '도쿄': 1,
     '도크': 1,
     '독립': 6,
     '독서': 1,
     '독점': 1,
     '독채': 5,
     '돈까스': 1,
     '돌담': 1,
     '돌잔치': 1,
     '동계': 1,
     '동광양': 1,
     '동굴': 1,
     '동남': 1,
     '동남아': 2,
     '동네': 7,
     '동도': 1,
     '동료': 2,
     '동문': 14,
     '동물': 9,
     '동물원': 2,
     '동반': 3,
     '동부': 2,
     '동북': 1,
     '동생': 3,
     '동선': 3,
     '동시': 7,
     '동안': 48,
     '동영상': 1,
     '동의': 3,
     '동이': 1,
     '동인': 2,
     '동작': 1,
     '동전': 1,
     '동정': 1,
     '동쪽': 5,
     '돼지': 16,
     '돼지고기': 4,
     '됏다': 1,
     '될껀': 1,
     '될껄': 1,
     '두루': 2,
     '두번째': 2,
     '두봉': 2,
     '두부': 1,
     '두엄': 1,
     '두운': 2,
     '두툼': 1,
     '둘러보기': 1,
     '둘이서': 3,
     '둘째': 5,
     '둥근지붕': 1,
     '뒤쪽': 4,
     '뒤척': 1,
     '뒷골목': 1,
     '뒷마당': 1,
     '뒷문': 1,
     '뒷쪽': 2,
     '드네': 1,
     '드라이기': 7,
     '드라이버': 1,
     '드라이브': 11,
     '드라이어': 11,
     '드롭': 1,
     '드릴': 1,
     '드타': 1,
     '드하': 2,
     '득시': 1,
     '듭니': 5,
     '듯이': 1,
     '듯해': 1,
     '등급': 3,
     '등대': 3,
     '등등': 8,
     '등반': 3,
     '등산': 6,
     '등정후': 1,
     '디귿': 1,
     '디너': 4,
     '디럭스': 6,
     '디봇': 1,
     '디셈버': 2,
     '디자이너': 1,
     '디자인': 11,
     '디저트': 1,
     '디제이': 2,
     '따라서': 4,
     '때로는': 1,
     '때문': 112,
     '떡국': 2,
     '또오': 1,
     '또한': 76,
     '뚜벅': 3,
     '뜨근뜨근': 1,
     '뜨내기': 1,
     '라그': 1,
     '라마': 4,
     '라며': 3,
     '라면': 15,
     '라서': 1,
     '라스베가스': 1,
     '라우터': 1,
     '라운지': 9,
     '라이센스': 1,
     '라커룸': 1,
     '락스': 2,
     '락심이': 1,
     '락커': 2,
     '락타': 1,
     '란딩': 1,
     '랍니': 1,
     '랜드': 1,
     '랜트': 1,
     '랜트카': 1,
     '랜트하': 1,
     '램프': 2,
     '러닝': 1,
     '러브': 3,
     '럭셔리': 5,
     '런가': 2,
     '렀는데': 1,
     '렀습니': 2,
     '렀으': 1,
     '레노': 1,
     '레드': 1,
     '레벨': 1,
     '레비': 1,
     '레스토랑': 64,
     '레시': 1,
     '레오': 2,
     '레이': 1,
     '레이크': 1,
     '레인지': 3,
     '레저': 1,
     '레프트': 1,
     '렌즈': 1,
     '렌탈업체': 1,
     '렌터': 1,
     '렌터카': 4,
     '렌트': 17,
     '렌트카': 8,
     '려고': 4,
     '려운': 1,
     '로고': 1,
     '로그': 3,
     '로만': 1,
     '로맨틱': 2,
     '로부터': 2,
     '로비': 49,
     '로서': 2,
     '로션': 1,
     '로얄': 1,
     '로움': 1,
     '로컬': 3,
     '로터리': 1,
     '로프트': 1,
     '롯데': 6,
     '롯데리아': 2,
     '롱보드': 1,
     '루온토': 1,
     '루트': 1,
     '루프': 17,
     '룸메이트': 1,
     '룸바닥': 1,
     '룸상태': 2,
     '룸서비스': 9,
     '룸안': 1,
     '룸키': 2,
     '룸타입': 1,
     '를위': 1,
     '리가': 2,
     '리기': 1,
     '리넨': 1,
     '리뉴': 1,
     '리뉴얼': 1,
     '리더': 1,
     '리도': 1,
     '리모콘': 3,
     '리베라': 2,
     '리베로': 1,
     '리빙룸': 2,
     '리셉션': 29,
     '리움': 2,
     '리젠시': 1,
     '리조트': 53,
     '리지': 1,
     '리치': 1,
     '리트': 1,
     '리플렛': 1,
     '린스': 2,
     '링잉': 1,
     '마누카꿀': 1,
     '마늘': 1,
     '마다': 1,
     '마담': 2,
     '마당': 2,
     '마레': 2,
     '마련': 7,
     '마루': 5,
     '마리': 11,
     '마모': 1,
     '마무리': 3,
     '마사지': 4,
     '마술': 1,
     '마스코트': 2,
     '마스크': 1,
     '마스터': 2,
     '마시기': 2,
     '마안': 1,
     '마운트': 1,
     '마을': 9,
     '마음': 31,
     '마이너스': 1,
     '마인드': 4,
     '마일리지': 2,
     '마자': 2,
     '마저': 1,
     '마주': 4,
     '마지막': 21,
     '마지막여행': 1,
     '마차': 1,
     '마찬가지': 4,
     '마치': 12,
     '마침내': 3,
     '마켓': 9,
     '마트': 14,
     '마틸다': 2,
     '막걸리': 1,
     '만끽': 1,
     '만난': 1,
     '만날': 1,
     '만남': 1,
     '만다린': 2,
     '만두': 1,
     '만들기': 1,
     '만료': 1,
     '만약': 6,
     '만요': 1,
     '만원': 20,
     '만점': 1,
     '만족': 12,
     '만족도': 1,
     '만천원': 1,
     '만큼': 2,
     '만하': 2,
     '만해': 2,
     '만화책': 1,
     '말레이시아': 1,
     '말레이시아인': 1,
     '말로': 2,
     '말리': 1,
     '말씀': 7,
     '말투': 3,
     '말함': 2,
     '맘스': 1,
     '맛사지': 1,
     '맛잇엇어': 1,
     '맛집': 25,
     '망각': 1,
     '망신': 2,
     '망치': 2,
     '맞은편': 7,
     '맞이': 5,
     '매년': 2,
     '매니': 1,
     '매니저': 3,
     '매달': 1,
     '매듭': 1,
     '매력': 5,
     '매번': 1,
     '매우': 265,
     '매운탕': 1,
     '매일': 36,
     '매장': 3,
     '매점': 3,
     '매칭': 1,
     '매트': 5,
     '매트리스': 13,
     '매트릭스': 1,
     '매하': 1,
     '맥도날드': 5,
     '맥도널드': 1,
     '맥주': 22,
     '맥주잔': 1,
     '맨발': 3,
     '머리': 7,
     '머리카락': 4,
     '머신': 3,
     '머싱': 1,
     '먹거리': 7,
     '먹기': 2,
     '먹방': 1,
     '먹이': 3,
     '먼저': 3,
     '먼지': 3,
     '멀리': 14,
     '메가박스': 1,
     '메뉴': 15,
     '메리': 1,
     '메리어트': 1,
     '메시지': 1,
     ...}
</pre>
</div>
 <br> 
<h3 id="3-5-tf-idf-적용"><a class="markdownIt-Anchor" href="#3-5-tf-idf-적용"></a> 3-5. TF-IDF 적용</h3>
<p><strong>&gt;&gt; TF-IDF 변환</strong></p>
<p>Bag of Words 벡터에 대해서 TF-IDF변환 진행합니다.</p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfTransformer</span><br><span class="line"></span><br><span class="line">tfidf_vectorizer = TfidfTransformer()</span><br><span class="line">tf_idf_vect = tfidf_vectorizer.fit_transform(bow_vect)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(tf_idf_vect.shape)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1001, 3599)
</code></pre>
<br>
<p>변환 후 1001*3599 matrix가 출력됩니다. 여기서</p>
<ul>
<li>
<p>한 행(row)은 한 리뷰를 의미하고</p>
</li>
<li>
<p>한 열(column)은 한 단어를 의미합니다.</p>
<br>
</li>
</ul>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 첫 번째 리뷰에서의 단어 중요도(TF-IDF 값) -- 0이 아닌 것만 출력</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>  (0, 3588)	0.35673213299026796
  (0, 2927)	0.2582351368959594
  (0, 2925)	0.320251680858207
  (0, 2866)	0.48843555212083145
  (0, 2696)	0.23004450213863206
  (0, 2311)	0.15421663035331626
  (0, 1584)	0.48843555212083145
  (0, 1527)	0.2928089229786031
  (0, 790)	0.2528176728459411
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 첫 번째 리뷰에서 모든 단어의 중요도 -- 0인 값까지 포함</span></span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray().shape)</span><br><span class="line">print(tf_idf_vect[<span class="number">0</span>].toarray())</span><br></pre></td></tr></tbody></table></figure>
<pre><code>(1, 3599)
[[0. 0. 0. ... 0. 0. 0.]]
</code></pre>
<br>
<p><strong>&gt;&gt; “벡터” - “단어” mapping</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">vect.vocabulary_</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    {'집중': 2866,
     '휴식': 3588,
     '제공': 2696,
     '위치': 2311,
     '선정': 1584,
     '또한': 790,
     '청소': 2927,
     '청결': 2925,
     '상태': 1527,
     '이상': 2392,
     '침대': 3022,
     '이불': 2388,
     '침구': 3021,
     '교체': 299,
     '어메니티': 2013,
     '보강': 1296,
     '베스트': 1277,
     '웨스턴': 2299,
     '회원': 3564,
     '경우': 185,
     '객실': 106,
     '층수': 3009,
     '요청': 2234,
     '적극': 2606,
     '반영': 1188,
     '지인': 2837,
     '소개': 1629,
     '처음': 2910,
     '당황': 611,
     '세면': 1607,
     '도구': 675,
     '잠옷': 2555,
     '필수': 3358,
     '그것': 361,
     '정도': 2673,
     '다음': 578,
     '여기': 2074,
     '박만': 1171,
     '저녁': 2595,
     '맥주': 981,
     '한잔': 3414,
     '렌트': 838,
     '뚜벅': 791,
     '바로': 1159,
     '버스': 1247,
     '정류': 2676,
     '도착': 697,
     '가방': 24,
     '일찍': 2487,
     '정비': 2685,
     '방이': 1225,
     '입실': 2500,
     '업그레이드': 2038,
     '직원': 2849,
     '정말': 2680,
     '바다': 1148,
     '전망': 2623,
     '전일': 2636,
     '함덕': 3425,
     '대명': 624,
     '콘도': 3091,
     '실내': 1861,
     '분위기': 1384,
     '손님': 1659,
     '가장': 40,
     '배치': 1241,
     '대해': 651,
     '대응': 634,
     '써비스': 1889,
     '조식': 2730,
     '부분': 1351,
     '신경': 1838,
     '아주': 1922,
     '특급': 3208,
     '트랜디': 3191,
     '고민': 210,
     '흔적': 3593,
     '여름': 2082,
     '수영장': 1700,
     '사용': 1483,
     '보고': 1297,
     '엄마': 2035,
     '가격': 2,
     '대비': 627,
     '주위': 2769,
     '마트': 924,
     '식당': 1826,
     '시장': 1816,
     '방문': 1217,
     '의사': 2361,
     '동안': 726,
     '정해진': 2695,
     '휘슬': 3580,
     '공항': 269,
     '생각': 1539,
     '시설': 1809,
     '모두': 1028,
     '친절': 3017,
     '모드': 1029,
     '마지막': 917,
     '마무리': 900,
     '테라스': 3156,
     '전경': 2612,
     '인근': 2427,
     '재래시장': 2583,
     '야시장': 1979,
     '이용도': 2402,
     '이용': 2400,
     '일차': 2488,
     '휘슬락': 3581,
     '체크': 2940,
     '주변': 2761,
     '여친': 2094,
     '추억': 2975,
     '가성': 26,
     '추천': 2977,
     '후회': 3575,
     '예전': 2145,
     '그랜드': 372,
     '저희': 2605,
     '아이': 1918,
     '돌잔치': 708,
     '다정': 581,
     '했었더랬': 3470,
     '전통': 2642,
     '메종': 1004,
     '글래드': 387,
     '서비스': 1563,
     '매우': 969,
     '합리': 3428,
     '대의': 635,
     '명절': 1018,
     '숙박': 1721,
     '아티': 1928,
     '백미': 1243,
     '커피': 3061,
     '베이커리': 1280,
     '가족': 43,
     '플러스': 3342,
     '지금': 2816,
     '우선': 2257,
     '접근성': 2664,
     '쇼핑': 1671,
     '만족도': 940,
     '최고': 2957,
     '무엇': 1078,
     '기억': 423,
     '우리': 2251,
     '찾기': 2902,
     '교통': 300,
     '이틀': 2418,
     '정원': 2691,
     '거기': 109,
     '겨울': 160,
     '친구': 3016,
     '놀러와': 541,
     '투숙': 3185,
     '야외': 1981,
     '방향': 1235,
     '야간': 1976,
     '조명': 2726,
     '순간': 1723,
     '대접': 638,
     '실명': 1868,
     '거론': 112,
     '프론트': 3337,
     '이름': 2378,
     '안나': 1938,
     '기분': 416,
     '모습': 1037,
     '첫날': 2921,
     '스타트': 1761,
     '다시': 576,
     '선물': 1578,
     '카운터': 3032,
     '안내': 1939,
     '디너': 777,
     '기회': 438,
     '미니바': 1121,
     '무료': 1067,
     '최근': 2959,
     '관광지': 281,
     '숙고': 1719,
     '강추': 88,
     '야경': 1977,
     '일부러': 2475,
     '일어나서': 2476,
     '동네': 714,
     '바퀴': 1168,
     '먹방': 990,
     '신라': 1843,
     '퀄리티': 3105,
     '모녀': 1024,
     '제주시': 2711,
     '위해': 2313,
     '선택': 1586,
     '오픈': 2180,
     '예약': 2143,
     '대로': 622,
     '거리': 115,
     '더군다나': 657,
     '셔틀버스': 1627,
     '운행': 2271,
     '데스크': 670,
     '차안': 2880,
     '분도': 1374,
     '인상': 2438,
     '트윈': 3201,
     '사이즈': 1489,
     '만족': 939,
     '스타': 1758,
     '가짓수': 45,
     '느낌': 558,
     '화장실': 3538,
     '내부': 505,
     '인테리어': 2455,
     '질적': 2859,
     '이건': 2368,
     '개인': 100,
     '취향': 3005,
     '구비': 321,
     '과일': 273,
     '나이프': 480,
     '포크': 3295,
     '부탁': 1364,
     '준비': 2786,
     '표방': 3305,
     '모텔': 1046,
     '결론': 165,
     '훌륭': 3577,
     '시간': 1799,
     '슈페리어킹룸': 1737,
     '하루': 3376,
     '후기': 3570,
     '지은지': 2836,
     '얼마': 2033,
     '건물': 136,
     '약간': 1985,
     '유럽': 2318,
     '스타일': 1760,
     '그림': 378,
     '조각': 2715,
     '복도': 1323,
     '전시': 2633,
     '전부': 2630,
     '카펫': 3039,
     '등급': 770,
     '다른': 567,
     '이서': 2394,
     '자기': 2512,
     '조금': 2722,
     '외투': 2218,
     '완전': 2206,
     '진짜': 2856,
     '셔틀': 1626,
     '미리': 1127,
     '시티': 1821,
     '오름': 2162,
     '다만': 570,
     '도로': 680,
     '가인': 39,
     '관계': 276,
     '차량': 2876,
     '소리': 1638,
     '다소': 574,
     '방도': 1215,
     '편의점': 3273,
     '칫솔': 3027,
     '동계': 709,
     '훈련': 3576,
     '라마': 795,
     '연인': 2116,
     '전체': 2641,
     '사진': 1493,
     '첨부': 2920,
     '엘리베이터': 2064,
     '실시간': 1873,
     '비행기': 1440,
     '택시': 3151,
     '미만': 1128,
     '이동': 2374,
     '가능': 9,
     '최상': 2961,
     '욕실': 2235,
     '슬리퍼': 1791,
     '위생': 2304,
     '염려': 2123,
     '설날': 1590,
     '떡국': 788,
     '려고': 840,
     '현장': 3495,
     '결재': 167,
     '황스': 3559,
     '려운': 841,
     '중국': 2789,
     '만두': 932,
     '종류': 2744,
     '별로': 1293,
     '구만': 316,
     '메뉴': 996,
     '답변': 603,
     '제일': 2709,
     '주차': 2779,
     '걱정': 131,
     '할아버지': 3423,
     '안심': 1945,
     '컨디션': 3067,
     '문어': 1095,
     '처리': 2909,
     '회사': 3561,
     '출장': 2988,
     '서울': 1567,
     '간혹': 64,
     '이벤트': 2386,
     '해주시': 3460,
     '부대': 1344,
     '항상': 3435,
     '롯데': 855,
     '비지니스': 1434,
     '여행객': 2097,
     '손색': 1664,
     '욕조': 2236,
     '겸비': 175,
     '사계절': 1459,
     '수풀': 1715,
     '중문': 2794,
     '표선등': 3306,
     '원거리': 2281,
     '여행지': 2101,
     '복귀': 1322,
     '시내': 1805,
     '유명': 2323,
     '일단': 2462,
     '주차장': 2781,
     '지하': 2844,
     '공간': 246,
     '응대': 2356,
     '문의사항': 1097,
     '신지': 1850,
     '감동': 71,
     '역시': 2106,
     '장도': 2566,
     '락타': 807,
     '샤워': 1550,
     '마련': 896,
     '코인': 3089,
     '세탁실': 1620,
     '오션': 2167,
     '멀리': 994,
     '남자친구': 497,
     '덕분': 665,
     '이번': 2385,
     '프런트': 3331,
     '배정': 1239,
     '이착륙': 2415,
     '클리닝': 3120,
     '근무': 382,
     '아주머니': 1923,
     '인사': 2436,
     '코로나': 3085,
     '사태': 1496,
     '노화': 535,
     '벽지': 1286,
     '주름': 2756,
     '지고': 2814,
     '타일': 3133,
     '가구': 4,
     '코너': 3082,
     '곳곳이': 243,
     '관광객': 279,
     '인지': 2449,
     '사람': 1463,
     '북적': 1369,
     '전반': 2627,
     '관리': 284,
     '편이': 3274,
     '피드백': 3346,
     '편입': 3276,
     '도시': 686,
     '관광': 278,
     '특화': 3214,
     '지역': 2834,
     '근처': 385,
     '카페': 3034,
     '가기': 6,
     '고유': 221,
     '특색': 3210,
     '스테이': 1768,
     '가도': 10,
     '스타벅스': 1759,
     '번화가': 1263,
     '아침': 1924,
     '커서': 3057,
     '방음': 1224,
     '먹거리': 988,
     '단점': 588,
     '라면': 797,
     '오심': 2170,
     '이중': 2411,
     '혼자': 3523,
     '겐찮은듯': 157,
     '다그': 563,
     '도일': 694,
     '께빵': 456,
     '중국인': 2793,
     '타고': 3127,
     '눈앞': 556,
     '가지': 44,
     '힐링': 3598,
     '피트니스': 3354,
     '패키지': 3254,
     '미닫이': 1122,
     '로비': 847,
     '비롯': 1421,
     '모든': 1030,
     '각종': 52,
     '물건': 1103,
     '아침식사': 1926,
     '밥맛': 1207,
     '피아노': 3349,
     '연주': 2118,
     '룸타입': 867,
     '패밀리': 3250,
     '거실': 121,
     '한실': 3412,
     '서부': 1562,
     '수산시장': 1690,
     '새벽': 1534,
     '경매': 182,
     '구경': 304,
     '추가': 2972,
     '어차피': 2022,
     '현재': 3496,
     '묵고': 1090,
     '인터넷': 2453,
     '지정': 2840,
     '안해': 1952,
     '프런터': 3330,
     '문의': 1096,
     '영화': 2135,
     '시스템': 1810,
     '티브이': 3219,
     '채널': 2903,
     '몇개': 1020,
     '콘센트': 3092,
     '플러그': 3341,
     '와이프': 2201,
     '충전': 2995,
     '결정': 168,
     '달라': 594,
     '경험': 190,
     '장점': 2579,
     '인생': 2439,
     '최악': 2966,
     '중심': 2797,
     '바닷가': 1153,
     '비교': 1413,
     '편임': 3275,
     '한번': 3408,
     '예정': 2146,
     '휴가': 3585,
     '스위트룸': 1750,
     '유리창': 2322,
     '위트': 2312,
     '캠핑': 3050,
     '테이블': 3160,
     '세트': 1621,
     '텐트': 3161,
     '에어컨': 2054,
     '작은방': 2543,
     '매트': 975,
     '자리': 2520,
     '탑동': 3142,
     '공원': 263,
     '프리': 3338,
     '마켓': 923,
     '공연': 259,
     '매일': 971,
     '식사': 1833,
     '관덕정': 282,
     '정문': 2682,
     '도보': 684,
     '소요': 1645,
     '해장국': 3458,
     '동문': 717,
     '서문시장': 1560,
     '목관': 1047,
     '맞은편': 960,
     '슬슬': 1792,
     '별관': 1291,
     '본관': 1330,
     '갈수': 68,
     '최신': 2965,
     '그린': 377,
     '환경': 3545,
     '때문': 787,
     '별도': 1292,
     '대중교통': 641,
     '구매': 317,
     '심플': 1882,
     '비품': 1438,
     '트윈침대': 3205,
     '스탠다드': 1763,
     '높이': 548,
     '한라산': 3404,
     '노곤': 525,
     '터미널': 3152,
     '온돌룸': 2189,
     '세면대': 1608,
     '물이': 1114,
     '치약': 3013,
     '것임': 150,
     '생수': 1545,
     '환승': 3550,
     '곧바로': 231,
     '동광양': 710,
     '정류장': 2677,
     '시청': 1818,
     '스텝': 1771,
     '협소하': 3502,
     '거품': 130,
     '타월': 3131,
     '화장': 3537,
     '대가': 612,
     '거울': 123,
     '쇼파': 1670,
     '조합': 2739,
     '금액': 395,
     '주차공간': 2780,
     '공터': 267,
     '태풍': 3150,
     '개층': 104,
     '오후': 2184,
     '한시': 3409,
     '사우나': 1485,
     '부모님': 1349,
     '할머니': 3422,
     '모시': 1038,
     '계획': 197,
     '일로': 2464,
     '빠듯해': 1445,
     '어디': 2004,
     '길가': 441,
     '골목길': 235,
     '이륙': 2377,
     '착륙': 2887,
     '보이': 1310,
     '그냥': 363,
     '일반': 2469,
     '대욕': 633,
     '헬스장': 3489,
     '가면': 19,
     '고려': 206,
     '렌터카': 837,
     '입구': 2496,
     '반대쪽': 1182,
     '한정': 3416,
     '단체': 591,
     '더블': 660,
     '제외': 2708,
     '여유': 2088,
     '반대편': 1183,
     '도심': 688,
     '불구': 1387,
     '소음': 1648,
     '거의': 125,
     '세명': 1609,
     '트리플': 3199,
     '전날': 2618,
     '남아': 495,
     '자체': 2534,
     '당일': 610,
     '정보': 2683,
     '햇반': 3468,
     '장조림': 2580,
     '전자': 2637,
     '레인지': 831,
     '가야': 33,
     '세미나': 1610,
     '한국인': 3400,
     '그대로': 369,
     '나름': 469,
     '제과점': 2697,
     '정거장': 2670,
     '모기': 1022,
     '만해': 944,
     '마리': 898,
     '가량': 16,
     '방안': 1222,
     '에프킬라': 2058,
     '비치': 1435,
     '계속': 195,
     '뿌리': 1456,
     '잡고': 2557,
     '찬장': 2891,
     '천장': 2915,
     '곳곳': 242,
     '측은': 3008,
     '벌레': 1265,
     '기본': 414,
     '요금': 2223,
     '건너편': 135,
     '번호': 1262,
     '샐러드': 1538,
     '음식': 2349,
     '구성': 326,
     '전복죽': 2629,
     '저번': 2601,
     '핸드폰': 3464,
     '충전기': 2996,
     '불편': 1400,
     '센터': 1622,
     '공사': 256,
     '숙면': 1720,
     '무난': 1061,
     '노력': 528,
     '지불': 2826,
     '비용': 1430,
     '로맨틱': 845,
     '독립': 702,
     '북유럽': 1368,
     '유리': 2321,
     '커튼': 3059,
     '바깥': 1145,
     '설치': 1595,
     '모던': 1025,
     '비데': 1418,
     '효율': 3569,
     '인치': 2451,
     '삼성': 1512,
     '만끽': 927,
     '편안함': 3270,
     '여정': 2091,
     '바닥': 1151,
     '목적': 1052,
     '커플': 3060,
     '끼리': 464,
     '직진': 2852,
     '운전': 2268,
     '공영': 261,
     '애기': 1962,
     '무선인터넷': 1074,
     '갑자기': 80,
     '서전': 1568,
     '항공': 3432,
     '다가': 562,
     '가급': 5,
     '결제': 169,
     '은방': 2342,
     '상황': 1533,
     '아시': 1914,
     '고트': 227,
     '지도': 2822,
     '세심': 1614,
     '공시': 257,
     '시작': 1815,
     '맥주잔': 982,
     '쿠폰': 3102,
     '일도': 2463,
     '크기': 3108,
     '룸서비스': 864,
     '정신': 2690,
     '평가': 3277,
     '편의': 3272,
     '요즘': 2233,
     '여러': 2078,
     '직언': 2848,
     '블룸': 1412,
     '변기': 1288,
     '물질': 1115,
     '얘기': 1997,
     '수건': 1675,
     '환불': 3548,
     '월일': 2293,
     '푸른': 3313,
     '파도': 3223,
     '철썩': 2918,
     '풍경': 3320,
     '생선회': 1544,
     '장소': 2573,
     '놀이': 543,
     '양도': 1989,
     '돼지': 735,
     '전골': 2613,
     '매운탕': 970,
     '형편': 3512,
     '브런치': 1406,
     '뒤쪽': 751,
     '맛집': 956,
     '쭈욱': 2869,
     '갑인': 79,
     '드타': 764,
     '방파제': 1233,
     '횟집': 3567,
     '타운': 3129,
     '해산물': 3448,
     '규모': 356,
     '가까이': 7,
     '어르신': 2008,
     '깨끗': 454,
     '대신': 629,
     '작고': 2538,
     '수영': 1697,
     '아쉬움': 1912,
     '인도': 2430,
     '소독약': 1634,
     '스비': 1745,
     '홀로': 3525,
     '등정후': 775,
     '부터': 1365,
     '혹시': 3520,
     '확인': 3543,
     '전화': 2645,
     '통해': 3180,
     '휘트니': 3582,
     '운동복': 2266,
     '수영모': 1698,
     '고오': 219,
     '바람': 1157,
     '대여': 631,
     '여직원': 2093,
     '무시': 1077,
     '말투': 951,
     '원래': 2284,
     '제로': 2700,
     '운영': 2267,
     '일반인': 2470,
     '입장': 2503,
     '선심': 1583,
     '필요': 3360,
     '기전': 430,
     '대뜸': 620,
     '화가': 3528,
     '고객': 200,
     '플레인': 3343,
     '시경': 1800,
     '아웃': 1917,
     '하야': 3382,
     '메리어트': 998,
     '여럿': 2081,
     '이어도': 2397,
     '수준': 1707,
     '이군': 2370,
     '실망': 1867,
     '종일': 2747,
     '리셉션': 880,
     '컨시어': 3070,
     '태도': 3147,
     '유료': 2319,
     '사고': 1460,
     '학생': 3393,
     '선생님': 1580,
     '어딘': 2005,
     '사항': 1498,
     '무슨': 1075,
     '거지': 128,
     '리빙룸': 879,
     '하나요': 3368,
     '트윈룸': 3202,
     '무려': 1065,
     '게재': 156,
     '실물': 1869,
     '차이': 2881,
     '실화': 1879,
     '파우더': 3231,
     '곰팡이': 240,
     '자국': 2511,
     '작동': 2539,
     '골드스타': 233,
     '냉장고': 517,
     '절대': 2649,
     '레스토랑': 826,
     '자꾸': 2513,
     '정색': 2687,
     '살짝': 1510,
     '서버': 1561,
     '데리': 669,
     '가신': 32,
     '나머지': 470,
     '물기': 1105,
     '직접': 2851,
     '체계': 2931,
     '엉망': 2048,
     '소규모': 1630,
     '시기': 1803,
     '마음': 910,
     '리트': 886,
     '라그': 794,
     '기대': 409,
     '실내수영장': 1862,
     '수온': 1701,
     '스위트': 1749,
     '비수': 1427,
     '상대': 1515,
     '노후': 536,
     '정가': 2669,
     '무리': 1072,
     '할인': 3424,
     '행사': 3473,
     '참고': 2893,
     '포함': 3298,
     '마일리지': 913,
     '대한항공': 650,
     '하룻밤': 3377,
     '확실': 3542,
     '연식': 2115,
     '고급': 201,
     '원가': 2280,
     '서우': 1566,
     '해수욕장': 3453,
     '한눈': 3402,
     '창문': 2900,
     '겨울철': 161,
     '온도': 2187,
     '리기': 870,
     '방기': 1214,
     '동시': 725,
     '방식': 1221,
     '대략': 621,
     '도정': 695,
     '부스': 1352,
     '옆방': 2137,
     '티비': 3220,
     '취침': 3001,
     '초등학생': 2946,
     '양호': 1996,
     '한식당': 3411,
     '차라리': 2875,
     '반드시': 1184,
     '크게': 3107,
     '씨유': 1896,
     '델문': 674,
     '카페나': 3035,
     '해수욕': 3452,
     '최적': 2969,
     '디럭스': 778,
     '발코니': 1203,
     '모로': 1034,
     '트윈룸입니': 3203,
     '선착순': 1585,
     '예술': 2142,
     '물놀이': 1106,
     '모래': 1031,
     '피크': 3352,
     '시즌': 1817,
     '날씨': 491,
     '선선': 1581,
     '근래': 381,
     '편리': 3269,
     '코르': 3086,
     '기지': 434,
     '사양': 1481,
     '주체': 2782,
     '교회': 302,
     '절반': 2653,
     '인수': 2440,
     '보임': 1314,
     '아트': 1927,
     '추정': 2976,
     '프로': 3333,
     '페셔': 3264,
     '인력': 2432,
     '매트리스': 976,
     '나무': 472,
     '허리': 3482,
     '안감': 1934,
     '해변': 3447,
     '워낙': 2275,
     '가시': 31,
     '주말': 2757,
     '한국': 3397,
     '벚꽃': 1270,
     '기간': 403,
     '협재': 3503,
     '옹포': 2197,
     '밥집': 1209,
     '산책': 1505,
     '루프': 860,
     '비바람': 1425,
     '불어': 1396,
     '블로거': 1410,
     '물떄': 1108,
     '그거': 360,
     '위주': 2308,
     '풀이': 3317,
     '온수': 2192,
     '미온수': 1133,
     '미온': 1132,
     '자쿠지': 2536,
     '잠깐': 2551,
     '인피니트': 2458,
     '환상': 3549,
     '하나': 3365,
     '스페': 1782,
     '치킨': 3015,
     '빠에야': 1446,
     '스파': 1779,
     '구조': 333,
     '스파룸': 1780,
     '자쿠': 2535,
     '이용권': 2401,
     '하니': 3371,
     '사이': 1487,
     '시트': 1820,
     '정리': 2678,
     '삼다수': 1511,
     '병과': 1294,
     '네스프레소': 520,
     '캡슐': 3051,
     '여자': 2089,
     '피로': 3347,
     '스페인': 1784,
     '영업': 2132,
     '종료': 2743,
     '버거': 1245,
     '오른쪽': 2161,
     '마담': 893,
     '나탈리': 482,
     '음악': 2351,
     '필터': 3362,
     '실외수영장': 1875,
     '검색': 147,
     '옥상': 2186,
     '결과': 164,
     '대형': 653,
     '만큼': 942,
     '번잡': 1260,
     '개수대': 98,
     '이전': 2407,
     '아무': 1909,
     '리지': 884,
     '제한': 2714,
     '경치': 189,
     '이웃': 2403,
     '일몰': 2467,
     '실제': 1877,
     '리조트': 883,
     '홍보': 3527,
     '상통': 1529,
     '화산': 3532,
     '바위': 1166,
     '정상': 2686,
     '기점': 431,
     '스템': 1770,
     '잠자리': 2556,
     '기타': 435,
     '부족함': 1359,
     '길이': 444,
     '다행': 582,
     '중국어': 2792,
     '영어': 2131,
     '도움': 692,
     '해결': 3438,
     '목적지': 1053,
     '해피': 3461,
     '음료': 2346,
     '사이다': 1488,
     '주스': 2764,
     '달걀': 592,
     '치즈': 3014,
     '히터': 3597,
     '투어': 3187,
     '호스텔': 3515,
     '질문': 2858,
     '상품': 1530,
     '과거': 270,
     '게스트하우스': 154,
     '자고': 2510,
     '오기': 2150,
     '일이': 2479,
     '발전': 1201,
     '예상': 2141,
     '토스터': 3165,
     '이후': 2424,
     '소등': 1635,
     '불키': 1399,
     '조용조': 2733,
     '방키': 1232,
     '고여': 218,
     '남자': 496,
     '안전': 1946,
     '차로': 2878,
     '이내': 2373,
     '뷔페': 1403,
     '여느': 2076,
     '롯데리아': 856,
     '방만': 1216,
     '고정': 224,
     '무궁화': 1060,
     '수기': 1676,
     '사이트': 1490,
     '홈페이지': 3526,
     '마치': 921,
     '무척': 1088,
     '전기차': 2617,
     '건너': 134,
     '급속': 402,
     '소가': 1628,
     '유치원': 2333,
     '주택가': 2784,
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">invert_index_vectorizer = {v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vect.vocabulary_.items()}</span><br><span class="line">print(str(invert_index_vectorizer)[:<span class="number">100</span>]+<span class="string">'...'</span>)</span><br></pre></td></tr></tbody></table></figure>
<pre><code>{2866: '집중', 3588: '휴식', 2696: '제공', 2311: '위치', 1584: '선정', 790: '또한', 2927: '청소', 2925: '청결', 1527...
</code></pre>
<br>
<br>
<h2 id="4-감성-분류-logistic-regression"><a class="markdownIt-Anchor" href="#4-감성-분류-logistic-regression"></a> <strong>4. 감성 분류 – Logistic Regression</strong></h2>
<p>이제 전처리된 리뷰 데이터를 활용하여 <strong>감성 분류 예측 모델</strong>을 만들겠습니다.</p>
<p>감성 분류 예측 모델이란, 이용자 리뷰의 평가 내용을 통해 이 리뷰가 긍정적인지, 부정적인지를 예측하여, 이용자의 감성을 파악하는 겁니다.</p>
<p>따라서, 모델의 <strong>X 값(즉, feature 값)은 이용자 리뷰의 평가 내용</strong>이 되겠고, 모델의 <strong>Y 값(즉, label 값)은 이용자의 긍/부정 감성</strong>이 되겠습니다.</p>
<br>
<h3 id="4-1-데이터셋-생성"><a class="markdownIt-Anchor" href="#4-1-데이터셋-생성"></a> 4-1. 데이터셋 생성</h3>
<p><strong>&gt;&gt; Label</strong></p>
<p>우리는 이용자의 리뷰를 “긍정” / “부정” 두가지 부류로 나누고자 합니다. 하지만 이러한 이용자의 감성을 대표할 수 있는 “평가 점수” 변수는 1 ~ 5의 value를 가지고 있습니다. 따라서 <strong>"평가 점수"변수</strong> (rating: 1 ~ 5)를 <strong>이진 변수</strong> (긍정: 1, 부정:0)으<strong>로 변환</strong>해야 합니다.</p>
  <br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.sample(<span class="number">10</span>)</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>951</th>
      <td>3</td>
      <td>나는 그것이 수영장을 가지고 있기 때문에 여기에서 예약했다. 그러나 수영장에 물이 ...</td>
    </tr>
    <tr>
      <th>47</th>
      <td>4</td>
      <td>시설은 좀 오래 되었지만 동문시장, 서문시장 도보 10분거리이고 공항에서도 가깝습니...</td>
    </tr>
    <tr>
      <th>574</th>
      <td>4</td>
      <td>호스트는 아주 친절하고 도움이 되었습니다. 그는 우리를 픽업해서 근처에 있는 동안 ...</td>
    </tr>
    <tr>
      <th>637</th>
      <td>4</td>
      <td>제주시에 있는 호텔로 깔끔한 편이었고 나름 전망도 괜찮았습니다. 주차장은 주차타워에...</td>
    </tr>
    <tr>
      <th>113</th>
      <td>4</td>
      <td>루프탑 바와 수영장이 있어서 사용가능하고 깨끗하고 친절하셔서 좋은곳이었습니다. 다만...</td>
    </tr>
    <tr>
      <th>416</th>
      <td>3</td>
      <td>다양한 음식과 음료를 걸어갈 수 있는 곳. 저녁 식사는 늦은 밤에 음식을 찾는 문제...</td>
    </tr>
    <tr>
      <th>671</th>
      <td>2</td>
      <td>리뷰보고 기대했는데 호텔이라기 보단 모텔이나 펜션 느낌이네요 생긴지 얼마 안된걸로 ...</td>
    </tr>
    <tr>
      <th>235</th>
      <td>5</td>
      <td>위치가 바로 해변 근처라, 룸에서 보이는 뷰가 너무 좋습니다. 세화해변 자체가 조용...</td>
    </tr>
    <tr>
      <th>875</th>
      <td>3</td>
      <td>Jeju 섬에서 4 일째되는 주제와 같이 Jeju 공항에서 터치 다운 이후로 이동 ...</td>
    </tr>
    <tr>
      <th>254</th>
      <td>4</td>
      <td>출장 때문에 제주도에 오게 됐습니다. 가성비가 좋고 전체적으로 깨끗했습니다. 난방이...</td>
    </tr>
  </tbody>
</table>
</div>
  <br>
<p>리뷰 내용와 평점을 살펴보면, 4 ~ 5점 리뷰는 대부분 긍정적이었지만, 1 ~ 3점 리뷰에서는 부정적인 평가가 좀 많이 보였습니다.<br>
그래서 4점, 5점인 리뷰는 "긍정적인 리뷰"로 분류하여 1를 부여하고, 1 ~ 3점 리뷰는 "부정적인 리뷰"로 분류하여 0을 부여하도록 할게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'rating'</span>].hist()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x154887d0b08&gt;
</code></pre>
<p><img src="/images/E-Python-TextMining-2/output_113_1.png" alt="png"></p>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rating_to_label</span><span class="params">(rating)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> rating &gt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">df[<span class="string">'y'</span>] = df[<span class="string">'rating'</span>].apply(<span class="keyword">lambda</span> x: rating_to_label(x))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure>
<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
</style>
<table>
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>text</th>
      <th>y</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>4</td>
      <td>여행에 집중할수 있게 편안한 휴식을 제공하는 호텔이었습니다. 위치선정 또한 적당한 ...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>2일 이상 연박시 침대, 이불, 베게등 침구류 교체 및 어메니티 보강이 필요해 보입...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4</td>
      <td>지인에소개로온 호텔  깨끗하고 좋은거같아요 처음에는 없는게 많아 많이  당황했는데 ...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>5</td>
      <td>방에 딱 들어서자마자 눈이 휘둥그레질정도로 이렇게 넓은 호텔 처음 와본 것 같아요!...</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>저녁에 맥주한잔 하는게 좋아서 렌트 안하고 뚜벅이 하기로 했는데 호텔 바로 앞에 버...</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">"y"</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    726
0    275
Name: y, dtype: int64
</code></pre>
  <br>
<p><strong>&gt;&gt; Feature</strong></p>
<p>모델의 <strong>Feature 변수는</strong> 리뷰에서 추출된 형태소와 그들의 중요도를 나타나는 <strong>tf_idf_vect</strong>로 대체하겠습니다.</p>
  <br>
<h3 id="4-2-training-set-test-set-나누기"><a class="markdownIt-Anchor" href="#4-2-training-set-test-set-나누기"></a> 4-2. Training set / Test set 나누기</h3>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">x = tf_idf_vect</span><br><span class="line">y = df[<span class="string">'y'</span>]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = <span class="number">0.3</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((700, 3599), (700,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((301, 3599), (301,))
</code></pre>
 <br> 
<h3 id="4-3-모델-학습"><a class="markdownIt-Anchor" href="#4-3-모델-학습"></a> 4-3. 모델 학습</h3>
<p><strong>&gt;&gt; Logistic Regression 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score, precision_score, recall_score, f1_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># fit in training set</span></span><br><span class="line">lr = LogisticRegression(random_state = <span class="number">0</span>)</span><br><span class="line">lr.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predict in test set</span></span><br><span class="line">y_pred = lr.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 분류 결과 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># classification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'accuracy: %.2f'</span> % accuracy_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'precision: %.2f'</span> % precision_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'recall: %.2f'</span> % recall_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'F1: %.2f'</span> % f1_score(y_test, y_pred))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 0.72
precision: 0.72
recall: 1.00
F1: 0.84
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"></span><br><span class="line">confu = confusion_matrix(y_true = y_test, y_pred = y_pred)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-2/output_132_0.png" alt="png"></p>
<br>
<p>모델 평가결과를 살펴보면, 모델이 지나치게 긍정(“1”)으로만 예측하는 경향이 있습니다. 따라서 긍정 리뷰를 잘 예측하지만, 부정 리뷰에 대한 예측 정확도가 매우 낮습니다. 이는 샘플데이터의 클래스 불균형으로 인한 문제로 보입니다.<br>
따라서, <strong>클래스 불균형 조정</strong>을 진행하겠습니다.</p>
 <br> 
<h3 id="4-4-샘플링-재조정"><a class="markdownIt-Anchor" href="#4-4-샘플링-재조정"></a> 4-4. 샘플링 재조정</h3>
<p><strong>&gt;&gt; 1:1 Sampling</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">df[<span class="string">'y'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure>
<pre><code>1    726
0    275
Name: y, dtype: int64
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">positive_random_idx = df[df[<span class="string">'y'</span>]==<span class="number">1</span>].sample(<span class="number">275</span>, random_state=<span class="number">12</span>).index.tolist()</span><br><span class="line">negative_random_idx = df[df[<span class="string">'y'</span>]==<span class="number">0</span>].sample(<span class="number">275</span>, random_state=<span class="number">12</span>).index.tolist()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">random_idx = positive_random_idx + negative_random_idx</span><br><span class="line">x = tf_idf_vect[random_idx]</span><br><span class="line">y = df[<span class="string">'y'</span>][random_idx]</span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((412, 3599), (412,))
</code></pre>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">x_test.shape, y_test.shape</span><br></pre></td></tr></tbody></table></figure>
<pre><code>((138, 3599), (138,))
</code></pre>
<br>  
<h3 id="4-5-모델-재학습"><a class="markdownIt-Anchor" href="#4-5-모델-재학습"></a> 4-5. 모델 재학습</h3>
<p><strong>&gt;&gt; 모델 학습</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr2 = LogisticRegression(random_state = <span class="number">0</span>)</span><br><span class="line">lr2.fit(x_train, y_train)</span><br><span class="line">y_pred = lr2.predict(x_test)</span><br></pre></td></tr></tbody></table></figure>
  <br>
<p><strong>&gt;&gt; 분류 결과 평가</strong></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># classification result for test set</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'accuracy: %.2f'</span> % accuracy_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'precision: %.2f'</span> % precision_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'recall: %.2f'</span> % recall_score(y_test, y_pred))</span><br><span class="line">print(<span class="string">'F1: %.2f'</span> % f1_score(y_test, y_pred))</span><br></pre></td></tr></tbody></table></figure>
<pre><code>accuracy: 0.72
precision: 0.70
recall: 0.74
F1: 0.72
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># confusion matrix</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"></span><br><span class="line">confu = confusion_matrix(y_true = y_test, y_pred = y_pred)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>, <span class="number">3</span>))</span><br><span class="line">sns.heatmap(confu, annot=<span class="literal">True</span>, annot_kws={<span class="string">'size'</span>:<span class="number">15</span>}, cmap=<span class="string">'OrRd'</span>, fmt=<span class="string">'.10g'</span>)</span><br><span class="line">plt.title(<span class="string">'Confusion Matrix'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/E-Python-TextMining-2/output_149_0.png" alt="png"></p>
<p>이제 모델이 “긍정적인” 케이스와 “부정적인” 케이스를 모두 적당히 잘 맞춘 것을 확인할 수 있습니다.</p>
  <br>
  <br>
<h2 id="5-긍정-부정-키워드-분석"><a class="markdownIt-Anchor" href="#5-긍정-부정-키워드-분석"></a> <strong>5. 긍정 / 부정 키워드 분석</strong></h2>
<p>기계는 이처럼 리뷰 내용에 나타나는 사람의 감성을 구별할 수 있을 뿐만 아니라, 학습된 Logistic Regression 모델을 이용하여 긍/부정 키워드도 추출해낼 수 있습니다.</p>
<p>추출된 키워드를 통해서 이용자가 느끼는 제주호델의 장,단점을 파악할 수 있고, 이를 기반으로 앞으로 유지해야 할 좋은 서비스와 개선이 필요한 아쉬운 서비스에 대해서도 어느정도 판단할 수 있습니다.</p>
  <br>
<p>긍 / 부정 키워드를 추출하기 위해 먼저 Logistic Regression 모델에 각 단어의 coeficient를 시각화해보겠습니다.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">lr2.coef_</span><br></pre></td></tr></tbody></table></figure>
<pre><code>array([[ 0.28196772,  0.10796991, -0.04978601, ...,  0.        ,
        -0.18315162,  0.28434689]])
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># print logistic regression's coef</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">plt.bar(range(len(lr2.coef_[<span class="number">0</span>])), lr2.coef_[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>&lt;BarContainer object of 3599 artists&gt;
</code></pre>
<p><img src="/images/E-Python-TextMining-2/output_158_1.png" alt="png"></p>
<br>
<p>여기서 계수가 양인 경우는 단어가 긍정적인 영향을 미쳤다고 볼 수 있고, 반면에, 음인 경우는 부정적인 영향을 미쳤다고 볼 수 있습니다.</p>
<p>이 계수들을 크기순으로 정렬하면, 긍정 / 부정 키워드를 출력하는 지표가 되겠습니다.</p>
  <br>
<p>먼저 "긍정 키워드"와 "부정 키워드"의 Top 5를 각각 출력해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">True</span>)[:<span class="number">5</span>])</span><br><span class="line">print(sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">True</span>)[<span class="number">-5</span>:])</span><br><span class="line"><span class="comment"># enumerate: 인덱스 번호와 컬렉션의 원소를 tuple형태로 반환함</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>[(1.2644550507381787, 1217), (0.9079356150239053, 2400), (0.895609472071521, 1148), (0.8859075267474583, 2730), (0.8795111499693716, 43)]
[(-0.7201222787741572, 1310), (-0.7519681298547074, 3022), (-0.8672956005075485, 567), (-0.9190158099937462, 515), (-0.9945592515966041, 2143)]
</code></pre>
<p>이처럼 단어의 coeficient와 index가 출력이 됩니다.</p>
  <br>
<p>이제 전체 단어가 포함한 "긍정 키워드 리스트"와 "부정 키워드 리스트"를 정의하고 출력해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">coef_pos_index = sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">True</span>)</span><br><span class="line">coef_neg_index = sorted(((value, index) <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(lr2.coef_[<span class="number">0</span>])), reverse = <span class="literal">False</span>)</span><br><span class="line">coef_pos_index</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    [(1.2644550507381787, 1217),
     (0.9079356150239053, 2400),
     (0.895609472071521, 1148),
     (0.8859075267474583, 2730),
     (0.8795111499693716, 43),
     (0.8541915649753757, 26),
     (0.8362541212560809, 578),
     (0.7714811231976703, 2957),
     (0.7375280889735719, 1491),
     (0.7203390936359615, 956),
     (0.6503260268852225, 2977),
     (0.6488836121942877, 115),
     (0.6467914172687944, 910),
     (0.6264469987695738, 1159),
     (0.5943145305412955, 883),
     (0.5505354129422678, 2988),
     (0.5294632094678557, 692),
     (0.5240729254152497, 2455),
     (0.5207834696883535, 1922),
     (0.5153917648445299, 2361),
     (0.49372825531123943, 1215),
     (0.49360869707006777, 246),
     (0.4854919888814009, 680),
     (0.4854086392859413, 269),
     (0.4748702738145659, 686),
     (0.4703566749364605, 1194),
     (0.45896954031613635, 790),
     (0.45586600022584467, 2834),
     (0.45372800281293535, 19),
     (0.4500540795581468, 2779),
     (0.44412671542407905, 416),
     (0.4425720292652355, 1805),
     (0.4364684750426245, 263),
     (0.4308546124247834, 3267),
     (0.4255898116545533, 2797),
     (0.4212941284904679, 2680),
     (0.41423556597532674, 489),
     (0.4121691212201187, 826),
     (0.4118068110883225, 937),
     (0.402234791816506, 353),
     (0.39915216217204813, 136),
     (0.3906502087724938, 131),
     (0.38863745777148795, 2180),
     (0.38330015115324956, 322),
     (0.37909051494174656, 1027),
     (0.3776598665737952, 1926),
     (0.36980255314279886, 2760),
     (0.3609360208520378, 3034),
     (0.3601455791606223, 1342),
     (0.3511486012544648, 344),
     (0.35030155043520095, 3447),
     (0.34810767211689553, 2674),
     (0.3448646839750021, 3021),
     (0.34466834073677766, 2070),
     (0.3341929597049384, 1750),
     (0.3332295460784216, 2849),
     (0.3291725978477463, 3435),
     (0.3276653378330499, 2530),
     (0.3221942756247239, 1483),
     (0.3217689173991826, 3397),
     (0.32047891465181083, 2013),
     (0.3080484198419967, 3029),
     (0.3062772550220064, 939),
     (0.30478483149478314, 627),
     (0.30438930158469363, 2606),
     (0.3027703771200994, 3454),
     (0.2989615171043252, 4),
     (0.2960030540205178, 1991),
     (0.2941392017845358, 3347),
     (0.290078280630203, 3593),
     (0.28793362240859766, 1090),
     (0.2861006595602784, 3404),
     (0.28434689214226744, 3598),
     (0.2819677181770861, 0),
     (0.2818546705602182, 1809),
     (0.2796034993266096, 1440),
     (0.2783451949177126, 3410),
     (0.27700777474574007, 1078),
     (0.2764799249539472, 278),
     (0.2757845449039994, 2074),
     (0.27449374217124756, 1697),
     (0.27211400542938347, 860),
     (0.26958773489776877, 276),
     (0.26894024258506205, 2642),
     (0.2679652653240931, 451),
     (0.26659353628773785, 2605),
     (0.2642541001710917, 1073),
     (0.2602933330998526, 71),
     (0.2601225988013697, 2727),
     (0.25898398896658026, 395),
     (0.25523176043119644, 109),
     (0.25400402242362763, 1120),
     (0.25346771390562256, 2311),
     (0.2525923917872476, 1760),
     (0.252483390540294, 3549),
     (0.25243556295192593, 44),
     (0.2523758090983611, 410),
     (0.25096842816549325, 3286),
     (0.25030837769014164, 3013),
     (0.2478963860060586, 3064),
     (0.24711051623367455, 1700),
     (0.24639626607741794, 532),
     (0.24423718622136711, 2339),
     (0.24419509835066824, 817),
     (0.24268824175871553, 1646),
     (0.24020390663531643, 847),
     (0.23613168717319782, 1277),
     (0.2356739894439279, 3547),
     (0.23333780634901968, 1966),
     (0.2331264370168398, 1350),
     (0.23268102047017378, 769),
     (0.23262817998676638, 3166),
     (0.23066409348184064, 1384),
     (0.23010041799635683, 210),
     (0.22586220283294378, 1885),
     (0.22523607425083558, 260),
     (0.2222412951070305, 281),
     (0.22091253142370337, 68),
     (0.21922527479299828, 1147),
     (0.21868875489181047, 1465),
     (0.21807039000574996, 3299),
     (0.21807039000574996, 172),
     (0.2177926484819077, 3223),
     (0.21751093007081115, 2634),
     (0.2163036212275728, 1171),
     (0.2162361260915301, 1671),
     (0.21591443393848506, 1552),
     (0.21530945315363187, 2038),
     (0.21450361502341533, 385),
     (0.2130004456328932, 2018),
     (0.21283349877228466, 2752),
     (0.21171382727695384, 1523),
     (0.21156875238749653, 2906),
     (0.21149936066156635, 3273),
     (0.2107420524603348, 3062),
     (0.2089604714261007, 2167),
     (0.20857560294926117, 705),
     (0.20849174650373709, 751),
     (0.2084323782944626, 2374),
     (0.2083850088267226, 1421),
     (0.2076716418538995, 1823),
     (0.20734493904041118, 2837),
     (0.20719074367652907, 1455),
     (0.20632098174995006, 2421),
     (0.20497429689912247, 2866),
     (0.20497429689912247, 1584),
     (0.20460844733702388, 1309),
     (0.20460135810671237, 1721),
     (0.2026617971957564, 192),
     (0.2021896255723423, 574),
     (0.20076231770123473, 1122),
     (0.20007368092656116, 981),
     (0.1994615301156886, 2722),
     (0.1987204932053518, 1895),
     (0.1982476502888129, 1622),
     (0.19668791935266033, 1816),
     (0.19602558824910057, 767),
     (0.195808499032481, 581),
     (0.1954442410972148, 2551),
     (0.19543920090503364, 2244),
     (0.19535829875348126, 1249),
     (0.19513316286959848, 2451),
     (0.1932943416840944, 2561),
     (0.19241691136362254, 1278),
     (0.19188249800399276, 221),
     (0.19059569732190523, 341),
     (0.18931948208829832, 2965),
     (0.18863137833398097, 2225),
     (0.188233216963001, 1067),
     (0.18823116402871, 1510),
     (0.18591329718666444, 2556),
     (0.1858513716606046, 1853),
     (0.18475568229990585, 1553),
     (0.1842332027380814, 15),
     (0.18385370069092052, 490),
     (0.183698940971588, 646),
     (0.18352145151744345, 2709),
     (0.18179588928699872, 1821),
     (0.18141472902160485, 356),
     (0.18101860699904043, 3325),
     (0.17968533410962978, 1517),
     (0.17894437469027485, 1441),
     (0.1785803255429378, 203),
     (0.17749094181502081, 1291),
     (0.17745689661710926, 423),
     (0.17691919755039834, 748),
     (0.17681729295382825, 629),
     (0.17650785942100156, 2042),
     (0.17521436890986974, 2822),
     (0.17420775259072946, 3525),
     (0.17407554594971275, 1376),
     (0.17390397512207328, 1508),
     (0.17390397512207328, 584),
     (0.1735238781146927, 509),
     (0.1729437410073151, 2188),
     (0.17166919021535662, 2761),
     (0.1711332476240707, 1505),
     (0.17079932615633314, 300),
     (0.1706243328180457, 795),
     (0.16989041829422863, 1577),
     (0.16965179412684628, 1028),
     (0.16919925883678436, 2705),
     (0.1687459695340302, 667),
     (0.16815742142636886, 1625),
     (0.1676232210748594, 2755),
     (0.16757499046872387, 2274),
     (0.16736563458006257, 1485),
     (0.16735261847037675, 2476),
     (0.16642204341549788, 2035),
     (0.16595006133727253, 760),
     (0.16475334154520693, 1208),
     (0.1646740028459598, 1937),
     (0.16464847364532936, 690),
     (0.1636808432150993, 3274),
     (0.16348761826549618, 1676),
     (0.16301112079103763, 2399),
     (0.1629849886257, 3591),
     (0.1629118596848168, 3186),
     (0.1626689828520234, 3210),
     (0.16142787916860177, 1598),
     (0.1613522761276804, 3417),
     (0.1603451229219545, 3116),
     (0.1599203302911822, 2487),
     (0.15983057428397826, 589),
     (0.1586108439130326, 2331),
     (0.15849368672169892, 1647),
     (0.15826740340037068, 625),
     (0.15743176994516933, 3490),
     (0.1571722075528101, 3567),
     (0.15712518230005013, 3027),
     (0.15687460543471862, 3428),
     (0.15651108129304298, 1307),
     (0.15600166572103646, 1961),
     (0.15583305075516699, 106),
     (0.15577941820129187, 1617),
     (0.155766902206714, 3017),
     (0.15491622812261568, 382),
     (0.15485968714815496, 1528),
     (0.1545939535424059, 259),
     (0.15411614699130288, 684),
     (0.1535726280760412, 3293),
     (0.1535726280760412, 2892),
     (0.15341384775377642, 2726),
     (0.15325471176173253, 1533),
     (0.1529359648993235, 1983),
     (0.1523311300168501, 1432),
     (0.15231484413753682, 1030),
     (0.15231397485990963, 556),
     (0.15139635636201898, 2078),
     (0.1511214654825413, 1312),
     (0.15101670800091527, 2998),
     (0.14887052306393284, 3096),
     (0.14887052306393284, 1457),
     (0.1485864638932176, 2600),
     (0.14818094009147514, 2223),
     (0.14810636314705725, 1859),
     (0.14763883239448744, 1738),
     (0.14724688251552864, 2328),
     (0.1471683691325973, 1841),
     (0.14705200941823965, 2268),
     (0.14704245351541728, 660),
     (0.14646359476664114, 3297),
     (0.14621204479849256, 2226),
     (0.14615889360176976, 3350),
     (0.14576749911151465, 2851),
     (0.14545079981853645, 2275),
     (0.1447568799500706, 2798),
     (0.1444313715254008, 2022),
     (0.1444180222221931, 1654),
     (0.1444180222221931, 1548),
     (0.14434325571263137, 2445),
     (0.14412764469019354, 1396),
     (0.1439309933360322, 3220),
     (0.14364997884743677, 3272),
     (0.14359122893612475, 1814),
     (0.14339034972990414, 2983),
     (0.14305710787294673, 1085),
     (0.14276222540097244, 348),
     (0.14269270587505128, 996),
     (0.14200348649786682, 3275),
     (0.14175159317612532, 3189),
     (0.14173146008479248, 714),
     (0.14095242066301328, 306),
     (0.14092668743912232, 2678),
     (0.14086483039942074, 570),
     (0.14061627821721584, 3414),
     (0.14047941175558679, 387),
     (0.1404004427633594, 3476),
     (0.1404004427633594, 1112),
     (0.13978500519793755, 2847),
     (0.13978500519793755, 780),
     (0.13964073789423023, 665),
     (0.13934374266681135, 3500),
     (0.13829992453370865, 3161),
     (0.13817992752504213, 1768),
     (0.13745049759016625, 3511),
     (0.13665192952568253, 757),
     (0.13642162742786484, 1351),
     (0.1359845468368403, 271),
     (0.13597476793796576, 534),
     (0.135852916769958, 2497),
     (0.13574633450491594, 3009),
     (0.13574633450491594, 2299),
     (0.13574633450491594, 1296),
     (0.13574633450491594, 1188),
     (0.13549762485752148, 3571),
     (0.13549762485752148, 3391),
     (0.13549762485752148, 2640),
     (0.13541454362686076, 1332),
     (0.13519719011184664, 238),
     (0.13515286340239754, 2047),
     (0.13500163846144472, 3152),
     (0.1347989845038155, 2353),
     (0.13477156350779324, 1527),
     (0.13474112790096265, 1889),
     (0.13474112790096265, 1196),
     (0.13474112790096265, 462),
     (0.13469292571022845, 11),
     (0.13458956235978478, 924),
     (0.13442001799674802, 2069),
     (0.1342034640274507, 2869),
     (0.1341559282111133, 2145),
     (0.13415237816410766, 3471),
     (0.13415237816410766, 3406),
     (0.13388090777365988, 94),
     (0.13342324387367194, 2971),
     (0.1332930603370377, 3432),
     (0.1330404844897235, 1506),
     (0.13293873503860765, 3087),
     (0.13272932864456133, 3073),
     (0.13232986210850453, 2246),
     (0.13218242328559932, 2082),
     (0.13197846164836427, 3285),
     (0.13197846164836427, 2297),
     (0.13197846164836427, 1741),
     (0.13197846164836427, 69),
     (0.13179675529668713, 1549),
     (0.1316814762162865, 3441),
     (0.13154581005598, 3192),
     (0.1314192595003537, 1386),
     (0.13129169059042645, 969),
     (0.1311653774611966, 244),
     (0.13071289286611526, 3003),
     (0.13067314069850974, 697),
     (0.12989273592089953, 466),
     (0.1297746134602387, 411),
     (0.12976187780923948, 39),
     (0.12975779444471916, 3176),
     (0.12975779444471916, 3066),
     (0.1296539223346817, 3169),
     (0.1295761221334622, 2132),
     (0.12915915165160174, 3585),
     (0.12912049655247929, 3475),
     (0.12912049655247929, 455),
     (0.12897380261630323, 1053),
     (0.12884028806560763, 2910),
     (0.1283431735744972, 2344),
     (0.1283431735744972, 1542),
     (0.12780627572336126, 2207),
     (0.12780627572336126, 531),
     (0.1277445628861703, 2975),
     (0.12741425172305826, 669),
     (0.1268676275287745, 424),
     (0.12600280097170596, 2053),
     (0.1255687931546876, 1578),
     (0.1251082717170878, 3287),
     (0.12501636694175655, 3082),
     (0.12485375424445369, 988),
     (0.12485077138187695, 1247),
     (0.12477317035474626, 1638),
     (0.12470562190989118, 1234),
     (0.12418537178635555, 3201),
     (0.12412494478481371, 1572),
     (0.12356427400475413, 720),
     (0.12346465010011236, 3190),
     (0.1232984083336477, 3384),
     (0.12290996269246392, 2930),
     (0.12272802616213961, 3448),
     (0.12252951158801757, 73),
     (0.12243269952395211, 3105),
     (0.12240812373820147, 2735),
     (0.12169970934221791, 2781),
     (0.12150853668051385, 1722),
     (0.12148978639712985, 1301),
     (0.12147421457137794, 2320),
     (0.12147421457137794, 2289),
     (0.12135904501371637, 3339),
     (0.12135904501371637, 1602),
     (0.12085540050886351, 3206),
     (0.12085540050886351, 2067),
     (0.12085540050886351, 1282),
     (0.12085540050886351, 1170),
     (0.12085540050886351, 199),
     (0.12073634202256898, 2460),
     (0.12051291677661294, 2250),
     (0.12051291677661294, 730),
     (0.12036501072581905, 3263),
     (0.12036501072581905, 373),
     (0.11982407529162177, 74),
     (0.11941421355306232, 2814),
     (0.11941421355306232, 2193),
     (0.11909411357560733, 2028),
     (0.11903875427006184, 403),
     (0.11887476984730765, 1374),
     (0.11855602046019094, 912),
     (0.11826793727408907, 2664),
     (0.11797129443799506, 147),
     (0.11792307582322151, 1752),
     (0.11792307582322151, 518),
     (0.1177499125052935, 1838),
     (0.11735274081083348, 2526),
     (0.11728847189963591, 1299),
     (0.11682555059780918, 702),
     (0.11662484295496746, 3453),
     (0.11615131711727657, 777),
     (0.11608095184078544, 771),
     (0.11598871515918448, 2677),
     (0.11589077346213462, 1341),
     (0.11572533411469992, 2492),
     (0.11567709862499206, 2587),
     (0.11567709862499206, 2077),
     (0.11542281429727001, 2221),
     (0.11525735836070924, 3389),
     (0.11501634646006889, 2886),
     (0.11501634646006889, 835),
     (0.11449108387629879, 267),
     (0.11419455143266674, 41),
     (0.11410478259093633, 2499),
     (0.11410478259093633, 636),
     (0.11391082531008434, 1939),
     (0.11379525876290054, 1779),
     (0.11369189505531267, 3279),
     (0.11359623354805377, 3362),
     (0.11328311707861126, 1626),
     (0.11309515954317759, 2033),
     (0.11309203979609482, 1163),
     (0.11306723080679525, 446),
     (0.11300787365565511, 88),
     (0.11281954183130295, 2799),
     (0.1125643845359886, 359),
     (0.1125643845359886, 87),
     (0.11236486622722328, 1599),
     (0.11236486622722328, 1462),
     (0.11202792916061027, 1320),
     (0.11168083926782998, 2088),
     (0.1116425153114436, 801),
     (0.11160861926991839, 2298),
     (0.11095938208098642, 304),
     (0.11091238300534989, 773),
     (0.1100077175343078, 2162),
     (0.10976564909688623, 1790),
     (0.10961263739649914, 258),
     (0.10941413976516044, 3488),
     (0.10941413976516044, 2819),
     (0.10941413976516044, 1828),
     (0.10917777932688458, 723),
     (0.10864303256976575, 747),
     (0.10864303256976575, 148),
     (0.10852304491119706, 1106),
     (0.10844777870744055, 1289),
     (0.10844777870744055, 619),
     (0.10832336961288917, 2692),
     (0.10832336961288917, 1454),
     (0.10830603618528553, 84),
     (0.10796991064699014, 1),
     (0.10795721696924253, 2315),
     (0.10795721696924253, 425),
     (0.1077710568146692, 3317),
     (0.1077710568146692, 2663),
     (0.10769380388975194, 2008),
     (0.10720615786237517, 583),
     (0.10673796206207481, 888),
     (0.10671454696616327, 601),
     (0.10656205646300153, 201),
     (0.1064891137904478, 1554),
     (0.10637660107629578, 1759),
     (0.10634735402569995, 3408),
     (0.10626212376589807, 2386),
     (0.10623995311965392, 3319),
     (0.10622168812753784, 333),
     (0.10615533943965197, 772),
     (0.10595924232583608, 337),
     (0.10595924232583608, 272),
     (0.10508229441497294, 3028),
     (0.10485989916431773, 2462),
     (0.10473698952461245, 3086),
     (0.10473698952461245, 434),
     (0.10473698952461245, 381),
     (0.10461042411497755, 3129),
     (0.10461042411497755, 1233),
     (0.10461042411497755, 764),
     (0.10461042411497755, 79),
     (0.10445117600612656, 3513),
     (0.10445117600612656, 3143),
     (0.10445117600612656, 401),
     (0.1041925044133613, 1207),
     (0.10388289797906243, 3088),
     (0.10359537183826453, 2766),
     (0.10359537183826453, 822),
     (0.10357097224199376, 3528),
     (0.10298171781942682, 3460),
     (0.10261708591617978, 527),
     (0.10237985140859761, 1290),
     (0.10223721967543753, 863),
     (0.10222967216366273, 582),
     (0.10189163932285969, 903),
     (0.10174059857006298, 31),
     (0.1015489083625263, 696),
     (0.10152723059467353, 1012),
     (0.10132218984016486, 2342),
     (0.10132218984016486, 1914),
     (0.10132218984016486, 1568),
     (0.10132218984016486, 562),
     (0.10132218984016486, 257),
     (0.10132218984016486, 227),
     (0.10132218984016486, 169),
     (0.10132218984016486, 5),
     (0.10129687975732969, 2385),
     (0.10126776819935551, 3117),
     (0.10063103908292556, 284),
     (0.10055954160111301, 3081),
     (0.10031435374070032, 1260),
     (0.10028094106951953, 1317),
     (0.10027605850365232, 3072),
     (0.1000059209109059, 2336),
     (0.1000059209109059, 479),
     (0.09995417863737927, 1670),
     (0.09946866203075326, 299),
     (0.09937460223662734, 1955),
     (0.09937460223662734, 355),
     (0.0991931372321024, 3367),
     (0.0991931372321024, 3052),
     (0.0991931372321024, 2987),
     (0.0991931372321024, 614),
     (0.09885234039929348, 1496),
     (0.0985825853170792, 2753),
     (0.09833844719113422, 3349),
     (0.09833844719113422, 2118),
     (0.09828284940929058, 900),
     (0.09826909686300346, 2262),
     (0.09826909686300346, 1765),
     (0.09826909686300346, 904),
     (0.09826909686300346, 652),
     (0.09820798725090112, 2536),
     (0.09820798725090112, 1967),
     (0.0979795780346747, 2907),
     (0.09782691886062657, 377),
     (0.09760724210433858, 3516),
     (0.09755885308766699, 3164),
     (0.09755885308766699, 683),
     (0.09730186511202356, 3329),
     (0.09730186511202356, 1733),
     (0.09730186511202356, 1226),
     (0.097102913934461, 2625),
     (0.09610978450473183, 2087),
     (0.09582399417186592, 1439),
     (0.09577717071956568, 47),
     (0.09574004674208489, 2532),
     (0.09567949353604623, 153),
     (0.09563595118779827, 1248),
     (0.09563595118779827, 800),
     (0.0955218528925641, 2265),
     (0.0954330687710674, 1715),
     (0.09490960244197376, 3079),
     (0.09479895154722345, 3167),
     (0.09479895154722345, 2182),
     (0.09464204684604893, 2919),
     (0.09464204684604893, 1007),
     (0.09464204684604893, 421),
     (0.0945793543479756, 3346),
     (0.0945793543479756, 3214),
     (0.09456116933710224, 1829),
     (0.09452473946342346, 736),
     (0.09441875395888008, 3102),
     (0.09441875395888008, 1541),
     (0.09418492749174653, 52),
     (0.0939222882360469, 3558),
     (0.0939222882360469, 3419),
     (0.0939222882360469, 2608),
     (0.0939222882360469, 2598),
     (0.09392068680284914, 3344),
     (0.09392068680284914, 2173),
     (0.09392068680284914, 1138),
     (0.09392068680284914, 461),
     (0.09392068680284914, 34),
     (0.09379123891116847, 2584),
     (0.09353081179807116, 3259),
     (0.09353081179807116, 1302),
     (0.09353081179807116, 293),
     (0.09309370020530645, 2639),
     (0.09309370020530645, 2294),
     (0.09309370020530645, 2083),
     (0.09309370020530645, 1944),
     (0.09309370020530645, 162),
     (0.09298771310954623, 741),
     (0.09298771310954623, 140),
     (0.09292587512205373, 1929),
     (0.09289423937435062, 3561),
     (0.09274784637141024, 3307),
     (0.09274784637141024, 2126),
     (0.09274784637141024, 2025),
     (0.09274784637141024, 1418),
     (0.09254637783999758, 217),
     (0.09226460305753335, 3403),
     (0.09226460305753335, 1687),
     (0.09226460305753335, 1592),
     (0.09192383607443329, 3315),
     (0.09192383607443329, 875),
     (0.09183495854900056, 2985),
     (0.09183495854900056, 1596),
     (0.09173493202889069, 1770),
     (0.09173493202889069, 431),
     (0.09173143027976542, 2876),
     (0.09113344147288725, 3120),
     (0.09060526255265101, 3381),
     (0.09060526255265101, 2287),
     (0.09060526255265101, 1836),
     (0.09060526255265101, 1769),
     (0.09050760723810075, 326),
     (0.08995529378430658, 340),
     (0.08987429575682436, 1969),
     (0.08982977958803778, 1812),
     (0.08974209619577075, 838),
     (0.08963253567327513, 2169),
     (0.08951903081805541, 2618),
     (0.08947267121555101, 989),
     (0.08926541208781298, 1369),
     (0.0890462273393359, 893),
     (0.0890462273393359, 482),
     (0.0888304568052451, 1118),
     (0.08864375178731801, 2759),
     (0.08862582335907176, 3128),
     (0.08856874594603148, 2408),
     (0.08847924280717331, 3541),
     (0.08847924280717331, 2706),
     (0.08845733589313011, 1614),
     (0.08843074951990057, 1330),
     (0.08827578191477906, 2529),
     (0.08827578191477906, 548),
     (0.08811593995641924, 2768),
     (0.08795612661377235, 1848),
     (0.0878632294425667, 3204),
     (0.0878632294425667, 2905),
     (0.0877915209166029, 2732),
     (0.08724002705412705, 3125),
     (0.08681879523440901, 472),
     (0.0867590941431764, 1371),
     (0.08591449282742145, 3413),
     (0.08591449282742145, 1793),
     (0.08591449282742145, 439),
     (0.08569361517932625, 2429),
     (0.08569361517932625, 1886),
     (0.08564019433508445, 2981),
     (0.08564019433508445, 2571),
     (0.08564019433508445, 1852),
     (0.08564019433508445, 145),
     (0.0855146046919488, 3001),
     (0.08482470727509915, 107),
     (0.08474214619355472, 291),
     (0.08474214619355472, 92),
     (0.08464630577025285, 1353),
     (0.08447795462677392, 83),
     (0.08442221636455624, 2373),
     (0.08435306298004447, 3302),
     (0.08435306298004447, 1842),
     (0.08435306298004447, 885),
     (0.08406143202879186, 961),
     (0.08374180878487095, 2901),
     (0.08352466261109656, 1451),
     (0.08248922005074939, 1131),
     (0.08238017336779274, 2415),
     (0.08216565036306289, 922),
     (0.08170778577083812, 503),
     (0.08139930660843568, 749),
     (0.0810873859250381, 2703),
     (0.08099924967644831, 3375),
     (0.08036733484765383, 103),
     (0.08024334048387935, 1346),
     (0.08024334048387935, 1055),
     (0.08024334048387935, 828),
     (0.07995951135307515, 2913),
     (0.07995254170536943, 3142),
     (0.07975739071961907, 1238),
     (0.07961368503404338, 3145),
     (0.07961368503404338, 1102),
     (0.0791011342722481, 2629),
     (0.07909734484039603, 375),
     (0.07903458017917456, 960),
     (0.07865148217479348, 1387),
     (0.0779646282219197, 3122),
     (0.0779646282219197, 350),
     (0.07794818207773628, 2696),
     (0.07791539520575948, 2197),
     (0.07791539520575948, 1425),
     (0.07791539520575948, 1410),
     (0.07791539520575948, 1270),
     (0.07791539520575948, 1209),
     (0.07791539520575948, 1108),
     (0.07777326253628294, 2052),
     (0.07777326253628294, 954),
     (0.07777326253628294, 812),
     (0.07776976305397286, 435),
     (0.0776760937385194, 3588),
     (0.07766249907323657, 1286),
     (0.0768120675986713, 979),
     (0.07633605683651937, 1618),
     (0.07610302341355955, 1345),
     (0.07610302341355955, 1329),
     (0.07610302341355955, 938),
     (0.07610302341355955, 754),
     (0.07610302341355955, 502),
     (0.07493632088882671, 1281),
     (0.07486036923106522, 3114),
     (0.07486036923106522, 759),
     (0.07479212341391864, 3109),
     (0.07479212341391864, 1125),
     (0.07479212341391864, 711),
     (0.07479212341391864, 445),
     (0.07479212341391864, 25),
     (0.0744210537557175, 3470),
     (0.0744210537557175, 1928),
     (0.0744210537557175, 1280),
     (0.0744210537557175, 1243),
     (0.0744210537557175, 1018),
     (0.0744210537557175, 708),
     (0.0740577155592499, 726),
     (0.07358418456629864, 1743),
     (0.07309840122961515, 1219),
     (0.07303416054815363, 252),
     (0.07271877218739466, 3241),
     (0.07184102679685105, 121),
     (0.07182717404842677, 587),
     (0.07177500880745105, 2964),
     (0.07127209654963827, 120),
     (0.07087579658806266, 1316),
     (0.07069880693740326, 339),
     (0.07068023149332683, 2306),
     (0.07068023149332683, 253),
     (0.07065433840741699, 1033),
     (0.07058992698239872, 3555),
     (0.07043170609309371, 360),
     (0.07023970587779339, 1004),
     (0.06996622272883518, 3203),
     (0.06996622272883518, 1585),
     (0.06996622272883518, 1581),
     (0.06943213017724599, 1461),
     (0.06931620630006176, 1538),
     (0.06923101778513037, 1918),
     (0.06921851239026898, 2146),
     (0.06914996226685433, 2312),
     (0.06911832282266693, 206),
     (0.06905411184938241, 2212),
     (0.06879868009883609, 1498),
     (0.06879341064374712, 3369),
     (0.06829991205551972, 485),
     (0.06793743237297642, 3094),
     (0.06793743237297642, 2568),
     (0.06793743237297642, 2509),
     (0.06793743237297642, 1624),
     (0.06793743237297642, 1311),
     (0.06793743237297642, 830),
     (0.06793743237297642, 193),
     (0.06771012152570943, 896),
     (0.06760842116575855, 3518),
     (0.06728576906303034, 3478),
     (0.06728576906303034, 2945),
     (0.06728576906303034, 2592),
     (0.06728576906303034, 2586),
     (0.06728576906303034, 1111),
     (0.06726031274341861, 2835),
     (0.0668936390304386, 3283),
     (0.06683941035275678, 1153),
     (0.06670561404578652, 3300),
     (0.06670561404578652, 2952),
     (0.06670561404578652, 2949),
     (0.06670561404578652, 2890),
     (0.06670561404578652, 2481),
     (0.06670561404578652, 1070),
     (0.06616432949033017, 3503),
     (0.0660445367892345, 3515),
     (0.06603516959037964, 3352),
     (0.06603516959037964, 1701),
     (0.06594330439800165, 3537),
     (0.06529883585157686, 3418),
     (0.06529883585157686, 2650),
     (0.06466761703140791, 2780),
     (0.06451756127861434, 2546),
     (0.06412036684718043, 906),
     (0.06406825327936377, 393),
     (0.06389147199964199, 1562),
     (0.06389147199964199, 547),
     (0.06296277600534345, 1898),
     (0.06295775824880319, 1832),
     (0.06295775824880319, 1144),
     (0.06273519650642477, 2108),
     (0.06257557985594793, 2438),
     (0.06250818347087828, 2543),
     (0.06237266652354673, 1818),
     (0.062097593396214186, 2744),
     (0.06179423738961337, 925),
     (0.06141211575679981, 2260),
     (0.060781144623716234, 3570),
     (0.06066322422717442, 2844),
     (0.060370008276426454, 3338),
     (0.06029861224248649, 2784),
     (0.06029861224248649, 1986),
     (0.06029861224248649, 1543),
     (0.06005526613023247, 897),
     (0.05947175378230543, 1763),
     (0.05909565017478048, 1849),
     (0.05909352311701952, 1352),
     (0.058961537911610754, 3510),
     (0.058961537911610754, 3055),
     (0.058961537911610754, 2737),
     (0.058961537911610754, 2292),
     (0.058961537911610754, 1475),
     (0.058958973694166104, 3589),
     (0.058958973694166104, 2651),
     (0.058958973694166104, 1731),
     (0.058958973694166104, 474),
     (0.05832232735424722, 484),
     (0.05776314858186377, 2356),
     (0.057539284349787875, 2724),
     (0.057539284349787875, 2716),
     (0.057539284349787875, 2272),
     (0.057539284349787875, 1980),
     (0.057539284349787875, 1713),
     (0.057539284349787875, 1604),
     (0.057539284349787875, 1449),
     (0.057539284349787875, 75),
     (0.057539284349787875, 61),
     (0.05679666092137163, 997),
     (0.05679666092137163, 580),
     (0.056729924333008365, 2637),
     (0.056729924333008365, 831),
     (0.05655015464811865, 487),
     (0.05652766823426947, 2030),
     (0.05640871242395038, 735),
     (0.05614386926874535, 758),
     (0.0559063955350394, 3184),
     (0.0559063955350394, 3031),
     (0.0559063955350394, 2944),
     (0.0559063955350394, 2647),
     (0.0559063955350394, 2528),
     (0.0559063955350394, 2261),
     (0.0559063955350394, 1269),
     (0.0559063955350394, 1109),
     (0.0559063955350394, 554),
     (0.055648783133438656, 1407),
     (0.055648783133438656, 586),
     (0.055646362986584645, 1466),
     (0.05516895684450839, 2793),
     (0.054882824548443114, 3173),
     (0.054882824548443114, 2982),
     (0.054882824548443114, 2845),
     (0.054882824548443114, 2542),
     (0.054882824548443114, 1756),
     (0.054882824548443114, 899),
     (0.054882824548443114, 681),
     (0.054882824548443114, 285),
     (0.05486846085587583, 3026),
     (0.05484348857927268, 3469),
     (0.05484348857927268, 3465),
     (0.05484348857927268, 2989),
     (0.05484348857927268, 2879),
     (0.05484348857927268, 2754),
     (0.05484348857927268, 2406),
     (0.05484348857927268, 1730),
     (0.05484348857927268, 1667),
     (0.05484348857927268, 1665),
     (0.05484348857927268, 1615),
     (0.05484348857927268, 1471),
     (0.05484348857927268, 1191),
     (0.05484348857927268, 1100),
     (0.05484348857927268, 1079),
     (0.05484348857927268, 851),
     (0.05484348857927268, 458),
     (0.054487189903820656, 2204),
     (0.05430643890657519, 138),
     (0.054058095179772864, 944),
     (0.054022724280419834, 3212),
     (0.05402202766157935, 1762),
     (0.0533750821753445, 1695),
     (0.05306742820929221, 2192),
     (0.05276529397122469, 2809),
     (0.05276529397122469, 2057),
     (0.05276529397122469, 1691),
     (0.0523101884772147, 1923),
     (0.05215992194245664, 1550),
     (0.052012698561421676, 2377),
     (0.052012698561421676, 1984),
     (0.052012698561421676, 1039),
     (0.052012698561421676, 149),
     (0.05179923233388806, 3394),
     (0.05179923233388806, 846),
     (0.051762106456659567, 2863),
     (0.051472967058906464, 1912),
     (0.051217574472353734, 2778),
     (0.05110058750877395, 2041),
     (0.050966072229566624, 1630),
     (0.05077445418126315, 3336),
     (0.05077445418126315, 2656),
     (0.05077445418126315, 2570),
     (0.05077445418126315, 2522),
     (0.05077445418126315, 2121),
     (0.05077445418126315, 2045),
     (0.05077445418126315, 2010),
     (0.05077445418126315, 1726),
     (0.05077445418126315, 1655),
     (0.05077445418126315, 1509),
     (0.05077445418126315, 1507),
     (0.05077445418126315, 732),
     (0.05077445418126315, 524),
     (0.05077445418126315, 422),
     (0.05077445418126315, 196),
     (0.05077445418126315, 171),
     (0.05077445418126315, 99),
     (0.050539089094784995, 100),
     (0.05053664694441642, 3568),
     (0.050492996404728846, 2961),
     (0.050036275129686114, 396),
     (0.05003297559110967, 2029),
     (0.04984891386860787, 917),
     (0.04961138883973778, 143),
     (0.04958598961322054, 3056),
     (0.049575831047697035, 1283),
     (0.048727246055628254, 2248),
     (0.04872402143683834, 1101),
     (0.047921690809483164, 1603),
     (0.047921690809483164, 1321),
     (0.047921690809483164, 1017),
     (0.04791436558471306, 2622),
     (0.04791436558471306, 1241),
     (0.04770759660795472, 717),
     (0.04694083335282966, 289),
     (0.04677698779883914, 2757),
     (0.04666642228091436, 2141),
     (0.04647288993080121, 2484),
     (0.04637599875831547, 2512),
     (0.045897622985651414, 139),
     (0.045799053702209366, 1344),
     (0.04570679344810075, 2147),
     (0.04516689835379344, 1172),
     (0.04492238369553648, 1149),
     (0.04452311366966795, 3051),
     (0.04452311366966795, 2743),
     (0.04452311366966795, 2535),
     (0.04452311366966795, 1784),
     (0.04452311366966795, 1780),
     (0.04452311366966795, 1511),
     (0.04452311366966795, 1245),
     (0.04452311366966795, 520),
     (0.04431291167953588, 3124),
     (0.04431291167953588, 2471),
     (0.04431291167953588, 2230),
     (0.04431291167953588, 1380),
     (0.04379233051095153, 3250),
     (0.04370894283540041, 2372),
     (0.04342726715205229, 477),
     (0.04339655458297072, 1349),
     (0.04289303347380985, 1420),
     (0.04209795683366029, 2573),
     (0.04202158194623495, 2401),
     (0.04202158194623495, 1294),
     (0.0419602893158302, 3107),
     (0.04182319015766572, 3536),
     (0.04182319015766572, 2839),
     (0.04182319015766572, 2765),
     (0.04182319015766572, 1597),
     (0.04182319015766572, 475),
     (0.04120970047603527, 2595),
     (0.04118433740575306, 2043),
     (0.0410712841055371, 3050),
     (0.04099650527849089, 1442),
     (0.04049252050189614, 1797),
     (0.04024671694278536, 1938),
     (0.040121670241939675, 3222),
     (0.040121670241939675, 2395),
     (0.040121670241939675, 1682),
     (0.040121670241939675, 1195),
     (0.040121670241939675, 844),
     (0.040121670241939675, 294),
     (0.040056704625578095, 1482),
     (0.03984593632828475, 2878),
     (0.03939272315558761, 3076),
     (0.0390809923939327, 405),
     (0.038398821000790784, 3545),
     (0.03814509952790994, 1161),
     (0.03801064136229472, 321),
     (0.03786743367501903, 468),
     (0.037566983103707936, 2969),
     (0.03725182003350967, 1723),
     (0.037238370858689175, 2767),
     (0.03696154627105317, 3205),
     (0.03679414699666566, 864),
     (0.036268027377411485, 2345),
     (0.035970320215902754, 3057),
     (0.034899356647054146, 3270),
     (0.03454974613444602, 2350),
     (0.034383816197631145, 2436),
     ...]
</pre>
</div>
 <br> 
<p>마지막으로 index를 단어로 변환하여 "긍정 키워드 리스트"와 "부정 키워드 리스트"의 Top 20 단어를 출력해볼게요.</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">invert_index_vectorizer = {v: k <span class="keyword">for</span> k, v <span class="keyword">in</span> vect.vocabulary_.items()}</span><br><span class="line">invert_index_vectorizer</span><br></pre></td></tr></tbody></table></figure>
<div style="height:300px; overflow:auto">
<pre>    {2866: '집중',
     3588: '휴식',
     2696: '제공',
     2311: '위치',
     1584: '선정',
     790: '또한',
     2927: '청소',
     2925: '청결',
     1527: '상태',
     2392: '이상',
     3022: '침대',
     2388: '이불',
     3021: '침구',
     299: '교체',
     2013: '어메니티',
     1296: '보강',
     1277: '베스트',
     2299: '웨스턴',
     3564: '회원',
     185: '경우',
     106: '객실',
     3009: '층수',
     2234: '요청',
     2606: '적극',
     1188: '반영',
     2837: '지인',
     1629: '소개',
     2910: '처음',
     611: '당황',
     1607: '세면',
     675: '도구',
     2555: '잠옷',
     3358: '필수',
     361: '그것',
     2673: '정도',
     578: '다음',
     2074: '여기',
     1171: '박만',
     2595: '저녁',
     981: '맥주',
     3414: '한잔',
     838: '렌트',
     791: '뚜벅',
     1159: '바로',
     1247: '버스',
     2676: '정류',
     697: '도착',
     24: '가방',
     2487: '일찍',
     2685: '정비',
     1225: '방이',
     2500: '입실',
     2038: '업그레이드',
     2849: '직원',
     2680: '정말',
     1148: '바다',
     2623: '전망',
     2636: '전일',
     3425: '함덕',
     624: '대명',
     3091: '콘도',
     1861: '실내',
     1384: '분위기',
     1659: '손님',
     40: '가장',
     1241: '배치',
     651: '대해',
     634: '대응',
     1889: '써비스',
     2730: '조식',
     1351: '부분',
     1838: '신경',
     1922: '아주',
     3208: '특급',
     3191: '트랜디',
     210: '고민',
     3593: '흔적',
     2082: '여름',
     1700: '수영장',
     1483: '사용',
     1297: '보고',
     2035: '엄마',
     2: '가격',
     627: '대비',
     2769: '주위',
     924: '마트',
     1826: '식당',
     1816: '시장',
     1217: '방문',
     2361: '의사',
     726: '동안',
     2695: '정해진',
     3580: '휘슬',
     269: '공항',
     1539: '생각',
     1809: '시설',
     1028: '모두',
     3017: '친절',
     1029: '모드',
     917: '마지막',
     900: '마무리',
     3156: '테라스',
     2612: '전경',
     2427: '인근',
     2583: '재래시장',
     1979: '야시장',
     2402: '이용도',
     2400: '이용',
     2488: '일차',
     3581: '휘슬락',
     2940: '체크',
     2761: '주변',
     2094: '여친',
     2975: '추억',
     26: '가성',
     2977: '추천',
     3575: '후회',
     2145: '예전',
     372: '그랜드',
     2605: '저희',
     1918: '아이',
     708: '돌잔치',
     581: '다정',
     3470: '했었더랬',
     2642: '전통',
     1004: '메종',
     387: '글래드',
     1563: '서비스',
     969: '매우',
     3428: '합리',
     635: '대의',
     1018: '명절',
     1721: '숙박',
     1928: '아티',
     1243: '백미',
     3061: '커피',
     1280: '베이커리',
     43: '가족',
     3342: '플러스',
     2816: '지금',
     2257: '우선',
     2664: '접근성',
     1671: '쇼핑',
     940: '만족도',
     2957: '최고',
     1078: '무엇',
     423: '기억',
     2251: '우리',
     2902: '찾기',
     300: '교통',
     2418: '이틀',
     2691: '정원',
     109: '거기',
     160: '겨울',
     3016: '친구',
     541: '놀러와',
     3185: '투숙',
     1981: '야외',
     1235: '방향',
     1976: '야간',
     2726: '조명',
     1723: '순간',
     638: '대접',
     1868: '실명',
     112: '거론',
     3337: '프론트',
     2378: '이름',
     1938: '안나',
     416: '기분',
     1037: '모습',
     2921: '첫날',
     1761: '스타트',
     576: '다시',
     1578: '선물',
     3032: '카운터',
     1939: '안내',
     777: '디너',
     438: '기회',
     1121: '미니바',
     1067: '무료',
     2959: '최근',
     281: '관광지',
     1719: '숙고',
     88: '강추',
     1977: '야경',
     2475: '일부러',
     2476: '일어나서',
     714: '동네',
     1168: '바퀴',
     990: '먹방',
     1843: '신라',
     3105: '퀄리티',
     1024: '모녀',
     2711: '제주시',
     2313: '위해',
     1586: '선택',
     2180: '오픈',
     2143: '예약',
     622: '대로',
     115: '거리',
     657: '더군다나',
     1627: '셔틀버스',
     2271: '운행',
     670: '데스크',
     2880: '차안',
     1374: '분도',
     2438: '인상',
     3201: '트윈',
     1489: '사이즈',
     939: '만족',
     1758: '스타',
     45: '가짓수',
     558: '느낌',
     3538: '화장실',
     505: '내부',
     2455: '인테리어',
     2859: '질적',
     2368: '이건',
     100: '개인',
     3005: '취향',
     321: '구비',
     273: '과일',
     480: '나이프',
     3295: '포크',
     1364: '부탁',
     2786: '준비',
     3305: '표방',
     1046: '모텔',
     165: '결론',
     3577: '훌륭',
     1799: '시간',
     1737: '슈페리어킹룸',
     3376: '하루',
     3570: '후기',
     2836: '지은지',
     2033: '얼마',
     136: '건물',
     1985: '약간',
     2318: '유럽',
     1760: '스타일',
     378: '그림',
     2715: '조각',
     1323: '복도',
     2633: '전시',
     2630: '전부',
     3039: '카펫',
     770: '등급',
     567: '다른',
     2394: '이서',
     2512: '자기',
     2722: '조금',
     2218: '외투',
     2206: '완전',
     2856: '진짜',
     1626: '셔틀',
     1127: '미리',
     1821: '시티',
     2162: '오름',
     570: '다만',
     680: '도로',
     39: '가인',
     276: '관계',
     2876: '차량',
     1638: '소리',
     574: '다소',
     1215: '방도',
     3273: '편의점',
     3027: '칫솔',
     709: '동계',
     3576: '훈련',
     795: '라마',
     2116: '연인',
     2641: '전체',
     1493: '사진',
     2920: '첨부',
     2064: '엘리베이터',
     1873: '실시간',
     1440: '비행기',
     3151: '택시',
     1128: '미만',
     2374: '이동',
     9: '가능',
     2961: '최상',
     2235: '욕실',
     1791: '슬리퍼',
     2304: '위생',
     2123: '염려',
     1590: '설날',
     788: '떡국',
     840: '려고',
     3495: '현장',
     167: '결재',
     3559: '황스',
     841: '려운',
     2789: '중국',
     932: '만두',
     2744: '종류',
     1293: '별로',
     316: '구만',
     996: '메뉴',
     603: '답변',
     2709: '제일',
     2779: '주차',
     131: '걱정',
     3423: '할아버지',
     1945: '안심',
     3067: '컨디션',
     1095: '문어',
     2909: '처리',
     3561: '회사',
     2988: '출장',
     1567: '서울',
     64: '간혹',
     2386: '이벤트',
     3460: '해주시',
     1344: '부대',
     3435: '항상',
     855: '롯데',
     1434: '비지니스',
     2097: '여행객',
     1664: '손색',
     2236: '욕조',
     175: '겸비',
     1459: '사계절',
     1715: '수풀',
     2794: '중문',
     3306: '표선등',
     2281: '원거리',
     2101: '여행지',
     1322: '복귀',
     1805: '시내',
     2323: '유명',
     2462: '일단',
     2781: '주차장',
     2844: '지하',
     246: '공간',
     2356: '응대',
     1097: '문의사항',
     1850: '신지',
     71: '감동',
     2106: '역시',
     2566: '장도',
     807: '락타',
     1550: '샤워',
     896: '마련',
     3089: '코인',
     1620: '세탁실',
     2167: '오션',
     994: '멀리',
     497: '남자친구',
     665: '덕분',
     2385: '이번',
     3331: '프런트',
     1239: '배정',
     2415: '이착륙',
     3120: '클리닝',
     382: '근무',
     1923: '아주머니',
     2436: '인사',
     3085: '코로나',
     1496: '사태',
     535: '노화',
     1286: '벽지',
     2756: '주름',
     2814: '지고',
     3133: '타일',
     4: '가구',
     3082: '코너',
     243: '곳곳이',
     279: '관광객',
     2449: '인지',
     1463: '사람',
     1369: '북적',
     2627: '전반',
     284: '관리',
     3274: '편이',
     3346: '피드백',
     3276: '편입',
     686: '도시',
     278: '관광',
     3214: '특화',
     2834: '지역',
     385: '근처',
     3034: '카페',
     6: '가기',
     221: '고유',
     3210: '특색',
     1768: '스테이',
     10: '가도',
     1759: '스타벅스',
     1263: '번화가',
     1924: '아침',
     3057: '커서',
     1224: '방음',
     988: '먹거리',
     588: '단점',
     797: '라면',
     2170: '오심',
     2411: '이중',
     3523: '혼자',
     157: '겐찮은듯',
     563: '다그',
     694: '도일',
     456: '께빵',
     2793: '중국인',
     3127: '타고',
     556: '눈앞',
     44: '가지',
     3598: '힐링',
     3354: '피트니스',
     3254: '패키지',
     1122: '미닫이',
     847: '로비',
     1421: '비롯',
     1030: '모든',
     52: '각종',
     1103: '물건',
     1926: '아침식사',
     1207: '밥맛',
     3349: '피아노',
     2118: '연주',
     867: '룸타입',
     3250: '패밀리',
     121: '거실',
     3412: '한실',
     1562: '서부',
     1690: '수산시장',
     1534: '새벽',
     182: '경매',
     304: '구경',
     2972: '추가',
     2022: '어차피',
     3496: '현재',
     1090: '묵고',
     2453: '인터넷',
     2840: '지정',
     1952: '안해',
     3330: '프런터',
     1096: '문의',
     2135: '영화',
     1810: '시스템',
     3219: '티브이',
     2903: '채널',
     1020: '몇개',
     3092: '콘센트',
     3341: '플러그',
     2201: '와이프',
     2995: '충전',
     168: '결정',
     594: '달라',
     190: '경험',
     2579: '장점',
     2439: '인생',
     2966: '최악',
     2797: '중심',
     1153: '바닷가',
     1413: '비교',
     3275: '편임',
     3408: '한번',
     2146: '예정',
     3585: '휴가',
     1750: '스위트룸',
     2322: '유리창',
     2312: '위트',
     3050: '캠핑',
     3160: '테이블',
     1621: '세트',
     3161: '텐트',
     2054: '에어컨',
     2543: '작은방',
     975: '매트',
     2520: '자리',
     3142: '탑동',
     263: '공원',
     3338: '프리',
     923: '마켓',
     259: '공연',
     971: '매일',
     1833: '식사',
     282: '관덕정',
     2682: '정문',
     684: '도보',
     1645: '소요',
     3458: '해장국',
     717: '동문',
     1560: '서문시장',
     1047: '목관',
     960: '맞은편',
     1792: '슬슬',
     1291: '별관',
     1330: '본관',
     68: '갈수',
     2965: '최신',
     377: '그린',
     3545: '환경',
     787: '때문',
     1292: '별도',
     641: '대중교통',
     317: '구매',
     1882: '심플',
     1438: '비품',
     3205: '트윈침대',
     1763: '스탠다드',
     548: '높이',
     3404: '한라산',
     525: '노곤',
     3152: '터미널',
     2189: '온돌룸',
     1608: '세면대',
     1114: '물이',
     3013: '치약',
     150: '것임',
     1545: '생수',
     3550: '환승',
     231: '곧바로',
     710: '동광양',
     2677: '정류장',
     1818: '시청',
     1771: '스텝',
     3502: '협소하',
     130: '거품',
     3131: '타월',
     3537: '화장',
     612: '대가',
     123: '거울',
     1670: '쇼파',
     2739: '조합',
     395: '금액',
     2780: '주차공간',
     267: '공터',
     3150: '태풍',
     104: '개층',
     2184: '오후',
     3409: '한시',
     1485: '사우나',
     1349: '부모님',
     3422: '할머니',
     1038: '모시',
     197: '계획',
     2464: '일로',
     1445: '빠듯해',
     2004: '어디',
     441: '길가',
     235: '골목길',
     2377: '이륙',
     2887: '착륙',
     1310: '보이',
     363: '그냥',
     2469: '일반',
     633: '대욕',
     3489: '헬스장',
     19: '가면',
     206: '고려',
     837: '렌터카',
     2496: '입구',
     1182: '반대쪽',
     3416: '한정',
     591: '단체',
     660: '더블',
     2708: '제외',
     2088: '여유',
     1183: '반대편',
     688: '도심',
     1387: '불구',
     1648: '소음',
     125: '거의',
     1609: '세명',
     3199: '트리플',
     2618: '전날',
     495: '남아',
     2534: '자체',
     610: '당일',
     2683: '정보',
     3468: '햇반',
     2580: '장조림',
     2637: '전자',
     831: '레인지',
     33: '가야',
     1610: '세미나',
     3400: '한국인',
     369: '그대로',
     469: '나름',
     2697: '제과점',
     2670: '정거장',
     1022: '모기',
     944: '만해',
     898: '마리',
     16: '가량',
     1222: '방안',
     2058: '에프킬라',
     1435: '비치',
     195: '계속',
     1456: '뿌리',
     2557: '잡고',
     2891: '찬장',
     2915: '천장',
     242: '곳곳',
     3008: '측은',
     1265: '벌레',
     414: '기본',
     2223: '요금',
     135: '건너편',
     1262: '번호',
     1538: '샐러드',
     2349: '음식',
     326: '구성',
     2629: '전복죽',
     2601: '저번',
     3464: '핸드폰',
     2996: '충전기',
     1400: '불편',
     1622: '센터',
     256: '공사',
     1720: '숙면',
     1061: '무난',
     528: '노력',
     2826: '지불',
     1430: '비용',
     845: '로맨틱',
     702: '독립',
     1368: '북유럽',
     2321: '유리',
     3059: '커튼',
     1145: '바깥',
     1595: '설치',
     1025: '모던',
     1418: '비데',
     3569: '효율',
     2451: '인치',
     1512: '삼성',
     927: '만끽',
     3270: '편안함',
     2091: '여정',
     1151: '바닥',
     1052: '목적',
     3060: '커플',
     464: '끼리',
     2852: '직진',
     2268: '운전',
     261: '공영',
     1962: '애기',
     1074: '무선인터넷',
     80: '갑자기',
     1568: '서전',
     3432: '항공',
     562: '다가',
     5: '가급',
     169: '결제',
     2342: '은방',
     1533: '상황',
     1914: '아시',
     227: '고트',
     2822: '지도',
     1614: '세심',
     257: '공시',
     1815: '시작',
     982: '맥주잔',
     3102: '쿠폰',
     2463: '일도',
     3108: '크기',
     864: '룸서비스',
     2690: '정신',
     3277: '평가',
     3272: '편의',
     2233: '요즘',
     2078: '여러',
     2848: '직언',
     1412: '블룸',
     1288: '변기',
     1115: '물질',
     1997: '얘기',
     1675: '수건',
     3548: '환불',
     2293: '월일',
     3313: '푸른',
     3223: '파도',
     2918: '철썩',
     3320: '풍경',
     1544: '생선회',
     2573: '장소',
     543: '놀이',
     1989: '양도',
     735: '돼지',
     2613: '전골',
     970: '매운탕',
     3512: '형편',
     1406: '브런치',
     751: '뒤쪽',
     956: '맛집',
     2869: '쭈욱',
     79: '갑인',
     764: '드타',
     1233: '방파제',
     3567: '횟집',
     3129: '타운',
     3448: '해산물',
     356: '규모',
     7: '가까이',
     2008: '어르신',
     454: '깨끗',
     629: '대신',
     2538: '작고',
     1697: '수영',
     1912: '아쉬움',
     2430: '인도',
     1634: '소독약',
     1745: '스비',
     3525: '홀로',
     775: '등정후',
     1365: '부터',
     3520: '혹시',
     3543: '확인',
     2645: '전화',
     3180: '통해',
     3582: '휘트니',
     2266: '운동복',
     1698: '수영모',
     219: '고오',
     1157: '바람',
     631: '대여',
     2093: '여직원',
     1077: '무시',
     951: '말투',
     2284: '원래',
     2700: '제로',
     2267: '운영',
     2470: '일반인',
     2503: '입장',
     1583: '선심',
     3360: '필요',
     430: '기전',
     620: '대뜸',
     3528: '화가',
     200: '고객',
     3343: '플레인',
     1800: '시경',
     1917: '아웃',
     3382: '하야',
     998: '메리어트',
     2081: '여럿',
     2397: '이어도',
     1707: '수준',
     2370: '이군',
     1867: '실망',
     2747: '종일',
     880: '리셉션',
     3070: '컨시어',
     3147: '태도',
     2319: '유료',
     1460: '사고',
     3393: '학생',
     1580: '선생님',
     2005: '어딘',
     1498: '사항',
     1075: '무슨',
     128: '거지',
     879: '리빙룸',
     3368: '하나요',
     3202: '트윈룸',
     1065: '무려',
     156: '게재',
     1869: '실물',
     2881: '차이',
     1879: '실화',
     3231: '파우더',
     240: '곰팡이',
     2511: '자국',
     2539: '작동',
     233: '골드스타',
     517: '냉장고',
     2649: '절대',
     826: '레스토랑',
     2513: '자꾸',
     2687: '정색',
     1510: '살짝',
     1561: '서버',
     669: '데리',
     32: '가신',
     470: '나머지',
     1105: '물기',
     2851: '직접',
     2931: '체계',
     2048: '엉망',
     1630: '소규모',
     1803: '시기',
     910: '마음',
     886: '리트',
     794: '라그',
     409: '기대',
     1862: '실내수영장',
     1701: '수온',
     1749: '스위트',
     1427: '비수',
     1515: '상대',
     536: '노후',
     2669: '정가',
     1072: '무리',
     3424: '할인',
     3473: '행사',
     2893: '참고',
     3298: '포함',
     913: '마일리지',
     650: '대한항공',
     3377: '하룻밤',
     3542: '확실',
     2115: '연식',
     201: '고급',
     2280: '원가',
     1566: '서우',
     3453: '해수욕장',
     3402: '한눈',
     2900: '창문',
     161: '겨울철',
     2187: '온도',
     870: '리기',
     1214: '방기',
     725: '동시',
     1221: '방식',
     621: '대략',
     695: '도정',
     1352: '부스',
     2137: '옆방',
     3220: '티비',
     3001: '취침',
     2946: '초등학생',
     1996: '양호',
     3411: '한식당',
     2875: '차라리',
     1184: '반드시',
     3107: '크게',
     1896: '씨유',
     674: '델문',
     3035: '카페나',
     3452: '해수욕',
     2969: '최적',
     778: '디럭스',
     1203: '발코니',
     1034: '모로',
     3203: '트윈룸입니',
     1585: '선착순',
     2142: '예술',
     1106: '물놀이',
     1031: '모래',
     3352: '피크',
     1817: '시즌',
     491: '날씨',
     1581: '선선',
     381: '근래',
     3269: '편리',
     3086: '코르',
     434: '기지',
     1481: '사양',
     2782: '주체',
     302: '교회',
     2653: '절반',
     2440: '인수',
     1314: '보임',
     1927: '아트',
     2976: '추정',
     3333: '프로',
     3264: '페셔',
     2432: '인력',
     976: '매트리스',
     472: '나무',
     3482: '허리',
     1934: '안감',
     3447: '해변',
     2275: '워낙',
     31: '가시',
     2757: '주말',
     3397: '한국',
     1270: '벚꽃',
     403: '기간',
     3503: '협재',
     2197: '옹포',
     1209: '밥집',
     1505: '산책',
     860: '루프',
     1425: '비바람',
     1396: '불어',
     1410: '블로거',
     1108: '물떄',
     360: '그거',
     2308: '위주',
     3317: '풀이',
     2192: '온수',
     1133: '미온수',
     1132: '미온',
     2536: '자쿠지',
     2551: '잠깐',
     2458: '인피니트',
     3549: '환상',
     3365: '하나',
     1782: '스페',
     3015: '치킨',
     1446: '빠에야',
     1779: '스파',
     333: '구조',
     1780: '스파룸',
     2535: '자쿠',
     2401: '이용권',
     3371: '하니',
     1487: '사이',
     1820: '시트',
     2678: '정리',
     1511: '삼다수',
     1294: '병과',
     520: '네스프레소',
     3051: '캡슐',
     2089: '여자',
     3347: '피로',
     1784: '스페인',
     2132: '영업',
     2743: '종료',
     1245: '버거',
     2161: '오른쪽',
     893: '마담',
     482: '나탈리',
     2351: '음악',
     3362: '필터',
     1875: '실외수영장',
     147: '검색',
     2186: '옥상',
     164: '결과',
     653: '대형',
     942: '만큼',
     1260: '번잡',
     98: '개수대',
     2407: '이전',
     1909: '아무',
     884: '리지',
     2714: '제한',
     189: '경치',
     2403: '이웃',
     2467: '일몰',
     1877: '실제',
     883: '리조트',
     3527: '홍보',
     1529: '상통',
     3532: '화산',
     1166: '바위',
     2686: '정상',
     431: '기점',
     1770: '스템',
     2556: '잠자리',
     435: '기타',
     1359: '부족함',
     444: '길이',
     582: '다행',
     2792: '중국어',
     2131: '영어',
     692: '도움',
     3438: '해결',
     1053: '목적지',
     3461: '해피',
     2346: '음료',
     1488: '사이다',
     2764: '주스',
     592: '달걀',
     3014: '치즈',
     3597: '히터',
     3187: '투어',
     3515: '호스텔',
     2858: '질문',
     1530: '상품',
     270: '과거',
     154: '게스트하우스',
     2510: '자고',
     2150: '오기',
     2479: '일이',
     1201: '발전',
     2141: '예상',
     3165: '토스터',
     2424: '이후',
     1635: '소등',
     1399: '불키',
     2733: '조용조',
     1232: '방키',
     218: '고여',
     496: '남자',
     1946: '안전',
     2878: '차로',
     2373: '이내',
     1403: '뷔페',
     2076: '여느',
     856: '롯데리아',
     1216: '방만',
     224: '고정',
     1060: '무궁화',
     1676: '수기',
     1490: '사이트',
     3526: '홈페이지',
     921: '마치',
     1088: '무척',
     2617: '전기차',
     134: '건너',
     402: '급속',
     1628: '소가',
     2333: '유치원',
     2784: '주택가',
     ...}
</pre>
</div>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> coef <span class="keyword">in</span> coef_pos_index[:<span class="number">20</span>]:</span><br><span class="line">    print(invert_index_vectorizer[coef[<span class="number">1</span>]], coef[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>방문 1.2644550507381787
이용 0.9079356150239053
바다 0.895609472071521
조식 0.8859075267474583
가족 0.8795111499693716
가성 0.8541915649753757
다음 0.8362541212560809
최고 0.7714811231976703
사장 0.7375280889735719
맛집 0.7203390936359615
추천 0.6503260268852225
거리 0.6488836121942877
마음 0.6467914172687944
바로 0.6264469987695738
리조트 0.5943145305412955
출장 0.5505354129422678
도움 0.5294632094678557
인테리어 0.5240729254152497
아주 0.5207834696883535
의사 0.5153917648445299
</code></pre>
<br>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> coef <span class="keyword">in</span> coef_neg_index[:<span class="number">20</span>]:</span><br><span class="line">    print(invert_index_vectorizer[coef[<span class="number">1</span>]], coef[<span class="number">0</span>])</span><br></pre></td></tr></tbody></table></figure>
<pre><code>예약 -0.9945592515966041
냄새 -0.9190158099937462
다른 -0.8672956005075485
침대 -0.7519681298547074
보이 -0.7201222787741572
최악 -0.7142499739127354
에어컨 -0.6786616478611768
별로 -0.6742178511586063
찾기 -0.6584721911054098
취소 -0.6464141509409321
사람 -0.6451323735594592
정도 -0.6240099604615805
사진 -0.6089303470147718
대부분 -0.5889712626646347
다시 -0.5601302753897155
대해 -0.5518124209379022
노후 -0.5484791097700695
느낌 -0.5423970967095598
필요 -0.5413974621071783
문제 -0.5287746123667489
</code></pre>
<br>
<p>키워드를 살펴보면:</p>
<ul>
<li>이용객들이 보통 제주 호텔의 바다뷰 혹은 바다 접근성, 주변 맛집 그리고 인테리어 등에 만족하는 것으로 보이고</li>
<li>숙소의 냄새 그리고 침대, 에어컨 등 시설의 상태를 많이 아쉬워하는것 같습니다.</li>
</ul>
<br>
<br><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>【Exercise】</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Text Mining</tag>
      </tags>
  </entry>
</search>
