<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hyemin&#39;s journey of growth in Data Analysis</title>
  
  <subtitle>김혜민 / 金慧敏</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyemin-kim.github.io/"/>
  <updated>2020-05-07T13:19:12.773Z</updated>
  <id>https://hyemin-kim.github.io/</id>
  
  <author>
    <name>Hyemin Kim</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Hexo博文中添加本地图片的方法（基于Typora编辑器）</title>
    <link href="https://hyemin-kim.github.io/2020/05/06/Hexo-Insert-local-images/"/>
    <id>https://hyemin-kim.github.io/2020/05/06/Hexo-Insert-local-images/</id>
    <published>2020-05-06T12:20:48.531Z</published>
    <updated>2020-05-07T13:19:12.773Z</updated>
    
    <content type="html"><![CDATA[<font face="Microsoft YaHei"><p>当我们想在markdown文档中添加网络图片时，可以使用命令<code>!['图片名称'](图片网络地址)</code>进行实现，然而这条命令却不适用于添加本地图片。本文将介绍在使用Typora编辑器编辑Hexo博文时，在markdown文档中添加本地图片的方法。快来看看吧~</p><a id="more"></a><br><p></p><ul class="markdownIt-TOC"><li><ul><li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%89%8D-%E8%BF%9B%E8%A1%8C%E9%85%8D%E7%BD%AE"><strong>【编写博客前】 — 进行配置</strong></a><br>*<ul><li>[<strong>建立 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹(Asset Floder)</a>，用来保存添加到博文中的本地图片</strong>](#建立-资源文件夹asset-floder用来保存添加到博文中的本地图片)</li><li><a href="#%E5%9C%A8typora%E4%B8%AD%E8%AE%BE%E7%BD%AE%E5%9B%BE%E7%89%87%E7%9A%84%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84"><strong>在Typora中设置图片的相对路径</strong></a></li><li><a href="#%E6%92%B0%E5%86%99markdown%E6%96%87%E6%A1%A3%E6%97%B6%E9%85%8D%E7%BD%AE-%E5%9B%BE%E7%89%87%E6%A0%B9%E7%9B%AE%E5%BD%95-%E4%BD%BF%E5%85%B6%E8%83%BD%E5%A4%9F%E5%90%8C%E6%AD%A5%E5%88%B0hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8E%BB"><strong>撰写markdown文档时配置 <em>图片根目录</em> ，使其能够同步到hexo博客中去</strong></a></li></ul></li><li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E6%97%B6-%E5%9B%BE%E7%89%87%E5%AF%BC%E5%85%A5%E6%96%B9%E6%B3%95"><strong>【编写博客时】 — 图片导入方法</strong></a><br>*<ul><li><a href="#%E7%9B%B4%E6%8E%A5%E6%8B%96%E6%8B%BD"><strong>直接拖拽</strong></a></li><li><a href="#%E5%88%A9%E7%94%A8%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E8%B0%83%E5%8F%96"><strong>利用相对路径调取</strong></a></li></ul></li><li><a href="#%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%90%8E-%E5%A4%87%E4%BB%BD%E5%9B%BE%E7%89%87%E7%BB%93%E6%9E%9C"><strong>【编写博客后】— 备份图片结果</strong></a></li></ul></li></ul><p></p><br><h3 id="编写博客前-进行配置"><a class="markdownIt-Anchor" href="#编写博客前-进行配置"></a> <strong>【编写博客前】 — 进行配置</strong></h3><p>配置过程一共分为三个步骤：</p><ol><li><h5 id="建立-资源文件夹asset-floder用来保存添加到博文中的本地图片"><a class="markdownIt-Anchor" href="#建立-资源文件夹asset-floder用来保存添加到博文中的本地图片"></a> <strong>建立 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">资源文件夹(Asset Floder)</a>，用来保存添加到博文中的本地图片</strong></h5><ul><li>在本地Hexo根目录下的<code>source</code>文件夹中创建一个名为 <code>images</code> 的文件夹</li></ul></li><li><h5 id="在typora中设置图片的相对路径"><a class="markdownIt-Anchor" href="#在typora中设置图片的相对路径"></a> <strong>在Typora中设置图片的相对路径</strong></h5><ul><li>打开Typora的<code>文件 &gt; 偏好设置 &gt; 图像</code>，进行如下设置：</li></ul><center><img src="/images/Hexo-Local-Pictures/image-20200506223313787.png" alt="image-20200506223313787" style="zoom:50%;"></center><ul><li>这会使<code>source/images</code>文件夹下新增一个与所编辑的markdown文档同名的文件夹，文档中所添加的 <em>本地图片</em> 都将存档于此（即拥有了如下路径：<code>'hexo根目录'/source/images/'md文档名'/'图片名称'）</code>)。<br><br></li></ul></li><li><h5 id="撰写markdown文档时配置-图片根目录-使其能够同步到hexo博客中去"><a class="markdownIt-Anchor" href="#撰写markdown文档时配置-图片根目录-使其能够同步到hexo博客中去"></a> <strong>撰写markdown文档时配置 <em>图片根目录</em> ，使其能够同步到hexo博客中去</strong></h5><ul><li>撰写博文时，先点击Typora菜单栏中的<code>格式 &gt; 图像 &gt; 设置图片根目录</code> , 将根目录配置为<code>'hexo根目录'/source</code>。然后再撰写博文。【注：每篇需要添加本地图片的博文都要先进行此步骤】</li></ul><center><img src="/images/Hexo-Local-Pictures/1.png" alt="1" style="zoom:50%;"></center></li></ol><br><h3 id="编写博客时-图片导入方法"><a class="markdownIt-Anchor" href="#编写博客时-图片导入方法"></a> <strong>【编写博客时】 — 图片导入方法</strong></h3><p>在编写博客时导入本地图片有两种方法：</p><ol><li><h5 id="直接拖拽"><a class="markdownIt-Anchor" href="#直接拖拽"></a> <strong>直接拖拽</strong></h5><ul><li>将原本存放于其他本地文件夹中的图片直接拖拽到文档中的相应位置中去</li></ul></li></ol><ul><li>此时图片会被自动存档至生成的同名文件夹<code>'hexo根目录'/source/images/'md文档名'</code>中<ul><li>文档中图片地址的代码会显示成 <em>自动生成的相对路径</em>，即<code>/images/'md文档名'/'图片名称'</code><br><br></li></ul></li></ul><ol start="2"><li><h5 id="利用相对路径调取"><a class="markdownIt-Anchor" href="#利用相对路径调取"></a> <strong>利用相对路径调取</strong></h5><ul><li>当利用 <em>方法1</em> 插入了至少一张图片时（即已生成同名文件夹时），便可以把接下来要插入的图片复制到此同名文件夹中，在文档中<em>利用相对路径</em> 调取图片：</li><li>所使用的命令是：<code>![图片显示名称](/images/'md文档名'/'图片名称')</code></li><li>这里的<code>图片显示名称</code>不必与文件夹中保存的<code>图片名称</code>保持一致，<code>'图片名称'</code>中要记得包含图片格式（例如：tupian.jpg 或 picture.png 等）<br><br></li></ul></li></ol><p>【注意】当还没有利用 <em>方法1</em> 插入过图片时（即同名文件夹尚未生成时），<strong>不可以自己创建同名文件夹</strong>保存图片。亲测不好使！！（.md文档中可以显示，但是hexo博文中无法显示）</p><br><h3 id="编写博客后-备份图片结果"><a class="markdownIt-Anchor" href="#编写博客后-备份图片结果"></a> <strong>【编写博客后】— 备份图片结果</strong></h3><p>在利用上述方法完成了含有本地图片的markdown博文后，我们的资源文件夹<code>'hexo根目录'/source/images/</code>内最终会显示成什么样子呢？</p><ul><li><p>每一篇配置了图片根目录的博文（即【编写博客前】的第3步），都会在<code>'hexo根目录'/source/images/</code>文件夹中有一个与文档名称同名的文件夹<code>'hexo根目录'/source/images/'md文档名'</code></p><br></li><li><p>该文件夹中会保存博文编写中曾经添加的<strong>所有本地文件</strong></p><ul><li><strong>所有</strong>的含义是：即使编辑过程中某些本地图片在添加后又被删除了，它们也仍然会保留在文件夹中，即该文件夹会备份你在博文中添加的 <em>所有本地图片历史</em></li><li><strong>本地文件</strong>的含义是：这里只会保存插入的本地文件，而不会保存插入的网络文件。尽管在【编写博客前】的第2步配置中，我们也同样勾选了<code>对网络位置的图片应用上述规则</code>。（请原谅我并不知道其中的缘由。。）</li></ul></li></ul><p>就此，在Typora编辑器中编写Hexo博文时，往markdown文档中添加本地图片的方法就介绍完毕啦！快去应用到你的博文中去吧~</p> <br>   <br>   <br>  <hr><p>本文参考了<a href="https://yinyoupoet.github.io/" target="_blank" rel="noopener">yinyoupoet</a>的<a href="https://yinyoupoet.github.io/2019/09/03/hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">typora + hexo博客中插入图片</a><br>更多关于Typora中插入图片的内容可以参考<a href="https://support.typora.io/Images/#when-insert-images" target="_blank" rel="noopener">Typora的官方说明</a></p> <hr>   <br>   <br>  </font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;font face=&quot;Microsoft YaHei&quot;&gt;
&lt;p&gt;当我们想在markdown文档中添加网络图片时，可以使用命令&lt;code&gt;![&#39;图片名称&#39;](图片网络地址)&lt;/code&gt;进行实现，然而这条命令却不适用于添加本地图片。本文将介绍在使用Typora编辑器编辑Hexo博文时，在markdown文档中添加本地图片的方法。快来看看吧~&lt;/p&gt;&lt;/font&gt;
    
    </summary>
    
    
      <category term="【Study】Hexo Usage" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91Hexo-Usage/"/>
    
    
      <category term="Hexo" scheme="https://hyemin-kim.github.io/tags/Hexo/"/>
    
      <category term="markdown" scheme="https://hyemin-kim.github.io/tags/markdown/"/>
    
      <category term="Typora" scheme="https://hyemin-kim.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Markdown的常用语法</title>
    <link href="https://hyemin-kim.github.io/2020/05/04/Markdown%20%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://hyemin-kim.github.io/2020/05/04/Markdown%20%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</id>
    <published>2020-05-03T16:40:07.372Z</published>
    <updated>2020-05-07T11:44:38.008Z</updated>
    
    <content type="html"><![CDATA[<font face="Microsoft YaHei"><h4 id="1-标题"><a class="markdownIt-Anchor" href="#1-标题"></a> 1. 标题</h4><p>​     一级标题： “#” + 空格 + “一级标题”<br>​     二级标题： “##” + 空格 + “二级标题”<br>​     三级标题： “###” + 空格 + “三级标题”<br>​     ……<br>​     以此类推 【最多到6级】</p><br><br><br><br><br><h4 id="2-换行"><a class="markdownIt-Anchor" href="#2-换行"></a> 2. 换行</h4><p>​    “内容” 末尾 + 2个空格</p><blockquote><p>Hello<br>World</p></blockquote><h4 id="3-加粗"><a class="markdownIt-Anchor" href="#3-加粗"></a> 3. 加粗</h4><p>​     方法一：“内容”前后加 2 个 * 号（无空格）</p><blockquote><p>** “内容” **   ——&gt;   <strong>“内容”</strong></p></blockquote><p>​     方法二： “内容”前后加 2 个下划线（无空格）</p><blockquote><p>__ “内容” __  ——&gt; <strong>“内容”</strong></p></blockquote><h4 id="4-斜体"><a class="markdownIt-Anchor" href="#4-斜体"></a> 4. 斜体</h4><p>​     方法一：“内容”前后加1个 * 号 （无空格）</p><blockquote><p><em>“内容”</em></p></blockquote><p>​     方法二：“内容”前后加1个下划线（无空格）</p><blockquote><p>_ “内容” _ ——&gt;  <em>“内容”</em></p></blockquote><h4 id="5-斜体加粗"><a class="markdownIt-Anchor" href="#5-斜体加粗"></a> 5. 斜体加粗</h4><p>​    “内容”前后加 3 个 * 号 （无空格）</p><blockquote><p><em><strong>“内容”</strong></em></p></blockquote><h4 id="6-删除线"><a class="markdownIt-Anchor" href="#6-删除线"></a> 6. 删除线</h4><p>​    “内容”前后加 2 个波浪线（~）</p><blockquote><p>~~ “内容” ~~  ——&gt;  <s>“内容”</s></p></blockquote><h4 id="7-高亮"><a class="markdownIt-Anchor" href="#7-高亮"></a> 7. 高亮</h4><p>​    “内容”前后加 2 个 = 号</p><blockquote><p>== “内容” ==  ——&gt;  <mark>“内容”</mark></p></blockquote><h4 id="8-上标-下标"><a class="markdownIt-Anchor" href="#8-上标-下标"></a> 8. <sup>上标</sup> &amp; <sub>下标</sub></h4><ul><li><p>上标：“内容”前后加 1 个 ^ 号</p></li><li><p>下标：“内容”前后加 1 个 ~ 号</p></li></ul><blockquote><p>我是 ^ 上标 ^  ——&gt;  我是<sup>上标</sup></p><p>我是 ~ 下标 ~  ——&gt; 我是<sub>下标</sub></p></blockquote><h4 id="9-引用"><a class="markdownIt-Anchor" href="#9-引用"></a> 9. 引用</h4><p>​    “内容”前加 &gt; 号</p><blockquote><p>“内容”</p></blockquote><p>​     引用号可叠用，&gt;号越多，级数越低<br>​     例如：可以使用&gt;, &gt;&gt;, &gt;&gt;&gt; 的形式</p><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><h4 id="10-插入链接"><a class="markdownIt-Anchor" href="#10-插入链接"></a> 10. 插入链接</h4><p>​     中括号内输入“显示的文字”，紧接着小括号内输入“网址链接”<br>​    【注意：网站地址需要 http 开头，最好直接复制】</p><blockquote><p><a href="http://www.baidu.com/" target="_blank" rel="noopener">点我进入百度</a></p></blockquote><h4 id="11-插入图片"><a class="markdownIt-Anchor" href="#11-插入图片"></a> 11. 插入图片</h4><p>​     感叹号 + 中括号内输入“显示的文字”，紧接着小括号内输入“图片链接”<br>​    【注意：图片链接非网页的网址栏链接，而是右键“复制图片地址”得到的链接】</p><blockquote><p><img src="http://t9.baidu.com/it/u=1307125826,3433407105&amp;fm=79&amp;app=86&amp;f=JPEG?w=5760&amp;h=3240" alt="图片"></p></blockquote><h4 id="12列表"><a class="markdownIt-Anchor" href="#12列表"></a> 12.列表</h4><h5 id="1-有序列表"><a class="markdownIt-Anchor" href="#1-有序列表"></a> （1） 有序列表</h5><p>​      （序号1+点+空格）+内容+回车<br>​      （序号2+点+空格）+内容+回车<br>​      （序号3+点+空格）+内容+回车</p><blockquote><ol><li>第一行</li><li>第二行</li><li>第三行</li></ol></blockquote><p>​      【注意】：系统会默认调整有序列表的序列数。即，即使你误输入成了1.，2.，4.，系统也会自动更正为 1.，2.，3.</p><blockquote><ol><li>第一点</li><li>第二点</li><li>第四点</li></ol></blockquote><h5 id="2无序列表"><a class="markdownIt-Anchor" href="#2无序列表"></a> （2）无序列表</h5><p>​       使用“ + ”加空格+内容<br>​       或者“ - ”加空格+内容<br>​       或者“ * ”加空格+内容<br>​       下一级：前面加 tab</p><blockquote><ul><li><p>第一章</p></li><li><p>第二章</p></li><li><p>第三章</p><ul><li>第一节</li></ul></li></ul></blockquote><h5 id="3任务列表"><a class="markdownIt-Anchor" href="#3任务列表"></a> （3）任务列表</h5><p>​       短横线 + 1 个空格 + 中括号（括号中间带 1 个空格） + 1 个空格 + “内容”</p><blockquote><ul><li>[x] 学习python</li><li>[ ] 学习SQL</li></ul></blockquote><h4 id="13-添加表格"><a class="markdownIt-Anchor" href="#13-添加表格"></a> 13. 添加表格</h4><p>​      竖线作为列分界线，换行竖线中间输入短横线作为行分界线</p><table><thead><tr><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>a</td><td>b</td><td>c</td></tr><tr><td>d</td><td>e</td><td>f</td></tr></tbody></table><h4 id="14-代码"><a class="markdownIt-Anchor" href="#14-代码"></a> 14. 代码</h4><p>​      三个 ` 号，再输入所使用的编程语言</p> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Python"</span>)  <span class="comment"># python</span></span><br></pre></td></tr></tbody></table></figure> <figure class="highlight r"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)  <span class="comment"># R语言</span></span><br></pre></td></tr></tbody></table></figure><h4 id="15插入目录-only-for-typora"><a class="markdownIt-Anchor" href="#15插入目录-only-for-typora"></a> 15.插入目录 [Only for Typora]</h4><p>​     中括号内输入toc</p><p></p><ul class="markdownIt-TOC"><li><ul><li><ul><li><a href="#1-%E6%A0%87%E9%A2%98">1. 标题</a></li><li><a href="#2-%E6%8D%A2%E8%A1%8C">2. 换行</a></li><li><a href="#3-%E5%8A%A0%E7%B2%97">3. 加粗</a></li><li><a href="#4-%E6%96%9C%E4%BD%93">4. 斜体</a></li><li><a href="#5-%E6%96%9C%E4%BD%93%E5%8A%A0%E7%B2%97">5. 斜体加粗</a></li><li><a href="#6-%E5%88%A0%E9%99%A4%E7%BA%BF">6. 删除线</a></li><li><a href="#7-%E9%AB%98%E4%BA%AE">7. 高亮</a></li><li><a href="#8-%E4%B8%8A%E6%A0%87-%E4%B8%8B%E6%A0%87">8. <sup>上标</sup> &amp; <sub>下标</sub></a></li><li><a href="#9-%E5%BC%95%E7%94%A8">9. 引用</a></li><li><a href="#10-%E6%8F%92%E5%85%A5%E9%93%BE%E6%8E%A5">10. 插入链接</a></li><li><a href="#11-%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87">11. 插入图片</a></li><li><a href="#12%E5%88%97%E8%A1%A8">12.列表</a><ul><li><a href="#1-%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8">（1） 有序列表</a></li><li><a href="#2%E6%97%A0%E5%BA%8F%E5%88%97%E8%A1%A8">（2）无序列表</a></li><li><a href="#3%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8">（3）任务列表</a></li></ul></li><li><a href="#13-%E6%B7%BB%E5%8A%A0%E8%A1%A8%E6%A0%BC">13. 添加表格</a></li><li><a href="#14-%E4%BB%A3%E7%A0%81">14. 代码</a></li><li><a href="#15%E6%8F%92%E5%85%A5%E7%9B%AE%E5%BD%95-only-for-typora">15.插入目录 [Only for Typora]</a></li></ul></li></ul></li></ul><p></p></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;font face=&quot;Microsoft YaHei&quot;&gt;
&lt;h4 id=&quot;1-标题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-标题&quot;&gt;&lt;/a&gt; 1. 标题&lt;/h4&gt;
&lt;p&gt;​     一级标题： “#” + 空格 + “一级标题”&lt;br&gt;
​
      
    
    </summary>
    
    
      <category term="【Study】Markdown" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91Markdown/"/>
    
    
      <category term="markdown" scheme="https://hyemin-kim.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hyemin-kim.github.io/2020/05/04/hello-world/"/>
    <id>https://hyemin-kim.github.io/2020/05/04/hello-world/</id>
    <published>2020-05-03T15:44:51.807Z</published>
    <updated>2020-05-04T17:27:47.415Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="【PROJECTS】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90PROJECTS%E3%80%91/"/>
    
    
  </entry>
  
</feed>
