<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hyemin Kim</title>
  
  <subtitle>김혜민 / 金慧敏</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyemin-kim.github.io/"/>
  <updated>2020-07-17T08:39:33.476Z</updated>
  <id>https://hyemin-kim.github.io/</id>
  
  <author>
    <name>Hyemin Kim</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python &gt;&gt; sklearn - (1) 전처리</title>
    <link href="https://hyemin-kim.github.io/2020/07/17/S-Python-sklearn1/"/>
    <id>https://hyemin-kim.github.io/2020/07/17/S-Python-sklearn1/</id>
    <published>2020-07-17T07:37:50.000Z</published>
    <updated>2020-07-17T08:39:33.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="전처리-pre-processing"><a class="markdownIt-Anchor" href="#전처리-pre-processing"></a> <strong>전처리 (Pre-Processing)</strong></h1><p></p><ul class="markdownIt-TOC"><li><a href="#%EA%B0%9C%EC%9A%94"><strong>개요</strong></a><ul><li><a href="#1-%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%98-%EC%A0%95%EC%9D%98">1. 전처리의 정의</a></li><li><a href="#2-%EC%A0%84%EC%B2%98%EB%A6%AC%EC%9D%98-%EC%A2%85%EB%A5%98">2. 전처리의 종류</a></li></ul></li><li><a href="#%EC%8B%A4%EC%8A%B5-titanic"><strong>실습 – Titanic</strong></a><ul><li><a href="#0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%85%8B-%ED%8C%8C%EC%95%85">0. 데이터 셋 파악</a></li><li><a href="#1-train-validation-%EC%85%8B-%EB%82%98%EB%88%84%EA%B8%B0">1. train / validation 셋 나누기</a></li><li><a href="#2-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2. 결측치 처리</a><ul><li><a href="#2-0-%EA%B2%B0%EC%B8%A1%EC%B9%98-%ED%99%95%EC%9D%B8">2-0. 결측치 확인</a></li><li><a href="#2-1-numerical-column%EC%9D%98-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2-1. Numerical Column의 결측치 처리</a></li><li><a href="#2-2-categorical-column%EC%9D%98-%EA%B2%B0%EC%B8%A1%EC%B9%98-%EC%B2%98%EB%A6%AC">2-2. Categorical Column의 결측치 처리</a></li></ul></li><li><a href="#3-label-encoding-%EB%AC%B8%EC%9E%90categorivcal%EB%A5%BC-%EC%88%98%EC%B9%98numerical%EB%A1%9C-%EB%B3%80%ED%99%98">3. Label Encoding: 문자(categorivcal)를 수치(numerical)로 변환</a></li><li><a href="#4-%EC%9B%90-%ED%95%AB-%EC%9D%B8%EC%BD%94%EB%94%A9-one-hot-encoding">4. 원 핫 인코딩 (One Hot Encoding)</a></li><li><a href="#5-normalize-%EC%A0%95%EA%B7%9C%ED%99%94">5. Normalize (정규화)</a></li><li><a href="#6-standard-scaling-%ED%91%9C%EC%A4%80%ED%99%94">6. Standard Scaling (표준화)</a></li></ul></li></ul><p></p><br><h2 id="개요"><a class="markdownIt-Anchor" href="#개요"></a> <strong>개요</strong></h2><h3 id="1-전처리의-정의"><a class="markdownIt-Anchor" href="#1-전처리의-정의"></a> 1. 전처리의 정의</h3><p><strong>데이터 전처리</strong>는 데이터 분석에 적합하게 데이터를 <strong>가공/ 변경/ 처리/ 클리닝</strong>하는 과정이다</p>  <br><h3 id="2-전처리의-종류"><a class="markdownIt-Anchor" href="#2-전처리의-종류"></a> 2. 전처리의 종류</h3><ol><li><p><strong>결측치</strong> - Imputer</p></li><li><p><strong>이상치</strong></p></li><li><p><strong>정규화 (Normalization)</strong></p><ul><li>0~1사이의 분포로 조정</li><li><font size="5"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_{new} = \frac{x-x_{min}}{x_{max}-x_{min}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.263531em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></font></li></ul></li><li><p><strong>표준화 (Standardization)</strong></p><ul><li>평균을 0, 표준편차를 1로 맞춤</li><li><font size="5"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding="application/x-tex">x_{new} = \frac{x-\mu}{\sigma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.199439em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></font></li></ul></li><li><p><strong>샘플링 (over/under sampling)</strong></p></li><li><p><strong>피처 공학 (Feature Engineering)</strong></p><ul><li>feature 생성/ 연산</li><li>구간 생성, 스케일 변경</li></ul></li></ol><p><br>  <br></p><h2 id="실습-titanic"><a class="markdownIt-Anchor" href="#실습-titanic"></a> <strong>실습 – Titanic</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br><span class="line">test = pd.read_csv(<span class="string">'test.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><h3 id="0-데이터-셋-파악"><a class="markdownIt-Anchor" href="#0-데이터-셋-파악"></a> 0. 데이터 셋 파악</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div></div><br><ul><li><p>PassengerId: 승객 아이디</p></li><li><p>Survived: 생존 여부, 1: 생존, 0: 사망</p></li><li><p>Pclass: 등급</p></li><li><p>Name: 성함</p></li><li><p>Sex: 성별</p></li><li><p>Age: 나이</p></li><li><p>SibSp: 형제, 자매, 배우자 수</p></li><li><p>Parch: 부모, 자식 수</p></li><li><p>Ticket: 티켓번호</p></li><li><p>Fare: 요즘</p></li><li><p>Cabin: 좌석번호</p></li><li><p>Embarked: 탑승 항구</p><br><br></li></ul><h3 id="1-train-validation-셋-나누기"><a class="markdownIt-Anchor" href="#1-train-validation-셋-나누기"></a> 1. train / validation 셋 나누기</h3><p><strong>STEP 1. feature &amp; label 정의하기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">feature = [</span><br><span class="line">    <span class="string">'Pclass'</span>, <span class="string">'Sex'</span>, <span class="string">'Age'</span>, <span class="string">'Fare'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">label = [</span><br><span class="line">    <span class="string">'Survived'</span></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[feature].head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>Pclass</th>      <th>Sex</th>      <th>Age</th>      <th>Fare</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>3</td>      <td>male</td>      <td>22.0</td>      <td>7.2500</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>female</td>      <td>38.0</td>      <td>71.2833</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>female</td>      <td>26.0</td>      <td>7.9250</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>female</td>      <td>35.0</td>      <td>53.1000</td>    </tr>    <tr>      <th>4</th>      <td>3</td>      <td>male</td>      <td>35.0</td>      <td>8.0500</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[label].head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>Survived</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>    </tr>    <tr>      <th>2</th>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>0</td>    </tr>  </tbody></table></div><br><p><strong>STEP 2. 적절한 비율로 train / validation set 나누기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure><blockquote><p><em><strong>reference:</strong></em> <a href="https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html" target="_blank" rel="noopener">&lt; train_test_split &gt; Document</a></p></blockquote><blockquote><p><strong>train_test_split</strong> ( <em>X, y, test_size=…, random_state=…, shuffle=True</em> )</p><ul><li><strong>test_size:</strong> validation set에 할당할 비율 (20% -&gt; 0.2)</li><li><strong>random_state:</strong> random seed 설정</li><li><strong>shuffle:</strong> 기본 True: shuffle the data before splitting</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x_train, x_valid, y_train, y_valid = train_test_split(train[feature], train[label], test_size=<span class="number">0.2</span>, random_state=<span class="number">30</span>, shuffle=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x_train.shape, y_train.shape</span><br></pre></td></tr></tbody></table></figure><pre><code>((712, 4), (712, 1))</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x_valid.shape, y_valid.shape</span><br></pre></td></tr></tbody></table></figure><pre><code>((179, 4), (179, 1))</code></pre><p><br> <br></p><h3 id="2-결측치-처리"><a class="markdownIt-Anchor" href="#2-결측치-처리"></a> 2. 결측치 처리</h3><h4 id="2-0-결측치-확인"><a class="markdownIt-Anchor" href="#2-0-결측치-확인"></a> 2-0. 결측치 확인</h4><p><strong>방법 1.</strong> pandas의 <code>info()</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 891 entries, 0 to 890Data columns (total 12 columns): #   Column       Non-Null Count  Dtype  ---  ------       --------------  -----   0   PassengerId  891 non-null    int64   1   Survived     891 non-null    int64   2   Pclass       891 non-null    int64   3   Name         891 non-null    object  4   Sex          891 non-null    object  5   Age          714 non-null    float64 6   SibSp        891 non-null    int64   7   Parch        891 non-null    int64   8   Ticket       891 non-null    object  9   Fare         891 non-null    float64 10  Cabin        204 non-null    object  11  Embarked     889 non-null    object dtypes: float64(2), int64(5), object(5)memory usage: 83.7+ KB</code></pre><br><p><strong>방법 2.</strong> pandas의 <code>isnull()</code><br>합계를 구하는 sum()을 통해 한 눈에 확인할 수 있다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>PassengerId      0Survived         0Pclass           0Name             0Sex              0Age            177SibSp            0Parch            0Ticket           0Fare             0Cabin          687Embarked         2dtype: int64</code></pre><p>개별 column의 결측치 확인하기</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>177</code></pre><br>  <h4 id="2-1-numerical-column의-결측치-처리"><a class="markdownIt-Anchor" href="#2-1-numerical-column의-결측치-처리"></a> 2-1. Numerical Column의 결측치 처리</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 891 entries, 0 to 890Data columns (total 12 columns): #   Column       Non-Null Count  Dtype  ---  ------       --------------  -----   0   PassengerId  891 non-null    int64   1   Survived     891 non-null    int64   2   Pclass       891 non-null    int64   3   Name         891 non-null    object  4   Sex          891 non-null    object  5   Age          714 non-null    float64 6   SibSp        891 non-null    int64   7   Parch        891 non-null    int64   8   Ticket       891 non-null    object  9   Fare         891 non-null    float64 10  Cabin        204 non-null    object  11  Embarked     889 non-null    object dtypes: float64(2), int64(5), object(5)memory usage: 83.7+ KB</code></pre><br><p><strong>1. Pandas의 <font color="blue">"fillna()"</font>를 사용</strong>: 1개의 column을 처리할 때</p><p><strong>a. 숫자"0"으로 채우기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].fillna(<span class="number">0</span>).describe()</span><br></pre></td></tr></tbody></table></figure><pre><code>count    891.000000mean      23.799293std       17.596074min        0.00000025%        6.00000050%       24.00000075%       35.000000max       80.000000Name: Age, dtype: float64</code></pre> <br> <p><strong>b. 통계값(평균)으로 채우기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Age'</span>].fillna(train[<span class="string">'Age'</span>].mean()).describe()</span><br></pre></td></tr></tbody></table></figure><pre><code>count    891.000000mean      29.699118std       13.002015min        0.42000025%       22.00000050%       29.69911875%       35.000000max       80.000000Name: Age, dtype: float64</code></pre> <br> <p><strong>2. sklearn의 <font color="blue">"SimpleImputer"</font>를 사용</strong>: 2개 이상의 column을 한 번에 처리할 때</p><blockquote><p><em><strong>reference:</strong></em></p><ol><li><a href="https://scikit-learn.org/stable/modules/impute.html" target="_blank" rel="noopener">Impute 도큐먼트</a></li><li><a href="https://scikit-learn.org/stable/modules/generated/sklearn.impute.SimpleImputer.html" target="_blank" rel="noopener">SimplrImputer 도큐먼트</a></li></ol></blockquote><blockquote><p><strong>SimpleImputer</strong>( <em>*, missing_values=nan, strategy=‘mean’, fill_value=None, verbose=0, copy=True, add_indicator=False</em> )</p><ul><li>strategy: “mean” / “median” / “most_frequent” / “constant”</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.impute <span class="keyword">import</span> SimpleImputer</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>a. 숫자"0"으로 채우기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 1. imputer 만들기</span></span><br><span class="line">imputer = SimpleImputer(strategy=<span class="string">'constant'</span>, fill_value=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 2. fit() 을 통해 결측치에 대한 학습을 진행하기</span></span><br><span class="line">imputer.fit(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br></pre></td></tr></tbody></table></figure><pre><code>SimpleImputer(add_indicator=False, copy=True, fill_value=0, missing_values=nan,              strategy='constant', verbose=0)</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 3. transform() 을 통해 실제 결측치에 대해 처리하기</span></span><br><span class="line">result = imputer.transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br><span class="line">result</span><br></pre></td></tr></tbody></table></figure><pre><code>array([[22.,  3.],       [38.,  1.],       [26.,  3.],       ...,       [ 0.,  3.],       [26.,  1.],       [32.,  3.]])</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 4. 처리 결과를 original data에 대입</span></span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>Age       0Pclass    0dtype: int64</code></pre><br>  <p><strong>fit_transform()</strong> 은 fit()과 transform()을 한 번에 해주는 합수다.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>Age       177Pclass      0dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 1. imputer 만들기</span></span><br><span class="line">imputer = SimpleImputer(strategy=<span class="string">'constant'</span>, fill_value=<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 2. fit and transform</span></span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 3. 결과 대입</span></span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>Age       0Pclass    0dtype: int64</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].describe()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Pclass</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>891.000000</td>      <td>891.000000</td>    </tr>    <tr>      <th>mean</th>      <td>23.799293</td>      <td>2.308642</td>    </tr>    <tr>      <th>std</th>      <td>17.596074</td>      <td>0.836071</td>    </tr>    <tr>      <th>min</th>      <td>0.000000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>6.000000</td>      <td>2.000000</td>    </tr>    <tr>      <th>50%</th>      <td>24.000000</td>      <td>3.000000</td>    </tr>    <tr>      <th>75%</th>      <td>35.000000</td>      <td>3.000000</td>    </tr>    <tr>      <th>max</th>      <td>80.000000</td>      <td>3.000000</td>    </tr>  </tbody></table></div> <br> <p><strong>b. 통계값(평균)으로 채우기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>Age       177Pclass      0dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imputer = SimpleImputer(strategy=<span class="string">'mean'</span>)</span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]])</span><br><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]] = result</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>Age       0Pclass    0dtype: int64</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Age'</span>, <span class="string">'Pclass'</span>]].describe()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>Age</th>      <th>Pclass</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>891.000000</td>      <td>891.000000</td>    </tr>    <tr>      <th>mean</th>      <td>29.699118</td>      <td>2.308642</td>    </tr>    <tr>      <th>std</th>      <td>13.002015</td>      <td>0.836071</td>    </tr>    <tr>      <th>min</th>      <td>0.420000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>22.000000</td>      <td>2.000000</td>    </tr>    <tr>      <th>50%</th>      <td>29.699118</td>      <td>3.000000</td>    </tr>    <tr>      <th>75%</th>      <td>35.000000</td>      <td>3.000000</td>    </tr>    <tr>      <th>max</th>      <td>80.000000</td>      <td>3.000000</td>    </tr>  </tbody></table></div><br><h4 id="2-2-categorical-column의-결측치-처리"><a class="markdownIt-Anchor" href="#2-2-categorical-column의-결측치-처리"></a> 2-2. Categorical Column의 결측치 처리</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 891 entries, 0 to 890Data columns (total 12 columns): #   Column       Non-Null Count  Dtype  ---  ------       --------------  -----   0   PassengerId  891 non-null    int64   1   Survived     891 non-null    int64   2   Pclass       891 non-null    int64   3   Name         891 non-null    object  4   Sex          891 non-null    object  5   Age          714 non-null    float64 6   SibSp        891 non-null    int64   7   Parch        891 non-null    int64   8   Ticket       891 non-null    object  9   Fare         891 non-null    float64 10  Cabin        204 non-null    object  11  Embarked     889 non-null    object dtypes: float64(2), int64(5), object(5)memory usage: 83.7+ KB</code></pre><br><p><strong>1. Pandas의 <font color="blue">"fillna()"</font>를 사용</strong>: 1개의 column을 처리할 때</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0      S1      C2      S3      S4      S      ..886    S887    S888    S889    C890    QName: Embarked, Length: 891, dtype: object</code></pre><br><p><strong>2. sklearn의 <font color="blue">"SimpleImputer"</font>를 사용</strong>: 2개 이상의 column을 한 번에 처리할 때</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imputer = SimpleImputer(strategy = <span class="string">'most_frequent'</span>)</span><br><span class="line">result = imputer.fit_transform(train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]])</span><br><span class="line">train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]] = result</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[[<span class="string">'Embarked'</span>, <span class="string">'Cabin'</span>]].isnull().sum()</span><br></pre></td></tr></tbody></table></figure><pre><code>Embarked    0Cabin       0dtype: int64</code></pre><p><br>  <br></p><h3 id="3-label-encoding-문자categorivcal를-수치numerical로-변환"><a class="markdownIt-Anchor" href="#3-label-encoding-문자categorivcal를-수치numerical로-변환"></a> 3. Label Encoding: 문자(categorivcal)를 수치(numerical)로 변환</h3><p>기계학습을 위해서 모든 <strong>문자</strong>로된 데이터는 <strong>수치로 변환</strong>해야 한다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 891 entries, 0 to 890Data columns (total 12 columns): #   Column       Non-Null Count  Dtype  ---  ------       --------------  -----   0   PassengerId  891 non-null    int64   1   Survived     891 non-null    int64   2   Pclass       891 non-null    int64   3   Name         891 non-null    object  4   Sex          891 non-null    object  5   Age          714 non-null    float64 6   SibSp        891 non-null    int64   7   Parch        891 non-null    int64   8   Ticket       891 non-null    object  9   Fare         891 non-null    float64 10  Cabin        204 non-null    object  11  Embarked     889 non-null    object dtypes: float64(2), int64(5), object(5)memory usage: 83.7+ KB</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0        male1      female2      female3      female4        male        ...  886      male887    female888    female889      male890      maleName: Sex, Length: 891, dtype: object</code></pre><br><p><strong>방법 1: convert함수를 직접 정의하기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>male      577female    314Name: Sex, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 1. 함수 정의</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">'female'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> data == <span class="string">'male'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># STEP 2. 함수 apply</span></span><br><span class="line">train[<span class="string">'Sex'</span>].apply(convert)</span><br></pre></td></tr></tbody></table></figure><pre><code>0      01      12      13      14      0      ..886    0887    1888    1889    0890    0Name: Sex, Length: 891, dtype: int64</code></pre>  <br><p><strong>방법 2: sklearn의 <font color="blue">“LabelEncoder”</font> 사용</strong></p><ul><li>변환 규칙: value name의 <strong>alphabet 순서대로</strong> 0, 1, 2… 숫자를 부여</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Sex'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>male      577female    314Name: Sex, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">le = LabelEncoder()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Sex_num'</span>] = le.fit_transform(train[<span class="string">'Sex'</span>])</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Sex_num'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>1    5770    314Name: Sex_num, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># class 확인</span></span><br><span class="line">le.classes_</span><br></pre></td></tr></tbody></table></figure><pre><code>array(['female', 'male'], dtype=object)</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 숫자 -&gt; 문자</span></span><br><span class="line">le.inverse_transform([<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></tbody></table></figure><pre><code>array(['female', 'male', 'male', 'female', 'female', 'male', 'male'],      dtype=object)</code></pre><br>  <p>NaN 값이 포함되어 있으면, <code>LabeEncoder</code>가 정상 동작하지 않음</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0      S1      C2      S3      S4      S      ..886    S887    S888    S889    C890    QName: Embarked, Length: 891, dtype: object</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>S    644C    168Q     77Name: Embarked, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">le.fit_transform(train[<span class="string">'Embarked'</span>])</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode(values, uniques, encode, check_unknown)    111         try:--&gt; 112             res = _encode_python(values, uniques, encode)    113         except TypeError:D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode_python(values, uniques, encode)     59     if uniques is None:---&gt; 60         uniques = sorted(set(values))     61         uniques = np.array(uniques, dtype=values.dtype)TypeError: '&lt;' not supported between instances of 'float' and 'str'</code></pre><p>​</p><pre><code>During handling of the above exception, another exception occurred:TypeError                                 Traceback (most recent call last)&lt;ipython-input-38-86525b1fc929&gt; in &lt;module&gt;----&gt; 1 le.fit_transform(train['Embarked'])D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in fit_transform(self, y)    250         """    251         y = column_or_1d(y, warn=True)--&gt; 252         self.classes_, y = _encode(y, encode=True)    253         return y    254 D:\Anaconda\lib\site-packages\sklearn\preprocessing\_label.py in _encode(values, uniques, encode, check_unknown)    112             res = _encode_python(values, uniques, encode)    113         except TypeError:--&gt; 114             raise TypeError("argument must be a string or number")    115         return res    116     else:TypeError: argument must be a string or number</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>] = train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>] = le.fit_transform(train[<span class="string">'Embarked'</span>])</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0      21      02      23      24      2      ..886    2887    2888    2889    0890    1Name: Embarked, Length: 891, dtype: int32</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>2    6460    1681     77Name: Embarked, dtype: int64</code></pre>  <br>  <br><h3 id="4-원-핫-인코딩-one-hot-encoding"><a class="markdownIt-Anchor" href="#4-원-핫-인코딩-one-hot-encoding"></a> 4. 원 핫 인코딩 (One Hot Encoding)</h3><blockquote><p><strong>pd.get_dummies</strong> ( <em>df_name</em> [ <em>‘col_name’</em> ] )</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train = pd.read_csv(<span class="string">'train.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>PassengerId</th>      <th>Survived</th>      <th>Pclass</th>      <th>Name</th>      <th>Sex</th>      <th>Age</th>      <th>SibSp</th>      <th>Parch</th>      <th>Ticket</th>      <th>Fare</th>      <th>Cabin</th>      <th>Embarked</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>3</td>      <td>Braund, Mr. Owen Harris</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>A/5 21171</td>      <td>7.2500</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>1</td>      <td>1</td>      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>PC 17599</td>      <td>71.2833</td>      <td>C85</td>      <td>C</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>1</td>      <td>3</td>      <td>Heikkinen, Miss. Laina</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>STON/O2. 3101282</td>      <td>7.9250</td>      <td>NaN</td>      <td>S</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>1</td>      <td>1</td>      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>113803</td>      <td>53.1000</td>      <td>C123</td>      <td>S</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>0</td>      <td>3</td>      <td>Allen, Mr. William Henry</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>373450</td>      <td>8.0500</td>      <td>NaN</td>      <td>S</td>    </tr>  </tbody></table></div></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 891 entries, 0 to 890Data columns (total 12 columns): #   Column       Non-Null Count  Dtype  ---  ------       --------------  -----   0   PassengerId  891 non-null    int64   1   Survived     891 non-null    int64   2   Pclass       891 non-null    int64   3   Name         891 non-null    object  4   Sex          891 non-null    object  5   Age          714 non-null    float64 6   SibSp        891 non-null    int64   7   Parch        891 non-null    int64   8   Ticket       891 non-null    object  9   Fare         891 non-null    float64 10  Cabin        204 non-null    object  11  Embarked     889 non-null    object dtypes: float64(2), int64(5), object(5)memory usage: 83.7+ KB</code></pre><br><p><strong>"Embarked"를 살펴보기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Unique Value 확인하기</span></span><br><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>S    644C    168Q     77Name: Embarked, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NA 채우기</span></span><br><span class="line">train[<span class="string">'Embarked'</span>] = train[<span class="string">'Embarked'</span>].fillna(<span class="string">'S'</span>)</span><br><span class="line">train[<span class="string">'Embarked'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>S    646C    168Q     77Name: Embarked, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Label Encoding (문자 to 숫자)</span></span><br><span class="line">train[<span class="string">'Embarked_num'</span>] = LabelEncoder().fit_transform(train[<span class="string">'Embarked'</span>])</span><br><span class="line">train[<span class="string">'Embarked_num'</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>2    6460    1681     77Name: Embarked_num, dtype: int64</code></pre><br><p>Embarked는 탑승 항구의 이니셜을 나타낸다. 우리는 <code>LabelEncoder</code>를 통해서 값을 수치형으로 변환해주었다, 하지만 이대로 데이터를 기계학습 시키면, 기계는 데이터 안에서 관계를 학습한다.</p><p>예를 들면, ‘S’= 2, ‘Q’= 1 이라고 되어 있는데, <code>Q</code>+<code>Q</code>=<code>S</code>가 된다라고 학습해버린다</p><p>그렇기 때문에, 우리는 <font color="blue">각 unique value를 별도의 column으로 분리하고, 값에 해당하는 column는 <strong>True (1)</strong>, 나머지 column는 <strong>False (0)</strong> 를 갖게 한다</font>.이것이 바로 <strong>원 핫 인코딩</strong> 이다.</p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked'</span>][:<span class="number">6</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    S1    C2    S3    S4    S5    QName: Embarked, dtype: object</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train[<span class="string">'Embarked_num'</span>][:<span class="number">6</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    21    02    23    24    25    1Name: Embarked_num, dtype: int32</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one_hot = pd.get_dummies(train[<span class="string">'Embarked_num'</span>][:<span class="number">6</span>])</span><br><span class="line">one_hot</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>5</th>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one_hot.columns = [<span class="string">'C'</span>, <span class="string">'Q'</span>, <span class="string">'S'</span>]</span><br><span class="line">one_hot</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>C</th>      <th>Q</th>      <th>S</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>5</th>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>  </tbody></table></div><br><p><strong>원핫인코딩</strong>은 카테고리의 특성을(계절, 항구, 성별, 종류…) 가지는 column에 대해서 적용한다</p><p><br>  <br></p><h3 id="5-normalize-정규화"><a class="markdownIt-Anchor" href="#5-normalize-정규화"></a> 5. Normalize (정규화)</h3><p><strong>정규화:</strong> column간에 다른 min,max 값을 가지는 경우, 정규화를 통해 min / max 의 척도를 맞추어 주는 작업이다</p><blockquote><p>sklearn.preprocessing  --&gt;  MinMaxScaler()</p></blockquote>  <br><p><strong>예: 영화평점</strong></p><ul><li>네이버 영화평점 (0점 ~ 10점): [2, 4, 6, 8, 10]</li><li>넷플릭스 영화평점 (0점 ~ 5점): [1, 2, 3, 4, 5]</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">movie = {<span class="string">'naver'</span>: [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">         <span class="string">'netflix'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">        }</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">movie = pd.DataFrame(data=movie)</span><br><span class="line">movie</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>naver</th>      <th>netflix</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>4</td>      <td>2</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>8</td>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>10</td>      <td>5</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">min_max_scaler = MinMaxScaler()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">min_max_movie = min_max_scaler.fit_transform(movie)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(min_max_movie, columns = [<span class="string">'naver'</span>, <span class="string">'netfllix'</span>])</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>naver</th>      <th>netfllix</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.00</td>      <td>0.00</td>    </tr>    <tr>      <th>1</th>      <td>0.25</td>      <td>0.25</td>    </tr>    <tr>      <th>2</th>      <td>0.50</td>      <td>0.50</td>    </tr>    <tr>      <th>3</th>      <td>0.75</td>      <td>0.75</td>    </tr>    <tr>      <th>4</th>      <td>1.00</td>      <td>1.00</td>    </tr>  </tbody></table></div><br>  <br><h3 id="6-standard-scaling-표준화"><a class="markdownIt-Anchor" href="#6-standard-scaling-표준화"></a> 6. Standard Scaling (표준화)</h3><p><strong>표준화:</strong> 평균이 0, 표준편차가 1이 되도록 변환해주는 작업</p><blockquote><p>sklearn.preprocessing  --&gt;  StandardScaler()</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">standard_scaler = StandardScaler()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 샘플데이터 생성</span></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x[<span class="number">9</span>] = <span class="number">1000</span>   <span class="comment"># oulier 추가</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.mean(), x.std()</span><br></pre></td></tr></tbody></table></figure><pre><code>(103.6, 298.8100399919654)</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 원본 데이터 표준화하기</span></span><br><span class="line">scaled = standard_scaler.fit_transform(x.reshape(<span class="number">-1</span>, <span class="number">1</span>))</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scaled.mean(), scaled.std()</span><br></pre></td></tr></tbody></table></figure><pre><code>(4.4408920985006264e-17, 1.0)</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">round(scaled.mean(), <span class="number">2</span>), scaled.std()  <span class="comment"># mean값 반올림</span></span><br></pre></td></tr></tbody></table></figure><pre><code>(0.0, 1.0)</code></pre><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;전처리-pre-processing&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#전처리-pre-processing&quot;&gt;&lt;/a&gt; &lt;strong&gt;전처리 (Pre-Processing)&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
      <category term="sklearn" scheme="https://hyemin-kim.github.io/tags/sklearn/"/>
    
      <category term="Machine Learning" scheme="https://hyemin-kim.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; sklearn -(0) sklearn 개요</title>
    <link href="https://hyemin-kim.github.io/2020/07/17/S-Python-sklearn0/"/>
    <id>https://hyemin-kim.github.io/2020/07/17/S-Python-sklearn0/</id>
    <published>2020-07-17T07:36:59.000Z</published>
    <updated>2020-07-17T08:23:44.120Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scikit-learn-개요"><a class="markdownIt-Anchor" href="#scikit-learn-개요"></a> <strong>scikit-learn 개요</strong></h1><p></p><ul class="markdownIt-TOC"><li><a href="#install-package"><strong>Install Package</strong></a></li><li><a href="#import-functions-from-sub-packages"><strong>Import Functions from Sub-packages</strong></a></li><li><a href="#3-steps-to-fit-model-and-do-prediction"><strong>3 Steps to Fit Model and Do Prediction</strong></a></li></ul><p></p><br><blockquote><p><a href="https://scikit-learn.org/stable/" target="_blank" rel="noopener">&lt; scikit-learn &gt; Homepage</a></p></blockquote><p>scikit-learn 패키지는 지도학습, 비지도학습 등 대부분의 머신러닝 알고리즘을 제공하고 있으며, Python에서 머신러닝을 수행할 때 굉장히 많이 쓰이는 패키지 중의 하나다</p><p><img src="/images/S-Python-sklearn0/NzXkk9.png" alt="sk_learn"></p>  <br><h2 id="install-package"><a class="markdownIt-Anchor" href="#install-package"></a> <strong>Install Package</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U scikit-learn  <span class="comment"># -U: Update</span></span><br></pre></td></tr></tbody></table></figure><pre><code>Note: you may need to restart the kernel to use updated packages.</code></pre><p>​</p><pre><code>Usage:     D:\Anaconda\python.exe -m pip install [options] &lt;requirement specifier&gt; [package-index-options] ...  D:\Anaconda\python.exe -m pip install [options] -r &lt;requirements file&gt; [package-index-options] ...  D:\Anaconda\python.exe -m pip install [options] [-e] &lt;vcs project url&gt; ...  D:\Anaconda\python.exe -m pip install [options] [-e] &lt;local project path&gt; ...  D:\Anaconda\python.exe -m pip install [options] &lt;archive url/path&gt; ...no such option: -:</code></pre><br><h2 id="import-functions-from-sub-packages"><a class="markdownIt-Anchor" href="#import-functions-from-sub-packages"></a> <strong>Import Functions from Sub-packages</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="3-steps-to-fit-model-and-do-prediction"><a class="markdownIt-Anchor" href="#3-steps-to-fit-model-and-do-prediction"></a> <strong>3 Steps to Fit Model and Do Prediction</strong></h2><p><strong>STEP 1. 모델 정의</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">model = LinearRegression()</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>STEP 2. 학습 (Fit in Training set)</strong></p><ul><li>명령어:  <em>model_name</em> <font color="red">.fit</font></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fit(x_train, y_train)</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>STEP 3. 예측 (Predict in Test set)</strong></p><ul><li>명령어: <em>model_name</em> <font color="red">.predict</font></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prediction = model.predict(x_test)</span><br></pre></td></tr></tbody></table></figure><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;scikit-learn-개요&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scikit-learn-개요&quot;&gt;&lt;/a&gt; &lt;strong&gt;scikit-learn 개요&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;m
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="sklearn" scheme="https://hyemin-kim.github.io/tags/sklearn/"/>
    
      <category term="Machine Learning" scheme="https://hyemin-kim.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Seaborn - (2) 통계 기반의 시각화</title>
    <link href="https://hyemin-kim.github.io/2020/07/03/S-Python-Seaborn2/"/>
    <id>https://hyemin-kim.github.io/2020/07/03/S-Python-Seaborn2/</id>
    <published>2020-07-03T10:18:20.000Z</published>
    <updated>2020-07-03T13:19:50.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="통계-기반의-시각화"><a class="markdownIt-Anchor" href="#통계-기반의-시각화"></a> 통계 기반의 시각화</h1><p></p><ul class="markdownIt-TOC"><li><a href="#0-%ED%86%B5%EA%B3%84-%EA%B8%B0%EB%B0%98%EC%9D%98-%EC%8B%9C%EA%B0%81%ED%99%94%EB%A5%BC-%EC%A0%9C%EA%B3%B5%ED%95%B4%EC%A3%BC%EB%8A%94-seaborn"><strong>0. 통계 기반의 시각화를 제공해주는 Seaborn</strong></a></li><li><a href="#1-countplot"><strong>1. countplot</strong></a><ul><li><a href="#1-1-%EC%84%B8%EB%A1%9C%EB%A1%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0">1-1. 세로로 그리기</a></li><li><a href="#1-2-%EA%B0%80%EB%A1%9C%EB%A1%9C-%EA%B7%B8%EB%A6%AC%EA%B8%B0">1-2. 가로로 그리기</a></li><li><a href="#1-3-%EC%83%89%EC%83%81-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%84%A4%EC%A0%95">1-3. 색상 팔레트 설정</a></li></ul></li><li><a href="#2-distplot"><strong>2. distplot</strong></a><ul><li><a href="#2-1-%EA%B8%B0%EB%B3%B8-displot">2-1. 기본 displot</a></li><li><a href="#2-2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-series%EC%9D%BC-%EA%B2%BD%EC%9A%B0">2-2. 데이터가 Series일 경우</a></li><li><a href="#2-3-rugplot">2-3. rugplot</a></li><li><a href="#2-4-kde-kernel-density">2-4. kde (kernel density)</a></li><li><a href="#2-5-%EA%B0%80%EB%A1%9C%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%98%EA%B8%B0">2-5. 가로로 표현하기</a></li><li><a href="#2-6-%EC%BB%AC%EB%9F%AC-%EB%B0%94%EA%BE%B8%EA%B8%B0">2-6. 컬러 바꾸기</a></li></ul></li><li><a href="#3-heatmap"><strong>3. heatmap</strong></a><ul><li><a href="#3-1-%EA%B8%B0%EB%B3%B8-heatmap">3-1. 기본 heatmap</a></li><li><a href="#3-2-pivot-table%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. pivot table을 활용하여 그리기</a></li><li><a href="#3-3-correlation%EC%83%81%EA%B4%80%EA%B4%80%EA%B3%84%EB%A5%BC-%EC%8B%9C%EA%B0%81%ED%99%94">3-3. correlation(상관관계)를 시각화</a></li></ul></li><li><a href="#4-pairplot"><strong>4. pairplot</strong></a><ul><li><a href="#4-1-%EA%B8%B0%EB%B3%B8-pairplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">4-1. 기본 pairplot 그리기</a></li><li><a href="#4-2-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%ED%8A%B9%EC%84%B1-%EA%B5%AC%EB%B6%84">4-2. hue 옵션으로 특성 구분</a></li><li><a href="#4-3-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%A0%81%EC%9A%A9">4-3. 컬러 팔레트 적용</a></li><li><a href="#4-4-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%A0%81%EC%9A%A9">4-4. 사이즈 적용</a></li></ul></li><li><a href="#5-violinplot"><strong>5. violinplot</strong></a><ul><li><a href="#5-1-%EA%B8%B0%EB%B3%B8-violinplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 violinplot 그리기</a></li><li><a href="#5-2-%EB%B9%84%EA%B5%90-%EB%B6%84%ED%8F%AC-%ED%99%95%EC%9D%B8">5-2. 비교 분포 확인</a></li><li><a href="#5-3-%EA%B0%80%EB%A1%9C%EB%A1%9C-%EB%89%98%EC%9D%B8-violinplot">5-3. 가로로 뉘인 violinplot</a></li><li><a href="#5-4-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%B6%84%ED%8F%AC-%EB%B9%84%EA%B5%90">5-4. hue 옵션으로 분포 비교</a></li></ul></li><li><a href="#6-lmplot"><strong>6. lmplot</strong></a><ul><li><a href="#6-1-%EA%B8%B0%EB%B3%B8-lmplot">6-1. 기본 lmplot</a></li><li><a href="#6-2-hue-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%8B%A4%EC%A4%91-%EC%84%A0%ED%98%95%EA%B4%80%EA%B3%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">6-2. hue 옵션으로 다중 선형관계 그리기</a></li><li><a href="#6-3-col-%EC%98%B5%EC%85%98%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84%EB%A5%BC-%EB%B3%84%EB%8F%84%EB%A1%9C-%EA%B7%B8%EB%A0%A4%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8B%A4">6-3. col 옵션을 추가하여 그래프를 별도로 그려볼 수 있다</a></li></ul></li><li><a href="#7-relplot"><strong>7. relplot</strong></a><ul><li><a href="#7-1-%EA%B8%B0%EB%B3%B8-relplot">7-1. 기본 relplot</a></li><li><a href="#7-2-col-%EC%98%B5%EC%85%98%EC%9C%BC%EB%A1%9C-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B6%84%ED%95%A0">7-2. col 옵션으로 그래프 분할</a></li><li><a href="#7-3-row%EC%99%80-column%EC%97%90-%ED%91%9C%EA%B8%B0%ED%95%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0-column-%EC%84%A0%ED%83%9D">7-3. row와 column에 표기할 데이터 column 선택</a></li><li><a href="#7-4-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8-%EC%A0%81%EC%9A%A9">7-4. 컬러 팔레트 적용</a></li></ul></li><li><a href="#8-jointplot"><strong>8. jointplot</strong></a><ul><li><a href="#8-1-%EA%B8%B0%EB%B3%B8-jointplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-1. 기본 jointplot 그리기</a></li><li><a href="#8-2-%EC%84%A0%ED%98%95%EA%B4%80%EA%B3%84%EB%A5%BC-%ED%91%9C%ED%98%84%ED%95%98%EB%8A%94-regression-%EB%9D%BC%EC%9D%B8-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-2. 선형관계를 표현하는 regression 라인 그리기</a></li><li><a href="#8-3-hex-%EB%B0%80%EB%8F%84-%EB%B3%B4%EA%B8%B0">8-3. hex 밀도 보기</a></li><li><a href="#8-4-%EB%93%B1%EA%B3%A0%EC%84%A0-%EB%AA%A8%EC%96%91%EC%9C%BC%EB%A1%9C-%EB%B0%80%EC%A7%91%EB%8F%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">8-4. 등고선 모양으로 밀집도 확인하기</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure> <br> <h2 id="0-통계-기반의-시각화를-제공해주는-seaborn"><a class="markdownIt-Anchor" href="#0-통계-기반의-시각화를-제공해주는-seaborn"></a> <strong>0. 통계 기반의 시각화를 제공해주는 Seaborn</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/api.html" target="_blank" rel="noopener">Seaborn 공식 도큐먼트</a></p></blockquote><p>seaborn 라이브러리가  매력적인 이유는 바로 <strong>통계 차트</strong>다.</p><p>이번 실습에서는 seaborn의 다양한 통계 차트 중 대표적인 차트 몇 개를 뽑아서 다뤄볼 예정이다.</p><p>그럼 먼저 실습에 사용되는 Dataset을 한번 살펴볼게요.</p> <br> <p><strong>Dataset — "Titanic"</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>survived</th>      <th>pclass</th>      <th>sex</th>      <th>age</th>      <th>sibsp</th>      <th>parch</th>      <th>fare</th>      <th>embarked</th>      <th>class</th>      <th>who</th>      <th>adult_male</th>      <th>deck</th>      <th>embark_town</th>      <th>alive</th>      <th>alone</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>7.2500</td>      <td>S</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>False</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>71.2833</td>      <td>C</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>C</td>      <td>Cherbourg</td>      <td>yes</td>      <td>False</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>3</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>7.9250</td>      <td>S</td>      <td>Third</td>      <td>woman</td>      <td>False</td>      <td>NaN</td>      <td>Southampton</td>      <td>yes</td>      <td>True</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>53.1000</td>      <td>S</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>C</td>      <td>Southampton</td>      <td>yes</td>      <td>False</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>8.0500</td>      <td>S</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>True</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>886</th>      <td>0</td>      <td>2</td>      <td>male</td>      <td>27.0</td>      <td>0</td>      <td>0</td>      <td>13.0000</td>      <td>S</td>      <td>Second</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>True</td>    </tr>    <tr>      <th>887</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>19.0</td>      <td>0</td>      <td>0</td>      <td>30.0000</td>      <td>S</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>B</td>      <td>Southampton</td>      <td>yes</td>      <td>True</td>    </tr>    <tr>      <th>888</th>      <td>0</td>      <td>3</td>      <td>female</td>      <td>NaN</td>      <td>1</td>      <td>2</td>      <td>23.4500</td>      <td>S</td>      <td>Third</td>      <td>woman</td>      <td>False</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>False</td>    </tr>    <tr>      <th>889</th>      <td>1</td>      <td>1</td>      <td>male</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>30.0000</td>      <td>C</td>      <td>First</td>      <td>man</td>      <td>True</td>      <td>C</td>      <td>Cherbourg</td>      <td>yes</td>      <td>True</td>    </tr>    <tr>      <th>890</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>32.0</td>      <td>0</td>      <td>0</td>      <td>7.7500</td>      <td>Q</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Queenstown</td>      <td>no</td>      <td>True</td>    </tr>  </tbody></table></div><p>891 rows × 15 columns</p></div><br><ul><li><p>survived: 생존여부</p></li><li><p>pclass: 좌석등급 (숫자)</p></li><li><p>sex: 성별</p></li><li><p>age: 나이</p></li><li><p>sibsp: 형제자매 + 배우자 숫자</p></li><li><p>parch: 부모 + 자식 숫자</p></li><li><p>fare: 요금</p></li><li><p>embarked: 탑승 항구</p></li><li><p>class: 좌석등급 (영문)</p></li><li><p>who: 사람 구분</p></li><li><p>deck: 데크</p></li><li><p>embark_town: 탑승 항구 (영문)</p></li><li><p>alive: 생존여부 (영문)</p></li><li><p>alone: 혼자인지 여부</p><br></li></ul><p><strong>Dataset — "tips"</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">'tips'</span>)</span><br><span class="line">tips</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>239</th>      <td>29.03</td>      <td>5.92</td>      <td>Male</td>      <td>No</td>      <td>Sat</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>240</th>      <td>27.18</td>      <td>2.00</td>      <td>Female</td>      <td>Yes</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>241</th>      <td>22.67</td>      <td>2.00</td>      <td>Male</td>      <td>Yes</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>242</th>      <td>17.82</td>      <td>1.75</td>      <td>Male</td>      <td>No</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>243</th>      <td>18.78</td>      <td>3.00</td>      <td>Female</td>      <td>No</td>      <td>Thur</td>      <td>Dinner</td>      <td>2</td>    </tr>  </tbody></table><p>244 rows × 7 columns</p></div><br><ul><li><p>total_bill: 총 합계 요금표</p></li><li><p>tip: 팁</p></li><li><p>sex: 성별</p></li><li><p>smoker: 흡연자 여부</p></li><li><p>day: 요일</p></li><li><p>time: 식사 시간</p></li><li><p>size: 식사 인원</p><br></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 배경 설정</span></span><br><span class="line">sns.set(style=<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure><br>  <h2 id="1-countplot"><a class="markdownIt-Anchor" href="#1-countplot"></a> <strong>1. countplot</strong></h2><p>항목별 갯수를 세어주는 <code>countplot</code></p><ul><li>해당 column을 구성하고 있는 value들을 자동으로 구분하여 보여준다</li></ul><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.countplot.html" target="_blank" rel="noopener">&lt;sns.countplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.countplot</strong> ( <em>x=None, y=None, hue=None, data=None, color=None, palette=None</em> )</p></blockquote> <br> <h3 id="1-1-세로로-그리기"><a class="markdownIt-Anchor" href="#1-1-세로로-그리기"></a> 1-1. 세로로 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_26_0.png" alt="png"></p><br><h3 id="1-2-가로로-그리기"><a class="markdownIt-Anchor" href="#1-2-가로로-그리기"></a> 1-2. 가로로 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(y=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_29_0.png" alt="png"></p><br><h3 id="1-3-색상-팔레트-설정"><a class="markdownIt-Anchor" href="#1-3-색상-팔레트-설정"></a> 1-3. 색상 팔레트 설정</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">'class'</span>, hue=<span class="string">'who'</span>, palette=<span class="string">'copper'</span>, data= titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_32_0.png" alt="png"></p><br><br><h2 id="2-distplot"><a class="markdownIt-Anchor" href="#2-distplot"></a> <strong>2. distplot</strong></h2><p>matplotlib의 <code>hist</code>그래프와 <code>kdeplot</code>을 통합한 그래프다.<br><strong>분포</strong>와 <strong>밀도</strong>를 확인할 수 있음</p><br><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html?highlight=distplot#seaborn.distplot" target="_blank" rel="noopener">&lt;sns.distplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.displot</strong> ( <em>a, hist=True, kde=True, rug=False, vertical=False, color=None</em> )</p><ul><li>hist: histogram</li><li>kde: kernel density estimate</li><li>rug: rugplot</li><li>vertical: If True, observed values are on y-axis</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 샘플 데이터 생성</span></span><br><span class="line">x = np.random.randn(<span class="number">100</span>)</span><br><span class="line">x</span><br></pre></td></tr></tbody></table></figure><pre><code>array([-3.39765920e-01, -1.48664049e+00, -5.57926444e-01,  3.25206560e-01,       -7.46665762e-01, -3.10926812e-01, -2.14536012e+00,  1.25905620e+00,       -2.07806423e-01,  5.56377038e-01, -2.20574498e+00, -1.15138577e-01,       -3.32417471e-01,  1.13927613e-01, -7.29559442e-01, -1.31243715e+00,       -8.27477111e-01, -1.24455099e+00, -5.44035731e-02, -1.85399773e+00,       -1.62571613e+00,  3.89312791e-01,  1.26815698e+00, -7.43355761e-01,       -1.34113997e+00,  2.67291801e-02, -4.74142344e-01, -1.07662894e+00,       -2.35607451e+00,  1.90337236e-01, -1.18577255e+00, -1.23238300e+00,        9.39298755e-01, -2.69078751e-01, -3.50418097e-01,  1.92109121e+00,       -1.46520490e-01,  3.90810577e-01, -6.60511307e-01, -1.46288431e+00,        1.26314685e+00,  2.38384651e-01,  8.03730080e-01,  2.83340226e-01,       -1.24219159e+00, -1.50458389e+00, -1.60213592e-01,  3.97086657e-01,        1.27321390e-01, -1.13722876e+00, -1.48448425e+00,  1.36136226e+00,       -2.34669327e-01, -1.32679409e+00,  1.59032718e+00,  7.53779845e-01,       -7.48815568e-01,  7.34822673e-03,  5.57358372e-01,  1.78429993e+00,       -1.50510591e+00, -3.87983571e-01, -7.57372493e-01,  6.25354827e-01,        1.44857563e-01,  7.78608476e-01, -6.61441801e-02, -1.24836018e+00,        1.77522984e+00,  1.60497019e-01, -1.18893624e+00,  1.93951152e+00,       -9.34504796e-01,  1.82000588e+00, -1.91594654e+00, -1.13118210e+00,       -4.13371342e-01, -5.07021131e-01,  1.57792370e+00, -2.52509848e+00,        1.86695906e-01, -1.18412859e+00,  1.49572473e-01, -3.53669860e-01,        1.38877682e+00,  2.53212949e-02,  7.79387552e-01, -7.41508306e-01,        4.10007279e-01,  1.96517288e-02, -5.69215198e-01,  1.45113980e+00,       -8.80722624e-01,  1.35468793e+00, -1.67677998e-03, -1.14952039e+00,        8.90718244e-01, -4.10411520e-01,  6.17620908e-01,  2.96993057e-01])</code></pre><br><h3 id="2-1-기본-displot"><a class="markdownIt-Anchor" href="#2-1-기본-displot"></a> 2-1. 기본 displot</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x)  <span class="comment"># x: numpy array</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_43_0.png" alt="png"></p><br><h3 id="2-2-데이터가-series일-경우"><a class="markdownIt-Anchor" href="#2-2-데이터가-series일-경우"></a> 2-2. 데이터가 Series일 경우</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = pd.Series(x, name=<span class="string">'x variable'</span>)</span><br><span class="line">x</span><br></pre></td></tr></tbody></table></figure><pre><code>0    -0.3397661    -1.4866402    -0.5579263     0.3252074    -0.746666        ...   95   -1.14952096    0.89071897   -0.41041298    0.61762199    0.296993Name: x variable, Length: 100, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x)  <span class="comment"># x: Series</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_47_0.png" alt="png"></p><p>x가 Seires일 때는:  그래프에서 x label이 자동으로 Series 이름(column name) 으로 나타남</p><br>  <h3 id="2-3-rugplot"><a class="markdownIt-Anchor" href="#2-3-rugplot"></a> 2-3. rugplot</h3><p>데이터 위치를 x축 위에 <strong>작은 선분(rug)으로 나타내어</strong> 데이터들의 위치 밒 분포를 보여준다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, rug=<span class="literal">True</span>, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_52_0.png" alt="png"></p><br><h3 id="2-4-kde-kernel-density"><a class="markdownIt-Anchor" href="#2-4-kde-kernel-density"></a> 2-4. kde (kernel density)</h3><p>kde 는 histogram보다 <strong>부드러운 형태의 분포 곧선</strong>을 보여주는 방법</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, rug=<span class="literal">False</span>, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_56_0.png" alt="png"></p><br><h3 id="2-5-가로로-표현하기"><a class="markdownIt-Anchor" href="#2-5-가로로-표현하기"></a> 2-5. 가로로 표현하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, vertical=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_59_0.png" alt="png"></p><br><h3 id="2-6-컬러-바꾸기"><a class="markdownIt-Anchor" href="#2-6-컬러-바꾸기"></a> 2-6. 컬러 바꾸기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, color=<span class="string">'r'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_62_0.png" alt="png"></p><br><br><h2 id="3-heatmap"><a class="markdownIt-Anchor" href="#3-heatmap"></a> <strong>3. heatmap</strong></h2><p>색상으로 표현할 수 있는 다양한 정보를 <strong>일정한 이미지위에 열분포 형태의 비쥬얼한 그래픽</strong>으로 출력하는 것이 특정이다</p><p><strong>주로 활용되는 경우:</strong></p><ol><li>pivot table의 데이터를 시각화할 때</li><li>데이터의 상관관계를 살펴볼 때</li></ol><br><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.heatmap.html?highlight=heatmap#seaborn.heatmap" target="_blank" rel="noopener"> &lt;sns.heatmap&gt; Document</a></p></blockquote><blockquote><p><strong>sns.heatmap</strong> ( <em>data, annot=None, cmap=None</em> )</p><ul><li>annot: If True, write the data value in each cell</li></ul></blockquote>  <br><h3 id="3-1-기본-heatmap"><a class="markdownIt-Anchor" href="#3-1-기본-heatmap"></a> 3-1. 기본 heatmap</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uniform_data = np.random.rand(<span class="number">10</span>, <span class="number">12</span>)</span><br><span class="line">sns.heatmap(uniform_data, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_72_0.png" alt="png"></p><p>컬러가 진할수록 숫자가 0에 가깝고, 연할수록 1에 가깝다</p>  <br><h3 id="3-2-pivot-table을-활용하여-그리기"><a class="markdownIt-Anchor" href="#3-2-pivot-table을-활용하여-그리기"></a> 3-2. pivot table을 활용하여 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>239</th>      <td>29.03</td>      <td>5.92</td>      <td>Male</td>      <td>No</td>      <td>Sat</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>240</th>      <td>27.18</td>      <td>2.00</td>      <td>Female</td>      <td>Yes</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>241</th>      <td>22.67</td>      <td>2.00</td>      <td>Male</td>      <td>Yes</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>242</th>      <td>17.82</td>      <td>1.75</td>      <td>Male</td>      <td>No</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>243</th>      <td>18.78</td>      <td>3.00</td>      <td>Female</td>      <td>No</td>      <td>Thur</td>      <td>Dinner</td>      <td>2</td>    </tr>  </tbody></table><p>244 rows × 7 columns</p></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pivot = tips.pivot_table(index=<span class="string">'day'</span>, columns=<span class="string">'size'</span>, values=<span class="string">'tip'</span>)</span><br><span class="line">pivot</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th>size</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>    </tr>    <tr>      <th>day</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Thur</th>      <td>1.83</td>      <td>2.442500</td>      <td>2.692500</td>      <td>4.218000</td>      <td>5.000000</td>      <td>5.3</td>    </tr>    <tr>      <th>Fri</th>      <td>1.92</td>      <td>2.644375</td>      <td>3.000000</td>      <td>4.730000</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>Sat</th>      <td>1.00</td>      <td>2.517547</td>      <td>3.797778</td>      <td>4.123846</td>      <td>3.000000</td>      <td>NaN</td>    </tr>    <tr>      <th>Sun</th>      <td>NaN</td>      <td>2.816923</td>      <td>3.120667</td>      <td>4.087778</td>      <td>4.046667</td>      <td>5.0</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(pivot, cmap=<span class="string">'Blues'</span>, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_78_0.png" alt="png"></p><br><h3 id="3-3-correlation상관관계를-시각화"><a class="markdownIt-Anchor" href="#3-3-correlation상관관계를-시각화"></a> 3-3. correlation(상관관계)를 시각화</h3><p><strong>corr()</strong> 함수는 데이터의 상관관계를 보여줌</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic.corr()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>survived</th>      <th>pclass</th>      <th>age</th>      <th>sibsp</th>      <th>parch</th>      <th>fare</th>      <th>adult_male</th>      <th>alone</th>    </tr>  </thead>  <tbody>    <tr>      <th>survived</th>      <td>1.000000</td>      <td>-0.338481</td>      <td>-0.077221</td>      <td>-0.035322</td>      <td>0.081629</td>      <td>0.257307</td>      <td>-0.557080</td>      <td>-0.203367</td>    </tr>    <tr>      <th>pclass</th>      <td>-0.338481</td>      <td>1.000000</td>      <td>-0.369226</td>      <td>0.083081</td>      <td>0.018443</td>      <td>-0.549500</td>      <td>0.094035</td>      <td>0.135207</td>    </tr>    <tr>      <th>age</th>      <td>-0.077221</td>      <td>-0.369226</td>      <td>1.000000</td>      <td>-0.308247</td>      <td>-0.189119</td>      <td>0.096067</td>      <td>0.280328</td>      <td>0.198270</td>    </tr>    <tr>      <th>sibsp</th>      <td>-0.035322</td>      <td>0.083081</td>      <td>-0.308247</td>      <td>1.000000</td>      <td>0.414838</td>      <td>0.159651</td>      <td>-0.253586</td>      <td>-0.584471</td>    </tr>    <tr>      <th>parch</th>      <td>0.081629</td>      <td>0.018443</td>      <td>-0.189119</td>      <td>0.414838</td>      <td>1.000000</td>      <td>0.216225</td>      <td>-0.349943</td>      <td>-0.583398</td>    </tr>    <tr>      <th>fare</th>      <td>0.257307</td>      <td>-0.549500</td>      <td>0.096067</td>      <td>0.159651</td>      <td>0.216225</td>      <td>1.000000</td>      <td>-0.182024</td>      <td>-0.271832</td>    </tr>    <tr>      <th>adult_male</th>      <td>-0.557080</td>      <td>0.094035</td>      <td>0.280328</td>      <td>-0.253586</td>      <td>-0.349943</td>      <td>-0.182024</td>      <td>1.000000</td>      <td>0.404744</td>    </tr>    <tr>      <th>alone</th>      <td>-0.203367</td>      <td>0.135207</td>      <td>0.198270</td>      <td>-0.584471</td>      <td>-0.583398</td>      <td>-0.271832</td>      <td>0.404744</td>      <td>1.000000</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.heatmap(titanic.corr(), annot=<span class="literal">True</span>, cmap=<span class="string">'YlGnBu'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_83_0.png" alt="png"></p><br><br><h2 id="4-pairplot"><a class="markdownIt-Anchor" href="#4-pairplot"></a> <strong>4. pairplot</strong></h2><p>pairplot은 grid 형태로 각 <strong>집합의 조합에 대해 히스토그램과 분포도</strong>를 그린다.<br>(숫자형 column에 대해서만 그려줌)</p><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.pairplot.html?highlight=pairplot#seaborn.pairplot" target="_blank" rel="noopener">&lt;sns.pairplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.pairplot</strong> ( <em>data, hue=None, palette=None, height=2.5</em> )</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>  </tbody></table></div><br><h3 id="4-1-기본-pairplot-그리기"><a class="markdownIt-Anchor" href="#4-1-기본-pairplot-그리기"></a> 4-1. 기본 pairplot 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.pairplot(tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_94_0.png" alt="png"></p><br><h3 id="4-2-hue-옵션으로-특성-구분"><a class="markdownIt-Anchor" href="#4-2-hue-옵션으로-특성-구분"></a> 4-2. hue 옵션으로 특성 구분</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_97_0.png" alt="png"></p><br><h3 id="4-3-컬러-팔레트-적용"><a class="markdownIt-Anchor" href="#4-3-컬러-팔레트-적용"></a> 4-3. 컬러 팔레트 적용</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>, palette=<span class="string">'rainbow'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_100_0.png" alt="png"></p><br><h3 id="4-4-사이즈-적용"><a class="markdownIt-Anchor" href="#4-4-사이즈-적용"></a> 4-4. 사이즈 적용</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.pairplot(tips, hue=<span class="string">'size'</span>, palette=<span class="string">'rainbow'</span>, height=<span class="number">4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_103_0.png" alt="png"></p><br><br><h2 id="5-violinplot"><a class="markdownIt-Anchor" href="#5-violinplot"></a> <strong>5. violinplot</strong></h2><p>마이올린처럼 생긴 violinplot다.</p><p>column에 대한 <strong>데이터의 비교 분포도</strong>를 확인할 수 있다.</p><ul><li>곡선형 부분 (뚱뚱한 부분)은 데이터의 분포를 나타냄</li><li>양쪽 끝 뾰족한 부분은 데이터의 최소값과 최대값을 나타냄</li></ul><br><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.violinplot.html" target="_blank" rel="noopener">&lt;sns.violinplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.violinplot</strong> ( <em>x=None. y=None, hue=None, data=None, split=False</em> )</p><ul><li><strong>split:</strong> When using hue nesting with a variable that takes two levels, setting split to True will draw half of a violin for each level. This can make it easier to directly compare the distributions.</li></ul></blockquote> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>  </tbody></table></div><br><h3 id="5-1-기본-violinplot-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-violinplot-그리기"></a> 5-1. 기본 violinplot 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(x=tips[<span class="string">'total_bill'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_113_0.png" alt="png"></p><br><h3 id="5-2-비교-분포-확인"><a class="markdownIt-Anchor" href="#5-2-비교-분포-확인"></a> 5-2. 비교 분포 확인</h3><p>x, y축을 지정해줌으로써 바이올린을 분할하여 <strong>비교 분포</strong>를 볼 수 있다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_117_0.png" alt="png"></p><br><h3 id="5-3-가로로-뉘인-violinplot"><a class="markdownIt-Anchor" href="#5-3-가로로-뉘인-violinplot"></a> 5-3. 가로로 뉘인 violinplot</h3><ul><li>x축, y축 변경</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(y=<span class="string">'day'</span>, x=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_120_0.png" alt="png"></p><br><h3 id="5-4-hue-옵션으로-분포-비교"><a class="markdownIt-Anchor" href="#5-4-hue-옵션으로-분포-비교"></a> 5-4. hue 옵션으로 분포 비교</h3><p>사실 hue옵션을 사용하지 않으면 바이올린이 대칭이기 때문에 분포의 큰 의미는 없다.<br>하지만, hue옵션을 주면, <strong>단일 column에 대한 바이올린 모양의 비교</strong>를 할 수 있다.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, hue=<span class="string">'smoker'</span>, data=tips, palette=<span class="string">'muted'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_124_0.png" alt="png"></p><br><p><strong>split 옵션으로 바이올린을 합쳐서 볼 수 있다</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">'day'</span>, y=<span class="string">'total_bill'</span>, hue=<span class="string">'smoker'</span>, data=tips, palette=<span class="string">'muted'</span>, split=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_127_0.png" alt="png"></p><p>violinplot은 이런 경우에 많이 활용된다</p><p><br> <br></p><h2 id="6-lmplot"><a class="markdownIt-Anchor" href="#6-lmplot"></a> <strong>6. lmplot</strong></h2><p>lmport (<em>initial: 소문자 L</em>) 은 column간의 <strong>선형관계를 확인하기에 용이한 차트</strong>임.<br>또한, <strong>outlier</strong>도 같이 짐작해 볼 수 있다.</p><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.lmplot.html" target="_blank" rel="noopener">&lt;sns.lmplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.lmplot</strong> ( <em>x, y, data, hue=None, col=None, col_wrap=None, row=None, height=5</em> )</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>  </tbody></table></div><br><h3 id="6-1-기본-lmplot"><a class="markdownIt-Anchor" href="#6-1-기본-lmplot"></a> 6-1. 기본 lmplot</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_138_0.png" alt="png"></p><br><h3 id="6-2-hue-옵션으로-다중-선형관계-그리기"><a class="markdownIt-Anchor" href="#6-2-hue-옵션으로-다중-선형관계-그리기"></a> 6-2. hue 옵션으로 다중 선형관계 그리기</h3><p>아래의 그래프를 통하여 비흡연자가, 흡연자 대비 좀 더 <strong>가파른 선형관계</strong>를 가지는 것을 볼 수 있다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'smoker'</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_142_0.png" alt="png"></p><br><h3 id="6-3-col-옵션을-추가하여-그래프를-별도로-그려볼-수-있다"><a class="markdownIt-Anchor" href="#6-3-col-옵션을-추가하여-그래프를-별도로-그려볼-수-있다"></a> 6-3. col 옵션을 추가하여 그래프를 별도로 그려볼 수 있다</h3><p>또한, <code>col_wrap</code>으로 한 줄에 표기할 column의 갯수를 명시할 수 있다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'smoker'</span>, col=<span class="string">'day'</span>, col_wrap=<span class="number">2</span>, data=tips, height=<span class="number">6</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_146_0.png" alt="png"></p><br><br><h2 id="7-relplot"><a class="markdownIt-Anchor" href="#7-relplot"></a> <strong>7. relplot</strong></h2><p>두 column간 상관관계를 보지만 <code>lmport</code>처럼 선형관계를 따로 그려주지 않다</p><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.relplot.html?highlight=relplot#seaborn.relplot" target="_blank" rel="noopener">&lt;sns.replot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.relplot</strong> ( <em>x, y, data, hue=None, col=None, row=None, height=5, palette=None</em> )</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>  </tbody></table></div><br>  <h3 id="7-1-기본-relplot"><a class="markdownIt-Anchor" href="#7-1-기본-relplot"></a> 7-1. 기본 relplot</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_157_0.png" alt="png"></p><br><h3 id="7-2-col-옵션으로-그래프-분할"><a class="markdownIt-Anchor" href="#7-2-col-옵션으로-그래프-분할"></a> 7-2. col 옵션으로 그래프 분할</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_160_0.png" alt="png"></p><br><h3 id="7-3-row와-column에-표기할-데이터-column-선택"><a class="markdownIt-Anchor" href="#7-3-row와-column에-표기할-데이터-column-선택"></a> 7-3. row와 column에 표기할 데이터 column 선택</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>,hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, row=<span class="string">'sex'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_163_0.png" alt="png"></p><br><h3 id="7-4-컬러-팔레트-적용"><a class="markdownIt-Anchor" href="#7-4-컬러-팔레트-적용"></a> 7-4. 컬러 팔레트 적용</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, hue=<span class="string">'day'</span>, col=<span class="string">'time'</span>, row=<span class="string">'sex'</span>, data=tips, palette=<span class="string">'CMRmap_r'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_166_0.png" alt="png"></p><br><br><h2 id="8-jointplot"><a class="markdownIt-Anchor" href="#8-jointplot"></a> <strong>8. jointplot</strong></h2><p>jointplot은 scatter(산점도)와 histogram(분포)을 동시에 그려줌.(숫자형 데이터만)</p><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.jointplot.html?highlight=jointplot#seaborn.jointplot" target="_blank" rel="noopener">&lt;sns.jointplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.jointplot</strong> ( <em>x, y, data=None, kind=‘scatter’, height=6</em> )</p><ul><li><strong>kind</strong>: kind of plot to draw. {‘scatter’, ‘reg’, ‘resid’, ‘kde’, ‘hex’}</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>  </tbody></table></div><br>  <h3 id="8-1-기본-jointplot-그리기"><a class="markdownIt-Anchor" href="#8-1-기본-jointplot-그리기"></a> 8-1. 기본 jointplot 그리기</h3><p><strong>default 로 "scatter plot"을 그린다  (kind=‘scatter’)</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(x=<span class="string">'total_bill'</span>, y=<span class="string">'tip'</span>, data=tips)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_178_0.png" alt="png"></p><br><h3 id="8-2-선형관계를-표현하는-regression-라인-그리기"><a class="markdownIt-Anchor" href="#8-2-선형관계를-표현하는-regression-라인-그리기"></a> 8-2. 선형관계를 표현하는 regression 라인 그리기</h3><p><strong>옵션: kind='reg’</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'total_bill'</span>, <span class="string">'tip'</span>, data=tips, kind=<span class="string">'reg'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_182_0.png" alt="png"></p><br><h3 id="8-3-hex-밀도-보기"><a class="markdownIt-Anchor" href="#8-3-hex-밀도-보기"></a> 8-3. hex 밀도 보기</h3><p><strong>옵션: kind='hex’</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'total_bill'</span>, <span class="string">'tip'</span>, data=tips, kind=<span class="string">'hex'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_186_0.png" alt="png"></p><br><h3 id="8-4-등고선-모양으로-밀집도-확인하기"><a class="markdownIt-Anchor" href="#8-4-등고선-모양으로-밀집도-확인하기"></a> 8-4. 등고선 모양으로 밀집도 확인하기</h3><p><strong>kind=‘kde’</strong> 옵션으로 데이터의 밀집도를 보다 부드러운 선으로 확인할 수 있다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iris = sns.load_dataset(<span class="string">'iris'</span>)</span><br><span class="line">iris</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal_length</th>      <th>sepal_width</th>      <th>petal_length</th>      <th>petal_width</th>      <th>species</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>      <td>setosa</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>      <td>setosa</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>      <td>setosa</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>      <td>setosa</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>      <td>setosa</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>145</th>      <td>6.7</td>      <td>3.0</td>      <td>5.2</td>      <td>2.3</td>      <td>virginica</td>    </tr>    <tr>      <th>146</th>      <td>6.3</td>      <td>2.5</td>      <td>5.0</td>      <td>1.9</td>      <td>virginica</td>    </tr>    <tr>      <th>147</th>      <td>6.5</td>      <td>3.0</td>      <td>5.2</td>      <td>2.0</td>      <td>virginica</td>    </tr>    <tr>      <th>148</th>      <td>6.2</td>      <td>3.4</td>      <td>5.4</td>      <td>2.3</td>      <td>virginica</td>    </tr>    <tr>      <th>149</th>      <td>5.9</td>      <td>3.0</td>      <td>5.1</td>      <td>1.8</td>      <td>virginica</td>    </tr>  </tbody></table><p>150 rows × 5 columns</p></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(<span class="string">'sepal_width'</span>, <span class="string">'petal_length'</span>, data=iris, kind=<span class="string">'kde'</span>, color=<span class="string">'g'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn2/output_192_0.png" alt="png"></p><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      countplot, distplot, heatmap, pairplot, violinplot, lmplot, relplot, jointplot
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="시각화" scheme="https://hyemin-kim.github.io/tags/%EC%8B%9C%EA%B0%81%ED%99%94/"/>
    
      <category term="Seaborn" scheme="https://hyemin-kim.github.io/tags/Seaborn/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Seaborn - (1) Seaborn을 활용한 다양한 그래프 그리기</title>
    <link href="https://hyemin-kim.github.io/2020/07/03/S-Python-Seaborn1/"/>
    <id>https://hyemin-kim.github.io/2020/07/03/S-Python-Seaborn1/</id>
    <published>2020-07-03T10:14:58.000Z</published>
    <updated>2020-07-03T13:19:31.789Z</updated>
    
    <content type="html"><![CDATA[<h1 id="seaborn을-활용한-다양한-그래프-그리기"><a class="markdownIt-Anchor" href="#seaborn을-활용한-다양한-그래프-그리기"></a> Seaborn을 활용한 다양한 그래프 그리기</h1><p></p><ul class="markdownIt-TOC"><li><a href="#0-seaborn-%EA%B0%9C%EC%9A%94"><strong>0. Seaborn 개요</strong></a><ul><li><a href="#0-1-seaborn-%EC%97%90%EC%84%9C%EB%A7%8C-%EC%A0%9C%EA%B3%B5%EB%90%98%EB%8A%94-%ED%86%B5%EA%B3%84-%EA%B8%B0%EB%B0%98-plot">0-1. seaborn 에서만 제공되는 통계 기반 plot</a></li><li><a href="#0-2-%EC%95%84%EB%A6%84%EB%8B%A4%EC%9A%B4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">0-2. 아름다운 스타일링</a></li><li><a href="#0-3-%EC%BB%AC%EB%9F%AC-%ED%8C%94%EB%A0%88%ED%8A%B8">0-3. 컬러 팔레트</a></li><li><a href="#0-4-pandas-%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%94%84%EB%A0%88%EC%9E%84%EA%B3%BC-%EB%86%92%EC%9D%80-%ED%98%B8%ED%99%98%EC%84%B1">0-4. pandas 데이터프레임과 높은 호환성</a></li></ul></li><li><a href="#1-scatterplot"><strong>1. Scatterplot</strong></a><ul><li><a href="#1-1-x-y-color-area-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">1-1. x, y, color, area 설정하기</a></li><li><a href="#1-2-cmap%EA%B3%BC-alpha">1-2. cmap과 alpha</a></li></ul></li><li><a href="#2-barplot-barhplot"><strong>2. Barplot, Barhplot</strong></a><ul><li><a href="#2-1-%EA%B8%B0%EB%B3%B8-barplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-1. 기본 Barplot 그리기</a></li><li><a href="#2-2-%EA%B8%B0%EB%B3%B8-barhplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-2. 기본 Barhplot 그리기</a></li><li><a href="#2-3-barplot%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-3. Barplot에서 비교 그래프 그리기</a></li></ul></li><li><a href="#3-line-plot"><strong>3. Line Plot</strong></a><ul><li><a href="#3-1-%EA%B8%B0%EB%B3%B8-lineplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-1. 기본 lineplot 그리기</a></li><li><a href="#3-2-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. 2개 이상의 그래프 그리기</a></li><li><a href="#3-3-%EB%A7%88%EC%BB%A4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-3. 마커 스타일링</a></li><li><a href="#3-4-%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0">3-4. 라인 스타일 변경하기</a></li></ul></li><li><a href="#4-areaplot-filled-area"><strong>4. Areaplot (Filled Area)</strong></a></li><li><a href="#5histogram"><strong>5.Histogram</strong></a><ul><li><a href="#5-1-%EA%B8%B0%EB%B3%B8-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 Histogram 그리기</a></li><li><a href="#5-2-%EB%8B%A4%EC%A4%91-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-2. 다중 Histogram 그리기</a></li></ul></li><li><a href="#6-pie-chart"><strong>6. Pie Chart</strong></a></li><li><a href="#7-box-plot"><strong>7. Box Plot</strong></a><ul><li><a href="#7-1-%EA%B8%B0%EB%B3%B8-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-1. 기본 박스플롯 생성</a></li><li><a href="#7-2-%EB%8B%A4%EC%A4%91-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-2. 다중 박스플롯 생성</a></li><li><a href="#7-3-box-plot-%EC%B6%95-%EB%B0%94%EA%BE%B8%EA%B8%B0">7-3. Box Plot 축 바꾸기</a></li><li><a href="#7-4-outlier-%EB%A7%88%EC%BB%A4-%EC%8B%AC%EB%B3%BC%EA%B3%BC-%EC%BB%AC%EB%9F%AC-%EB%B3%80%EA%B2%BD">7-4. Outlier 마커 심볼과 컬러 변경</a></li></ul></li></ul><p></p><br><blockquote><p><em><strong>reference:</strong></em></p><ul><li><a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">pyplot 공식 도튜먼트 살펴보기</a></li><li><a href="https://seaborn.pydata.org/" target="_blank" rel="noopener">seaborn 공식 도큐먼트 살펴보기</a></li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># seaborn</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="0-seaborn-개요"><a class="markdownIt-Anchor" href="#0-seaborn-개요"></a> <strong>0. Seaborn 개요</strong></h2><p>seaborn은 matplotlib을 더 사용하게 쉽게 해주는 라이브러리다.<br>matplotlib으로 대부분의 시각화는 가능하지만, 다음과 같은 이유로 많은 사람들이 <code>seaborn</code>을 선호한다.</p><blockquote><p><strong>비교:</strong> <a href="https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib2/">matplotlib을 활용한 다양한 그래프 그리기</a></p></blockquote> <br> <h3 id="0-1-seaborn-에서만-제공되는-통계-기반-plot"><a class="markdownIt-Anchor" href="#0-1-seaborn-에서만-제공되는-통계-기반-plot"></a> 0-1. seaborn 에서만 제공되는 통계 기반 plot</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>(1) violinplot</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'violin plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_14_0.png" alt="png"></p><br><p><strong>(2) countplot</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(tips[<span class="string">'day'</span>])</span><br><span class="line">plt.title(<span class="string">'countplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_17_0.png" alt="png"></p><br><p><strong>(3) relplot</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">'tip'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'relplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_20_0.png" alt="png"></p><br><p><strong>(4) lmplot</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.lmplot(x=<span class="string">'tip'</span>, y=<span class="string">'total_bill'</span>, data=tips)</span><br><span class="line">plt.title(<span class="string">'lmplot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_23_0.png" alt="png"></p><br><p><strong>(5) heatmap</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.title(<span class="string">'heatmap'</span>)</span><br><span class="line">sns.heatmap(tips.corr(), annot=<span class="literal">True</span>, linewidths=<span class="number">1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_26_0.png" alt="png"></p><br><h3 id="0-2-아름다운-스타일링"><a class="markdownIt-Anchor" href="#0-2-아름다운-스타일링"></a> 0-2. 아름다운 스타일링</h3><p><strong>(1) default color의 예쁜 조합</strong></p><p>seaborn의 최대 장점 중의 하나가 아름다운 컬러팔레트다.<br>스타일링에 크게 신경 쓰지 않아도 default 컬러가 예쁘게 조합해준다.</p><br><p><strong>matplotlib VS seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.bar(tips[<span class="string">'day'</span>], tips[<span class="string">'total_bill'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_32_0.png" alt="png"></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_33_0.png" alt="png"></p><br><p><strong>(2) 그래프 배경 설정</strong></p><p>그래프의 배경 (grid 스타일)을 설정할 수 있음.</p><blockquote><p><strong>sns.set_style(’…’)</strong></p><ul><li>whitegrid: white background + grid</li><li>darkgrid: dark background + grid</li><li>white: white background (without grid)</li><li>dark: dark background (without grid)</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_38_0.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(<span class="string">'white'</span>)</span><br><span class="line">sns.barplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">"colorblind"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_39_0.png" alt="png"></p><br><h3 id="0-3-컬러-팔레트"><a class="markdownIt-Anchor" href="#0-3-컬러-팔레트"></a> 0-3. 컬러 팔레트</h3><p>자세한 컬러팔레트는 <a href="https://chrisalbon.com/python/data_visualization/seaborn_color_palettes/" target="_blank" rel="noopener">공식 도큐먼트</a>를 참고</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sns.palplot(sns.light_palette((<span class="number">210</span>, <span class="number">90</span>, <span class="number">60</span>), input=<span class="string">"husl"</span>))</span><br><span class="line">sns.palplot(sns.dark_palette(<span class="string">"muted purple"</span>, input=<span class="string">"xkcd"</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"BrBG"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"BrBG_r"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.color_palette(<span class="string">"coolwarm"</span>, <span class="number">10</span>))</span><br><span class="line">sns.palplot(sns.diverging_palette(<span class="number">255</span>, <span class="number">133</span>, l=<span class="number">60</span>, n=<span class="number">10</span>, center=<span class="string">"dark"</span>))</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_43_0.png" alt="png"></p><p><img src="/images/S-Python-Seaborn1/output_43_1.png" alt="png"></p><p><img src="/images/S-Python-Seaborn1/output_43_2.png" alt="png"></p><p><img src="/images/S-Python-Seaborn1/output_43_3.png" alt="png"></p><p><img src="/images/S-Python-Seaborn1/output_43_4.png" alt="png"></p><p><img src="/images/S-Python-Seaborn1/output_43_5.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"tip"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">'coolwarm'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5bf62888&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_44_1.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">"tip"</span>, y=<span class="string">"total_bill"</span>, data=tips, palette=<span class="string">'Reds'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba59e40988&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_45_1.png" alt="png"></p><br><h3 id="0-4-pandas-데이터프레임과-높은-호환성"><a class="markdownIt-Anchor" href="#0-4-pandas-데이터프레임과-높은-호환성"></a> 0-4. pandas 데이터프레임과 높은 호환성</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tips</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>total_bill</th>      <th>tip</th>      <th>sex</th>      <th>smoker</th>      <th>day</th>      <th>time</th>      <th>size</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>16.99</td>      <td>1.01</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>1</th>      <td>10.34</td>      <td>1.66</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>21.01</td>      <td>3.50</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>23.68</td>      <td>3.31</td>      <td>Male</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>24.59</td>      <td>3.61</td>      <td>Female</td>      <td>No</td>      <td>Sun</td>      <td>Dinner</td>      <td>4</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>239</th>      <td>29.03</td>      <td>5.92</td>      <td>Male</td>      <td>No</td>      <td>Sat</td>      <td>Dinner</td>      <td>3</td>    </tr>    <tr>      <th>240</th>      <td>27.18</td>      <td>2.00</td>      <td>Female</td>      <td>Yes</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>241</th>      <td>22.67</td>      <td>2.00</td>      <td>Male</td>      <td>Yes</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>242</th>      <td>17.82</td>      <td>1.75</td>      <td>Male</td>      <td>No</td>      <td>Sat</td>      <td>Dinner</td>      <td>2</td>    </tr>    <tr>      <th>243</th>      <td>18.78</td>      <td>3.00</td>      <td>Female</td>      <td>No</td>      <td>Thur</td>      <td>Dinner</td>      <td>2</td>    </tr>  </tbody></table><p>244 rows × 7 columns</p></div>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_50_0.png" alt="png"></p><br><ul><li><code>hue</code>옵션: bar를 새로운 기준으로 분할</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            hue=<span class="string">"smoker"</span>, </span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_53_0.png" alt="png"></p><br><ul><li><code>col</code> / <code>row</code> 옵션: 그래프 자체를 새로운 기준으로 분할</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"sex"</span>, y=<span class="string">"total_bill"</span>,</span><br><span class="line">            hue=<span class="string">"smoker"</span>, </span><br><span class="line">            col=<span class="string">"time"</span>,</span><br><span class="line">            data=tips, </span><br><span class="line">            kind=<span class="string">"bar"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_56_0.png" alt="png"></p><br><ul><li><p>xtick, ytick, xlabel, ylabel을 알아서 생성해 줌</p></li><li><p>legend까지 자동으로 생성해 줌</p></li><li><p>뿐만 아니라, 신뢰 구간도 알아서 계산하여 생성함</p><br></li></ul><h2 id="1-scatterplot"><a class="markdownIt-Anchor" href="#1-scatterplot"></a> <strong>1. Scatterplot</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.scatterplot.html" target="_blank" rel="noopener">&lt;sns.scatterplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.scatterplot</strong> ( <em>x, y, size=None, sizes=None, hue=None, palette=None, color=‘auto’, alpha=‘auto’…</em> )</p><ul><li><code>sizes</code> 옵션: size의 선택범위를 설정. (사아즈의 min, max를 설정)</li><li><code>hue</code> 옵션: 컬러의 구별 기준이 되는 grouping variable 설정</li><li><code>color</code> 옵션: cmap에 컬러를 지정하면, 컬러 값을 모두 같게 가겨갈 수 있음</li><li><code>alpha</code> 옵션: 투명도 (0~1)</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.set_style(<span class="string">'darkgrid'</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><h3 id="1-1-x-y-color-area-설정하기"><a class="markdownIt-Anchor" href="#1-1-x-y-color-area-설정하기"></a> 1-1. x, y, color, area 설정하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 데이터 생성</span></span><br><span class="line">x = np.random.rand(<span class="number">50</span>)</span><br><span class="line">y = np.random.rand(<span class="number">50</span>)</span><br><span class="line">colors = np.arange(<span class="number">50</span>)</span><br><span class="line">area = x * y * <span class="number">1000</span></span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x, y, s=area, c=colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_69_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), hue=area, palette=<span class="string">'coolwarm'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_72_0.png" alt="png"></p><br><p><strong>[Tip]</strong> Palette 이름이 생각안나면: palette 값을 임의로 주고 실행하여 오류 경고창에 정확한 palette 이름을 보여줌</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), hue=area, palette=<span class="string">'coolwarm111'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)D:\Anaconda\lib\site-packages\seaborn\relational.py in numeric_to_palette(self, data, order, palette, norm)    248             try:--&gt; 249                 cmap = mpl.cm.get_cmap(palette)    250             except (ValueError, TypeError):D:\Anaconda\lib\site-packages\matplotlib\cm.py in get_cmap(name, lut)    182             "Colormap %s is not recognized. Possible values are: %s"--&gt; 183             % (name, ', '.join(sorted(cmap_d))))    184 ValueError: Colormap coolwarm111 is not recognized. Possible values are: Accent, Accent_r, Blues, Blues_r, BrBG, BrBG_r, BuGn, BuGn_r, BuPu, BuPu_r, CMRmap, CMRmap_r, Dark2, Dark2_r, GnBu, GnBu_r, Greens, Greens_r, Greys, Greys_r, OrRd, OrRd_r, Oranges, Oranges_r, PRGn, PRGn_r, Paired, Paired_r, Pastel1, Pastel1_r, Pastel2, Pastel2_r, PiYG, PiYG_r, PuBu, PuBuGn, PuBuGn_r, PuBu_r, PuOr, PuOr_r, PuRd, PuRd_r, Purples, Purples_r, RdBu, RdBu_r, RdGy, RdGy_r, RdPu, RdPu_r, RdYlBu, RdYlBu_r, RdYlGn, RdYlGn_r, Reds, Reds_r, Set1, Set1_r, Set2, Set2_r, Set3, Set3_r, Spectral, Spectral_r, Wistia, Wistia_r, YlGn, YlGnBu, YlGnBu_r, YlGn_r, YlOrBr, YlOrBr_r, YlOrRd, YlOrRd_r, afmhot, afmhot_r, autumn, autumn_r, binary, binary_r, bone, bone_r, brg, brg_r, bwr, bwr_r, cividis, cividis_r, cool, cool_r, coolwarm, coolwarm_r, copper, copper_r, cubehelix, cubehelix_r, flag, flag_r, gist_earth, gist_earth_r, gist_gray, gist_gray_r, gist_heat, gist_heat_r, gist_ncar, gist_ncar_r, gist_rainbow, gist_rainbow_r, gist_stern, gist_stern_r, gist_yarg, gist_yarg_r, gnuplot, gnuplot2, gnuplot2_r, gnuplot_r, gray, gray_r, hot, hot_r, hsv, hsv_r, icefire, icefire_r, inferno, inferno_r, jet, jet_r, magma, magma_r, mako, mako_r, nipy_spectral, nipy_spectral_r, ocean, ocean_r, pink, pink_r, plasma, plasma_r, prism, prism_r, rainbow, rainbow_r, rocket, rocket_r, seismic, seismic_r, spring, spring_r, summer, summer_r, tab10, tab10_r, tab20, tab20_r, tab20b, tab20b_r, tab20c, tab20c_r, terrain, terrain_r, twilight, twilight_r, twilight_shifted, twilight_shifted_r, viridis, viridis_r, vlag, vlag_r, winter, winter_r</code></pre>  <br><h3 id="1-2-cmap과-alpha"><a class="markdownIt-Anchor" href="#1-2-cmap과-alpha"></a> 1-2. cmap과 alpha</h3><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'blue'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.1'</span>)</span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.5'</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'red'</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=1.0'</span>)</span><br><span class="line">plt.scatter(x, y, s=area, c=<span class="string">'green'</span>, alpha=<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_79_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'blue'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.1'</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=0.5'</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'red'</span>, alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.title(<span class="string">'alpha=1.0'</span>)</span><br><span class="line">sns.scatterplot(x, y, size=area, sizes=(area.min(), area.max()), color=<span class="string">'green'</span>, alpha=<span class="number">0.9</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_82_0.png" alt="png"></p><br><br><h2 id="2-barplot-barhplot"><a class="markdownIt-Anchor" href="#2-barplot-barhplot"></a> <strong>2. Barplot, Barhplot</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.barplot.html" target="_blank" rel="noopener">&lt;sns.barplot&gt; Document</a></p></blockquote><blockquote><p><strong>sns.boxplot</strong> ( <em>x, y, hue=None, data=None, alpha=‘auto’, palette=None / color=None</em> )</p></blockquote><br> <h3 id="2-1-기본-barplot-그리기"><a class="markdownIt-Anchor" href="#2-1-기본-barplot-그리기"></a> 2-1. 기본 Barplot 그리기</h3><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(rotation=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_91_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">sns.barplot(x, y, alpha=<span class="number">0.8</span>, palette=<span class="string">'YlGnBu'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(rotation=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_94_0.png" alt="png"></p><br><h3 id="2-2-기본-barhplot-그리기"><a class="markdownIt-Anchor" href="#2-2-기본-barhplot-그리기"></a> 2-2. 기본 Barhplot 그리기</h3><p><strong>(1) matplotlib</strong></p><blockquote><ul><li><strong>plt.barh</strong> 함수 사용</li><li>bar 함수에서 <strong>xticks / ylabel 로 설정</strong>했던 부분이 barh 함수에서 <strong>yticks / xlabel 로 변경함</strong></li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">plt.barh(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.yticks(x)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_99_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><blockquote><ul><li>sns.barplot 함수를 그대로 사용</li><li>barplot함수 안에 x와 y의 위치를 교환<br>xticks설정이 변경 불필요;<br>하지만 ylabel설정은 xlable로 변경 필요</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">sns.barplot(y, x, alpha=<span class="number">0.9</span>, palette=<span class="string">"YlOrRd"</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_102_0.png" alt="png"></p><br><h3 id="2-3-barplot에서-비교-그래프-그리기"><a class="markdownIt-Anchor" href="#2-3-barplot에서-비교-그래프-그리기"></a> 2-3. Barplot에서 비교 그래프 그리기</h3><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.bar(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>)</span><br><span class="line">axes.bar(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.xticks(x)</span><br><span class="line">axes.set_xticklabels(x_label)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_106_0.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.barh(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>, color = <span class="string">"green"</span>)</span><br><span class="line">axes.barh(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.5</span>, color = <span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.yticks(x)</span><br><span class="line">axes.set_yticklabels(x_label)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_107_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><p>Seaborn에서는 위의 <code>matplotlib</code>과 조금 다른 방식을 취한다.<br>seaborn에서 <code>hue</code>옵션으로 매우 쉽게 비교 <strong>barplot</strong>을 그릴 수 있음.</p><blockquote><p><strong>sns.barplot</strong> ( <em>x, y, hue=…, data=…, palette=…</em> )</p></blockquote><br><p><strong>실전 tip.</strong></p><ul><li><p>그래프를 임의로 그려야 하는 경우 -&gt; <code>matplotlib</code></p></li><li><p>DataFrame을 가지고 그리는 경우 -&gt; <code>seaborn</code></p><br></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table style="width = 100%;">  <thead>    <tr style="text-align: right;">      <th></th>      <th>survived</th>      <th>pclass</th>      <th>sex</th>      <th>age</th>      <th>sibsp</th>      <th>parch</th>      <th>fare</th>      <th>embarked</th>      <th>class</th>      <th>who</th>      <th>adult_male</th>      <th>deck</th>      <th>embark_town</th>      <th>alive</th>      <th>alone</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>7.2500</td>      <td>S</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>False</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>71.2833</td>      <td>C</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>C</td>      <td>Cherbourg</td>      <td>yes</td>      <td>False</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>3</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>7.9250</td>      <td>S</td>      <td>Third</td>      <td>woman</td>      <td>False</td>      <td>NaN</td>      <td>Southampton</td>      <td>yes</td>      <td>True</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>53.1000</td>      <td>S</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>C</td>      <td>Southampton</td>      <td>yes</td>      <td>False</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>8.0500</td>      <td>S</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>True</td>    </tr>  </tbody></table></div></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">'sex'</span>, y=<span class="string">'survived'</span>, hue=<span class="string">'pclass'</span>, data=titanic, palette=<span class="string">'muted'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_115_0.png" alt="png"></p><br><br><h2 id="3-line-plot"><a class="markdownIt-Anchor" href="#3-line-plot"></a> <strong>3. Line Plot</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.lineplot.html" target="_blank" rel="noopener">&lt;sns.lineplot&gt; Document</a></p></blockquote><br><blockquote><p><strong>sns.lineplot</strong> ( <em>x, y, label=…, color=None, alpha=‘auto’, marker=None, linestyle=None</em> )</p><ul><li>기본 옵션은 matplotlib의 <code>plt.plot</code>과 비슷</li><li>함수만 <code>plt.plot</code>에서 <code>sns.lineplot</code>로 바꾸면 됨</li><li>plt.legend() 명령어 따로 쓸 필요없음</li><li>배경이 whitegrid / darkgrid 로 설정되어 있을 시 plt.grid() 명령어 불필요</li></ul></blockquote><br>  <h3 id="3-1-기본-lineplot-그리기"><a class="markdownIt-Anchor" href="#3-1-기본-lineplot-그리기"></a> 3-1. 기본 lineplot 그리기</h3><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y = <span class="number">1</span> + np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_124_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sns.lineplot(x, y)  <span class="comment"># 함수만 변경하면 됨 (plt.plot -&gt; sns.lineplot)</span></span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_127_0.png" alt="png"></p><br><h3 id="3-2-2개-이상의-그래프-그리기"><a class="markdownIt-Anchor" href="#3-2-2개-이상의-그래프-그리기"></a> 3-2. 2개 이상의 그래프 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span> + np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1,label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha = <span class="number">0.3</span>)  <span class="comment"># label 설정값을 legend에 나타날 수 있음</span></span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">"x value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y value"</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"sin and cos graph"</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_130_0.png" alt="png"></p><br><h3 id="3-3-마커-스타일링"><a class="markdownIt-Anchor" href="#3-3-마커-스타일링"></a> 3-3. 마커 스타일링</h3><ul><li>marker: 마커 옵션</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.3</span>, marker=<span class="string">'o'</span>)</span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.7</span>, marker=<span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_134_0.png" alt="png"></p><br><h3 id="3-4-라인-스타일-변경하기"><a class="markdownIt-Anchor" href="#3-4-라인-스타일-변경하기"></a> 3-4. 라인 스타일 변경하기</h3><ul><li>linestyle: 라인 스타일 변경하기</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">sns.lineplot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line">sns.lineplot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_138_0.png" alt="png"></p><br><br><h2 id="4-areaplot-filled-area"><a class="markdownIt-Anchor" href="#4-areaplot-filled-area"></a> <strong>4. Areaplot (Filled Area)</strong></h2><blockquote><p>Seaborn에서는 <strong>areaplot을 지원하지 않음</strong><br>matplotlib을 활용하여 구현해야 함</p></blockquote><br>  <h2 id="5histogram"><a class="markdownIt-Anchor" href="#5histogram"></a> <strong>5.Histogram</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html" target="_blank" rel="noopener">&lt;sns.distplot&gt; Document</a></p></blockquote><br><blockquote><p><strong>sns.distplot</strong> ( <em>x, bins=None, hist=True, kde=True, vertical=False</em> )</p><ul><li><strong>bins:</strong> hist bins 갯수 설정</li><li><strong>hist:</strong> Whether to plot a (normed) histogram</li><li><strong>kde:</strong> Whether to plot a gaussian kernel density estimate</li><li><strong>vertical:</strong> If True, observed values are on y-axis</li></ul></blockquote>  <br><h3 id="5-1-기본-histogram-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-histogram-그리기"></a> 5-1. 기본 Histogram 그리기</h3><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">plt.hist(x, bins=bins)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_150_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><p><strong>Histogram + Density Function</strong> <font color="blue">(<em>default</em>)</font></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">sns.distplot(x, bins=bins)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5cc800c8&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_154_1.png" alt="png"></p><br><p><strong>Histogram Only</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, hist=<span class="literal">True</span>, kde=<span class="literal">False</span>, color=<span class="string">'g'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5cd09788&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_157_1.png" alt="png"></p><br><p><strong>Density Function Only</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, hist=<span class="literal">False</span>, kde=<span class="literal">True</span>, color=<span class="string">'g'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5c7cc208&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_160_1.png" alt="png"></p><br><p><strong>수평 그래프</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(x, bins=bins, vertical=<span class="literal">True</span>, color=<span class="string">'r'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5c250108&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_163_1.png" alt="png"></p><br><h3 id="5-2-다중-histogram-그리기"><a class="markdownIt-Anchor" href="#5-2-다중-histogram-그리기"></a> 5-2. 다중 Histogram 그리기</h3><p>matplotlib 에서의 방법을 사용</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, </span><br><span class="line">                        sharey = <span class="literal">True</span>,</span><br><span class="line">                        tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins)</span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins*<span class="number">2</span>)</span><br><span class="line">axes[<span class="number">2</span>].hist(x, bins = bins*<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_167_0.png" alt="png"></p><br><br><h2 id="6-pie-chart"><a class="markdownIt-Anchor" href="#6-pie-chart"></a> <strong>6. Pie Chart</strong></h2><blockquote><p>Seaborn에서는 <strong>pie plot을 지원하지 않음</strong><br>matplotlib을 활용하여 구현해야 함</p></blockquote>  <br><h2 id="7-box-plot"><a class="markdownIt-Anchor" href="#7-box-plot"></a> <strong>7. Box Plot</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://seaborn.pydata.org/generated/seaborn.boxplot.html" target="_blank" rel="noopener">&lt;sns.boxplot&gt; Document</a></p></blockquote><br><blockquote><p><strong>sns.baxplot</strong> ( *x=None, y=None, hue=None, data=None, orient=None, width=0.8 * )</p><ul><li><strong>hue:</strong> 비교 그래프를 그릴 때 나눔 기준이 되는 Variable 설정</li><li><strong>orient:</strong> “v” / “h”.  Orientation of the plot (vertical or horizontal)</li><li><strong>width:</strong> box의 넓이</li></ul></blockquote><br>  <h3 id="7-1-기본-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-1-기본-박스플롯-생성"></a> 7-1. 기본 박스플롯 생성</h3><p><strong>샘플 데이터 생성</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_182_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.boxplot(data, orient=<span class="string">'v'</span>, width=<span class="number">0.2</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_185_0.png" alt="png"></p><br><h3 id="7-2-다중-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-2-다중-박스플롯-생성"></a> 7-2. 다중 박스플롯 생성</h3><p>seaborn에서는  <code>hue</code>옵션으로 매우 쉽게 <strong>비교 boxplot</strong>을 그릴 수 있으며 주로 DataFrame을 가지고 그릴 때 활용한다.</p><p>barplot과 마찬가지로, 용도에 따라 적절한 library를 사용한다</p><br><p><strong>실전 Tip.</strong></p><ul><li><p>그래프를 임의로 그려야 하는 경우 -&gt; <code>matplotlit</code></p></li><li><p>DataFrame을 가지고 그리는 경우 -&gt; <code>seaborn</code></p><br></li></ul><p><strong>(1) matplotlib</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread1 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center1 = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high1 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low1 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data1 = np.concatenate((spread1, center1, flier_high1, flier_low1))</span><br><span class="line"></span><br><span class="line">spread2 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center2 = np.ones(<span class="number">25</span>) * <span class="number">40</span></span><br><span class="line">flier_high2 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low2 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data2 = np.concatenate((spread2, center2, flier_high2, flier_low2))</span><br><span class="line"></span><br><span class="line">data1.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">data2.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = [data1, data2, data2[::<span class="number">2</span>, <span class="number">0</span>]]</span><br></pre></td></tr></tbody></table></figure>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_194_0.png" alt="png"></p><br><p><strong>(2) seaborn</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">'titanic'</span>)</span><br><span class="line">titanic.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><div style="overflow:auto"><table style="width = 100%;">  <thead>    <tr style="text-align: right;">      <th></th>      <th>survived</th>      <th>pclass</th>      <th>sex</th>      <th>age</th>      <th>sibsp</th>      <th>parch</th>      <th>fare</th>      <th>embarked</th>      <th>class</th>      <th>who</th>      <th>adult_male</th>      <th>deck</th>      <th>embark_town</th>      <th>alive</th>      <th>alone</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>22.0</td>      <td>1</td>      <td>0</td>      <td>7.2500</td>      <td>S</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>False</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>38.0</td>      <td>1</td>      <td>0</td>      <td>71.2833</td>      <td>C</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>C</td>      <td>Cherbourg</td>      <td>yes</td>      <td>False</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>3</td>      <td>female</td>      <td>26.0</td>      <td>0</td>      <td>0</td>      <td>7.9250</td>      <td>S</td>      <td>Third</td>      <td>woman</td>      <td>False</td>      <td>NaN</td>      <td>Southampton</td>      <td>yes</td>      <td>True</td>    </tr>    <tr>      <th>3</th>      <td>1</td>      <td>1</td>      <td>female</td>      <td>35.0</td>      <td>1</td>      <td>0</td>      <td>53.1000</td>      <td>S</td>      <td>First</td>      <td>woman</td>      <td>False</td>      <td>C</td>      <td>Southampton</td>      <td>yes</td>      <td>False</td>    </tr>    <tr>      <th>4</th>      <td>0</td>      <td>3</td>      <td>male</td>      <td>35.0</td>      <td>0</td>      <td>0</td>      <td>8.0500</td>      <td>S</td>      <td>Third</td>      <td>man</td>      <td>True</td>      <td>NaN</td>      <td>Southampton</td>      <td>no</td>      <td>True</td>    </tr>  </tbody></table></div></div> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.boxplot(x=<span class="string">'pclass'</span>, y=<span class="string">'age'</span>, hue=<span class="string">'survived'</span>, data=titanic)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_199_0.png" alt="png"></p><br><h3 id="7-3-box-plot-축-바꾸기"><a class="markdownIt-Anchor" href="#7-3-box-plot-축-바꾸기"></a> 7-3. Box Plot 축 바꾸기</h3><p><strong>(1) 단일 boxplot</strong></p><ul><li>orient옵션: orient = "h"로 설정</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.boxplot(data, orient=<span class="string">'h'</span>, width=<span class="number">0.3</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1ba5e866188&gt;</code></pre><p><img src="/images/S-Python-Seaborn1/output_205_1.png" alt="png"></p><br><p><strong>(2) 다중 boxplot</strong></p><ol><li>x, y 변수 교환</li><li>orient = “h”</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.boxplot(y=<span class="string">'pclass'</span>, x=<span class="string">'age'</span>, hue=<span class="string">'survived'</span>, data=titanic, orient=<span class="string">'h'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_209_0.png" alt="png"></p><br><h3 id="7-4-outlier-마커-심볼과-컬러-변경"><a class="markdownIt-Anchor" href="#7-4-outlier-마커-심볼과-컬러-변경"></a> 7-4. Outlier 마커 심볼과 컬러 변경</h3><ul><li><strong>flierprops = …</strong> 옵션 사용  <font color="blue">(matplotlib과 동일)</font></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">outlier_marker = dict(markerfacecolor=<span class="string">'r'</span>, marker=<span class="string">'D'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Changed Outlier Symbols'</span>, fontsize=<span class="number">15</span>)</span><br><span class="line">sns.boxplot(data, orient=<span class="string">'v'</span>, width=<span class="number">0.2</span>, flierprops=outlier_marker)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Seaborn1/output_213_0.png" alt="png"></p><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      matplotlib 차트들을 seaborn에서 구현하기 (scatterplot, barplot, lineplot, histogram, boxplot)
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="시각화" scheme="https://hyemin-kim.github.io/tags/%EC%8B%9C%EA%B0%81%ED%99%94/"/>
    
      <category term="Seaborn" scheme="https://hyemin-kim.github.io/tags/Seaborn/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Matplotlib - (2) 다양한 그래프 그리기</title>
    <link href="https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib2/"/>
    <id>https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib2/</id>
    <published>2020-06-28T05:12:32.000Z</published>
    <updated>2020-07-03T12:52:46.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matplotlib을-활용한-다양한-그래프-그리기"><a class="markdownIt-Anchor" href="#matplotlib을-활용한-다양한-그래프-그리기"></a> matplotlib을 활용한 다양한 그래프 그리기</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-scatterplot"><strong>1. Scatterplot</strong></a><ul><li><a href="#1-1-x-y-colors-area-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">1-1. x, y, colors, area 설정하기</a></li><li><a href="#1-2-cmap%EA%B3%BC-alpha">1-2. cmap과 alpha</a></li></ul></li><li><a href="#2-barplot-barhplot"><strong>2. Barplot, Barhplot</strong></a><ul><li><a href="#2-1-%EA%B8%B0%EB%B3%B8-barplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-1. 기본 barplot 그리기</a></li><li><a href="#2-2-%EA%B8%B0%EB%B3%B8-barhplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-2. 기본 Barhplot 그리기</a></li><li><a href="#2-3-barplot%EC%97%90%EC%84%9C-%EB%B9%84%EA%B5%90-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">2-3. Barplot에서 비교 그래프 그리기</a></li></ul></li><li><a href="#3-line-plot"><strong>3. Line Plot</strong></a><ul><li><a href="#3-1-%EA%B8%B0%EB%B3%B8-lineplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-1. 기본 lineplot 그리기</a></li><li><a href="#3-2-2%EA%B0%9C-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0">3-2. 2개 이상의 그래프 그리기</a></li><li><a href="#3-3-%EB%A7%88%EC%BB%A4-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-3. 마커 스타일링</a></li><li><a href="#3-4-%EB%9D%BC%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81">3-4. 라인 스타일링</a></li></ul></li><li><a href="#4-areaplot-filled-area"><strong>4. Areaplot (Filled Area)</strong></a><ul><li><a href="#4-1-%EA%B8%B0%EB%B3%B8-areaplot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">4-1. 기본 areaplot 그리기</a></li><li><a href="#4-2-%EA%B2%BD%EA%B3%84%EC%84%A0%EC%9D%84-%EA%B5%B5%EA%B2%8C-%EA%B7%B8%EB%A6%AC%EA%B3%A0-area%EB%8A%94-%EC%98%85%EA%B2%8C-%EA%B7%B8%EB%A6%AC%EB%8A%94-%ED%9A%A8%EA%B3%BC-%EC%A0%81%EC%9A%A9">4-2. 경계선을 굵게 그리고 area는 옅게 그리는 효과 적용</a></li><li><a href="#4-3-%EC%97%AC%EB%9F%AC-%EA%B7%B8%EB%9E%98%ED%94%84%EB%A5%BC-%EA%B2%B9%EC%B3%90%EC%84%9C-%ED%91%9C%ED%98%84">4-3. 여러 그래프를 겹쳐서 표현</a></li></ul></li><li><a href="#5-histogram"><strong>5. Histogram</strong></a><ul><li><a href="#5-1-%EA%B8%B0%EB%B3%B8-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-1. 기본 Histogram 그리기</a></li><li><a href="#5-2-%EB%8B%A4%EC%A4%91-histogram-%EA%B7%B8%EB%A6%AC%EA%B8%B0">5-2. 다중 Histogram 그리기</a></li><li><a href="#5-3-y%EC%B6%95%EC%97%90-density-%ED%91%9C%EA%B8%B0">5-3. Y축에 Density 표기</a></li></ul></li><li><a href="#6-pie-chart"><strong>6. Pie Chart</strong></a></li><li><a href="#7-box-plot"><strong>7. Box Plot</strong></a><ul><li><a href="#7-1-%EA%B8%B0%EB%B3%B8-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-1. 기본 박스플롯 생성</a></li><li><a href="#7-2-%EB%8B%A4%EC%A4%91-%EB%B0%95%EC%8A%A4%ED%94%8C%EB%A1%AF-%EC%83%9D%EC%84%B1">7-2. 다중 박스플롯 생성</a></li><li><a href="#7-3-box-plot-%EC%B6%95-%EB%B0%94%EA%BE%B8%EA%B8%B0">7-3. Box Plot 축 바꾸기</a></li><li><a href="#7-4-outlier-%EB%A7%88%EC%BB%A4-%EC%8B%AC%EB%B3%BC%EA%B3%BC-%EC%BB%AC%EB%9F%AC-%EB%B3%80%EA%B2%BD">7-4. Outlier 마커 심볼과 컬러 변경</a></li></ul></li><li><a href="#8-3d-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0"><strong>8. 3D 그래프 그리기</strong></a><ul><li><a href="#8-1-%EB%B0%91%EA%B7%B8%EB%A6%BC-%EA%B7%B8%EB%A6%AC%EA%B8%B0-canvas">8-1. 밑그림 그리기 (canvas)</a></li><li><a href="#8-2-3d-plot-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-2. 3D plot 그리기</a></li><li><a href="#8-3-3d-scatter-%EA%B7%B8%EB%A6%AC%EA%B8%B0">8-3. 3d-scatter 그리기</a></li><li><a href="#8-4-contour3d-%EA%B7%B8%EB%A6%AC%EA%B8%B0-%EB%93%B1%EA%B3%A0%EC%84%A0">8-4. contour3D 그리기 (등고선)</a></li></ul></li><li><a href="#9-imshow"><strong>9. imshow</strong></a></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">"figure.figsize"</span>] = (<span class="number">9</span>, <span class="number">6</span>)  <span class="comment"># figure size 설정</span></span><br><span class="line">plt.rcParams[<span class="string">"font.size"</span>] = <span class="number">14</span>  <span class="comment"># fontsize 설정</span></span><br></pre></td></tr></tbody></table></figure> <br><h2 id="1-scatterplot"><a class="markdownIt-Anchor" href="#1-scatterplot"></a> <strong>1. Scatterplot</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.scatter.html" target="_blank" rel="noopener">&lt;plt.scatter&gt; Document</a></p></blockquote><blockquote><p><strong>plt.scatter</strong>( <em>x, y, s=None, c=None, cmap=None, alpha=None</em> )</p><ul><li><strong>s:</strong> marker size</li><li><strong>c:</strong> color</li><li><strong>cmap:</strong> colormap</li><li><strong>alpha:</strong> between 0 and 1</li></ul></blockquote>  <br><p><strong>Data 생성</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0~1 사이의 random value 50 개 생성</span></span><br><span class="line">np.random.rand(<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>array([0.65532609, 0.19008877, 0.72343673, 0.63981883, 0.07531076,       0.67080518, 0.93282479, 0.04750706, 0.81240348, 0.40032198,       0.59662026, 0.25797641, 0.37315105, 0.6266855 , 0.50732916,       0.55803591, 0.63610033, 0.88673444, 0.99751021, 0.03723629,       0.07695327, 0.44247   , 0.5245731 , 0.41263818, 0.8009583 ,       0.57238283, 0.58647938, 0.9882001 , 0.88993497, 0.5396632 ,       0.24683042, 0.0838774 , 0.0826096 , 0.89701004, 0.78305308,       0.21027637, 0.93441558, 0.05756907, 0.6299839 , 0.05833447,       0.24247082, 0.9057054 , 0.1585265 , 0.45569918, 0.85597115,       0.43875418, 0.96962923, 0.17476189, 0.68713067, 0.832518  ])</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0 부터 50 개의 value 생성</span></span><br><span class="line">np.arange(<span class="number">50</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])</code></pre> <br> <h3 id="1-1-x-y-colors-area-설정하기"><a class="markdownIt-Anchor" href="#1-1-x-y-colors-area-설정하기"></a> 1-1. x, y, colors, area 설정하기</h3><blockquote><p><strong>plt.scatter</strong> ( <em>x, y, s = , c =</em> )</p><ul><li><strong>s</strong>: 점의 넓이. area 값이 커지면 넓이도 커진다</li><li><strong>c</strong>: 임의 값을 color 값으로 변환</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = np.random.rand(<span class="number">50</span>)</span><br><span class="line">y = np.random.rand(<span class="number">50</span>)</span><br><span class="line">colors = np.arange(<span class="number">50</span>)</span><br><span class="line">area = x * y * <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, s = area, c = colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_16_0.png" alt="png"></p><br><h3 id="1-2-cmap과-alpha"><a class="markdownIt-Anchor" href="#1-2-cmap과-alpha"></a> 1-2. cmap과 alpha</h3><blockquote><ul><li>cmap에 컬러를 지정하면, 컬러 값을 모두 같게 가져갈 수도 있다</li><li>alpha값은 투명도를 나타내며 0~1 사이의 값을 지정해 둘 수 있으며, 0에 가까울 수록 투명한 값을 가진다</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span> ,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">0.1</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 0.1'</span>)</span><br><span class="line">  </span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">0.5</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 0.5'</span>)</span><br><span class="line">    </span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.scatter(x, y, s = area, cmap = <span class="string">'blue'</span>, alpha = <span class="number">1.0</span>)</span><br><span class="line">plt.title(<span class="string">'alpha = 1.0'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_20_0.png" alt="png"></p><br><br><h2 id="2-barplot-barhplot"><a class="markdownIt-Anchor" href="#2-barplot-barhplot"></a> <strong>2. Barplot, Barhplot</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.bar.html" target="_blank" rel="noopener">&lt;plt.bar&gt;  Document</a></p></blockquote><blockquote><p><strong>plt.bar</strong>(<em>x, height, width = 0.8, align = ‘center’, alpha = …, color = …</em> )</p><ul><li><strong>x:</strong> The x coordinates of the bars</li><li><strong>height:</strong> The height(s) of the bars</li><li><strong>width:</strong> The width(s) of the bars (default: 0.8)</li><li><strong>align:</strong> Alignment of the bars to the x coordinates:<br>{‘center’, ‘edge’}</li></ul></blockquote><br><h3 id="2-1-기본-barplot-그리기"><a class="markdownIt-Anchor" href="#2-1-기본-barplot-그리기"></a> 2-1. 기본 barplot 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y label</span></span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_28_0.png" alt="png"></p><br><p>문자열이 겹히는 현상 발생했다. 이를 해결하는 방법은 2가지다:</p><ol><li><p>문자열 화전:  plt.xtick(rotation = …)</p></li><li><p>barh(수평바 그래프) 사용</p></li></ol>  <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.bar(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x ticks</span></span><br><span class="line">plt.xticks(rotation = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y label</span></span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_32_0.png" alt="png"></p><br><h3 id="2-2-기본-barhplot-그리기"><a class="markdownIt-Anchor" href="#2-2-기본-barhplot-그리기"></a> 2-2. 기본 Barhplot 그리기</h3><p>barh 함수에서는 <strong>xticks / ylabel 로 설정</strong>했던 부분을 <strong>yticks / xlabel 로 변경함</strong></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">y = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># figure size</span></span><br><span class="line">plt.figure(figsize = (<span class="number">7</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 수직 barplot</span></span><br><span class="line">plt.barh(x, y, alpha = <span class="number">0.7</span>, color = <span class="string">'green'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y ticks</span></span><br><span class="line"><span class="comment"># plt.yticks(x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x label</span></span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_36_0.png" alt="png"></p><br><h3 id="2-3-barplot에서-비교-그래프-그리기"><a class="markdownIt-Anchor" href="#2-3-barplot에서-비교-그래프-그리기"></a> 2-3. Barplot에서 비교 그래프 그리기</h3><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/gallery/lines_bars_and_markers/barchart.html#sphx-glr-gallery-lines-bars-and-markers-barchart-py" target="_blank" rel="noopener">Grouped bar chart with labels</a></p></blockquote><p><strong>(1) barplot</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.bar(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>)</span><br><span class="line">axes.bar(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.xticks(x)</span><br><span class="line">axes.set_xticklabels(x_label)</span><br><span class="line">plt.ylabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_41_0.png" alt="png"></p><br><p><strong>(2) barhplot</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">x_label = [<span class="string">'Math'</span>, <span class="string">'Programming'</span>, <span class="string">'Data Science'</span>, <span class="string">'Art'</span>, <span class="string">'English'</span>, <span class="string">'Physics'</span>]</span><br><span class="line">x = np.arange(len(x_label))  <span class="comment"># x = [0, 1, 2, 3, 4, 5]</span></span><br><span class="line">y_1 = [<span class="number">90</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">40</span>]</span><br><span class="line">y_2 = [<span class="number">80</span>, <span class="number">40</span>, <span class="number">90</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">70</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 지정</span></span><br><span class="line">width = <span class="number">0.35</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># subplots 생성</span></span><br><span class="line">fig, axes = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 넓이 설정</span></span><br><span class="line">axes.barh(x - width/<span class="number">2</span>, y_1, width, alpha = <span class="number">0.5</span>, color = <span class="string">"green"</span>)</span><br><span class="line">axes.barh(x + width/<span class="number">2</span>, y_2, width, alpha = <span class="number">0.5</span>, color = <span class="string">"blue"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ticks &amp; label 설정</span></span><br><span class="line">plt.yticks(x)</span><br><span class="line">axes.set_yticklabels(x_label)</span><br><span class="line">plt.xlabel(<span class="string">'Grades'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">'Subjects'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend</span></span><br><span class="line">plt.legend([<span class="string">'John'</span>, <span class="string">'Peter'</span>])</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_44_0.png" alt="png"></p><br><br><h2 id="3-line-plot"><a class="markdownIt-Anchor" href="#3-line-plot"></a> <strong>3. Line Plot</strong></h2><blockquote><p><strong>plt.plot</strong> ( <em>x, y, label=…, color=…, alpha=…, marker=…, linestyle=…</em>)</p></blockquote><h3 id="3-1-기본-lineplot-그리기"><a class="markdownIt-Anchor" href="#3-1-기본-lineplot-그리기"></a> 3-1. 기본 lineplot 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y = <span class="number">1</span> + np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line">plt.title(<span class="string">'sin graph'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_50_0.png" alt="png"></p><br><h3 id="3-2-2개-이상의-그래프-그리기"><a class="markdownIt-Anchor" href="#3-2-2개-이상의-그래프-그리기"></a> 3-2. 2개 이상의 그래프 그리기</h3><ul><li>label: line 이름 (legend에 나타남)</li><li>color: 컬러 옵션</li><li>alpha: 투명도 옵션</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span> + np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1,label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha = <span class="number">0.3</span>)  <span class="comment"># label 설정값을 legend에 나타날 수 있음</span></span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha = <span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">"x value"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y value"</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"sin and cos graph"</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_54_0.png" alt="png"></p><br><h3 id="3-3-마커-스타일링"><a class="markdownIt-Anchor" href="#3-3-마커-스타일링"></a> 3-3. 마커 스타일링</h3><ul><li>marker: 마커 옵션</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.3</span>, marker=<span class="string">'o'</span>)</span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.7</span>, marker=<span class="string">'+'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_58_0.png" alt="png"></p><br><h3 id="3-4-라인-스타일링"><a class="markdownIt-Anchor" href="#3-4-라인-스타일링"></a> 3-4. 라인 스타일링</h3><ul><li>linestyle: 라인 스타일 변경 옵션</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.1</span>)</span><br><span class="line">y_1 = <span class="number">1</span> + np.sin(x)</span><br><span class="line">y_2 = <span class="number">1</span>+ np.cos(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y_1, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line">plt.plot(x, y_2, label=<span class="string">'1+cos'</span>, color=<span class="string">'red'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">'x value'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'y value'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'sin and cos graph'</span>, fontsize = <span class="number">18</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_62_0.png" alt="png"></p><br><br><h2 id="4-areaplot-filled-area"><a class="markdownIt-Anchor" href="#4-areaplot-filled-area"></a> <strong>4. Areaplot (Filled Area)</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.fill_between.html" target="_blank" rel="noopener">&lt;plt.fill_between&gt; Document</a></p></blockquote><blockquote><p><strong>plt.fill_between</strong> (<em>x, y, color=…, alpha=…</em>)</p></blockquote><h3 id="4-1-기본-areaplot-그리기"><a class="markdownIt-Anchor" href="#4-1-기본-areaplot-그리기"></a> 4-1. 기본 areaplot 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y = np.random.randint(low=<span class="number">5</span>, high=<span class="number">10</span>, size=<span class="number">20</span>)</span><br><span class="line">y</span><br></pre></td></tr></tbody></table></figure><pre><code>array([8, 8, 7, 6, 5, 8, 6, 9, 8, 8, 5, 5, 6, 6, 5, 5, 6, 8, 9, 5])</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">21</span>)</span><br><span class="line">y = np.random.randint(low=<span class="number">5</span>, high=<span class="number">10</span>, size=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># fill_between으로 색칠하기</span></span><br><span class="line">plt.fill_between(x, y, color = <span class="string">"green"</span>, alpha = <span class="number">0.6</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_72_0.png" alt="png"></p><br><h3 id="4-2-경계선을-굵게-그리고-area는-옅게-그리는-효과-적용"><a class="markdownIt-Anchor" href="#4-2-경계선을-굵게-그리고-area는-옅게-그리는-효과-적용"></a> 4-2. 경계선을 굵게 그리고 area는 옅게 그리는 효과 적용</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.fill_between(x, y, color=<span class="string">'green'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(x, y, color=<span class="string">'green'</span>, alpha=<span class="number">0.7</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_75_0.png" alt="png"></p><br><h3 id="4-3-여러-그래프를-겹쳐서-표현"><a class="markdownIt-Anchor" href="#4-3-여러-그래프를-겹쳐서-표현"></a> 4-3. 여러 그래프를 겹쳐서 표현</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0.05</span>)</span><br><span class="line">y_1 = np.cos(x) + <span class="number">1</span></span><br><span class="line">y_2 = np.sin(x) + <span class="number">1</span></span><br><span class="line">y_3 = y_1 * y_2 / np.pi</span><br><span class="line"></span><br><span class="line">plt.fill_between(x, y_1, label=<span class="string">'1+cos'</span>, color=<span class="string">'green'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.fill_between(x, y_2, label=<span class="string">'1+sin'</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">0.2</span>)</span><br><span class="line">plt.fill_between(x, y_3, label=<span class="string">'sin*cos/pi'</span>, color=<span class="string">'red'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_78_0.png" alt="png"></p><p>많이 겹치는 부분이 어디인지 확인하고 싶을 때 많이 활용됨</p><p><br> <br></p><h2 id="5-histogram"><a class="markdownIt-Anchor" href="#5-histogram"></a> <strong>5. Histogram</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.hist.html" target="_blank" rel="noopener">&lt;plt.hist&gt; Document</a></p></blockquote><blockquote><p><strong>plt.hist</strong> (x, bins = …)</p></blockquote><h3 id="5-1-기본-histogram-그리기"><a class="markdownIt-Anchor" href="#5-1-기본-histogram-그리기"></a> 5-1. 기본 Histogram 그리기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">plt.hist(x, bins = bins)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_87_0.png" alt="png"></p><br><h3 id="5-2-다중-histogram-그리기"><a class="markdownIt-Anchor" href="#5-2-다중-histogram-그리기"></a> 5-2. 다중 Histogram 그리기</h3><blockquote><p><strong>fig, axs = plt.subplots</strong> (<em>row, column, sharey = True, tight_layout = True</em>)<br><strong>axes[i].hist</strong> ( <em>x, bins = …</em>)</p><ul><li><strong>sharey:</strong> 다중 그래프가 같은 y축을 share</li><li><strong>tight_layout:</strong> graph의 패딩을 자동으로 조절해주어 fit한 graph를 생성</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">3</span>, </span><br><span class="line">                        sharey = <span class="literal">True</span>,</span><br><span class="line">                        tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins)</span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins*<span class="number">2</span>)</span><br><span class="line">axes[<span class="number">2</span>].hist(x, bins = bins*<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_91_0.png" alt="png"></p><br><h3 id="5-3-y축에-density-표기"><a class="markdownIt-Anchor" href="#5-3-y축에-density-표기"></a> 5-3. Y축에 Density 표기</h3><ul><li><strong>pdf(확률 밀도 함수):</strong> density = True</li><li><strong>cdf(누적 확률 함수):</strong> density = True, cumulatice = True</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="number">100000</span></span><br><span class="line">bins = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">x = np.random.randn(N)</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, tight_layout = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig.set_size_inches(<span class="number">12</span>, <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># density=True 값을 통하여 Y축에 density를 표기할 수 있다</span></span><br><span class="line">axes[<span class="number">0</span>].hist(x, bins = bins, density = <span class="literal">True</span>, cumulative = <span class="literal">True</span>)  <span class="comment">#cdf: 누적확률함수</span></span><br><span class="line">axes[<span class="number">1</span>].hist(x, bins = bins, density = <span class="literal">True</span>)  <span class="comment"># pdf: 확률밀도함수</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_95_0.png" alt="png"></p><br><br><h2 id="6-pie-chart"><a class="markdownIt-Anchor" href="#6-pie-chart"></a> <strong>6. Pie Chart</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.pie.html" target="_blank" rel="noopener">&lt;plt.pie&gt; Document</a></p></blockquote><blockquote><p><strong>plt.pie</strong>( <em>x, explode=None, labels=None, colors=None, autopct=None, shadow=False, startangle=None,…</em>)</p></blockquote><p><strong>pie chart 옵션</strong></p><ul><li>explode: 파이에서 툭 튀어져 나온 비율</li><li>autopct: 퍼센트 자동으로 표기</li><li>shadow: 그림자 표시</li><li>startangle: 파이를 그리기 시작할 각도</li></ul><p><strong>리턴을 받는 인자</strong></p><ul><li><p>texts: label에 대한 텍스트 효과</p></li><li><p>autotexts: 파이 위에 그려지는 텍스트 효과</p><br></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">labels = [<span class="string">'Samsung'</span>, <span class="string">'Huawei'</span>, <span class="string">'Apple'</span>, <span class="string">'Xiaomi'</span>, <span class="string">'Oppo'</span>, <span class="string">'Etc'</span>]</span><br><span class="line">sizes = [<span class="number">20.4</span>, <span class="number">15.8</span>, <span class="number">10.5</span>, <span class="number">9</span>, <span class="number">7.6</span>, <span class="number">36.7</span>]</span><br><span class="line">explode = (<span class="number">0.3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># text, autotext 인자를 활용하여 텍스트 스타일링을 적용한다</span></span><br><span class="line">patches, texts, autotexts = plt.pie(sizes,</span><br><span class="line">                                    explode = explode,</span><br><span class="line">                                    labels = labels,</span><br><span class="line">                                    autopct = <span class="string">"%1.1f%%"</span>,</span><br><span class="line">                                    shadow = <span class="literal">True</span>,</span><br><span class="line">                                    startangle=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'Smartphone Pie'</span>, fontsize=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># label 텍스트에 대한 스타일 적용</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> texts:</span><br><span class="line">    t.set_fontsize(<span class="number">12</span>)</span><br><span class="line">    t.set_color(<span class="string">'gray'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># pie 위의 텍스트에 대한 스타일 적용</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> autotexts:</span><br><span class="line">    t.set_fontsize(<span class="number">18</span>)</span><br><span class="line">    t.set_color(<span class="string">'white'</span>)</span><br><span class="line">    </span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_103_0.png" alt="png"></p><br><br><h2 id="7-box-plot"><a class="markdownIt-Anchor" href="#7-box-plot"></a> <strong>7. Box Plot</strong></h2><img src="/images/S-Python-Matplotlib2/R800x0" alt="box plot 해석" style="zoom:80%;"><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/3.2.1/api/_as_gen/matplotlib.pyplot.boxplot.html" target="_blank" rel="noopener">&lt;plt.boxplot&gt; Document</a></p></blockquote><blockquote><p><strong>plt.boxplot</strong> (<em>data, vert=True, flierprops = …</em>)</p><ul><li><strong>vert:</strong> boxplot 축 바꾸기 (If True: 수직 boxplot; If not: 수평 boxplot)</li><li><strong>flierprops:</strong> oulier marker 설정 (Symbol &amp; Color)</li></ul></blockquote>  <br><p><strong>샘플 데이터 생성</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Data Generation Process (DGP)</span></span><br><span class="line">spread = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data = np.concatenate((spread, center, flier_high, flier_low))</span><br></pre></td></tr></tbody></table></figure>  <br><h3 id="7-1-기본-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-1-기본-박스플롯-생성"></a> 7-1. 기본 박스플롯 생성</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.tight_layout</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_115_0.png" alt="png"></p><br><h3 id="7-2-다중-박스플롯-생성"><a class="markdownIt-Anchor" href="#7-2-다중-박스플롯-생성"></a> 7-2. 다중 박스플롯 생성</h3><blockquote><ul><li>다중 그래프 생성을 위해서는 data 자체가 <strong>2차원으로 구성</strong>되어 있어야 한다</li><li>row와 column으로 구성된 DataFrame에서 Column은 x축에 Row는 Y축에 구성되어 있음</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DGP</span></span><br><span class="line">spread1 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center1 = np.ones(<span class="number">25</span>) * <span class="number">50</span></span><br><span class="line">flier_high1 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low1 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data1 = np.concatenate((spread1, center1, flier_high1, flier_low1))</span><br><span class="line"></span><br><span class="line">spread2 = np.random.rand(<span class="number">50</span>) * <span class="number">100</span></span><br><span class="line">center2 = np.ones(<span class="number">25</span>) * <span class="number">40</span></span><br><span class="line">flier_high2 = np.random.rand(<span class="number">10</span>) * <span class="number">100</span> + <span class="number">100</span></span><br><span class="line">flier_low2 = np.random.rand(<span class="number">10</span>) * <span class="number">-100</span></span><br><span class="line">data2 = np.concatenate((spread2, center2, flier_high2, flier_low2))</span><br><span class="line"></span><br><span class="line">data1.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">data2.shape = (<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data = [data1, data2, data2[::<span class="number">2</span>, <span class="number">0</span>]]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(data)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_120_0.png" alt="png"></p><br><h3 id="7-3-box-plot-축-바꾸기"><a class="markdownIt-Anchor" href="#7-3-box-plot-축-바꾸기"></a> 7-3. Box Plot 축 바꾸기</h3><ul><li><strong>vert = False</strong> 옵션을 사용</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.boxplot(data, vert = <span class="literal">False</span>)</span><br><span class="line">plt.title(<span class="string">'Horizontal Box Plot'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_124_0.png" alt="png"></p><br><h3 id="7-4-outlier-마커-심볼과-컬러-변경"><a class="markdownIt-Anchor" href="#7-4-outlier-마커-심볼과-컬러-변경"></a> 7-4. Outlier 마커 심볼과 컬러 변경</h3><ul><li><strong>flierprops = …</strong> 옵션 사용</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">outlier_marker = dict(markerfacecolor = <span class="string">'r'</span>, marker = <span class="string">'D'</span>)  <span class="comment"># red diamond</span></span><br><span class="line"></span><br><span class="line">plt.boxplot(data, flierprops = outlier_marker)</span><br><span class="line">plt.title(<span class="string">'Change Outlier Symbols'</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_128_0.png" alt="png"></p><br><br><h2 id="8-3d-그래프-그리기"><a class="markdownIt-Anchor" href="#8-3d-그래프-그리기"></a> <strong>8. 3D 그래프 그리기</strong></h2><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#contour-plots" target="_blank" rel="noopener">mplot3d tutorial</a></p></blockquote><p>3D 로 그래프를 그리기 위해서는 <code>mplot3d</code>를 추가로 import 해야 함</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits <span class="keyword">import</span> mplot3d</span><br></pre></td></tr></tbody></table></figure>  <br><h3 id="8-1-밑그림-그리기-canvas"><a class="markdownIt-Anchor" href="#8-1-밑그림-그리기-canvas"></a> 8-1. 밑그림 그리기 (canvas)</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_137_0.png" alt="png"></p><br><h3 id="8-2-3d-plot-그리기"><a class="markdownIt-Anchor" href="#8-2-3d-plot-그리기"></a> 8-2. 3D plot 그리기</h3><blockquote><p><em>Axes</em> = plt.axes(projection = ‘3d’)</p><ul><li><em>Axes</em> <strong>.plot</strong> (<em>x, y, z, color=…, alpha=…, marker=…</em>)</li><li><em>Axes</em> <strong>.plot3D</strong> (<em>x, y, z, color=…, alpha=…, marker=…</em>)</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># projection = 3d로 설정</span></span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y, z 데이터 생성</span></span><br><span class="line">z = np.linspace(<span class="number">0</span>, <span class="number">15</span>, <span class="number">1000</span>)</span><br><span class="line">x = np.sin(z)</span><br><span class="line">y = np.cos(z)</span><br><span class="line"></span><br><span class="line">ax.plot(x, y, z, <span class="string">'gray'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_142_0.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># projection = 3d로 설정</span></span><br><span class="line">ax = plt.axes(projection = <span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y, z 데이터 생성</span></span><br><span class="line">sample_size = <span class="number">100</span></span><br><span class="line">x = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size)) <span class="comment"># cumsum: 누적 합</span></span><br><span class="line">y = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size))</span><br><span class="line">z = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">1</span>, sample_size))</span><br><span class="line"></span><br><span class="line">ax.plot3D(x, y, z, alpha=<span class="number">0.6</span>, marker=<span class="string">'o'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'ax.plot'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_144_0.png" alt="png"></p><br><h3 id="8-3-3d-scatter-그리기"><a class="markdownIt-Anchor" href="#8-3-3d-scatter-그리기"></a> 8-3. 3d-scatter 그리기</h3><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.scatter.html" target="_blank" rel="noopener">&lt;Axes.scatter&gt; Document</a></p></blockquote><blockquote><p><em>Axes</em> = fig.add_subplot(111, projection=‘3d’) <font color="blue"># Axe3D object</font></p><p><em>Axes</em> <strong>.scatter</strong>( <em>x, y, z, s=None, c=None, marker=None, cmap=None, alpha=None, …</em>)</p><ul><li><strong>s:</strong> marker size</li><li><strong>c:</strong> marker color</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>, <span class="number">5</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">'3d'</span>) <span class="comment"># Axe3D object</span></span><br><span class="line"></span><br><span class="line">sample_size = <span class="number">500</span></span><br><span class="line"></span><br><span class="line">x = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line">y = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line">z = np.cumsum(np.random.normal(<span class="number">0</span>, <span class="number">5</span>, sample_size))</span><br><span class="line"></span><br><span class="line">ax.scatter(x, y, z, c=z, s=<span class="number">20</span>, alpha=<span class="number">0.5</span>, cmap=<span class="string">'Greens'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">'ax.scatter'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_148_0.png" alt="png"></p><p>컬러가 찐한 부분에 데이터가 더 많이 몰려있음</p>  <br><h3 id="8-4-contour3d-그리기-등고선"><a class="markdownIt-Anchor" href="#8-4-contour3d-그리기-등고선"></a> 8-4. contour3D 그리기 (등고선)</h3><blockquote><p><em>Axes</em> = plt.axes(projection=‘3d’)<br><em>Axes</em> <strong>.contour3D</strong> (<em>x, y, z</em> )</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x = np.linspace(<span class="number">-6</span>, <span class="number">6</span>, <span class="number">30</span>)</span><br><span class="line">y = np.linspace(<span class="number">-6</span>, <span class="number">6</span>, <span class="number">30</span>)</span><br><span class="line">x, y = np.meshgrid(x, y)</span><br><span class="line"></span><br><span class="line">z = np.sin(np.sqrt(x**<span class="number">2</span> + y**<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line">ax = plt.axes(projection=<span class="string">'3d'</span>)</span><br><span class="line"></span><br><span class="line">ax.contour3D(x, y, z, <span class="number">20</span>, cmap=<span class="string">'Reds'</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"ax.contour3D"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_153_0.png" alt="png"></p><br><br><h2 id="9-imshow"><a class="markdownIt-Anchor" href="#9-imshow"></a> <strong>9. imshow</strong></h2><p>이미지 데이터가 numpy array에서는 숫자형식으로 표현됨<br>명령어<code>imshow</code>는 이 컬러숫자들을 이미지로 변환하여 보여줌</p>  <br><p>예제: <code>sklearn.datasets</code>안의 <code>load_digits</code>데이터</p><ul><li><p><code>load_digits</code> 는 0~16 값을 가지는 array로 이루어져 있다</p></li><li><p>1개의 array는 8 X 8 배열 안에 표현되어 있다</p></li><li><p>숫자는 0~9까지 이루어져있다</p><br></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_digits</span><br><span class="line"></span><br><span class="line">digits = load_digits()</span><br><span class="line">X = digits.images[:<span class="number">10</span>]  <span class="comment"># 앞에 10개 image를 뽑아서 저장함</span></span><br><span class="line">X[<span class="number">0</span>]  <span class="comment"># 첫번째 image의 컬러숫자를 살펴보자</span></span><br></pre></td></tr></tbody></table></figure><pre><code>array([[ 0.,  0.,  5., 13.,  9.,  1.,  0.,  0.],       [ 0.,  0., 13., 15., 10., 15.,  5.,  0.],       [ 0.,  3., 15.,  2.,  0., 11.,  8.,  0.],       [ 0.,  4., 12.,  0.,  0.,  8.,  8.,  0.],       [ 0.,  5.,  8.,  0.,  0.,  9.,  8.,  0.],       [ 0.,  4., 11.,  0.,  1., 12.,  7.,  0.],       [ 0.,  2., 14.,  5., 10., 12.,  0.,  0.],       [ 0.,  0.,  6., 13., 10.,  0.,  0.,  0.]])</code></pre><br><p>지금 한 위치에 숫자 하나밖에 없어서 컬러는 흑백으로 나옴.<br>숫자가 클수록 black에 가깝고, 작을수록 white에 가까움</p>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fig, axes = plt.subplots(nrows=<span class="number">2</span>, ncols=<span class="number">5</span>, sharex=<span class="literal">True</span>, figsize=(<span class="number">12</span>, <span class="number">6</span>), sharey=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    axes[i//<span class="number">5</span>][i%<span class="number">5</span>].imshow(X[i], cmap=<span class="string">'Blues'</span>)</span><br><span class="line">    axes[i//<span class="number">5</span>][i%<span class="number">5</span>].set_title(str(i), fontsize=<span class="number">20</span>)</span><br><span class="line">    </span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib2/output_164_0.png" alt="png"></p><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      scatterplot, barplot, line plot, areaplot, histogram, pie chart, box plot, 3D plot, imshow
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Matplotlib" scheme="https://hyemin-kim.github.io/tags/Matplotlib/"/>
    
      <category term="시각화" scheme="https://hyemin-kim.github.io/tags/%EC%8B%9C%EA%B0%81%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Matplotlib - (1) 기본 canvas 그리기 및 스타일링</title>
    <link href="https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib1/"/>
    <id>https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib1/</id>
    <published>2020-06-28T05:12:24.000Z</published>
    <updated>2020-07-03T12:27:12.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="기본적인-canvas-그리기-및-스타일링"><a class="markdownIt-Anchor" href="#기본적인-canvas-그리기-및-스타일링"></a> 기본적인 canvas 그리기 및 스타일링</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-%EB%B0%91-%EA%B7%B8%EB%A6%BC-%EA%B7%B8%EB%A6%AC%EA%B8%B0"><strong>1. 밑 그림 그리기</strong></a><ul><li><a href="#1-1-%EB%8B%A8%EC%9D%BC-%EA%B7%B8%EB%9E%98%ED%94%84-single-graph">1-1. 단일 그래프 (single graph)</a></li><li><a href="#1-2-%EB%8B%A4%EC%A4%91-%EA%B7%B8%EB%9E%98%ED%94%84-multiple-graphs">1-2. 다중 그래프 (multiple graphs)</a></li><li><a href="#1-3-%EA%B7%B8%EB%9E%98%ED%94%84-%EB%B0%B0%EC%97%B4-subplot-subplots">1-3. 그래프 배열 (subplot / subplots)</a></li></ul></li><li><a href="#2-%EC%A3%BC%EC%9A%94-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%98%B5%EC%85%98"><strong>2. 주요 스타일 옵션</strong></a><ul><li><a href="#2-1-%ED%83%80%EC%9D%B4%ED%8B%80">2-1. 타이틀</a></li><li><a href="#2-2-x-y%EC%B6%95-label-%EC%84%A4%EC%A0%95">2-2. X, Y축 Label 설정</a></li><li><a href="#2-3-x-y%EC%B6%95-tick-%EC%A1%B0%EC%A0%95-rotation">2-3. X, Y축 Tick 조정 (rotation)</a></li><li><a href="#2-4-%EB%B2%94%EB%A1%80-legend-%EC%84%A4%EC%A0%95">2-4. 범례 (Legend) 설정</a></li><li><a href="#2-5-x%EC%99%80-y%EC%9D%98-%ED%95%9C%EA%B3%84%EC%A0%90limit-%EC%84%A4%EC%A0%95">2-5. X와 Y의 한계점(Limit) 설정</a></li><li><a href="#2-6-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%84%B8%EB%B6%80-%EC%84%A4%EC%A0%95-%EB%A7%88%EC%BB%A4-%EB%9D%BC%EC%9D%B8-%EC%BB%AC%EB%9F%AC">2-6. 스타일 세부 설정 - 마커, 라인, 컬러</a></li><li><a href="#2-7-%EA%B7%B8%EB%A6%AC%EB%93%9C-grid-%EC%84%A4%EC%A0%95">2-7. 그리드 (grid) 설정</a></li></ul></li></ul><p></p><br><blockquote><p><em><strong>reference:</strong></em> <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">pyplot 공식 Document 살펴보기</a></p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># plt.rcParams["figure.figsize"] = (12, 9)  # figure size 설정</span></span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="1-밑-그림-그리기"><a class="markdownIt-Anchor" href="#1-밑-그림-그리기"></a> <strong>1. 밑 그림 그리기</strong></h2><h3 id="1-1-단일-그래프-single-graph"><a class="markdownIt-Anchor" href="#1-1-단일-그래프-single-graph"></a> 1-1. 단일 그래프 (single graph)</h3><blockquote><p><strong>plt.plot</strong>(<em>df_name</em>)<br><strong>plt.show()</strong></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## data 생성</span></span><br><span class="line">data = np.arange(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## plot</span></span><br><span class="line">plt.plot(data)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 그래프만 보여주는 코드 (타 실행 결과 생략하고 그래프만 보여줌)</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_10_0.png" alt="png"></p><br><h3 id="1-2-다중-그래프-multiple-graphs"><a class="markdownIt-Anchor" href="#1-2-다중-그래프-multiple-graphs"></a> 1-2. 다중 그래프 (multiple graphs)</h3><blockquote><ul><li><strong>여러 그래프를 같은 canvas 안에 그리기:</strong><br>명령어 <code>plt.plot(df_name)</code> 를 연속 사용</li><li><strong>새 그래프를 새로운 canvas 안에 그리기:</strong><br>세 그래프를 그리기 전에 <code>plt.figure()</code>명령어를 추가</li></ul></blockquote><br><p><strong>(1) 1개의 canvas 안에 다중 그래프 그리기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">1</span>, <span class="number">51</span>)</span><br><span class="line">data2 = np.arange(<span class="number">51</span>, <span class="number">101</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.plot(data1)</span><br><span class="line">plt.plot(data2)</span><br><span class="line">plt.plot(data2 + <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_15_0.png" alt="png"></p><br><p><strong>(2) 새로운 canvas에서 새 그래프를 그리기</strong></p><ul><li>figure()는 새로운 그래프 canvas를 생성한다</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(data)</span><br><span class="line"></span><br><span class="line">plt.figure()   <span class="comment"># figure() 명령어를 추가</span></span><br><span class="line">plt.plot(data2)</span><br><span class="line">plt.plot(data2 + <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_19_0.png" alt="png"></p><p><img src="/images/S-Python-Matplotlib1/output_19_1.png" alt="png"></p><br><h3 id="1-3-그래프-배열-subplot-subplots"><a class="markdownIt-Anchor" href="#1-3-그래프-배열-subplot-subplots"></a> 1-3. 그래프 배열 (subplot / subplots)</h3><blockquote><p>여러 개 plot을 지정된 행,열수에 따라 배열해주기:</p><ul><li>plt.subplot(row, column, index)   <font color="blue"># 각 plot의 좌표 설정</font></li><li>plt.subplots(행의 갯수, 열의 갯수)  <font color="blue"># 행,열수 설정</font></li></ul></blockquote>  <br><p><strong>(1) subplot (plot의 좌표를 설정하기)</strong></p><p>이 방법은 <strong>그래프마다 설정</strong>해줘야 함</p><blockquote><p><strong>plt.subplot</strong>(row, column, index)  <font color="blue"># 콤마를 제거해도 됨</font></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_27_0.png" alt="png"></p><br><p>위의 코드와 동일하나, "콤마"를 제거한 상태</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">211</span>)   <span class="comment"># 콤마를 생략함: 211 -&gt; row : 2, col: 1, index : 1</span></span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">212</span>)   <span class="comment"># 콤마를 생략함</span></span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_30_0.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">data1 = np.arange(<span class="number">100</span>, <span class="number">201</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(data1)</span><br><span class="line"></span><br><span class="line">data2 = np.arange(<span class="number">200</span>, <span class="number">301</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(data2)</span><br><span class="line"></span><br><span class="line">data3 = np.arange(<span class="number">300</span>, <span class="number">401</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">plt.plot(data3)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_32_0.png" alt="png"></p><br><p><strong>(2) subplots (배열 기준인 행,열수를 지정하기)</strong></p><p>subplot와 다르게 <strong>subplots()명령어는 한번만 설정</strong>해주면 됨</p><blockquote><p><strong>plt.subplots</strong>(행의 갯수, 열의 갯수)</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">data = np.arange(<span class="number">1</span>, <span class="number">51</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 밑 그림</span></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plot</span></span><br><span class="line">axes[<span class="number">0</span>, <span class="number">0</span>].plot(data)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">1</span>].plot(data * data)</span><br><span class="line">axes[<span class="number">0</span>, <span class="number">2</span>].plot(data ** <span class="number">3</span>)  <span class="comment"># data^3</span></span><br><span class="line">axes[<span class="number">1</span>, <span class="number">0</span>].plot(data % <span class="number">10</span>)</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">1</span>].plot(-data)</span><br><span class="line">axes[<span class="number">1</span>, <span class="number">2</span>].plot(data // <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_37_0.png" alt="png"></p><br><br><h2 id="2-주요-스타일-옵션"><a class="markdownIt-Anchor" href="#2-주요-스타일-옵션"></a> <strong>2. 주요 스타일 옵션</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 출처: matplotlib.org</span></span><br><span class="line">Image(<span class="string">'https://matplotlib.org/_images/anatomy.png'</span>)</span><br></pre></td></tr></tbody></table></figure><img src="/images/S-Python-Matplotlib1/output_41_0.png" alt="png" style="zoom:67%;"><br>  <h3 id="2-1-타이틀"><a class="markdownIt-Anchor" href="#2-1-타이틀"></a> 2-1. 타이틀</h3><blockquote><ul><li><strong>타이틀 추가:</strong> plt.title("…")</li><li><strong>타이틀 fontsize 설정:</strong>  plt.title("…",  fontsize = … )</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"이것은 타이틀 입니다"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0.5, 1.0, '이것은 타이틀 입니다')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_46_1.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">"타이틀 fontsize를 키웁니다"</span>, fontsize = <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0.5, 1.0, '타이틀 fontsize를 키웁니다')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_48_1.png" alt="png"></p><br><h3 id="2-2-x-y축-label-설정"><a class="markdownIt-Anchor" href="#2-2-x-y축-label-설정"></a> 2-2. X, Y축 Label 설정</h3><blockquote><ul><li><strong>plt.xlabel</strong> ( “<em>x_name</em>”, fontsize = …)</li><li><strong>plt.ylabel</strong> ( “<em>y_name</em>”, fontsize = …)</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>])</span><br><span class="line">plt.plot([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 설정</span></span><br><span class="line">plt.title(<span class="string">"Label 설정 예제"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0, 0.5, 'Y축')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_52_1.png" alt="png"></p><br><h3 id="2-3-x-y축-tick-조정-rotation"><a class="markdownIt-Anchor" href="#2-3-x-y축-tick-조정-rotation"></a> 2-3. X, Y축 Tick 조정 (rotation)</h3><p>Tick은 X, Y축에 위치한 눈금을 말한다<br>rotation 명령어를 통해 Tick의 각도를 조절할 수 있다</p><blockquote><ul><li><strong>plt.xticks</strong> ( <em>rotation = …</em> )</li><li><strong>plt.yticks</strong> ( <em>rotation = …</em> )<br>Rotation 각도는 <font color="blue">역시개방향 회전각도</font>를 말한다</li></ul></blockquote> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"X, Y축 Tick 조정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log  This is separate from the ipykernel package so we can avoid doing imports until(array([-10.,   0.,  10.,  20.,  30.,  40.,  50.,  60.,  70.,  80.,  90.]), &lt;a list of 11 Text yticklabel objects&gt;)</code></pre><br><p><img src="/images/S-Python-Matplotlib1/output_58_2.png" alt="png"></p><br><h3 id="2-4-범례-legend-설정"><a class="markdownIt-Anchor" href="#2-4-범례-legend-설정"></a> 2-4. 범례 (Legend) 설정</h3><blockquote><p><strong>plt.legend</strong> ( [ “<em>name1</em>” , “<em>name2</em>” , … ], fontsize = …)</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"범례(Legend) 설정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend 설정</span></span><br><span class="line">plt.legend([<span class="string">"2x"</span>, <span class="string">"x^2"</span>, <span class="string">"logx"</span>], fontsize = <span class="number">14</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log  This is separate from the ipykernel package so we can avoid doing imports until&lt;matplotlib.legend.Legend at 0x173a5712888&gt;</code></pre><p><img src="/images/S-Python-Matplotlib1/output_63_2.png" alt="png"></p><br><h3 id="2-5-x와-y의-한계점limit-설정"><a class="markdownIt-Anchor" href="#2-5-x와-y의-한계점limit-설정"></a> 2-5. X와 Y의 한계점(Limit) 설정</h3><blockquote><ul><li><strong>plt.xlim</strong> ( <em>a, b</em> )</li><li><strong>plt.ylim</strong> ( <em>c, d</em> )</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)**<span class="number">2</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.log(np.arange(<span class="number">10</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># title</span></span><br><span class="line">plt.title(<span class="string">"X축, Y축 Limit 설정"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축, Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">"X축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line">plt.ylabel(<span class="string">"Y축"</span>, fontsize = <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X tick, Y tick rotation 조정</span></span><br><span class="line">plt.xticks(rotation = <span class="number">90</span>)</span><br><span class="line">plt.yticks(rotation = <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># legend 설정</span></span><br><span class="line">plt.legend([<span class="string">"2x"</span>, <span class="string">"x^2"</span>, <span class="string">"logx"</span>], fontsize = <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x, y limit 설정</span></span><br><span class="line">plt.xlim(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">plt.ylim(<span class="number">0</span>, <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>D:\Anaconda\lib\site-packages\ipykernel_launcher.py:3: RuntimeWarning: divide by zero encountered in log  This is separate from the ipykernel package so we can avoid doing imports until(0, 20)</code></pre><p><img src="/images/S-Python-Matplotlib1/output_68_2.png" alt="png"></p><br><h3 id="2-6-스타일-세부-설정-마커-라인-컬러"><a class="markdownIt-Anchor" href="#2-6-스타일-세부-설정-마커-라인-컬러"></a> 2-6. 스타일 세부 설정 - 마커, 라인, 컬러</h3><blockquote><p><em><strong>reference:</strong></em>  <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot" target="_blank" rel="noopener">세부 Document 확인하기</a></p></blockquote><p>스타일 세부 설정은 마커, 선의 동류 설정, 드리고 컬러가 있으며, 문다열로 세부설정을 하게 된다</p>  <br><p><strong>(1) marker의 종류</strong></p><ul><li>‘.’point marker</li><li>‘,’pixel marker</li><li>‘o’circle marker</li><li>‘v’triangle_down marker</li><li>‘^’triangle_up marker</li><li>‘&lt;’triangle_left marker</li><li>‘&gt;’triangle_right marker</li><li>‘1’tri_down marker</li><li>‘2’tri_up marker</li><li>‘3’tri_left marker</li><li>‘4’tri_right marker</li><li>'s ’square marker</li><li>‘p’pentagon marker</li><li>‘*’star marker</li><li>‘h’hexagon1 marker</li><li>‘H’hexagon2 marker</li><li>‘+’plus marker</li><li>‘x’x marker</li><li>‘D’diamond marker</li><li>‘d’thin_diamond marker</li><li>‘|’vline marker</li><li>‘_’hline marker</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># marker 스타일 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, markersize=<span class="number">5</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, markersize=<span class="number">10</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, markersize=<span class="number">15</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, markersize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'마커 스타일 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0, 0.5, 'Y축')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_75_1.png" alt="png"></p><br><p><strong>(2) line의 종류</strong></p><ul><li>‘-’ solid line style</li><li>‘–’ dashed line style</li><li>‘-.’ dash-dot line style</li><li>‘:’ dotted line style</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># line 스타일 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">''</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">40</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'다양한 선의 종류 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0, 0.5, 'Y축')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_78_1.png" alt="png"></p><br><p><strong>(3) color의 종류</strong></p><ul><li>‘b’blue</li><li>‘g’green</li><li>‘r’red</li><li>‘c’cyan</li><li>‘m’magenta</li><li>‘y’yellow</li><li>‘k’black</li><li>‘w’white</li><li>more choices: <a href="https://matplotlib.org/api/colors_api.html#module-matplotlib.colors" target="_blank" rel="noopener">matplotlib.colors</a>   <em>(e.g. “purple”, “#008000”)</em></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># color 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>, color=<span class="string">'b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>, color=<span class="string">'c'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>, color=<span class="string">'y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>, color=<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'색상 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0, 0.5, 'Y축')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_81_1.png" alt="png"></p><br><p><strong>(4) Format: '[marker][line][color]'</strong></p><p>example:</p><ul><li>‘b’    # blue markers with default shape</li><li>‘or’   # red circles</li><li>‘-g’   # green solid line</li><li>‘–’   # dashed line with default color</li><li>‘^k:’  # black triangle_up markers connected by a dotted line</li></ul><p>Each of them is optional. If not provided, the value from the style cycle is used. Exception: If line is given, but no marker, the data will be a line without markers.</p><br>  <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># "marker + line + color" format 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, <span class="string">"o-r"</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, <span class="string">'v--b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, <span class="string">'+y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, <span class="string">':k'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'marker/line + color 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0, 0.5, 'Y축')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_87_1.png" alt="png"></p><br><p><strong>(5) 색상 투명도 설정</strong></p><ul><li>alpha = … (0.0 ~ 1.0)</li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># color 투명도 설정</span></span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.1</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.3</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, color=<span class="string">'b'</span>, alpha=<span class="number">0.6</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, color=<span class="string">'b'</span>, alpha=<span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'투명도 (alpha) 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>Text(0, 0.5, 'Y축')</code></pre><p><img src="/images/S-Python-Matplotlib1/output_90_1.png" alt="png"></p><br><h3 id="2-7-그리드-grid-설정"><a class="markdownIt-Anchor" href="#2-7-그리드-grid-설정"></a> 2-7. 그리드 (grid) 설정</h3><blockquote><p><strong>그리드 (grid) 추가:</strong> plt.grid()</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span>, marker=<span class="string">'o'</span>, linestyle=<span class="string">'-'</span>, color=<span class="string">'b'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">10</span>, marker=<span class="string">'v'</span>, linestyle=<span class="string">'--'</span>, color=<span class="string">'c'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">20</span>, marker=<span class="string">'+'</span>, linestyle=<span class="string">'-.'</span>, color=<span class="string">'y'</span>)</span><br><span class="line">plt.plot(np.arange(<span class="number">10</span>), np.arange(<span class="number">10</span>)*<span class="number">2</span> - <span class="number">30</span>, marker=<span class="string">'*'</span>, linestyle=<span class="string">':'</span>, color=<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 타이틀 &amp; font 설정</span></span><br><span class="line">plt.title(<span class="string">'그리드 설정 예제'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># X축 &amp; Y축 Label 설정</span></span><br><span class="line">plt.xlabel(<span class="string">'X축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Y축'</span>, fontsize=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># grid 옵션 추가</span></span><br><span class="line">plt.grid()</span><br></pre></td></tr></tbody></table></figure><p><img src="/images/S-Python-Matplotlib1/output_94_0.png" alt="png"></p><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;기본적인-canvas-그리기-및-스타일링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#기본적인-canvas-그리기-및-스타일링&quot;&gt;&lt;/a&gt; 기본적인 canvas 그리기 및 스타일링&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul clas
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Matplotlib" scheme="https://hyemin-kim.github.io/tags/Matplotlib/"/>
    
      <category term="시각화" scheme="https://hyemin-kim.github.io/tags/%EC%8B%9C%EA%B0%81%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Matplotlib 개요</title>
    <link href="https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib0/"/>
    <id>https://hyemin-kim.github.io/2020/06/28/S-Python-Matplotlib0/</id>
    <published>2020-06-28T05:11:58.000Z</published>
    <updated>2020-06-28T05:42:20.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="시각화-library-matplotlib-개요"><a class="markdownIt-Anchor" href="#시각화-library-matplotlib-개요"></a> 시각화 library  – [matplotlib] 개요</h1><p></p><ul class="markdownIt-TOC"><li><a href="#matplotlib-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B8%B0%EB%B0%98-%EC%8B%9C%EA%B0%81%ED%99%94-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC"><strong><strong>matplotlib:</strong> 파이썬 기반 시각화 라이브러리</strong></a><ul><li><a href="#1-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0">1. 불러오기</a></li><li><a href="#2-matplotlib-%EC%A3%BC%EC%9A%94-%EC%9E%A5%EC%A0%90">2. matplotlib 주요 장점</a></li><li><a href="#3-matplotlib-%EC%A3%BC%EC%9A%94-%EB%8B%A8%EC%A0%90">3. matplotlib 주요 단점</a></li><li><a href="#4-matplotlib-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8">4. matplotlib 웹사이트</a></li></ul></li></ul><p></p><br><h2 id="matplotlib-파이썬-기반-시각화-라이브러리"><a class="markdownIt-Anchor" href="#matplotlib-파이썬-기반-시각화-라이브러리"></a> <strong><strong>matplotlib:</strong> 파이썬 기반 시각화 라이브러리</strong></h2>  <br><h3 id="1-불러오기"><a class="markdownIt-Anchor" href="#1-불러오기"></a> 1. 불러오기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt  <span class="comment"># alias 설정</span></span><br></pre></td></tr></tbody></table></figure><ul><li><p>pandas도 matplotlib을 내장</p><br></li></ul><h3 id="2-matplotlib-주요-장점"><a class="markdownIt-Anchor" href="#2-matplotlib-주요-장점"></a> 2. matplotlib 주요 장점</h3><ul><li><p>파이썬 표준 시각화 도구라고 불릴 만큼 다양한 기능 지원</p></li><li><p>세부 옵션을 통하여 아름다운 스타일링 가능</p></li><li><p>보다 다양한 그래프를 그릴 수 있음</p></li><li><p>pandas와 연동이 용이함</p><br></li></ul><h3 id="3-matplotlib-주요-단점"><a class="markdownIt-Anchor" href="#3-matplotlib-주요-단점"></a> 3. matplotlib 주요 단점</h3><ul><li><p>한글에 대한 완벽한 지원 X</p><ul><li>한글 사용시 추가설정 필요<br>(설정방법은 <a href="https://hyemin-kim.github.io/2020/06/25/S-Python-Pandas-visual/"> [Python &gt;&gt; Pandas 시각화] </a> 안의 [0.준비 - 한글폰트 깨짐현상 해결]을 참조)</li></ul></li><li><p>세부 기능이 많으나, 사용성이 복잡하다고 느낄 수 있음</p><br></li></ul><h3 id="4-matplotlib-웹사이트"><a class="markdownIt-Anchor" href="#4-matplotlib-웹사이트"></a> 4. matplotlib 웹사이트</h3><p><a href="http://matplotlib.org/" target="_blank" rel="noopener">http://matplotlib.org/</a></p><p>여거시 matplotlib의 Documents, Samples 들을 볼 수 있음</p><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      matplotlib - 파이썬 기반 시각화 라이브러리
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Matplotlib" scheme="https://hyemin-kim.github.io/tags/Matplotlib/"/>
    
      <category term="사각화" scheme="https://hyemin-kim.github.io/tags/%EC%82%AC%EA%B0%81%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 시각화</title>
    <link href="https://hyemin-kim.github.io/2020/06/25/S-Python-Pandas-visual/"/>
    <id>https://hyemin-kim.github.io/2020/06/25/S-Python-Pandas-visual/</id>
    <published>2020-06-25T05:09:37.000Z</published>
    <updated>2020-06-25T05:28:17.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pandas-데이터-시각화"><a class="markdownIt-Anchor" href="#pandas-데이터-시각화"></a> Pandas - 데이터 시각화</h1><p></p><ul class="markdownIt-TOC"><li><a href="#0-%EC%A4%80%EB%B9%84-%ED%95%9C%EA%B8%80%ED%8F%B0%ED%8A%B8-%EA%B9%A8%EC%A7%90%ED%98%84%EC%83%81-%ED%95%B4%EA%B2%B0"><strong>0. 준비 – 한글폰트 깨짐현상 해결</strong></a></li><li><a href="#1-plot-%EA%B7%B8%EB%9E%98%ED%94%84"><strong>1. Plot 그래프</strong></a><ul><li><a href="#line-%EA%B7%B8%EB%9E%98%ED%94%84">line 그래프</a></li><li><a href="#bar-%EA%B7%B8%EB%9E%98%ED%94%84">bar 그래프</a></li><li><a href="#%ED%9E%88%EC%8A%A4%ED%86%A0%EA%B7%B8%EB%9E%A8-hist">히스토그램 (hist)</a></li><li><a href="#%EC%BB%A4%EB%84%90-%EB%B0%80%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-kde">커널 밀도 그래프 (kde)</a></li><li><a href="#%EA%B3%A0%EB%B0%80%EB%8F%84-%EC%82%B0%EC%A0%90%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-hexbin">고밀도 산점도 그래프 (hexbin)</a></li><li><a href="#%EB%B0%95%EC%8A%A4-%ED%94%8C%EB%A1%AF-box">박스 플롯 (box)</a></li><li><a href="#area-plot">area plot</a></li><li><a href="#%ED%8C%8C%EC%9D%B4-%EA%B7%B8%EB%9E%98%ED%94%84-pie-plot">파이 그래프 (pie plot)</a></li><li><a href="#%EC%82%B0%EC%A0%90%EB%8F%84-%EA%B7%B8%EB%9E%98%ED%94%84-scatter-plot">산점도 그래프 (scatter plot)</a></li></ul></li></ul><p></p>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"house_price_clean.csv"</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역</th>      <th>규모</th>      <th>연도</th>      <th>월</th>      <th>분양가</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>4</th>      <td>인천</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>3488</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>3288</th>      <td>경남</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3065</td>    </tr>    <tr>      <th>3289</th>      <td>경남</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3247</td>    </tr>    <tr>      <th>3290</th>      <td>제주</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>3291</th>      <td>제주</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>3292</th>      <td>제주</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>3293 rows × 5 columns</p></div><br>  <br><h2 id="0-준비-한글폰트-깨짐현상-해결"><a class="markdownIt-Anchor" href="#0-준비-한글폰트-깨짐현상-해결"></a> <strong>0. 준비 – 한글폰트 깨짐현상 해결</strong></h2><blockquote><p><em><strong>reference:</strong></em></p><ol><li><a href="https://blog.naver.com/itisik/221789012960" target="_blank" rel="noopener">주피터 노트북(Jupyter notebook) - Matplotlib 한글 깨짐 현상 해결</a></li><li><a href="https://teddylee777.github.io/visualization/matplotlib-%EC%8B%9C%EA%B0%81%ED%99%94-%ED%95%9C%EA%B8%80%ED%8F%B0%ED%8A%B8%EC%A0%81%EC%9A%A9" target="_blank" rel="noopener">matplotlib/seaborn으로 시각화할 때 한글 폰트 깨짐현상 해결방법</a></li></ol></blockquote><br><p>Jupyter Notebook에서 그래프를 그릴 때 한글 깨짐 현상이 발생한다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.plot()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179eb070ac8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_9_2.png" alt="png"></p><blockquote><p>우리는 <strong>설정 파일을 수정하여 한글 폰트를 영구 등록</strong>함으로써 이 문제를 해결할 수 있다</p></blockquote><br><p><strong>(1) 설정 파일 위치 찾기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</span><br><span class="line"></span><br><span class="line"><span class="comment">#font 설정 파일 위치 출력</span></span><br><span class="line">mpl.matplotlib_fname()</span><br></pre></td></tr></tbody></table></figure><pre><code>'D:\\Anaconda\\lib\\site-packages\\matplotlib\\mpl-data\\matplotlibrc'</code></pre><br><p><strong>(2) 설정 파일 수정하기</strong></p><p>맨 마지막 <em><strong>matplotlibrc</strong></em> 는 우리가 수정해야할 파일의 이름이다</p><ul><li><p>step 1. 한글 폰트 적용<br>수정전: <em><mark>#</mark> font.family   : <mark>sans-serif</mark></em><br>수정후: <em>font.family   : <mark>Malgun Gothic</mark></em></p></li><li><p>step 2. minus 깨짐 방지<br>수정전: <em><mark>#</mark> axes.unicode_minus  : <mark>True</mark> ## use unicode for the minus symbol</em><br>수정후: <em>axes.unicode_minus  : <mark>False</mark> ## use unicode for the minus symbol</em></p></li></ul><br><p><strong>(3) Tip: 전역으로 시각화 figsize 조절</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">'figure.figsize'</span>] = (<span class="number">8</span>, <span class="number">5</span>)</span><br></pre></td></tr></tbody></table></figure> <br> <p><strong>설정을 완료한 후 jupyter notebook의 kernel을 리셋하고 다시 그래프를 그리면,<br>한글폰트가 깨지지 않고 잘 출력되는 것을 확인하실 수 있다.</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.plot()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f01b0c48&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_24_1.png" alt="png"></p><br><br><h2 id="1-plot-그래프"><a class="markdownIt-Anchor" href="#1-plot-그래프"></a> <strong>1. Plot 그래프</strong></h2><blockquote><p><em>df_name</em> [ <em>col_name</em> ] <strong>.plot</strong> ( <strong>kind</strong> = ‘…’ )</p></blockquote><blockquote><ul><li>plot은 일반 선그래프를 나타난다</li><li>kind 옵션을 통해 원하는 그패프를 그릴 수 있다</li></ul></blockquote><br><p><strong>kind 옵션:</strong></p><ul><li><p>line: 선 그래프</p></li><li><p>bar: 바 그래프</p></li><li><p>barh: 수평 바 프래프</p></li><li><p>hist: 히스토르램</p></li><li><p>kde: 커널 밀도 그래프</p></li><li><p>hexbin: 고밀도 산점도 그래프</p></li><li><p>box: 박스 플롯</p></li><li><p>area: 면적 그래프</p></li><li><p>pie: 파이 그래프</p></li><li><p>scatter: 산점도 그래프</p><br> </li></ul><h3 id="line-그래프"><a class="markdownIt-Anchor" href="#line-그래프"></a> line 그래프</h3><blockquote><p>line 그래프는 데이터가 연속적인 경우 사용하기 적절하다. (예를 들면, 주가 데이터)</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역</th>      <th>규모</th>      <th>연도</th>      <th>월</th>      <th>분양가</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>4</th>      <td>인천</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>3488</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>3288</th>      <td>경남</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3065</td>    </tr>    <tr>      <th>3289</th>      <td>경남</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3247</td>    </tr>    <tr>      <th>3290</th>      <td>제주</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>3291</th>      <td>제주</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>3292</th>      <td>제주</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>3293 rows × 5 columns</p></div><br>  <p><strong>(1) 모든 observation의 분양가 살펴보기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index - 분양가</span></span><br><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">'line'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f01a0bc8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_38_1.png" alt="png"></p><br><p><strong>(2) 연도에 따른 서울 분양가 변화 추세</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># select "서울" data</span></span><br><span class="line">df_seoul = df.loc[df[<span class="string">"지역"</span>] == <span class="string">"서울"</span>]</span><br><span class="line">df_seoul</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역</th>      <th>규모</th>      <th>연도</th>      <th>월</th>      <th>분양가</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>64</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>11</td>      <td>6320</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>3178</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2020</td>      <td>1</td>      <td>8779</td>    </tr>    <tr>      <th>3234</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>8193</td>    </tr>    <tr>      <th>3235</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>8140</td>    </tr>    <tr>      <th>3236</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>13835</td>    </tr>    <tr>      <th>3237</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>9039</td>    </tr>  </tbody></table><p>212 rows × 5 columns</p></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># group by "year" </span></span><br><span class="line">df_seoul_year = df_seoul.groupby(<span class="string">'연도'</span>).mean()</span><br><span class="line">df_seoul_year</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>월</th>      <th>분양가</th>    </tr>    <tr>      <th>연도</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2015</th>      <td>11.0</td>      <td>6201.000000</td>    </tr>    <tr>      <th>2016</th>      <td>6.5</td>      <td>6674.520833</td>    </tr>    <tr>      <th>2017</th>      <td>6.5</td>      <td>6658.729167</td>    </tr>    <tr>      <th>2018</th>      <td>6.5</td>      <td>7054.687500</td>    </tr>    <tr>      <th>2019</th>      <td>6.5</td>      <td>8735.083333</td>    </tr>    <tr>      <th>2020</th>      <td>1.5</td>      <td>9647.375000</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># line plot</span></span><br><span class="line">df_seoul_year[<span class="string">"분양가"</span>].plot(kind = <span class="string">'line'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028b5c8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_43_1.png" alt="png"></p><br><h3 id="bar-그래프"><a class="markdownIt-Anchor" href="#bar-그래프"></a> bar 그래프</h3><blockquote><p>bar 그패프는 그룹별로 비교할 때 유용하다</p></blockquote> <br> <p><strong>지역별 평균 분양가 살펴보기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>지역강원    2448.156863경기    4133.952830경남    2858.932367경북    2570.465000광주    3055.043750대구    3679.620690대전    3176.127389부산    3691.981132서울    7308.943396세종    2983.543147울산    2990.373913인천    3684.302885전남    2326.250000전북    2381.416268제주    3472.677966충남    2534.950000충북    2348.183962Name: 분양가, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 수직 바 그래프</span></span><br><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean().plot(kind = <span class="string">'bar'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028b548&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_50_1.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 수평 바 그래프</span></span><br><span class="line">df.groupby(<span class="string">"지역"</span>)[<span class="string">"분양가"</span>].mean().plot(kind = <span class="string">'barh'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179edd9d4c8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_51_1.png" alt="png"></p><br><h3 id="히스토그램-hist"><a class="markdownIt-Anchor" href="#히스토그램-hist"></a> 히스토그램 (hist)</h3><blockquote><p>히스토그램은 <strong>분포-빈도 를 시각화</strong>하여 보여준다.<br>가로축에는 분포를, 세로축에는 빈도가 시각화되어 보여짐.</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">"hist"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f021cc88&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_56_1.png" alt="png"></p><br><h3 id="커널-밀도-그래프-kde"><a class="markdownIt-Anchor" href="#커널-밀도-그래프-kde"></a> 커널 밀도 그래프 (kde)</h3><blockquote><ul><li>히스토그램과 유사하게 밀도를 보여주는 그래프다</li><li>히스토그램과 유사한 모양새를 각추고 있다</li><li>하지만 히스토그램과 다르게 부드러운 라인을 가지고 있다</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가"</span>].plot(kind = <span class="string">"kde"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f043d608&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_61_1.png" alt="png"></p><br><h3 id="고밀도-산점도-그래프-hexbin"><a class="markdownIt-Anchor" href="#고밀도-산점도-그래프-hexbin"></a> 고밀도 산점도 그래프 (hexbin)</h3><blockquote><ul><li>hexbin은 고밀고 산점도 그래프다</li><li>x와 y 키 값을 넣어 주어야 한다</li><li>x, y 값 모두 numeric value 이어야한다</li><li>데이터의 밀도를 추정한다</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.plot(kind = <span class="string">"hexbin"</span>, x = <span class="string">"분양가"</span>, y = <span class="string">"연도"</span>, gridsize = <span class="number">20</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f028a9c8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_66_1.png" alt="png"></p><br><h3 id="박스-플롯-box"><a class="markdownIt-Anchor" href="#박스-플롯-box"></a> 박스 플롯 (box)</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_seoul = df.loc[df[<span class="string">"지역"</span>] == <span class="string">"서울"</span>]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_seoul[<span class="string">"분양가"</span>].plot(kind = <span class="string">"box"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f226d748&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_70_1.png" alt="png"></p><br><p><strong>box plot 해석</strong></p><p><img src="/images/S-Python-Pandas-visual/R800x0" alt="box plot 해석"></p>  <br><ul><li><p><strong>IQR (Inter Quantile Range)</strong>   = 3Q - 1Q</p></li><li><p><strong>Upper fence</strong> = 75th Percentile + 1.5*IQR</p></li><li><p><strong>Lower fence</strong> = 25th Percentile - 1.5*IQR</p><br></li></ul><p>box plot은 데이터 outlier 감지할 때 가장 많이 활용되며, 25%, median, 75% 분위값을 활용하는 용도로도 많이 활용된다</p>  <br><h3 id="area-plot"><a class="markdownIt-Anchor" href="#area-plot"></a> area plot</h3><blockquote><p>area plot은 line 그래프에서 아래 area를 모두 색칠해 주는 것이 특징이다.</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역</th>      <th>규모</th>      <th>연도</th>      <th>월</th>      <th>분양가</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>4</th>      <td>인천</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>3488</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>3288</th>      <td>경남</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3065</td>    </tr>    <tr>      <th>3289</th>      <td>경남</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3247</td>    </tr>    <tr>      <th>3290</th>      <td>제주</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>3291</th>      <td>제주</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>3292</th>      <td>제주</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>3293 rows × 5 columns</p></div> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"월"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">"line"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f22a6688&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_83_1.png" alt="png"></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"월"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">"area"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f2267588&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_84_1.png" alt="png"></p><br><h3 id="파이-그래프-pie-plot"><a class="markdownIt-Anchor" href="#파이-그래프-pie-plot"></a> 파이 그래프 (pie plot)</h3><blockquote><p>pie는 대표적으로 데이터의 점유율을 보유줄 때 유용하다</p></blockquote><br>  <p><strong>연도별 분양가 데이터 점유율</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"연도"</span>)[<span class="string">"분양가"</span>].count().plot(kind = <span class="string">'pie'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f224fec8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_90_1.png" alt="png"></p><br><h3 id="산점도-그래프-scatter-plot"><a class="markdownIt-Anchor" href="#산점도-그래프-scatter-plot"></a> 산점도 그래프 (scatter plot)</h3><blockquote><ul><li>점으로 데이터를 표기해준다</li><li>x, y값을 넣어주어야한다 (hexbin과 유사)</li><li>x축과 y축을 지정해주면 그에 맞는 데이터 분포를 볼 수 있다</li><li>역시 numeric column 만 지정할 수 있다</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.plot(x = <span class="string">"월"</span>, y = <span class="string">"분양가"</span>, kind = <span class="string">"scatter"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x179f23372c8&gt;</code></pre><p><img src="/images/S-Python-Pandas-visual/output_95_1.png" alt="png"></p><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pandas-데이터-시각화&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#pandas-데이터-시각화&quot;&gt;&lt;/a&gt; Pandas - 데이터 시각화&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;l
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="시각화" scheme="https://hyemin-kim.github.io/tags/%EC%8B%9C%EA%B0%81%ED%99%94/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
  </entry>
  
  <entry>
    <title>【실습】 Python &gt;&gt; Pandas 전처리 -- 부동산 데이터</title>
    <link href="https://hyemin-kim.github.io/2020/06/22/E-Python-Pandas-Pre-1/"/>
    <id>https://hyemin-kim.github.io/2020/06/22/E-Python-Pandas-Pre-1/</id>
    <published>2020-06-22T10:14:57.000Z</published>
    <updated>2020-06-23T16:35:19.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pandas-전처리-실습-부동산-데이터"><a class="markdownIt-Anchor" href="#pandas-전처리-실습-부동산-데이터"></a> &lt;Pandas 전처리&gt; 실습 – 부동산 데이터</h1><p></p><ul class="markdownIt-TOC"><li><a href="#0-%EC%83%98%ED%94%8C%EB%8D%B0%EC%9D%B4%ED%84%B0"><strong>0. 샘플데이터</strong></a></li><li><a href="#1-column-%EC%9D%B4%EB%A6%84-%EC%A0%9C%EC%A0%95%EC%9D%98-rename"><strong>1. column 이름 제정의 (rename)</strong></a></li><li><a href="#2-data-overview"><strong>2. Data Overview</strong></a><ul><li><a href="#2-1-data-shape-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-1. Data Shape 확인하기</a></li><li><a href="#2-2-%EA%B1%B8%EC%B8%A1%EA%B0%92%EA%B3%BC-data-type-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-2. 걸측값과 Data Type 확인하기</a></li><li><a href="#2-3-%ED%86%B5%EA%B3%84%EA%B0%92-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">2-3. 통계값 확인하기</a></li></ul></li><li><a href="#3-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98"><strong>3. 데이터 타입 변환</strong></a><ul><li><a href="#3-1-strstrip%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B3%B5%EB%B0%B1%EC%9D%B4-%EC%9E%88%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B3%B5%EB%B0%B1-%EC%97%86%EC%95%A0%EA%B8%B0">3-1. str.strip()을 활용하여 공백이 있는 데이터의 공백 없애기</a></li><li><a href="#3-2-%EB%B9%88-%EA%B3%B5%EB%B0%B1%EC%97%90-0%EC%9D%84-%EB%84%A3%EC%96%B4%EC%A3%BC%EA%B8%B0">3-2. 빈 공백에 0을 넣어주기</a></li><li><a href="#3-3-nan-%EA%B0%92%EC%9D%80-fillna%EB%A1%9C-%EC%B1%84%EC%9B%8C%EC%A3%BC%EA%B8%B0">3-3. NaN 값은 fillna로 채워주기</a></li><li><a href="#3-4-strreplace-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EC%BD%A4%EB%A7%88%EB%A5%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-4. str.replace() 를 활용하여 콤마를 제거하기</a></li><li><a href="#3-5-strreplace%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-5. str.replace()를 활용하여 “-” 제거하기</a></li><li><a href="#3-6-%EA%B7%9C%EB%AA%A8%EA%B5%AC%EB%B6%84-column%EC%97%90-%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%84%EC%9A%A9%EB%A9%B4%EC%A0%81-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0">3-6. 규모구분 column에 불필요한 “전용면적” 제거하기</a></li></ul></li><li><a href="#4-%EC%A0%84%EC%B2%98%EB%A6%AC-%EB%82%B4%EC%9A%A9-%EB%B3%B5%EC%8A%B5%ED%95%98%EA%B8%B0"><strong>4. 전처리 내용 복습하기</strong></a></li><li><a href="#5-%EC%A7%80%EC%97%AD%EB%B3%84-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0"><strong>5. 지역별 분양가격을 확인해보기</strong></a><ul><li><a href="#5-1-%EC%A7%80%EC%97%AD%EB%B3%84-%ED%8F%89%EA%B7%A0-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-1. 지역별 평균 분양가격 확인해보기</a></li><li><a href="#5-2-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%B4-100%EB%B3%B4%EB%8B%A4-%EC%9E%91%EC%9D%80-%ED%96%89%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%B4%EB%B3%B4%EA%B8%B0">5-2. 분양가격이 100보다 작은 행을 제거해보기</a></li><li><a href="#5-3-%EC%A7%80%EC%97%AD%EB%B3%84-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EA%B0%AF%EC%88%98%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-3. 지역별 “분양가격” 데이터의 갯수를 확인해보기</a></li><li><a href="#5-4-%EC%A7%80%EC%97%AD%EB%B3%84-%EC%A0%9C%EC%9D%BC-%EB%B9%84%EC%8B%BC-%EB%B6%84%EC%96%91%EA%B0%80%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0">5-4. 지역별 제일 비싼 분양가를 확인해보기</a></li></ul></li><li><a href="#6-%EC%97%B0%EB%8F%84%EB%B3%84-%ED%8F%89%EA%B7%A0-%EB%B6%84%EC%96%91%EA%B0%80%EA%B2%A9%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0"><strong>6. 연도별 평균 분양가격을 확인해보기</strong></a></li><li><a href="#7-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0"><strong>7. 피벗테이블 활용하기</strong></a></li><li><a href="#8-%EC%97%B0%EB%8F%84%EB%B3%84-%EA%B7%9C%EB%AA%A8%EB%B3%84-%EA%B0%80%EA%B2%A9%EC%9D%84-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0"><strong>8. 연도별, 규모별 가격을 알아보기</strong></a></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="0-샘플데이터"><a class="markdownIt-Anchor" href="#0-샘플데이터"></a> <strong>0. 샘플데이터</strong></h2><p><a href="https://www.data.go.kr/" target="_blank" rel="noopener">공공데이터포털</a> 에서 제공하는 공공데이터 “민간 아파트 가격동향” 를 활용한다.</p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"seoul_house_price.csv"</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격(㎡)</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4500</th>      <td>제주</td>      <td>전체</td>      <td>2020</td>      <td>2</td>      <td>3955</td>    </tr>    <tr>      <th>4501</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>4502</th>      <td>제주</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4504</th>      <td>제주</td>      <td>전용면적 102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>4505 rows × 5 columns</p></div><p><br><br></p><h2 id="1-column-이름-제정의-rename"><a class="markdownIt-Anchor" href="#1-column-이름-제정의-rename"></a> <strong>1. column 이름 제정의 (rename)</strong></h2><p><strong>[목표] 분양가격 column의 이름을 재정의:</strong></p><blockquote><p>“분양가격(m<sup>2</sup>)​” --&gt; “분양가격”</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.rename(columns = {<span class="string">"분양가격(㎡)"</span> : <span class="string">"분양가격"</span>})</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4500</th>      <td>제주</td>      <td>전체</td>      <td>2020</td>      <td>2</td>      <td>3955</td>    </tr>    <tr>      <th>4501</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>4502</th>      <td>제주</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4504</th>      <td>제주</td>      <td>전용면적 102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>4505 rows × 5 columns</p></div><br> <br><h2 id="2-data-overview"><a class="markdownIt-Anchor" href="#2-data-overview"></a> <strong>2. Data Overview</strong></h2><h3 id="2-1-data-shape-확인하기"><a class="markdownIt-Anchor" href="#2-1-data-shape-확인하기"></a> 2-1. Data Shape 확인하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.shape</span><br></pre></td></tr></tbody></table></figure><pre><code>(4505, 5)</code></pre><br><h3 id="2-2-걸측값과-data-type-확인하기"><a class="markdownIt-Anchor" href="#2-2-걸측값과-data-type-확인하기"></a> 2-2. 걸측값과 Data Type 확인하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4505 entries, 0 to 4504Data columns (total 5 columns): #   Column  Non-Null Count  Dtype ---  ------  --------------  -----  0   지역명     4505 non-null   object 1   규모구분    4505 non-null   object 2   연도      4505 non-null   int64  3   월       4505 non-null   int64  4   분양가격    4210 non-null   objectdtypes: int64(2), object(3)memory usage: 176.1+ KB</code></pre><br><h3 id="2-3-통계값-확인하기"><a class="markdownIt-Anchor" href="#2-3-통계값-확인하기"></a> 2-3. 통계값 확인하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>연도</th>      <th>월</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4505.000000</td>      <td>4505.000000</td>    </tr>    <tr>      <th>mean</th>      <td>2017.452830</td>      <td>6.566038</td>    </tr>    <tr>      <th>std</th>      <td>1.311432</td>      <td>3.595519</td>    </tr>    <tr>      <th>min</th>      <td>2015.000000</td>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>2016.000000</td>      <td>3.000000</td>    </tr>    <tr>      <th>50%</th>      <td>2017.000000</td>      <td>7.000000</td>    </tr>    <tr>      <th>75%</th>      <td>2019.000000</td>      <td>10.000000</td>    </tr>    <tr>      <th>max</th>      <td>2020.000000</td>      <td>12.000000</td>    </tr>  </tbody></table></div><br> <br><h2 id="3-데이터-타입-변환"><a class="markdownIt-Anchor" href="#3-데이터-타입-변환"></a> <strong>3. 데이터 타입 변환</strong></h2><p><strong>[목표] &lt;object 타입&gt;으로 되어있는 "분양가격"을 &lt;int 타입&gt;으로 변환하기</strong></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-193-5870dcdf031c&gt; in &lt;module&gt;----&gt; 1 df["분양가격"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    872         # work around NumPy brokenness, #1987    873         if np.issubdtype(dtype.type, np.integer):--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)    875     876         # if we have a datetime/timedelta array of objectspandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()ValueError: invalid literal for int() with base 10: '  '</code></pre><br><blockquote><p>!! “분양가격” column에 <font color="blue">“2칸 공백” 값이 있어서</font> Error가 납니다</p></blockquote>  <br><h3 id="3-1-strstrip을-활용하여-공백이-있는-데이터의-공백-없애기"><a class="markdownIt-Anchor" href="#3-1-strstrip을-활용하여-공백이-있는-데이터의-공백-없애기"></a> 3-1. str.strip()을 활용하여 공백이 있는 데이터의 공백 없애기</h3><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.str.strip()</strong></p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">'  '</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>28</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>29</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>34</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>81</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>113</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>114</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>119</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>166</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>198</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>199</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>204</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>251</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>283</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>284</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>289</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>336</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.strip(<span class="string">'  '</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>  </tbody></table></div><br>  <h3 id="3-2-빈-공백에-0을-넣어주기"><a class="markdownIt-Anchor" href="#3-2-빈-공백에-0을-넣어주기"></a> 3-2. 빈 공백에 0을 넣어주기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">''</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-198-5870dcdf031c&gt; in &lt;module&gt;----&gt; 1 df["분양가격"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    872         # work around NumPy brokenness, #1987    873         if np.issubdtype(dtype.type, np.integer):--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)    875     876         # if we have a datetime/timedelta array of objectspandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()ValueError: cannot convert float NaN to integer</code></pre><br><blockquote><p>!! “분양가격” column에 <font color="blue">“NaN” 값이 있어서</font> Error가 또 납니다 ㅠㅠ</p></blockquote><br>  <h3 id="3-3-nan-값은-fillna로-채워주기"><a class="markdownIt-Anchor" href="#3-3-nan-값은-fillna로-채워주기"></a> 3-3. NaN 값은 fillna로 채워주기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4500</th>      <td>제주</td>      <td>전체</td>      <td>2020</td>      <td>2</td>      <td>3955</td>    </tr>    <tr>      <th>4501</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>4502</th>      <td>제주</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4504</th>      <td>제주</td>      <td>전용면적 102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>4505 rows × 5 columns</p></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>368</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>369</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>374</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>388</th>      <td>강원</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>421</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4461</th>      <td>세종</td>      <td>전용면적 60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4488</th>      <td>전남</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4493</th>      <td>경북</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4499</th>      <td>경남</td>      <td>전용면적 102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>  </tbody></table><p>295 rows × 5 columns</p></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-203-5870dcdf031c&gt; in &lt;module&gt;----&gt; 1 df["분양가격"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    872         # work around NumPy brokenness, #1987    873         if np.issubdtype(dtype.type, np.integer):--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)    875     876         # if we have a datetime/timedelta array of objectspandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()ValueError: invalid literal for int() with base 10: '6,657'</code></pre><br><blockquote><p>!! 이번에는 <font color="blue">","가 들어간</font> 데이터가 문제네요…</p></blockquote>  <br><h3 id="3-4-strreplace-를-활용하여-콤마를-제거하기"><a class="markdownIt-Anchor" href="#3-4-strreplace-를-활용하여-콤마를-제거하기"></a> 3-4. str.replace() 를 활용하여 콤마를 제거하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">"6,657"</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>2125</th>      <td>서울</td>      <td>전체</td>      <td>2017</td>      <td>11</td>      <td>6,657</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.replace(<span class="string">','</span>, <span class="string">''</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-206-5870dcdf031c&gt; in &lt;module&gt;----&gt; 1 df["분양가격"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    872         # work around NumPy brokenness, #1987    873         if np.issubdtype(dtype.type, np.integer):--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)    875     876         # if we have a datetime/timedelta array of objectspandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()ValueError: cannot convert float NaN to integer</code></pre><br><blockquote><p>!! 다시 NaN값이 생겨서 fillna로 채워줍니다.</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-208-5870dcdf031c&gt; in &lt;module&gt;----&gt; 1 df["분양가격"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    872         # work around NumPy brokenness, #1987    873         if np.issubdtype(dtype.type, np.integer):--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)    875     876         # if we have a datetime/timedelta array of objectspandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()ValueError: invalid literal for int() with base 10: '-'</code></pre><br><blockquote><p>!! 이번에는 <font color="blue">"-"가</font> 멀썽이네요…</p></blockquote> <br><h3 id="3-5-strreplace를-활용하여-제거하기"><a class="markdownIt-Anchor" href="#3-5-strreplace를-활용하여-제거하기"></a> 3-5. str.replace()를 활용하여 “-” 제거하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].str.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">"분양가격"</span>] == <span class="string">""</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-211-5870dcdf031c&gt; in &lt;module&gt;----&gt; 1 df["분양가격"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    872         # work around NumPy brokenness, #1987    873         if np.issubdtype(dtype.type, np.integer):--&gt; 874             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)    875     876         # if we have a datetime/timedelta array of objectspandas\_libs\lib.pyx in pandas._libs.lib.astype_intsafe()ValueError: cannot convert float NaN to integer</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"분양가격"</span>] = df[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4505 entries, 0 to 4504Data columns (total 5 columns): #   Column  Non-Null Count  Dtype ---  ------  --------------  -----  0   지역명     4505 non-null   object 1   규모구분    4505 non-null   object 2   연도      4505 non-null   int64  3   월       4505 non-null   int64  4   분양가격    4505 non-null   int32 dtypes: int32(1), int64(2), object(2)memory usage: 158.5+ KB</code></pre><br><blockquote><p>이제 드디어 “분양가격” column의 Type을 int로 성공적으로 바꿨습니다!!!</p></blockquote><br><h3 id="3-6-규모구분-column에-불필요한-전용면적-제거하기"><a class="markdownIt-Anchor" href="#3-6-규모구분-column에-불필요한-전용면적-제거하기"></a> 3-6. 규모구분 column에 불필요한 “전용면적” 제거하기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>  </tbody></table></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"규모구분"</span>] = df[<span class="string">"규모구분"</span>].str.replace(<span class="string">"전용면적"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>  </tbody></table></div> <br>   <br><h2 id="4-전처리-내용-복습하기"><a class="markdownIt-Anchor" href="#4-전처리-내용-복습하기"></a> <strong>4. 전처리 내용 복습하기</strong></h2><p><strong>방급 진행 했던 전처리 과정을 복습해봅시다!</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">"seoul_house_price.csv"</span>)</span><br></pre></td></tr></tbody></table></figure>   <br><p><strong>(1) 콤마가 있는 경우</strong></p><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.str.replace</strong> (’,’, ‘’)</p></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.iloc[<span class="number">2125</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>지역명           서울규모구분          전체연도          2017월             11분양가격(㎡)    6,657Name: 2125, dtype: object</code></pre> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df2.rename(columns = {<span class="string">"분양가격(㎡)"</span> : <span class="string">"분양가격"</span>})</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.replace(<span class="string">","</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.iloc[<span class="number">2125</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>지역명       서울규모구분      전체연도      2017월         11분양가격    6657Name: 2125, dtype: object</code></pre> <br><p><strong>(2) - 가 있는 경우</strong></p><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] **.str.replace(’-’, ‘’)</p></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"-"</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>3683</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3686</th>      <td>대전</td>      <td>전용면적 60㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3688</th>      <td>대전</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3690</th>      <td>울산</td>      <td>전체</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3691</th>      <td>울산</td>      <td>전용면적 60㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3692</th>      <td>울산</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3693</th>      <td>울산</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3694</th>      <td>울산</td>      <td>전용면적 102㎡초과</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>    <tr>      <th>3696</th>      <td>세종</td>      <td>전용면적 60㎡이하</td>      <td>2019</td>      <td>5</td>      <td>-</td>    </tr>  </tbody></table></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"-"</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>  </tbody></table></div> <br><p><strong>(3) 공백이 2개 들어간 경우</strong></p><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] **.str.strip("  ")</p></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>28</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>29</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>34</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>81</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>113</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>114</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>119</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>166</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>198</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>199</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>204</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>251</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>283</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>284</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>289</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>336</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>  </tbody></table></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].str.strip(<span class="string">"  "</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">"  "</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>  </tbody></table></div>  <br> <p><strong>(4) 빈 칸을 0으로 채우기</strong></p><blockquote><p><em>df_name</em>.loc [ <em>df_name</em> [ “<em>col_name</em>” ] == “” , “<em>col_name</em>”] = 0</p></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>28</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>29</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>34</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>81</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>10</td>      <td></td>    </tr>    <tr>      <th>113</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>114</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>119</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>166</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>11</td>      <td></td>    </tr>    <tr>      <th>198</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>199</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>204</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>251</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2015</td>      <td>12</td>      <td></td>    </tr>    <tr>      <th>283</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>284</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>289</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>336</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2016</td>      <td>1</td>      <td></td>    </tr>    <tr>      <th>3683</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3686</th>      <td>대전</td>      <td>전용면적 60㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3688</th>      <td>대전</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3690</th>      <td>울산</td>      <td>전체</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3691</th>      <td>울산</td>      <td>전용면적 60㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3692</th>      <td>울산</td>      <td>전용면적 60㎡초과 85㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3693</th>      <td>울산</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3694</th>      <td>울산</td>      <td>전용면적 102㎡초과</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>    <tr>      <th>3696</th>      <td>세종</td>      <td>전용면적 60㎡이하</td>      <td>2019</td>      <td>5</td>      <td></td>    </tr>  </tbody></table></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>, <span class="string">"분양가격"</span>] = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>] == <span class="string">""</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>  </tbody></table></div> <br>  <p><strong>(5) NaN 값을 0으로 바꾸기</strong></p><blockquote><p><em>df_name</em>.loc [ <em>df_name</em> [ “<em>col_name</em>” ] <strong>.isna()</strong> ]<br><em>df_name</em> [ “<em>col_name</em>” ].fillna(0)</p></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>368</th>      <td>광주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>369</th>      <td>광주</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>374</th>      <td>대전</td>      <td>전용면적 102㎡초과</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>388</th>      <td>강원</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>421</th>      <td>제주</td>      <td>전용면적 60㎡이하</td>      <td>2016</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4461</th>      <td>세종</td>      <td>전용면적 60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4488</th>      <td>전남</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4493</th>      <td>경북</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4499</th>      <td>경남</td>      <td>전용면적 102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>전용면적 85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>NaN</td>    </tr>  </tbody></table><p>295 rows × 5 columns</p></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>] = df2[<span class="string">"분양가격"</span>].fillna(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.loc[df2[<span class="string">"분양가격"</span>].isna()]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>  </tbody></table></div> <br>  <p><strong>(6) column type 바꾸기</strong></p><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.astype(…)</strong></p></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">"분양가격"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>0       58411       56522       58823       57214       5879        ... 4500    39554501    40394502    39624503       04504    3601Name: 분양가격, Length: 4505, dtype: int32</code></pre> <br>   <br><h2 id="5-지역별-분양가격을-확인해보기"><a class="markdownIt-Anchor" href="#5-지역별-분양가격을-확인해보기"></a> <strong>5. 지역별 분양가격을 확인해보기</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4500</th>      <td>제주</td>      <td>전체</td>      <td>2020</td>      <td>2</td>      <td>3955</td>    </tr>    <tr>      <th>4501</th>      <td>제주</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>4502</th>      <td>제주</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>0</td>    </tr>    <tr>      <th>4504</th>      <td>제주</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>4505 rows × 5 columns</p></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 4505 entries, 0 to 4504Data columns (total 5 columns): #   Column  Non-Null Count  Dtype ---  ------  --------------  -----  0   지역명     4505 non-null   object 1   규모구분    4505 non-null   object 2   연도      4505 non-null   int64  3   월       4505 non-null   int64  4   분양가격    4505 non-null   int32 dtypes: int32(1), int64(2), object(2)memory usage: 158.5+ KB</code></pre> <br><h3 id="5-1-지역별-평균-분양가격-확인해보기"><a class="markdownIt-Anchor" href="#5-1-지역별-평균-분양가격-확인해보기"></a> 5-1. 지역별 평균 분양가격 확인해보기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>지역명강원    2339.807547경기    4072.667925경남    2761.275472경북    2432.128302광주    2450.728302대구    3538.920755대전    2479.135849부산    3679.920755서울    7225.762264세종    2815.098113울산    1826.101887인천    3578.433962전남    2270.177358전북    2322.060377제주    2979.407547충남    2388.324528충북    2316.871698Name: 분양가격, dtype: float64</code></pre>  <br> <h3 id="5-2-분양가격이-100보다-작은-행을-제거해보기"><a class="markdownIt-Anchor" href="#5-2-분양가격이-100보다-작은-행을-제거해보기"></a> 5-2. 분양가격이 100보다 작은 행을 제거해보기</h3><blockquote><p>특정 조건에 만족하는 행을 제거하고자 할 때는</p><ol><li>index를 list로 가져온다<ul><li><em>idx</em> = df.loc [ <em>조건식</em> ] <strong>.index</strong></li></ul></li><li>drop을 활용하여 행을 제거한다<ul><li><em>df_name</em> = <em>df_name</em> <strong>.drop</strong> (<em>idx</em>, axis = 0)</li></ul></li></ol></blockquote> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idx = df.loc[df[<span class="string">"분양가격"</span>] &lt; <span class="number">100</span>].index</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idx</span><br></pre></td></tr></tbody></table></figure><pre><code>Int64Index([  28,   29,   34,   81,  113,  114,  119,  166,  198,  199,            ...            4418, 4448, 4453, 4458, 4459, 4461, 4488, 4493, 4499, 4503],           dtype='int64', length=320)</code></pre> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4500</th>      <td>제주</td>      <td>전체</td>      <td>2020</td>      <td>2</td>      <td>3955</td>    </tr>    <tr>      <th>4501</th>      <td>제주</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>4502</th>      <td>제주</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>4503</th>      <td>제주</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>0</td>    </tr>    <tr>      <th>4504</th>      <td>제주</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>4505 rows × 5 columns</p></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.drop(idx, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>4498</th>      <td>경남</td>      <td>85㎡초과 102㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3247</td>    </tr>    <tr>      <th>4500</th>      <td>제주</td>      <td>전체</td>      <td>2020</td>      <td>2</td>      <td>3955</td>    </tr>    <tr>      <th>4501</th>      <td>제주</td>      <td>60㎡이하</td>      <td>2020</td>      <td>2</td>      <td>4039</td>    </tr>    <tr>      <th>4502</th>      <td>제주</td>      <td>60㎡초과 85㎡이하</td>      <td>2020</td>      <td>2</td>      <td>3962</td>    </tr>    <tr>      <th>4504</th>      <td>제주</td>      <td>102㎡초과</td>      <td>2020</td>      <td>2</td>      <td>3601</td>    </tr>  </tbody></table><p>4185 rows × 5 columns</p></div>   <br><p>다시 한 번 지역명으로 group을 묶어 분양가격을 확인해보자!</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>지역명강원    2412.642023경기    4072.667925경남    2814.376923경북    2547.486166광주    3049.028169대구    3663.335938대전    3128.433333부산    3679.920755서울    7225.762264세종    2984.004000울산    3043.503145인천    3633.275862전남    2304.969349전북    2348.648855제주    3432.795652충남    2501.604743충북    2316.871698Name: 분양가격, dtype: float64</code></pre> <br><h3 id="5-3-지역별-분양가격-데이터의-갯수를-확인해보기"><a class="markdownIt-Anchor" href="#5-3-지역별-분양가격-데이터의-갯수를-확인해보기"></a> 5-3. 지역별 “분양가격” 데이터의 갯수를 확인해보기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].count()</span><br></pre></td></tr></tbody></table></figure><pre><code>지역명강원    257경기    265경남    260경북    253광주    213대구    256대전    210부산    265서울    265세종    250울산    159인천    261전남    261전북    262제주    230충남    253충북    265Name: 분양가격, dtype: int64</code></pre> <br>  <h3 id="5-4-지역별-제일-비싼-분양가를-확인해보기"><a class="markdownIt-Anchor" href="#5-4-지역별-제일-비싼-분양가를-확인해보기"></a> 5-4. 지역별 제일 비싼 분양가를 확인해보기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"지역명"</span>)[<span class="string">"분양가격"</span>].max()</span><br></pre></td></tr></tbody></table></figure><pre><code>지역명강원     3906경기     5670경남     4303경북     3457광주     4881대구     5158대전     4877부산     4623서울    13835세종     3931울산     3594인천     5188전남     3053전북     3052제주     5462충남     3201충북     2855Name: 분양가격, dtype: int32</code></pre><p><br>  <br></p><h2 id="6-연도별-평균-분양가격을-확인해보기"><a class="markdownIt-Anchor" href="#6-연도별-평균-분양가격을-확인해보기"></a> <strong>6. 연도별 평균 분양가격을 확인해보기</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>  </tbody></table></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"연도"</span>)[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>연도2015    2788.7078192016    2934.2500002017    3143.3117952018    3326.9510342019    3693.4221492020    3853.960526Name: 분양가격, dtype: float64</code></pre> <br>   <br><h2 id="7-피벗테이블-활용하기"><a class="markdownIt-Anchor" href="#7-피벗테이블-활용하기"></a> <strong>7. 피벗테이블 활용하기</strong></h2><ul><li><p><strong>행 인덱스:</strong> 연도</p></li><li><p><strong>열 인덱스:</strong> 규모구분</p></li><li><p><strong>값:</strong> 분양가 (평균)</p> <br></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>지역명</th>      <th>규모구분</th>      <th>연도</th>      <th>월</th>      <th>분양가격</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>서울</td>      <td>전체</td>      <td>2015</td>      <td>10</td>      <td>5841</td>    </tr>    <tr>      <th>1</th>      <td>서울</td>      <td>60㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5652</td>    </tr>    <tr>      <th>2</th>      <td>서울</td>      <td>60㎡초과 85㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5882</td>    </tr>    <tr>      <th>3</th>      <td>서울</td>      <td>85㎡초과 102㎡이하</td>      <td>2015</td>      <td>10</td>      <td>5721</td>    </tr>    <tr>      <th>4</th>      <td>서울</td>      <td>102㎡초과</td>      <td>2015</td>      <td>10</td>      <td>5879</td>    </tr>  </tbody></table></div> <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"연도"</span>, columns = <span class="string">"규모구분"</span>, values = <span class="string">"분양가격"</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th>규모구분</th>      <th>102㎡초과</th>      <th>60㎡이하</th>      <th>60㎡초과 85㎡이하</th>      <th>85㎡초과 102㎡이하</th>      <th>전체</th>    </tr>    <tr>      <th>연도</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2015</th>      <td>2980.977778</td>      <td>2712.583333</td>      <td>2694.490196</td>      <td>2884.395833</td>      <td>2694.862745</td>    </tr>    <tr>      <th>2016</th>      <td>3148.099476</td>      <td>2848.144279</td>      <td>2816.965686</td>      <td>3067.380435</td>      <td>2816.073529</td>    </tr>    <tr>      <th>2017</th>      <td>3427.649746</td>      <td>3112.538071</td>      <td>2981.950980</td>      <td>3204.075145</td>      <td>3008.279412</td>    </tr>    <tr>      <th>2018</th>      <td>3468.355932</td>      <td>3286.184783</td>      <td>3227.458128</td>      <td>3467.184211</td>      <td>3235.098522</td>    </tr>    <tr>      <th>2019</th>      <td>4039.854839</td>      <td>3486.910112</td>      <td>3538.545918</td>      <td>3933.538462</td>      <td>3515.974490</td>    </tr>    <tr>      <th>2020</th>      <td>4187.566667</td>      <td>3615.968750</td>      <td>3594.852941</td>      <td>4532.090909</td>      <td>3603.911765</td>    </tr>  </tbody></table></div><p><br>  <br></p><h2 id="8-연도별-규모별-가격을-알아보기"><a class="markdownIt-Anchor" href="#8-연도별-규모별-가격을-알아보기"></a> <strong>8. 연도별, 규모별 가격을 알아보기</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby([<span class="string">"연도"</span>, <span class="string">"규모구분"</span>])[<span class="string">"분양가격"</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>연도    규모구분         2015   102㎡초과          2980.977778       60㎡이하           2712.583333       60㎡초과 85㎡이하     2694.490196       85㎡초과 102㎡이하    2884.395833      전체               2694.8627452016   102㎡초과          3148.099476       60㎡이하           2848.144279       60㎡초과 85㎡이하     2816.965686       85㎡초과 102㎡이하    3067.380435      전체               2816.0735292017   102㎡초과          3427.649746       60㎡이하           3112.538071       60㎡초과 85㎡이하     2981.950980       85㎡초과 102㎡이하    3204.075145      전체               3008.2794122018   102㎡초과          3468.355932       60㎡이하           3286.184783       60㎡초과 85㎡이하     3227.458128       85㎡초과 102㎡이하    3467.184211      전체               3235.0985222019   102㎡초과          4039.854839       60㎡이하           3486.910112       60㎡초과 85㎡이하     3538.545918       85㎡초과 102㎡이하    3933.538462      전체               3515.9744902020   102㎡초과          4187.566667       60㎡이하           3615.968750       60㎡초과 85㎡이하     3594.852941       85㎡초과 102㎡이하    4532.090909      전체               3603.911765Name: 분양가격, dtype: float64</code></pre>  <br> <p>예쁘게 출력이 안되어서 보기가 힘들때는 pd.DataFrame()으로 한 번 더 감싸주면 됩니다.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(df.groupby([<span class="string">"연도"</span>, <span class="string">"규모구분"</span>])[<span class="string">"분양가격"</span>].mean())</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>분양가격</th>    </tr>    <tr>      <th>연도</th>      <th>규모구분</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="5" valign="top">2015</th>      <th>102㎡초과</th>      <td>2980.977778</td>    </tr>    <tr>      <th>60㎡이하</th>      <td>2712.583333</td>    </tr>    <tr>      <th>60㎡초과 85㎡이하</th>      <td>2694.490196</td>    </tr>    <tr>      <th>85㎡초과 102㎡이하</th>      <td>2884.395833</td>    </tr>    <tr>      <th>전체</th>      <td>2694.862745</td>    </tr>    <tr>      <th rowspan="5" valign="top">2016</th>      <th>102㎡초과</th>      <td>3148.099476</td>    </tr>    <tr>      <th>60㎡이하</th>      <td>2848.144279</td>    </tr>    <tr>      <th>60㎡초과 85㎡이하</th>      <td>2816.965686</td>    </tr>    <tr>      <th>85㎡초과 102㎡이하</th>      <td>3067.380435</td>    </tr>    <tr>      <th>전체</th>      <td>2816.073529</td>    </tr>    <tr>      <th rowspan="5" valign="top">2017</th>      <th>102㎡초과</th>      <td>3427.649746</td>    </tr>    <tr>      <th>60㎡이하</th>      <td>3112.538071</td>    </tr>    <tr>      <th>60㎡초과 85㎡이하</th>      <td>2981.950980</td>    </tr>    <tr>      <th>85㎡초과 102㎡이하</th>      <td>3204.075145</td>    </tr>    <tr>      <th>전체</th>      <td>3008.279412</td>    </tr>    <tr>      <th rowspan="5" valign="top">2018</th>      <th>102㎡초과</th>      <td>3468.355932</td>    </tr>    <tr>      <th>60㎡이하</th>      <td>3286.184783</td>    </tr>    <tr>      <th>60㎡초과 85㎡이하</th>      <td>3227.458128</td>    </tr>    <tr>      <th>85㎡초과 102㎡이하</th>      <td>3467.184211</td>    </tr>    <tr>      <th>전체</th>      <td>3235.098522</td>    </tr>    <tr>      <th rowspan="5" valign="top">2019</th>      <th>102㎡초과</th>      <td>4039.854839</td>    </tr>    <tr>      <th>60㎡이하</th>      <td>3486.910112</td>    </tr>    <tr>      <th>60㎡초과 85㎡이하</th>      <td>3538.545918</td>    </tr>    <tr>      <th>85㎡초과 102㎡이하</th>      <td>3933.538462</td>    </tr>    <tr>      <th>전체</th>      <td>3515.974490</td>    </tr>    <tr>      <th rowspan="5" valign="top">2020</th>      <th>102㎡초과</th>      <td>4187.566667</td>    </tr>    <tr>      <th>60㎡이하</th>      <td>3615.968750</td>    </tr>    <tr>      <th>60㎡초과 85㎡이하</th>      <td>3594.852941</td>    </tr>    <tr>      <th>85㎡초과 102㎡이하</th>      <td>4532.090909</td>    </tr>    <tr>      <th>전체</th>      <td>3603.911765</td>    </tr>  </tbody></table></div> <br> <br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      column 이름 제정의; Data Overview; 특수부호 처리; 데이터 타입 바꾸기; groupby; 피벗테이블
    
    </summary>
    
    
      <category term="【Exercise】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Exercise%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Exercise%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (7) 기타</title>
    <link href="https://hyemin-kim.github.io/2020/06/20/S-Python-Pandas-Pre7/"/>
    <id>https://hyemin-kim.github.io/2020/06/20/S-Python-Pandas-Pre7/</id>
    <published>2020-06-20T13:28:42.000Z</published>
    <updated>2020-06-23T16:53:03.553Z</updated>
    
    <content type="html"><![CDATA[<h1 id="기타"><a class="markdownIt-Anchor" href="#기타"></a> 기타</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85%EB%B3%84-column-%EC%84%A0%ED%83%9D-select_dtypes"><strong>1. 데이터 타입별 column 선택 (select_dtypes)</strong></a><ul><li><a href="#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%EC%9E%88%EB%8A%94-column%EB%A7%8C-%EC%84%A0%ED%83%9D-%EB%B0%B0%EC%A0%9C">문자열이 있는 column만 선택 / 배제</a></li></ul></li><li><a href="#2-one-hot-encoding-%EC%9B%90%ED%95%AB%EC%9D%B8%EC%BD%94%EB%94%A9"><strong>2. One-hot-encoding (원핫인코딩)</strong></a></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">"korean-idol.csv"</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><br>  <br><h2 id="1-데이터-타입별-column-선택-select_dtypes"><a class="markdownIt-Anchor" href="#1-데이터-타입별-column-선택-select_dtypes"></a> <strong>1. 데이터 타입별 column 선택 (select_dtypes)</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><br><h3 id="문자열이-있는-column만-선택-배제"><a class="markdownIt-Anchor" href="#문자열이-있는-column만-선택-배제"></a> 문자열이 있는 column만 선택 / 배제</h3><blockquote><ul><li><em>df_name</em> <strong>.select_dtypes (include = ‘object’)</strong></li><li><em>df_name</em> <strong>.select_dtypes (exclude = ‘object’)</strong></li></ul></blockquote><br>  <p><strong>(1) 문자열 column만 선택</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.select_dtypes(include = <span class="string">'object'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>혈액형</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>A</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>A</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>A</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>AB</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>A</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>A</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>O</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>B</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>O</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>A</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>A</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>B</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>AB</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>O</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>O</td>    </tr>  </tbody></table></div><br><p><strong>(2) 문자열 column 배제 (문자열이 아닌 column만 선택)</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.select_dtypes(exclude = <span class="string">'object'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>173.6</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>177.0</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>180.0</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>178.0</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>162.1</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>178.0</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>182.3</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>NaN</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>179.2</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>167.1</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>NaN</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>183.0</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>175.0</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>176.0</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>174.0</td>      <td>2925442</td>    </tr>  </tbody></table></div><br><p><strong>문자열이 포함된 DataFrame의 연산으로 발생되는 Error문제는 이 방법을 이용하여 해결할 수 있다</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)    148     try:--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)    150     except TypeError:D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)    207     if use_numexpr:--&gt; 208         return _evaluate(op, op_str, a, b)    209     return _evaluate_standard(op, op_str, a, b)D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)    120     if result is None:--&gt; 121         result = _evaluate_standard(op, op_str, a, b)    122 D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)     69     with np.errstate(all="ignore"):---&gt; 70         return op(a, b)     71 TypeError: can only concatenate str (not "int") to str</code></pre><p>​    <br></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.select_dtypes(exclude = <span class="string">'object'</span>) + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>183.6</td>      <td>10523270</td>    </tr>    <tr>      <th>1</th>      <td>187.0</td>      <td>9916957</td>    </tr>    <tr>      <th>2</th>      <td>190.0</td>      <td>8273755</td>    </tr>    <tr>      <th>3</th>      <td>188.0</td>      <td>8073511</td>    </tr>    <tr>      <th>4</th>      <td>172.1</td>      <td>7650938</td>    </tr>    <tr>      <th>5</th>      <td>188.0</td>      <td>5208345</td>    </tr>    <tr>      <th>6</th>      <td>192.3</td>      <td>4989802</td>    </tr>    <tr>      <th>7</th>      <td>NaN</td>      <td>4668625</td>    </tr>    <tr>      <th>8</th>      <td>189.2</td>      <td>4570318</td>    </tr>    <tr>      <th>9</th>      <td>177.1</td>      <td>4036499</td>    </tr>    <tr>      <th>10</th>      <td>NaN</td>      <td>3918671</td>    </tr>    <tr>      <th>11</th>      <td>193.0</td>      <td>3506037</td>    </tr>    <tr>      <th>12</th>      <td>185.0</td>      <td>3301664</td>    </tr>    <tr>      <th>13</th>      <td>186.0</td>      <td>3274147</td>    </tr>    <tr>      <th>14</th>      <td>184.0</td>      <td>2925452</td>    </tr>  </tbody></table></div> <br> <p><strong>(3) “문자열 column” / “비문자열 column” 의 column명을 추출</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj_cols = df.select_dtypes(include = <span class="string">'object'</span>).columns</span><br><span class="line">obj_cols</span><br></pre></td></tr></tbody></table></figure><pre><code>Index(['이름', '그룹', '소속사', '성별', '생년월일', '혈액형'], dtype='object')</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num_cols = df.select_dtypes(exclude = <span class="string">'object'</span>).columns</span><br><span class="line">num_cols</span><br></pre></td></tr></tbody></table></figure><pre><code>Index(['키', '브랜드평판지수'], dtype='object')</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[num_cols]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>173.6</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>177.0</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>180.0</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>178.0</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>162.1</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>178.0</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>182.3</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>NaN</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>179.2</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>167.1</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>NaN</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>183.0</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>175.0</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>176.0</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>174.0</td>      <td>2925442</td>    </tr>  </tbody></table></div><p><br> <br></p><h2 id="2-one-hot-encoding-원핫인코딩"><a class="markdownIt-Anchor" href="#2-one-hot-encoding-원핫인코딩"></a> <strong>2. One-hot-encoding (원핫인코딩)</strong></h2><blockquote><p><strong>One-hot-encoding:</strong> Categorical data를 dummy data로 변환시키는 방법</p><ul><li>Dummy data로 변환 시 한개의 요소는 True (1) 로, 나머지 요소는 Flase (0) 로 변환시킨다</li></ul></blockquote><blockquote><p><strong>pd.get_dummies</strong> (<em>df_name</em> [ ‘<em>col_name</em>’ ], prefix = “…”)</p><ul><li>prefix: dummy data 로 분리된 새 column들의 column name에 접두사 붙이기</li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'혈액형'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0      A1      A2      A3     AB4      A5      A6      O7      B8      O9      A10     A11     B12    AB13     O14     OName: 혈액형, dtype: object</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">'혈액형'</span>])</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>A</th>      <th>AB</th>      <th>B</th>      <th>O</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>6</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>7</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>9</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>11</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>12</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>13</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>14</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">'혈액형'</span>], prefix = <span class="string">'혈액형'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>혈액형_A</th>      <th>혈액형_AB</th>      <th>혈액형_B</th>      <th>혈액형_O</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>6</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>7</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>9</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>11</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>12</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>13</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>14</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>  </tbody></table></div> <br> <blockquote><p><strong>categorical data의 각 카테고리가 숫자형식으로 표현됐을 때 one-hot-encoding이 더 중요해지는 이유:</strong></p><ul><li>categorical data의 각 카테고리를 상징하는 숫자들은 <strong>그저 분류의 의미를 가질 뿐</strong>, 숫자의 크기 자체는 아무 의미도 없고, 숫자들의 연산도 역시 무의미하다.</li><li>하지만 이를 one-hot-encoding 작업 없이 머신러닝 알고리즘에 바로 넣으면 컴퓨터가 이 숫자들을 <strong>대소비교가 가능하고 연산이 가능하는 "숫자"로 인식</strong>하게 되므로 카테고리 간에 <strong>잘못된 관계</strong>를 맺을 수 있음.</li><li>따라서 이런 경우에는 one-hot-encoding 작업이 꼭 필요하다</li></ul></blockquote><br>  <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">blood_map = {</span><br><span class="line">    <span class="string">'A'</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">'B'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'AB'</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">'O'</span>: <span class="number">3</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>] = df[<span class="string">"혈액형"</span>].map(blood_map)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>혈액형_code</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>2</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>0</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>].value_counts()</span><br></pre></td></tr></tbody></table></figure><pre><code>0    73    42    21    2Name: 혈액형_code, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"혈액형_code"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     01     02     03     24     05     06     37     18     39     010    011    112    213    314    3Name: 혈액형_code, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.get_dummies(df[ <span class="string">"혈액형_code"</span> ])</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>6</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>7</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>9</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>11</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>12</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>13</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>14</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.get_dummies(df[<span class="string">"혈액형_code"</span>], prefix = <span class="string">"혈액형"</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>혈액형_0</th>      <th>혈액형_1</th>      <th>혈액형_2</th>      <th>혈액형_3</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>3</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>6</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>7</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>9</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>1</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>11</th>      <td>0</td>      <td>1</td>      <td>0</td>      <td>0</td>    </tr>    <tr>      <th>12</th>      <td>0</td>      <td>0</td>      <td>1</td>      <td>0</td>    </tr>    <tr>      <th>13</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>    <tr>      <th>14</th>      <td>0</td>      <td>0</td>      <td>0</td>      <td>1</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      데이터 타입별 column 선택; One-hot-encoding (dummy 변환)
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (6) 데이터프레임의 산술연산</title>
    <link href="https://hyemin-kim.github.io/2020/06/20/S-Python-Pandas-Pre6/"/>
    <id>https://hyemin-kim.github.io/2020/06/20/S-Python-Pandas-Pre6/</id>
    <published>2020-06-20T13:28:21.000Z</published>
    <updated>2020-06-23T16:52:30.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="데이터프레임의-산술연산"><a class="markdownIt-Anchor" href="#데이터프레임의-산술연산"></a> 데이터프레임의 산술연산</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-column-%EA%B3%BC-column-%EA%B0%84-%EC%97%B0%EC%82%B0-"><strong>1. Column 과 Column 간 연산 (+, -, *, /, %)</strong></a></li><li><a href="#2-column-%EA%B3%BC-%EC%88%AB%EC%9E%90-%EA%B0%84-%EC%97%B0%EC%82%B0-"><strong>2. Column 과 숫자 간 연산 (+, -, *, /, %)</strong></a></li><li><a href="#3-%EB%B3%B5%ED%95%A9-%EC%97%B0%EC%82%B0"><strong>3. 복합 연산</strong></a></li><li><a href="#4-mean-sum-%EC%9D%84-axis-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EC%97%B0%EC%82%B0"><strong>4. mean(), sum() 을 axis 기준으로 연산</strong></a></li><li><a href="#5-nan-%EA%B0%92%EC%9D%B4-%EC%A1%B4%EC%9E%AC%ED%95%A0-%EA%B2%BD%EC%9A%B0-%EC%97%B0%EC%82%B0"><strong>5. NaN 값이 존재할 경우 연산</strong></a></li><li><a href="#6-dataframe-%EA%B3%BC-dataframe-%EA%B0%84-%EC%97%B0%EC%82%B0"><strong>6. DataFrame 과 DataFrame 간 연산</strong></a><ul><li><a href="#6-1-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%B4-%ED%8F%AC%ED%95%A8%EB%90%9C-series-dataframe%EC%9D%98-%EC%97%B0%EC%82%B0%EC%9D%80-%EB%B6%88%EA%B0%80%ED%95%98%EB%8B%A4">6-1. 문자열이 포함된 Series / DataFrame의 연산은 불가하다</a></li><li><a href="#6-2-%EB%91%90-dataframe%EC%9D%98-column-%EC%9D%B4%EB%A6%84%EC%9D%80-%EA%B0%99%EC%9C%BC%EB%82%98-column-%EC%88%9C%EC%84%9C%EB%A7%8C-%EB%B0%94%EB%80%8C%EC%96%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0">6-2. 두 DataFrame의 column 이름은 같으나 column 순서만 바뀌어 있는 경우</a></li><li><a href="#6-3-%ED%96%89%EC%9D%98-%EA%B0%AF%EC%88%98%EA%B0%80-%EB%8B%A4%EB%A5%B8-%EA%B2%BD%EC%9A%B0">6-3. 행의 갯수가 다른 경우</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>예제 DataFrame 생성</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>60</td>      <td>50</td>      <td>70</td>    </tr>    <tr>      <th>1</th>      <td>70</td>      <td>55</td>      <td>65</td>    </tr>    <tr>      <th>2</th>      <td>80</td>      <td>80</td>      <td>50</td>    </tr>    <tr>      <th>3</th>      <td>85</td>      <td>100</td>      <td>95</td>    </tr>    <tr>      <th>4</th>      <td>75</td>      <td>95</td>      <td>100</td>    </tr>  </tbody></table></div><br><br>  <h2 id="1-column-과-column-간-연산-"><a class="markdownIt-Anchor" href="#1-column-과-column-간-연산-"></a> <strong>1. Column 과 Column 간 연산 (+, -, *, /, %)</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type(df[<span class="string">"통계"</span>])</span><br></pre></td></tr></tbody></table></figure><pre><code>pandas.core.series.Series</code></pre><p>즉 Series 과 Series 간의 연산</p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] + df[<span class="string">"체육"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    1801    1902    2103    2804    270dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] - df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    101    152     03   -154   -20dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] * df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    30001    38502    64003    85004    7125dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    1.2000001    1.2727272    1.0000003    0.8500004    0.789474dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] % df[<span class="string">"미술"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    101    152     03    854    75dtype: int64</code></pre><p><br> <br></p><h2 id="2-column-과-숫자-간-연산-"><a class="markdownIt-Anchor" href="#2-column-과-숫자-간-연산-"></a> <strong>2. Column 과 숫자 간 연산 (+, -, *, /, %)</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    601    702    803    854    75Name: 통계, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0    701    802    903    954    85Name: 통계, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] - <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0    501    602    703    754    65Name: 통계, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] * <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0    6001    7002    8003    8504    750Name: 통계, dtype: int64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0    6.01    7.02    8.03    8.54    7.5Name: 통계, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] % <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0    01    02    03    54    5Name: 통계, dtype: int64</code></pre><br><br><h2 id="3-복합-연산"><a class="markdownIt-Anchor" href="#3-복합-연산"></a> <strong>3. 복합 연산</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>60</td>      <td>50</td>      <td>70</td>    </tr>    <tr>      <th>1</th>      <td>70</td>      <td>55</td>      <td>65</td>    </tr>    <tr>      <th>2</th>      <td>80</td>      <td>80</td>      <td>50</td>    </tr>    <tr>      <th>3</th>      <td>85</td>      <td>100</td>      <td>95</td>    </tr>    <tr>      <th>4</th>      <td>75</td>      <td>95</td>      <td>100</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계미술+10"</span>] = df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>      <th>통계미술+10</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>60</td>      <td>50</td>      <td>70</td>      <td>120</td>    </tr>    <tr>      <th>1</th>      <td>70</td>      <td>55</td>      <td>65</td>      <td>135</td>    </tr>    <tr>      <th>2</th>      <td>80</td>      <td>80</td>      <td>50</td>      <td>170</td>    </tr>    <tr>      <th>3</th>      <td>85</td>      <td>100</td>      <td>95</td>      <td>195</td>    </tr>    <tr>      <th>4</th>      <td>75</td>      <td>95</td>      <td>100</td>      <td>180</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] + df[<span class="string">"미술"</span>] - df[<span class="string">"체육"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     401     602    1103     904     70dtype: int64</code></pre><br>  <br><h2 id="4-mean-sum-을-axis-기준으로-연산"><a class="markdownIt-Anchor" href="#4-mean-sum-을-axis-기준으로-연산"></a> <strong>4. mean(), sum() 을 axis 기준으로 연산</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>60</td>      <td>50</td>      <td>70</td>    </tr>    <tr>      <th>1</th>      <td>70</td>      <td>55</td>      <td>65</td>    </tr>    <tr>      <th>2</th>      <td>80</td>      <td>80</td>      <td>50</td>    </tr>    <tr>      <th>3</th>      <td>85</td>      <td>100</td>      <td>95</td>    </tr>    <tr>      <th>4</th>      <td>75</td>      <td>95</td>      <td>100</td>    </tr>  </tbody></table></div><br><p><strong>(1) 각 column의 <font color="blue">모든 row 값의 합</font> 구하기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sum(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>통계    370미술    380체육    380dtype: int64</code></pre><br>  <p><strong>(2) 각 column의 <font color="blue">모든 row 값의 평균</font> 구하기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.mean(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>통계    74.0미술    76.0체육    76.0dtype: float64</code></pre><br><p><strong>(3) 각 row의 <font color="blue">모든 column 값의 합</font> 구하기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sum(axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0    1801    1902    2103    2804    270dtype: int64</code></pre><br><p><strong>(4) 각 row의 <font color="blue">모든 column 값의 평균</font> 구하기</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.mean(axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0    60.0000001    63.3333332    70.0000003    93.3333334    90.000000dtype: float64</code></pre><br>  <br><h2 id="5-nan-값이-존재할-경우-연산"><a class="markdownIt-Anchor" href="#5-nan-값이-존재할-경우-연산"></a> <strong>5. NaN 값이 존재할 경우 연산</strong></h2><blockquote><p>NaN 값이 포함된 모든 연산의 결과가 다 NaN 값이다</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.DataFrame({<span class="string">"통계"</span>: [<span class="number">60</span>, np.nan, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">"미술"</span>: [<span class="number">50</span>, <span class="number">55</span>, np.nan, <span class="number">100</span>, <span class="number">95</span>], <span class="string">"체육"</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, np.nan] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>60.0</td>      <td>50.0</td>      <td>70.0</td>    </tr>    <tr>      <th>1</th>      <td>NaN</td>      <td>55.0</td>      <td>65.0</td>    </tr>    <tr>      <th>2</th>      <td>80.0</td>      <td>NaN</td>      <td>50.0</td>    </tr>    <tr>      <th>3</th>      <td>85.0</td>      <td>100.0</td>      <td>95.0</td>    </tr>    <tr>      <th>4</th>      <td>75.0</td>      <td>95.0</td>      <td>NaN</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0    30.01     NaN2    40.03    42.54    37.5Name: 통계, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1000</span> / df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    16.6666671          NaN2    12.5000003    11.7647064    13.333333Name: 통계, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"통계"</span>] / np.nan</span><br></pre></td></tr></tbody></table></figure><pre><code>0   NaN1   NaN2   NaN3   NaN4   NaNName: 통계, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.nan / df[<span class="string">"통계"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0   NaN1   NaN2   NaN3   NaN4   NaNName: 통계, dtype: float64</code></pre><br> <br>  <h2 id="6-dataframe-과-dataframe-간-연산"><a class="markdownIt-Anchor" href="#6-dataframe-과-dataframe-간-연산"></a> <strong>6. DataFrame 과 DataFrame 간 연산</strong></h2><h3 id="6-1-문자열이-포함된-series-dataframe의-연산은-불가하다"><a class="markdownIt-Anchor" href="#6-1-문자열이-포함된-series-dataframe의-연산은-불가하다"></a> 6-1. 문자열이 포함된 Series / DataFrame의 연산은 불가하다</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">85</span>, <span class="number">75</span>], <span class="string">'미술'</span>: [<span class="number">50</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">'체육'</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">95</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="string">'good'</span>, <span class="string">'bad'</span>, <span class="string">'ok'</span> , <span class="string">'good'</span>, <span class="string">'ok'</span>], <span class="string">'미술'</span>: [<span class="number">50</span>, <span class="number">60</span> , <span class="number">80</span>, <span class="number">100</span>, <span class="number">95</span>], <span class="string">'체육'</span>: [<span class="number">70</span>, <span class="number">65</span>, <span class="number">50</span>, <span class="number">70</span> , <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>60</td>      <td>50</td>      <td>70</td>    </tr>    <tr>      <th>1</th>      <td>70</td>      <td>55</td>      <td>65</td>    </tr>    <tr>      <th>2</th>      <td>80</td>      <td>80</td>      <td>50</td>    </tr>    <tr>      <th>3</th>      <td>85</td>      <td>100</td>      <td>95</td>    </tr>    <tr>      <th>4</th>      <td>75</td>      <td>95</td>      <td>100</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>      <th>체육</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>good</td>      <td>50</td>      <td>70</td>    </tr>    <tr>      <th>1</th>      <td>bad</td>      <td>60</td>      <td>65</td>    </tr>    <tr>      <th>2</th>      <td>ok</td>      <td>80</td>      <td>50</td>    </tr>    <tr>      <th>3</th>      <td>good</td>      <td>100</td>      <td>70</td>    </tr>    <tr>      <th>4</th>      <td>ok</td>      <td>95</td>      <td>100</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 + df2</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)    148     try:--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)    150     except TypeError:D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)    207     if use_numexpr:--&gt; 208         return _evaluate(op, op_str, a, b)    209     return _evaluate_standard(op, op_str, a, b)D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)    120     if result is None:--&gt; 121         result = _evaluate_standard(op, op_str, a, b)    122 D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)     69     with np.errstate(all="ignore"):---&gt; 70         return op(a, b)     71 TypeError: unsupported operand type(s) for +: 'int' and 'str'</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 + <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------TypeError                                 Traceback (most recent call last)D:\Anaconda\lib\site-packages\pandas\core\ops\array_ops.py in na_arithmetic_op(left, right, op, str_rep)    148     try:--&gt; 149         result = expressions.evaluate(op, str_rep, left, right)    150     except TypeError:D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in evaluate(op, op_str, a, b, use_numexpr)    207     if use_numexpr:--&gt; 208         return _evaluate(op, op_str, a, b)    209     return _evaluate_standard(op, op_str, a, b)D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_numexpr(op, op_str, a, b)    120     if result is None:--&gt; 121         result = _evaluate_standard(op, op_str, a, b)    122 D:\Anaconda\lib\site-packages\pandas\core\computation\expressions.py in _evaluate_standard(op, op_str, a, b)     69     with np.errstate(all="ignore"):---&gt; 70         return op(a, b)     71 TypeError: can only concatenate str (not "int") to str</code></pre><br><br><h3 id="6-2-두-dataframe의-column-이름은-같으나-column-순서만-바뀌어-있는-경우"><a class="markdownIt-Anchor" href="#6-2-두-dataframe의-column-이름은-같으나-column-순서만-바뀌어-있는-경우"></a> 6-2. 두 DataFrame의 column 이름은 같으나 column 순서만 바뀌어 있는 경우</h3><blockquote><p>연산시 자동으로 column 이름 기준으로 연산 된다</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'미술'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'통계'</span>:[<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'미술'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>미술</th>      <th>통계</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>10</td>      <td>60</td>    </tr>    <tr>      <th>1</th>      <td>20</td>      <td>70</td>    </tr>    <tr>      <th>2</th>      <td>30</td>      <td>80</td>    </tr>    <tr>      <th>3</th>      <td>40</td>      <td>90</td>    </tr>    <tr>      <th>4</th>      <td>50</td>      <td>100</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>10</td>      <td>60</td>    </tr>    <tr>      <th>1</th>      <td>20</td>      <td>70</td>    </tr>    <tr>      <th>2</th>      <td>30</td>      <td>80</td>    </tr>    <tr>      <th>3</th>      <td>40</td>      <td>90</td>    </tr>    <tr>      <th>4</th>      <td>50</td>      <td>100</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 + df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>미술</th>      <th>통계</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>70</td>      <td>70</td>    </tr>    <tr>      <th>1</th>      <td>90</td>      <td>90</td>    </tr>    <tr>      <th>2</th>      <td>110</td>      <td>110</td>    </tr>    <tr>      <th>3</th>      <td>130</td>      <td>130</td>    </tr>    <tr>      <th>4</th>      <td>150</td>      <td>150</td>    </tr>  </tbody></table></div><br><br> <h3 id="6-3-행의-갯수가-다른-경우"><a class="markdownIt-Anchor" href="#6-3-행의-갯수가-다른-경우"></a> 6-3. 행의 갯수가 다른 경우</h3><blockquote><p>행 index 기준으로 연산하되, 하나의 DataFrame에만 존재하는 행은 연산결과가 NaN으로 나옴</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df1 = pd.DataFrame({<span class="string">'미술'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>], <span class="string">'통계'</span>:[<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>, <span class="number">110</span>] })</span><br><span class="line">df2 = pd.DataFrame({<span class="string">'통계'</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>], <span class="string">'미술'</span>: [<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>] })</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>미술</th>      <th>통계</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>10</td>      <td>60</td>    </tr>    <tr>      <th>1</th>      <td>20</td>      <td>70</td>    </tr>    <tr>      <th>2</th>      <td>30</td>      <td>80</td>    </tr>    <tr>      <th>3</th>      <td>40</td>      <td>90</td>    </tr>    <tr>      <th>4</th>      <td>50</td>      <td>100</td>    </tr>    <tr>      <th>5</th>      <td>60</td>      <td>110</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>통계</th>      <th>미술</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>10</td>      <td>60</td>    </tr>    <tr>      <th>1</th>      <td>20</td>      <td>70</td>    </tr>    <tr>      <th>2</th>      <td>30</td>      <td>80</td>    </tr>    <tr>      <th>3</th>      <td>40</td>      <td>90</td>    </tr>    <tr>      <th>4</th>      <td>50</td>      <td>100</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1 * df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>미술</th>      <th>통계</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>600.0</td>      <td>600.0</td>    </tr>    <tr>      <th>1</th>      <td>1400.0</td>      <td>1400.0</td>    </tr>    <tr>      <th>2</th>      <td>2400.0</td>      <td>2400.0</td>    </tr>    <tr>      <th>3</th>      <td>3600.0</td>      <td>3600.0</td>    </tr>    <tr>      <th>4</th>      <td>5000.0</td>      <td>5000.0</td>    </tr>    <tr>      <th>5</th>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;데이터프레임의-산술연산&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터프레임의-산술연산&quot;&gt;&lt;/a&gt; 데이터프레임의 산술연산&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;li&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (5) column 값을 변환시키는 방법</title>
    <link href="https://hyemin-kim.github.io/2020/06/19/S-Python-Pandas-Pre5/"/>
    <id>https://hyemin-kim.github.io/2020/06/19/S-Python-Pandas-Pre5/</id>
    <published>2020-06-19T12:11:52.000Z</published>
    <updated>2020-06-23T16:51:01.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dataframe의-column-값을-변환시키는-방법"><a class="markdownIt-Anchor" href="#dataframe의-column-값을-변환시키는-방법"></a> DataFrame의 column 값을 변환시키는 방법</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-apply-%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98"><strong>1. apply + 일반 함수</strong></a><ul><li><a href="#1-1-%EB%AA%A9%ED%91%9C-%EC%84%B1%EB%B3%84-column%EC%9D%98-%EB%82%A8%EC%9E%90-%EC%97%AC%EC%9E%90%EB%A5%BC-1-2%EB%A1%9C-%EB%B0%94%EA%BE%BC%EB%8B%A4">1-1. (목표) ‘성별’ column의 “남자” / "여자"를 1 / 2로 바꾼다</a></li><li><a href="#1-2-%EB%AA%A9%ED%91%9C-cm%EB%8B%B9-%EB%B8%8C%EB%9E%9C%EB%93%9C-%ED%8F%89%ED%8C%90%EC%A7%80%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%9C%EB%8B%A4-%EB%B8%8C%EB%9E%9C%EB%93%9C%ED%8F%89%ED%8C%90%EC%A7%80%EC%88%98-%ED%82%A4">1-2. (목표) cm당 브랜드 평판지수를 구한다 (브랜드평판지수 / 키)</a></li></ul></li><li><a href="#2-apply-lamda-%ED%95%A8%EC%88%98"><strong>2. apply + lamda 함수</strong></a></li><li><a href="#3-map-map-%ED%95%A8%EC%88%98"><strong>3. map + map 함수</strong></a></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="1-apply-일반-함수"><a class="markdownIt-Anchor" href="#1-apply-일반-함수"></a> <strong>1. apply + 일반 함수</strong></h2><blockquote><p>apply는 Series나 DataFrame에 좀 더 <strong>구체적인 로직</strong>을 적용하고 싶은 경우 활용한다</p><ul><li>apply를 적용하기 위해서는 함수가 먼저 정의되어야한다</li><li>apply는 정의한 로직 함수를 인자로 넘겨준다</li></ul></blockquote><blockquote><ul><li><p><strong>Series에 적용할 경우:</strong><br><em>df_name</em> [ “<em>col_name</em>” ] <strong>.apply( <em>func</em> )</strong></p></li><li><p><strong>DataFrame에 적용할 경우:</strong><br><em>df_name</em> <strong>.apply( <em>func</em>, axis = 1)</strong></p></li></ul></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><br>  <h3 id="1-1-목표-성별-column의-남자-여자를-1-2로-바꾼다"><a class="markdownIt-Anchor" href="#1-1-목표-성별-column의-남자-여자를-1-2로-바꾼다"></a> 1-1. (목표) ‘성별’ column의 “남자” / "여자"를 1 / 2로 바꾼다</h3><p><strong>변환 규칙:</strong><br>남자: 1   여자: 2   기타: -1</p><br><p><strong>(1) 로직 함수 정의</strong></p><p><strong>[주의] 반드시 return 값이 존재</strong>하여야한다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">male_or_female</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">"남자"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> x == <span class="string">"여자"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br></pre></td></tr></tbody></table></figure> <br> <p><strong>(2) apply로 DataFrame에 적용</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"성별_NEW"</span>] = df[<span class="string">"성별"</span>].apply(male_or_female)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>성별_NEW</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>1</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>1</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>1</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>2</td>    </tr>  </tbody></table></div><br>  <h3 id="1-2-목표-cm당-브랜드-평판지수를-구한다-브랜드평판지수-키"><a class="markdownIt-Anchor" href="#1-2-목표-cm당-브랜드-평판지수를-구한다-브랜드평판지수-키"></a> 1-2. (목표) cm당 브랜드 평판지수를 구한다 (브랜드평판지수 / 키)</h3><p><strong>변환 규칙:</strong><br>키: 178  브랜드평판지수: 99000<br>값: 99000 / 178</p><br><p><strong>(1) 로직 함수 정의</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cm_to_brand</span><span class="params">(df)</span>:</span></span><br><span class="line">    value = df[<span class="string">"브랜드평판지수"</span>] / df[<span class="string">"키"</span>]</span><br><span class="line">    <span class="keyword">return</span> value</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>(2) apply로 DataFrame에 적용</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.apply(cm_to_brand, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     60617.8571431     56027.9491532     45965.2500003     45356.7471914     47198.8155465     29260.3089896     27371.3219977              NaN8     25503.9508939     24156.12806710             NaN11    19158.61748612    18866.59428613    18603.05113614    16812.885057dtype: float64</code></pre> <br><br> <h2 id="2-apply-lamda-함수"><a class="markdownIt-Anchor" href="#2-apply-lamda-함수"></a> <strong>2. apply + lamda 함수</strong></h2><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.apply (<em>lambda_func</em>)</strong></p></blockquote><blockquote><ul><li>lambda는 1줄로 작성하는 간단 함수식이다</li><li>return을 별도로 멱기하지 않는다</li></ul></blockquote> <br> <p><strong>(1) male_or_female 함수</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">male_or_female = <span class="keyword">lambda</span> x: <span class="number">1</span> <span class="keyword">if</span> x == <span class="string">"남자"</span> <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"성별"</span>].apply(male_or_female)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     11     12     13     14     05     16     17     08     19     110    011    112    113    114    1Name: 성별, dtype: int64</code></pre><br>  <p><strong>(2) 실제로는 간단한 계산식을 적용하려는 경우에 많이 사용한다</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"키/2"</span>] = df[<span class="string">"키"</span>].apply(<span class="keyword">lambda</span> x: x / <span class="number">2</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>성별_NEW</th>      <th>키/2</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>1</td>      <td>86.80</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>1</td>      <td>88.50</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>1</td>      <td>90.00</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>1</td>      <td>89.00</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>2</td>      <td>81.05</td>    </tr>  </tbody></table></div> <br> <p>apply에 함수식을 만들어서 적용해주는 것과 동일하기 때문에, <strong>복잠한 조건식은 &lt;함수&gt;로, 간단한 계산식은 &lt; lambda &gt; 로</strong> 적용하면 된다</p><p><br><br></p><h2 id="3-map-map-함수"><a class="markdownIt-Anchor" href="#3-map-map-함수"></a> <strong>3. map + map 함수</strong></h2><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.map ( <em>map_func</em> )</strong></p></blockquote><blockquote><p><strong>Step 1:</strong> dictionary 형식으로 map 함수를 정의하기<br><strong>Step 2:</strong> DataFrame / Series에 map 함수를 적용</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>성별_NEW</th>      <th>키/2</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>1</td>      <td>86.80</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>1</td>      <td>88.50</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>1</td>      <td>90.00</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>1</td>      <td>89.00</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>2</td>      <td>81.05</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">my_map = {</span><br><span class="line">    <span class="string">"남자"</span>: <span class="string">"male"</span>,</span><br><span class="line">    <span class="string">"여자"</span>: <span class="string">"female"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"성별"</span>].map(my_map)</span><br></pre></td></tr></tbody></table></figure><pre><code>0       male1       male2       male3       male4     female5       male6       male7     female8       male9       male10    female11      male12      male13      male14      maleName: 성별, dtype: object</code></pre><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      apply (일반 함수 / lambda 함수); map (map 함수)
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (4) Series의 Type 변환하기</title>
    <link href="https://hyemin-kim.github.io/2020/06/19/S-Python-Pandas-Pre4/"/>
    <id>https://hyemin-kim.github.io/2020/06/19/S-Python-Pandas-Pre4/</id>
    <published>2020-06-19T06:53:13.000Z</published>
    <updated>2020-06-23T16:49:03.475Z</updated>
    
    <content type="html"><![CDATA[<h1 id="series의-type-변환하기"><a class="markdownIt-Anchor" href="#series의-type-변환하기"></a> Series의 Type 변환하기</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-series%EC%9D%98-type"><strong>1. Series의 Type</strong></a><ul><li><a href="#1-1-type-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0">1-1. Type 확인하기</a></li><li><a href="#1-2-type-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0">1-2. Type 변환하기</a></li><li><a href="#1-3-%EB%82%A0%EC%A7%9C-datatime-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0">1-3. 날짜 (datatime) 타입 변환하기</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure> <br> <h2 id="1-series의-type"><a class="markdownIt-Anchor" href="#1-series의-type"></a> <strong>1. Series의 Type</strong></h2><h3 id="1-1-type-확인하기"><a class="markdownIt-Anchor" href="#1-1-type-확인하기"></a> 1-1. Type 확인하기</h3><blockquote><p><strong><em>df_name</em>.info()</strong> 명령어를 사용하여 Dataframe의 Series Type을 확인할 수 있다<br><strong><em>df_name</em> [ “<em>col_name</em>” ] .dtypes</strong> 명령어를 사용하여 특정 Series의 Type을 확인할 수 있다</p></blockquote><blockquote><p><strong>Series Type</strong></p><ul><li>object: 일반 문자영 타입</li><li>float: 실수</li><li>int: 정수</li><li>category: 카테고리</li><li>datatime: 시간</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }    .dataframe tbody tr th {        vertical-align: top;    }<pre><code>.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"이름"</span>].dtypes</span><br></pre></td></tr></tbody></table></figure><pre><code>dtype('O')</code></pre><br><h3 id="1-2-type-변환하기"><a class="markdownIt-Anchor" href="#1-2-type-변환하기"></a> 1-2. Type 변환하기</h3><blockquote><p><em>df_name</em> [ “<em>col_name</em>” ] <strong>.astype(…)</strong></p></blockquote><br><p><strong>e.g.</strong>  “키” column을 float에서 int로 변환해보기</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"키"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-12-c145a39acdb2&gt; in &lt;module&gt;----&gt; 1 df["키"].astype(int)D:\Anaconda\lib\site-packages\pandas\core\generic.py in astype(self, dtype, copy, errors)   5696         else:   5697             # else, only a single dtype is given-&gt; 5698             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors)   5699             return self._constructor(new_data).__finalize__(self)   5700 D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in astype(self, dtype, copy, errors)    580     581     def astype(self, dtype, copy: bool = False, errors: str = "raise"):--&gt; 582         return self.apply("astype", dtype=dtype, copy=copy, errors=errors)    583     584     def convert(self, **kwargs):D:\Anaconda\lib\site-packages\pandas\core\internals\managers.py in apply(self, f, filter, **kwargs)    440                 applied = b.apply(f, **kwargs)    441             else:--&gt; 442                 applied = getattr(b, f)(**kwargs)    443             result_blocks = _extend_blocks(applied, result_blocks)    444 D:\Anaconda\lib\site-packages\pandas\core\internals\blocks.py in astype(self, dtype, copy, errors)    623             vals1d = values.ravel()    624             try:--&gt; 625                 values = astype_nansafe(vals1d, dtype, copy=True)    626             except (ValueError, TypeError):    627                 # e.g. astype_nansafe can fail on object-dtype of stringsD:\Anaconda\lib\site-packages\pandas\core\dtypes\cast.py in astype_nansafe(arr, dtype, copy, skipna)    866     867         if not np.isfinite(arr).all():--&gt; 868             raise ValueError("Cannot convert non-finite values (NA or inf) to integer")    869     870     elif is_object_dtype(arr):ValueError: Cannot convert non-finite values (NA or inf) to integer</code></pre><br><p>“키” column에 NaN값이 존재하기 때문에 Error 발생!</p><br><blockquote><p><strong>column에 NaN 값이 있는 경우:</strong> 면저 NaN 값을 다른 값으로 대체한 후 Type을 변환할 수 있다</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"키"</span>] = df[<span class="string">"키"</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"키"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37      -1.08     179.29     167.110     -1.011    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"키"</span>].astype(int)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     1731     1772     1803     1784     1625     1786     1827      -18     1799     16710     -111    18312    17513    17614    174Name: 키, dtype: int32</code></pre><br><h3 id="1-3-날짜-datatime-타입-변환하기"><a class="markdownIt-Anchor" href="#1-3-날짜-datatime-타입-변환하기"></a> 1-3. 날짜 (datatime) 타입 변환하기</h3><p><strong>(1) datetime 타입으로 변환하기</strong></p><blockquote><p><strong>pd.to_datetime</strong> ( <em>df_name</em> [ “<em>col_nema</em>”] )</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     1995-10-131     1988-08-182     1996-12-103     1995-12-304     1995-07-235     1997-09-016     1995-08-097     1998-08-268     1992-12-049     1994-03-2210    1989-03-0911    1997-03-3012    1995-07-2113    1995-06-0814    1993-03-09Name: 생년월일, dtype: object</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.to_datetime(df[<span class="string">"생년월일"</span>])</span><br></pre></td></tr></tbody></table></figure><pre><code>0    1995-10-131    1988-08-182    1996-12-103    1995-12-304    1995-07-235    1997-09-016    1995-08-097    1998-08-268    1992-12-049    1994-03-2210   1989-03-0911   1997-03-3012   1995-07-2113   1995-06-0814   1993-03-09Name: 생년월일, dtype: datetime64[ns]</code></pre><p><br>변환된 것을 <strong>원래 column에 다시 대입을 해줘야</strong> 정상적으로 변환된 값이 들어간다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>] = pd.to_datetime(df[<span class="string">"생년월일"</span>])</span><br><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    1995-10-131    1988-08-182    1996-12-103    1995-12-304    1995-07-235    1997-09-016    1995-08-097    1998-08-268    1992-12-049    1994-03-2210   1989-03-0911   1997-03-3012   1995-07-2113   1995-06-0814   1993-03-09Name: 생년월일, dtype: datetime64[ns]</code></pre><br>  <p><strong>(2) datatime 타입을 활용하기</strong></p><blockquote><p><strong><em>df_name</em> [ “<em>datetime_col</em>” ] .dt</strong><br>을 활용하여 매우 손쉽게 <strong>년, 월, 일, 요일</strong> 등등 날짜 정보를 세부적으로 <strong>추출</strong>해낼 수 있다</p></blockquote><blockquote><ul><li>년: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.year</strong></li><li>월: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.month</strong></li><li>일: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.day</strong></li><li>요일: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.dayofweek</strong></li><li>주: <em>df_name</em> [ “<em>datetime_col</em>” ] <strong>.dt.weekofyear</strong></li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0    1995-10-131    1988-08-182    1996-12-103    1995-12-304    1995-07-235    1997-09-016    1995-08-097    1998-08-268    1992-12-049    1994-03-2210   1989-03-0911   1997-03-3012   1995-07-2113   1995-06-0814   1993-03-09Name: 생년월일, dtype: datetime64[ns]</code></pre>  <br><p><strong>년 추출:</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.year</span><br></pre></td></tr></tbody></table></figure><pre><code>0     19951     19882     19963     19954     19955     19976     19957     19988     19929     199410    198911    199712    199513    199514    1993Name: 생년월일, dtype: int64</code></pre><br><p><strong>월 추출:</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.month</span><br></pre></td></tr></tbody></table></figure><pre><code>0     101      82     123     124      75      96      87      88     129      310     311     312     713     614     3Name: 생년월일, dtype: int64</code></pre><br>  <p><strong>일 추출:</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.day</span><br></pre></td></tr></tbody></table></figure><pre><code>0     131     182     103     304     235      16      97     268      49     2210     911    3012    2113     814     9Name: 생년월일, dtype: int64</code></pre> <br> <p><strong>요일 추출:</strong></p><blockquote><p>월 [0],  화 [1],  수 [2],  목 [3],  금 [4],  토 [5],  일 [6]</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.dayofweek</span><br></pre></td></tr></tbody></table></figure><pre><code>0     41     32     13     54     65     06     27     28     49     110    311    612    413    314    1Name: 생년월일, dtype: int64</code></pre> <br> <p><strong>주 추출:</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"생년월일"</span>].dt.weekofyear</span><br></pre></td></tr></tbody></table></figure><pre><code>0     411     332     503     524     295     366     327     358     499     1210    1011    1312    2913    2314    10Name: 생년월일, dtype: int64</code></pre><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;series의-type-변환하기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#series의-type-변환하기&quot;&gt;&lt;/a&gt; Series의 Type 변환하기&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;markdownIt-T
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (3) DataFrame의 합침 및 병합</title>
    <link href="https://hyemin-kim.github.io/2020/06/19/S-Python-Pandas-Pre3/"/>
    <id>https://hyemin-kim.github.io/2020/06/19/S-Python-Pandas-Pre3/</id>
    <published>2020-06-19T06:52:54.000Z</published>
    <updated>2020-06-23T16:46:15.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dataframe의-합침-및-병합"><a class="markdownIt-Anchor" href="#dataframe의-합침-및-병합"></a> DataFrame의 합침 및 병합</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-dataframe-%ED%95%A9%EC%B9%98%EA%B8%B0-concat"><strong>1. DataFrame 합치기 (concat)</strong></a><ul><li><a href="#1-1-row-%EA%B8%B0%EC%A4%80-%ED%95%A9%EC%B9%98%EA%B8%B0-%EB%B0%91%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%A8">1-1. Row 기준 합치기 (밑으로 합침)</a></li><li><a href="#1-2-column-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0-%EC%98%86%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%A8">1-2. column 기준으로 합치기 (옆으로 합침)</a></li></ul></li><li><a href="#2-dataframe-%EB%B3%91%ED%95%A9%ED%95%98%EA%B8%B0-merge"><strong>2. DataFrame 병합하기 (merge)</strong></a><ul><li><a href="#2-0-%EC%98%88%EC%A0%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%8C%EB%93%A4%EA%B8%B0">2-0. 예제 데이터 만들기</a></li><li><a href="#2-1-left-right-%EB%B0%A9%EC%8B%9D">2-1. left, right 방식</a></li><li><a href="#2-2-inner-outer-%EB%B0%A9%EC%8B%9D">2-2. inner, outer 방식</a></li><li><a href="#2-3-column%EB%AA%85%EC%9D%80-%EB%8B%A4%EB%A5%B4%EC%A7%80%EB%A7%8C-%EB%8F%99%EC%9D%BC%ED%95%9C-%EC%84%B1%EC%A7%88%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%B8-%EA%B2%BD%EC%9A%B0">2-3. column명은 다르지만, 동일한 성질의 데이터 인 경우?</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">'korean-idol-2.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><br><h2 id="1-dataframe-합치기-concat"><a class="markdownIt-Anchor" href="#1-dataframe-합치기-concat"></a> <strong>1. DataFrame 합치기 (concat)</strong></h2><h3 id="1-1-row-기준-합치기-밑으로-합침"><a class="markdownIt-Anchor" href="#1-1-row-기준-합치기-밑으로-합침"></a> 1-1. Row 기준 합치기 (밑으로 합침)</h3><blockquote><p><em>df_concat</em> = <strong>pd.concat</strong> ( [ <em>df_name1</em> , <em>df_name2</em> ], sort = False)<br><em>df_concat</em> <strong>.reset_index</strong> (drop = True)</p></blockquote><blockquote><ul><li>합칠 데이터프리임을 list로 묶어준다.</li><li><strong>sort=False 옵션</strong>을 주어 column의 순서가 유지되도록 한다</li><li>합친 dataframe을 새 변수에 대입한 뒤 <strong>reset_index 옵션</strong>으로 index를 초기화한다 (아님 각각 원래의 index을 가지고 있음)</li><li>reseet_index에서 <strong>drop=True 옵션</strong>을 사용해 원래의 행 index가 새로 index column으로 생성되지 않도록 한다</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_copy = df.copy()</span><br></pre></td></tr></tbody></table></figure>  <br><p><strong>(1) sort 옵션</strong></p><p><strong>sort = False:</strong> column 순서 유지;<br><strong>sort = True:</strong> column을 이름순으로 재정열</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df, df_copy], sort = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df, df_copy], sort = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>그룹</th>      <th>브랜드평판지수</th>      <th>생년월일</th>      <th>성별</th>      <th>소속사</th>      <th>이름</th>      <th>키</th>      <th>혈액형</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>방탄소년단</td>      <td>10523260</td>      <td>1995-10-13</td>      <td>남자</td>      <td>빅히트</td>      <td>지민</td>      <td>173.6</td>      <td>A</td>    </tr>    <tr>      <th>1</th>      <td>빅뱅</td>      <td>9916947</td>      <td>1988-08-18</td>      <td>남자</td>      <td>YG</td>      <td>지드래곤</td>      <td>177.0</td>      <td>A</td>    </tr>    <tr>      <th>2</th>      <td>NaN</td>      <td>8273745</td>      <td>1996-12-10</td>      <td>남자</td>      <td>커넥트</td>      <td>강다니엘</td>      <td>180.0</td>      <td>A</td>    </tr>    <tr>      <th>3</th>      <td>방탄소년단</td>      <td>8073501</td>      <td>1995-12-30</td>      <td>남자</td>      <td>빅히트</td>      <td>뷔</td>      <td>178.0</td>      <td>AB</td>    </tr>    <tr>      <th>4</th>      <td>마마무</td>      <td>7650928</td>      <td>1995-07-23</td>      <td>여자</td>      <td>RBW</td>      <td>화사</td>      <td>162.1</td>      <td>A</td>    </tr>    <tr>      <th>5</th>      <td>방탄소년단</td>      <td>5208335</td>      <td>1997-09-01</td>      <td>남자</td>      <td>빅히트</td>      <td>정국</td>      <td>178.0</td>      <td>A</td>    </tr>    <tr>      <th>6</th>      <td>뉴이스트</td>      <td>4989792</td>      <td>1995-08-09</td>      <td>남자</td>      <td>플레디스</td>      <td>민현</td>      <td>182.3</td>      <td>O</td>    </tr>    <tr>      <th>7</th>      <td>아이들</td>      <td>4668615</td>      <td>1998-08-26</td>      <td>여자</td>      <td>큐브</td>      <td>소연</td>      <td>NaN</td>      <td>B</td>    </tr>    <tr>      <th>8</th>      <td>방탄소년단</td>      <td>4570308</td>      <td>1992-12-04</td>      <td>남자</td>      <td>빅히트</td>      <td>진</td>      <td>179.2</td>      <td>O</td>    </tr>    <tr>      <th>9</th>      <td>핫샷</td>      <td>4036489</td>      <td>1994-03-22</td>      <td>남자</td>      <td>스타크루이엔티</td>      <td>하성운</td>      <td>167.1</td>      <td>A</td>    </tr>    <tr>      <th>10</th>      <td>소녀시대</td>      <td>3918661</td>      <td>1989-03-09</td>      <td>여자</td>      <td>SM</td>      <td>태연</td>      <td>NaN</td>      <td>A</td>    </tr>    <tr>      <th>11</th>      <td>아스트로</td>      <td>3506027</td>      <td>1997-03-30</td>      <td>남자</td>      <td>판타지오</td>      <td>차은우</td>      <td>183.0</td>      <td>B</td>    </tr>    <tr>      <th>12</th>      <td>뉴이스트</td>      <td>3301654</td>      <td>1995-07-21</td>      <td>남자</td>      <td>플레디스</td>      <td>백호</td>      <td>175.0</td>      <td>AB</td>    </tr>    <tr>      <th>13</th>      <td>뉴이스트</td>      <td>3274137</td>      <td>1995-06-08</td>      <td>남자</td>      <td>플레디스</td>      <td>JR</td>      <td>176.0</td>      <td>O</td>    </tr>    <tr>      <th>14</th>      <td>방탄소년단</td>      <td>2925442</td>      <td>1993-03-09</td>      <td>남자</td>      <td>빅히트</td>      <td>슈가</td>      <td>174.0</td>      <td>O</td>    </tr>    <tr>      <th>0</th>      <td>방탄소년단</td>      <td>10523260</td>      <td>1995-10-13</td>      <td>남자</td>      <td>빅히트</td>      <td>지민</td>      <td>173.6</td>      <td>A</td>    </tr>    <tr>      <th>1</th>      <td>빅뱅</td>      <td>9916947</td>      <td>1988-08-18</td>      <td>남자</td>      <td>YG</td>      <td>지드래곤</td>      <td>177.0</td>      <td>A</td>    </tr>    <tr>      <th>2</th>      <td>NaN</td>      <td>8273745</td>      <td>1996-12-10</td>      <td>남자</td>      <td>커넥트</td>      <td>강다니엘</td>      <td>180.0</td>      <td>A</td>    </tr>    <tr>      <th>3</th>      <td>방탄소년단</td>      <td>8073501</td>      <td>1995-12-30</td>      <td>남자</td>      <td>빅히트</td>      <td>뷔</td>      <td>178.0</td>      <td>AB</td>    </tr>    <tr>      <th>4</th>      <td>마마무</td>      <td>7650928</td>      <td>1995-07-23</td>      <td>여자</td>      <td>RBW</td>      <td>화사</td>      <td>162.1</td>      <td>A</td>    </tr>    <tr>      <th>5</th>      <td>방탄소년단</td>      <td>5208335</td>      <td>1997-09-01</td>      <td>남자</td>      <td>빅히트</td>      <td>정국</td>      <td>178.0</td>      <td>A</td>    </tr>    <tr>      <th>6</th>      <td>뉴이스트</td>      <td>4989792</td>      <td>1995-08-09</td>      <td>남자</td>      <td>플레디스</td>      <td>민현</td>      <td>182.3</td>      <td>O</td>    </tr>    <tr>      <th>7</th>      <td>아이들</td>      <td>4668615</td>      <td>1998-08-26</td>      <td>여자</td>      <td>큐브</td>      <td>소연</td>      <td>NaN</td>      <td>B</td>    </tr>    <tr>      <th>8</th>      <td>방탄소년단</td>      <td>4570308</td>      <td>1992-12-04</td>      <td>남자</td>      <td>빅히트</td>      <td>진</td>      <td>179.2</td>      <td>O</td>    </tr>    <tr>      <th>9</th>      <td>핫샷</td>      <td>4036489</td>      <td>1994-03-22</td>      <td>남자</td>      <td>스타크루이엔티</td>      <td>하성운</td>      <td>167.1</td>      <td>A</td>    </tr>    <tr>      <th>10</th>      <td>소녀시대</td>      <td>3918661</td>      <td>1989-03-09</td>      <td>여자</td>      <td>SM</td>      <td>태연</td>      <td>NaN</td>      <td>A</td>    </tr>    <tr>      <th>11</th>      <td>아스트로</td>      <td>3506027</td>      <td>1997-03-30</td>      <td>남자</td>      <td>판타지오</td>      <td>차은우</td>      <td>183.0</td>      <td>B</td>    </tr>    <tr>      <th>12</th>      <td>뉴이스트</td>      <td>3301654</td>      <td>1995-07-21</td>      <td>남자</td>      <td>플레디스</td>      <td>백호</td>      <td>175.0</td>      <td>AB</td>    </tr>    <tr>      <th>13</th>      <td>뉴이스트</td>      <td>3274137</td>      <td>1995-06-08</td>      <td>남자</td>      <td>플레디스</td>      <td>JR</td>      <td>176.0</td>      <td>O</td>    </tr>    <tr>      <th>14</th>      <td>방탄소년단</td>      <td>2925442</td>      <td>1993-03-09</td>      <td>남자</td>      <td>빅히트</td>      <td>슈가</td>      <td>174.0</td>      <td>O</td>    </tr>  </tbody></table></div>  <br><p><strong>(2) reset_index 옵션</strong></p><p><strong>reset_index():</strong> index가 초기화됨, 원래의 index가 새로 index column으로 저장됨<br><strong>reset_index(drop = True):</strong>  index가 초기화됨, 원래의 index가 새로 index column으로 생성되지 않음</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_concat = pd.concat([df, df_copy], sort = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_concat.reset_index()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>index</th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0</td>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>1</td>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>2</td>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>3</td>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>4</td>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>5</td>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>6</td>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>7</td>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>8</td>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>9</td>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>10</td>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>11</td>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>12</td>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>13</td>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>14</td>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>15</th>      <td>0</td>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>16</th>      <td>1</td>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>17</th>      <td>2</td>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>18</th>      <td>3</td>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>19</th>      <td>4</td>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>20</th>      <td>5</td>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>21</th>      <td>6</td>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>22</th>      <td>7</td>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>23</th>      <td>8</td>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>24</th>      <td>9</td>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>25</th>      <td>10</td>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>26</th>      <td>11</td>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>27</th>      <td>12</td>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>28</th>      <td>13</td>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>29</th>      <td>14</td>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_concat.reset_index(drop = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>15</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>16</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>17</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>18</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>19</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>20</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>21</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>22</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>23</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>24</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>25</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>26</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>27</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>28</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>29</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div>  <br><br><h3 id="1-2-column-기준으로-합치기-옆으로-합침"><a class="markdownIt-Anchor" href="#1-2-column-기준으로-합치기-옆으로-합침"></a> 1-2. column 기준으로 합치기 (옆으로 합침)</h3><blockquote><p>column 기준으로 합치고자 할 때는 <strong>axis = 1 옵션</strong>을 준다:<br><strong>pd.concat</strong> ( [<em>df_name1</em>, <em>df_name2</em>], <strong>axis = 1</strong>)</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = pd.read_csv(<span class="string">'korean-idol-2.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>3500</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>3050</td>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>  </tbody></table></div> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df, df2], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>지드래곤</td>      <td>3500</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>뷔</td>      <td>3050</td>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>정국</td>      <td>2900</td>      <td>5</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>소연</td>      <td>4500</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>하성운</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>태연</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>차은우</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>백호</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>JR</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>슈가</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div> <br> <blockquote><p>행의 갯수가 맞지 않을 시</p><ul><li>두 DataFrame이 행 index기준으로 합치게 됨</li><li>행 갯수가 적은 DataFrame의 빈칸에는 NaN로 채워지게 됨</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df3 = df2.drop([<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line">df3</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>3500</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>4500</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df, df3], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>지민</td>      <td>3000.0</td>      <td>3.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>지드래곤</td>      <td>3500.0</td>      <td>3.0</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>강다니엘</td>      <td>3200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>화사</td>      <td>4300.0</td>      <td>3.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>민현</td>      <td>3400.0</td>      <td>6.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>소연</td>      <td>4500.0</td>      <td>5.0</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>진</td>      <td>4200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>하성운</td>      <td>4300.0</td>      <td>4.0</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>태연</td>      <td>3700.0</td>      <td>3.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>차은우</td>      <td>3850.0</td>      <td>5.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>백호</td>      <td>3900.0</td>      <td>4.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>JR</td>      <td>4100.0</td>      <td>3.0</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>슈가</td>      <td>4150.0</td>      <td>3.0</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df4 = df2.drop([<span class="number">13</span>, <span class="number">14</span>])</span><br><span class="line">pd.concat([df,df4], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>지민</td>      <td>3000.0</td>      <td>3.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>지드래곤</td>      <td>3500.0</td>      <td>3.0</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>강다니엘</td>      <td>3200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>뷔</td>      <td>3050.0</td>      <td>4.0</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>화사</td>      <td>4300.0</td>      <td>3.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>정국</td>      <td>2900.0</td>      <td>5.0</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>민현</td>      <td>3400.0</td>      <td>6.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>소연</td>      <td>4500.0</td>      <td>5.0</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>진</td>      <td>4200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>하성운</td>      <td>4300.0</td>      <td>4.0</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>태연</td>      <td>3700.0</td>      <td>3.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>차은우</td>      <td>3850.0</td>      <td>5.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>백호</td>      <td>3900.0</td>      <td>4.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><br><br>  <h2 id="2-dataframe-병합하기-merge"><a class="markdownIt-Anchor" href="#2-dataframe-병합하기-merge"></a> <strong>2. DataFrame 병합하기 (merge)</strong></h2><blockquote><p><strong>concat과 merge의 차이:</strong></p><ul><li><strong>concat:</strong> row 나 column 기준으로 단순하게 이어 붙히기</li><li><strong>merge:</strong> 특정 고유한 키(unique id) 값을 기준으로 병합하기</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>3500</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>3050</td>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>  </tbody></table></div><br><p>df와 df2는 <strong>"이름"이라는 column이 겹친다</strong><br>따라서, 우리는 "이름"을 기준으로 두 DataFrame을 <strong>병합</strong>할 수 있다</p><blockquote><p><strong>pd.merge (<em>left_df</em>, <em>right_df</em>, on = “기준 column”, how = “…” )</strong></p><ul><li>left_df와 right_df 에는 병합할 두 DataFrame을 대입한다</li><li>on 에는 병합의 기준이 되는 column을 넣어 준다</li><li>how 에는 ‘left’, ‘right’, ‘inner’, 'outer’라는 4가지의 병합 방식중 한가지를 택한다</li></ul></blockquote><br>  <h3 id="2-0-예제-데이터-만들기"><a class="markdownIt-Anchor" href="#2-0-예제-데이터-만들기"></a> 2-0. 예제 데이터 만들기</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right = df2.drop([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>])</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_right = df_right.reset_index(drop = <span class="literal">True</span>)</span><br><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>5</th>      <td>하성운</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>6</th>      <td>태연</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>7</th>      <td>차은우</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>백호</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>JR</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>10</th>      <td>슈가</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div> <br> <p><strong>concat로 합치는 경우:</strong><br>데이터가 행 index기준으로 합치게 되기 때문에 <strong>이름이 다른 시람의 데이터가 합치게 된다</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df, df_right], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>지민</td>      <td>3000.0</td>      <td>3.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>강다니엘</td>      <td>3200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>화사</td>      <td>4300.0</td>      <td>3.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>민현</td>      <td>3400.0</td>      <td>6.0</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>진</td>      <td>4200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>하성운</td>      <td>4300.0</td>      <td>4.0</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>태연</td>      <td>3700.0</td>      <td>3.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>차은우</td>      <td>3850.0</td>      <td>5.0</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>백호</td>      <td>3900.0</td>      <td>4.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>JR</td>      <td>4100.0</td>      <td>3.0</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>슈가</td>      <td>4150.0</td>      <td>3.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><br><p>따리서, 우리는 merge를 사용하여 두 DataFrame를 “이름” 기준으로 병합한다</p> <br> <h3 id="2-1-left-right-방식"><a class="markdownIt-Anchor" href="#2-1-left-right-방식"></a> 2-1. left, right 방식</h3><blockquote><ul><li>"left"옵션을 부여할 때: left DataFrame에 키 값이 존재하면 해당 데이터를 유지하고, 병합한 right DataFrame의 값은 NaN이 대입 됨</li><li>반대로, "right"옵션을 부여할 때 right DataFrame을 기준으로 병합하게 됨</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>5</th>      <td>하성운</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>6</th>      <td>태연</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>7</th>      <td>차은우</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>백호</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>JR</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>10</th>      <td>슈가</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">"left"</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>3000.0</td>      <td>3.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>3200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>4300.0</td>      <td>3.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>3400.0</td>      <td>6.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>4200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>4300.0</td>      <td>4.0</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>3700.0</td>      <td>3.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>3850.0</td>      <td>5.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>3900.0</td>      <td>4.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>4100.0</td>      <td>3.0</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>4150.0</td>      <td>3.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">"right"</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>5</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>6</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>7</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>10</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><br><p>현재, left DataFrame이 더 많은 데이터를 보유하고 있으니, right를 기준으로 병합하면 DataFrame 사이즈가 줄어드게 된다</p> <br> <h3 id="2-2-inner-outer-방식"><a class="markdownIt-Anchor" href="#2-2-inner-outer-방식"></a> 2-2. inner, outer 방식</h3><blockquote><ul><li>inner 방식은 두 DataFrame에 <strong>모두 키 값이 존재</strong>하는 경우만 병합한다 (교집합과 비슷)</li><li>outer 방식은 <strong>하나의 DataFrame에만 키 값이 존재</strong>하더라도 모두 병합한다 (합집합과 비슷)</li><li>outer 방식에서는 없는 값은 NaN으로 대입된다</li></ul></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>5</th>      <td>하성운</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>6</th>      <td>태연</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>7</th>      <td>차은우</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>백호</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>JR</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>10</th>      <td>슈가</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">'inner'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>4200</td>      <td>4</td>    </tr>    <tr>      <th>5</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>4300</td>      <td>4</td>    </tr>    <tr>      <th>6</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>3700</td>      <td>3</td>    </tr>    <tr>      <th>7</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>3850</td>      <td>5</td>    </tr>    <tr>      <th>8</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>3900</td>      <td>4</td>    </tr>    <tr>      <th>9</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>4100</td>      <td>3</td>    </tr>    <tr>      <th>10</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>4150</td>      <td>3</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(df, df_right, on = <span class="string">"이름"</span>, how = <span class="string">'outer'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>3000.0</td>      <td>3.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>3200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>4300.0</td>      <td>3.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>3400.0</td>      <td>6.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>4200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>4300.0</td>      <td>4.0</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>3700.0</td>      <td>3.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>3850.0</td>      <td>5.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>3900.0</td>      <td>4.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>4100.0</td>      <td>3.0</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>4150.0</td>      <td>3.0</td>    </tr>  </tbody></table></div><br>  <h3 id="2-3-column명은-다르지만-동일한-성질의-데이터-인-경우"><a class="markdownIt-Anchor" href="#2-3-column명은-다르지만-동일한-성질의-데이터-인-경우"></a> 2-3. column명은 다르지만, 동일한 성질의 데이터 인 경우?</h3><blockquote><p><strong>pd.merge</strong> ( <em>left_df</em>, <em>right_df</em>, <strong>left_on = “<em>left_col</em>”, right_on = “<em>right_col</em>”</strong>, how = “…” )</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>연봉</th>      <th>가족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right.columns = [<span class="string">"성함"</span>, <span class="string">"연봉"</span>, <span class="string">"기족수"</span>]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_right.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>성함</th>      <th>연봉</th>      <th>기족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>3000</td>      <td>3</td>    </tr>    <tr>      <th>1</th>      <td>강다니엘</td>      <td>3200</td>      <td>4</td>    </tr>    <tr>      <th>2</th>      <td>화사</td>      <td>4300</td>      <td>3</td>    </tr>    <tr>      <th>3</th>      <td>민현</td>      <td>3400</td>      <td>6</td>    </tr>    <tr>      <th>4</th>      <td>진</td>      <td>4200</td>      <td>4</td>    </tr>  </tbody></table></div><br>  <p>df의 "이름"과  df_right의 "성함"은 column name이 다르지만, 동일한 성질의 데이터다.<br>이럴 때는 left_on, right_on 옵션을 사용해 기준 column을 지정한다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.merge(df, df_right, left_on = <span class="string">"이름"</span>, right_on = <span class="string">"성함"</span>, how = <span class="string">"outer"</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>성함</th>      <th>연봉</th>      <th>기족수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>지민</td>      <td>3000.0</td>      <td>3.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>강다니엘</td>      <td>3200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>화사</td>      <td>4300.0</td>      <td>3.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>      <td>민현</td>      <td>3400.0</td>      <td>6.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>      <td>진</td>      <td>4200.0</td>      <td>4.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>      <td>하성운</td>      <td>4300.0</td>      <td>4.0</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>      <td>태연</td>      <td>3700.0</td>      <td>3.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>      <td>차은우</td>      <td>3850.0</td>      <td>5.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>      <td>백호</td>      <td>3900.0</td>      <td>4.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>      <td>JR</td>      <td>4100.0</td>      <td>3.0</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>      <td>슈가</td>      <td>4150.0</td>      <td>3.0</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      DataFrame 합치기 (concat); DataFrame 병합하기 (merge)
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (2) 결측값 및 중복값 처리</title>
    <link href="https://hyemin-kim.github.io/2020/06/18/S-Python-Pandas-Pre2/"/>
    <id>https://hyemin-kim.github.io/2020/06/18/S-Python-Pandas-Pre2/</id>
    <published>2020-06-17T15:07:04.000Z</published>
    <updated>2020-06-23T16:45:00.840Z</updated>
    
    <content type="html"><![CDATA[<h1 id="결측값-및-중복값-처리"><a class="markdownIt-Anchor" href="#결측값-및-중복값-처리"></a> 결측값 및 중복값 처리</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-dropna"><strong>1. 결측값을 제거하기 – dropna()</strong></a></li><li><a href="#2-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%9D%84-%EC%B1%84%EC%9B%8C%EC%A3%BC%EA%B8%B0-fillna"><strong>2. 결측값을 채워주기 – fillna</strong></a><ul><li><a href="#2-1-na%EA%B0%92%EC%9D%84-%ED%8A%B9%EC%A0%95-%EC%88%AB%EC%9E%90%EB%A1%9C-%EC%B1%84%EC%9A%B0%EA%B8%B0">2-1. NA값을 특정 숫자로 채우기</a></li><li><a href="#2-2-na%EA%B0%92%EC%9D%84-%ED%86%B5%EA%B3%84%EA%B0%92%EC%9C%BC%EB%A1%9C-%EC%B1%84%EC%9A%B0%EA%B8%B0">2-2. NA값을 통계값으로 채우기</a></li></ul></li><li><a href="#3-%EC%A4%91%EB%B3%B5%EB%90%9C-%EA%B0%92%EC%9D%84-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0-drop_duplicates"><strong>3. 중복된 값을 제거하기 – drop_duplicates</strong></a><ul><li><a href="#3-1-column%EC%9D%98-%EC%A4%91%EB%B3%B5%EA%B0%92-%EC%A0%9C%EA%B1%B0">3-1. column의 중복값 제거</a></li><li><a href="#3-2-%ED%96%89-%EC%A0%84%EC%B2%B4-%EC%A0%9C%EA%B1%B0">3-2. 행 전체 제거</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="1-결측값을-제거하기-dropna"><a class="markdownIt-Anchor" href="#1-결측값을-제거하기-dropna"></a> <strong>1. 결측값을 제거하기 – dropna()</strong></h2><blockquote><ul><li>결측값이 있는 행을 제거:<br>(1) <em>df_name</em> <strong>.dropna()</strong><br>(2) <em>df_name</em> <strong>.dropna(axis=0)</strong></li><li>결측값이 있는 열을 제거: <em>df_name</em> <strong>.dropna(axis=1)</strong></li><li>NA가 하나라도 있는 경우 제거: <em>df_name</em> <strong>.dropna</strong>(axis=0, <strong>how = ‘any’</strong>)</li><li>모두가 NA인 경우 제거: <em>df_name</em> <strong>.dropna</strong>(axis=0, <strong>how = ‘all’</strong>)</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div> <br> <p><strong>(1) 결측값이 있는 행 제거</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br>  <p><strong>(2) 결측 값이 있는 열 제거</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br>  <p><strong>(3) NA가 하나라도 있는 경우 행 제거</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">0</span>, how = <span class="string">'any'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div> <br> <p><strong>(4) 모두가 NA인 경우 행 제거</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[<span class="number">10</span>] = np.nan</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947.0</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501.0</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335.0</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615.0</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489.0</td>    </tr>    <tr>      <th>10</th>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137.0</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(axis=<span class="number">0</span>, how = <span class="string">'all'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260.0</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947.0</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745.0</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501.0</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928.0</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335.0</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792.0</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615.0</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308.0</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489.0</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027.0</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654.0</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137.0</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442.0</td>    </tr>  </tbody></table></div><p><br> <br></p><h2 id="2-결측값을-채워주기-fillna"><a class="markdownIt-Anchor" href="#2-결측값을-채워주기-fillna"></a> <strong>2. 결측값을 채워주기 – fillna</strong></h2><blockquote><p><em>df_name</em> [ '<em>na_col_name</em> ’ ] <strong>.fillna(<em>fill_value</em>)</strong></p></blockquote><blockquote><p>결측값을 채운 데이터프레임을 유지시키려면:<br>(1) inplace = True 옵션을 추가함<br>(2) 원 dataframe에 다시 대입함</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><p>"키"에 2개의 데이터가 누락, "그룹"에 1개의 데이터가 누락된 것을 확인할 수 있다</p>  <br><h3 id="2-1-na값을-특정-숫자로-채우기"><a class="markdownIt-Anchor" href="#2-1-na값을-특정-숫자로-채우기"></a> 2-1. NA값을 특정 숫자로 채우기</h3><blockquote><ul><li><em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>new_value</em>, inplace = True)</li><li><em>df_name</em>[ '<em>na_col_name</em> ’ ] = <em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>new_value</em>)</li></ul></blockquote><br><p><strong>e.g.</strong> 누락된 ‘키’ 값을 '-1’로 채워줌</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37      -1.08     179.29     167.110     -1.011    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><br>  <p>이때는 원 데이터가 변화되지 않음.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37       NaN8     179.29     167.110      NaN11    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre> <br><p>수정된 데이터를 유지시키려면:</p><p>&lt;방법1&gt;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(<span class="number">-1</span>, inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37      -1.08     179.29     167.110     -1.011    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><br><p>&lt;방법2&gt;</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(<span class="number">-1</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37      -1.08     179.29     167.110     -1.011    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><br><h3 id="2-2-na값을-통계값으로-채우기"><a class="markdownIt-Anchor" href="#2-2-na값을-통계값으로-채우기"></a> 2-2. NA값을 통계값으로 채우기</h3><blockquote><ul><li><em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.mean()</strong>, inplace = True)</li><li><em>df_name</em>[ '<em>na_col_name</em> ’ ] = <em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.fillna</strong> (<em>df_name</em>[ '<em>na_col_name</em> ’ ] <strong>.mean()</strong>)</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37       NaN8     179.29     167.110      NaN11    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre> <br> <p><strong>(1) 평균으로 대체</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>175.79230769230767</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].mean(), inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].mean())</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.6000001     177.0000002     180.0000003     178.0000004     162.1000005     178.0000006     182.3000007     175.7923088     179.2000009     167.10000010    175.79230811    183.00000012    175.00000013    176.00000014    174.000000Name: 키, dtype: float64</code></pre> <br> <p><strong>(2) 중위값으로 대체</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df.copy()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].median()</span><br></pre></td></tr></tbody></table></figure><pre><code>177.0</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].median(), inplace = <span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>] = df2[<span class="string">'키'</span>].fillna(df2[<span class="string">'키'</span>].median())</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37     177.08     179.29     167.110    177.011    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><p><br>  <br></p><h2 id="3-중복된-값을-제거하기-drop_duplicates"><a class="markdownIt-Anchor" href="#3-중복된-값을-제거하기-drop_duplicates"></a> <strong>3. 중복된 값을 제거하기 – drop_duplicates</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br> <h3 id="3-1-column의-중복값-제거"><a class="markdownIt-Anchor" href="#3-1-column의-중복값-제거"></a> 3-1. column의 중복값 제거</h3><blockquote><p><em>df_name</em> [“<em>col_name</em>”] <strong>.drop_duplicates( keep = … )</strong></p></blockquote><blockquote><ul><li>여러 개 중복값 (NaN 포함) 중에서 기본적으로 첫번째 것만 유지시키고 나머지는 다 제거한다</li><li>하지만 keep 옵션으로 유지하고 싶은 데이터를 선택할 수 있다. [keep: ‘first’ / ‘last’]</li><li>이때는 해당 위치의 값만 삭제되고 행 자체는 유지된다</li></ul></blockquote><br><p><strong>(1) 중복값 중의 첫번째를 유지시킴  <font color="blue"> (default) </font></strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03       NaN4     162.15     178.06     182.37       NaN8     179.29     167.110      NaN11    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates()  <span class="comment"># remove 2nd "178.0" &amp; 2nd "NaN"</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03       NaN4     162.15     178.06     182.38     179.29     167.111    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'first'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03       NaN4     162.15     178.06     182.38     179.29     167.111    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><br>  <p><strong>(2) 중복값 중의 마지막을 유지시킴</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.03     178.04     162.15     178.06     182.37       NaN8     179.29     167.110      NaN11    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     173.61     177.02     180.04     162.15     178.06     182.38     179.29     167.110      NaN11    183.012    175.013    176.014    174.0Name: 키, dtype: float64</code></pre> <br> <p><strong>이때는 해당위치의 값만 제거되고 행 자체는 유지됨</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>] = df[<span class="string">'키'</span>].drop_duplicates(keep=<span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>NaN</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br>  <h3 id="3-2-행-전체-제거"><a class="markdownIt-Anchor" href="#3-2-행-전체-제거"></a> 3-2. 행 전체 제거</h3><blockquote><p><em>df_name</em> <strong>.drop_duplicates</strong>(“<em>col_name</em>”, keep = …)</p></blockquote><blockquote><p>지정한 column에서 중복값이 포함되어 있으면 중복값을 포함한 행을 전체 제거</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>NaN</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     방탄소년단1        빅뱅2       NaN3     방탄소년단4       마마무5     방탄소년단6      뉴이스트7       아이들8     방탄소년단9        핫샷10     소녀시대11     아스트로12     뉴이스트13     뉴이스트14    방탄소년단Name: 그룹, dtype: object</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop_duplicates(<span class="string">'그룹'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop_duplicates(<span class="string">'그룹'</span>, keep = <span class="string">'last'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;결측값-및-중복값-처리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#결측값-및-중복값-처리&quot;&gt;&lt;/a&gt; 결측값 및 중복값 처리&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;li&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 전처리 - (1) row &amp; column 의 추가 및 제거</title>
    <link href="https://hyemin-kim.github.io/2020/06/18/S-Python-Pandas-Pre1/"/>
    <id>https://hyemin-kim.github.io/2020/06/18/S-Python-Pandas-Pre1/</id>
    <published>2020-06-17T15:02:25.000Z</published>
    <updated>2020-06-23T16:39:44.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="row-column-의-추가-및-제거"><a class="markdownIt-Anchor" href="#row-column-의-추가-및-제거"></a> row &amp; column 의 추가 및 제거</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-row%EC%9D%98-%EC%B6%94%EA%B0%80"><strong>1. row의 추가</strong></a></li><li><a href="#2-column%EC%9D%98-%EC%B6%94%EA%B0%80"><strong>2. column의 추가</strong></a></li><li><a href="#3-row%EC%9D%98-%EC%A0%9C%EA%B1%B0"><strong>3. row의 제거</strong></a></li><li><a href="#4-column%EC%9D%98-%EC%A0%9C%EA%B1%B0"><strong>4. column의 제거</strong></a></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><br><br><h2 id="1-row의-추가"><a class="markdownIt-Anchor" href="#1-row의-추가"></a> <strong>1. row의 추가</strong></h2><blockquote><p><em>df_name</em> <strong>.append ( {…} , ignore_index = True )</strong></p></blockquote><blockquote><p>dictionary 형태의 데이터를 만들어 준다음 <strong>append()</strong> 함수를 사용하여 데이터를 추가할 수 있다. <strong>ignore_index=True</strong>옵션을 반드시 같이 추가해야한다</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.append({<span class="string">'이름'</span>: <span class="string">'홍길동'</span>, <span class="string">'그룹'</span>: <span class="string">'a그룹'</span>, <span class="string">'소속사'</span>:<span class="string">'A사'</span>, <span class="string">'성별'</span>: <span class="string">'남자'</span>, <span class="string">'생년월일'</span>: <span class="string">'1990-01-01'</span>, <span class="string">'키'</span>: <span class="number">185.0</span>, <span class="string">'혈액형'</span>: <span class="string">'B'</span>, <span class="string">'브랜드평판지수'</span>: <span class="number">12345678</span>}, ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>15</th>      <td>홍길동</td>      <td>a그룹</td>      <td>A사</td>      <td>남자</td>      <td>1990-01-01</td>      <td>185.0</td>      <td>B</td>      <td>12345678</td>    </tr>  </tbody></table></div> <br><br> <h2 id="2-column의-추가"><a class="markdownIt-Anchor" href="#2-column의-추가"></a> <strong>2. column의 추가</strong></h2><blockquote><p>새로운 column을 만들고 값을 대입해주면, column이 쉽게 추가될 수 있다</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'국적'</span>] = <span class="string">'대한민국'</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>국적</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>대한민국</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>대한민국</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>대한민국</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>대한민국</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>대한민국</td>    </tr>  </tbody></table></div><br>  <p>새로운 column의 값을 다르게 부여하고 싶다면 loc 함수를 활용하면 된다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'이름'</span>] == <span class="string">'지드래곤'</span>, <span class="string">'국적'</span>] = <span class="string">'korea'</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>      <th>국적</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>      <td>대한민국</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>      <td>korea</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>      <td>대한민국</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>      <td>대한민국</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>      <td>대한민국</td>    </tr>  </tbody></table></div><br><br>  <h2 id="3-row의-제거"><a class="markdownIt-Anchor" href="#3-row의-제거"></a> <strong>3. row의 제거</strong></h2><blockquote><ul><li>하나의 행: <em>df_name</em> <strong>.drop</strong> (<em>index_num</em>, <strong>axis = 0</strong>)</li><li>복수의 행: <em>df_name</em> <strong>.drop</strong> ( [ <em>index_num1, index_num2</em> ], <strong>axis = 0</strong>)</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(<span class="number">3</span>, axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop([<span class="number">3</span>, <span class="number">5</span>], axis = <span class="number">0</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br><br>  <h2 id="4-column의-제거"><a class="markdownIt-Anchor" href="#4-column의-제거"></a> <strong>4. column의 제거</strong></h2><blockquote><ul><li>하나의 열: <em>df_name</em> <strong>.drop</strong> ( ‘<em>col_name</em>’, <strong>axis = 1</strong>)</li><li>복수의 열: <em>df_name</em> <strong>.drop</strong> ( [ <em>‘col_name1’, ‘col_name2’</em> ], <strong>axis = 1</strong>)</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop(<span class="string">"그룹"</span>, axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div> <br> <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop([<span class="string">"그룹"</span>, <span class="string">"소속사"</span>], axis = <span class="number">1</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;row-column-의-추가-및-제거&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#row-column-의-추가-및-제거&quot;&gt;&lt;/a&gt; row &amp;amp; column 의 추가 및 제거&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul clas
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="전처리" scheme="https://hyemin-kim.github.io/tags/%EC%A0%84%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (7) 기타</title>
    <link href="https://hyemin-kim.github.io/2020/06/17/S-Python-Pandas7/"/>
    <id>https://hyemin-kim.github.io/2020/06/17/S-Python-Pandas7/</id>
    <published>2020-06-17T06:12:40.000Z</published>
    <updated>2020-06-23T16:56:11.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="기타"><a class="markdownIt-Anchor" href="#기타"></a> 기타</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94"><strong>1. 피벗테이블</strong></a></li><li><a href="#2-groupby-%EA%B7%B8%EB%A3%B9%EC%9C%BC%EB%A1%9C-%EB%AC%B6%EC%96%B4-%EB%B3%B4%EA%B8%B0"><strong>2. GroupBy (그룹으로 묶어 보기)</strong></a></li><li><a href="#3-multi-index-%EB%B3%B5%ED%95%A9-%EC%9D%B8%EB%8D%B1%EC%8A%A4"><strong>3. Multi-Index (복합 인덱스)</strong></a><ul><li><a href="#3-1-multi-index-%EC%A0%81%EC%9A%A9">3-1. Multi-Index 적용</a></li><li><a href="#3-2-multi-index-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A0%88%EC%9E%84%EC%9D%84-%ED%94%BC%EB%B2%97%ED%85%8C%EC%9D%B4%EB%B8%94%EB%A1%9C-%EB%B3%80%ED%99%98">3-2. Multi-Index 데이터 프레임을 피벗테이블로 변환</a></li><li><a href="#3-3-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%B4%88%EA%B8%B0%ED%99%94-reset_index">3-3. 인덱스 초기화 (reset_index)</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure>  <br><h2 id="1-피벗테이블"><a class="markdownIt-Anchor" href="#1-피벗테이블"></a> <strong>1. 피벗테이블</strong></h2><ul><li>데이터 열 중에서 <strong>두 개의 열을 각각 행 인덱스, 열 인덱스로 사용</strong>하여 데이터를 조회하여 펼쳐놓은 건을 의미함</li><li>왼쪽에 나타나는 인덱스를 <strong>행 인덱스, 상단에 나타나는 인덱스를 열 인덱스</strong>라고 부른다</li></ul><blockquote><p>pd.pivot_table(<em>df_name</em>, index = “<em>col_name_분류기준1</em>”, columns = “<em>col_name_분류기준2</em>”, values = “<em>col_name_조회대상</em>”, aggfunc = …)</p><ul><li>index는 행 인덱스</li><li>columns는 열 인덱스</li><li>values는 조회하고 싶은 값</li><li>aggfunc는 value를 산출하는 연산법<br>(1) e.g.: aggfunc = np.sum / np.mean<br>(2) 설정하지 않은 경우 기본적으로 평균값을 구한다</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"소속사"</span>, columns = <span class="string">"혈액형"</span>, values = <span class="string">"키"</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th>혈액형</th>      <th>A</th>      <th>AB</th>      <th>B</th>      <th>O</th>    </tr>    <tr>      <th>소속사</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>RBW</th>      <td>162.1</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>YG</th>      <td>177.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>빅히트</th>      <td>175.8</td>      <td>178.0</td>      <td>NaN</td>      <td>176.60</td>    </tr>    <tr>      <th>스타크루이엔티</th>      <td>167.1</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>커넥트</th>      <td>180.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>판타지오</th>      <td>NaN</td>      <td>NaN</td>      <td>183.0</td>      <td>NaN</td>    </tr>    <tr>      <th>플레디스</th>      <td>NaN</td>      <td>175.0</td>      <td>NaN</td>      <td>179.15</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.pivot_table(df, index = <span class="string">"그룹"</span>, columns = <span class="string">"혈액형"</span>, values  = <span class="string">"브랜드평판지수"</span>, aggfunc = np.sum)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th>혈액형</th>      <th>A</th>      <th>AB</th>      <th>B</th>      <th>O</th>    </tr>    <tr>      <th>그룹</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>뉴이스트</th>      <td>NaN</td>      <td>3301654.0</td>      <td>NaN</td>      <td>8263929.0</td>    </tr>    <tr>      <th>마마무</th>      <td>7650928.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>방탄소년단</th>      <td>15731595.0</td>      <td>8073501.0</td>      <td>NaN</td>      <td>7495750.0</td>    </tr>    <tr>      <th>빅뱅</th>      <td>9916947.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>소녀시대</th>      <td>3918661.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>아스트로</th>      <td>NaN</td>      <td>NaN</td>      <td>3506027.0</td>      <td>NaN</td>    </tr>    <tr>      <th>아이들</th>      <td>NaN</td>      <td>NaN</td>      <td>4668615.0</td>      <td>NaN</td>    </tr>    <tr>      <th>핫샷</th>      <td>4036489.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><p><br><br></p><h2 id="2-groupby-그룹으로-묶어-보기"><a class="markdownIt-Anchor" href="#2-groupby-그룹으로-묶어-보기"></a> <strong>2. GroupBy (그룹으로 묶어 보기)</strong></h2><ul><li>groupby는 데이터를 <strong>그룹으로 묶어 분석</strong>할 때 활용한다</li><li><strong>소속사</strong>별 키의 평균, <strong>성별</strong> 키의 평균 등 특정, 그룹별 통계 및 데이터의 성질을 확인하고자 할 때 활용한다</li></ul><blockquote><p>groupby와 함께</p><ul><li>count() - 갯수</li><li>sum() - 합계</li><li>mean() - 평균</li><li>var() - 분산</li><li>std() -표준편차</li><li>min() / max() - 최소값, 최대값</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">"소속사"</span>)</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000024E760EC288&gt;</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'소속사'</span>).count()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>    <tr>      <th>소속사</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>RBW</th>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>SM</th>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>YG</th>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>빅히트</th>      <td>5</td>      <td>5</td>      <td>5</td>      <td>5</td>      <td>5</td>      <td>5</td>      <td>5</td>    </tr>    <tr>      <th>스타크루이엔티</th>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>커넥트</th>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>큐브</th>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>0</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>판타지오</th>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>      <td>1</td>    </tr>    <tr>      <th>플레디스</th>      <td>3</td>      <td>3</td>      <td>3</td>      <td>3</td>      <td>3</td>      <td>3</td>      <td>3</td>    </tr>  </tbody></table></div><br> <p>산술 통계는 자동으로 산술통계가 가능한 열만 출력됨.</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'그룹'</span>).mean()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>    <tr>      <th>그룹</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>뉴이스트</th>      <td>177.766667</td>      <td>3.855194e+06</td>    </tr>    <tr>      <th>마마무</th>      <td>162.100000</td>      <td>7.650928e+06</td>    </tr>    <tr>      <th>방탄소년단</th>      <td>176.560000</td>      <td>6.260169e+06</td>    </tr>    <tr>      <th>빅뱅</th>      <td>177.000000</td>      <td>9.916947e+06</td>    </tr>    <tr>      <th>소녀시대</th>      <td>NaN</td>      <td>3.918661e+06</td>    </tr>    <tr>      <th>아스트로</th>      <td>183.000000</td>      <td>3.506027e+06</td>    </tr>    <tr>      <th>아이들</th>      <td>NaN</td>      <td>4.668615e+06</td>    </tr>    <tr>      <th>핫샷</th>      <td>167.100000</td>      <td>4.036489e+06</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'성별'</span>).sum()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>    <tr>      <th>성별</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>남자</th>      <td>2123.2</td>      <td>68599637</td>    </tr>    <tr>      <th>여자</th>      <td>162.1</td>      <td>16238204</td>    </tr>  </tbody></table></div><br>  <p>특정 열만 출력하고 싶다면?</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby(<span class="string">'혈액형'</span>)[<span class="string">'키'</span>].mean()</span><br></pre></td></tr></tbody></table></figure><pre><code>혈액형A     172.966667AB    176.500000B     183.000000O     177.875000Name: 키, dtype: float64</code></pre><br><br> <h2 id="3-multi-index-복합-인덱스"><a class="markdownIt-Anchor" href="#3-multi-index-복합-인덱스"></a> <strong>3. Multi-Index (복합 인덱스)</strong></h2><h3 id="3-1-multi-index-적용"><a class="markdownIt-Anchor" href="#3-1-multi-index-적용"></a> 3-1. Multi-Index 적용</h3><p>행 인덱스를 복합적으로 구성하고 싶은 경우는 인덱스를 리스트로 만들어 준다</p><blockquote><p><em>df_name</em> <strong>.groupby([‘<em>col_name_1</em>’,‘<em>col_name_2</em>’])</strong> .<em>mean()</em></p><ul><li>데이터를 먼저 col_1기준으로 분류한 다음, col_2기준으로 한번 더 분류한다. 2번 분류 후의 데이터에 대해 산술통계값을 구한다</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.groupby([<span class="string">'혈액형'</span>, <span class="string">'성별'</span>]).mean()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>    <tr>      <th>혈액형</th>      <th>성별</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="2" valign="top">A</th>      <th>남자</th>      <td>175.140</td>      <td>7591755.20</td>    </tr>    <tr>      <th>여자</th>      <td>162.100</td>      <td>5784794.50</td>    </tr>    <tr>      <th>AB</th>      <th>남자</th>      <td>176.500</td>      <td>5687577.50</td>    </tr>    <tr>      <th rowspan="2" valign="top">B</th>      <th>남자</th>      <td>183.000</td>      <td>3506027.00</td>    </tr>    <tr>      <th>여자</th>      <td>NaN</td>      <td>4668615.00</td>    </tr>    <tr>      <th>O</th>      <th>남자</th>      <td>177.875</td>      <td>3939919.75</td>    </tr>  </tbody></table></div><br>  <h3 id="3-2-multi-index-데이터-프레임을-피벗테이블로-변환"><a class="markdownIt-Anchor" href="#3-2-multi-index-데이터-프레임을-피벗테이블로-변환"></a> 3-2. Multi-Index 데이터 프레임을 피벗테이블로 변환</h3><p>Multi-Index로 된 데이터프레임을 피벗테이블 형태로 다시 변환해줄 수 있다</p><blockquote><p><em>df_name</em> <strong>.unstack( <em>‘col_열’</em> )</strong></p><ul><li>col_열: groupby에서 선택한 두 column중 pivot table의 열인덱스로 지정해주고 싶은 column명을 입력</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df.groupby([<span class="string">'혈액형'</span>, <span class="string">'성별'</span>]).mean()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>    <tr>      <th>혈액형</th>      <th>성별</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="2" valign="top">A</th>      <th>남자</th>      <td>175.140</td>      <td>7591755.20</td>    </tr>    <tr>      <th>여자</th>      <td>162.100</td>      <td>5784794.50</td>    </tr>    <tr>      <th>AB</th>      <th>남자</th>      <td>176.500</td>      <td>5687577.50</td>    </tr>    <tr>      <th rowspan="2" valign="top">B</th>      <th>남자</th>      <td>183.000</td>      <td>3506027.00</td>    </tr>    <tr>      <th>여자</th>      <td>NaN</td>      <td>4668615.00</td>    </tr>    <tr>      <th>O</th>      <th>남자</th>      <td>177.875</td>      <td>3939919.75</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.unstack(<span class="string">'혈액형'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead tr th {    text-align: left;}.dataframe thead tr:last-of-type th {    text-align: right;}</code></pre></style><table>  <thead>    <tr>      <th></th>      <th colspan="4" halign="left">키</th>      <th colspan="4" halign="left">브랜드평판지수</th>    </tr>    <tr>      <th>혈액형</th>      <th>A</th>      <th>AB</th>      <th>B</th>      <th>O</th>      <th>A</th>      <th>AB</th>      <th>B</th>      <th>O</th>    </tr>    <tr>      <th>성별</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>남자</th>      <td>175.14</td>      <td>176.5</td>      <td>183.0</td>      <td>177.875</td>      <td>7591755.2</td>      <td>5687577.5</td>      <td>3506027.0</td>      <td>3939919.75</td>    </tr>    <tr>      <th>여자</th>      <td>162.10</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>5784794.5</td>      <td>NaN</td>      <td>4668615.0</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.unstack(<span class="string">'성별'</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead tr th {    text-align: left;}.dataframe thead tr:last-of-type th {    text-align: right;}</code></pre></style><table>  <thead>    <tr>      <th></th>      <th colspan="2" halign="left">키</th>      <th colspan="2" halign="left">브랜드평판지수</th>    </tr>    <tr>      <th>성별</th>      <th>남자</th>      <th>여자</th>      <th>남자</th>      <th>여자</th>    </tr>    <tr>      <th>혈액형</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>A</th>      <td>175.140</td>      <td>162.1</td>      <td>7591755.20</td>      <td>5784794.5</td>    </tr>    <tr>      <th>AB</th>      <td>176.500</td>      <td>NaN</td>      <td>5687577.50</td>      <td>NaN</td>    </tr>    <tr>      <th>B</th>      <td>183.000</td>      <td>NaN</td>      <td>3506027.00</td>      <td>4668615.0</td>    </tr>    <tr>      <th>O</th>      <td>177.875</td>      <td>NaN</td>      <td>3939919.75</td>      <td>NaN</td>    </tr>  </tbody></table></div><br>  <h3 id="3-3-인덱스-초기화-reset_index"><a class="markdownIt-Anchor" href="#3-3-인덱스-초기화-reset_index"></a> 3-3. 인덱스 초기화 (reset_index)</h3><p>reset_index() 는 Multi-Index로 구성된 데이터 프레임의 <strong>인덱스를 초기화</strong>해 준다</p><p>그 의미는 Multi-Index로 구성된 데이터 프레임 중의 index들을 dataframe의 column으로 변환시키는 것</p><blockquote><p><em>df_name</em> = <em>df_name</em> <strong>.reset_index()</strong></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>    <tr>      <th>혈액형</th>      <th>성별</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="2" valign="top">A</th>      <th>남자</th>      <td>175.140</td>      <td>7591755.20</td>    </tr>    <tr>      <th>여자</th>      <td>162.100</td>      <td>5784794.50</td>    </tr>    <tr>      <th>AB</th>      <th>남자</th>      <td>176.500</td>      <td>5687577.50</td>    </tr>    <tr>      <th rowspan="2" valign="top">B</th>      <th>남자</th>      <td>183.000</td>      <td>3506027.00</td>    </tr>    <tr>      <th>여자</th>      <td>NaN</td>      <td>4668615.00</td>    </tr>    <tr>      <th>O</th>      <th>남자</th>      <td>177.875</td>      <td>3939919.75</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df2.reset_index()</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>혈액형</th>      <th>성별</th>      <th>키</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>A</td>      <td>남자</td>      <td>175.140</td>      <td>7591755.20</td>    </tr>    <tr>      <th>1</th>      <td>A</td>      <td>여자</td>      <td>162.100</td>      <td>5784794.50</td>    </tr>    <tr>      <th>2</th>      <td>AB</td>      <td>남자</td>      <td>176.500</td>      <td>5687577.50</td>    </tr>    <tr>      <th>3</th>      <td>B</td>      <td>남자</td>      <td>183.000</td>      <td>3506027.00</td>    </tr>    <tr>      <th>4</th>      <td>B</td>      <td>여자</td>      <td>NaN</td>      <td>4668615.00</td>    </tr>    <tr>      <th>5</th>      <td>O</td>      <td>남자</td>      <td>177.875</td>      <td>3939919.75</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      피벗테이블, GroupBy, Multi-Index
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="데이터파악" scheme="https://hyemin-kim.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%8C%8C%EC%95%85/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (6) 결측값 확인 및 추출</title>
    <link href="https://hyemin-kim.github.io/2020/06/12/S-Python-Pandas6/"/>
    <id>https://hyemin-kim.github.io/2020/06/12/S-Python-Pandas6/</id>
    <published>2020-06-11T16:21:05.000Z</published>
    <updated>2020-06-23T16:55:47.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="결측값-확인-및-추출"><a class="markdownIt-Anchor" href="#결측값-확인-및-추출"></a> 결측값 확인 및 추출</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-%EA%B2%B0%EC%B8%A1%EA%B0%92%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC"><strong>1. 결측값에 대하여</strong></a></li><li><a href="#2-column%EB%B3%84-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EA%B0%9C%EC%88%98-%ED%99%95%EC%9D%B8-info"><strong>2. column별 (비)결측값 개수 확인 – info()</strong></a></li><li><a href="#3-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EC%9C%84%EC%B9%98-%ED%99%95%EC%9D%B8"><strong>3. (비)결측값 위치 확인</strong></a><ul><li><a href="#3-1-%EC%A0%84%EC%B2%B4-data">3-1. 전체 Data</a></li><li><a href="#3-2-%ED%8A%B9%EC%A0%95-column">3-2. 특정 column</a></li></ul></li><li><a href="#4-%EB%B9%84%EA%B2%B0%EC%B8%A1%EA%B0%92-%EC%B6%94%EC%B6%9C"><strong>4. (비)결측값 추출</strong></a><ul><li><a href="#4-1-%ED%95%B4%EB%8B%B9-column%EB%A7%8C-%EC%B6%94%EC%B6%9C">4-1. 해당 column만 추출</a></li><li><a href="#4-2-%EC%A0%84%EC%B2%B4-column-%EC%B6%94%EC%B6%9C">4-2. 전체 column 추출</a></li><li><a href="#4-3-%EC%A7%80%EC%A0%95%ED%95%9C-column-%EC%B6%94%EC%B6%9C">4-3. 지정한 column 추출</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><br><h2 id="1-결측값에-대하여"><a class="markdownIt-Anchor" href="#1-결측값에-대하여"></a> <strong>1. 결측값에 대하여</strong></h2><ul><li><p>Null 값은 <strong>비어있는 값, 고급 언어로 결측값</strong>이다</p></li><li><p>pandas 에서는 NaN =&gt; Not a Number 로 표기 된다</p><br></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br>  <br><h2 id="2-column별-비결측값-개수-확인-info"><a class="markdownIt-Anchor" href="#2-column별-비결측값-개수-확인-info"></a> <strong>2. column별 (비)결측값 개수 확인 – info()</strong></h2><p>info() 로 각 column별의 결측값(NaN) 개수를 쉽게 확인할 수 있다.</p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.info()</span><br></pre></td></tr></tbody></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 15 entries, 0 to 14Data columns (total 8 columns): #   Column   Non-Null Count  Dtype  ---  ------   --------------  -----   0   이름       15 non-null     object  1   그룹       14 non-null     object  2   소속사      15 non-null     object  3   성별       15 non-null     object  4   생년월일     15 non-null     object  5   키        13 non-null     float64 6   혈액형      15 non-null     object  7   브랜드평판지수  15 non-null     int64  dtypes: float64(1), int64(1), object(6)memory usage: 1.1+ KB</code></pre><br><br><h2 id="3-비결측값-위치-확인"><a class="markdownIt-Anchor" href="#3-비결측값-위치-확인"></a> <strong>3. (비)결측값 위치 확인</strong></h2><ul><li><p>.isna()</p></li><li><p>.isnull()</p></li><li><p>.notna()</p></li><li><p>.notnull()</p><br></li></ul><h3 id="3-1-전체-data"><a class="markdownIt-Anchor" href="#3-1-전체-data"></a> 3-1. 전체 Data</h3><blockquote><p><em>df_name</em> .명령어</p></blockquote><br><p><strong>(1) 결측값 = True</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.isna()</span><br></pre></td></tr></tbody></table></figure><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.isnull()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>1</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>2</th>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>3</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>4</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>5</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>6</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>7</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>8</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>9</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>10</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>True</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>11</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>12</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>13</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>14</th>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>      <td>False</td>    </tr>  </tbody></table></div><br><p><strong>(2) 비결측값 = True</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.notna()</span><br></pre></td></tr></tbody></table></figure><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.notnull()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>1</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>2</th>      <td>True</td>      <td>False</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>3</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>4</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>5</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>6</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>7</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>False</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>8</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>9</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>10</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>False</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>11</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>12</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>13</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>14</th>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>      <td>True</td>    </tr>  </tbody></table></div><p><br> <br></p><h3 id="3-2-특정-column"><a class="markdownIt-Anchor" href="#3-2-특정-column"></a> 3-2. 특정 column</h3><blockquote><p><em>df_name</em> [ ‘<em>col_name</em>’ ] .명령어</p></blockquote><br><p><strong>(1) 결측값 = True</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].isna()</span><br></pre></td></tr></tbody></table></figure><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].isnull()</span><br></pre></td></tr></tbody></table></figure><pre><code>0     False1     False2      True3     False4     False5     False6     False7     False8     False9     False10    False11    False12    False13    False14    FalseName: 그룹, dtype: bool</code></pre><br><p><strong>(2) 비결측값 = True</strong></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].notna()</span><br></pre></td></tr></tbody></table></figure><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>].notnull()</span><br></pre></td></tr></tbody></table></figure><pre><code>0      True1      True2     False3      True4      True5      True6      True7      True8      True9      True10     True11     True12     True13     True14     TrueName: 그룹, dtype: bool</code></pre> <br><br>  <h2 id="4-비결측값-추출"><a class="markdownIt-Anchor" href="#4-비결측값-추출"></a> <strong>4. (비)결측값 추출</strong></h2><h3 id="4-1-해당-column만-추출"><a class="markdownIt-Anchor" href="#4-1-해당-column만-추출"></a> 4-1. 해당 column만 추출</h3><blockquote><p>결측값: <em>df_name</em> [ ‘<em>col_name</em>’]  [ <em>df_name</em> [ ‘<em>col_name</em>’ ] .isna() / isnull() ]<br>비결측값: <em>df_name</em> [ ‘<em>col_name</em>’ ]  [<em>df_name</em> [ ‘<em>col_name</em>’ ] .notna() / notnull()]</p></blockquote>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>][df[<span class="string">'그룹'</span>].isna()]</span><br></pre></td></tr></tbody></table></figure><pre><code>2    NaNName: 그룹, dtype: object</code></pre><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'그룹'</span>][df[<span class="string">'그룹'</span>].notnull()]</span><br></pre></td></tr></tbody></table></figure><pre><code>0     방탄소년단1        빅뱅3     방탄소년단4       마마무5     방탄소년단6      뉴이스트7       아이들8     방탄소년단9        핫샷10     소녀시대11     아스트로12     뉴이스트13     뉴이스트14    방탄소년단Name: 그룹, dtype: object</code></pre>  <br><br><h3 id="4-2-전체-column-추출"><a class="markdownIt-Anchor" href="#4-2-전체-column-추출"></a> 4-2. 전체 column 추출</h3><blockquote><p>결측값: <em>df_name</em> .loc [<em>df_name</em> [ ‘<em>col_name</em>’ ] .isna() / isnull() ]</p><p>비결측값: <em>df_name</em> .loc [<em>df_name</em> ['<em>col_name</em>] .notna() / notnull() ]</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].isna()]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].notnull()]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br><br>  <h3 id="4-3-지정한-column-추출"><a class="markdownIt-Anchor" href="#4-3-지정한-column-추출"></a> 4-3. 지정한 column 추출</h3><blockquote><p>결측값: <em>df_name</em> .loc [<em>df_name</em> [ ‘<em>na_col_name</em>’ ] .isna() / isnull() , [‘<em>col_name1</em>’, ‘<em>col_name2</em>’, …]]</p><p>비결측값: <em>df_name</em> .loc [<em>df_name</em> ['<em>na_col_name</em>] .notna() / notnull() , [‘<em>col_name1</em>’, ‘<em>col_name2</em>’, …]]</p></blockquote><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].isna(), [<span class="string">'이름'</span>, <span class="string">'소속사'</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>    </tr>  </thead>  <tbody>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>커넥트</td>    </tr>  </tbody></table></div><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[df[<span class="string">'그룹'</span>].notnull(), [<span class="string">'이름'</span>, <span class="string">'소속사'</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>빅히트</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>YG</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>빅히트</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>RBW</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>빅히트</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>플레디스</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>큐브</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>빅히트</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>스타크루이엔티</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>SM</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>판타지오</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>플레디스</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>플레디스</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>빅히트</td>    </tr>  </tbody></table></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;결측값-확인-및-추출&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#결측값-확인-및-추출&quot;&gt;&lt;/a&gt; 결측값 확인 및 추출&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;li&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="데이터파악" scheme="https://hyemin-kim.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%8C%8C%EC%95%85/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (5) 범위선택</title>
    <link href="https://hyemin-kim.github.io/2020/05/24/S-Python-Pandas5/"/>
    <id>https://hyemin-kim.github.io/2020/05/24/S-Python-Pandas5/</id>
    <published>2020-05-24T12:58:03.000Z</published>
    <updated>2020-06-23T16:55:22.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="범위선택"><a class="markdownIt-Anchor" href="#범위선택"></a> 범위선택</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-%EB%8B%A8%EC%9D%BC-column%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95"><strong>1. 단일 column을 선택하는 방법</strong></a></li><li><a href="#2-index-column-%EB%B2%94%EC%9C%84-%EC%84%A0%ED%83%9D-range-selection"><strong>2. index &amp; column 범위 선택 (range selection)</strong></a><ul><li><a href="#2-1-%EB%8B%A8%EC%88%9C-index%EC%97%90-%EB%8C%80%ED%95%9C-%EB%B2%94%EC%9C%84-%EC%84%A0%ED%83%9D">2-1. 단순 index에 대한 범위 선택</a></li><li><a href="#2-2-index-column-%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-loc">2-2. index &amp; column 범위선택 – loc</a></li><li><a href="#2-3-index-column-%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-iloc-position%EC%9C%BC%EB%A1%9C-%EC%83%89%EC%9D%B8">2-3. index &amp; column 범위선택 – iloc (position으로 색인)</a></li></ul></li><li><a href="#3-index-column-%EC%A1%B0%EA%B1%B4%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-boolean-indexing"><strong>3. index &amp; column 조건범위선택 – Boolean Indexing</strong></a><ul><li><a href="#3-1-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%8C%EC%A1%B1%ED%95%9C-row%EB%93%A4%EC%9D%98-%EB%AA%A8%EB%93%A0-column%EC%9D%84-%EC%B6%94%EC%B6%9C">3-1. 조건에 만족한 row들의 모든 column을 추출</a></li><li><a href="#3-2-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%8C%EC%A1%B1%ED%95%9C-row%EB%93%A4%EC%9D%98-%ED%8A%B9%EC%A0%95-column%EB%93%A4%EC%9D%84-%EC%B6%94%EC%B6%9C">3-2. 조건에 만족한 row들의 특정 column들을 추출</a></li></ul></li><li><a href="#4-index-column-%EC%A1%B0%EA%B1%B4%EB%B2%94%EC%9C%84%EC%84%A0%ED%83%9D-inis%EC%9D%84-%ED%99%9C%EC%9A%A9%EB%9E%80-%EC%83%89%EC%9D%B8"><strong>4. index &amp; column 조건범위선택 – inis을 활용란 색인</strong></a></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><br>  <h2 id="1-단일-column을-선택하는-방법"><a class="markdownIt-Anchor" href="#1-단일-column을-선택하는-방법"></a> <strong>1. 단일 column을 선택하는 방법</strong></h2><blockquote><ul><li><em>df_name</em> [ '<em>col_name</em> ’ ]</li><li><em>df_name</em> [ "<em>col_name</em> " ]</li><li><em>df_name</em> .<em>col_name</em></li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">"이름"</span>]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.이름</span><br></pre></td></tr></tbody></table></figure><pre><code>0       지민1     지드래곤2     강다니엘3        뷔4       화사5       정국6       민현7       소연8        진9      하성운10      태연11     차은우12      백호13      JR14      슈가Name: 이름, dtype: object</code></pre><p><br><br></p><h2 id="2-index-column-범위-선택-range-selection"><a class="markdownIt-Anchor" href="#2-index-column-범위-선택-range-selection"></a> <strong>2. index &amp; column 범위 선택 (range selection)</strong></h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div> <br> <h3 id="2-1-단순-index에-대한-범위-선택"><a class="markdownIt-Anchor" href="#2-1-단순-index에-대한-범위-선택"></a> 2-1. 단순 index에 대한 범위 선택</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[:<span class="number">3</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head(<span class="number">3</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>  </tbody></table></div>  <br><h3 id="2-2-index-column-범위선택-loc"><a class="markdownIt-Anchor" href="#2-2-index-column-범위선택-loc"></a> 2-2. index &amp; column 범위선택 – loc</h3><blockquote><p><em>df_name</em> <strong>.loc</strong> [행(index) 범위, (열)column 범위]</p></blockquote><ul><li><p><strong>행 범위는</strong><br>“:”<br>“:b”<br>“a:b”<br>등 형식을 사용</p></li><li><p><strong>열 범위는</strong><br>'<em>column name</em> ’<br>['<em>column name1</em> ', '<em>column name2</em> ']<br>'<em>column name1</em> ’ : '<em>column name2</em> ’<br>등 형식을 사용</p></li></ul><blockquote><p><font color="red"> <strong>주의:</strong>  </font></p><ul><li><font color="red">pandas의 loc</font>에서 범위 a : b는 <font color="blue"><strong>index a &amp; index b 모두 포함</strong></font></li><li><font color="red">numpy</font>에서는 <font color="blue"><strong>index a 포함, index b 미포함</strong></font></li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, <span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>0       지민1     지드래곤2     강다니엘3        뷔4       화사5       정국6       민현7       소연8        진9      하성운10      태연11     차은우12      백호13      JR14      슈가Name: 이름, dtype: object</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[:, [<span class="string">'이름'</span>, <span class="string">'생년월일'</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>생년월일</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>1995-10-13</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>1988-08-18</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>1996-12-10</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>1995-12-30</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>1995-07-23</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>1997-09-01</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>1995-08-09</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>1998-08-26</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>1992-12-04</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>1994-03-22</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>1989-03-09</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>1997-03-30</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>1995-07-21</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>1995-06-08</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>1993-03-09</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[<span class="number">3</span>:<span class="number">8</span>, [<span class="string">'이름'</span>, <span class="string">'생년월일'</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>생년월일</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>뷔</td>      <td>1995-12-30</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>1995-07-23</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>1997-09-01</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>1995-08-09</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>1998-08-26</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>1992-12-04</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[<span class="number">2</span>:<span class="number">5</span>, <span class="string">'이름'</span>:<span class="string">'생년월일'</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>    </tr>  </thead>  <tbody>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>    </tr>  </tbody></table></div> <br> <h3 id="2-3-index-column-범위선택-iloc-position으로-색인"><a class="markdownIt-Anchor" href="#2-3-index-column-범위선택-iloc-position으로-색인"></a> 2-3. index &amp; column 범위선택 – iloc (position으로 색인)</h3><blockquote><p>행(index) 범위 선택은 loc와 동일</p><p>열(column) 범위는 'column 명’대신 column position을 사용</p></blockquote><ul><li><p><strong>행 범위는</strong><br>“:”<br>“:b”<br>“a:b”<br>등 형식을 사용</p></li><li><p><strong>열 범위는</strong><br>“c”<br>“[c, d]”<br>“c:d”<br>등 형식을 사용</p></li></ul><blockquote><p><font color="red"> <strong>주의:</strong>  </font></p><ul><li>pandas의 <font color="red">iloc</font>에서 범위 a : b는 <font color="blue"><strong>index a 포함, index b 미포함</strong></font> (<font color="red">numpy</font>와 동일)</li><li>pandas의 <font color="red">loc</font>에서 범위 a : b는 <font color="blue"><strong>index a &amp; index b 모두 포함</strong></font></li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[:, [<span class="number">0</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>빅히트</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>YG</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>커넥트</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>빅히트</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>RBW</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>빅히트</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>플레디스</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>큐브</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>빅히트</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>스타크루이엔티</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>SM</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>판타지오</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>플레디스</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>플레디스</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>빅히트</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>:<span class="number">5</span>, [<span class="number">0</span>, <span class="number">2</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>YG</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>커넥트</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>빅히트</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>RBW</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc[<span class="number">1</span>:<span class="number">5</span>, <span class="number">0</span>:<span class="number">4</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>    </tr>  </tbody></table></div><br><br>  <h2 id="3-index-column-조건범위선택-boolean-indexing"><a class="markdownIt-Anchor" href="#3-index-column-조건범위선택-boolean-indexing"></a> <strong>3. index &amp; column 조건범위선택 – Boolean Indexing</strong></h2><p>Boolean indexing은 Numpy에서의 Boolean indexing과 같은 원리다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head()</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>  </tbody></table></div><br>  <h3 id="3-1-조건에-만족한-row들의-모든-column을-추출"><a class="markdownIt-Anchor" href="#3-1-조건에-만족한-row들의-모든-column을-추출"></a> 3-1. 조건에 만족한 row들의 모든 column을 추출</h3><blockquote><p>df [<em>조건</em> ]</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'키'</span>] &gt; <span class="number">180</span></span><br></pre></td></tr></tbody></table></figure><pre><code>0     False1     False2     False3     False4     False5     False6      True7     False8     False9     False10    False11     True12    False13    False14    FalseName: 키, dtype: bool</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[df[<span class="string">'키'</span>] &gt; <span class="number">180</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>  </tbody></table></div>  <br><h3 id="3-2-조건에-만족한-row들의-특정-column들을-추출"><a class="markdownIt-Anchor" href="#3-2-조건에-만족한-row들의-특정-column들을-추출"></a> 3-2. 조건에 만족한 row들의 특정 column들을 추출</h3><blockquote><p><strong>방법 1.</strong> <em>df_name</em> [<em>조건</em> ] [<em>column범위</em> ]</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span> ] [<span class="string">'이름'</span>]</span><br></pre></td></tr></tbody></table></figure><pre><code>6      민현11    차은우Name: 이름, dtype: object</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df [ df[<span class="string">'키'</span>] &gt; <span class="number">180</span> ] [[<span class="string">'이름'</span>, <span class="string">'키'</span>]]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>키</th>    </tr>  </thead>  <tbody>    <tr>      <th>6</th>      <td>민현</td>      <td>182.3</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>183.0</td>    </tr>  </tbody></table></div><br>  <blockquote><p><strong>방법 2.</strong> loc를 활용: <em>df_name</em>.loc[ <em>조건</em> , <em>column범위</em>  ]       <font color="blue"> <em>【추천】</em> </font></p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, <span class="string">'이름'</span> ]</span><br></pre></td></tr></tbody></table></figure><pre><code>6      민현11    차은우Name: 이름, dtype: object</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, [<span class="string">'이름'</span>, <span class="string">'그룹'</span>] ]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>    </tr>  </thead>  <tbody>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'키'</span>] &gt; <span class="number">180</span>, <span class="string">'이름'</span> : <span class="string">'성별'</span>]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>    </tr>  </thead>  <tbody>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>    </tr>  </tbody></table></div><p><br> <br></p><h2 id="4-index-column-조건범위선택-inis을-활용란-색인"><a class="markdownIt-Anchor" href="#4-index-column-조건범위선택-inis을-활용란-색인"></a> <strong>4. index &amp; column 조건범위선택 – inis을 활용란 색인</strong></h2><p>column값이 미리 정의한 list에 속한다는 조건을 걸고자 할 때 사용한다</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_condition = [<span class="string">'플레디스'</span>, <span class="string">'SM'</span>]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'소속사'</span>].isin(my_condition)</span><br></pre></td></tr></tbody></table></figure><pre><code>0     False1     False2     False3     False4     False5     False6      True7     False8     False9     False10     True11    False12     True13     True14    FalseName: 소속사, dtype: bool</code></pre><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'소속사'</span>].isin(my_condition) ]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.loc[ df[<span class="string">'소속사'</span>].isin(my_condition) , [<span class="string">'이름'</span>, <span class="string">'소속사'</span>] ]</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>소속사</th>    </tr>  </thead>  <tbody>    <tr>      <th>6</th>      <td>민현</td>      <td>플레디스</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>SM</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>플레디스</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>플레디스</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      index &amp; column의 범위선택과 조건범위선택
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="데이터파악" scheme="https://hyemin-kim.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%8C%8C%EC%95%85/"/>
    
  </entry>
  
  <entry>
    <title>Python &gt;&gt; Pandas 데이터 파악 - (4) 정렬</title>
    <link href="https://hyemin-kim.github.io/2020/05/24/S-Python-Pandas4/"/>
    <id>https://hyemin-kim.github.io/2020/05/24/S-Python-Pandas4/</id>
    <published>2020-05-24T08:07:08.000Z</published>
    <updated>2020-06-23T16:54:53.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="정렬-sort"><a class="markdownIt-Anchor" href="#정렬-sort"></a> 정렬 (sort)</h1><p></p><ul class="markdownIt-TOC"><li><a href="#1-index-%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC"><strong>1. index 순으로 정렬</strong></a></li><li><a href="#2-column%EC%9D%98-value%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC"><strong>2. column의 value순으로 정렬</strong></a><ul><li><a href="#2-1-%EB%8B%A8%EC%9D%BC-column-%EA%B8%B0%EC%A4%80">2-1. 단일 column 기준</a></li><li><a href="#2-2-%EB%B3%B5%EC%88%98-column-%EA%B8%B0%EC%A4%80">2-2. 복수 column 기준</a></li></ul></li></ul><p></p><br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'korean-idol.csv'</span>)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>이름</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div>  <br>  <br><h2 id="1-index-순으로-정렬"><a class="markdownIt-Anchor" href="#1-index-순으로-정렬"></a> <strong>1. index 순으로 정렬</strong></h2><blockquote><p>오름차순 정렬: <em>df_name</em>.sort_index()   <font color="blue"><em>(default)</em></font><br>내림차순 정렬: <em>df_name</em>.sort_index(ascending = False)</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_index()  <span class="comment"># 오름차순</span></span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>  </tbody></table></div><br>  <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_index(ascending = <span class="literal">False</span>)  <span class="comment"># 내림차순</span></span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>  </tbody></table></div>  <br> <br> <h2 id="2-column의-value순으로-정렬"><a class="markdownIt-Anchor" href="#2-column의-value순으로-정렬"></a> <strong>2. column의 value순으로 정렬</strong></h2><blockquote><p>오름차순 정렬: <em>df_name</em>.sort_values(by = ‘<em>col_name</em>’)<br>내림차순 정렬: <em>df_name</em>.sort_values(by = ‘<em>col_name</em>’, ascending = False)</p></blockquote><h3 id="2-1-단일-column-기준"><a class="markdownIt-Anchor" href="#2-1-단일-column-기준"></a> 2-1. 단일 column 기준</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_values(by=<span class="string">'키'</span>)  <span class="comment"># 오름차순</span></span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>  </tbody></table></div>  <br><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_values(by = <span class="string">'키'</span>, ascending = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>  </tbody></table></div><br>  <h3 id="2-2-복수-column-기준"><a class="markdownIt-Anchor" href="#2-2-복수-column-기준"></a> 2-2. 복수 column 기준</h3><blockquote><p>먼저 column1 기준으로 정렬하고, column1 값이 동일한 row들은 column2기준으로 정렬:</p><ul><li><em>df_name</em> .sort_value ( by = [ ‘<em>col_name 1</em>’ , ‘<em>col_name 2</em>’ ] )</li></ul></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_values(by = [<span class="string">'키'</span>, <span class="string">'브랜드평판지수'</span>])</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>  </tbody></table></div><br>  <figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort_values(by = [<span class="string">'키'</span>, <span class="string">'브랜드평판지수'</span>], ascending = <span class="literal">False</span>)</span><br></pre></td></tr></tbody></table></figure><div><style scoped="">    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre></style><table>  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>그룹</th>      <th>소속사</th>      <th>성별</th>      <th>생년월일</th>      <th>키</th>      <th>혈액형</th>      <th>브랜드평판지수</th>    </tr>  </thead>  <tbody>    <tr>      <th>11</th>      <td>차은우</td>      <td>아스트로</td>      <td>판타지오</td>      <td>남자</td>      <td>1997-03-30</td>      <td>183.0</td>      <td>B</td>      <td>3506027</td>    </tr>    <tr>      <th>6</th>      <td>민현</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-08-09</td>      <td>182.3</td>      <td>O</td>      <td>4989792</td>    </tr>    <tr>      <th>2</th>      <td>강다니엘</td>      <td>NaN</td>      <td>커넥트</td>      <td>남자</td>      <td>1996-12-10</td>      <td>180.0</td>      <td>A</td>      <td>8273745</td>    </tr>    <tr>      <th>8</th>      <td>진</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1992-12-04</td>      <td>179.2</td>      <td>O</td>      <td>4570308</td>    </tr>    <tr>      <th>3</th>      <td>뷔</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-12-30</td>      <td>178.0</td>      <td>AB</td>      <td>8073501</td>    </tr>    <tr>      <th>5</th>      <td>정국</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1997-09-01</td>      <td>178.0</td>      <td>A</td>      <td>5208335</td>    </tr>    <tr>      <th>1</th>      <td>지드래곤</td>      <td>빅뱅</td>      <td>YG</td>      <td>남자</td>      <td>1988-08-18</td>      <td>177.0</td>      <td>A</td>      <td>9916947</td>    </tr>    <tr>      <th>13</th>      <td>JR</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-06-08</td>      <td>176.0</td>      <td>O</td>      <td>3274137</td>    </tr>    <tr>      <th>12</th>      <td>백호</td>      <td>뉴이스트</td>      <td>플레디스</td>      <td>남자</td>      <td>1995-07-21</td>      <td>175.0</td>      <td>AB</td>      <td>3301654</td>    </tr>    <tr>      <th>14</th>      <td>슈가</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1993-03-09</td>      <td>174.0</td>      <td>O</td>      <td>2925442</td>    </tr>    <tr>      <th>0</th>      <td>지민</td>      <td>방탄소년단</td>      <td>빅히트</td>      <td>남자</td>      <td>1995-10-13</td>      <td>173.6</td>      <td>A</td>      <td>10523260</td>    </tr>    <tr>      <th>9</th>      <td>하성운</td>      <td>핫샷</td>      <td>스타크루이엔티</td>      <td>남자</td>      <td>1994-03-22</td>      <td>167.1</td>      <td>A</td>      <td>4036489</td>    </tr>    <tr>      <th>4</th>      <td>화사</td>      <td>마마무</td>      <td>RBW</td>      <td>여자</td>      <td>1995-07-23</td>      <td>162.1</td>      <td>A</td>      <td>7650928</td>    </tr>    <tr>      <th>7</th>      <td>소연</td>      <td>아이들</td>      <td>큐브</td>      <td>여자</td>      <td>1998-08-26</td>      <td>NaN</td>      <td>B</td>      <td>4668615</td>    </tr>    <tr>      <th>10</th>      <td>태연</td>      <td>소녀시대</td>      <td>SM</td>      <td>여자</td>      <td>1989-03-09</td>      <td>NaN</td>      <td>A</td>      <td>3918661</td>    </tr>  </tbody></table></div><br><br><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;정렬-sort&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#정렬-sort&quot;&gt;&lt;/a&gt; 정렬 (sort)&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;markdownIt-TOC&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#1-index-%
      
    
    </summary>
    
    
      <category term="【Study】" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/"/>
    
      <category term="Python" scheme="https://hyemin-kim.github.io/categories/%E3%80%90Study%E3%80%91/Python/"/>
    
    
      <category term="Python" scheme="https://hyemin-kim.github.io/tags/Python/"/>
    
      <category term="Pandas" scheme="https://hyemin-kim.github.io/tags/Pandas/"/>
    
      <category term="데이터파악" scheme="https://hyemin-kim.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%8C%8C%EC%95%85/"/>
    
  </entry>
  
</feed>
